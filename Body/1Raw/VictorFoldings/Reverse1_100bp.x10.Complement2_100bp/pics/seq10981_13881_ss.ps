%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[102.83004761 436.05187988]
[105.81119537 421.27996826]
[112.11917114 407.59396362]
[121.41379547 395.73199463]
[133.19381714 386.33370972]
[146.82397461 379.90597534]
[143.71986389 365.23065186]
[140.61575317 350.55535889]
[137.51164246 335.88006592]
[134.08058167 321.27774048]
[130.32427979 306.75567627]
[126.56797791 292.23361206]
[124.22380829 290.69641113]
[122.34730530 288.13803101]
[121.33046722 284.73193359]
[121.49531555 280.79019165]
[123.04788208 276.73513794]
[120.16261292 262.01522827]
[117.27733612 247.29534912]
[114.39206696 232.57545471]
[111.50679016 217.85556030]
[107.13539124 211.89631653]
[108.68985748 202.89512634]
[106.02406311 188.13391113]
[103.35826874 173.37269592]
[100.69246674 158.61148071]
[96.41027832 152.58779907]
[98.09858704 143.61074829]
[95.65285492 128.81147766]
[84.92868042 139.29919434]
[70.02462769 137.60536194]
[61.92740250 124.97859955]
[66.60597992 110.72689819]
[80.61148834 105.35608673]
[93.61865234 112.82395172]
[85.73317719 101.27791595]
[91.44116211 88.51428223]
[90.10292816 73.57409668]
[88.76469421 58.63391113]
[87.42646027 43.69372559]
[79.69293213 56.54645157]
[66.61728668 63.89678955]
[51.61746979 63.82338333]
[38.61439133 56.34542084]
[31.00702667 43.41761780]
[30.78392601 28.41927910]
[38.00340652 15.27092838]
[50.77830887 7.40951490]
[65.76931000 6.88999367]
[79.05779266 13.84816647]
[87.16991425 26.46433830]
[88.06272888 11.49093246]
[88.95554352 -3.48247290]
[89.84835815 -18.45587921]
[90.74118042 -33.42928314]
[91.29938507 -48.41889572]
[91.52271271 -63.41723251]
[91.74604034 -78.41556549]
[88.74475098 -87.04285431]
[92.08600616 -93.63510895]
[92.53261566 -108.62845612]
[92.97921753 -123.62180328]
[79.85997772 -127.78482056]
[68.27892303 -135.19921875]
[59.02409744 -145.35261536]
[52.72322083 -157.54655457]
[49.80110931 -170.94448853]
[50.45103836 -184.62918091]
[54.62197876 -197.66555786]
[62.02253342 -209.16455078]
[72.14127350 -218.34373474]
[84.28211212 -224.58056641]
[97.61214447 -227.45460510]
[98.50495911 -242.42800903]
[99.39777374 -257.40142822]
[91.43582153 -267.54882812]
[92.48770905 -280.00183105]
[101.44605255 -288.13046265]
[102.56170654 -303.08892822]
[103.67735291 -318.04736328]
[104.79299927 -333.00582886]
[105.90865326 -347.96426392]
[107.02429962 -362.92272949]
[93.27306366 -367.53094482]
[81.03559875 -375.29638672]
[71.02323151 -385.76235962]
[63.81664276 -398.31524658]
[59.83222961 -412.22064209]
[59.29801941 -426.66632080]
[62.24063873 -440.80950928]
[68.48401642 -453.82626343]
[77.65992737 -464.95935059]
[89.22967529 -473.56231689]
[102.51576233 -479.13699341]
[116.74151611 -481.36248779]
[118.07975006 -496.30267334]
[119.41798401 -511.24285889]
[120.75621796 -526.18304443]
[106.69499969 -531.70202637]
[94.75908661 -540.96002197]
[85.91605377 -553.20654297]
[80.88277435 -567.44885254]
[80.06727600 -582.53228760]
[83.53565979 -597.23425293]
[91.00676727 -610.36279297]
[101.87493896 -620.85375977]
[115.25915527 -627.85656738]
[130.07440186 -630.80358887]
[145.11968994 -629.45593262]
[159.17533875 -623.92285156]
[171.10195923 -614.65289307]
[179.93267822 -602.39746094]
[184.95164490 -588.15014648]
[185.75199890 -573.06585693]
[182.26884460 -558.36737061]
[174.78454590 -545.24633789]
[163.90583801 -534.76635742]
[150.51460266 -527.77697754]
[135.69639587 -524.84478760]
[134.35816956 -509.90463257]
[133.01992798 -494.96444702]
[131.68170166 -480.02426147]
[146.31486511 -474.79064941]
[159.10757446 -465.94683838]
[169.18739319 -454.08892822]
[175.86514282 -440.01885986]
[178.68188477 -424.69003296]
[177.44062805 -409.14291382]
[172.21994019 -394.43420410]
[163.36911011 -381.56515503]
[151.48469543 -371.41339111]
[137.37043762 -364.67297363]
[121.98274994 -361.80706787]
[120.86710358 -346.84863281]
[119.75145721 -331.89016724]
[118.63580322 -316.93173218]
[117.52015686 -301.97326660]
[116.40451050 -287.01480103]
[124.86511230 -271.63998413]
[114.37117767 -256.50860596]
[113.47836304 -241.53518677]
[112.58554840 -226.56178284]
[127.86021423 -220.86067200]
[140.64332581 -210.71087646]
[149.67889404 -197.09494019]
[154.07464600 -181.33671570]
[153.39002991 -164.97253418]
[147.68045044 -149.60157776]
[137.49290466 -136.72946167]
[123.81361389 -127.62086487]
[107.97257233 -123.17520142]
[107.52596283 -108.18185425]
[107.07936096 -93.18849945]
[106.74438477 -78.19223785]
[106.52105713 -63.19390488]
[106.29772949 -48.19556808]
[108.47797394 -45.42449570]
[109.42435455 -41.45972061]
[108.59043121 -36.89268112]
[105.71458435 -32.53646851]
[104.82176971 -17.56306267]
[103.92895508 -2.58965707]
[103.03613281 12.38374901]
[102.14331818 27.35715485]
[102.36664581 42.35549164]
[103.70487976 57.29567719]
[105.04311371 72.23586273]
[106.38134766 87.17604828]
[114.26682281 98.72208405]
[108.55883789 111.48571777]
[110.45212555 126.36575317]
[112.89785767 141.16502380]
[115.45368958 155.94567871]
[118.11948395 170.70689392]
[120.78527832 185.46810913]
[123.45107269 200.22932434]
[126.22668457 214.97029114]
[129.11195374 229.69018555]
[131.99722290 244.41007996]
[134.88250732 259.12997437]
[137.76777649 273.84985352]
[141.09004211 288.47732544]
[144.84632874 302.99938965]
[148.60263062 317.52142334]
[152.26271057 321.24313354]
[153.95953369 325.56448364]
[153.79345703 329.63723755]
[152.18693542 332.77593994]
[155.29104614 347.45126343]
[158.39515686 362.12655640]
[161.49926758 376.80184937]
[176.56474304 377.15991211]
[191.14140320 380.98324585]
[204.44313049 388.06567383]
[215.75259399 398.02523804]
[224.45988464 410.32479858]
[230.09544373 424.30111694]
[232.35531616 439.20043945]
[231.11767578 454.21926880]
[226.44923401 468.54763794]
[218.60176086 481.41287231]
[207.99845886 492.12112427]
[195.21116638 500.09494019]
[180.92947388 504.90429688]
[165.92356873 506.28982544]
[151.00271606 504.17681885]
[136.97157288 498.67922974]
[124.58681488 490.09350586]
[114.51633453 478.88269043]
[107.30323792 465.65136719]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 191]
[7 190]
[8 189]
[9 188]
[10 184]
[11 183]
[12 182]
[17 181]
[18 180]
[19 179]
[20 178]
[21 177]
[23 176]
[24 175]
[25 174]
[26 173]
[28 172]
[29 171]
[35 170]
[37 168]
[38 167]
[39 166]
[40 165]
[51 164]
[52 163]
[53 162]
[54 161]
[55 160]
[56 156]
[57 155]
[58 154]
[60 153]
[61 152]
[62 151]
[73 142]
[74 141]
[75 140]
[78 138]
[79 137]
[80 136]
[81 135]
[82 134]
[83 133]
[95 122]
[96 121]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
