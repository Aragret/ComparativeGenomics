%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAUGCGGGAGAGUCGGCUACUUGUCAACCUUAUCCAACAAUCGCCAUUGAUUCUAAUCAUACCAUUAAUCCUUCUACUCAUCUAUAAACUUCUUGACxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[114.22309113 573.30273438]
[114.22225189 558.25628662]
[117.06925964 543.48156738]
[122.66118622 529.51281738]
[130.79589844 516.85491943]
[141.17933655 505.96542358]
[153.43612671 497.23800659]
[167.12319946 490.98818970]
[163.58352661 476.41180420]
[160.04385376 461.83541870]
[156.50418091 447.25906372]
[145.70594788 443.57611084]
[137.94613647 435.04962158]
[135.23811340 423.71997070]
[138.36714172 412.37493896]
[146.66740417 403.86364746]
[143.56329346 389.18832397]
[140.45918274 374.51303101]
[135.99954224 368.61953735]
[137.41983032 359.59619141]
[134.53454590 344.87631226]
[124.49362946 333.87496948]
[129.43196106 318.84423828]
[126.54668427 304.12432861]
[116.68587494 297.11782837]
[114.16163635 284.87805176]
[120.86135101 273.85641479]
[118.19555664 259.09521484]
[115.52976227 244.33398438]
[102.15660858 242.73573303]
[89.75945282 237.42919922]
[79.34565735 228.83529663]
[71.76431274 217.64245605]
[67.63702393 204.75149536]
[67.30693817 191.20314026]
[70.81024933 178.09399414]
[77.87248230 166.48779297]
[87.93000031 157.32904053]
[100.17493439 151.36621094]
[97.94982147 136.53216553]
[95.72470093 121.69812775]
[93.49958801 106.86408234]
[90.09673309 102.87227631]
[89.17264557 97.25806427]
[91.43589783 91.55590820]
[89.65343475 76.66218567]
[87.87096405 61.76847076]
[86.08850098 46.87475204]
[76.76613617 34.09179306]
[82.93621826 20.53526878]
[79.28575134 15.02295113]
[79.00869751 9.34666157]
[81.32922363 5.17243290]
[79.99098969 -9.76775169]
[69.05120087 -24.57999229]
[77.05027771 -40.19990158]
[75.48976135 -55.11850739]
[73.92923737 -70.03710938]
[72.36871338 -84.95571899]
[70.14359283 -99.78975677]
[67.25832367 -114.50965118]
[57.01102448 -126.56383514]
[62.15572739 -140.54171753]
[59.27045441 -155.26161194]
[56.38518524 -169.98150635]
[53.49991226 -184.70140076]
[50.61463928 -199.42129517]
[47.72936630 -214.14117432]
[44.84409332 -228.86106873]
[41.95882034 -243.58096313]
[29.53740120 -257.17471313]
[35.86806488 -273.54205322]
[32.76395416 -288.21734619]
[29.65984344 -302.89263916]
[14.69128609 -301.64944458]
[-0.31505096 -302.29214478]
[-15.12249756 -304.81063843]
[-29.49751854 -309.16519165]
[-43.21339798 -315.28707886]
[-56.05382156 -323.07983398]
[-67.81626892 -332.42050171]
[-78.31523895 -343.16177368]
[-87.38513947 -355.13424683]
[-94.88292694 -368.14910889]
[-100.69035339 -382.00106812]
[-104.71582794 -396.47167969]
[-106.89585876 -411.33273315]
[-107.19606781 -426.34982300]
[-105.61170959 -441.28613281]
[-102.16779327 -455.90606689]
[-96.91861725 -469.97906494]
[-89.94696808 -483.28317261]
[-81.36280823 -495.60858154]
[-71.30151367 -506.76086426]
[-59.92177200 -516.56414795]
[-47.40305710 -524.86389160]
[-33.94280624 -531.52905273]
[-19.75330353 -536.45465088]
[-5.05834103 -539.56292725]
[9.91032028 -540.80487061]
[24.91660309 -540.16088867]
[39.72383881 -537.64117432]
[54.09849167 -533.28540039]
[67.81385803 -527.16235352]
[80.65362549 -519.36853027]
[92.41528320 -510.02685547]
[102.91334534 -499.28469849]
[111.98223877 -487.31146240]
[119.47893524 -474.29595947]
[125.28519440 -460.44351196]
[129.30944824 -445.97256470]
[131.48823547 -431.11132812]
[131.78717041 -416.09420776]
[130.20156860 -401.15805054]
[126.75641632 -386.53839111]
[121.50605011 -372.46582031]
[114.53328705 -359.16229248]
[105.94808960 -346.83764648]
[95.88585663 -335.68618774]
[84.50528717 -325.88385010]
[71.98587799 -317.58520508]
[58.52506256 -310.92114258]
[44.33514404 -305.99676514]
[47.43925476 -291.32144165]
[50.54336548 -276.64614868]
[60.50739670 -269.78723145]
[63.21358490 -257.58639526]
[56.67871094 -246.46623230]
[59.56398392 -231.74633789]
[62.44925690 -217.02645874]
[65.33452606 -202.30656433]
[68.21980286 -187.58666992]
[71.10507202 -172.86677551]
[73.99034882 -158.14688110]
[76.87561798 -143.42700195]
[86.91654205 -132.42567444]
[81.97821045 -117.39492035]
[84.86348724 -102.67503357]
[94.10887146 -114.48700714]
[108.98136139 -116.43866730]
[120.96132660 -107.41201019]
[123.18608856 -92.57791138]
[114.38120270 -80.43402100]
[99.59051514 -77.93691254]
[87.28731537 -86.51623535]
[88.84783936 -71.59763336]
[90.40836334 -56.67902756]
[91.96888733 -41.76042557]
[101.16528320 -33.90212631]
[102.58747864 -21.48596191]
[94.93117523 -11.10598660]
[96.26940918 3.83419871]
[97.82993317 18.75280380]
[107.02480316 30.47046471]
[100.98221588 45.09228897]
[102.76468658 59.98600388]
[104.54714966 74.87972260]
[106.32961273 89.77343750]
[108.33362579 104.63896942]
[110.55874634 119.47301483]
[112.78386688 134.30705261]
[115.00897980 149.14109802]
[131.35618591 152.24133301]
[145.63204956 160.73773193]
[156.12014771 173.58827209]
[161.56646729 189.22871399]
[161.32937622 205.76289368]
[155.45507812 221.19274902]
[144.67001343 233.65959167]
[130.29098511 241.66818237]
[132.95677185 256.42941284]
[135.62257385 271.19061279]
[147.84022522 284.96780396]
[141.26657104 301.23907471]
[144.15184021 315.95895386]
[154.39913940 328.01315308]
[149.25444031 341.99102783]
[152.13970947 356.71090698]
[155.13449097 371.40893555]
[158.23860168 386.08422852]
[161.34271240 400.75952148]
[177.60380554 410.48016357]
[181.52854919 428.68756104]
[171.08056641 443.71939087]
[174.62023926 458.29574585]
[178.15991211 472.87213135]
[181.69958496 487.44851685]
[196.72865295 486.72500610]
[211.62301636 488.85913086]
[225.84425354 493.77371216]
[238.87825012 501.29110718]
[250.25387573 511.13955688]
[259.55987549 522.96301270]
[266.45986938 536.33416748]
[270.70440674 550.76953125]
[272.14004517 565.74737549]
[270.71490479 580.72619629]
[266.48049927 595.16455078]
[259.58990479 608.54052734]
[250.29219055 620.37054443]
[238.92347717 630.22692871]
[225.89474487 637.75347900]
[211.67697144 642.67803955]
[196.78410339 644.82257080]
[181.75453186 644.10961914]
[167.13154602 640.56494141]
[153.44377136 634.31665039]
[141.18600464 625.59057617]
[130.80136108 614.70227051]
[122.66523743 602.04528809]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 187]
[9 186]
[10 185]
[11 184]
[16 181]
[17 180]
[18 179]
[20 178]
[21 177]
[23 175]
[24 174]
[27 172]
[28 171]
[29 170]
[39 162]
[40 161]
[41 160]
[42 159]
[45 158]
[46 157]
[47 156]
[48 155]
[50 153]
[53 152]
[54 151]
[56 148]
[57 147]
[58 146]
[59 145]
[60 138]
[61 137]
[63 135]
[64 134]
[65 133]
[66 132]
[67 131]
[68 130]
[69 129]
[70 128]
[72 125]
[73 124]
[74 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
