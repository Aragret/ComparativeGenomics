%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[76.03029633 716.19787598]
[63.82313156 707.41400146]
[53.32685089 696.64373779]
[44.86043549 684.21429443]
[38.68116379 670.50341797]
[34.97681808 655.92779541]
[33.85997009 640.93035889]
[35.36455917 625.96679688]
[39.44486618 611.49194336]
[45.97688675 597.94555664]
[54.76212692 585.73937988]
[65.53361511 575.24432373]
[77.96401215 566.77929688]
[91.67557526 560.60162354]
[106.25162506 556.89892578]
[105.13597107 541.94049072]
[104.02032471 526.98199463]
[102.90467834 512.02355957]
[101.67770386 497.07382202]
[100.33946228 482.13363647]
[99.00122833 467.19345093]
[97.66299438 452.25326538]
[96.10247803 437.33465576]
[94.32000732 422.44094849]
[92.53754425 407.54724121]
[90.75507355 392.65350342]
[83.40765381 405.73080444]
[70.55664825 413.46719360]
[55.56129456 413.84042358]
[42.34133148 406.75289917]
[34.35243225 394.05734253]
[33.68287659 379.07229614]
[40.50767899 365.71481323]
[53.04285431 357.47653198]
[68.01174164 356.51089478]
[81.50150299 363.07034302]
[89.98565674 375.43939209]
[90.43226624 360.44604492]
[90.87886810 345.45269775]
[91.32547760 330.45935059]
[91.77207947 315.46600342]
[92.21868896 300.47265625]
[92.66529083 285.47930908]
[85.31036377 272.52731323]
[93.45511627 258.96362305]
[93.90171814 243.97026062]
[94.34832764 228.97691345]
[94.79493713 213.98356628]
[95.24153900 198.99021912]
[95.68814850 183.99687195]
[95.57647705 168.99728394]
[94.90669250 154.01223755]
[86.60881042 141.64315796]
[93.72218323 127.51126099]
[93.05239868 112.52622223]
[85.69034576 100.63959503]
[91.96256256 88.14356232]
[81.69508362 72.85761261]
[90.38365936 57.61045837]
[89.49083710 42.63705444]
[88.59802246 27.66364861]
[85.28213501 21.94382286]
[85.34342194 16.26110649]
[87.90829468 12.23239994]
[87.46168518 -2.76095033]
[87.01508331 -17.75430107]
[86.56847382 -32.74765015]
[86.12187195 -47.74100113]
[85.67526245 -62.73435211]
[75.45322418 -51.75664902]
[60.58230209 -49.79309082]
[47.86127472 -57.74139404]
[43.10602951 -71.96769714]
[48.49060059 -85.96791840]
[61.55323029 -93.34136200]
[76.32186890 -90.71697998]
[86.04513550 -79.29286194]
[87.16078949 -94.25131989]
[88.27643585 -109.20977020]
[85.75444031 -115.32132721]
[86.57440186 -120.94490814]
[89.65451813 -124.59483337]
[91.21504211 -139.51342773]
[92.77556610 -154.43203735]
[94.33609009 -169.35064697]
[92.11644745 -178.21128845]
[96.03251648 -184.47915649]
[97.81497955 -199.37287903]
[98.14995575 -214.36914062]
[97.03430939 -229.32759094]
[95.91866302 -244.28604126]
[94.69168091 -259.23577881]
[93.35344696 -274.17596436]
[92.01521301 -289.11614990]
[77.35892487 -292.98513794]
[64.91156006 -301.63607788]
[56.17620087 -314.02435303]
[52.20767975 -328.65399170]
[53.48521423 -343.75842285]
[59.85454178 -357.51370239]
[70.54653168 -368.25878906]
[84.27007294 -374.69619751]
[99.36798859 -376.04855347]
[114.01712036 -372.15258789]
[126.44852448 -363.47869873]
[135.16104126 -351.07437134]
[139.10260010 -336.43740845]
[137.79722595 -321.33535767]
[131.40255737 -307.59185791]
[120.69078064 -296.86648560]
[106.95539856 -290.45437622]
[108.29363251 -275.51419067]
[109.63186646 -260.57400513]
[113.35958099 -254.19232178]
[110.87711334 -245.40168762]
[111.99275970 -230.44323730]
[113.10841370 -215.48478699]
[119.98842621 -228.81390381]
[131.64396667 -238.25575256]
[146.11085510 -242.21920776]
[160.95118713 -240.03636169]
[173.66407776 -232.07507324]
[182.10720825 -219.67694092]
[184.85774231 -204.93127441]
[181.45219421 -190.32298279]
[172.46441650 -178.31382751]
[159.40904236 -170.92753601]
[144.48612976 -169.40884399]
[130.21043396 -174.01368713]
[118.98767090 -183.96604919]
[112.70870209 -197.59040833]
[110.92623138 -182.69670105]
[109.25469208 -167.79011536]
[107.69416809 -152.87152100]
[106.13364410 -137.95291138]
[104.57312012 -123.03430939]
[103.23488617 -108.09412384]
[102.11923981 -93.13566589]
[101.00359344 -78.17721558]
[100.66861725 -63.18095779]
[101.11521912 -48.18760681]
[101.56182861 -33.19425583]
[102.00843048 -18.20090675]
[102.45503998 -3.20755625]
[102.90164185 11.78579330]
[103.57142639 26.77083206]
[104.46424866 41.74423981]
[105.35706329 56.71764374]
[114.19339752 64.97874451]
[115.05975342 77.44602966]
[106.94760132 87.47377777]
[114.30965424 99.36040497]
[108.03743744 111.85643768]
[108.70722198 126.84147644]
[117.05300903 140.28239441]
[109.89173126 153.34245300]
[110.56151581 168.32749939]
[122.45597076 159.18846130]
[137.05314636 162.64135742]
[143.59254456 176.14085388]
[137.25357056 189.73561096]
[122.70907593 193.40408325]
[110.68149567 184.44346619]
[110.23488617 199.43682861]
[109.78828430 214.43017578]
[109.34167480 229.42352295]
[108.89507294 244.41687012]
[108.44846344 259.41021729]
[115.77145386 273.43463135]
[107.65864563 285.92590332]
[107.21203613 300.91925049]
[106.76543427 315.91259766]
[106.31882477 330.90594482]
[105.87222290 345.89929199]
[105.42561340 360.89266968]
[104.97901154 375.88601685]
[105.64879608 390.87103271]
[107.43125916 405.76477051]
[109.21372223 420.65847778]
[110.99619293 435.55218506]
[114.64665222 441.06451416]
[114.92371368 446.74081421]
[112.60317993 450.91503906]
[113.94141388 465.85522461]
[115.27964783 480.79541016]
[116.61788177 495.73559570]
[120.50043488 504.00381470]
[117.86312866 510.90789795]
[118.97877502 525.86633301]
[120.09442902 540.82482910]
[121.21007538 555.78326416]
[136.17411804 557.28277588]
[150.65039062 561.35815430]
[164.19897461 567.88555908]
[176.40812683 576.66662598]
[186.90684509 587.43457031]
[195.37608337 599.86206055]
[201.55847168 613.57153320]
[205.26611328 628.14630127]
[206.38636780 643.14355469]
[204.88517761 658.10742188]
[200.80815125 672.58319092]
[194.27920532 686.13104248]
[185.49673462 698.33923340]
[174.72763062 708.83673096]
[162.29914856 717.30456543]
[148.58898926 723.48535156]
[134.01377869 727.19134521]
[119.01644897 728.30993652]
[104.05274200 726.80700684]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 191]
[16 190]
[17 189]
[18 188]
[19 186]
[20 185]
[21 184]
[22 183]
[23 180]
[24 179]
[25 178]
[26 177]
[37 176]
[38 175]
[39 174]
[40 173]
[41 172]
[42 171]
[43 170]
[45 168]
[46 167]
[47 166]
[48 165]
[49 164]
[50 163]
[51 157]
[52 156]
[54 154]
[55 153]
[57 151]
[59 148]
[60 147]
[61 146]
[64 145]
[65 144]
[66 143]
[67 142]
[68 141]
[69 140]
[77 139]
[78 138]
[79 137]
[82 136]
[83 135]
[84 134]
[85 133]
[87 132]
[88 131]
[89 117]
[90 116]
[91 115]
[92 113]
[93 112]
[94 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
