%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[26.77044296 570.15362549]
[21.92926216 584.36981201]
[15.44063187 597.91357422]
[7.39564562 610.59484863]
[-2.09275842 622.23559570]
[-12.89137745 632.67236328]
[-24.84861755 641.75866699]
[-37.79661560 649.36694336]
[-51.55360031 655.39031982]
[-65.92645264 659.74438477]
[-80.71339417 662.36785889]
[-95.70683289 663.22406006]
[-110.69629669 662.30084229]
[-125.47135162 659.61120605]
[-139.82458496 655.19293213]
[-153.55448914 649.10797119]
[-166.46832275 641.44189453]
[-178.38479614 632.30218506]
[-189.13661194 621.81719971]
[-198.57284546 610.13415527]
[-206.56101990 597.41705322]
[-212.98899841 583.84436035]
[-217.76654053 569.60668945]
[-220.82656860 554.90386963]
[-222.12612915 539.94232178]
[-221.64698792 524.93212891]
[-219.39585876 510.08392334]
[-215.40435791 495.60620117]
[-209.72850037 481.70220947]
[-202.44798279 468.56713867]
[-193.66499329 456.38534546]
[-183.50285339 445.32791138]
[-172.10421753 435.54998779]
[-159.62910461 427.18890381]
[-146.25263977 420.36203003]
[-132.16259766 415.16516113]
[-117.55680847 411.67129517]
[-102.64029694 409.92944336]
[-87.62246704 409.96411133]
[-72.71414948 411.77474976]
[-58.12463760 415.33599854]
[-44.05873871 420.59780884]
[-37.17932510 407.26840210]
[-30.29991341 393.93896484]
[-23.42049980 380.60952759]
[-16.54108810 367.28009033]
[-9.66167450 353.95068359]
[-10.70018482 339.09231567]
[2.50454068 330.37762451]
[9.28453255 316.99734497]
[15.96472645 303.56698608]
[22.64492226 290.13659668]
[29.32511520 276.70623779]
[35.80461121 263.17788696]
[42.08197403 249.55456543]
[48.35933304 235.93124390]
[54.63669205 222.30792236]
[60.91405487 208.68461609]
[66.16077423 194.63214111]
[70.34778595 180.22836304]
[74.42745209 165.79380798]
[78.39954376 151.32928467]
[82.37164307 136.86476135]
[86.34374237 122.40023804]
[90.20804596 107.90653992]
[93.63910675 93.30422211]
[96.74321747 78.62892151]
[92.02922058 63.52630997]
[102.23282623 52.67570114]
[105.33693695 38.00039673]
[108.44104004 23.32509613]
[100.08621216 10.17843723]
[103.44328308 -4.66018677]
[116.02809906 -12.54421997]
[119.13220978 -27.21952248]
[122.23632050 -41.89482498]
[125.34043121 -56.57012558]
[114.40818024 -72.04269409]
[118.19217682 -90.27986145]
[133.83201599 -99.79359436]
[136.49780273 -114.55480957]
[131.33624268 -129.51037598]
[141.21224976 -140.65997314]
[136.05068970 -155.61552429]
[145.92671204 -166.76512146]
[148.59249878 -181.52635193]
[135.86094666 -192.07618713]
[130.21926880 -207.51856995]
[133.11837769 -223.60621643]
[143.67376709 -235.96498108]
[158.93249512 -241.28323364]
[161.37823486 -256.08248901]
[163.82395935 -270.88177490]
[149.61506653 -275.80267334]
[136.44227600 -283.05426025]
[124.68458557 -292.42788696]
[114.68030548 -303.65386963]
[106.71726227 -316.40917969]
[101.02458191 -330.32684326]
[97.76605225 -345.00640869]
[97.03541565 -360.02554321]
[98.85370636 -374.95208740]
[103.16860199 -389.35659790]
[109.85595703 -402.82461548]
[118.72335815 -414.96862793]
[129.51568604 -425.43923950]
[141.92240906 -433.93518066]
[155.58656311 -440.21203613]
[170.11500549 -444.08917236]
[185.08973694 -445.45504761]
[200.07987976 -444.27038574]
[214.65415955 -440.56924438]
[228.39323425 -434.45812988]
[240.90180969 -426.11285400]
[251.81997681 -415.77352905]
[260.83361816 -403.73764038]
[267.68334961 -390.35150146]
[272.17214966 -376.00024414]
[274.17083740 -361.09677124]
[273.62191772 -346.06988525]
[270.54116821 -331.35198975]
[265.01721191 -317.36648560]
[257.20904541 -304.51580811]
[247.34124756 -293.16964722]
[235.69779968 -283.65451050]
[222.61367798 -276.24414062]
[208.46533203 -271.15173340]
[193.65985107 -268.52383423]
[178.62322998 -268.43603516]
[176.17750549 -253.63676453]
[173.73176575 -238.83749390]
[184.83580017 -230.88655090]
[191.46263123 -218.86932373]
[192.26907349 -205.10346985]
[187.04086304 -192.27209473]
[176.74548340 -182.90080261]
[163.35371399 -178.86054993]
[160.68792725 -164.09933472]
[166.04016113 -150.19960022]
[155.97348022 -137.99417114]
[161.32571411 -124.09443665]
[151.25901794 -111.88901520]
[148.59323120 -97.12779999]
[156.97531128 -89.38784790]
[160.61793518 -78.44951630]
[158.50639343 -66.99372101]
[151.05149841 -57.88737488]
[140.01573181 -53.46601486]
[136.91162109 -38.79071426]
[133.80751038 -24.11541176]
[130.70339966 -9.44010925]
[139.01791382 2.86453748]
[136.07896423 17.79159927]
[123.11634827 26.42920494]
[120.01223755 41.10450745]
[116.90812683 55.77981186]
[121.84414673 69.83274078]
[111.41851807 81.73302460]
[108.31440735 96.40833282]
[109.93869781 99.90605164]
[110.01336670 104.10275269]
[108.26079559 108.29029846]
[104.73010254 111.66284180]
[105.61078644 120.75472260]
[100.80826569 126.37232971]
[96.83616638 140.83685303]
[92.86406708 155.30137634]
[88.89197540 169.76589966]
[89.63719177 178.86988831]
[84.75156403 184.41537476]
[80.56455231 198.81915283]
[92.44290161 189.65919495]
[107.29637909 187.56768799]
[121.24230957 193.09136963]
[130.63526917 204.78633118]
[133.01995850 219.59556580]
[127.77303314 233.64794922]
[116.26601410 243.27024841]
[101.50681305 245.94720459]
[87.35345459 240.97906494]
[77.50558472 229.66448975]
[74.53736877 214.96197510]
[68.26000977 228.58529663]
[61.98265076 242.20860291]
[55.70528793 255.83192444]
[49.42792892 269.45523071]
[49.65290070 276.06286621]
[46.91771698 281.04443359]
[42.75549316 283.38641357]
[36.07529831 296.81680298]
[29.39510345 310.24716187]
[22.71490860 323.67755127]
[21.69504738 332.75485229]
[15.83397007 337.25704956]
[16.38041687 353.06881714]
[3.66775441 360.83007812]
[-3.21165824 374.15951538]
[-10.09107113 387.48895264]
[-16.97048378 400.81835938]
[-23.84989548 414.14779663]
[-30.72930908 427.47723389]
[-18.29171753 435.89404297]
[-6.93693495 445.72283936]
[3.17563772 456.82565308]
[11.90403461 469.04656982]
[19.12572289 482.21411133]
[24.73932266 496.14334106]
[28.66602516 510.63876343]
[30.85070610 525.49688721]
[31.26269913 540.50909424]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 201]
[43 200]
[44 199]
[45 198]
[46 197]
[47 196]
[49 194]
[50 192]
[51 191]
[52 190]
[53 189]
[54 186]
[55 185]
[56 184]
[57 183]
[58 182]
[59 171]
[60 170]
[61 168]
[62 167]
[63 166]
[64 165]
[65 163]
[66 159]
[67 158]
[69 156]
[70 155]
[71 154]
[74 151]
[75 150]
[76 149]
[77 148]
[80 143]
[81 142]
[83 140]
[85 138]
[86 137]
[91 131]
[92 130]
[93 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
