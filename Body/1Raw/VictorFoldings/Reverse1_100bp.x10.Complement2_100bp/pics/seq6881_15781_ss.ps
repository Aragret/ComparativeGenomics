%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[181.09417725 167.97512817]
[187.17572021 154.25405884]
[174.00323486 147.07868958]
[160.83076477 139.90333557]
[147.65829468 132.72796631]
[134.48580933 125.55259705]
[121.15637970 118.67318726]
[107.67665100 112.09315491]
[93.71653748 112.87220001]
[85.74332428 101.38657379]
[72.26358795 94.80654907]
[58.78385544 88.22652435]
[45.30412292 81.64649200]
[31.82438660 75.06646729]
[40.28165054 87.45495605]
[43.76350403 102.04524994]
[41.81185532 116.91774750]
[34.68347168 130.11570740]
[23.31621933 139.90270996]
[9.20565224 144.99111938]
[-5.79174042 144.71145630]
[-19.70279312 139.10052490]
[-30.69726944 128.89653015]
[-37.32865524 115.44198608]
[-38.72447968 100.50707245]
[-34.70109558 86.05673218]
[-25.78784752 73.99215698]
[-13.15743065 65.90064240]
[1.52840889 62.84677505]
[16.33973885 65.23313904]
[4.65215731 55.83098984]
[-7.03542376 46.42883682]
[-18.72300529 37.02668762]
[-30.41058540 27.62453461]
[-39.05870819 24.68382263]
[-42.20081711 17.99435806]
[-53.74711990 8.41923809]
[-65.29341888 -1.15588188]
[-76.83972168 -10.73100185]
[-88.38602448 -20.30612183]
[-98.92458344 -9.61873150]
[-110.34287262 0.12314173]
[-122.55635834 8.84737301]
[-135.47460938 16.48936844]
[-149.00199890 22.99254990]
[-163.03834534 28.30876923]
[-177.47975159 32.39866257]
[-192.21928406 35.23195648]
[-207.14782715 36.78767014]
[-222.15483093 37.05428314]
[-237.12921143 36.02982330]
[-251.96008301 33.72187424]
[-266.53765869 30.14752769]
[-280.75399780 25.33324242]
[-294.50381470 19.31466675]
[-307.68539429 12.13635731]
[-320.20104980 3.85146236]
[-331.95816040 -5.47867918]
[-342.86968994 -15.78498840]
[-352.85485840 -26.99115944]
[-361.83969116 -39.01422501]
[-369.75769043 -51.76517105]
[-376.55023193 -65.14958954]
[-382.16705322 -79.06838226]
[-386.56652832 -93.41851044]
[-389.71612549 -108.09371185]
[-391.59246826 -122.98534393]
[-392.18173218 -137.98315430]
[-391.47949219 -152.97608948]
[-389.49096680 -167.85316467]
[-386.23092651 -182.50422668]
[-381.72344971 -196.82078552]
[-376.00192261 -210.69686890]
[-369.10870361 -224.02972412]
[-361.09484863 -236.72064209]
[-352.01968384 -248.67567444]
[-341.95037842 -259.80630493]
[-330.96151733 -270.03009033]
[-319.13442993 -279.27139282]
[-306.55667114 -287.46176147]
[-293.32141113 -294.54052734]
[-279.52661133 -300.45535278]
[-265.27441406 -305.16238403]
[-250.67033386 -308.62677002]
[-235.82249451 -310.82290649]
[-220.84082031 -311.73452759]
[-205.83624268 -311.35485840]
[-190.91984558 -309.68670654]
[-176.20208740 -306.74243164]
[-161.79190063 -302.54382324]
[-147.79600525 -297.12200928]
[-134.31800842 -290.51708984]
[-121.45769501 -282.77798462]
[-109.31028748 -273.96197510]
[-97.96572113 -264.13433838]
[-87.50799561 -253.36784363]
[-78.01452637 -241.74220276]
[-69.55560303 -229.34349060]
[-62.19385529 -216.26350403]
[-55.98379135 -202.59907532]
[-50.97138214 -188.45138550]
[-47.19374466 -173.92517090]
[-44.67884827 -159.12799072]
[-43.44530487 -144.16938782]
[-43.50225449 -129.16011047]
[-44.84927368 -114.21130371]
[-47.47638702 -99.43362427]
[-51.36414719 -84.93649292]
[-56.48376846 -70.82724762]
[-62.79734802 -57.21033859]
[-70.25814056 -44.18658829]
[-78.81090546 -31.85242271]
[-67.26460266 -22.27730370]
[-55.71829987 -12.70218372]
[-44.17200089 -3.12706399]
[-32.62569809 6.44805574]
[-21.00843430 15.93695450]
[-9.32085419 25.33910561]
[2.36672735 34.74125671]
[14.05430889 44.14340591]
[25.74188995 53.54555893]
[38.40441513 61.58673096]
[51.88414764 68.16675568]
[65.36388397 74.74678802]
[78.84362030 81.32681274]
[92.32334900 87.90684509]
[106.28346252 87.12779999]
[114.25667572 98.61342621]
[127.73641205 105.19345093]
[132.94357300 104.82929230]
[137.33097839 106.34714508]
[140.31906128 109.11959076]
[141.66117859 112.38011932]
[154.83364868 119.55548859]
[168.00613403 126.73085785]
[181.17860413 133.90621948]
[194.35107422 141.08158875]
[202.58059692 128.53057861]
[211.80574036 116.69210815]
[221.96516418 105.64497375]
[232.99122620 95.46269226]
[244.81054688 86.21302795]
[257.34448242 77.95752716]
[270.50961304 70.75114441]
[284.21832275 64.64182281]
[298.37942505 59.67022705]
[312.89859009 55.86944199]
[327.67929077 53.26476288]
[342.62307739 51.87351990]
[357.63055420 51.70497131]
[372.60183716 52.76024628]
[387.43728638 55.03231430]
[402.03817749 58.50605774]
[416.30734253 63.15835953]
[430.14981079 68.95825958]
[443.47344971 75.86715698]
[456.18963623 83.83907318]
[468.21371460 92.82096100]
[479.46569824 102.75304413]
[489.87063599 113.56922150]
[499.35934448 125.19750977]
[507.86865234 137.56053162]
[515.34197998 150.57601929]
[521.72949219 164.15733337]
[526.98876953 178.21411133]
[531.08477783 192.65280151]
[533.99023438 207.37730408]
[535.68585205 222.28962708]
[536.16033936 237.29055786]
[535.41046143 252.28024292]
[533.44134521 267.15893555]
[530.26599121 281.82760620]
[525.90557861 296.18862915]
[520.38909912 310.14648438]
[513.75323486 323.60821533]
[506.04223633 336.48428345]
[497.30737305 348.68896484]
[487.60675049 360.14108276]
[477.00494385 370.76440430]
[465.57250977 380.48818970]
[453.38552856 389.24777222]
[440.52511597 396.98486328]
[427.07684326 403.64797974]
[413.13021851 409.19271851]
[398.77804565 413.58224487]
[384.11584473 416.78729248]
[369.24118042 418.78659058]
[354.25302124 419.56677246]
[339.25119019 419.12271118]
[324.33544922 417.45730591]
[309.60507202 414.58166504]
[295.15814209 410.51492310]
[281.09072876 405.28414917]
[267.49649048 398.92416382]
[254.46589661 391.47726440]
[242.08566284 382.99301147]
[230.43815613 373.52789307]
[219.60092163 363.14486694]
[209.64607239 351.91305542]
[200.63983154 339.90719604]
[192.64216614 327.20718384]
[185.70628357 313.89755249]
[179.87835693 300.06686401]
[175.19715881 285.80715942]
[171.69383240 271.21334839]
[169.39170837 256.38253784]
[168.30610657 241.41342163]
[168.44424438 226.40562439]
[169.80520630 211.45903015]
[172.37992859 196.67311096]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 137]
[3 136]
[4 135]
[5 134]
[6 133]
[7 129]
[8 128]
[10 126]
[11 125]
[12 124]
[13 123]
[14 122]
[30 121]
[31 120]
[32 119]
[33 118]
[34 117]
[36 116]
[37 115]
[38 114]
[39 113]
[40 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
