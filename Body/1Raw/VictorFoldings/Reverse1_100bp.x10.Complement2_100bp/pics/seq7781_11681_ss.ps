%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[106.60559082 624.91668701]
[91.90415955 628.04943848]
[76.89363861 628.84368896]
[61.94368744 627.27990723]
[47.42246246 623.39654541]
[33.68755722 617.28924561]
[21.07720566 609.10845947]
[9.90195370 599.05560303]
[0.43699890 587.37823486]
[-7.08457470 574.36389160]
[-12.47754192 560.33312988]
[-15.60909653 545.63146973]
[-16.40212059 530.62084961]
[-14.83708572 515.67102051]
[-10.95253086 501.15014648]
[-4.84411860 487.41574097]
[3.33772731 474.80606079]
[13.39152050 463.63162231]
[25.06967735 454.16763306]
[38.08461380 446.64715576]
[52.11582565 441.25534058]
[66.81777954 438.12500000]
[81.82843018 437.33322144]
[83.38895416 422.41461182]
[84.94947052 407.49600220]
[71.83092499 414.76950073]
[57.90745544 409.18942261]
[53.44293594 394.86923218]
[61.72843933 382.36520386]
[76.65620422 380.89486694]
[87.22148895 391.54052734]
[89.88728333 376.77929688]
[92.55307770 362.01809692]
[95.21887207 347.25686646]
[88.58153534 337.14389038]
[90.68164062 324.82427979]
[100.93102264 316.99401855]
[103.81629944 302.27410889]
[106.70156860 287.55422974]
[107.70583344 272.58789062]
[106.81301117 257.61447144]
[105.80875397 242.64813232]
[104.69310760 227.68968201]
[103.57745361 212.73123169]
[102.46180725 197.77276611]
[101.12357330 182.83258057]
[99.56304932 167.91398621]
[98.00252533 152.99537659]
[96.44200897 138.07676697]
[94.88148499 123.15817261]
[93.32096100 108.23956299]
[91.09584045 93.40551758]
[88.21057129 78.68563080]
[85.32529449 63.96573639]
[78.97086334 77.55327606]
[66.73086548 86.22405243]
[51.80480194 87.71154785]
[38.09431458 81.62693787]
[29.18328857 69.56071472]
[27.40104866 54.66697311]
[33.21346283 40.83889389]
[45.10118866 31.69110298]
[59.95679092 29.61481476]
[73.89706421 35.15276337]
[83.27768707 46.85653305]
[82.60789490 31.87149429]
[81.93811035 16.88645554]
[81.26832581 1.90141666]
[80.59854126 -13.08362198]
[79.92875671 -28.06866074]
[78.92449951 -43.03500366]
[77.58626556 -57.97518921]
[76.24803162 -72.91537476]
[74.90979767 -87.85556030]
[73.23825073 -102.76213074]
[71.23423767 -117.62766266]
[69.23022461 -132.49319458]
[67.22621155 -147.35871887]
[59.56399155 -134.46336365]
[46.19429398 -127.66253662]
[31.25986671 -129.06356812]
[19.38830376 -138.23231506]
[14.25813961 -152.32775879]
[17.45900917 -166.98225403]
[27.99909019 -177.65496826]
[42.61242294 -181.03881836]
[56.77090836 -176.08531189]
[66.08747864 -164.32907104]
[66.08747864 -179.32907104]
[66.08747864 -194.32907104]
[65.86415100 -209.32740784]
[65.41754913 -224.32077026]
[64.97093964 -239.31411743]
[50.28432083 -242.77323914]
[36.99388123 -249.91653442]
[26.00578880 -260.25695801]
[18.06922913 -273.08947754]
[13.72533035 -287.53912354]
[13.27026653 -302.62075806]
[16.73506546 -317.30603027]
[23.88348961 -330.59371948]
[34.22814941 -341.57781982]
[47.06372833 -349.50942993]
[61.51507187 -353.84774780]
[76.59687042 -354.29699707]
[91.28081512 -350.82650757]
[104.56573486 -343.67297363]
[115.54583740 -333.32406616]
[123.47248840 -320.48541260]
[127.80522919 -306.03240967]
[128.24864197 -290.95043945]
[124.77250671 -276.26782227]
[117.61382294 -262.98568726]
[107.26068115 -252.00956726]
[94.41898346 -244.08787537]
[79.96429443 -239.76072693]
[80.41089630 -224.76736450]
[80.85750580 -209.77401733]
[83.65762329 -205.90512085]
[84.05704498 -200.23612976]
[81.08747864 -194.32907104]
[81.08747864 -179.32907104]
[81.08747864 -164.32907104]
[82.09174347 -149.36273193]
[84.09575653 -134.49720764]
[86.09976959 -119.63167572]
[88.10378265 -104.76615143]
[90.67097473 -102.34915161]
[92.19502258 -98.56863403]
[92.04780579 -93.92841339]
[89.84998322 -89.19379425]
[91.18821716 -74.25360870]
[92.52645111 -59.31342316]
[93.86468506 -44.37323761]
[96.32138824 -41.84402466]
[97.67510986 -37.99922562]
[97.32083893 -33.37020874]
[94.91379547 -28.73844528]
[95.58358002 -13.75340748]
[96.25336456 1.23163152]
[96.92314911 16.21667099]
[97.59293365 31.20170975]
[98.26272583 46.18674850]
[100.04518890 61.08046341]
[102.93045807 75.80035400]
[105.81573486 90.52024841]
[115.06111908 78.70826721]
[129.93360901 76.75660706]
[141.91357422 85.78327179]
[144.13833618 100.61736298]
[135.33345032 112.76125336]
[120.54276276 115.25836945]
[108.23956299 106.67903900]
[109.80008698 121.59764862]
[111.36061096 136.51625061]
[112.92113495 151.43486023]
[114.48165894 166.35345459]
[116.04217529 181.27206421]
[119.61016846 186.83811951]
[119.80268097 192.51791382]
[117.42026520 196.65711975]
[118.53591156 211.61558533]
[119.65155792 226.57403564]
[120.76720428 241.53248596]
[124.52622223 249.85760498]
[121.78642273 256.72164917]
[122.67923737 271.69506836]
[129.00059509 258.09210205]
[139.34872437 247.23320007]
[152.63159180 240.26428223]
[167.44740295 237.92083740]
[182.23260498 240.45016479]
[195.42691040 247.58532715]
[205.63786316 258.57333374]
[211.78788757 272.25460815]
[213.22796631 287.18530273]
[209.80610657 301.78979492]
[201.88343811 314.52679443]
[190.29605103 324.05215454]
[176.26679993 329.36065674]
[161.27621460 329.89202881]
[146.90628052 325.59024048]
[134.67352295 316.90927124]
[125.86886597 304.76522827]
[121.42146301 290.43951416]
[118.53618622 305.15939331]
[115.65091705 319.87927246]
[122.02127838 337.15643311]
[109.98008728 349.92266846]
[107.31429291 364.68389893]
[104.64849854 379.44509888]
[101.98270416 394.20632935]
[99.86808014 409.05651855]
[98.30755615 423.97512817]
[96.74703217 438.89373779]
[111.26889801 442.77468872]
[125.00481415 448.87969971]
[137.61651611 457.05844116]
[148.79342651 467.10946655]
[158.26029968 478.78527832]
[165.78402710 491.79833984]
[171.17930603 505.82821655]
[174.31329346 520.52941895]
[175.10879517 535.53985596]
[173.54621887 550.48992920]
[169.66406250 565.01147461]
[163.55792236 578.74688721]
[155.37815857 591.35791016]
[145.32620239 602.53399658]
[133.64961243 611.99993896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 195]
[24 194]
[25 193]
[31 192]
[32 191]
[33 190]
[34 189]
[37 187]
[38 186]
[39 185]
[40 167]
[41 166]
[42 164]
[43 163]
[44 162]
[45 161]
[46 158]
[47 157]
[48 156]
[49 155]
[50 154]
[51 153]
[52 146]
[53 145]
[54 144]
[65 143]
[66 142]
[67 141]
[68 140]
[69 139]
[70 138]
[71 134]
[72 133]
[73 132]
[74 131]
[75 127]
[76 126]
[77 125]
[78 124]
[88 123]
[89 122]
[90 121]
[91 118]
[92 117]
[93 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
