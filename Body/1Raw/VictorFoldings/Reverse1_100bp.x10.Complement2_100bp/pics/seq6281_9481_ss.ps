%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[106.73972321 596.69604492]
[92.57540131 591.29718018]
[81.11383820 581.37707520]
[73.73908234 568.13366699]
[71.34167480 553.16607666]
[74.21109772 538.28179932]
[82.00086975 525.27813721]
[93.77032471 515.72534180]
[108.09825897 510.77700806]
[108.32158661 495.77865601]
[108.54491425 480.78033447]
[108.76824188 465.78198242]
[101.22129059 452.94091797]
[109.16320038 439.25747681]
[109.38652802 424.25915527]
[109.60985565 409.26080322]
[109.83318329 394.26248169]
[110.05651093 379.26412964]
[110.27983856 364.26580811]
[110.50316620 349.26745605]
[110.72649384 334.26913452]
[110.94982147 319.27078247]
[111.17314911 304.27246094]
[111.39647675 289.27410889]
[111.61980438 274.27578735]
[111.84313202 259.27743530]
[104.29618073 246.43638611]
[112.23808289 232.75292969]
[111.12243652 217.79447937]
[108.67671204 202.99520874]
[106.23097992 188.19593811]
[103.56518555 173.43472290]
[100.67991638 158.71482849]
[97.79463959 143.99493408]
[88.54925537 155.80691528]
[73.67676544 157.75857544]
[61.69680405 148.73191833]
[59.47204208 133.89782715]
[68.27692413 121.75392914]
[83.06761169 119.25682068]
[95.37081146 127.83614349]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[89.71058655 73.72438049]
[88.15006256 58.80577469]
[86.58953857 43.88716888]
[75.43042755 29.23944855]
[83.19606781 13.50217533]
[81.41359711 -1.39154232]
[78.68897247 -4.77242327]
[77.31962585 -8.47234535]
[77.23944855 -12.02607250]
[78.23800659 -15.03763103]
[79.99567413 -17.22137642]
[79.10285950 -32.19478226]
[78.21004486 -47.16819000]
[77.31723022 -62.14159393]
[76.42441559 -77.11499786]
[67.23892975 -65.25638580]
[52.87006760 -60.95104980]
[38.67706680 -65.80477905]
[29.95356178 -78.00726318]
[29.95320511 -93.00726318]
[38.67612839 -105.21015167]
[52.86890030 -110.06455994]
[67.23796082 -105.75991058]
[76.42441559 -93.90063477]
[77.31723022 -108.87403870]
[78.21004486 -123.84744263]
[79.10285950 -138.82084656]
[79.99567413 -153.79425049]
[80.88849640 -168.76765442]
[81.78131104 -183.74107361]
[82.67412567 -198.71447754]
[82.78578949 -213.71405029]
[82.11600494 -228.69909668]
[80.55548096 -243.61770630]
[78.10975647 -258.41696167]
[75.66403198 -273.21624756]
[73.21829987 -288.01550293]
[70.77257538 -302.81478882]
[60.88871765 -315.16873169]
[66.44731140 -328.98724365]
[64.00158691 -343.78649902]
[61.55585861 -358.58578491]
[46.51624298 -359.37573242]
[31.99818039 -363.38070679]
[18.68070602 -370.41342163]
[7.18670368 -380.14489746]
[-1.94623172 -392.12002563]
[-8.29093647 -405.77868652]
[-11.55065632 -420.48202515]
[-11.57292938 -435.54235840]
[-8.35671329 -450.25527954]
[-2.05243683 -463.93264771]
[7.04503822 -475.93472290]
[18.51020622 -485.70016479]
[31.80681992 -492.77224731]
[46.31297302 -496.82015991]
[61.35018921 -497.65457153]
[76.21514130 -495.23648071]
[90.21258545 -489.67898560]
[102.68782043 -481.24200439]
[113.05735779 -470.32015991]
[120.83620453 -457.42428589]
[125.66052246 -443.15756226]
[127.30467224 -428.18722534]
[125.69175720 -413.21350098]
[120.89720917 -398.93670654]
[113.14528656 -386.02462769]
[102.79855347 -375.08117676]
[90.34094238 -366.61819458]
[76.35513306 -361.03149414]
[78.80085754 -346.23223877]
[81.24658203 -331.43295288]
[90.95550537 -320.13757324]
[85.57184601 -305.26049805]
[88.01757050 -290.46124268]
[90.46330261 -275.66195679]
[92.90902710 -260.86270142]
[95.35475159 -246.06343079]
[103.25669098 -258.81329346]
[117.09967041 -264.59014893]
[131.72061157 -261.23931885]
[141.66625977 -250.01060486]
[143.22714233 -235.09202576]
[135.82107544 -222.04786682]
[122.21035004 -215.74325562]
[107.47142792 -218.52966309]
[97.10104370 -229.36888123]
[97.77082825 -214.38383484]
[107.82829285 -225.51251221]
[122.66833496 -227.69726562]
[135.50628662 -219.93923950]
[140.47282410 -205.78530884]
[135.29728699 -191.70646667]
[122.34588623 -184.13935852]
[107.53981018 -186.54357910]
[97.64752960 -197.82165527]
[96.75471497 -182.84825134]
[95.86190033 -167.87484741]
[94.96908569 -152.90144348]
[94.07626343 -137.92803955]
[93.18344879 -122.95462799]
[92.29063416 -107.98122406]
[91.39781952 -93.00781250]
[91.39781952 -78.00781250]
[92.29063416 -63.03441238]
[93.18344879 -48.06100464]
[94.07626343 -33.08760071]
[94.96908569 -18.11419296]
[96.30731964 -3.17400813]
[98.08978271 11.71970940]
[107.40216064 19.44021606]
[109.00904846 31.83382988]
[101.50814056 42.32664490]
[103.06866455 57.24525070]
[104.62918854 72.16385651]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[110.28941345 126.27561951]
[112.51453400 141.10966492]
[115.39980316 155.82955933]
[118.28507996 170.54945374]
[122.33541870 175.77499390]
[123.03388977 181.41494751]
[121.03025055 185.75021362]
[123.47598267 200.54948425]
[125.92170715 215.34875488]
[131.88655090 201.58573914]
[143.17543030 191.70843506]
[157.60864258 187.62397766]
[172.39933777 190.12103271]
[184.69168091 198.71743774]
[192.11219788 211.75338745]
[193.22813416 226.71182251]
[187.82398987 240.70449829]
[176.94323730 251.02967834]
[162.68676758 255.69369507]
[147.80729675 253.79603577]
[135.17779541 245.70307922]
[127.23641968 232.97625732]
[134.76739502 246.89010620]
[126.84146881 259.50076294]
[126.61814117 274.49911499]
[126.39481354 289.49743652]
[126.17148590 304.49578857]
[125.94815826 319.49411011]
[125.72483063 334.49246216]
[125.50150299 349.49078369]
[125.27817535 364.48913574]
[125.05484772 379.48745728]
[124.83152008 394.48580933]
[124.60819244 409.48413086]
[124.38486481 424.48248291]
[124.16153717 439.48080444]
[131.69252014 453.39465332]
[123.76657867 466.00531006]
[123.54325104 481.00366211]
[123.31992340 496.00198364]
[123.09659576 511.00033569]
[137.27084351 516.37310791]
[148.75067139 526.27203369]
[156.14981079 539.50189209]
[158.57481384 554.46502686]
[155.73281860 569.35455322]
[147.96702576 582.37255859]
[136.21519470 591.94702148]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 203]
[10 202]
[11 201]
[12 200]
[14 198]
[15 197]
[16 196]
[17 195]
[18 194]
[19 193]
[20 192]
[21 191]
[22 190]
[23 189]
[24 188]
[25 187]
[26 186]
[28 184]
[29 171]
[30 170]
[31 169]
[32 166]
[33 165]
[34 164]
[41 163]
[42 162]
[44 160]
[45 159]
[46 158]
[47 157]
[49 154]
[50 153]
[55 152]
[56 151]
[57 150]
[58 149]
[59 148]
[68 147]
[69 146]
[70 145]
[71 144]
[72 143]
[73 142]
[74 141]
[75 140]
[76 132]
[77 131]
[78 122]
[79 121]
[80 120]
[81 119]
[82 118]
[84 116]
[85 115]
[86 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
