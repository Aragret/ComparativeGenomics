%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[184.85966492 349.89053345]
[192.07785034 336.69702148]
[201.47753906 324.95745850]
[212.77311707 315.02865601]
[225.62130737 307.21231079]
[220.16593933 293.23953247]
[214.71058655 279.26672363]
[209.25523376 265.29391479]
[203.79988098 251.32112122]
[198.34451294 237.34832764]
[192.88916016 223.37553406]
[186.20896912 209.94515991]
[178.35720825 197.16430664]
[170.50544739 184.38346863]
[162.65370178 171.60263062]
[153.16479492 159.98536682]
[142.20889282 149.73997498]
[131.25297546 139.49458313]
[116.67227936 136.45280457]
[111.87749481 121.37564087]
[100.92158508 111.13024902]
[89.88970947 100.96670532]
[78.41500854 91.30589294]
[66.58873749 82.07879639]
[54.76247025 72.85169983]
[42.93619919 63.62459946]
[34.24525452 60.81296921]
[31.00389671 54.17102814]
[19.31631470 44.76887512]
[7.62873363 35.36672592]
[-4.05884743 25.96457291]
[-19.66137505 23.34317589]
[-24.72829056 9.33690453]
[-40.33081818 6.71550560]
[-45.39773560 -7.29076481]
[-57.08531570 -16.69291687]
[-68.77289581 -26.09506798]
[-80.46047974 -35.49721909]
[-90.80137634 -24.61947250]
[-102.00524139 -14.63282967]
[-113.99552917 -5.60551167]
[-126.69033813 2.40081477]
[-140.00296021 9.33145809]
[-153.84243774 15.13907337]
[-168.11422729 19.78398895]
[-182.72087097 23.23447609]
[-197.56254578 25.46696091]
[-212.53790283 26.46619606]
[-227.54461670 26.22535324]
[-242.48017883 24.74608040]
[-257.24258423 22.03847885]
[-271.73095703 18.12104797]
[-285.84637451 13.02054787]
[-299.49234009 6.77181911]
[-312.57571411 -0.58245206]
[-325.00704956 -8.99202728]
[-336.70150757 -18.39945984]
[-347.57913208 -28.74048805]
[-357.56561279 -39.94446945]
[-366.59280396 -51.93486786]
[-374.59896851 -64.62977600]
[-381.52944946 -77.94247437]
[-387.33691406 -91.78202057]
[-391.98165894 -106.05387115]
[-395.43197632 -120.66054535]
[-397.66427612 -135.50225830]
[-398.66333008 -150.47761536]
[-398.42230225 -165.48432922]
[-396.94287109 -180.41987610]
[-394.23507690 -195.18225098]
[-390.31747437 -209.67059326]
[-385.21682739 -223.78591919]
[-378.96792603 -237.43183899]
[-371.61349487 -250.51510620]
[-363.20376587 -262.94635010]
[-353.79620361 -274.64068604]
[-343.45504761 -285.51818848]
[-332.25094604 -295.50454712]
[-320.26043701 -304.53158569]
[-307.56542969 -312.53759766]
[-294.25265503 -319.46792603]
[-280.41302490 -325.27520752]
[-266.14111328 -329.91979980]
[-251.53440857 -333.36993408]
[-236.69267273 -335.60208130]
[-221.71730042 -336.60095215]
[-206.71058655 -336.35974121]
[-191.77505493 -334.88012695]
[-177.01272583 -332.17214966]
[-162.52442932 -328.25439453]
[-148.40914917 -323.15356445]
[-134.76332092 -316.90451050]
[-121.68013763 -309.54992676]
[-109.24898529 -301.14004517]
[-97.55477905 -291.73233032]
[-86.67739868 -281.39105225]
[-76.69115448 -270.18682861]
[-67.66426849 -258.19619751]
[-59.65839386 -245.50111389]
[-52.72822952 -232.18824768]
[-46.92110825 -218.34857178]
[-42.27670288 -204.07659912]
[-38.82673645 -189.46984863]
[-36.59478378 -174.62808228]
[-35.59608459 -159.65269470]
[-35.83746338 -144.64599609]
[-37.31726837 -129.71046448]
[-40.02539825 -114.94816589]
[-43.94334793 -100.45992279]
[-49.04435349 -86.34471130]
[-55.29356766 -72.69894409]
[-62.64830780 -59.61585236]
[-71.05832672 -47.18479919]
[-59.37074661 -37.78264999]
[-47.68316650 -28.38049698]
[-35.99558258 -18.97834587]
[-21.22903061 -17.02945137]
[-15.32614040 -2.35067677]
[-0.55958766 -0.40178287]
[5.34330368 14.27699280]
[17.03088379 23.67914391]
[28.71846581 33.08129501]
[40.40604782 42.48344421]
[52.16329956 51.79832840]
[63.98956680 61.02542877]
[75.81584167 70.25252533]
[87.64210510 79.47962189]
[88.42313385 64.49996948]
[100.53214264 55.64717865]
[115.04282379 59.44720078]
[121.25844574 73.09879303]
[114.59707642 86.53852081]
[99.97084808 89.85946655]
[107.58165741 92.51428986]
[111.16697693 100.17433929]
[122.12288666 110.41973114]
[137.48722839 114.19433594]
[141.49836731 128.53866577]
[152.45428467 138.78405762]
[163.41018677 149.02944946]
[158.50654602 134.85362244]
[158.16061401 119.85761261]
[162.40538025 105.47074890]
[170.83627319 93.06428528]
[182.64968872 83.82074738]
[196.71966553 78.62114716]
[211.70513916 77.96109772]
[226.17778015 81.90349579]
[238.75816345 90.07258606]
[248.24719238 101.68973541]
[253.74044800 115.64768219]
[254.71434021 130.61602783]
[251.07603455 145.16810608]
[243.17233276 157.91688538]
[231.75654602 167.64724731]
[217.91676331 173.43174744]
[202.97210693 174.71903992]
[188.34700012 171.38644409]
[175.43453979 163.75086975]
[183.28630066 176.53170776]
[191.13804626 189.31256104]
[198.98980713 202.09339905]
[199.31747437 187.09696960]
[206.04211426 173.68879700]
[217.86532593 164.45779419]
[232.50422668 161.18629456]
[247.13226318 164.50599670]
[258.92501831 173.77590942]
[265.60543823 187.20614624]
[265.88372803 202.20356750]
[259.70605469 215.87239075]
[248.26530457 225.57337952]
[233.77047729 229.43342590]
[219.02029419 226.70721436]
[206.86195374 217.92016602]
[212.31732178 231.89297485]
[217.77267456 245.86576843]
[223.22802734 259.83856201]
[228.68338013 273.81137085]
[234.13874817 287.78414917]
[239.59410095 301.75695801]
[254.33952332 298.80001831]
[269.37442017 298.44869995]
[284.24185181 300.71368408]
[298.49005127 305.52615356]
[311.68603516 312.73983765]
[323.42877197 322.13555908]
[333.36141968 333.42773438]
[341.18212891 346.27328491]
[346.65325928 360.28176880]
[349.60852051 375.02752686]
[349.95812988 390.06243896]
[347.69146729 404.92962646]
[342.87738037 419.17730713]
[335.66220093 432.37246704]
[326.26516724 444.11413574]
[314.97183228 454.04550171]
[302.12542725 461.86474609]
[288.11630249 467.33428955]
[273.37020874 470.28787231]
[258.33526611 470.63580322]
[243.46832275 468.36743164]
[229.22120667 463.55172729]
[216.02687073 456.33505249]
[204.28627014 446.93667603]
[194.35618591 435.64224243]
[186.53837585 422.79492188]
[181.07043457 408.78518677]
[178.11849976 394.03875732]
[177.77230835 379.00375366]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 181]
[6 180]
[7 179]
[8 178]
[9 177]
[10 176]
[11 175]
[12 162]
[13 161]
[14 160]
[15 159]
[16 140]
[17 139]
[18 138]
[20 136]
[21 135]
[22 133]
[23 127]
[24 126]
[25 125]
[26 124]
[28 123]
[29 122]
[30 121]
[31 120]
[33 118]
[35 116]
[36 115]
[37 114]
[38 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
