%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUCCAAAACCGAGCAUUCUUCCGGAUCUAUCCCCUAACACGCCACACACUACGAUCCCAUCUUAGGCUCAUACAACCUCUUUAUUUUACACGUAUCACCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[122.44342041 396.67453003]
[132.32780457 385.18212891]
[145.54823303 377.76620483]
[143.10250854 362.96694946]
[140.54667664 348.18627930]
[137.88088989 333.42507935]
[135.21508789 318.66384888]
[132.43948364 303.92288208]
[122.39855194 292.92156982]
[127.33688354 277.89080811]
[124.45161438 263.17092896]
[121.56633759 248.45103455]
[111.52541351 237.44970703]
[116.46374512 222.41896057]
[113.57847595 207.69906616]
[103.53755188 196.69773865]
[108.47587585 181.66699219]
[94.91173553 175.57174683]
[87.44938660 162.50357056]
[89.13263702 147.37016296]
[99.52426910 135.99824524]
[96.63899231 121.27835846]
[93.75372314 106.55846405]
[90.89038849 103.97511292]
[89.17965698 100.14219666]
[89.15407562 95.60276794]
[91.08373260 91.11765289]
[88.85861969 76.28361511]
[86.63349915 61.44956970]
[84.29801178 46.63249969]
[81.85228729 31.83323097]
[79.40656281 17.03395844]
[63.87167358 11.37187576]
[53.37212372 -1.27940798]
[50.70074844 -17.40642357]
[56.49324417 -32.59203720]
[69.08013916 -42.72526932]
[66.41434479 -57.48648834]
[63.74855042 -72.24770355]
[61.08275604 -87.00891876]
[58.41696167 -101.77014160]
[55.75116730 -116.53135681]
[53.08536911 -131.29257202]
[50.41957474 -146.05378723]
[39.85273743 -135.40757751]
[24.92511368 -136.87931824]
[16.64079285 -149.38412476]
[21.10666656 -163.70390320]
[35.03066254 -169.28263855]
[48.14756393 -162.00926208]
[46.58703995 -176.92787170]
[45.02651596 -191.84646606]
[31.61137199 -193.47113037]
[18.83944702 -197.86489868]
[7.27536583 -204.83059692]
[-2.57025409 -214.05743408]
[-10.26335239 -225.13482666]
[-15.46555805 -237.57072449]
[-17.94907379 -250.81340027]
[-17.60665131 -264.27597046]
[-14.45621300 -277.36245728]
[-8.63994408 -289.49398804]
[-0.41787237 -300.13458252]
[9.84375191 -308.81484985]
[21.68877220 -315.15249634]
[34.59140396 -318.86935425]
[26.04642105 -332.18453979]
[33.01246262 -345.34976196]
[32.11964798 -360.32318115]
[31.22683144 -375.29656982]
[22.68184853 -388.61175537]
[29.64789009 -401.77697754]
[28.75507355 -416.75039673]
[27.86225891 -431.72381592]
[19.31727409 -445.03897095]
[26.28331566 -458.20422363]
[25.39050102 -473.17761230]
[24.49768448 -488.15103149]
[9.50723648 -489.06961060]
[-5.26318216 -491.78845215]
[-19.59817505 -496.26791382]
[-33.28869629 -502.44259644]
[-46.13509369 -510.22253418]
[-57.95003510 -519.49426270]
[-68.56121826 -530.12249756]
[-77.81391144 -541.95233154]
[-85.57316589 -554.81127930]
[-91.72584534 -568.51171875]
[-96.18221283 -582.85388184]
[-98.87728882 -597.62866211]
[-99.77177429 -612.62054443]
[-98.85261536 -627.61096191]
[-96.13321686 -642.38128662]
[-91.65325165 -656.71612549]
[-85.47802734 -670.40637207]
[-77.69761658 -683.25250244]
[-68.42546844 -695.06707764]
[-57.79679871 -705.67791748]
[-45.96661377 -714.93011475]
[-33.10742569 -722.68890381]
[-19.40675926 -728.84106445]
[-5.06441307 -733.29693604]
[9.71046066 -735.99145508]
[24.70240021 -736.88537598]
[39.69277954 -735.96563721]
[54.46299362 -733.24566650]
[68.79765320 -728.76519775]
[82.48770905 -722.58947754]
[95.33352661 -714.80853271]
[107.14777374 -705.53594971]
[117.75816345 -694.90692139]
[127.00997162 -683.07635498]
[134.76826477 -670.21691895]
[140.91992188 -656.51599121]
[145.37521362 -642.17346191]
[148.06918335 -627.39849854]
[148.96255493 -612.40655518]
[148.04226685 -597.41619873]
[145.32177734 -582.64605713]
[140.84072876 -568.31158447]
[134.66448975 -554.62176514]
[126.88311005 -541.77624512]
[117.61007690 -529.96234131]
[106.98062134 -519.35235596]
[95.14974213 -510.10098267]
[82.28997040 -502.34317017]
[68.58884430 -496.19201660]
[54.24616623 -491.73727417]
[39.47109222 -489.04385376]
[40.36390686 -474.07043457]
[41.25672150 -459.09701538]
[49.73784637 -446.85284424]
[42.83566284 -432.61660767]
[43.72848129 -417.64321899]
[44.62129593 -402.66979980]
[53.10241699 -390.42562866]
[46.20023727 -376.18939209]
[47.09305191 -361.21597290]
[47.98587036 -346.24258423]
[56.46699142 -333.99841309]
[49.56481171 -319.76217651]
[65.83638000 -316.70056152]
[80.78198242 -309.55145264]
[93.39321899 -298.79132080]
[102.81768036 -285.14041138]
[108.41654205 -269.51464844]
[109.80789185 -252.96411133]
[106.89275360 -236.60249329]
[99.86210632 -221.53216553]
[89.18441772 -208.76986694]
[75.57438660 -199.17811584]
[59.94512177 -193.40699768]
[61.50564575 -178.48838806]
[63.06616592 -163.56977844]
[65.18079376 -148.71958923]
[67.84658813 -133.95837402]
[70.51238251 -119.19715118]
[73.17817688 -104.43593597]
[75.84397125 -89.67472076]
[78.50976562 -74.91349792]
[81.17556763 -60.15228271]
[83.84136200 -45.39106750]
[96.97052765 -41.63046265]
[107.24788666 -32.53625870]
[112.63000488 -19.84051323]
[112.01406097 -5.99858904]
[105.46331024 6.28570127]
[94.20583344 14.58823204]
[96.65155792 29.38750267]
[99.09728241 44.18677521]
[103.28932190 50.27353287]
[101.46754456 59.22445297]
[103.69266510 74.05849457]
[105.91777802 88.89253998]
[108.47360992 103.67319489]
[111.35888672 118.39308167]
[114.24415588 133.11297607]
[128.15992737 139.72035217]
[135.43177795 153.09844971]
[133.45512390 168.01678467]
[123.19577026 178.78172302]
[133.44306946 190.83590698]
[128.29837036 204.81379700]
[131.18363953 219.53369141]
[141.43093872 231.58787537]
[136.28622437 245.56576538]
[139.17150879 260.28564453]
[142.05677795 275.00555420]
[152.30407715 287.05972290]
[147.15936279 301.03762817]
[151.88102722 308.85705566]
[149.97630310 315.99804688]
[152.64210510 330.75927734]
[155.30789185 345.52047729]
[159.91261292 353.40936279]
[157.90177917 360.52120972]
[160.34750366 375.32049561]
[175.25096130 378.08865356]
[188.30728149 385.78985596]
[197.93984985 397.49411011]
[202.98547363 411.78808594]
[202.83489990 426.94567871]
[197.50628662 441.13659668]
[187.64309692 452.64715576]
[174.43635559 460.08743286]
[159.48083496 462.55899048]
[144.58251953 459.76333618]
[131.54040527 452.03811646]
[121.92943573 440.31613159]
[116.91014862 426.01287842]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 197]
[4 196]
[5 194]
[6 193]
[7 192]
[8 190]
[10 188]
[11 187]
[12 186]
[14 184]
[15 183]
[17 181]
[21 177]
[22 176]
[23 175]
[27 174]
[28 173]
[29 172]
[30 170]
[31 169]
[32 168]
[37 162]
[38 161]
[39 160]
[40 159]
[41 158]
[42 157]
[43 156]
[44 155]
[50 154]
[51 153]
[52 152]
[66 141]
[68 139]
[69 138]
[70 137]
[72 135]
[73 134]
[74 133]
[76 131]
[77 130]
[78 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
