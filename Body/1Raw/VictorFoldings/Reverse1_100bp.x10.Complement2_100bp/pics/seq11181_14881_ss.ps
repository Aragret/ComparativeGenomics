%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[100.53551483 698.02349854]
[90.85577393 686.22241211]
[87.26327515 671.38812256]
[90.47129822 656.46594238]
[99.84289551 644.41870117]
[113.51733398 637.63842773]
[113.29400635 622.64007568]
[113.07067871 607.64172363]
[112.84735107 592.64343262]
[98.42097473 588.68652344]
[85.68124390 580.81689453]
[75.66511536 569.66510010]
[69.19067383 556.12915039]
[66.79033661 541.30230713]
[68.66707611 526.38488770]
[74.67726898 512.58685303]
[84.34168243 501.02984619]
[96.88362885 492.65597534]
[111.29144287 488.15097046]
[111.06811523 473.15264893]
[110.50990295 458.16302490]
[109.61708832 443.18963623]
[108.72427368 428.21621704]
[107.83145142 413.24282837]
[106.93863678 398.26940918]
[104.55832672 395.66818237]
[103.31967926 391.78475952]
[103.81161499 387.16836548]
[106.35549927 382.61032104]
[106.13217163 367.61196899]
[95.29886627 357.45446777]
[94.85871887 342.24719238]
[105.58631134 330.95309448]
[97.66037750 318.34243774]
[105.19136047 304.42858887]
[104.96803284 289.43026733]
[104.74470520 274.43191528]
[104.52137756 259.43359375]
[103.85159302 244.44854736]
[102.73593903 229.49009705]
[101.62029266 214.53164673]
[90.20160675 205.03694153]
[88.85709381 189.88284302]
[98.89342499 177.97024536]
[97.77777863 163.01179504]
[96.66213226 148.05334473]
[95.43515778 133.10360718]
[94.09692383 118.16342163]
[83.04565430 108.79241180]
[81.75296783 94.36067200]
[90.96289062 83.17481232]
[89.51347351 68.24500275]
[87.95294952 53.32639694]
[78.82193756 40.40605927]
[85.19317627 26.94290161]
[83.63265228 12.02429581]
[82.07212830 -2.89430857]
[80.51160431 -17.81291389]
[69.18220520 -7.98210907]
[54.40539169 -10.56005001]
[47.07408142 -23.64637375]
[52.59263992 -37.59432983]
[66.89299774 -42.12200546]
[79.43260193 -33.89317322]
[78.98599243 -48.88652420]
[78.53938293 -63.87987518]
[78.09278107 -78.87322235]
[74.70925140 -87.35788727]
[77.75281525 -94.09275818]
[77.52948761 -109.09110260]
[69.58758545 -122.77454376]
[77.13453674 -135.61560059]
[75.90756226 -150.56533813]
[73.68244171 -165.39938354]
[71.45732880 -180.23342896]
[69.23220825 -195.06747437]
[67.00708771 -209.90150452]
[64.78197479 -224.73554993]
[60.41417694 -232.75804138]
[62.63586426 -239.80685425]
[60.63185120 -254.67237854]
[56.38398361 -262.75900269]
[58.71036911 -269.77395630]
[56.92790604 -284.66769409]
[52.80090332 -292.81665039]
[55.23147583 -299.79620361]
[53.67095184 -314.71481323]
[52.11043167 -329.63342285]
[50.54990768 -344.55200195]
[48.98938370 -359.47061157]
[47.42885971 -374.38922119]
[32.54535294 -376.91583252]
[18.89593506 -383.36532593]
[7.49348068 -393.25909424]
[-0.81587142 -405.86294556]
[-5.41551161 -420.24160767]
[-5.96411610 -435.32809448]
[-2.42097545 -450.00286865]
[4.95098686 -463.17694092]
[15.60472107 -473.87277222]
[28.74965096 -481.29660034]
[43.41033554 -484.89758301]
[58.49885178 -484.40844727]
[72.89553070 -479.86553955]
[85.53205109 -471.60592651]
[95.47068787 -460.24255371]
[101.97393799 -446.61868286]
[104.55921936 -431.74523926]
[103.03467560 -416.72598267]
[97.51344299 -402.67541504]
[88.40522766 -390.63616943]
[76.38593292 -381.50167847]
[62.34746552 -375.94973755]
[63.90798950 -361.03115845]
[65.46851349 -346.11254883]
[67.02903748 -331.19393921]
[68.58956146 -316.27532959]
[70.15007782 -301.35671997]
[71.82162476 -286.45016479]
[73.60408783 -271.55642700]
[75.49738312 -256.67639160]
[77.50139618 -241.81086731]
[79.61602020 -226.96067810]
[81.84113312 -212.12663269]
[84.06625366 -197.29258728]
[86.29136658 -182.45854187]
[88.51648712 -167.62449646]
[90.74160004 -152.79045105]
[98.21098328 -165.79846191]
[111.47794342 -172.79759216]
[126.43157196 -171.61906433]
[138.43832397 -162.62808228]
[143.77778625 -148.61059570]
[140.79545593 -133.91004944]
[130.41545105 -123.08160400]
[115.85411072 -119.48054504]
[101.62344360 -124.22271729]
[92.13287354 -135.83892822]
[100.05880737 -123.22826385]
[92.52782440 -109.31443024]
[92.75115204 -94.31609344]
[93.08612823 -79.31983185]
[93.53273773 -64.32647705]
[93.97933960 -49.33312988]
[94.42594910 -34.33977890]
[95.43020630 -19.37343597]
[96.99073029 -4.45483160]
[98.55125427 10.46377373]
[100.11177826 25.38237762]
[109.13117218 37.23563766]
[102.87155914 51.76587677]
[104.43208313 66.68447876]
[108.25439453 73.00996399]
[105.90307617 81.83657837]
[116.95434570 91.20758820]
[118.24703217 105.63932800]
[109.03710938 116.82518768]
[110.37534332 131.76538086]
[114.25788879 140.03359985]
[111.62058258 146.93769836]
[112.73623657 161.89614868]
[113.85188293 176.85459900]
[125.54430389 187.14659119]
[126.46263885 202.33247375]
[116.57874298 213.41598511]
[117.69439697 228.37445068]
[118.81004333 243.33290100]
[121.38098907 246.83206177]
[122.58375549 250.58944702]
[122.50517273 254.14320374]
[121.37313843 257.10717773]
[119.51971436 259.21026611]
[119.74304199 274.20858765]
[119.96636963 289.20693970]
[120.18969727 304.20526123]
[128.13160706 317.88870239]
[120.58464813 330.72976685]
[131.64375305 341.69946289]
[131.65658569 356.91308594]
[121.13050842 367.38864136]
[121.35383606 382.38699341]
[121.91204834 397.37658691]
[122.80486298 412.35000610]
[123.69767761 427.32339478]
[124.59049225 442.29681396]
[125.48330688 457.27023315]
[128.35916138 461.62643433]
[129.19308472 466.19348145]
[128.24670410 470.15823364]
[126.06645203 472.92932129]
[126.28977966 487.92764282]
[140.82533264 492.00167847]
[153.61103821 499.99841309]
[163.61526489 511.26254272]
[170.03361511 524.87554932]
[172.35366821 539.73046875]
[170.39584351 554.62219238]
[164.32728577 568.34490967]
[154.64762878 579.78997803]
[142.14785767 588.03540039]
[127.84568787 592.42010498]
[128.06901550 607.41839600]
[128.29234314 622.41674805]
[128.51567078 637.41510010]
[142.38592529 643.78527832]
[152.11206055 655.54809570]
[155.76295471 670.36816406]
[152.61370850 685.30285645]
[143.28962708 697.38690186]
[129.64199829 704.22100830]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 204]
[7 203]
[8 202]
[9 201]
[19 191]
[20 190]
[21 186]
[22 185]
[23 184]
[24 183]
[25 182]
[29 181]
[30 180]
[33 177]
[35 175]
[36 174]
[37 173]
[38 172]
[39 167]
[40 166]
[41 165]
[44 162]
[45 161]
[46 160]
[47 158]
[48 157]
[51 154]
[52 152]
[53 151]
[55 149]
[56 148]
[57 147]
[58 146]
[64 145]
[65 144]
[66 143]
[67 142]
[69 141]
[70 140]
[72 138]
[73 128]
[74 127]
[75 126]
[76 125]
[77 124]
[78 123]
[80 122]
[81 121]
[83 120]
[84 119]
[86 118]
[87 117]
[88 116]
[89 115]
[90 114]
[91 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
