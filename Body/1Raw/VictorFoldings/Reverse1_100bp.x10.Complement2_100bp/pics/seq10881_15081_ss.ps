%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[60.41220474 667.63964844]
[45.62623978 670.20434570]
[30.69250679 671.68292236]
[15.69068813 672.06738281]
[0.70082355 671.35577393]
[-14.19710827 669.55187988]
[-28.92361832 666.66534424]
[-43.40013504 662.71148682]
[-57.54941940 657.71148682]
[-71.29597473 651.69195557]
[-84.56646729 644.68505859]
[-97.29007721 636.72814941]
[-109.39892578 627.86370850]
[-120.82840729 618.13903809]
[-131.51753235 607.60601807]
[-141.40928650 596.32080078]
[-150.45086670 584.34362793]
[-158.59405518 571.73846436]
[-165.79539490 558.57244873]
[-172.01646423 544.91595459]
[-177.22406006 530.84173584]
[-181.39041138 516.42492676]
[-184.49328613 501.74249268]
[-186.51612854 486.87271118]
[-187.44813538 471.89492798]
[-187.28434753 456.88906860]
[-186.02565002 441.93521118]
[-183.67872620 427.11312866]
[-180.25611877 412.50189209]
[-175.77607727 398.17947388]
[-170.26251221 384.22229004]
[-163.74485779 370.70480347]
[-156.25785828 357.69912720]
[-147.84147644 345.27468872]
[-138.54061890 333.49774170]
[-128.40490723 322.43112183]
[-117.48841858 312.13391113]
[-105.84940338 302.66101074]
[-93.54995728 294.06298828]
[-80.65570068 286.38571167]
[-67.23543549 279.67016602]
[-53.36076355 273.95211792]
[-39.10571671 269.26211548]
[-24.54634666 265.62521362]
[-9.76033974 263.06076050]
[5.17341614 261.58245850]
[20.17524147 261.19821167]
[35.16509247 261.91006470]
[50.06299591 263.71420288]
[52.94826889 248.99432373]
[55.83354187 234.27442932]
[58.71881485 219.55453491]
[61.60408783 204.83464050]
[64.48935699 190.11476135]
[59.34465408 176.13687134]
[69.59194946 164.08268738]
[58.90912247 174.61250305]
[44.58358765 179.05986023]
[29.81570816 176.43122864]
[17.90466881 167.31381226]
[11.51142502 153.74449158]
[12.06424427 138.75468445]
[19.43962288 125.69314575]
[31.98988533 117.47785950]
[46.91127014 115.94414520]
[60.87030029 121.43463135]
[70.74849701 132.72273254]
[74.33904266 147.28668213]
[79.58575439 133.23420715]
[84.83247375 119.18173981]
[90.07919312 105.12927246]
[95.22115326 91.03813171]
[100.25807190 76.90910339]
[91.66833496 64.12150574]
[92.24861908 48.90583038]
[101.56694794 37.08920288]
[115.88520050 33.07351685]
[120.92211914 18.94448471]
[125.95903015 4.81545591]
[123.30501556 -10.78155613]
[134.86680603 -20.17168045]
[139.90371704 -34.30070877]
[144.94062805 -48.42974091]
[149.97755432 -62.55876923]
[155.01446533 -76.68779755]
[141.42657471 -83.06938171]
[128.51802063 -90.73261261]
[116.40936279 -99.60593414]
[105.21364594 -109.60649872]
[95.03539276 -120.64093018]
[85.96965027 -132.60620117]
[78.10105896 -145.39059448]
[71.50308990 -158.87475586]
[66.23734283 -172.93275452]
[62.35299301 -187.43334961]
[59.88630295 -202.24114990]
[58.86030579 -217.21789551]
[59.28457642 -232.22373962]
[61.15515900 -247.11859131]
[64.45458984 -261.76336670]
[69.15205383 -276.02133179]
[75.20369720 -289.75933838]
[82.55301666 -302.84915161]
[91.13138580 -315.16851807]
[100.85871887 -326.60244751]
[111.64418030 -337.04415894]
[123.38707733 -346.39614868]
[135.97775269 -354.57113647]
[149.29867554 -361.49273682]
[163.22543335 -367.09637451]
[177.62802124 -371.32971191]
[192.37194824 -374.15322876]
[207.31954956 -375.54052734]
[222.33126831 -375.47869873]
[237.26693726 -373.96829224]
[251.98710632 -371.02343750]
[266.35430908 -366.67160034]
[280.23443604 -360.95343018]
[293.49789429 -353.92230225]
[306.02081299 -345.64389038]
[317.68624878 -336.19546509]
[328.38534546 -325.66525269]
[338.01812744 -314.15158081]
[346.49472046 -301.76196289]
[353.73596191 -288.61206055]
[359.67422485 -274.82464600]
[364.25408936 -260.52847290]
[367.43276978 -245.85702515]
[369.18057251 -230.94728088]
[369.48123169 -215.93843079]
[368.33187866 -200.97065735]
[365.74328613 -186.18367004]
[361.73962402 -171.71557617]
[356.35824585 -157.70141602]
[349.64941406 -144.27207947]
[341.67578125 -131.55294800]
[332.51174927 -119.66275787]
[322.24295044 -108.71254730]
[310.96524048 -98.80455017]
[298.78387451 -90.03128052]
[285.81265259 -82.47464752]
[272.17263794 -76.20521545]
[257.99121094 -71.28152466]
[243.40078735 -67.74953461]
[228.53759766 -65.64223480]
[213.54039001 -64.97929382]
[198.54922485 -65.76689911]
[183.70405579 -67.99770355]
[169.14349365 -71.65087891]
[164.10658264 -57.52185440]
[159.06965637 -43.39282227]
[154.03274536 -29.26379395]
[148.99583435 -15.13476372]
[152.01011658 -0.54835498]
[140.08805847 9.85237217]
[135.05114746 23.98140144]
[130.01423645 38.11043167]
[138.56318665 50.27814484]
[138.30497742 65.32465363]
[129.12905884 77.47602844]
[114.38710022 81.94601440]
[109.35018158 96.07504272]
[109.82495880 104.12160492]
[104.13166809 110.37599182]
[98.88494873 124.42845917]
[93.63822937 138.48092651]
[88.39151001 152.53340149]
[84.31184387 166.96795654]
[89.25017548 181.99870300]
[79.20925140 193.00003052]
[76.32397461 207.71992493]
[73.43870544 222.43980408]
[70.55343628 237.15969849]
[67.66815948 251.87959290]
[64.78289032 266.59948730]
[79.25946808 270.55310059]
[93.40883636 275.55288696]
[107.15549469 281.57217407]
[120.42609406 288.57882690]
[133.14984131 296.53552246]
[145.25883484 305.39974976]
[156.68847656 315.12423706]
[167.37777710 325.65710449]
[177.26969910 336.94213867]
[186.31149292 348.91915894]
[194.45487976 361.52420044]
[201.65643311 374.69009399]
[207.87773132 388.34649658]
[213.08555603 402.42062378]
[217.25215149 416.83734131]
[220.35527039 431.51974487]
[222.37834167 446.38949585]
[223.31060791 461.36727905]
[223.14706421 476.37313843]
[221.88861084 491.32699585]
[219.54193115 506.14913940]
[216.11955261 520.76043701]
[211.63975525 535.08294678]
[206.12643433 549.04022217]
[199.60897827 562.55780029]
[192.12220764 575.56359863]
[183.70602417 587.98815918]
[174.40536499 599.76525879]
[164.26983643 610.83203125]
[153.35351562 621.12945557]
[141.71464539 630.60253906]
[129.41534424 639.20074463]
[116.52121735 646.87823486]
[103.10105896 653.59399414]
[89.22648621 659.31225586]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 175]
[50 174]
[51 173]
[52 172]
[53 171]
[54 170]
[56 168]
[68 167]
[69 166]
[70 165]
[71 164]
[72 162]
[73 161]
[77 157]
[78 156]
[79 155]
[81 153]
[82 152]
[83 151]
[84 150]
[85 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
