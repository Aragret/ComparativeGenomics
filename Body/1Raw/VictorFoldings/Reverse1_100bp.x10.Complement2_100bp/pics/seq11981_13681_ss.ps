%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[8.55438614 315.03213501]
[12.98920250 329.38177490]
[15.62695789 344.16763306]
[16.42766380 359.16558838]
[15.37918091 374.14825439]
[12.49740505 388.88851929]
[7.82602310 403.16287231]
[1.43585193 416.75497437]
[-6.57623529 429.45877075]
[-16.08877754 441.08163452]
[-26.95756531 451.44741821]
[-39.01783371 460.39892578]
[-52.08675003 467.80047607]
[-65.96619415 473.53988647]
[-80.44575500 477.53009033]
[-95.30592346 479.71066284]
[-110.32143402 480.04852295]
[-125.26464081 478.53854370]
[-139.90902710 475.20361328]
[-154.03256226 470.09429932]
[-167.42117310 463.28805542]
[-179.87185669 454.88806152]
[-191.19587708 445.02163696]
[-201.22155762 433.83837891]
[-209.79693604 421.50781250]
[-216.79199219 408.21688843]
[-222.10067749 394.16708374]
[-225.64253235 379.57135010]
[-227.36384583 364.65100098]
[-227.23852539 349.63223267]
[-225.26847839 334.74267578]
[-221.48356628 320.20809937]
[-215.94117737 306.24880981]
[-208.72532654 293.07644653]
[-199.94538879 280.89071655]
[-189.73448181 269.87631226]
[-178.24740601 260.20022583]
[-165.65827942 252.00915527]
[-152.15797424 245.42726135]
[-137.95114136 240.55433655]
[-123.25315094 237.46423340]
[-108.28681946 236.20381165]
[-93.27904510 236.79217529]
[-78.45732880 239.22041321]
[-64.04636383 243.45170593]
[-50.26462555 249.42190552]
[-37.32103729 257.04049683]
[-28.18223381 245.14587402]
[-19.04343033 233.25123596]
[-9.90462875 221.35659790]
[-0.76582640 209.46197510]
[8.37297630 197.56733704]
[17.51177788 185.67269897]
[17.28174973 182.87892151]
[18.14451599 179.82568359]
[20.20443916 176.92877197]
[23.41358948 174.63401794]
[27.56571579 173.36366272]
[37.39629745 162.03407288]
[47.22687912 150.70448303]
[49.62643433 133.32031250]
[67.08131409 127.45442963]
[76.74212646 115.97972870]
[86.40293884 104.50502777]
[89.04246521 90.77460480]
[102.12236023 85.83415985]
[111.78317261 74.35945892]
[103.25303650 63.17259979]
[97.25070953 50.45633316]
[94.03865814 36.77289963]
[93.75605011 22.72668266]
[96.41271210 8.93753052]
[101.88882446 -3.98660493]
[109.94031525 -15.47647476]
[120.20976257 -25.02660179]
[132.24221802 -32.21751404]
[145.50540161 -36.73418045]
[159.41319275 -38.37980270]
[173.35163879 -37.08438492]
[186.70590210 -32.90771866]
[198.88754272 -26.03662109]
[208.88572693 -37.21859360]
[218.88389587 -48.40056992]
[228.88206482 -59.58254242]
[238.88023376 -70.76451874]
[248.87840271 -81.94649506]
[252.22502136 -100.05400085]
[269.09729004 -104.88032532]
[278.92785645 -116.20991516]
[288.75845337 -127.53950500]
[298.58901978 -138.86909485]
[288.08123779 -149.58509827]
[278.46978760 -161.11186218]
[269.81704712 -173.37466431]
[262.17910767 -186.29397583]
[255.60552979 -199.78598022]
[250.13891602 -213.76319885]
[245.81474304 -228.13496399]
[242.66104126 -242.80809021]
[240.69827271 -257.68740845]
[239.93916321 -272.67639160]
[240.38864136 -287.67785645]
[242.04379272 -302.59454346]
[244.89387512 -317.32965088]
[248.92039490 -331.78762817]
[254.09725952 -345.87472534]
[260.39089966 -359.49957275]
[267.76046753 -372.57382202]
[276.15817261 -385.01266479]
[285.52957153 -396.73541260]
[295.81390381 -407.66607666]
[306.94442749 -417.73373413]
[318.84896851 -426.87310791]
[331.45031738 -435.02493286]
[344.66677856 -442.13629150]
[358.41259766 -448.16113281]
[372.59863281 -453.06033325]
[387.13293457 -456.80215454]
[401.92117310 -459.36230469]
[416.86746216 -460.72418213]
[431.87484741 -460.87896729]
[446.84606934 -459.82562256]
[461.68395996 -457.57101440]
[476.29229736 -454.12976074]
[490.57638550 -449.52416992]
[504.44354248 -443.78411865]
[517.80383301 -436.94683838]
[530.57067871 -429.05664062]
[542.66119385 -420.16473389]
[553.99694824 -410.32879639]
[564.50451660 -399.61254883]
[574.11572266 -388.08557129]
[582.76818848 -375.82257080]
[590.40582275 -362.90310669]
[596.97912598 -349.41094971]
[602.44543457 -335.43362427]
[606.76928711 -321.06176758]
[609.92266846 -306.38858032]
[611.88507080 -291.50921631]
[612.64385986 -276.52020264]
[612.19403076 -261.51873779]
[610.53857422 -246.60211182]
[607.68817139 -231.86706543]
[603.66131592 -217.40916443]
[598.48419189 -203.32217407]
[592.19024658 -189.69746399]
[584.82037354 -176.62338257]
[576.42236328 -164.18473816]
[567.05072021 -152.46217346]
[556.76617432 -141.53175354]
[545.63543701 -131.46434021]
[533.73065186 -122.32522583]
[521.12915039 -114.17369080]
[507.91253662 -107.06259918]
[494.16656494 -101.03807068]
[479.98040771 -96.13917542]
[465.44604492 -92.39768219]
[450.65777588 -89.83786011]
[435.71145630 -88.47631073]
[420.70404053 -88.32186890]
[405.73284912 -89.37552643]
[390.89501953 -91.63046265]
[376.28671265 -95.07203674]
[362.00274658 -99.67794037]
[348.13571167 -105.41829681]
[334.77557373 -112.25588226]
[322.00894165 -120.14634705]
[309.91860962 -129.03852844]
[300.08804321 -117.70893097]
[290.25744629 -106.37933350]
[280.42687988 -95.04974365]
[280.96859741 -82.96532440]
[272.87130737 -73.44599915]
[260.06039429 -71.94831848]
[250.06221008 -60.76634598]
[240.06404114 -49.58437347]
[230.06587219 -38.40239716]
[220.06770325 -27.22042274]
[210.06951904 -16.03844833]
[219.22604370 -2.94369030]
[225.00215149 11.96336174]
[227.06146240 27.82565117]
[225.28141785 43.73017883]
[219.76051331 58.76054764]
[210.81295776 72.04975891]
[198.95071411 82.83025360]
[184.85421753 90.47819519]
[169.33338928 94.54960632]
[153.28106689 94.80612946]
[137.62165833 91.22898865]
[123.25787354 84.02027130]
[113.59706116 95.49497223]
[110.95753479 109.22539520]
[97.87763977 114.16584015]
[88.21682739 125.64054108]
[78.55601501 137.11523438]
[78.87931061 150.00935364]
[70.59657288 159.36776733]
[58.55647278 160.53506470]
[48.72589111 171.86465454]
[38.89530945 183.19424438]
[29.40641212 194.81150818]
[20.26760864 206.70614624]
[11.12880611 218.60076904]
[1.99000418 230.49540710]
[-7.14879799 242.39004517]
[-16.28760147 254.28466797]
[-25.42640305 266.17929077]
[-14.73042488 276.72329712]
[-5.41128540 288.50180054]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 208]
[48 207]
[49 206]
[50 205]
[51 204]
[52 203]
[53 202]
[58 201]
[59 200]
[60 199]
[62 196]
[63 195]
[64 194]
[66 192]
[67 191]
[81 179]
[82 178]
[83 177]
[84 176]
[85 175]
[86 174]
[88 171]
[89 170]
[90 169]
[91 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
