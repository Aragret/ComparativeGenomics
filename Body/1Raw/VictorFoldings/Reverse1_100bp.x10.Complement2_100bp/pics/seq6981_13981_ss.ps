%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[41.70117569 756.61138916]
[27.80154800 762.29620361]
[13.33592892 766.32885742]
[-1.50004876 768.65484619]
[-16.50574493 769.24273682]
[-31.47822380 768.08453369]
[-46.21500015 765.19598389]
[-60.51678085 760.61602783]
[-74.19013977 754.40673828]
[-87.05017090 746.65197754]
[-98.92295074 737.45666504]
[-109.64791870 726.94519043]
[-119.08002472 715.25964355]
[-127.09172058 702.55810547]
[-133.57464600 689.01232910]
[-138.44113159 674.80548096]
[-141.62536621 660.12976074]
[-143.08428955 645.18359375]
[-142.79815674 630.16906738]
[-140.77084351 615.28936768]
[-137.02978516 600.74560547]
[-131.62554932 586.73449707]
[-124.63123322 573.44555664]
[-116.14143372 561.05847168]
[-106.27095795 549.74078369]
[-95.15328979 539.64550781]
[-82.93878937 530.90924072]
[-69.79264069 523.65008545]
[-55.89263153 517.96624756]
[-41.42674255 513.93457031]
[-26.59060860 511.60952759]
[-11.58487415 511.02264404]
[3.38752794 512.18182373]
[6.27280045 497.46194458]
[9.15807343 482.74203491]
[12.04334545 468.02215576]
[10.24514961 460.85357666]
[15.08270931 453.10531616]
[18.18681908 438.42999268]
[21.29092979 423.75469971]
[19.68441200 420.61599731]
[19.51833725 416.54324341]
[21.21516418 412.22189331]
[24.87523270 408.50018311]
[28.63153458 393.97811890]
[32.38783646 379.45608521]
[36.14413452 364.93402100]
[39.90043640 350.41195679]
[43.65673828 335.88989258]
[33.43371582 320.70419312]
[37.62909698 302.55725098]
[54.03311920 293.07977295]
[57.35538101 278.45233154]
[60.67763901 263.82485962]
[63.89091492 249.17306519]
[66.99502563 234.49777222]
[70.09913635 219.82246399]
[73.20324707 205.14717102]
[66.87258148 188.77983093]
[79.29399872 175.18608093]
[82.17927551 160.46620178]
[84.84506989 145.70498657]
[87.29079437 130.90571594]
[89.73652649 116.10643768]
[81.38407135 104.26655579]
[83.74656677 89.97093201]
[95.46420288 81.44783783]
[97.90993500 66.64856720]
[92.52626801 51.77151108]
[102.23519135 40.47610855]
[104.68091583 25.67683792]
[105.68518066 10.71049404]
[105.23857117 -4.28285646]
[104.79196930 -19.27620697]
[104.23375702 -34.26581573]
[92.85295105 -44.90137100]
[92.38716125 -60.10787201]
[102.59667206 -70.89218903]
[101.92688751 -85.87722778]
[101.25710297 -100.86226654]
[90.36180115 -90.55244446]
[75.36434174 -90.82857513]
[64.85594940 -101.53248596]
[64.85630798 -116.53248596]
[75.36521149 -127.23590088]
[90.36268616 -127.51131439]
[101.25710297 -117.20183563]
[101.92688751 -132.18687439]
[102.59667206 -147.17190552]
[103.26645660 -162.15695190]
[103.93624115 -177.14198303]
[104.60602570 -192.12702942]
[101.86293030 -200.83984375]
[105.39897919 -207.32969666]
[106.29179382 -222.30310059]
[99.38961792 -236.53933716]
[107.87073517 -248.78350830]
[108.76355743 -263.75692749]
[109.65637207 -278.73031616]
[110.54918671 -293.70373535]
[96.86123657 -300.31497192]
[86.74897003 -311.66445923]
[81.75442505 -326.02142334]
[82.63924408 -341.19659424]
[89.26848602 -354.87582397]
[100.63124847 -364.97317505]
[114.99478912 -369.94882202]
[130.16877747 -369.04403687]
[143.83927917 -362.39682007]
[153.92164612 -351.02078247]
[158.87840271 -336.65069580]
[157.95367432 -321.47790527]
[151.28846741 -307.81616211]
[139.89916992 -297.74874878]
[125.52259064 -292.81091309]
[124.62977600 -277.83752441]
[123.73696136 -262.86410522]
[122.84414673 -247.89070129]
[129.81018066 -234.72546387]
[121.26520538 -221.41029358]
[120.37239075 -206.43687439]
[119.59106445 -191.45724487]
[118.92127991 -176.47219849]
[118.25149536 -161.48716736]
[117.58171082 -146.50212097]
[116.91192627 -131.51708984]
[116.24214172 -116.53205109]
[116.24214172 -101.53205109]
[116.91192627 -86.54701233]
[117.58171082 -71.56197357]
[128.71263123 -61.73150635]
[129.60536194 -46.54409027]
[119.21879578 -34.93560028]
[122.65782928 -28.39382553]
[119.78531647 -19.72281265]
[120.23192596 -4.72946215]
[120.67852783 10.26388741]
[128.14686584 -2.74472475]
[140.21237183 -11.65670586]
[154.84181213 -14.97022915]
[169.56987000 -12.12690926]
[181.91459656 -3.60589409]
[189.79570007 9.15687466]
[191.88507080 24.01064682]
[187.83061218 38.45230103]
[178.31556702 50.04816437]
[164.94340515 56.84412766]
[149.96754456 57.69495773]
[135.91171265 52.45727158]
[125.14453888 42.01371002]
[119.48019409 28.12256622]
[117.03446198 42.92183685]
[122.59306335 56.74034882]
[112.70920563 69.09429169]
[110.26347351 83.89356232]
[118.61592865 95.73344421]
[116.25343323 110.02906799]
[104.53579712 118.55216217]
[102.09006500 133.35144043]
[99.64434052 148.15071106]
[101.61103058 154.46289062]
[100.29262543 159.99089050]
[96.89916229 163.35147095]
[94.01389313 178.07136536]
[100.54876709 189.19152832]
[97.84257507 201.39236450]
[87.87854767 208.25128174]
[84.77443695 222.92657471]
[81.67032623 237.60188293]
[78.56621552 252.27717590]
[79.85198975 261.32067871]
[75.30509949 267.14712524]
[71.98284149 281.77456665]
[68.66058350 296.40203857]
[76.83319855 305.03598022]
[79.79297638 316.42636108]
[76.91657257 327.71441650]
[69.03067780 336.12442017]
[58.17879486 339.64620972]
[54.42249680 354.16824341]
[50.66619492 368.69030762]
[46.90989304 383.21237183]
[43.15359497 397.73443604]
[39.39729309 412.25650024]
[35.96623230 426.85882568]
[32.86212158 441.53411865]
[29.75801086 456.20941162]
[26.76323700 470.90740967]
[23.87796402 485.62731934]
[20.99269104 500.34719849]
[18.10741997 515.06707764]
[32.40950394 519.64605713]
[46.08327866 525.85449219]
[58.94382858 533.60833740]
[70.81722260 542.80285645]
[81.54289246 553.31365967]
[90.97577667 564.99859619]
[98.98831940 577.69958496]
[105.47214508 591.24493408]
[110.33958435 605.45141602]
[113.52479553 620.12695312]
[114.98471069 635.07299805]
[114.69958496 650.08752441]
[112.67327118 664.96740723]
[108.93317413 679.51141357]
[103.52987671 693.52288818]
[96.53645325 706.81225586]
[88.04747772 719.19995117]
[78.17774963 730.51824951]
[67.06076050 740.61425781]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 191]
[34 190]
[35 189]
[36 188]
[38 187]
[39 186]
[40 185]
[44 184]
[45 183]
[46 182]
[47 181]
[48 180]
[49 179]
[52 174]
[53 173]
[54 172]
[55 170]
[56 169]
[57 168]
[58 167]
[60 164]
[61 163]
[62 160]
[63 159]
[64 158]
[67 155]
[68 154]
[70 152]
[71 151]
[72 137]
[73 136]
[74 135]
[75 133]
[78 130]
[79 129]
[80 128]
[87 127]
[88 126]
[89 125]
[90 124]
[91 123]
[92 122]
[94 121]
[95 120]
[97 118]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
