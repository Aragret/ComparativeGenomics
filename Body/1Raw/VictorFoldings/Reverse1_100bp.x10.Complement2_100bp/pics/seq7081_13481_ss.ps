%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[46.81022644 579.28802490]
[47.51225281 594.35314941]
[44.44487000 609.11944580]
[37.80090332 622.65856934]
[27.99799156 634.11950684]
[15.65235710 642.78186035]
[1.54005682 648.10107422]
[-13.45179844 649.74273682]
[-28.38080788 647.60369873]
[-42.30852127 641.81842041]
[-54.35943222 632.75054932]
[-63.77600861 620.97009277]
[-69.96631622 607.21759033]
[-72.54122925 592.35754395]
[-71.33889008 577.32409668]
[-66.43486786 563.06219482]
[-58.13743973 550.46844482]
[-46.96818924 540.33441162]
[-33.62922668 533.29711914]
[-18.95904922 529.79901123]
[-3.87983418 530.05999756]
[0.09226204 515.59545898]
[4.06435823 501.13095093]
[8.03645420 486.66641235]
[12.00855064 472.20190430]
[15.98064709 457.73736572]
[19.41170883 443.13504028]
[22.29697990 428.41516113]
[25.18225288 413.69528198]
[23.38405800 406.52670288]
[28.22161674 398.77844238]
[31.32572746 384.10311890]
[34.42983627 369.42782593]
[37.53394699 354.75253296]
[40.63805771 340.07720947]
[35.70203400 326.02429199]
[46.12766266 314.12399292]
[34.95770645 304.27017212]
[30.18801498 290.05380249]
[33.19449615 275.26095581]
[43.26784897 263.88449097]
[57.77772141 259.04602051]
[60.88183212 244.37071228]
[52.56731033 232.06607056]
[55.50626373 217.13900757]
[68.46888733 208.50140381]
[71.57299805 193.82609558]
[74.67710876 179.15080261]
[77.78121948 164.47549438]
[76.08995056 157.28096008]
[81.04233551 149.60556030]
[84.36459351 134.97808838]
[87.68685150 120.35063934]
[91.00910950 105.72317505]
[93.01312256 90.85765076]
[93.68290710 75.87261200]
[94.35269165 60.88756943]
[95.02247620 45.90253067]
[94.68750000 30.90627098]
[93.34926605 15.96608639]
[92.01103210 1.02590168]
[90.67279816 -13.91428375]
[89.33456421 -28.85446930]
[87.99633026 -43.79465485]
[76.15197754 -53.91141891]
[75.00764465 -69.08195496]
[84.72542572 -80.31139374]
[83.38719177 -95.25157928]
[74.44955444 -108.30643463]
[81.02053070 -121.67324066]
[79.68229675 -136.61341858]
[78.34406281 -151.55360413]
[77.00582886 -166.49378967]
[75.33428955 -181.40037537]
[73.33027649 -196.26589966]
[71.32625580 -211.13142395]
[69.32224274 -225.99694824]
[59.81059265 -238.63969421]
[65.77815247 -252.28659058]
[63.77413940 -267.15209961]
[52.74246597 -256.98834229]
[37.89544678 -259.12518311]
[30.17775726 -271.98742676]
[35.27859116 -286.09350586]
[49.43780136 -291.04495239]
[62.21684647 -283.19311523]
[61.32402802 -298.16653442]
[60.43121338 -313.13992310]
[59.53839874 -328.11334229]
[58.64558029 -343.08673096]
[43.78390121 -345.55215454]
[29.84363937 -351.26327515]
[17.52403069 -359.93362427]
[7.44302225 -371.12829590]
[0.10627290 -384.28579712]
[-4.11820889 -398.74615479]
[-5.01852417 -413.78399658]
[-2.54951453 -428.64508057]
[3.16497612 -442.58395386]
[11.83831120 -454.90145874]
[23.03544044 -464.97976685]
[36.19471741 -472.31332397]
[50.65608597 -476.53430176]
[65.69416046 -477.43096924]
[80.55464172 -474.95837402]
[94.49213409 -469.24050903]
[106.80754089 -460.56417847]
[116.88312531 -449.36462402]
[124.21349335 -436.20355225]
[128.43096924 -421.74118042]
[129.32400513 -406.70288086]
[126.84778595 -391.84298706]
[121.12654114 -377.90689087]
[112.44724274 -365.59356689]
[101.24522400 -355.52072144]
[88.08239746 -348.19354248]
[73.61898804 -343.97955322]
[74.51180267 -329.00616455]
[75.40461731 -314.03274536]
[76.29743195 -299.05935669]
[77.19025421 -284.08593750]
[78.63967133 -269.15612793]
[80.64368439 -254.29060364]
[90.01199341 -242.71113586]
[84.18777466 -228.00096130]
[86.19178772 -213.13543701]
[88.19580078 -198.26991272]
[90.19981384 -183.40438843]
[92.76700592 -180.98739624]
[94.29105377 -177.20686340]
[94.14383698 -172.56665039]
[91.94601440 -167.83203125]
[93.28424835 -152.89184570]
[94.62248230 -137.95166016]
[95.96071625 -123.01147461]
[104.80263519 -111.02524567]
[98.32737732 -96.58981323]
[99.66561127 -81.64962769]
[111.22438812 -72.32598877]
[112.79438019 -57.19358063]
[102.93651581 -45.13288879]
[104.27474976 -30.19270325]
[105.61298370 -15.25251770]
[106.95121765 -0.31233251]
[108.28945160 14.62785244]
[109.62768555 29.56803703]
[117.85807800 17.02767372]
[131.51811218 10.83062267]
[146.37507629 12.89710808]
[157.82539368 22.58680725]
[162.32106018 36.89726257]
[158.46902466 51.39422226]
[147.46289062 61.58564377]
[132.71302795 64.31360626]
[118.78985596 58.73282623]
[110.00751495 46.57231522]
[109.33773041 61.55735397]
[108.66794586 76.54239655]
[107.99816132 91.52743530]
[116.68202209 79.29670715]
[129.77055359 71.96933746]
[144.73655701 70.96012115]
[158.69035339 76.46391296]
[168.93766785 87.41802979]
[173.49989319 101.70739746]
[171.49615479 116.57295990]
[163.31333923 129.14442444]
[150.53141785 136.99441528]
[135.61837769 138.60723877]
[121.45369720 133.67147827]
[110.77234650 123.14015198]
[105.63657379 109.04543304]
[102.31430817 123.67289734]
[98.99205017 138.30035400]
[95.66979218 152.92781067]
[92.45652008 167.57960510]
[89.35240936 182.25489807]
[86.24829865 196.93020630]
[83.14418793 211.60551453]
[91.49901581 224.75216675]
[88.14195251 239.59078979]
[75.55713654 247.47482300]
[72.45302582 262.15011597]
[83.76094055 272.44955444]
[88.36492920 286.93057251]
[85.12397003 301.67379761]
[75.00625610 312.74124146]
[60.80296707 317.22811890]
[65.51696777 332.33071899]
[55.31335831 343.18133545]
[52.20924759 357.85662842]
[49.10514069 372.53192139]
[46.00102997 387.20724487]
[42.89691925 401.88253784]
[39.90214539 416.58053589]
[37.01687241 431.30044556]
[34.13159943 446.02032471]
[47.84674454 439.94622803]
[61.21686172 446.74621582]
[64.38599396 461.40762329]
[55.01797867 473.12258911]
[40.01856613 473.25527954]
[30.44517136 461.70947266]
[26.47307396 476.17398071]
[22.50097847 490.63851929]
[18.52888298 505.10302734]
[14.55678558 519.56756592]
[10.58469009 534.03210449]
[23.68239212 541.50878906]
[34.50865555 552.00842285]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 208]
[22 207]
[23 206]
[24 205]
[25 204]
[26 203]
[27 197]
[28 196]
[29 195]
[31 194]
[32 193]
[33 192]
[34 191]
[35 190]
[37 188]
[42 183]
[43 182]
[46 179]
[47 178]
[48 177]
[49 176]
[51 175]
[52 174]
[53 173]
[54 172]
[55 159]
[56 158]
[57 157]
[58 156]
[59 146]
[60 145]
[61 144]
[62 143]
[63 142]
[64 141]
[67 138]
[68 137]
[70 135]
[71 134]
[72 133]
[73 132]
[74 128]
[75 127]
[76 126]
[77 125]
[79 123]
[80 122]
[86 121]
[87 120]
[88 119]
[89 118]
[90 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
