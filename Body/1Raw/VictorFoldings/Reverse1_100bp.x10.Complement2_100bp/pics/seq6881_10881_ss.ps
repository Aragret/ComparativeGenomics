%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[165.40438843 608.16369629]
[152.88714600 616.56506348]
[138.72283936 621.72601318]
[123.73493195 623.34655762]
[108.79481506 621.33251953]
[94.77109528 615.80090332]
[82.47908020 607.07336426]
[72.63341522 595.65728760]
[65.80651855 582.21643066]
[62.39529037 567.53222656]
[62.59806061 552.45831299]
[66.40303802 537.87115479]
[73.58900452 524.61877441]
[83.73818207 513.47167969]
[96.26050568 505.07794189]
[110.42794800 499.92556763]
[125.41683197 498.31408691]
[127.42084503 483.44854736]
[129.42486572 468.58303833]
[131.42887878 453.71749878]
[133.43289185 438.85198975]
[135.43690491 423.98645020]
[137.44091797 409.12091064]
[139.44493103 394.25540161]
[130.27581787 385.20239258]
[127.96051788 372.32910156]
[133.56483459 360.29571533]
[145.24589539 353.58993530]
[147.47100830 338.75588989]
[149.69612122 323.92184448]
[148.91481018 308.94223022]
[145.15850830 294.42016602]
[141.40220642 279.89810181]
[128.44485474 268.06280518]
[133.51255798 250.35969543]
[129.54046631 235.89517212]
[125.56836700 221.43064880]
[121.59626770 206.96612549]
[117.62417603 192.50160217]
[113.65207672 178.03707886]
[109.67997742 163.57255554]
[96.64820862 156.45156860]
[92.41388702 141.83906555]
[99.97139740 128.21842957]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[85.56407928 75.75366974]
[81.59197998 61.28914642]
[78.54052734 75.97548676]
[71.52592468 89.23427582]
[61.10137939 100.01985931]
[48.08901215 107.48165131]
[33.51503372 111.03117371]
[18.52880859 110.38850403]
[4.31221104 105.60433197]
[-8.01357746 97.05593872]
[-17.47649384 85.41750336]
[-23.33025169 71.60687256]
[-25.11320114 56.71321487]
[-22.68473053 41.91110229]
[-16.23636055 28.36789322]
[-6.27663422 17.15166092]
[6.40898132 9.14696503]
[20.82004547 4.98508930]
[35.82004166 4.99425602]
[50.22600937 9.17374229]
[62.90183258 17.19393730]
[72.84783936 28.42233467]
[79.28068542 41.97672653]
[79.72729492 26.98337746]
[80.17389679 11.99002743]
[80.62050629 -3.00332284]
[65.56105804 -6.64119005]
[51.58827591 -13.32005501]
[39.30844879 -22.74751282]
[29.25389290 -34.51195145]
[21.85983086 -48.10052109]
[17.44558334 -62.92148209]
[16.20076370 -78.32999420]
[18.17714310 -93.65615845]
[23.28649712 -108.23412323]
[31.30454063 -121.43106079]
[41.88077545 -132.67459106]
[54.55381393 -141.47763062]
[68.77149200 -147.45948792]
[83.91494751 -150.36233521]
[84.13827515 -165.36067200]
[84.36160278 -180.35900879]
[76.83062744 -194.27284241]
[84.75656128 -206.88351440]
[84.97988892 -221.88185120]
[85.20321655 -236.88018799]
[77.67223358 -250.79402161]
[85.59816742 -263.40469360]
[85.82149506 -278.40301514]
[71.44018555 -283.05804443]
[59.07083511 -291.74658203]
[49.81333160 -303.69604492]
[44.49084091 -317.84393311]
[43.57663727 -332.93218994]
[47.15200806 -347.61920166]
[54.89903641 -360.59899902]
[66.12886047 -370.71740723]
[79.84293365 -377.07473755]
[94.82180786 -379.10568237]
[109.73357391 -376.62966919]
[123.25228119 -369.86685181]
[134.17587280 -359.41854858]
[141.53300476 -346.21386719]
[144.66950989 -331.42691040]
[143.30647278 -316.37255859]
[137.56510925 -302.38943481]
[127.95592499 -290.72085571]
[115.33337402 -282.40447998]
[100.81983185 -278.17968750]
[100.59650421 -263.18136597]
[108.14345551 -250.34030151]
[100.20155334 -236.65686035]
[99.97822571 -221.65852356]
[99.75489807 -206.66018677]
[107.30184937 -193.81912231]
[99.35993958 -180.13568115]
[99.13661194 -165.13734436]
[98.91328430 -150.13900757]
[113.12456512 -147.06213379]
[126.46375275 -141.26231384]
[138.41448975 -132.96191406]
[148.51374817 -122.48019409]
[156.36973572 -110.22093201]
[161.67718506 -96.65692902]
[164.22912598 -82.31177521]
[163.92500305 -67.73960114]
[160.77462769 -53.50369644]
[154.89787292 -40.15474319]
[146.52011108 -28.20949364]
[135.96356201 -18.13078499]
[123.63494110 -10.30958843]
[110.00971985 -5.04986000]
[95.61385345 -2.55671692]
[95.16725159 12.43663311]
[94.72064209 27.42998314]
[94.27404022 42.42333221]
[96.05650330 57.31705093]
[100.02860260 71.78157043]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[114.43592072 124.24633026]
[127.88967896 132.09707642]
[131.71189880 146.82273865]
[124.14450836 159.60046387]
[128.11660767 174.06498718]
[132.08869934 188.52951050]
[136.06079102 202.99403381]
[140.03288269 217.45855713]
[144.00498962 231.92308044]
[147.97708130 246.38760376]
[158.78045654 253.43386841]
[161.79104614 265.56317139]
[155.92425537 276.14178467]
[159.68055725 290.66384888]
[163.43685913 305.18591309]
[166.48341370 290.49856567]
[172.57550049 276.79138184]
[181.43595886 264.68798828]
[192.66169739 254.73898315]
[205.74203491 247.39698792]
[220.08189392 242.99601746]
[235.02890015 241.73628235]
[249.90307617 243.67509460]
[264.02774048 248.72424316]
[276.76031494 256.65402222]
[287.52154541 267.10372925]
[295.82186890 279.59790039]
[301.28369141 293.56817627]
[303.65853882 308.37896729]
[302.83834839 323.35653687]
[298.86044312 337.81945801]
[291.90582275 351.10980225]
[282.29080200 362.62289429]
[270.45288086 371.83502197]
[256.93054199 378.32705688]
[242.33898926 381.80368042]
[227.34205627 382.10671997]
[212.62197876 379.22238159]
[198.84843445 373.28189087]
[186.64802551 364.55548096]
[176.57579041 353.44018555]
[169.08993530 340.44165039]
[164.53016663 326.14697266]
[162.30505371 340.98101807]
[160.07994080 355.81506348]
[170.73371887 369.69009399]
[168.10809326 386.64358521]
[154.31045532 396.25939941]
[152.30644226 411.12493896]
[150.30242920 425.99044800]
[148.29841614 440.85598755]
[146.29440308 455.72152710]
[144.29039001 470.58703613]
[142.28637695 485.45257568]
[140.28236389 500.31811523]
[154.30943298 505.84118652]
[166.60673523 514.56127930]
[176.45932007 525.97137451]
[183.29437256 539.40808105]
[186.71449280 554.09027100]
[186.52085876 569.16424561]
[182.72473145 583.75372314]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 203]
[18 202]
[19 201]
[20 200]
[21 199]
[22 198]
[23 197]
[24 196]
[28 193]
[29 192]
[30 191]
[31 163]
[32 162]
[33 161]
[35 158]
[36 157]
[37 156]
[38 155]
[39 154]
[40 153]
[41 152]
[44 149]
[45 148]
[47 146]
[48 145]
[49 144]
[70 143]
[71 142]
[72 141]
[73 140]
[87 125]
[88 124]
[89 123]
[91 121]
[92 120]
[93 119]
[95 117]
[96 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
