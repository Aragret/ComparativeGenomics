%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUG\
) } def
/len { sequence length } bind def

/coor [
[49.66441727 472.57009888]
[47.25390244 487.40274048]
[42.70933914 501.72631836]
[36.12759399 515.23553467]
[27.64895248 527.64239502]
[17.45414352 538.68249512]
[5.76046753 548.12048340]
[-7.18282413 555.75518799]
[-21.09984398 561.42395020]
[-35.69395065 565.00585938]
[-50.65406799 566.42456055]
[-65.66132355 565.64984131]
[-80.39582825 562.69818115]
[-94.54353333 557.63256836]
[-107.80285645 550.56091309]
[-119.89118958 541.63403320]
[-130.55087280 531.04205322]
[-139.55467224 519.01086426]
[-146.71069336 505.79690552]
[-151.86640930 491.68179321]
[-154.91189575 476.96640015]
[-155.78227234 461.96438599]
[-154.45895386 446.99554443]
[-150.97016907 432.37890625]
[-145.39028931 418.42602539]
[-137.83822632 405.43432617]
[-128.47496033 393.68072510]
[-117.50008392 383.41574097]
[-105.14751434 374.85818481]
[-91.68054962 368.19042969]
[-77.38623047 363.55465698]
[-62.56925964 361.04965210]
[-47.54544830 360.72875977]
[-32.63503265 362.59890747]
[-18.15583229 366.62017822]
[-12.08199787 352.90490723]
[-6.00816345 339.18963623]
[0.06567051 325.47436523]
[6.13950443 311.75909424]
[11.80229092 297.86907959]
[17.04900932 283.81661987]
[22.29572678 269.76412964]
[27.54244614 255.71166992]
[18.17497253 247.84344482]
[11.66005707 237.46015930]
[8.63870811 225.55519104]
[9.41684341 213.27301025]
[13.93438148 201.79905701]
[21.76959610 192.24540710]
[32.17844391 185.54290771]
[44.16519547 182.35060120]
[56.57769775 182.99079895]
[62.44665909 169.18663025]
[68.31562042 155.38244629]
[66.17487335 140.64248657]
[78.69485474 130.96981812]
[84.56381226 117.16564178]
[90.43277740 103.36146545]
[90.43778229 95.30091095]
[96.49324799 89.39648438]
[102.56708527 75.68122101]
[89.98181152 61.90864182]
[84.70417786 44.06711578]
[87.75502014 25.76489258]
[98.47550964 10.68308258]
[114.66878510 1.83527887]
[133.05003357 0.96543956]
[138.29675293 -13.08703136]
[143.54347229 -27.13950348]
[148.79019165 -41.19197464]
[154.03691101 -55.24444580]
[159.28363037 -69.29691315]
[164.53033447 -83.34938812]
[169.77705383 -97.40185547]
[167.35556030 -113.03665924]
[179.05586243 -122.25360107]
[174.42156982 -134.29046631]
[179.08087158 -145.88679504]
[190.02989197 -151.02929688]
[195.48524475 -165.00209045]
[200.94061279 -178.97488403]
[206.39596558 -192.94769287]
[211.85131836 -206.92048645]
[211.06245422 -212.08039856]
[212.21632385 -216.57727051]
[214.73506165 -219.78211975]
[217.87489319 -221.38644409]
[223.94871521 -235.10171509]
[230.02255249 -248.81698608]
[236.09638977 -262.53225708]
[242.17022705 -276.24752808]
[229.17877197 -283.77542114]
[217.07739258 -292.66384888]
[206.00799561 -302.80856323]
[196.10034180 -314.09066772]
[187.47059631 -326.37783813]
[180.21992493 -339.52603149]
[174.43338013 -353.38110352]
[170.17875671 -367.78060913]
[167.50598145 -382.55569458]
[166.44635010 -397.53317261]
[167.01232910 -412.53738403]
[169.19725037 -427.39248657]
[172.97549438 -441.92422485]
[178.30279541 -455.96231079]
[185.11666870 -469.34207153]
[193.33721924 -481.90670776]
[202.86808777 -493.50885010]
[213.59751892 -504.01248169]
[225.39970398 -513.29449463]
[238.13629150 -521.24603271]
[251.65792847 -527.77380371]
[265.80609131 -532.80139160]
[280.41491699 -536.26977539]
[295.31311035 -538.13836670]
[310.32595825 -538.38513184]
[325.27752686 -537.00726318]
[339.99243164 -534.02087402]
[354.29821777 -529.46105957]
[368.02709961 -523.38116455]
[381.01815796 -515.85260010]
[393.11904907 -506.96350098]
[404.18789673 -496.81817627]
[414.09494019 -485.53555298]
[422.72402954 -473.24792480]
[429.97399902 -460.09933472]
[435.75979614 -446.24392700]
[440.01364136 -431.84420776]
[442.68563843 -417.06896973]
[443.74444580 -402.09146118]
[443.17767334 -387.08724976]
[440.99194336 -372.23229980]
[437.21292114 -357.70074463]
[431.88485718 -343.66296387]
[425.07028198 -330.28353882]
[416.84902954 -317.71936035]
[407.31753540 -306.11773682]
[396.58755493 -295.61465454]
[384.78485107 -286.33331299]
[372.04785156 -278.38247681]
[358.52584839 -271.85537720]
[344.37741089 -266.82855225]
[329.76840210 -263.36096191]
[314.87011719 -261.49322510]
[299.85723877 -261.24722290]
[284.90576172 -262.62591553]
[270.19100952 -265.61306763]
[255.88548279 -270.17367554]
[249.81166077 -256.45840454]
[243.73782349 -242.74314880]
[237.66398621 -229.02787781]
[231.59014893 -215.31260681]
[225.82412720 -201.46513367]
[220.36875916 -187.49232483]
[214.91340637 -173.51953125]
[209.45805359 -159.54673767]
[204.00268555 -145.57392883]
[207.57997131 -128.39341736]
[193.10833740 -117.00688171]
[195.90512085 -102.37721252]
[183.82952881 -92.15514374]
[178.58280945 -78.10266876]
[173.33609009 -64.05020142]
[168.08937073 -49.99772644]
[162.84265137 -35.94525528]
[157.59594727 -21.89278412]
[152.34922791 -7.84031343]
[147.10250854 6.21215773]
[156.12373352 13.47083950]
[162.76473999 22.97947311]
[166.48625183 33.98468399]
[166.98075867 45.61084366]
[164.19801331 56.92972183]
[158.34980774 67.03459930]
[149.89399719 75.11291504]
[139.49856567 80.51158905]
[127.98892212 82.78982544]
[116.28234863 81.75505066]
[110.20851898 95.47032166]
[104.23695374 109.23042297]
[98.36799622 123.03459930]
[92.49903107 136.83877563]
[94.21999359 152.56610107]
[82.11979675 161.25141907]
[76.25083923 175.05558777]
[70.38187408 188.85977173]
[82.59341431 202.02951050]
[87.79689026 219.16389465]
[84.98777771 236.79557800]
[74.77812195 251.37780762]
[59.26390457 259.99774170]
[41.59491730 260.95837402]
[36.34819794 275.01086426]
[31.10148048 289.06332397]
[25.85476303 303.11578369]
[26.72538185 307.36972046]
[26.24533272 311.28561401]
[24.68674469 314.48031616]
[22.41821098 316.69851685]
[19.85477066 317.83294678]
[13.78093719 331.54821777]
[7.70710325 345.26345825]
[1.63326931 358.97872925]
[-4.44056463 372.69400024]
[8.26823330 380.71301270]
[19.67396355 390.49703979]
[29.53351021 401.83752441]
[37.63671875 414.49279785]
[43.81086731 428.19308472]
[47.92435455 442.64636230]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 204]
[36 203]
[37 202]
[38 201]
[39 200]
[40 195]
[41 194]
[42 193]
[43 192]
[52 186]
[53 185]
[54 184]
[56 182]
[57 181]
[58 180]
[60 179]
[61 178]
[67 168]
[68 167]
[69 166]
[70 165]
[71 164]
[72 163]
[73 162]
[74 161]
[76 159]
[79 157]
[80 156]
[81 155]
[82 154]
[83 153]
[87 152]
[88 151]
[89 150]
[90 149]
[91 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
