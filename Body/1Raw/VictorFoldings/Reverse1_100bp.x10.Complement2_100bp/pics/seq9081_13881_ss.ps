%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[114.88421631 729.34936523]
[123.75607300 717.18450928]
[134.96353149 707.13031006]
[148.01666260 699.62634277]
[143.40266418 685.35363770]
[138.78865051 671.08093262]
[134.17463684 656.80816650]
[129.56063843 642.53546143]
[125.70339966 657.03100586]
[116.00463104 668.47363281]
[102.33700562 674.65393066]
[87.33953094 674.37860107]
[73.90798950 667.70074463]
[64.63578796 655.90979004]
[61.31325912 641.28240967]
[64.58191681 626.64288330]
[73.81064606 614.81787109]
[87.21751404 608.09063721]
[102.21387482 607.76007080]
[115.90415192 613.89001465]
[125.64557648 625.29797363]
[123.64156342 610.43243408]
[121.63755035 595.56689453]
[119.63353729 580.70141602]
[117.06634521 578.28442383]
[115.54229736 574.50390625]
[115.68951416 569.86364746]
[117.88733673 565.12902832]
[116.54910278 550.18884277]
[115.21086884 535.24865723]
[113.87263489 520.30847168]
[112.53440094 505.36831665]
[111.19616699 490.42813110]
[102.11779022 482.43377686]
[100.88061523 469.99780273]
[108.69060516 459.73297119]
[107.57495880 444.77450562]
[106.45931244 429.81607056]
[105.34365845 414.85760498]
[92.14283752 404.43759155]
[90.53095245 387.35787964]
[101.99169922 374.14157104]
[100.65346527 359.20138550]
[99.31523132 344.26119995]
[97.97699738 329.32101440]
[96.63876343 314.38082886]
[87.56038666 306.38647461]
[86.32321167 293.95053101]
[94.13320160 283.68566895]
[93.01755524 268.72723389]
[91.90190125 253.76878357]
[90.78625488 238.81031799]
[89.67060852 223.85186768]
[79.94894409 235.27505493]
[65.18052673 237.90068054]
[52.11727905 230.52833557]
[46.73153687 216.52854919]
[51.48559570 202.30184937]
[64.20595551 194.35249329]
[79.07704926 196.31480408]
[89.30073547 207.29335022]
[89.74733734 192.30000305]
[90.19394684 177.30665588]
[90.64054871 162.31330872]
[91.08715820 147.31996155]
[91.53376007 132.32659912]
[91.98036957 117.33325958]
[82.12097931 106.71541595]
[82.55238342 92.23231506]
[93.02628326 82.22013855]
[93.47288513 67.22679138]
[93.91949463 52.23343658]
[94.36609650 37.24008942]
[94.70107269 22.24382782]
[94.92440033 7.24549103]
[95.14772797 -7.75284624]
[95.25939941 -22.75242996]
[95.25939941 -37.75242996]
[95.25939941 -52.75242996]
[95.25939941 -67.75243378]
[95.25939941 -82.75243378]
[86.70757294 -92.40795135]
[87.01638031 -104.90148926]
[95.47502136 -113.54891205]
[95.69834900 -128.54725647]
[95.92167664 -143.54559326]
[96.14500427 -158.54393005]
[96.03334045 -173.54350281]
[95.58673096 -188.53686523]
[95.14012146 -203.53021240]
[94.47033691 -218.51524353]
[93.57752228 -233.48864746]
[92.68470764 -248.46205139]
[84.13972473 -261.77722168]
[91.10576630 -274.94247437]
[90.21295166 -289.91586304]
[75.83636475 -294.85372925]
[64.44708252 -304.92111206]
[57.78187180 -318.58288574]
[56.85713577 -333.75564575]
[61.81388855 -348.12573242]
[71.89626312 -359.50177002]
[85.56677246 -366.14898682]
[100.74075317 -367.05377197]
[115.10429382 -362.07812500]
[126.46705627 -351.98080444]
[133.09629822 -338.30154419]
[133.98110962 -323.12640381]
[128.98657227 -308.76940918]
[118.87430573 -297.41992188]
[105.18635559 -290.80868530]
[106.07917023 -275.83529663]
[114.56029510 -263.59112549]
[107.65811157 -249.35487366]
[108.55092621 -234.38146973]
[109.44374847 -219.40806580]
[112.35781097 -215.62425232]
[112.92584229 -209.96966553]
[110.13347626 -203.97680664]
[110.58007812 -188.98345947]
[111.02668762 -173.99011230]
[113.32849884 -171.31915283]
[114.45096588 -167.40060425]
[113.82180786 -162.80087280]
[111.14334106 -158.32060242]
[110.92001343 -143.32226562]
[110.69668579 -128.32392883]
[110.47335815 -113.32558441]
[119.83408356 -98.48160553]
[110.25939941 -82.75243378]
[110.25939941 -67.75243378]
[110.25939941 -52.75242996]
[110.25939941 -37.75242996]
[110.25939941 -22.75242996]
[113.40290070 -16.06361961]
[110.14606476 -7.52951860]
[109.92273712 7.46881866]
[109.69940948 22.46715546]
[112.74298096 29.20202827]
[109.35945129 37.68669510]
[108.91284180 52.68004227]
[108.46623993 67.67339325]
[108.01963043 82.66674042]
[117.87902069 93.28458405]
[117.44761658 107.76768494]
[106.97371674 117.77986145]
[106.52711487 132.77320862]
[106.08050537 147.76655579]
[105.63390350 162.75991821]
[105.18729401 177.75326538]
[104.74069214 192.74661255]
[104.29408264 207.73995972]
[104.62905884 222.73622131]
[105.74470520 237.69467163]
[106.86035919 252.65312195]
[107.97600555 267.61157227]
[109.09165192 282.57003784]
[119.80970001 297.54351807]
[111.57894897 313.04260254]
[112.91718292 327.98278809]
[114.25541687 342.92297363]
[115.59365082 357.86315918]
[116.93188477 372.80334473]
[128.19309998 380.19250488]
[133.07124329 392.53811646]
[129.99382019 405.25076294]
[120.30211639 413.74197388]
[121.41776276 428.70040894]
[122.53340912 443.65887451]
[123.64906311 458.61730957]
[134.36711121 473.59078979]
[126.13635254 489.08987427]
[127.47458649 504.03005981]
[128.81282043 518.97027588]
[130.15106201 533.91046143]
[131.48928833 548.85064697]
[132.82752991 563.79083252]
[134.49906921 578.69738770]
[136.50308228 593.56292725]
[138.50709534 608.42846680]
[140.51110840 623.29394531]
[143.83337402 637.92144775]
[148.44737244 652.19415283]
[153.06138611 666.46691895]
[157.67539978 680.73962402]
[162.28939819 695.01239014]
[177.26502991 693.45532227]
[192.23707581 695.04632568]
[206.55105591 699.71582031]
[219.58119202 707.25964355]
[230.75787354 717.34802246]
[239.59249878 729.53997803]
[245.69886780 743.30242920]
[248.81004333 758.03381348]
[248.78999329 773.09014893]
[245.63960266 787.81323242]
[239.49659729 801.55938721]
[230.62953186 813.72778320]
[219.42602539 823.78637695]
[206.37583923 831.29547119]
[192.04949951 835.92675781]
[177.07325745 837.47790527]
[162.10183716 835.88104248]
[147.78970337 831.20593262]
[134.76252747 823.65698242]
[123.58982086 813.56420898]
[114.75998688 801.36877441]
[108.65902710 787.60388184]
[105.55365753 772.87127686]
[105.57963562 757.81494141]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 186]
[5 185]
[6 184]
[7 183]
[8 182]
[21 181]
[22 180]
[23 179]
[24 178]
[28 177]
[29 176]
[30 175]
[31 174]
[32 173]
[33 172]
[36 170]
[37 169]
[38 168]
[39 167]
[42 163]
[43 162]
[44 161]
[45 160]
[46 159]
[49 157]
[50 156]
[51 155]
[52 154]
[53 153]
[61 152]
[62 151]
[63 150]
[64 149]
[65 148]
[66 147]
[67 146]
[70 143]
[71 142]
[72 141]
[73 140]
[74 138]
[75 137]
[76 136]
[77 134]
[78 133]
[79 132]
[80 131]
[81 130]
[84 128]
[85 127]
[86 126]
[87 125]
[88 121]
[89 120]
[90 119]
[91 116]
[92 115]
[93 114]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
