%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[-55.65331650 501.02728271]
[-55.15770721 516.03509521]
[-56.34558868 531.00402832]
[-59.20202255 545.74584961]
[-63.69108582 560.07513428]
[-69.75631714 573.81164551]
[-77.32144928 586.78271484]
[-86.29133606 598.82519531]
[-96.55317688 609.78759766]
[-107.97792053 619.53210449]
[-120.42187500 627.93615723]
[-133.72856140 634.89404297]
[-147.73062134 640.31829834]
[-162.25196838 644.14068604]
[-177.10998535 646.31304932]
[-192.11781311 646.80822754]
[-207.08670044 645.61993408]
[-221.82843018 642.76306152]
[-236.15757751 638.27355957]
[-249.89395142 632.20788574]
[-262.86480713 624.64239502]
[-274.90701294 615.67211914]
[-285.86911011 605.40997314]
[-295.61328125 593.98492432]
[-304.01693726 581.54071045]
[-310.97442627 568.23382568]
[-316.39825439 554.23162842]
[-320.22018433 539.71014404]
[-322.39215088 524.85205078]
[-322.88687134 509.84423828]
[-321.69808960 494.87536621]
[-318.84075928 480.13372803]
[-314.35086060 465.80471802]
[-308.28479004 452.06851196]
[-300.71890259 439.09790039]
[-291.74829102 427.05596924]
[-281.48577881 416.09414673]
[-270.06045532 406.35034180]
[-257.61599731 397.94705200]
[-244.30889893 390.98995972]
[-230.30651855 385.56655884]
[-215.78494263 381.74505615]
[-200.92680359 379.57351685]
[-185.91894531 379.07925415]
[-170.95011902 380.26849365]
[-156.20857239 383.12625122]
[-141.87968445 387.61660767]
[-128.14367676 393.68307495]
[-115.17327881 401.24935913]
[-106.21258545 389.21997070]
[-97.25188446 377.19061279]
[-88.29119110 365.16122437]
[-79.33049774 353.13183594]
[-70.36979675 341.10247803]
[-61.40910339 329.07308960]
[-52.71928024 316.84661865]
[-44.30466080 304.42910767]
[-35.89004135 292.01162720]
[-27.47542381 279.59411621]
[-19.06080627 267.17663574]
[-10.64618683 254.75912476]
[-2.32424307 242.27932739]
[5.90456486 229.73793030]
[14.13337231 217.19653320]
[22.36218071 204.65513611]
[30.59098816 192.11373901]
[31.10390091 177.22796631]
[45.14360428 169.93431091]
[53.37241364 157.39291382]
[42.48738098 146.47985840]
[34.10117722 133.54733276]
[28.57816315 119.15722656]
[26.15830612 103.93477631]
[26.94674492 88.54136658]
[30.90922546 73.64581299]
[37.87358093 59.89530945]
[47.53722382 47.88728333]
[59.48028564 38.14346313]
[73.18386078 31.08720779]
[88.05255127 27.02509499]
[103.44033813 26.13361931]
[118.67864227 28.45150948]
[133.10539246 33.87806320]
[141.14657593 21.21553612]
[149.18774414 8.55301189]
[150.05413818 -7.24445486]
[163.40852356 -13.84061718]
[171.44970703 -26.50314140]
[172.31608582 -42.30060959]
[185.67048645 -48.89677048]
[193.71165466 -61.55929565]
[201.46804810 -74.39823914]
[208.93579102 -87.40718842]
[216.40353394 -100.41613770]
[223.87127686 -113.42509460]
[231.33901978 -126.43404388]
[219.25222778 -135.34512329]
[208.26004028 -145.57592773]
[198.50573730 -156.99308777]
[190.11651611 -169.44775391]
[183.20173645 -182.77755737]
[177.85153198 -196.80870056]
[174.13568115 -211.35827637]
[172.10260010 -226.23660278]
[171.77880859 -241.24969482]
[173.16851807 -256.20184326]
[176.25363159 -270.89807129]
[180.99391174 -285.14685059]
[187.32756042 -298.76239014]
[195.17199707 -311.56716919]
[204.42497253 -323.39425659]
[214.96585083 -334.08947754]
[226.65719604 -343.51339722]
[239.34660339 -351.54312134]
[252.86863708 -358.07400513]
[267.04699707 -363.02090454]
[281.69686890 -366.31930542]
[296.62722778 -367.92620850]
[311.64343262 -367.82067871]
[326.54974365 -366.00405884]
[341.15179443 -362.50009155]
[355.25921631 -357.35440063]
[368.68811035 -350.63409424]
[381.26339722 -342.42678833]
[392.82113647 -332.83947754]
[403.21063232 -321.99716187]
[412.29647827 -310.04116821]
[419.96014404 -297.12738037]
[426.10180664 -283.42416382]
[430.64132690 -269.11019897]
[433.51956177 -254.37202454]
[434.69897461 -239.40182495]
[434.16421509 -224.39476013]
[431.92221069 -209.54649353]
[428.00219727 -195.05058289]
[422.45532227 -181.09602356]
[415.35385132 -167.86473083]
[406.79040527 -155.52922058]
[396.87658691 -144.25028992]
[385.74166870 -134.17498779]
[373.53082275 -125.43468475]
[360.40322876 -118.14331055]
[346.53005981 -112.39592743]
[332.09213257 -108.26746368]
[317.27770996 -105.81173706]
[302.27990723 -105.06077576]
[287.29428101 -106.02436066]
[272.51617432 -108.68993378]
[258.13824463 -113.02274323]
[244.34796143 -118.96630096]
[236.88023376 -105.95735168]
[229.41249084 -92.94840240]
[221.94474792 -79.93944550]
[214.47700500 -66.93049622]
[215.04016113 -63.44980621]
[213.94540405 -59.52341461]
[211.00158691 -55.93352890]
[206.37419128 -53.51812363]
[198.33300781 -40.85559845]
[198.04177856 -25.96383858]
[184.11222839 -18.46196938]
[176.07106018 -5.79944372]
[175.77983093 9.09231377]
[161.85026550 16.59418488]
[153.80909729 29.25671005]
[145.76792908 41.91923523]
[156.24523926 51.99425888]
[164.54930115 63.92416763]
[170.35925293 77.24800873]
[173.45060730 91.45095825]
[173.70391846 105.98423767]
[171.10939026 120.28628540]
[165.76727295 133.80450439]
[157.88398743 146.01654053]
[147.76412964 156.45056152]
[135.79872131 164.70339966]
[122.45009613 170.45616150]
[108.23401642 173.48658752]
[93.69979095 173.67758179]
[79.40899658 171.02174377]
[65.91381073 165.62171936]
[57.68500519 178.16311646]
[56.58351135 193.94593811]
[43.13238907 200.34254456]
[34.90357971 212.88394165]
[26.67477226 225.42533875]
[18.44596481 237.96673584]
[10.21715736 250.50814819]
[8.12585545 259.39996338]
[1.77130866 263.17373657]
[-6.64331007 275.59124756]
[-15.05792809 288.00872803]
[-23.47254753 300.42623901]
[-31.88716507 312.84371948]
[-40.30178452 325.26123047]
[-40.67534256 330.46771240]
[-42.79655075 334.59732056]
[-45.96255493 337.16473389]
[-49.37972641 338.03378296]
[-58.34042358 350.06317139]
[-67.30111694 362.09252930]
[-76.26181793 374.12191772]
[-85.22251129 386.15130615]
[-94.18320465 398.18066406]
[-103.14390564 410.21005249]
[-92.18117523 420.47155762]
[-82.43633270 431.89602661]
[-74.03191376 444.33972168]
[-67.07363129 457.64617920]
[-61.64897919 471.64810181]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 205]
[50 204]
[51 203]
[52 202]
[53 201]
[54 200]
[55 199]
[56 195]
[57 194]
[58 193]
[59 192]
[60 191]
[61 190]
[62 188]
[63 187]
[64 186]
[65 185]
[66 184]
[68 182]
[69 181]
[83 166]
[84 165]
[85 164]
[87 162]
[88 161]
[90 159]
[91 158]
[92 154]
[93 153]
[94 152]
[95 151]
[96 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
