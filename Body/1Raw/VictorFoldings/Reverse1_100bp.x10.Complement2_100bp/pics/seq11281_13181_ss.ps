%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[148.63581848 533.99768066]
[142.07934570 520.48498535]
[137.23316956 506.26901245]
[134.17073059 491.56524658]
[132.93849182 476.59655762]
[133.55509949 461.58993530]
[136.01121521 446.77279663]
[140.26962280 432.36984253]
[146.26574707 418.59936523]
[153.90870667 405.67013550]
[163.08261108 393.77813721]
[173.64840698 383.10369873]
[185.44590759 373.80862427]
[198.29626465 366.03381348]
[212.00468445 359.89712524]
[207.60368347 345.55728149]
[203.20268250 331.21743774]
[198.80169678 316.87759399]
[194.40069580 302.53771973]
[189.99969482 288.19787598]
[185.59869385 273.85803223]
[179.22009277 260.28182983]
[170.99128723 247.74043274]
[162.76248169 235.19903564]
[154.53367615 222.65763855]
[146.30485535 210.11622620]
[138.07604980 197.57482910]
[129.84724426 185.03343201]
[121.61843872 172.49203491]
[113.38963318 159.95063782]
[114.91648102 174.87272644]
[112.03604126 189.59355164]
[104.99748993 202.83964539]
[94.40973663 213.46505737]
[81.18872833 220.55059814]
[66.47821808 223.48330688]
[51.55080032 222.00944519]
[37.69785309 216.25654602]
[26.11779594 206.72227478]
[17.81241989 194.23144531]
[13.50022030 179.86465454]
[13.55424690 164.86474609]
[17.96982574 150.52938843]
[26.36496544 138.09870911]
[38.01340485 128.64810181]
[51.90742874 122.99514771]
[66.84507751 121.62886047]
[81.53408813 124.66744995]
[94.70371246 131.84805298]
[105.21257782 142.54661560]
[100.81157684 128.20677185]
[96.41058350 113.86692047]
[86.30645752 104.20264435]
[89.24957275 90.53408051]
[84.84857178 76.19422913]
[80.44757843 61.85438538]
[74.68154144 48.00689697]
[67.60443878 34.78137207]
[60.52733231 21.55584335]
[53.45022583 8.33031559]
[37.58707047 -1.02072120]
[38.83694839 -18.52514267]
[31.56371880 -31.64383507]
[24.29048920 -44.76253128]
[17.01725960 -57.88122559]
[9.74403000 -70.99991608]
[-4.26445293 -65.57072449]
[-18.88175201 -62.09964752]
[-33.83555603 -60.65136719]
[-48.84728241 -61.25285339]
[-63.63727570 -63.89290237]
[-77.93000793 -68.52233124]
[-91.45920563 -75.05490112]
[-103.97283936 -83.36891174]
[-115.23777771 -93.30947876]
[-125.04417419 -104.69141388]
[-133.20933533 -117.30267334]
[-139.58114624 -130.90832520]
[-144.04089355 -145.25491333]
[-146.50552368 -160.07514954]
[-146.92909241 -175.09294128]
[-145.30372620 -190.02853394]
[-141.65971375 -204.60368347]
[-136.06491089 -218.54685974]
[-128.62356567 -231.59829712]
[-119.47430420 -243.51487732]
[-108.78757477 -254.07458496]
[-96.76245117 -263.08071899]
[-83.62296295 -270.36544800]
[-69.61389923 -275.79315186]
[-54.99621964 -279.26263428]
[-40.04226303 -280.70928955]
[-25.03059959 -280.10617065]
[-10.24089146 -277.46453857]
[4.05133677 -272.83355713]
[17.57983017 -266.29953003]
[30.09256363 -257.98416138]
[41.35643005 -248.04237366]
[51.16159058 -236.65937805]
[59.32538223 -224.04722595]
[65.69571686 -210.44088745]
[70.15392303 -196.09382629]
[72.61694336 -181.27331543]
[73.03888702 -166.25547791]
[71.41191101 -151.32005310]
[67.76631165 -136.74531555]
[62.17000198 -122.80274200]
[54.72724533 -109.75210571]
[45.57669449 -97.83651733]
[34.88881683 -87.27796936]
[22.86272430 -78.27314758]
[30.13595390 -65.15445709]
[37.40918350 -52.03575897]
[44.68241119 -38.91706467]
[51.95564270 -25.79837036]
[63.49355698 -22.16476822]
[69.66036987 -11.29489231]
[66.67575073 1.25321007]
[73.75286102 14.47873783]
[80.82996368 27.70426559]
[87.90706635 40.92979431]
[88.80056763 25.95642662]
[95.63460541 12.60367870]
[107.25753784 3.12172008]
[121.71068573 -0.89157307]
[136.55844116 1.24011028]
[149.29870605 9.15754414]
[157.78450012 21.52650070]
[160.58584595 36.26259613]
[157.23065186 50.88253784]
[148.28433228 62.92260742]
[135.25448608 70.35384369]
[120.33689117 71.92395020]
[106.04541016 67.36833954]
[94.78742218 57.45338440]
[99.18842316 71.79323578]
[103.58941650 86.13307953]
[113.69354248 95.79735565]
[110.75042725 109.46591949]
[115.15142822 123.80577087]
[119.55242157 138.14561462]
[125.93103027 151.72181702]
[134.15983582 164.26322937]
[142.38864136 176.80462646]
[150.61744690 189.34602356]
[158.84626770 201.88742065]
[167.07507324 214.42881775]
[175.30387878 226.97023010]
[183.53268433 239.51162720]
[191.76148987 252.05302429]
[190.23463440 237.13093567]
[193.11508179 222.41009521]
[200.15362549 209.16401672]
[210.74137878 198.53858948]
[223.96238708 191.45304871]
[238.67291260 188.52035522]
[253.60032654 189.99420166]
[267.45327759 195.74711609]
[279.03332520 205.28137207]
[287.33871460 217.77220154]
[291.65090942 232.13900757]
[291.59686279 247.13890076]
[287.18130493 261.47427368]
[278.78616333 273.90493774]
[267.13772583 283.35556030]
[253.24369812 289.00851440]
[238.30604553 290.37478638]
[223.61703491 287.33621216]
[210.44741821 280.15560913]
[199.93853760 269.45703125]
[204.33953857 283.79687500]
[208.74053955 298.13674927]
[213.14154053 312.47659302]
[217.54254150 326.81643677]
[221.94352722 341.15628052]
[226.34452820 355.49612427]
[241.13534546 352.88619995]
[256.13476562 352.11373901]
[271.11544800 353.19039917]
[285.85025024 356.09991455]
[300.11578369 360.79815674]
[313.69586182 367.21389771]
[326.38452148 375.24987793]
[337.98947144 384.78427124]
[348.33477783 395.67254639]
[357.26358032 407.74966431]
[364.64050293 420.83248901]
[370.35379028 434.72268677]
[374.31674194 449.20974731]
[376.46936035 464.07400513]
[376.77893066 479.09011841]
[375.24084473 494.03045654]
[371.87835693 508.66851807]
[366.74246216 522.78240967]
[359.91104126 536.15820312]
[351.48760986 548.59307861]
[341.59988403 559.89849854]
[330.39779663 569.90313721]
[318.05111694 578.45526123]
[304.74703979 585.42529297]
[290.68725586 590.70751953]
[276.08489990 594.22186279]
[261.16134644 595.91510010]
[246.14282227 595.76153564]
[231.25701904 593.76348877]
[216.72958374 589.95123291]
[202.78076172 584.38256836]
[189.62200928 577.14190674]
[177.45280457 568.33905029]
[166.45764160 558.10748291]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 176]
[16 175]
[17 174]
[18 173]
[19 172]
[20 171]
[21 170]
[22 150]
[23 149]
[24 148]
[25 147]
[26 146]
[27 145]
[28 144]
[29 143]
[30 142]
[50 141]
[51 140]
[52 139]
[54 137]
[55 136]
[56 135]
[57 121]
[58 120]
[59 119]
[60 118]
[62 115]
[63 114]
[64 113]
[65 112]
[66 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
