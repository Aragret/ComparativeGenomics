%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[74.25790405 675.16815186]
[61.95209885 684.26898193]
[46.82469559 686.59716797]
[32.35186768 681.61761475]
[21.85935783 670.47467041]
[17.75827217 655.72882080]
[20.99100876 640.76861572]
[30.81470871 629.03173828]
[44.97195816 623.21533203]
[46.31019211 608.27514648]
[47.64842606 593.33496094]
[48.98666000 578.39477539]
[50.32489395 563.45458984]
[42.09413910 547.95550537]
[52.81219101 532.98199463]
[53.92783737 518.02355957]
[55.04348755 503.06512451]
[56.15913391 488.10665894]
[57.27478409 473.14819336]
[58.39043427 458.18975830]
[47.44630432 450.54330444]
[41.66319275 438.39013672]
[42.64824295 424.85870361]
[50.25082016 413.49124146]
[62.57403564 407.31634521]
[63.91226959 392.37615967]
[61.59173584 388.20193481]
[61.86879730 382.52563477]
[65.51925659 377.01333618]
[67.30172729 362.11959839]
[69.08419037 347.22589111]
[62.91410828 333.66937256]
[72.23647308 320.88641357]
[73.90801239 305.97982788]
[75.46853638 291.06121826]
[60.99003601 285.26312256]
[48.71771622 275.61489868]
[39.64915085 262.89038086]
[34.52440643 248.11396790]
[33.76567078 232.47795105]
[37.44247055 217.24652100]
[45.26539993 203.65342712]
[56.60886383 192.80206299]
[70.56112671 185.57592773]
[85.99757385 182.56671143]
[87.33580780 167.62652588]
[88.67404175 152.68634033]
[90.01227570 137.74615479]
[91.12792206 122.78769684]
[92.02073669 107.81429291]
[92.80206299 92.83465576]
[93.47184753 77.84961700]
[90.72875214 69.13679504]
[94.26480103 62.64694977]
[95.15761566 47.67354202]
[94.26480103 32.70013809]
[91.59900665 17.93892097]
[88.82339478 3.19795775]
[85.93811798 -11.52193356]
[73.51670074 -25.11567688]
[79.84736633 -41.48300934]
[76.74325562 -56.15831375]
[73.63914490 -70.83361816]
[70.53503418 -85.50891876]
[60.17020798 -93.18571472]
[57.88690567 -105.47270966]
[64.37294769 -115.68338776]
[61.48767090 -130.40327454]
[58.60240173 -145.12316895]
[54.15508652 -130.79762268]
[45.35047531 -118.65352631]
[33.11774445 -109.97249603]
[18.74784279 -105.67065430]
[3.75725532 -106.20198059]
[-10.27202225 -111.51040649]
[-21.85944748 -121.03572083]
[-29.78217125 -133.77268982]
[-33.20409012 -148.37715149]
[-31.76408005 -163.30787659]
[-25.61410904 -176.98916626]
[-15.40319920 -187.97723389]
[-2.20893168 -195.11244202]
[12.57627106 -197.64183044]
[27.39209175 -195.29843140]
[40.67498016 -188.32958984]
[51.02316666 -177.47071838]
[57.34462357 -163.86759949]
[58.23744202 -178.84100342]
[59.13025665 -193.81440735]
[60.02307129 -208.78781128]
[60.91588974 -223.76121521]
[61.80870438 -238.73463440]
[59.19599915 -244.80795288]
[59.93214035 -250.44313049]
[62.95757294 -254.13850403]
[64.29580688 -269.07867432]
[65.63404083 -284.01885986]
[66.97227478 -298.95904541]
[68.31050873 -313.89923096]
[54.39024734 -319.82220459]
[42.98292160 -329.75839233]
[35.20610046 -342.73440552]
[31.82168198 -357.47891235]
[33.16123581 -372.54745483]
[39.09352493 -386.46374512]
[49.03736877 -397.86441040]
[62.01856232 -405.63253784]
[76.76535034 -409.00708008]
[91.83298492 -407.65740967]
[105.74529266 -401.71578979]
[117.13929749 -391.76431274]
[124.89871979 -378.77792358]
[128.26338196 -364.02886963]
[126.90363312 -348.96215820]
[120.95269775 -335.05383301]
[110.99358368 -323.66650391]
[98.00199127 -315.91577148]
[83.25069427 -312.56100464]
[81.91246033 -297.62081909]
[80.57422638 -282.68063354]
[79.23599243 -267.74044800]
[77.89775848 -252.80026245]
[76.78211212 -237.84181213]
[75.88929749 -222.86840820]
[74.99647522 -207.89500427]
[74.10366058 -192.92160034]
[73.21084595 -177.94819641]
[72.31803131 -162.97477722]
[73.32228851 -148.00843811]
[76.20756531 -133.28854370]
[79.09283447 -118.56865692]
[91.32276154 -105.98310852]
[85.21033478 -88.61302948]
[88.31444550 -73.93772888]
[91.41855621 -59.26242447]
[94.52266693 -44.58712006]
[104.48669434 -37.72821045]
[107.19288635 -25.52737808]
[100.65801239 -14.40720654]
[103.54328918 0.31268507]
[107.91468811 6.27193308]
[106.36022186 15.27312469]
[109.02601624 30.03434181]
[113.83553314 15.82629585]
[123.16033173 4.07690716]
[135.90493774 -3.83351874]
[150.57214355 -6.97567225]
[165.43885803 -4.98041677]
[178.75852966 1.91784763]
[188.96641541 12.90871906]
[194.86326599 26.70100212]
[195.75636292 41.67439270]
[191.54074097 56.06982803]
[182.71168518 68.19615173]
[170.30641174 76.62877655]
[155.78227234 80.37704468]
[140.84556580 79.00061035]
[127.25102234 72.66117096]
[116.59572601 62.10349274]
[110.13101959 48.56636047]
[109.23820496 63.53976440]
[108.45688629 78.51940155]
[107.78710175 93.50444031]
[110.60183716 101.05757141]
[106.99414062 108.70710754]
[106.10132599 123.68051147]
[108.71403503 129.75384521]
[107.97789001 135.38900757]
[104.95246124 139.08438110]
[103.61422729 154.02456665]
[102.27599335 168.96475220]
[100.93775940 183.90493774]
[114.46821594 188.99089050]
[126.20875549 197.40216064]
[135.36100769 208.55902100]
[141.30462646 221.69532776]
[143.63929749 235.91111755]
[142.21174622 250.23425293]
[137.12576294 263.68688965]
[128.73463440 275.35226440]
[117.61672974 284.43716431]
[104.53549957 290.32583618]
[90.38714600 292.62176514]
[88.82662201 307.54037476]
[91.04625702 316.40100098]
[87.13019562 322.66888428]
[93.17278290 337.29071045]
[83.97790527 349.00836182]
[82.19544220 363.90206909]
[80.41297913 378.79580688]
[78.85245514 393.71438599]
[77.51422119 408.65457153]
[90.40683746 419.60339355]
[94.19539642 435.91744995]
[87.57978821 451.12255859]
[73.34888458 459.30538940]
[72.23323822 474.26385498]
[71.11759186 489.22229004]
[70.00193787 504.18075562]
[68.88629150 519.13922119]
[67.77064514 534.09765625]
[75.58063507 544.36248779]
[74.34346008 556.79846191]
[65.26508331 564.79278564]
[63.92684555 579.73297119]
[62.58861160 594.67315674]
[61.25037766 609.61334229]
[59.91214371 624.55352783]
[72.81033325 632.79339600]
[80.39177704 646.08929443]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 208]
[10 207]
[11 206]
[12 205]
[13 204]
[15 201]
[16 200]
[17 199]
[18 198]
[19 197]
[20 196]
[25 192]
[26 191]
[29 190]
[30 189]
[31 188]
[33 186]
[34 184]
[35 183]
[45 172]
[46 171]
[47 170]
[48 169]
[49 166]
[50 165]
[51 163]
[52 162]
[54 161]
[55 160]
[56 143]
[57 142]
[58 140]
[59 139]
[61 136]
[62 135]
[63 134]
[64 133]
[67 131]
[68 130]
[69 129]
[87 128]
[88 127]
[89 126]
[90 125]
[91 124]
[92 123]
[95 122]
[96 121]
[97 120]
[98 119]
[99 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
