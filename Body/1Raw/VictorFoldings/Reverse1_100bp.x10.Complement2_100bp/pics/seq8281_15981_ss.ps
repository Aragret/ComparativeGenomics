%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[65.06369019 455.09143066]
[64.66034698 440.04739380]
[67.20000458 425.21374512]
[72.58503723 411.16073608]
[80.60847473 398.42846680]
[90.96190643 387.50634766]
[103.24736786 378.81417847]
[116.99265289 372.68609619]
[113.67039490 358.05865479]
[110.34813690 343.43118286]
[107.02587891 328.80371094]
[103.70362091 314.17626953]
[100.12097931 328.74212646]
[92.93710327 341.90997314]
[82.62846375 352.80639648]
[69.87879944 360.70867920]
[55.53375626 365.09271240]
[40.54478073 365.66769409]
[25.90603828 362.39547729]
[12.58846951 355.49313354]
[1.47537625 345.41845703]
[-6.69614840 332.83966064]
[-11.38411617 318.59106445]
[-12.27759171 303.61767578]
[-9.31731415 288.91268921]
[-2.69962692 275.45141602]
[7.13654137 264.12667847]
[19.53879356 255.68959045]
[33.68453217 250.69979858]
[48.63552094 249.48823547]
[63.40011978 252.13525391]
[76.99903870 258.46530151]
[88.53031158 268.05850220]
[97.22911072 280.27859497]
[102.51966095 294.32006836]
[104.08017731 279.40145874]
[105.64070129 264.48284912]
[107.20122528 249.56425476]
[107.98255157 234.58462524]
[107.98255157 219.58462524]
[107.98255157 204.58462524]
[107.87088013 189.58503723]
[107.64755249 174.58670044]
[107.42422485 159.58836365]
[105.19911194 144.75431824]
[101.01210022 130.35054016]
[96.82508850 115.94675446]
[84.42077637 104.65475464]
[88.59729004 88.40874481]
[84.19628906 74.06889343]
[79.79529572 59.72904587]
[75.39429474 45.38919830]
[70.99330139 31.04935265]
[59.54755020 20.12665176]
[63.21015167 5.68938637]
[58.80915070 -8.65046120]
[54.40815353 -22.99030876]
[50.00715637 -37.33015442]
[45.93452835 -22.89361382]
[36.06647110 -11.59664822]
[22.30834961 -5.62052584]
[7.31663847 -6.11914110]
[-6.01399469 -12.99622059]
[-15.10961437 -24.92390633]
[-18.21399879 -39.59915161]
[-14.72773933 -54.18839264]
[-5.32397938 -65.87467957]
[8.18156338 -72.40157318]
[23.18117905 -72.50882721]
[36.77867889 -66.17574310]
[46.34917450 -54.62398911]
[44.56670761 -69.51770782]
[33.19075012 -83.99765778]
[40.72122574 -99.84880829]
[38.71721268 -114.71434021]
[36.71319580 -129.57986450]
[34.70918274 -144.44538879]
[32.70516968 -159.31092834]
[30.70115662 -174.17645264]
[28.69714355 -189.04197693]
[17.66546631 -178.87821960]
[2.81844854 -181.01504517]
[-4.89924097 -193.87728882]
[0.20159133 -207.98336792]
[14.36080170 -212.93481445]
[27.13984680 -205.08297729]
[26.24703026 -220.05639648]
[25.35421562 -235.02980042]
[24.46139908 -250.00320435]
[23.56858253 -264.97659302]
[15.02359962 -278.29177856]
[21.98964119 -291.45703125]
[21.09682655 -306.43041992]
[20.20401001 -321.40383911]
[5.55913925 -325.19631958]
[-7.19592810 -333.33041382]
[-16.81158066 -345.00921631]
[-22.34577370 -359.08856201]
[-23.25632477 -374.18908691]
[-19.45402527 -388.83142090]
[-11.31138897 -401.58102417]
[0.37385362 -411.18884277]
[14.45690155 -416.71362305]
[29.55804062 -417.61404419]
[44.19781494 -413.80194092]
[56.94197083 -405.65075684]
[66.54196167 -393.95907593]
[72.05728149 -379.87231445]
[72.94759369 -364.77059937]
[69.12567902 -350.13336182]
[60.96596146 -337.39468384]
[49.26785278 -327.80252075]
[35.17741394 -322.29666138]
[36.07023239 -307.32324219]
[36.96304703 -292.34982300]
[45.44417191 -280.10565186]
[38.54198837 -265.86941528]
[39.43480301 -250.89601135]
[40.32762146 -235.92260742]
[41.22043610 -220.94920349]
[42.11325073 -205.97579956]
[43.56267166 -191.04598999]
[45.56668472 -176.18046570]
[47.57069778 -161.31494141]
[49.57471085 -146.44940186]
[51.57872391 -131.58387756]
[53.58274078 -116.71835327]
[55.58675385 -101.85282135]
[65.01304626 -94.27182007]
[66.80428314 -81.90350342]
[59.46042633 -71.30017090]
[61.24289322 -56.40645599]
[64.34700012 -41.73115158]
[68.74800110 -27.39130592]
[73.14900208 -13.05145931]
[77.54999542 1.28838813]
[88.68095398 11.18540764]
[85.33314514 26.64835358]
[89.73414612 40.98820114]
[94.13513947 55.32804871]
[98.53614044 69.66789246]
[102.93714142 84.00774384]
[112.87877655 90.07446289]
[116.21287537 101.23354340]
[111.22886658 111.75974274]
[115.41587830 126.16352844]
[119.60289001 140.56730652]
[122.62664032 125.87523651]
[129.98779297 112.80567169]
[140.98471069 102.60432434]
[154.56927490 96.24351501]
[169.44665527 94.32952118]
[184.19885254 97.04476929]
[197.41978455 104.13046265]
[207.84930420 114.91123962]
[214.49334717 128.35954285]
[216.71864319 143.19355774]
[214.31307983 157.99940491]
[207.50595093 171.36589050]
[196.94607544 182.01901245]
[183.63993835 188.94337463]
[168.85580444 191.47897339]
[154.00279236 189.38417053]
[140.49661255 182.85859680]
[129.62457275 172.52423096]
[122.42256165 159.36503601]
[122.64588928 174.36337280]
[122.86921692 189.36170959]
[126.12605286 197.89581299]
[122.98255157 204.58462524]
[122.98255157 219.58462524]
[122.98255157 234.58462524]
[133.52690125 223.91613770]
[148.44969177 222.39620972]
[160.92843628 230.71974182]
[165.25799561 245.08131409]
[159.45898438 258.91500854]
[146.18260193 265.89627075]
[131.49865723 262.83331299]
[122.11983490 251.12478638]
[120.55931091 266.04339600]
[118.99878693 280.96200562]
[117.43826294 295.88058472]
[118.33107758 310.85400391]
[121.65333557 325.48147583]
[124.97559357 340.10891724]
[128.29785156 354.73638916]
[131.62011719 369.36383057]
[146.66397095 368.95318604]
[161.49882507 371.48565674]
[175.55447388 376.86386108]
[188.29063416 384.88110352]
[199.21777344 395.22924805]
[207.91589355 407.51049805]
[214.05065918 421.25277710]
[217.38624573 435.92794800]
[217.79444885 450.97186279]
[215.25959778 465.80630493]
[209.87910461 479.86108398]
[201.85980225 492.59594727]
[191.50990295 503.52142334]
[179.22724915 512.21752930]
[165.48394775 518.35009766]
[150.80825806 521.68328857]
[135.76426697 522.08905029]
[120.93023682 519.55181885]
[106.87633514 514.16906738]
[94.14276886 506.14767456]
[83.21897125 495.79602051]
[74.52483368 483.51196289]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 188]
[9 187]
[10 186]
[11 185]
[12 184]
[35 183]
[36 182]
[37 181]
[38 180]
[39 172]
[40 171]
[41 170]
[42 168]
[43 167]
[44 166]
[45 147]
[46 146]
[47 145]
[49 142]
[50 141]
[51 140]
[52 139]
[53 138]
[55 136]
[56 135]
[57 134]
[58 133]
[71 132]
[72 131]
[74 128]
[75 127]
[76 126]
[77 125]
[78 124]
[79 123]
[80 122]
[86 121]
[87 120]
[88 119]
[89 118]
[90 117]
[92 115]
[93 114]
[94 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
