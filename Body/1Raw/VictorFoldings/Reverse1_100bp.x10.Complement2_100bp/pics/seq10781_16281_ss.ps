%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[95.61125183 376.10177612]
[94.43257904 361.10906982]
[95.87545776 346.13946533]
[99.89604187 331.64785767]
[106.37215424 318.07470703]
[115.10699463 305.83239746]
[125.83511353 295.29302979]
[138.23049927 286.77682495]
[151.91647339 280.54263306]
[148.16017151 266.02056885]
[144.40386963 251.49851990]
[140.64756775 236.97645569]
[136.89126587 222.45439148]
[132.91917419 207.98986816]
[128.73216248 193.58609009]
[124.54515076 179.18231201]
[119.50823212 165.05328369]
[113.63927460 151.24909973]
[107.77031708 137.44491577]
[101.90135193 123.64074707]
[96.03239441 109.83657074]
[89.55289459 96.30821991]
[82.47579193 83.08269501]
[75.39868164 69.85717010]
[68.32157898 56.63164139]
[55.06701660 54.23765564]
[45.74737167 44.78489685]
[43.60545349 31.88163185]
[49.20221710 20.27535057]
[42.32280350 6.94592237]
[35.44339371 -6.38350677]
[28.56398010 -19.71293640]
[19.51397896 -31.67527199]
[8.55807018 -41.92066574]
[-2.39783931 -52.16605759]
[-13.35374832 -62.41144943]
[-24.30965805 -72.65683746]
[-35.26556778 -82.90222931]
[-46.29744339 -93.06578064]
[-57.40467834 -103.14691925]
[-68.51190948 -113.22805786]
[-79.61914825 -123.30919647]
[-90.63677979 -113.11600494]
[-102.50089264 -103.92186737]
[-115.12119293 -95.79675293]
[-128.40161133 -88.80249786]
[-142.24110413 -82.99233246]
[-156.53431702 -78.41047668]
[-171.17247009 -75.09180450]
[-186.04417419 -73.06156921]
[-201.03623962 -72.33522797]
[-216.03454590 -72.91831207]
[-230.92497253 -74.80637360]
[-245.59416199 -77.98504639]
[-259.93051147 -82.43013763]
[-273.82485962 -88.10781860]
[-287.17150879 -94.97488403]
[-299.86883545 -102.97905731]
[-311.82025146 -112.05943298]
[-322.93478394 -122.14689636]
[-333.12780762 -133.16467285]
[-342.32177734 -145.02891541]
[-350.44671631 -157.64932251]
[-357.44079590 -170.92985535]
[-363.25076294 -184.76942444]
[-367.83239746 -199.06269836]
[-371.15087891 -213.70089722]
[-373.18090820 -228.57263184]
[-373.90704346 -243.56469727]
[-373.32373047 -258.56301880]
[-371.43548584 -273.45339966]
[-368.25659180 -288.12255859]
[-363.81130981 -302.45883179]
[-358.13342285 -316.35311890]
[-351.26617432 -329.69964600]
[-343.26181030 -342.39688110]
[-334.18127441 -354.34817505]
[-324.09365845 -365.46252441]
[-313.07574463 -375.65542603]
[-301.21136475 -384.84921265]
[-288.59085083 -392.97399902]
[-275.31021118 -399.96786499]
[-261.47058105 -405.77764893]
[-247.17723083 -410.35910034]
[-232.53897095 -413.67736816]
[-217.66722107 -415.70718384]
[-202.67514038 -416.43310547]
[-187.67683411 -415.84960938]
[-172.78646851 -413.96112061]
[-158.11737061 -410.78204346]
[-143.78115845 -406.33654785]
[-129.88694763 -400.65847778]
[-116.54050446 -393.79101562]
[-103.84338379 -385.78649902]
[-91.89222717 -376.70578003]
[-80.77799988 -366.61801147]
[-70.58527374 -355.59994507]
[-61.39163589 -343.73544312]
[-53.26704788 -331.11480713]
[-46.27334976 -317.83407593]
[-40.46376801 -303.99435425]
[-35.88251495 -289.70095825]
[-32.56445694 -275.06265259]
[-30.53485298 -260.19085693]
[-29.80914307 -245.19877625]
[-30.39285278 -230.20048523]
[-32.28153992 -215.31015015]
[-35.46083069 -200.64108276]
[-39.90652847 -186.30493164]
[-45.58479691 -172.41081238]
[-52.45241928 -159.06445312]
[-60.45713043 -146.36744690]
[-69.53800964 -134.41642761]
[-58.43077469 -124.33528900]
[-47.32353973 -114.25415039]
[-36.21630478 -104.17301178]
[-29.15068817 -102.00532532]
[-25.02017593 -93.85813904]
[-14.06426620 -83.61274719]
[-3.10835719 -73.36735535]
[7.84755230 -63.12196732]
[18.80346107 -52.87657547]
[29.75937080 -42.63118362]
[24.51504326 -56.68454742]
[22.87959862 -71.59512329]
[24.95304108 -86.45112610]
[30.60857964 -100.34410858]
[39.50037766 -112.42449951]
[51.08470154 -121.95359039]
[64.65316010 -128.34866333]
[79.37603760 -131.21865845]
[94.35301971 -130.38809204]
[108.66826630 -125.90772247]
[121.44639587 -118.05155182]
[131.90602112 -107.29997253]
[139.40751648 -94.31046295]
[143.49218750 -79.87731934]
[143.91023254 -64.88314819]
[140.63609314 -50.24483871]
[133.86999512 -36.85753632]
[124.02567291 -25.53987503]
[111.70512390 -16.98393631]
[97.66175079 -11.71291924]
[82.75431061 -10.04914761]
[67.89439392 -12.09436226]
[53.99069595 -17.72349739]
[41.89340973 -26.59234810]
[48.77281952 -13.26291943]
[55.65223312 0.06650970]
[62.53164673 13.39593887]
[78.75706482 17.82025719]
[86.92312622 32.90768051]
[81.54710388 49.55453491]
[88.62421417 62.78006363]
[95.70131683 76.00559235]
[102.77842712 89.23111725]
[108.15128326 75.22639465]
[121.79662323 68.99703979]
[135.89776611 74.11151123]
[142.37693787 87.64001465]
[137.52256775 101.83280182]
[124.11547852 108.55960083]
[109.83657074 103.96760559]
[115.70552826 117.77178192]
[121.57449341 131.57595825]
[127.44345093 145.38014221]
[133.31240845 159.18431091]
[137.98248291 144.92982483]
[150.07131958 136.04949951]
[165.07006836 135.85546875]
[177.38456726 144.42012024]
[182.42181396 158.54902649]
[178.30305481 172.97247314]
[166.56446838 182.31086731]
[151.58425903 183.08120728]
[138.94892883 174.99530029]
[143.13594055 189.39907837]
[147.32295227 203.80285645]
[151.82334900 208.64620972]
[153.02220154 214.20137024]
[151.41333008 218.69808960]
[155.16963196 233.22015381]
[158.92593384 247.74221802]
[162.68223572 262.26428223]
[166.43853760 276.78631592]
[181.43086243 275.60253906]
[196.40095520 277.04034424]
[210.89390564 281.05599976]
[224.46928406 287.52749634]
[236.71455383 296.25814819]
[247.25758362 306.98269653]
[255.77798462 319.37518311]
[262.01684570 333.05905151]
[265.78454590 347.61840820]
[266.96664429 362.61087036]
[265.52716064 377.58081055]
[261.50985718 392.07330322]
[255.03681946 405.64794922]
[246.30476379 417.89221191]
[235.57902527 428.43402100]
[223.18557739 436.95303345]
[209.50100708 443.19033813]
[194.94120789 446.95639038]
[179.94862366 448.13677979]
[164.97883606 446.69558716]
[150.48680115 442.67666626]
[136.91288757 436.20208740]
[124.66960907 427.46862793]
[114.12901306 416.74169922]
[105.61141968 404.34729004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 185]
[10 184]
[11 183]
[12 182]
[13 181]
[14 178]
[15 177]
[16 176]
[17 167]
[18 166]
[19 165]
[20 164]
[21 163]
[22 156]
[23 155]
[24 154]
[25 153]
[29 150]
[30 149]
[31 148]
[32 147]
[33 123]
[34 122]
[35 121]
[36 120]
[37 119]
[38 118]
[39 116]
[40 115]
[41 114]
[42 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
