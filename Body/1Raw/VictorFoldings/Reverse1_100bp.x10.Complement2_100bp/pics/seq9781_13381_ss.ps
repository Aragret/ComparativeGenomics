%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[46.12226868 639.39849854]
[35.06144714 649.54980469]
[23.03037071 658.53002930]
[10.15249634 666.24694824]
[-3.44002581 672.62145996]
[-17.60771370 677.58813477]
[-32.20518494 681.09594727]
[-47.08264542 683.10894775]
[-62.08742905 683.60650635]
[-77.06555939 682.58343506]
[-91.86333466 680.05029297]
[-106.32891083 676.03308105]
[-120.31384277 670.57299805]
[-133.67462158 663.72601318]
[-146.27415466 655.56256104]
[-157.98313904 646.16619873]
[-168.68142700 635.63354492]
[-178.25923157 624.07250977]
[-186.61827087 611.60186768]
[-193.67276001 598.34948730]
[-199.35032654 584.45141602]
[-203.59268188 570.05029297]
[-206.35632324 555.29382324]
[-207.61286926 540.33343506]
[-207.34944153 525.32275391]
[-205.56874084 510.41567993]
[-202.28901672 495.76525879]
[-197.54396057 481.52185059]
[-191.38223267 467.83154297]
[-183.86708069 454.83486938]
[-175.07562256 442.66519165]
[-165.09805298 431.44738770]
[-154.03678894 421.29653931]
[-142.00531006 412.31686401]
[-129.12710571 404.60049438]
[-115.53430176 398.22656250]
[-101.36639404 393.26052856]
[-86.76876831 389.75335693]
[-71.89122009 387.74099731]
[-56.88641357 387.24414062]
[-41.90832901 388.26785278]
[-27.11066246 390.80163574]
[-12.64526367 394.81951904]
[-7.18990660 380.84671021]
[-1.73454940 366.87390137]
[3.72080755 352.90112305]
[9.17616463 338.92831421]
[14.63152218 324.95550537]
[20.08687973 310.98272705]
[25.54223633 297.00991821]
[30.99759293 283.03713989]
[36.45294952 269.06433105]
[41.90830612 255.09153748]
[39.32964706 240.42184448]
[51.55608749 230.38069153]
[56.48767853 216.21455383]
[60.88867569 201.87471008]
[65.28967285 187.53486633]
[69.69067383 173.19500732]
[74.09167480 158.85516357]
[78.49266815 144.51531982]
[71.30907440 131.51795959]
[75.56803131 116.91261292]
[89.24957275 109.46591949]
[86.30645752 95.79735565]
[96.41058350 86.13307953]
[100.81157684 71.79323578]
[97.46376801 56.33028412]
[108.59472656 46.43326569]
[94.32208252 51.04755783]
[81.73195648 42.89349747]
[80.10531616 27.98195648]
[90.64126587 17.30516815]
[105.57308960 18.73366165]
[113.89337158 31.21277237]
[119.34873199 17.23997498]
[124.80408478 3.26717663]
[130.25944519 -10.70562077]
[135.71479797 -24.67841911]
[123.06660461 -16.61472130]
[108.08576965 -15.85672379]
[94.68824768 -22.60256386]
[86.37611389 -35.08889389]
[85.32215118 -50.05181885]
[91.80184937 -63.58006668]
[104.12143707 -72.13738251]
[119.06060791 -73.48690796]
[132.71429443 -67.27587891]
[141.51345825 -55.12784576]
[143.15814209 -40.21915054]
[150.62588501 -53.22809982]
[158.09362793 -66.23705292]
[165.56137085 -79.24600220]
[173.02909851 -92.25495911]
[180.49684143 -105.26390839]
[180.65698242 -121.08430481]
[193.70352173 -128.27018738]
[201.17126465 -141.27914429]
[189.16247559 -150.29962158]
[178.35327148 -160.72749329]
[168.90748596 -172.40467834]
[160.96832275 -185.15415955]
[154.65612793 -198.78265381]
[150.06661987 -213.08357239]
[147.26934814 -227.84008789]
[146.30674744 -242.82852173]
[147.19337463 -257.82162476]
[149.91580200 -272.59213257]
[154.43276978 -286.91613770]
[160.67579651 -300.57644653]
[168.55023193 -313.36599731]
[177.93670654 -325.09091187]
[188.69293213 -335.57345581]
[200.65582275 -344.65466309]
[213.64405823 -352.19692993]
[227.46070862 -358.08587646]
[241.89634705 -362.23220825]
[256.73208618 -364.57312012]
[271.74307251 -365.07312012]
[286.70172119 -363.72457886]
[301.38125610 -360.54800415]
[315.55917358 -355.59149170]
[329.02047729 -348.93020630]
[341.56115723 -340.66513062]
[352.99105835 -330.92160034]
[363.13693237 -319.84725952]
[371.84494019 -307.61001587]
[378.98312378 -294.39538574]
[384.44320679 -280.40371704]
[388.14245605 -265.84710693]
[390.02478027 -250.94621277]
[390.06167603 -235.92695618]
[388.25253296 -221.01699829]
[384.62478638 -206.44239807]
[379.23345947 -192.42407227]
[372.16024780 -179.17456055]
[363.51242065 -166.89471436]
[353.42105103 -155.77070618]
[342.03912354 -145.97113037]
[329.53921509 -137.64459229]
[316.11074829 -130.91729736]
[301.95736694 -125.89124298]
[287.29360962 -122.64260864]
[272.34176636 -121.22064209]
[257.32849121 -121.64691162]
[242.48143005 -123.91495514]
[228.02561951 -127.99037933]
[214.18020630 -133.81140137]
[206.71247864 -120.80245209]
[207.08648682 -105.91254425]
[193.50579834 -97.79617310]
[186.03805542 -84.78721619]
[178.57031250 -71.77826691]
[171.10256958 -58.76931381]
[163.63484192 -45.76036072]
[156.16709900 -32.75140762]
[149.68759155 -19.22306252]
[144.23223877 -5.25026417]
[138.77688599 8.72253323]
[133.32153320 22.69533157]
[127.86617279 36.66812897]
[122.93457794 50.83426285]
[126.59717560 65.27153015]
[115.15142822 76.19422913]
[110.75042725 90.53408051]
[113.69354248 104.20264435]
[103.58941650 113.86692047]
[110.73804474 127.70653534]
[106.07052612 142.18647766]
[92.83251953 148.91632080]
[88.43151855 163.25616455]
[84.03051758 177.59600830]
[79.62952423 191.93585205]
[75.22852325 206.27571106]
[70.82752991 220.61555481]
[85.10016632 216.00126648]
[97.69029999 224.15531921]
[99.31693268 239.06686401]
[88.78099060 249.74365234]
[73.84916687 248.31515503]
[65.52888489 235.83604431]
[67.71733856 251.50515747]
[55.88110352 260.54687500]
[50.42574692 274.51968384]
[44.97039032 288.49249268]
[39.51503372 302.46527100]
[34.05967712 316.43807983]
[28.60432053 330.41088867]
[23.14896202 344.38366699]
[17.69360542 358.35647583]
[12.23824883 372.32928467]
[6.78289127 386.30206299]
[1.32753432 400.27487183]
[14.68861866 407.12121582]
[27.28850746 415.28417969]
[38.99790192 424.67996216]
[49.69665146 435.21218872]
[59.27496338 446.77276611]
[67.63455200 459.24307251]
[74.68962860 472.49511719]
[80.36779785 486.39294434]
[84.61080170 500.79391479]
[87.37508392 515.55023193]
[88.63229370 530.51055908]
[88.36952972 545.52130127]
[86.58947754 560.42840576]
[83.31040192 575.07897949]
[78.56596375 589.32257080]
[72.40484619 603.01318359]
[64.89026642 616.01019287]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 193]
[44 192]
[45 191]
[46 190]
[47 189]
[48 188]
[49 187]
[50 186]
[51 185]
[52 184]
[53 183]
[55 181]
[56 175]
[57 174]
[58 173]
[59 172]
[60 171]
[61 170]
[64 167]
[66 165]
[67 164]
[69 162]
[75 161]
[76 160]
[77 159]
[78 158]
[79 157]
[90 156]
[91 155]
[92 154]
[93 153]
[94 152]
[95 151]
[97 149]
[98 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
