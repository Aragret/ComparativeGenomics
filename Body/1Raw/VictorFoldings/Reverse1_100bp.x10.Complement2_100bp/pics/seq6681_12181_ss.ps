%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[77.72488403 667.60693359]
[63.45938110 672.29296875]
[48.76495743 675.38116455]
[33.81998444 676.83410645]
[18.80588531 676.63409424]
[3.90491438 674.78363037]
[-10.70204449 671.30517578]
[-24.83767509 666.24084473]
[-38.33038330 659.65222168]
[-51.01638031 651.61926270]
[-62.74167252 642.23944092]
[-73.36392212 631.62664795]
[-82.75418854 619.90972900]
[-90.79847717 607.23095703]
[-97.39913940 593.74407959]
[-102.47605133 579.61297607]
[-105.96758270 565.00915527]
[-107.83135223 550.10986328]
[-108.04473114 535.09594727]
[-106.60513306 520.14965820]
[-103.53002930 505.45248413]
[-98.85675049 491.18280029]
[-92.64202881 477.51385498]
[-84.96130371 464.61154175]
[-75.90780640 452.63250732]
[-65.59144592 441.72213745]
[-54.13745499 432.01290894]
[-41.68486404 423.62265015]
[-28.38484383 416.65325928]
[-14.39884281 411.18930054]
[0.10336240 407.29708862]
[14.94572735 405.02389526]
[29.94808006 404.39730835]
[44.92830658 405.42495728]
[47.59410095 390.66372681]
[50.25989532 375.90252686]
[52.92569351 361.14129639]
[55.59148788 346.38009644]
[58.25728226 331.61886597]
[51.44211197 315.44726562]
[63.45328903 301.48971558]
[65.89901733 286.69046021]
[68.34474182 271.89117432]
[62.78614426 258.07266235]
[72.67000580 245.71873474]
[75.11573029 230.91946411]
[68.06053925 214.85113525]
[79.86257935 200.71629333]
[82.08769989 185.88224792]
[84.31281281 171.04821777]
[86.53793335 156.21417236]
[88.43122101 141.33413696]
[89.99174500 126.41552734]
[91.44116211 111.48571777]
[85.73317719 98.72208405]
[93.61865234 87.17604828]
[94.95688629 72.23586273]
[96.07253265 57.27740860]
[89.17034912 43.04117203]
[97.65147400 30.79699707]
[98.54428864 15.82359028]
[90.76259613 28.64721298]
[79.44018555 38.48606491]
[65.65623474 44.40236664]
[50.72454071 45.83221817]
[36.06829453 42.63933182]
[23.08444405 35.12803650]
[13.01051998 24.01425934]
[6.80670881 10.35729218]
[5.06431627 -4.54116583]
[7.94941711 -19.26109123]
[15.18702126 -32.39947128]
[26.08728600 -42.70404434]
[39.61127090 -49.19264221]
[54.46995163 -51.24681091]
[69.24709320 -48.67076111]
[82.53424072 -41.71002579]
[93.06493378 -31.02805901]
[99.83546448 -17.64299774]
[102.20051575 -2.82948279]
[107.02651215 -17.03193855]
[111.85250854 -31.23439407]
[116.67850494 -45.43685150]
[121.50450134 -59.63930511]
[126.33049774 -73.84175873]
[123.44456482 -89.39752960]
[134.86526489 -98.95874786]
[139.26626587 -113.29859924]
[143.23835754 -127.76312256]
[147.21044922 -142.22764587]
[151.18254089 -156.69216919]
[155.04685974 -171.18586731]
[158.80314636 -185.70791626]
[162.55944824 -200.22998047]
[148.75257874 -206.16888428]
[136.01412964 -214.14588928]
[124.64274597 -223.97399902]
[114.90496063 -235.42285156]
[107.02905273 -248.22404480]
[101.19963837 -262.07751465]
[97.55338287 -276.65847778]
[96.17574310 -291.62521362]
[97.09901428 -306.62680054]
[100.30156708 -321.31161499]
[105.70831299 -335.33544922]
[113.19252014 -348.36950684]
[122.57875061 -360.10830688]
[133.64697266 -370.27664185]
[146.13772583 -378.63616943]
[159.75820923 -384.99090576]
[174.18914795 -389.19189453]
[189.09225464 -391.14068604]
[204.11819458 -390.79156494]
[218.91470337 -388.15274048]
[233.13496399 -383.28604126]
[246.44561768 -376.30557251]
[258.53463745 -367.37493896]
[269.11865234 -356.70355225]
[277.94955444 -344.54147339]
[284.82034302 -331.17388916]
[289.56994629 -316.91409302]
[292.08700562 -302.09637451]
[292.31256104 -287.06808472]
[290.24130249 -272.18148804]
[285.92178345 -257.78558350]
[279.45526123 -244.21780396]
[270.99331665 -231.79621887]
[260.73431396 -220.81199646]
[248.91871643 -211.52261353]
[235.82354736 -204.14584351]
[221.75573730 -198.85458374]
[207.04507446 -195.77290344]
[192.03639221 -194.97302246]
[177.08151245 -196.47367859]
[173.32521057 -181.95161438]
[169.56890869 -167.42956543]
[170.93724060 -160.16667175]
[165.64706421 -152.72007751]
[161.67497253 -138.25555420]
[157.70288086 -123.79102325]
[153.73078918 -109.32649994]
[154.99848938 -106.82629395]
[155.35223389 -103.67327881]
[154.53837585 -100.21307373]
[152.43301392 -96.87660980]
[149.06771851 -94.13275146]
[152.29884338 -79.59284210]
[140.53295898 -69.01576233]
[135.70695496 -54.81330872]
[130.88096619 -40.61085129]
[126.05496216 -26.40839577]
[121.22896576 -12.20594120]
[116.40296936 1.99651492]
[113.51769257 16.71640587]
[112.62487793 31.68981171]
[119.59091949 44.85505295]
[111.04593658 58.17022324]
[113.48972321 62.27350998]
[113.38179016 67.95553589]
[109.89707184 73.57409668]
[108.55883789 88.51428223]
[114.26682281 101.27791595]
[106.38134766 112.82395172]
[108.73266602 121.65056610]
[104.91035461 127.97605133]
[103.34983063 142.89465332]
[105.47692108 147.66146851]
[105.55503082 152.30337524]
[103.97486877 156.06077576]
[101.37197113 158.43928528]
[99.14685822 173.27333069]
[96.92173767 188.10737610]
[94.69662476 202.94142151]
[101.72151947 213.75869751]
[99.56282806 226.06820679]
[89.91500092 233.36518860]
[87.46927643 248.16445923]
[92.85293579 263.04150391]
[83.14401245 274.33691406]
[80.69828796 289.13616943]
[78.25255585 303.93545532]
[85.11562347 314.85614014]
[82.77389526 327.13211060]
[73.01850128 334.28466797]
[70.35270691 349.04586792]
[67.68691254 363.80709839]
[65.02111053 378.56829834]
[62.35531998 393.32952881]
[59.68952179 408.09075928]
[74.08291626 412.36782837]
[87.91842651 418.20236206]
[101.02809906 425.52352905]
[113.25280762 434.24249268]
[124.44413757 444.25332642]
[134.46624756 455.43460083]
[143.19747925 467.65051270]
[150.53182983 480.75283813]
[156.38027954 494.58245850]
[160.67182922 508.97155762]
[163.35440063 523.74542236]
[164.39540100 538.72473145]
[163.78221130 553.72760010]
[161.52226257 568.57202148]
[157.64300537 583.07769775]
[152.19151306 597.06854248]
[145.23397827 610.37475586]
[136.85485840 622.83483887]
[127.15584564 634.29748535]
[116.25469971 644.62359619]
[104.28373718 653.68780518]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 189]
[35 188]
[36 187]
[37 186]
[38 185]
[39 184]
[41 181]
[42 180]
[43 179]
[45 177]
[46 176]
[48 173]
[49 172]
[50 171]
[51 170]
[52 166]
[53 165]
[54 163]
[56 161]
[57 160]
[58 157]
[60 155]
[61 154]
[80 153]
[81 152]
[82 151]
[83 150]
[84 149]
[85 148]
[87 146]
[88 141]
[89 140]
[90 139]
[91 138]
[92 136]
[93 135]
[94 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
