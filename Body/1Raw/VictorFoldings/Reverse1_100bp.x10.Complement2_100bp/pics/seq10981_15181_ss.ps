%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[49.95194244 409.08236694]
[48.20530319 423.99435425]
[44.90948486 438.64205933]
[40.10059738 452.86499023]
[33.83132553 466.50735474]
[26.17036247 479.41964722]
[17.20164490 491.46041870]
[7.02343893 502.49771118]
[-4.25273657 512.41058350]
[-16.50333405 521.09051514]
[-29.59412956 528.44226074]
[-43.38169479 534.38543701]
[-57.71496201 538.85479736]
[-72.43688965 541.80139160]
[-87.38617706 543.19299316]
[-102.39903259 543.01428223]
[-117.31095886 541.26727295]
[-131.95858765 537.97113037]
[-146.18142700 533.16186523]
[-159.82362366 526.89227295]
[-172.73573303 519.23101807]
[-184.77627563 510.26199341]
[-195.81332397 500.08352661]
[-205.72595215 488.80709839]
[-214.40554810 476.55630493]
[-221.75701904 463.46533203]
[-227.69981384 449.67761230]
[-232.16882324 435.34423828]
[-235.11508179 420.62225342]
[-236.50630188 405.67291260]
[-236.32725525 390.66006470]
[-234.57989502 375.74816895]
[-231.28335571 361.10064697]
[-226.47378540 346.87792969]
[-220.20384216 333.23587036]
[-212.54225159 320.32394409]
[-203.57295227 308.28363037]
[-193.39421082 297.24682617]
[-182.11755371 287.33447266]
[-169.86653137 278.65518188]
[-156.77537537 271.30401611]
[-142.98753357 265.36157227]
[-128.65403748 260.89291382]
[-113.93197632 257.94699097]
[-98.98262024 256.55612183]
[-83.96977234 256.73553467]
[-69.05792236 258.48327637]
[-54.41046143 261.78015137]
[-40.18786240 266.59008789]
[-26.54595947 272.86035156]
[-13.63422298 280.52224731]
[-4.67352724 268.49288940]
[4.28716898 256.46350098]
[13.24786472 244.43412781]
[22.20856094 232.40473938]
[23.60658073 217.57589722]
[38.05551910 211.13082886]
[47.01621246 199.10145569]
[55.97690964 187.07208252]
[64.93760681 175.04270935]
[73.89830017 163.01332092]
[80.27690887 149.43711853]
[83.81658173 134.86074829]
[87.35625458 120.28437042]
[90.89592743 105.70799255]
[91.78874207 90.73458862]
[82.46637726 77.95162964]
[88.63645935 64.39510345]
[86.85398865 49.50138474]
[85.07152557 34.60766602]
[82.34689331 31.22678566]
[80.97755432 27.52686310]
[80.89737701 23.97313690]
[81.89593506 20.96157837]
[83.65360260 18.77783203]
[82.76078796 3.80442643]
[81.86797333 -11.16897964]
[80.97515106 -26.14238548]
[80.08233643 -41.11579132]
[65.09497070 -42.10679626]
[50.35000229 -44.96845245]
[36.07997513 -49.65562820]
[22.50995445 -56.09439468]
[9.85395432 -64.18321228]
[-1.68841887 -73.79449463]
[-11.93512630 -84.77667236]
[-20.72456360 -96.95653534]
[-27.91810608 -110.14199066]
[-33.40230179 -124.12508392]
[-37.09066010 -138.68527222]
[-38.92501068 -153.59294128]
[-38.87641525 -168.61296082]
[-36.94564819 -183.50843811]
[-33.16315842 -198.04446411]
[-27.58860207 -211.99177551]
[-20.30989456 -225.13040161]
[-11.44183445 -237.25314331]
[-1.12428260 -248.16879272]
[10.48003769 -257.70520020]
[23.18810844 -265.71194458]
[36.79950714 -272.06277466]
[51.09956360 -276.65753174]
[65.86273956 -279.42370605]
[80.85620880 -280.31771851]
[95.84349060 -279.32546997]
[110.58821869 -276.46255493]
[124.85784912 -271.77420044]
[138.42732239 -265.33428955]
[151.08264160 -257.24438477]
[162.62420654 -247.63214111]
[172.86999512 -236.64909363]
[181.65840149 -224.46849060]
[188.85084534 -211.28244019]
[194.33386230 -197.29888916]
[198.02099609 -182.73838806]
[199.85408020 -167.83056641]
[199.80422974 -152.81054688]
[197.87220764 -137.91523743]
[194.08850098 -123.37952423]
[188.51275635 -109.43268585]
[181.23295593 -96.29466248]
[172.36386108 -84.17267609]
[162.04539490 -73.25789642]
[150.44027710 -63.72246933]
[137.73153687 -55.71678162]
[124.11959839 -49.36709595]
[109.81915283 -44.77355576]
[95.05574036 -42.00860596]
[95.94856262 -27.03520012]
[96.84137726 -12.06179523]
[97.73419189 2.91161060]
[98.62700653 17.88501549]
[99.96524048 32.82520294]
[101.74771118 47.71891785]
[103.53017426 62.61263657]
[112.72504425 74.33029938]
[106.68245697 88.95211792]
[111.69354248 74.81391144]
[119.90132141 62.25873566]
[130.84159851 51.99665451]
[143.89566040 44.60803604]
[158.32521057 40.51074600]
[173.31422424 39.93650055]
[188.01496887 42.91778183]
[201.59605408 49.28598022]
[213.28941345 58.68094254]
[222.43373108 70.57134247]
[228.51184082 84.28471375]
[231.17999268 99.04550171]
[230.28730774 114.01891327]
[225.88426208 128.35813904]
[218.21986389 141.25219727]
[207.72756958 151.97189331]
[195.00079346 159.91098022]
[180.75926208 164.62043762]
[165.80844116 165.83393860]
[150.99383545 163.48286438]
[137.15330505 157.70016479]
[125.06958771 148.81286621]
[115.42608643 137.32362366]
[108.76818085 123.88217926]
[105.47229767 109.24766541]
[101.93262482 123.82403564]
[98.39295197 138.40042114]
[94.85327911 152.97679138]
[104.46903229 141.46430969]
[116.30757141 132.25296021]
[129.83032227 125.76179504]
[144.42208862 122.28612518]
[159.41905212 121.98406982]
[174.13894653 124.86936951]
[187.91209412 130.81076050]
[200.11193848 139.53794861]
[210.18345642 150.65391541]
[217.66845703 163.65293884]
[222.22642517 177.94366455]
[223.65000916 192.87596130]
[221.87443542 207.77050781]
[216.98048401 221.94969177]
[209.19081116 234.76846313]
[198.85977173 245.64364624]
[186.45738220 254.08050537]
[172.54785156 259.69522095]
[157.76397705 262.23233032]
[142.77832031 261.57644653]
[128.27262878 257.75741577]
[114.90682983 250.94892883]
[103.28897095 241.46076965]
[93.94757843 229.72456360]
[87.30762482 216.27424622]
[83.67119598 201.72171021]
[83.20371246 186.72898865]
[85.92768097 171.97401428]
[76.96698761 184.00340271]
[68.00628662 196.03277588]
[59.04559326 208.06214905]
[50.08489609 220.09153748]
[48.04594803 235.78080750]
[34.23793793 241.36544800]
[25.27724266 253.39482117]
[16.31654739 265.42419434]
[7.35585022 277.45358276]
[-1.60484552 289.48294067]
[9.43269539 299.66088867]
[19.34586906 310.93682861]
[28.02606010 323.18722534]
[35.37816620 336.27783203]
[41.32163239 350.06524658]
[45.79133606 364.39840698]
[48.73831177 379.12026978]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 203]
[52 202]
[53 201]
[54 200]
[55 199]
[57 197]
[58 196]
[59 195]
[60 194]
[61 193]
[62 165]
[63 164]
[64 163]
[65 162]
[66 137]
[68 135]
[69 134]
[70 133]
[75 132]
[76 131]
[77 130]
[78 129]
[79 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
