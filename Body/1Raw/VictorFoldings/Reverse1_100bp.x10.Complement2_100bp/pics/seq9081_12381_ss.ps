%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[58.65829849 642.39685059]
[43.79923630 644.67816162]
[28.76664543 644.54626465]
[13.94990921 642.00445557]
[-0.26718196 637.11871338]
[-13.51637268 630.01556396]
[-25.45447731 620.87896729]
[-35.77227020 609.94555664]
[-44.20249557 597.49853516]
[-50.52678680 583.86041260]
[-54.58133698 569.38433838]
[-56.26111603 554.44531250]
[-55.52261734 539.43023682]
[-52.38497162 524.72821045]
[-46.92944717 510.71984863]
[-39.29735947 497.76812744]
[-29.68639183 486.20846558]
[-18.34549904 476.34033203]
[-5.56843138 468.41928101]
[8.31385136 462.65054321]
[22.94176483 459.18350220]
[37.93641281 458.10800171]
[39.27464676 443.16781616]
[40.61288071 428.22763062]
[38.29235077 424.05340576]
[38.56940842 418.37710571]
[42.21987152 412.86480713]
[44.00233841 397.97106934]
[45.78480148 383.07736206]
[47.56726837 368.18365479]
[49.34973526 353.28991699]
[47.72516251 351.00543213]
[46.90762329 347.93978882]
[47.19918060 344.39712524]
[48.78631973 340.78527832]
[51.70735168 337.57254028]
[54.37314606 322.81134033]
[57.03894424 308.05010986]
[59.70473862 293.28890991]
[62.37053299 278.52767944]
[65.03633118 263.76644897]
[54.86550140 250.37269592]
[57.58208084 233.43353271]
[71.98728943 223.50834656]
[74.43301392 208.70907593]
[76.87873840 193.90980530]
[79.32447052 179.11053467]
[81.77019501 164.31126404]
[67.91878510 158.64349365]
[55.67554855 150.03605652]
[45.65420151 138.92041016]
[38.35709763 125.85375977]
[34.15003204 111.49111938]
[33.24388885 96.55244446]
[35.68409348 81.78659058]
[41.34832382 67.93373871]
[49.95264053 55.68830490]
[61.06573486 45.66412735]
[74.13052368 38.36369324]
[88.49209595 34.15296173]
[103.43053436 33.24301147]
[105.87625885 18.44373894]
[108.32199097 3.64446878]
[110.65747833 -11.17259884]
[112.88259125 -26.00664330]
[115.10771179 -40.84068680]
[116.33468628 -55.79042053]
[116.55801392 -70.78875732]
[116.78134155 -85.78709412]
[117.00466919 -100.78543091]
[117.22799683 -115.78376770]
[117.45132446 -130.78210449]
[117.67465210 -145.78044128]
[117.89797974 -160.77877808]
[105.48599243 -173.10606384]
[105.82308197 -190.25836182]
[118.21233368 -201.63136292]
[118.21233368 -216.63136292]
[118.21233368 -231.63136292]
[118.21233368 -246.63136292]
[118.21233368 -261.63134766]
[118.21233368 -276.63134766]
[118.21233368 -291.63134766]
[118.21233368 -306.63134766]
[118.21233368 -321.63134766]
[118.21233368 -336.63134766]
[118.21233368 -351.63134766]
[118.21233368 -366.63134766]
[107.31777954 -377.76449585]
[107.53146362 -392.97662354]
[118.21233368 -403.29431152]
[118.21233368 -418.29431152]
[118.21233368 -433.29431152]
[118.21233368 -448.29431152]
[118.21233368 -463.29431152]
[118.21233368 -478.29431152]
[118.21233368 -493.29431152]
[118.21233368 -508.29431152]
[118.21233368 -523.29431152]
[104.43846893 -529.87023926]
[94.88854218 -541.77661133]
[91.45870209 -556.64941406]
[94.82994843 -571.53552246]
[104.33290863 -583.47943115]
[118.08078003 -590.10955811]
[133.34388733 -590.10955811]
[147.09176636 -583.47943115]
[156.59472656 -571.53552246]
[159.96597290 -556.64941406]
[156.53613281 -541.77661133]
[146.98620605 -529.87023926]
[133.21234131 -523.29431152]
[133.21234131 -508.29431152]
[133.21234131 -493.29431152]
[133.21234131 -478.29431152]
[133.21234131 -463.29431152]
[133.21234131 -448.29431152]
[133.21234131 -433.29431152]
[133.21234131 -418.29431152]
[133.21234131 -403.29431152]
[143.89320374 -392.97662354]
[144.10688782 -377.76449585]
[133.21234131 -366.63134766]
[133.21234131 -351.63134766]
[133.21234131 -336.63134766]
[133.21234131 -321.63134766]
[133.21234131 -306.63134766]
[133.21234131 -291.63134766]
[133.21234131 -276.63134766]
[133.21234131 -261.63134766]
[133.21234131 -246.63136292]
[133.21234131 -231.63136292]
[133.21234131 -216.63136292]
[133.21234131 -201.63136292]
[143.50874329 -193.88452148]
[147.52316284 -181.43595886]
[143.57675171 -168.76171875]
[132.89631653 -160.55545044]
[132.67298889 -145.55711365]
[132.44966125 -130.55877686]
[132.22633362 -115.56044006]
[132.00300598 -100.56210327]
[131.77967834 -85.56376648]
[131.55635071 -70.56542969]
[131.33302307 -55.56709290]
[140.82337952 -67.18315887]
[155.05400085 -71.92546082]
[169.61537170 -68.32454681]
[179.99548340 -57.49619675]
[182.97796631 -42.79569244]
[177.63864136 -28.77814484]
[165.63197327 -19.78704453]
[150.67834473 -18.60838127]
[137.41131592 -25.60737801]
[129.94175720 -38.61557007]
[127.71663666 -23.78152466]
[125.49151611 -8.94748211]
[127.60801697 -1.86636341]
[123.12126160 6.09019613]
[120.67552948 20.88946724]
[118.22980499 35.68873978]
[132.08120728 41.35649872]
[144.32444763 49.96394348]
[154.34579468 61.07958984]
[161.64289856 74.14624023]
[165.84997559 88.50888062]
[166.75611877 103.44755554]
[164.31590271 118.21340942]
[158.65167236 132.06625366]
[150.04736328 144.31169128]
[138.93426514 154.33587646]
[125.86947632 161.63630676]
[111.50790405 165.84703064]
[96.56946564 166.75698853]
[94.12374115 181.55625916]
[91.67800903 196.35552979]
[89.23228455 211.15480042]
[86.78656006 225.95407104]
[95.83855438 235.92782593]
[97.46968079 249.10166931]
[91.30680847 260.63861084]
[79.79754639 266.43225098]
[77.13175201 281.19348145]
[74.46595764 295.95468140]
[71.80016327 310.71591187]
[69.13436127 325.47714233]
[66.46856689 340.23834229]
[64.24345398 355.07238770]
[62.46098709 369.96609497]
[60.67852020 384.85983276]
[58.89605331 399.75354004]
[57.11359024 414.64724731]
[55.55306625 429.56585693]
[54.21483231 444.50604248]
[52.87659836 459.44622803]
[67.44140625 463.16946411]
[81.22029877 469.18096924]
[93.85637665 477.32504272]
[105.02232361 487.39071655]
[114.42891693 499.11727905]
[121.83251190 512.20098877]
[127.04132843 526.30291748]
[129.92045593 541.05780029]
[130.39529419 556.08343506]
[128.45358276 570.99072266]
[124.14557648 585.39337158]
[117.58288574 598.91845703]
[108.93550110 611.21557617]
[98.42739868 621.96618652]
[86.33077240 630.89184570]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 195]
[23 194]
[24 193]
[27 192]
[28 191]
[29 190]
[30 189]
[31 188]
[36 187]
[37 186]
[38 185]
[39 184]
[40 183]
[41 182]
[44 178]
[45 177]
[46 176]
[47 175]
[48 174]
[61 161]
[62 160]
[63 159]
[64 157]
[65 156]
[66 155]
[67 145]
[68 144]
[69 143]
[70 142]
[71 141]
[72 140]
[73 139]
[74 138]
[77 134]
[78 133]
[79 132]
[80 131]
[81 130]
[82 129]
[83 128]
[84 127]
[85 126]
[86 125]
[87 124]
[88 123]
[91 120]
[92 119]
[93 118]
[94 117]
[95 116]
[96 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
