%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCACCUCAUCCCGACUCUGACCCCACCCCGGAAGAUACCGACUCCCCUCAGUCCCCACCUCUGGAUUAACCCGACUAAACGGACGACGACGAUCCUCCUCxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[119.81607819 801.62280273]
[113.99178314 787.46881104]
[115.42388153 772.23046875]
[123.78327179 759.40942383]
[137.14903259 751.95184326]
[136.70242310 736.95849609]
[136.25582886 721.96514893]
[135.80921936 706.97180176]
[135.36260986 691.97845459]
[134.91600037 676.98510742]
[134.35780334 661.99548340]
[121.47306824 651.18707275]
[120.37042236 634.06689453]
[132.21958923 621.19769287]
[131.32676697 606.22430420]
[130.43395996 591.25091553]
[115.70600891 588.57208252]
[102.03897858 582.44244385]
[90.22909546 573.21435547]
[80.96552277 561.42071533]
[74.79014587 547.74438477]
[72.06589508 532.97869873]
[72.95539093 517.98101807]
[77.41127014 503.62350464]
[85.17865753 490.74197388]
[95.80976868 480.08746338]
[108.68970490 472.28237915]
[123.07202911 467.78411865]
[122.17921448 452.81069946]
[121.28639984 437.83728027]
[120.39358521 422.86389160]
[119.50077057 407.89047241]
[104.30212402 404.10531616]
[91.00058746 395.79840088]
[80.90460205 383.77273560]
[75.01167297 369.19778442]
[73.90977478 353.49575806]
[77.71875763 338.20291138]
[86.07742310 324.81915283]
[98.17771912 314.66094971]
[112.84288788 308.73190308]
[111.72724152 293.77346802]
[110.50026703 278.82373047]
[109.16203308 263.88354492]
[107.82379913 248.94335938]
[96.96957397 235.15376282]
[104.85591888 218.51383972]
[103.29540253 203.59524536]
[101.73487854 188.67663574]
[92.71548462 176.82337952]
[98.97509766 162.29313660]
[97.41457367 147.37452698]
[95.85404968 132.45593262]
[83.91214752 128.49134827]
[74.34946442 120.31320190]
[68.58023071 109.13095093]
[67.45764923 96.59832001]
[71.14773560 84.56876373]
[79.10477448 74.82132721]
[90.15199280 68.79754639]
[89.03634644 53.83909607]
[87.92069244 38.88064194]
[77.57455444 33.02453232]
[71.40310669 23.00384521]
[70.84100342 11.36864090]
[75.91233826 1.01503086]
[85.25334167 -5.53568316]
[84.58355713 -20.52072144]
[83.91377258 -35.50576019]
[83.24398804 -50.49079895]
[82.46266937 -65.47043610]
[81.56985474 -80.44384003]
[80.67703247 -95.41725159]
[67.38256836 -106.78722382]
[66.44298553 -123.91708374]
[77.95204926 -136.18005371]
[76.83639526 -151.13850403]
[75.72074890 -166.09695435]
[66.97846985 -179.28343201]
[73.74772644 -192.55093384]
[72.63208008 -207.50938416]
[63.88980103 -220.69586182]
[70.65905762 -233.96334839]
[69.54341125 -248.92179871]
[56.08113098 -260.09259033]
[54.88661957 -277.20657349]
[66.21182251 -289.63952637]
[64.87358856 -304.57971191]
[55.93595123 -317.63455200]
[62.50692749 -331.00137329]
[61.16869354 -345.94155884]
[57.68397141 -351.56011963]
[57.57604218 -357.24212646]
[60.01982498 -361.34542847]
[59.12701035 -376.31881714]
[58.23419189 -391.29223633]
[43.85761261 -396.23007202]
[32.46832275 -406.29748535]
[25.80311394 -419.95922852]
[24.87837791 -435.13201904]
[29.83513069 -449.50210571]
[39.91750717 -460.87811279]
[53.58801270 -467.52536011]
[68.76199341 -468.43014526]
[83.12554169 -463.45446777]
[94.48829651 -453.35714722]
[101.11754608 -439.67791748]
[102.00235748 -424.50274658]
[97.00781250 -410.14575195]
[86.89554596 -398.79629517]
[73.20759583 -392.18505859]
[74.10041809 -377.21163940]
[74.99323273 -362.23825073]
[76.10887909 -347.27978516]
[77.44711304 -332.33959961]
[86.28903198 -320.35336304]
[79.81377411 -305.91793823]
[81.15200806 -290.97775269]
[92.09849548 -284.18041992]
[97.20751190 -272.13964844]
[94.40758514 -259.16384888]
[84.50186157 -250.03746033]
[85.61751556 -235.07899475]
[94.27999115 -222.96244812]
[87.59053040 -208.62503052]
[88.70618439 -193.66658020]
[97.36865997 -181.55003357]
[90.67919922 -167.21261597]
[91.79485321 -152.25415039]
[92.91049957 -137.29570007]
[103.75457001 -130.33613586]
[108.68375397 -118.22063446]
[105.69094086 -105.28797913]
[95.65044403 -96.31006622]
[96.54325867 -81.33666229]
[97.43607330 -66.36325073]
[100.97212219 -59.87340546]
[98.22902679 -51.16058350]
[98.89881134 -36.17554474]
[99.56859589 -21.19050789]
[100.23838043 -6.20546865]
[114.46697235 5.31247568]
[115.78054047 23.89169693]
[102.87915039 37.76499557]
[103.99479675 52.72344589]
[105.11044312 67.68190002]
[120.74346924 74.69615173]
[130.68788147 88.64965057]
[132.21653748 105.71582794]
[124.91024780 121.21451569]
[110.77265930 130.89540100]
[112.33317566 145.81401062]
[113.89369965 160.73262024]
[123.02471924 173.65295410]
[116.65348053 187.11611938]
[118.21400452 202.03471375]
[119.77452850 216.95332336]
[129.28445435 225.66676331]
[130.27708435 238.12463379]
[122.76398468 247.60511780]
[124.10221863 262.54531860]
[125.44045258 277.48550415]
[129.32299805 285.75372314]
[126.68569183 292.65780640]
[127.80134583 307.61627197]
[141.84858704 310.77310181]
[154.42263794 317.75350952]
[164.50828552 327.98358154]
[171.29412842 340.62756348]
[174.23783875 354.65597534]
[173.10951233 368.92944336]
[168.00958252 382.29132080]
[159.35995483 393.66140747]
[147.86914062 402.12313843]
[134.47418213 406.99765015]
[135.36698914 421.97106934]
[136.25981140 436.94448853]
[137.15261841 451.91787720]
[138.04544067 466.89129639]
[152.86038208 469.64862061]
[166.57655334 475.86785889]
[178.39842224 485.18356323]
[187.64151001 497.05084229]
[193.77192688 510.77713013]
[196.43731689 525.56280518]
[195.48698425 540.54766846]
[190.98054504 554.86083984]
[183.18405151 567.67175293]
[172.55442810 578.23785400]
[159.71263123 585.94812012]
[145.40736389 590.35809326]
[146.30018616 605.33148193]
[147.19299316 620.30487061]
[158.22920227 628.02606201]
[162.73760986 640.51147461]
[159.28305054 653.12683105]
[149.34283447 661.32568359]
[152.85231018 669.75903320]
[149.90936279 676.53851318]
[150.35595703 691.53186035]
[150.80256653 706.52520752]
[151.24917603 721.51855469]
[151.69578552 736.51190186]
[152.14237976 751.50524902]
[165.92832947 758.15405273]
[175.03602600 770.45477295]
[177.37258911 785.58087158]
[172.40107727 800.05645752]
[161.26393127 810.55517578]
[146.52038574 814.66442871]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 204]
[6 203]
[7 202]
[8 201]
[9 200]
[10 199]
[11 197]
[14 193]
[15 192]
[16 191]
[28 179]
[29 178]
[30 177]
[31 176]
[32 175]
[41 165]
[42 164]
[43 162]
[44 161]
[45 160]
[47 157]
[48 156]
[49 155]
[51 153]
[52 152]
[53 151]
[60 146]
[61 145]
[62 144]
[67 141]
[68 140]
[69 139]
[70 138]
[71 136]
[72 135]
[73 134]
[76 130]
[77 129]
[78 128]
[80 126]
[81 125]
[83 123]
[84 122]
[87 118]
[88 117]
[90 115]
[91 114]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
