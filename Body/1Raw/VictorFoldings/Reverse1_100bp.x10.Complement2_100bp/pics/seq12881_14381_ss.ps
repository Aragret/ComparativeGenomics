%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAUCAUCACCCCACUCCGAACCUAAUCGCAAAUCUUCCCGAUAAACAACACCCAGAGUACUCAACCUCACAUCCUAUUUAGUACGAUUCCGCUCCUACxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[209.78736877 556.86267090]
[217.14111328 543.75451660]
[226.40971375 531.92266846]
[237.37588501 521.64434814]
[249.78257751 513.16058350]
[243.30308533 499.63223267]
[230.82713318 491.49588013]
[231.84411621 475.70739746]
[225.36462402 462.17904663]
[218.88511658 448.65072632]
[204.02415466 447.64221191]
[191.58050537 439.27490234]
[184.95199585 425.71286011]
[186.00875854 410.55435181]
[194.56687927 397.87738037]
[188.08738708 384.34902954]
[181.60789490 370.82067871]
[175.12838745 357.29235840]
[168.64889526 343.76400757]
[162.16940308 330.23565674]
[149.69345093 322.09930420]
[150.71043396 306.31082153]
[144.23094177 292.78247070]
[137.75144958 279.25411987]
[136.46098328 294.19851685]
[129.61807251 307.54672241]
[118.23781586 317.31863403]
[104.00842285 322.06460571]
[89.04073334 321.08062744]
[75.55510712 314.51269531]
[65.55206299 303.33508301]
[60.51549530 289.20593262]
[61.19254303 274.22122192]
[67.48277283 260.60382080]
[78.45307159 250.37384033]
[92.47605133 245.04879761]
[107.47148895 245.41865540]
[121.21490479 251.42851257]
[131.66650391 262.18527222]
[128.12683105 247.60890198]
[124.58715057 233.03253174]
[109.82176971 230.81608582]
[96.99512482 223.09451294]
[88.07786560 211.01777649]
[84.45390320 196.40769958]
[86.70568085 181.48312378]
[94.52086639 168.52294922]
[106.73521423 159.51820374]
[103.19554138 144.94183350]
[99.65586853 130.36546326]
[96.11619568 115.78908539]
[86.55328369 109.14138031]
[83.88928986 97.80363464]
[89.49098969 87.59275055]
[86.16873169 72.96529388]
[82.84647369 58.33782959]
[79.52421570 43.71037292]
[76.20195007 29.08291054]
[71.99782562 23.98027992]
[71.13173676 18.36361504]
[73.00540924 13.97062206]
[70.12014008 -0.74926966]
[65.39847565 -8.56871414]
[67.30319977 -15.70970917]
[64.63740540 -30.47092628]
[60.66531754 -35.75619125]
[60.05089188 -41.40592957]
[62.11885452 -45.71087646]
[59.89373779 -60.54491806]
[57.66862106 -75.37895966]
[55.44350052 -90.21300507]
[53.21838379 -105.04705048]
[50.99326706 -119.88109589]
[47.99849319 -134.57910156]
[44.24219131 -149.10115051]
[40.48589325 -163.62321472]
[29.53928375 -175.04609680]
[33.84288788 -189.30541992]
[30.08658791 -203.82748413]
[25.37339973 -189.58718872]
[15.01074696 -178.74212646]
[0.99949872 -173.38629150]
[-13.95499420 -174.55383301]
[-26.96525383 -182.01930237]
[-35.51920319 -194.34123230]
[-37.96520615 -209.14045715]
[-33.83098221 -223.55947876]
[-23.91477966 -234.81420898]
[-10.13126659 -240.73153687]
[4.85817862 -240.16891479]
[18.15932846 -233.23498535]
[27.20446587 -221.26741028]
[26.08881760 -236.22586060]
[24.97316933 -251.18431091]
[23.85751915 -266.14276123]
[9.32757854 -270.52969360]
[-2.63403630 -279.87231445]
[-10.40961361 -292.90707397]
[-12.94757175 -307.87112427]
[-9.90467072 -322.74072266]
[-1.69243968 -335.50488281]
[10.57848549 -344.43734741]
[25.24856186 -348.33007812]
[40.33378601 -346.65658569]
[53.79399872 -339.64324951]
[63.80882263 -328.23852539]
[69.02382660 -313.98480225]
[68.73374176 -298.80981445]
[62.97777939 -284.76583862]
[52.53439713 -273.75219727]
[38.81597519 -267.25842285]
[39.93162155 -252.29995728]
[41.04727173 -237.34150696]
[42.16291809 -222.38305664]
[44.60864639 -207.58378601]
[48.36494827 -193.06172180]
[59.04288101 -182.67755127]
[55.00794983 -167.37951660]
[58.76425171 -152.85745239]
[62.52055359 -138.33540344]
[70.05733490 -151.30447388]
[84.12403107 -156.51293945]
[98.28953552 -151.57954407]
[106.07757568 -138.75978088]
[103.92756653 -123.91466522]
[92.82245636 -113.83118439]
[77.83935547 -113.11937714]
[65.82730865 -122.10620880]
[68.05242920 -107.27217102]
[70.27754211 -92.43812561]
[72.50266266 -77.60408020]
[74.72778320 -62.77003860]
[76.95289612 -47.93599319]
[79.39862823 -33.13672256]
[82.06442261 -18.37550545]
[84.84003448 -3.63454223]
[87.72530365 11.08534908]
[90.82941437 25.76065063]
[94.15167236 40.38811111]
[97.47393036 55.01557159]
[100.79619598 69.64303589]
[104.11845398 84.27049255]
[115.82865906 96.28079224]
[110.69256592 112.24941254]
[114.23223877 126.82578278]
[117.77191162 141.40216064]
[121.31158447 155.97853088]
[136.29542542 158.37857056]
[149.18411255 166.31109619]
[158.02993774 178.54077148]
[161.51016235 193.18576050]
[159.12474060 208.00718689]
[151.26794434 220.75144958]
[139.16352844 229.49285889]
[142.70320129 244.06922913]
[146.24287415 258.64559937]
[151.27978516 272.77462769]
[157.75929260 286.30297852]
[164.23878479 299.83132935]
[177.17817688 308.93530273]
[175.69773865 323.75616455]
[182.17724609 337.28451538]
[188.65673828 350.81283569]
[195.13623047 364.34118652]
[201.61572266 377.86953735]
[208.09523010 391.39788818]
[223.33709717 392.67568970]
[235.81056213 401.35379028]
[242.22291565 415.01937866]
[240.94268799 429.95983887]
[232.41346741 442.17120361]
[238.89295959 455.69955444]
[245.37245178 469.22790527]
[258.31185913 478.33187866]
[256.83142090 493.15274048]
[263.31091309 506.68109131]
[277.69787598 502.33184814]
[292.58013916 500.22985840]
[307.60888672 500.42437744]
[322.43176270 502.91085815]
[336.70132446 507.63098145]
[350.08309937 514.47418213]
[362.26336670 523.27990723]
[372.95660400 533.84191895]
[381.91213989 545.91247559]
[388.92007446 559.20867920]
[393.81613159 573.41888428]
[396.48550415 588.20989990]
[396.86563110 603.23504639]
[394.94763184 618.14215088]
[390.77642822 632.58172607]
[384.44982910 646.21533203]
[376.11611938 658.72332764]
[365.97067261 669.81250000]
[354.25128174 679.22296143]
[341.23266602 686.73406982]
[327.22006226 692.16973877]
[312.54187012 695.40258789]
[297.54220581 696.35687256]
[282.57269287 695.01013184]
[267.98419189 691.39398193]
[254.11872864 685.59313965]
[241.30130005 677.74371338]
[229.83238220 668.02960205]
[219.98080444 656.67846680]
[211.97752380 643.95654297]
[206.01013184 630.16198730]
[202.21850586 615.61810303]
[200.69155884 600.66589355]
[201.46505737 585.65582275]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 176]
[6 175]
[8 173]
[9 172]
[10 171]
[15 166]
[16 165]
[17 164]
[18 163]
[19 162]
[20 161]
[22 159]
[23 158]
[24 157]
[39 156]
[40 155]
[41 154]
[48 147]
[49 146]
[50 145]
[51 144]
[54 142]
[55 141]
[56 140]
[57 139]
[58 138]
[61 137]
[62 136]
[64 135]
[65 134]
[68 133]
[69 132]
[70 131]
[71 130]
[72 129]
[73 128]
[74 120]
[75 119]
[76 118]
[78 116]
[79 115]
[92 114]
[93 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
