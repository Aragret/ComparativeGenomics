%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[30.46864700 537.90228271]
[33.46334076 552.65411377]
[33.42686462 567.70678711]
[30.36071205 582.44396973]
[24.39043808 596.26208496]
[15.76052475 608.59533691]
[4.82435942 618.93872070]
[-7.97022772 626.86865234]
[-22.09930611 632.06036377]
[-36.98430252 634.30126953]
[-52.01567841 633.49969482]
[-66.57791901 629.68835449]
[-80.07469177 623.02337646]
[-91.95333099 613.77770996]
[-101.72740936 602.32989502]
[-108.99668121 589.14874268]
[-113.46347046 574.77404785]
[-114.94487000 559.79437256]
[-113.38022614 544.82318115]
[-108.83358765 530.47351074]
[-101.49115753 517.33294678]
[-91.65359497 505.93966675]
[-79.72373962 496.76016235]
[-66.19011688 490.17031860]
[-51.60692215 486.44000244]
[-36.57131958 485.72198486]
[-21.69901276 488.04565430]
[-16.45229340 473.99316406]
[-11.20557594 459.94070435]
[-5.95885801 445.88821411]
[-8.75564289 431.25854492]
[3.31994367 421.03649902]
[8.56666183 406.98400879]
[13.81338024 392.93154907]
[19.06009865 378.87905884]
[24.30681610 364.82659912]
[29.55353546 350.77413940]
[34.48512650 336.60800171]
[39.09913635 322.33526611]
[43.71314621 308.06253052]
[40.26590347 293.57232666]
[51.87300491 282.82125854]
[48.42575836 268.33105469]
[60.03286362 257.57998657]
[64.64687347 243.30723572]
[69.26087952 229.03451538]
[73.23297882 214.56999207]
[76.55523682 199.94252014]
[79.87749481 185.31506348]
[83.19975281 170.68760681]
[85.75559235 155.90695190]
[87.53805542 141.01322937]
[89.32051849 126.11951447]
[91.10298920 111.22579956]
[85.77754974 98.29786682]
[94.00329590 86.99173737]
[95.78575897 72.09801483]
[97.56822968 57.20429993]
[99.35069275 42.31058502]
[101.13316345 27.41686630]
[102.91562653 12.52314949]
[96.87303925 -2.09867334]
[106.06790924 -13.81633472]
[96.19783783 -2.52112675]
[82.24275970 2.97940302]
[67.32028198 1.45642233]
[54.76411057 -6.74983072]
[47.37933350 -19.80605888]
[46.81573105 -34.79546738]
[53.19920731 -48.36938095]
[65.10368347 -57.49535751]
[79.86966705 -60.13462830]
[94.19840240 -55.69757462]
[104.88880157 -45.17544174]
[109.55261993 -30.91888428]
[113.73963165 -45.32266617]
[117.92664337 -59.72644806]
[122.11365509 -74.13023376]
[126.30066681 -88.53401184]
[130.48767090 -102.93779755]
[134.67468262 -117.34157562]
[137.66946411 -132.03958130]
[139.45191956 -146.93330383]
[141.23439026 -161.82701111]
[143.01686096 -176.72073364]
[133.52246094 -189.06958008]
[135.54229736 -204.14854431]
[147.37355042 -213.12390137]
[148.26637268 -228.09730530]
[148.26637268 -243.09730530]
[148.15470886 -258.09689331]
[147.93138123 -273.09521484]
[147.70805359 -288.09356689]
[147.37307739 -303.08981323]
[146.92646790 -318.08316040]
[146.47985840 -333.07650757]
[132.07984924 -337.81100464]
[120.16945648 -347.18750000]
[112.18695068 -360.07373047]
[109.09623718 -374.91366577]
[111.27053833 -389.91525269]
[118.44730377 -403.26702881]
[129.75988770 -413.35668945]
[143.84226990 -418.96585083]
[158.99391174 -419.41717529]
[173.38517761 -414.65615845]
[185.27825928 -405.25772095]
[193.23699951 -392.35678101]
[196.30036926 -377.51119995]
[194.09841919 -362.51364136]
[186.89706421 -349.17510986]
[175.56590271 -339.10632324]
[161.47320557 -333.52313232]
[161.91981506 -318.52978516]
[162.36642456 -303.53643799]
[165.70768738 -296.94418335]
[162.70639038 -288.31689453]
[162.92971802 -273.31854248]
[163.15304565 -258.32022095]
[166.39578247 -251.67893982]
[163.26637268 -243.09730530]
[163.26637268 -228.09730530]
[173.14140320 -239.38816833]
[187.74105835 -242.83061218]
[201.61999512 -237.14070129]
[209.60173035 -224.44062805]
[208.70925903 -209.46720886]
[199.27548218 -197.80514526]
[184.81892395 -193.80410767]
[170.73155212 -198.95639038]
[162.26727295 -211.34143066]
[171.64640808 -199.82763672]
[170.05090332 -184.69789124]
[157.91058350 -174.93826294]
[156.12811279 -160.04455566]
[154.34564209 -145.15083313]
[152.56317139 -130.25711060]
[162.43324280 -141.55232239]
[176.38832092 -147.05285645]
[191.31080627 -145.52987671]
[203.86697388 -137.32362366]
[211.25175476 -124.26738739]
[211.81535339 -109.27798462]
[205.43188477 -95.70406342]
[193.52740479 -86.57808685]
[178.76141357 -83.93881989]
[164.43269348 -88.37587738]
[153.74227905 -98.89800262]
[149.07847595 -113.15456390]
[144.89146423 -98.75078583]
[140.70445251 -84.34700012]
[136.51744080 -69.94322205]
[132.33042908 -55.53943634]
[128.14341736 -41.13565445]
[123.95639801 -26.73187256]
[120.96162415 -12.03386879]
[127.13170624 1.52265561]
[117.80934143 14.30561543]
[116.02687836 29.19933319]
[114.24440765 44.09304810]
[112.46194458 58.98676682]
[110.67948151 73.88048553]
[108.89701080 88.77420044]
[114.22245026 101.70213318]
[105.99670410 113.00826263]
[104.21424103 127.90198517]
[102.43177032 142.79570007]
[100.64930725 157.68942261]
[112.38669586 148.34951782]
[127.38436890 148.61366272]
[138.78559875 158.36106873]
[141.37788391 173.13537598]
[133.97607422 186.18196106]
[119.96417999 191.53608704]
[105.74824524 186.74993896]
[97.82721710 174.00985718]
[94.50495911 188.63732910]
[91.18270111 203.26478577]
[87.86043549 217.89224243]
[101.09690094 210.83561707]
[115.48584747 215.07331848]
[122.78464508 228.17779541]
[118.81220245 242.64222717]
[105.84411621 250.18070984]
[91.30909729 246.47486877]
[83.53361511 233.64851379]
[78.91960907 247.92124939]
[74.30559540 262.19396973]
[77.42281342 277.70504761]
[66.14573669 287.43527222]
[69.26295471 302.94635010]
[57.98588181 312.67654419]
[53.37187195 326.94927979]
[48.75786209 341.22201538]
[49.85245895 346.32580566]
[48.96828461 350.88339233]
[46.64476776 354.23248291]
[43.60600662 356.02084351]
[38.35928726 370.07330322]
[33.11256790 384.12579346]
[27.86585045 398.17825317]
[22.61913300 412.23074341]
[17.37241554 426.28320312]
[19.79392052 441.91799927]
[8.09361362 451.13494873]
[2.84689522 465.18740845]
[-2.39982295 479.23989868]
[-7.64654112 493.29235840]
[5.10946417 501.28417969]
[15.99537182 511.68041992]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 208]
[28 207]
[29 206]
[30 205]
[32 203]
[33 202]
[34 201]
[35 200]
[36 199]
[37 198]
[38 194]
[39 193]
[40 192]
[42 190]
[44 188]
[45 187]
[46 186]
[47 179]
[48 178]
[49 177]
[50 176]
[51 168]
[52 167]
[53 166]
[54 165]
[56 163]
[57 162]
[58 161]
[59 160]
[60 159]
[61 158]
[63 156]
[75 155]
[76 154]
[77 153]
[78 152]
[79 151]
[80 150]
[81 149]
[82 137]
[83 136]
[84 135]
[85 134]
[88 131]
[89 122]
[90 121]
[91 119]
[92 118]
[93 117]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
