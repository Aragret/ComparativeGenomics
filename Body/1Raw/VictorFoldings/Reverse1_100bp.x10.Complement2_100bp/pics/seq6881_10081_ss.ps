%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[186.85562134 428.25811768]
[181.27917480 414.32723999]
[176.63563538 400.05828857]
[172.94528198 385.51364136]
[170.22425842 370.75686646]
[168.48448181 355.85253906]
[167.73355103 340.86581421]
[167.97473145 325.86224365]
[169.20700073 310.90740967]
[171.42494202 296.06671143]
[174.61888123 281.40502930]
[178.77482605 266.98651123]
[183.87461853 252.87419128]
[189.89596558 239.12976074]
[196.81251526 225.81335449]
[204.59403992 212.98316956]
[213.20651245 200.69532776]
[201.51893616 191.29316711]
[189.83135986 181.89102173]
[175.06480408 179.94212341]
[169.16191101 165.26335144]
[157.47433472 155.86120605]
[145.78674316 146.45904541]
[134.09916687 137.05690002]
[122.41159058 127.65474701]
[110.72400665 118.25260162]
[98.37475586 121.10735321]
[86.60810852 116.39569855]
[79.64208984 105.80664062]
[79.97381592 93.13606262]
[64.41204834 90.28265381]
[59.55422592 76.20249939]
[48.00792313 66.62738037]
[36.46162033 57.05225754]
[24.91531944 47.47713852]
[14.48955059 58.27161407]
[3.27726293 68.24668121]
[-8.65731907 77.34520721]
[-21.24583435 85.51506805]
[-34.41617584 92.70947266]
[-48.09290695 98.88721466]
[-62.19768524 104.01290131]
[-76.64971924 108.05717468]
[-91.36622620 110.99686432]
[-106.26290894 112.81514740]
[-121.25444794 113.50158691]
[-136.25495911 113.05226898]
[-151.17854309 111.46976471]
[-165.93968201 108.76313019]
[-180.45385742 104.94787598]
[-194.63792419 100.04585266]
[-208.41061401 94.08514404]
[-221.69306946 87.09988403]
[-234.40919495 79.13008881]
[-246.48614502 70.22140503]
[-257.85476685 60.42487335]
[-268.44989014 49.79659653]
[-278.21090698 38.39745712]
[-287.08181763 26.29274750]
[-295.01187134 13.55180454]
[-301.95562744 0.24760869]
[-307.87332153 -13.54363441]
[-312.73104858 -27.74292946]
[-316.50097656 -42.26894379]
[-319.16149902 -57.03847122]
[-320.69741821 -71.96691132]
[-321.09988403 -86.96875763]
[-320.36663818 -101.95807648]
[-318.50186157 -116.84901428]
[-315.51623535 -131.55627441]
[-311.42684937 -145.99560547]
[-306.25717163 -160.08432007]
[-300.03674316 -173.74168396]
[-292.80126953 -186.88951111]
[-284.59213257 -199.45245361]
[-275.45639038 -211.35856628]
[-265.44638062 -222.53965759]
[-254.61940002 -232.93168640]
[-243.03750610 -242.47509766]
[-230.76699829 -251.11526489]
[-217.87820435 -258.80267334]
[-204.44491577 -265.49328613]
[-190.54411316 -271.14880371]
[-176.25538635 -275.73678589]
[-161.66059875 -279.23101807]
[-146.84335327 -281.61141968]
[-131.88850403 -282.86441040]
[-116.88172150 -282.98278809]
[-101.90897369 -281.96588135]
[-87.05600739 -279.81948853]
[-72.40792084 -276.55593872]
[-58.04859543 -272.19393921]
[-44.06029510 -266.75842285]
[-30.52314186 -260.28054810]
[-17.51467323 -252.79740906]
[-5.10940504 -244.35189819]
[6.62160826 -234.99237061]
[17.61116982 -224.77244568]
[27.79633331 -213.75065613]
[37.11875916 -201.99014282]
[45.52504730 -189.55825806]
[52.96704483 -176.52621460]
[59.40212631 -162.96867371]
[64.79343414 -148.96327209]
[69.11007690 -134.59024048]
[72.32734680 -119.93191528]
[74.42679596 -105.07225037]
[75.39641571 -90.09635925]
[75.23063660 -75.09003448]
[73.93041992 -60.13921738]
[71.50321198 -45.32955933]
[67.96290588 -30.74588013]
[63.32979584 -16.47172165]
[57.63040543 -2.58884048]
[50.89738846 10.82323933]
[43.16931152 23.68769455]
[34.49044037 35.93083572]
[46.03674316 45.50595856]
[57.58304214 55.08107758]
[69.12934875 64.65619659]
[83.86524200 66.82472992]
[89.54893494 81.58975983]
[105.94176483 79.68111420]
[118.72351837 90.12116241]
[120.12615967 106.56501770]
[131.81373596 115.96717072]
[143.50131226 125.36931610]
[155.18890381 134.77146912]
[166.87648010 144.17361450]
[178.56405640 153.57577515]
[194.16659546 156.19717407]
[199.23350525 170.20344543]
[210.92108154 179.60559082]
[222.60867310 189.00775146]
[232.76631165 177.96292114]
[243.63169861 167.61358643]
[255.15733337 158.00495911]
[267.29281616 149.17909241]
[279.98507690 141.17457581]
[293.17858887 134.02638245]
[306.81570435 127.76580811]
[320.83676147 122.42019653]
[335.18048096 118.01293945]
[349.78408813 114.56330872]
[364.58377075 112.08638000]
[379.51480103 110.59299469]
[394.51187134 110.08967590]
[409.50942993 110.57863617]
[424.44186401 112.05771637]
[439.24392700 114.52046967]
[453.85083008 117.95610809]
[468.19876099 122.34962463]
[482.22494507 127.68180084]
[495.86804199 133.92932129]
[509.06838989 141.06486511]
[521.76831055 149.05723572]
[533.91223145 157.87147522]
[545.44708252 167.46903992]
[556.32238770 177.80796814]
[566.49060059 188.84306335]
[575.90722656 200.52604675]
[584.53118896 212.80584717]
[592.32470703 225.62875366]
[599.25366211 238.93870544]
[605.28784180 252.67750549]
[610.40081787 266.78506470]
[614.57019043 281.19970703]
[617.77783203 295.85836792]
[620.00964355 310.69702148]
[621.25585938 325.65069580]
[621.51104736 340.65405273]
[620.77410889 355.64144897]
[619.04821777 370.54739380]
[616.34100342 385.30667114]
[612.66424561 399.85476685]
[608.03399658 414.12805176]
[602.47052002 428.06411743]
[595.99822998 441.60202026]
[588.64532471 454.68255615]
[580.44396973 467.24853516]
[571.43011475 479.24502563]
[561.64306641 490.61953735]
[551.12567139 501.32232666]
[539.92388916 511.30664062]
[528.08673096 520.52880859]
[515.66601562 528.94842529]
[502.71594238 536.52874756]
[489.29318237 543.23663330]
[475.45648193 549.04278564]
[461.26626587 553.92169189]
[446.78463745 557.85211182]
[432.07492065 560.81683350]
[417.20141602 562.80285645]
[402.22915649 563.80157471]
[387.22363281 563.80859375]
[372.25045776 562.82385254]
[357.37509155 560.85168457]
[342.66259766 557.90069580]
[328.17730713 553.98382568]
[313.98257446 549.11810303]
[300.14044189 543.32495117]
[286.71145630 536.62957764]
[273.75430298 529.06134033]
[261.32568359 520.65325928]
[249.47994995 511.44219971]
[238.26887512 501.46835327]
[227.74150085 490.77536011]
[217.94384766 479.41000366]
[208.91874695 467.42193604]
[200.70568848 454.86361694]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 134]
[18 133]
[19 132]
[21 130]
[22 129]
[23 128]
[24 127]
[25 126]
[26 125]
[30 122]
[32 120]
[33 119]
[34 118]
[35 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
