%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[201.52246094 567.50018311]
[210.53829956 555.45397949]
[221.67115784 545.33197021]
[234.51858521 537.49993896]
[229.27186584 523.44744873]
[224.02514648 509.39501953]
[218.77844238 495.34252930]
[203.60018921 497.87905884]
[188.21380615 497.41473389]
[173.20709229 493.96548462]
[159.15364075 487.66128540]
[146.59101868 478.74133301]
[136.00012207 467.54483032]
[127.78682709 454.49822998]
[122.26638794 440.09893799]
[119.65134430 424.89633179]
[120.04338074 409.47076416]
[123.42932129 394.41156006]
[129.68159485 380.29428101]
[138.56303406 367.65896606]
[149.73587036 356.98922729]
[162.77456665 348.69400024]
[157.31919861 334.72119141]
[151.86384583 320.74838257]
[146.40849304 306.77560425]
[143.89825439 305.52783203]
[141.73103333 303.21057129]
[140.31665039 299.94943237]
[140.01193237 296.01605225]
[141.07164001 291.80523682]
[136.45762634 277.53250122]
[131.84361267 263.25976562]
[127.22960663 248.98701477]
[118.17984772 260.94952393]
[103.18941498 261.48532104]
[93.30870819 250.19941711]
[95.82141113 235.41137695]
[108.87525940 228.02238464]
[122.84629822 233.47813416]
[112.68247223 226.91893005]
[109.61421967 214.80407715]
[115.81510162 203.49426270]
[112.49284363 188.86680603]
[109.17058563 174.23934937]
[105.84832764 159.61189270]
[102.52606964 144.98442078]
[99.20380402 130.35696411]
[95.88154602 115.72950745]
[86.41867065 108.94016266]
[83.92377472 97.56401825]
[89.67687988 87.43766022]
[86.57276917 72.76235962]
[83.46865845 58.08705902]
[80.36455536 43.41175461]
[65.53053284 34.13969040]
[62.06028748 17.33872795]
[71.62290955 3.50416851]
[68.30065155 -11.12329197]
[64.97839355 -25.75075150]
[61.65613174 -40.37821198]
[58.33386993 -55.00567245]
[45.24408722 -63.44932556]
[42.08321762 -78.33097839]
[50.21361923 -90.75804901]
[46.89135742 -105.38551331]
[43.56909943 -120.01296997]
[40.24684143 -134.64042664]
[31.35723877 -122.55841827]
[16.54944801 -120.16481781]
[4.30604267 -128.83078003]
[1.64060104 -143.59207153]
[10.08000946 -155.99272156]
[24.78979111 -158.92910767]
[37.34297562 -150.71989441]
[27.83132362 -163.36264038]
[33.79888535 -177.00952148]
[31.79487228 -191.87506104]
[29.79085732 -206.74058533]
[27.78684425 -221.60610962]
[12.76222229 -221.68896484]
[-2.10463953 -223.86210632]
[-16.52435303 -228.08323669]
[-30.21623421 -234.27020264]
[-42.91376877 -242.30256653]
[-54.36979294 -252.02397156]
[-64.36131287 -263.24517822]
[-72.69383240 -275.74777222]
[-79.20517731 -289.28842163]
[-83.76857758 -303.60348511]
[-86.29522705 -318.41436768]
[-86.73593140 -333.43276978]
[-85.08210754 -348.36630249]
[-81.36596680 -362.92434692]
[-75.65982056 -376.82348633]
[-68.07476044 -389.79318237]
[-58.75842667 -401.58096313]
[-47.89215851 -411.95739746]
[-35.68747330 -420.72048950]
[-22.38194275 -427.69967651]
[-8.23455906 -432.75909424]
[6.47929335 -435.80026245]
[21.47320366 -436.76397705]
[36.45531464 -435.63150024]
[51.13399124 -432.42486572]
[65.22351074 -427.20645142]
[78.44961548 -420.07791138]
[90.55485535 -411.17794800]
[101.30360413 -400.67984009]
[110.48662567 -388.78790283]
[117.92517090 -375.73361206]
[123.47444916 -361.77111816]
[127.02644348 -347.17214966]
[128.51200867 -332.22091675]
[127.90223694 -317.20843506]
[125.20899200 -302.42697144]
[120.48469543 -288.16415405]
[113.82130432 -274.69772339]
[105.34853363 -262.28973389]
[95.23130035 -251.18171692]
[83.66654205 -241.58992004]
[70.87937927 -233.70103455]
[57.11870193 -227.66864014]
[42.65237427 -223.61012268]
[44.65638733 -208.74459839]
[46.66040039 -193.87907410]
[48.66441345 -179.01353455]
[58.03272629 -167.43408203]
[52.20850372 -152.72390747]
[54.87429810 -137.96269226]
[58.19655991 -123.33522797]
[61.51881790 -108.70777130]
[64.84107971 -94.08031464]
[77.54188538 -86.38452148]
[81.11949921 -71.59752655]
[72.96133423 -58.32793045]
[76.28359222 -43.70046997]
[79.60585022 -29.07301140]
[82.92810822 -14.44555092]
[86.25036621 0.18190894]
[98.00685120 5.45586252]
[104.67872620 16.70611382]
[103.63747406 29.93964005]
[95.03985596 40.30764771]
[98.14396667 54.98294830]
[101.24807739 69.65824890]
[104.35218811 84.33355713]
[115.88227844 96.51686859]
[110.50901031 112.40724945]
[113.83126831 127.03470612]
[117.15352631 141.66217041]
[120.47578430 156.28962708]
[123.79804993 170.91708374]
[127.12030792 185.54455566]
[130.44256592 200.17201233]
[143.26321411 213.38989258]
[137.42266846 229.93846130]
[141.50233459 244.37301636]
[146.11634827 258.64575195]
[150.73036194 272.91848755]
[155.34437561 287.19122314]
[160.38128662 301.32025146]
[165.83663940 315.29302979]
[171.29200745 329.26583862]
[176.74736023 343.23864746]
[191.14021301 340.57434082]
[205.77342224 340.60858154]
[220.14553833 343.33868408]
[233.76435852 348.66958618]
[246.16372681 356.41720581]
[256.91958618 366.31472778]
[265.66433716 378.02191162]
[272.09954834 391.13665771]
[276.00610352 405.20886230]
[277.25155640 419.75588989]
[275.79476929 434.27914429]
[271.68716431 448.28109741]
[265.07092285 461.28231812]
[256.17419434 472.83801270]
[245.30299377 482.55310059]
[232.83090210 490.09582520]
[238.07762146 504.14828491]
[243.32434082 518.20074463]
[248.57106018 532.25323486]
[263.40768433 529.74896240]
[278.45010376 530.09802246]
[293.15457153 533.28784180]
[306.98953247 539.20312500]
[319.45483398 547.63000488]
[330.09991455 558.26391602]
[338.53991699 570.72033691]
[344.46972656 584.54907227]
[347.67504883 599.25018311]
[348.03994751 614.29223633]
[345.55126953 629.13146973]
[340.29898071 643.23144531]
[332.47290039 656.08245850]
[322.35601807 667.22003174]
[310.31396484 676.24145508]
[296.78213501 682.82061768]
[282.24963379 686.71972656]
[267.24182129 687.79779053]
[252.30123901 686.01586914]
[237.96795654 681.43841553]
[224.76011658 674.23077393]
[213.15518188 664.65362549]
[203.57266235 653.05310059]
[196.35894775 639.84863281]
[191.77482605 625.51745605]
[189.98600769 610.57769775]
[191.05714417 595.56939697]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 183]
[5 182]
[6 181]
[7 180]
[22 164]
[23 163]
[24 162]
[25 161]
[30 160]
[31 159]
[32 158]
[33 157]
[39 156]
[42 154]
[43 153]
[44 152]
[45 151]
[46 150]
[47 149]
[48 148]
[51 146]
[52 145]
[53 144]
[54 143]
[57 139]
[58 138]
[59 137]
[60 136]
[61 135]
[64 132]
[65 131]
[66 130]
[67 129]
[74 128]
[76 126]
[77 125]
[78 124]
[79 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
