%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[195.79290771 592.47186279]
[195.41780090 577.46307373]
[196.58792114 562.49530029]
[199.29086304 547.72717285]
[203.49797058 533.31518555]
[209.16465759 519.41223145]
[216.23085022 506.16561890]
[224.62164307 493.71578979]
[234.24807739 482.19467163]
[245.00813293 471.72445679]
[256.78771973 462.41610718]
[248.74655151 449.75360107]
[240.70536804 437.09106445]
[232.66419983 424.42852783]
[224.62303162 411.76602173]
[216.58184814 399.10348511]
[208.54067993 386.44094849]
[195.18627930 379.84478760]
[194.31990051 364.04733276]
[186.27871704 351.38479614]
[183.57536316 350.64318848]
[181.00288391 348.78607178]
[178.98762512 345.85791016]
[177.93200684 342.05654907]
[178.16195679 337.72055054]
[170.88873291 324.60183716]
[163.61549377 311.48315430]
[159.35284424 309.32934570]
[156.39794922 304.47491455]
[156.32765198 297.86380005]
[143.61499023 290.10253906]
[144.16143799 274.29077148]
[137.28202820 260.96133423]
[130.40261841 247.63189697]
[129.97340393 262.62576294]
[124.50626373 276.59396362]
[114.64346313 287.89550781]
[101.54367065 295.20272827]
[86.74584198 297.65716553]
[71.98841095 294.97048950]
[59.00506973 287.45831299]
[49.32107544 276.00317383]
[44.07410812 261.95080566]
[43.88056564 246.95205688]
[48.76319504 232.76896667]
[58.14838028 221.06776428]
[70.93356323 213.22306824]
[85.61676025 210.15650940]
[100.47299194 212.22830200]
[113.75696564 219.19506836]
[123.90895081 230.23968506]
[120.36927795 215.66331482]
[116.82960510 201.08694458]
[113.28993225 186.51055908]
[109.75025940 171.93418884]
[106.21058655 157.35781860]
[102.67091370 142.78143311]
[99.13124084 128.20506287]
[95.59156799 113.62868500]
[86.08058929 103.38013458]
[89.83205414 89.91098022]
[83.55297852 103.53350830]
[70.96334839 111.68833923]
[55.96420670 111.84861755]
[43.20319366 103.96467590]
[36.63444901 90.47943878]
[38.29337311 75.57145691]
[47.66592407 63.86012650]
[61.84791946 58.97433472]
[76.44491577 62.42799377]
[86.93399048 73.15118408]
[85.37346649 58.23257446]
[83.81294250 43.31397247]
[74.68193054 30.39363289]
[81.05316925 16.93047333]
[79.49264526 2.01186943]
[67.49897766 -7.92742968]
[66.12890625 -23.07924652]
[75.67842102 -34.45212555]
[74.11789703 -49.37072754]
[64.98688507 -62.29106903]
[71.35811615 -75.75422668]
[69.79759216 -90.67282867]
[57.80392456 -100.61212921]
[56.43385315 -115.76394653]
[65.98336792 -127.13682556]
[64.42284393 -142.05543518]
[62.86232376 -156.97402954]
[53.73130798 -169.89437866]
[60.10254288 -183.35752869]
[58.54202271 -198.27613831]
[56.98149872 -213.19474792]
[42.14892197 -216.10783386]
[28.83475113 -223.26493835]
[18.22287178 -234.02967834]
[11.25688744 -247.44482422]
[8.55620575 -262.31753540]
[10.36097240 -277.32534790]
[16.51070595 -291.13375854]
[26.45857811 -302.51495361]
[39.32003021 -310.45687866]
[53.95143127 -314.25338745]
[69.05176544 -313.56689453]
[83.27832794 -308.45843506]
[95.36608887 -299.38223267]
[104.24022675 -287.14535522]
[109.11164856 -272.83590698]
[109.54720306 -257.72622681]
[105.50814819 -243.15992737]
[97.35363770 -230.43218994]
[85.80876923 -220.67475891]
[71.90010071 -214.75526428]
[73.46062469 -199.83665466]
[75.02114868 -184.91806030]
[84.04054260 -173.06478882]
[77.78092957 -158.53456116]
[79.34145355 -143.61595154]
[80.90197754 -128.69734192]
[92.59828949 -119.54683685]
[94.39340210 -104.43947601]
[84.71620178 -92.23335266]
[86.27671814 -77.31475067]
[95.29611969 -65.46148682]
[89.03649902 -50.93125153]
[90.59702301 -36.01264572]
[102.29333496 -26.86213684]
[104.08844757 -11.75477982]
[94.41124725 0.45134631]
[95.97177124 15.36995125]
[104.99116516 27.22321129]
[98.73155212 41.75344849]
[100.29207611 56.67205429]
[101.85259247 71.59066010]
[104.40843201 86.37131500]
[113.91941071 96.61986542]
[110.16794586 110.08901978]
[113.70761871 124.66539001]
[117.24729156 139.24176025]
[120.78696442 153.81814575]
[124.32663727 168.39451599]
[127.86631012 182.97088623]
[131.40597534 197.54727173]
[134.94564819 212.12364197]
[138.48532104 226.70001221]
[143.73204041 240.75248718]
[150.61145020 254.08192444]
[157.49087524 267.41134644]
[170.69560242 276.12603760]
[169.65708923 290.98440552]
[176.73419189 304.20993042]
[184.00741577 317.32861328]
[191.28065491 330.44729614]
[198.94125366 343.34362793]
[206.98242188 356.00616455]
[220.91197205 363.50802612]
[221.20320129 378.39978027]
[229.24438477 391.06231689]
[237.28555298 403.72485352]
[245.32672119 416.38735962]
[253.36788940 429.04989624]
[261.40905762 441.71240234]
[269.45025635 454.37493896]
[282.88421631 447.67175293]
[296.93618774 442.38540649]
[311.45727539 438.57192993]
[326.29348755 436.27175903]
[341.28756714 435.50930786]
[356.28057861 436.29260254]
[371.11358643 438.61334229]
[385.62936401 442.44699097]
[399.67398071 447.75283813]
[413.09863281 454.47467041]
[425.76095581 462.54125977]
[437.52673340 471.86703491]
[448.27127075 482.35317993]
[457.88064575 493.88851929]
[466.25296021 506.35076904]
[473.29953003 519.60784912]
[478.94561768 533.51922607]
[483.13137817 547.93737793]
[485.81246948 562.70953369]
[486.96041870 577.67901611]
[486.56307983 592.68719482]
[484.62466431 607.57501221]
[481.16571045 622.18457031]
[476.22290039 636.36108398]
[469.84863281 649.95422363]
[462.11047363 662.81982422]
[453.09045410 674.82165527]
[442.88418579 685.83239746]
[431.59988403 695.73529053]
[419.35711670 704.42547607]
[406.28570557 711.81072998]
[392.52420044 717.81286621]
[378.21850586 722.36810303]
[363.52023315 725.42834473]
[348.58520508 726.96099854]
[333.57174683 726.94989014]
[318.63900757 725.39508057]
[303.94528198 722.31311035]
[289.64633179 717.73663330]
[275.89373779 711.71417236]
[262.83328247 704.30957031]
[250.60340881 695.60125732]
[239.33375549 685.68164062]
[229.14381409 674.65582275]
[220.14157104 662.64062500]
[212.42248535 649.76354980]
[206.06835938 636.16101074]
[201.14656067 621.97723389]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 162]
[12 161]
[13 160]
[14 159]
[15 158]
[16 157]
[17 156]
[19 154]
[20 153]
[25 152]
[26 151]
[27 150]
[30 149]
[32 147]
[33 146]
[34 145]
[51 144]
[52 143]
[53 142]
[54 141]
[55 140]
[56 139]
[57 138]
[58 137]
[59 136]
[61 134]
[71 133]
[72 132]
[73 131]
[75 129]
[76 128]
[79 125]
[80 124]
[82 122]
[83 121]
[86 118]
[87 117]
[88 116]
[90 114]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
