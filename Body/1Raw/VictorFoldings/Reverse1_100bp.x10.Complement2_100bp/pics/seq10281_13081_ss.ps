%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[119.21435547 553.47668457]
[104.78608704 549.00433350]
[92.20304108 540.64709473]
[82.48526764 529.08239746]
[76.42053223 515.24780273]
[74.50048065 500.26483154]
[76.88076782 485.34802246]
[83.36842346 471.70666504]
[93.43753815 460.44656372]
[106.27184296 452.48056030]
[120.83091736 448.45440674]
[121.05424500 433.45605469]
[121.27757263 418.45773315]
[121.50090027 403.45938110]
[121.72422791 388.46105957]
[121.83589172 373.46145630]
[121.83589172 358.46145630]
[121.83589172 343.46145630]
[121.83589172 328.46145630]
[121.83589172 313.46145630]
[121.83589172 298.46145630]
[114.09859467 285.73419189]
[121.83589172 271.93402100]
[121.83589172 256.93402100]
[114.09859467 244.20674133]
[121.83589172 230.40657043]
[121.83589172 215.40657043]
[119.83187866 200.54104614]
[115.85978699 186.07652283]
[111.88768768 171.61199951]
[107.91558838 157.14747620]
[103.94349670 142.68295288]
[99.97139740 128.21842957]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[84.60457611 76.05205536]
[78.73561859 62.24788284]
[72.86666107 48.44370651]
[66.99769592 34.63953018]
[54.47771454 24.96685410]
[56.61846161 10.22689342]
[50.74950027 -3.57728386]
[44.88053894 -17.38146019]
[32.36055756 -27.05413437]
[34.50130463 -41.79409790]
[28.63234329 -55.59827423]
[22.76338387 -69.40245056]
[16.89442253 -83.20662689]
[1.95685625 -81.13194275]
[-12.99711514 -82.99317169]
[-26.94887161 -88.65747833]
[-38.94962692 -97.73318481]
[-48.18495941 -109.59684753]
[-54.03005981 -123.43605804]
[-56.09202194 -138.30511475]
[-54.23623657 -153.18962097]
[-48.59517288 -167.07568359]
[-39.55892181 -179.01901245]
[-27.74824333 -188.20907593]
[-33.61720657 -202.01325989]
[-39.48616409 -215.81742859]
[-45.35512543 -229.62161255]
[-51.22408676 -243.42578125]
[-57.09304810 -257.22994995]
[-63.33066559 -263.90304565]
[-62.94493103 -271.28363037]
[-68.60771942 -285.17364502]
[-74.27050781 -299.06369019]
[-79.93328857 -312.95370483]
[-94.48767090 -309.22763062]
[-109.41387177 -307.51812744]
[-124.43382263 -307.85708618]
[-139.26771545 -310.23815918]
[-153.63919067 -314.61703491]
[-167.28051758 -320.91207886]
[-179.93759155 -329.00604248]
[-191.37460327 -338.74813843]
[-201.37847900 -349.95690918]
[-209.76286316 -362.42349243]
[-216.37155151 -375.91567993]
[-221.08143616 -390.18209839]
[-223.80477905 -404.95697021]
[-224.49082947 -419.96508789]
[-223.12681580 -434.92681885]
[-219.73815918 -449.56344604]
[-214.38798523 -463.60229492]
[-207.17593384 -476.78182983]
[-198.23640442 -488.85653687]
[-187.73591614 -499.60144043]
[-175.87007141 -508.81643677]
[-162.85995483 -516.32977295]
[-148.94792175 -522.00152588]
[-134.39312744 -525.72607422]
[-119.46674347 -527.43389893]
[-104.44683075 -527.09332275]
[-89.61320496 -524.71063232]
[-75.24220276 -520.33026123]
[-61.60154343 -514.03369141]
[-48.94535065 -505.93838501]
[-37.50940323 -496.19503784]
[-27.50673866 -484.98519897]
[-19.12370682 -472.51770020]
[-12.51647377 -459.02478027]
[-7.80813169 -444.75787354]
[-5.08639288 -429.98269653]
[-4.40196133 -414.97451782]
[-5.76758814 -400.01293945]
[-9.15783215 -385.37667847]
[-14.50953484 -371.33840942]
[-21.72299767 -358.15963745]
[-30.66383934 -346.08590698]
[-41.16549683 -335.34213257]
[-53.03232956 -326.12841797]
[-66.04326630 -318.61648560]
[-60.38047791 -304.72647095]
[-54.71768951 -290.83642578]
[-49.05490494 -276.94641113]
[-43.28887177 -263.09893799]
[-37.41991043 -249.29473877]
[-31.55094910 -235.49057007]
[-25.68198967 -221.68638611]
[-19.81302834 -207.88221741]
[-13.94406700 -194.07803345]
[0.86864579 -196.20712280]
[15.73913288 -194.42794800]
[29.65300751 -188.85583496]
[41.65958023 -179.86502075]
[50.93679428 -168.06358337]
[56.84754181 -154.25228882]
[58.98337936 -139.37022400]
[57.19277191 -124.43099976]
[51.59181213 -110.45368958]
[42.55672836 -98.39331055]
[30.69859886 -89.07558441]
[36.56755829 -75.27140808]
[42.43651962 -61.46723557]
[48.30548096 -47.66305542]
[60.40567780 -38.97774887]
[58.68471527 -23.25042152]
[64.55368042 -9.44624424]
[70.42263794 4.35793209]
[82.52283478 13.04323864]
[80.80187225 28.77056694]
[86.67083740 42.57474518]
[92.53979492 56.37892151]
[98.40876007 70.18309784]
[102.38267517 55.71907425]
[113.47418976 45.62064743]
[128.24649048 43.01692963]
[142.12219238 48.71470261]
[150.80178833 60.94845963]
[151.59579468 75.92742920]
[144.25817871 89.01021576]
[131.06257629 96.14298248]
[116.09780884 95.11556244]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[114.43592072 124.24633026]
[118.40802002 138.71084595]
[122.38011932 153.17538452]
[126.35221100 167.63990784]
[130.32431030 182.10443115]
[134.29640198 196.56895447]
[137.53855896 181.92352295]
[145.09347534 168.96501160]
[156.24107361 158.92851257]
[169.91882324 152.77067566]
[184.82305908 151.07838440]
[199.53320312 154.01296997]
[212.64717102 161.29472351]
[222.91502380 172.22958374]
[229.35810852 185.77531433]
[231.36228943 200.64080811]
[228.73655701 215.40921021]
[221.73118591 228.67286682]
[211.01385498 239.16758728]
[197.60609436 245.89306641]
[182.78585815 248.20828247]
[167.96568298 245.89256287]
[154.55815125 239.16662598]
[143.84118652 228.67153931]
[136.83589172 215.40657043]
[136.83589172 230.40657043]
[144.57319641 244.20674133]
[136.83589172 256.93402100]
[136.83589172 271.93402100]
[144.57319641 285.73419189]
[136.83589172 298.46145630]
[136.83589172 313.46145630]
[136.83589172 328.46145630]
[136.83589172 343.46145630]
[136.83589172 358.46145630]
[136.83589172 373.46145630]
[139.96530151 382.04312134]
[136.72256470 388.68438721]
[136.49923706 403.68270874]
[136.27590942 418.68106079]
[136.05258179 433.67938232]
[135.82925415 448.67773438]
[150.26200867 453.13558960]
[162.85343933 461.48019409]
[172.58282471 473.03506470]
[178.66145325 486.86355591]
[180.59655762 501.84460449]
[178.23126221 516.76379395]
[171.75730896 530.41168213]
[161.69950867 541.68188477]
[148.87321472 549.66076660]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 201]
[12 200]
[13 199]
[14 198]
[15 197]
[16 195]
[17 194]
[18 193]
[19 192]
[20 191]
[21 190]
[23 188]
[24 187]
[26 185]
[27 184]
[28 165]
[29 164]
[30 163]
[31 162]
[32 161]
[33 160]
[34 159]
[36 157]
[37 147]
[38 146]
[39 145]
[40 144]
[42 142]
[43 141]
[44 140]
[46 138]
[47 137]
[48 136]
[49 135]
[60 124]
[61 123]
[62 122]
[63 121]
[64 120]
[65 119]
[67 118]
[68 117]
[69 116]
[70 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
