%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[193.68499756 548.66564941]
[192.87033081 533.67059326]
[193.80203247 518.68231201]
[196.46751404 503.90353394]
[200.83070374 489.53417969]
[206.83261108 475.76849365]
[214.39207458 462.79269409]
[223.40684509 450.78228760]
[233.75500488 439.89962769]
[245.29663086 430.29196167]
[257.87561035 422.08917236]
[251.19540405 408.65878296]
[244.51521301 395.22839355]
[230.35707092 390.74707031]
[223.39108276 377.22192383]
[228.18751526 362.40194702]
[221.50732422 348.97155762]
[214.82711792 335.54119873]
[202.23141479 327.59149170]
[203.01322937 311.78961182]
[196.33302307 298.35925293]
[181.20695496 289.46154785]
[182.50146484 271.09292603]
[175.62205505 257.76348877]
[168.74264526 244.43406677]
[161.86323547 231.10464478]
[146.36354065 234.98716736]
[130.37675476 235.06520081]
[114.82352448 231.33021545]
[100.60051727 223.99340820]
[88.52867889 213.47377014]
[79.30587769 200.37406921]
[73.46652985 185.44644165]
[71.35067749 169.54910278]
[73.08414459 153.59707642]
[78.57109833 138.50946045]
[87.49929810 125.15653992]
[99.35791016 114.30954742]
[87.47257233 106.94541931]
[87.52339935 92.96368408]
[80.25016785 79.84498596]
[72.97693634 66.72629547]
[64.93576813 54.06377029]
[56.15516281 41.90231323]
[47.37455750 29.74085808]
[38.59395599 17.57940292]
[29.81335068 5.41794682]
[15.46197319 -1.24152112]
[14.28488731 -16.08954239]
[5.50428391 -28.25099754]
[-3.27631927 -40.41245270]
[-17.62769699 -47.07192230]
[-18.80478287 -61.91994476]
[-33.15616226 -68.57941437]
[-34.33324814 -83.42742920]
[-43.11384964 -95.58889008]
[-51.89445496 -107.75034332]
[-64.97606659 -100.37799835]
[-78.80087280 -94.51670837]
[-93.19502258 -90.24019623]
[-107.97747803 -87.60224152]
[-122.96235657 -86.63600922]
[-137.96118164 -87.35366058]
[-152.78535461 -89.74617004]
[-167.24842834 -93.78344727]
[-181.16851807 -99.41471100]
[-194.37055969 -106.56916046]
[-206.68852234 -115.15680695]
[-217.96751404 -125.06964874]
[-228.06565857 -136.18302917]
[-236.85598755 -148.35719299]
[-244.22795105 -161.43902588]
[-250.08882141 -175.26400757]
[-254.36489868 -189.65827942]
[-257.00241089 -204.44082642]
[-257.96820068 -219.42572021]
[-257.25009155 -234.42453003]
[-254.85714722 -249.24862671]
[-250.81944275 -263.71157837]
[-245.18775940 -277.63150024]
[-238.03291321 -290.83334351]
[-229.44490051 -303.15103149]
[-219.53172302 -314.42971802]
[-208.41802979 -324.52755737]
[-196.24360657 -333.31750488]
[-183.16156006 -340.68908691]
[-169.33639526 -346.54953003]
[-154.94200134 -350.82519531]
[-140.15937805 -353.46224976]
[-125.17444611 -354.42761230]
[-110.17565918 -353.70904541]
[-95.35163116 -351.31564331]
[-80.88880157 -347.27752686]
[-66.96905518 -341.64541626]
[-53.76744080 -334.49017334]
[-41.44998550 -325.90179443]
[-30.17159271 -315.98828125]
[-20.07410431 -304.87429810]
[-11.28450298 -292.69961548]
[-3.91333008 -279.61734009]
[1.94671535 -265.79199219]
[6.22193718 -251.39746094]
[8.85856915 -236.61477661]
[9.82345390 -221.62980652]
[9.10445690 -206.63104248]
[6.71061945 -191.80708313]
[2.67204690 -177.34437561]
[-2.96047115 -163.42480469]
[-10.11610031 -150.22340393]
[-18.70484924 -137.90620422]
[-28.61870766 -126.62810516]
[-39.73299789 -116.53094482]
[-30.95239449 -104.36949158]
[-22.17179108 -92.20803833]
[-8.44846058 -86.41843414]
[-6.64332771 -70.70054626]
[7.08000326 -64.91094971]
[8.88513660 -49.19305801]
[17.66573906 -37.03160095]
[26.44634247 -24.87014580]
[40.16967392 -19.08054543]
[41.97480774 -3.36265635]
[50.75540924 8.79879951]
[59.53601456 20.96025467]
[68.31661987 33.12171173]
[77.09722137 45.28316498]
[78.49417114 30.34835815]
[88.31591034 19.01109886]
[102.89916992 15.49990940]
[116.80476379 21.12437439]
[124.84623718 33.78670883]
[124.02432251 48.76417160]
[114.64558411 60.47054672]
[100.20804596 64.53963470]
[86.09563446 59.45306396]
[93.36885834 72.57176208]
[100.64208984 85.69045258]
[112.52742767 93.05458069]
[112.47660065 107.03631592]
[125.97047424 103.05831146]
[139.99133301 101.98740387]
[153.92030334 103.86820984]
[167.14312744 108.61512756]
[179.07722473 116.01620483]
[189.19738770 125.74262238]
[197.05889893 137.36331177]
[202.31706238 150.36399841]
[204.74229431 164.17007446]
[204.23019409 178.17184448]
[200.80598450 191.75160217]
[194.62333679 204.31077576]
[185.95739746 215.29635620]
[175.19265747 224.22523499]
[182.07208252 237.55465698]
[188.95149231 250.88409424]
[195.83090210 264.21353149]
[207.85858154 268.87158203]
[213.31405640 280.11532593]
[209.76339722 291.67904663]
[216.44360352 305.10940552]
[229.51710510 314.01974487]
[228.25749207 328.86099243]
[234.93769836 342.29135132]
[241.61788940 355.72174072]
[256.33050537 360.83804321]
[262.91384888 374.55349731]
[257.94558716 388.54821777]
[264.62579346 401.97857666]
[271.30596924 415.40896606]
[285.43695068 410.32638550]
[300.06240845 406.91870117]
[314.98458862 405.23202515]
[330.00167847 405.28912354]
[344.91061401 407.08926392]
[359.50973511 410.60809326]
[373.60162354 415.79803467]
[386.99569702 422.58886719]
[399.51080322 430.88876343]
[410.97772217 440.58547974]
[421.24133301 451.54791260]
[430.16287231 463.62774658]
[437.62167358 476.66165161]
[443.51684570 490.47335815]
[447.76870728 504.87609863]
[450.31970215 519.67504883]
[451.13537598 534.67010498]
[450.20468140 549.65844727]
[447.54019165 564.43737793]
[443.17794800 578.80700684]
[437.17697144 592.57312012]
[429.61837769 605.54937744]
[420.60440063 617.56042480]
[410.25695801 628.44378662]
[398.71597290 638.05218506]
[386.13754272 646.25585938]
[372.69177246 652.94372559]
[358.56048584 658.02532959]
[343.93478394 661.43206787]
[329.01248169 663.11773682]
[313.99539185 663.05963135]
[299.08657837 661.25848389]
[284.48770142 657.73870850]
[270.39614868 652.54779053]
[257.00253296 645.75610352]
[244.48797607 637.45532227]
[233.02171326 627.75787354]
[222.75881958 616.79473877]
[213.83808899 604.71429443]
[206.38017273 591.67993164]
[200.48590088 577.86779785]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 169]
[12 168]
[13 167]
[16 164]
[17 163]
[18 162]
[20 160]
[21 159]
[23 156]
[24 155]
[25 154]
[26 153]
[38 139]
[40 137]
[41 136]
[42 135]
[43 126]
[44 125]
[45 124]
[46 123]
[47 122]
[49 120]
[50 119]
[51 118]
[53 116]
[55 114]
[56 113]
[57 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
