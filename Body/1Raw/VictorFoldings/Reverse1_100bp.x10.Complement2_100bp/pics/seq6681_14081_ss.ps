%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[20.44146156 513.96539307]
[16.19894218 528.37475586]
[10.14857578 542.12329102]
[2.38971710 554.98516846]
[-6.95022821 566.74926758]
[-17.71788788 577.22235107]
[-29.73645020 586.23248291]
[-42.80855560 593.63171387]
[-56.71955109 599.29846191]
[-71.24100494 603.13983154]
[-86.13446045 605.09259033]
[-101.15535736 605.12469482]
[-116.05703735 603.23571777]
[-130.59478760 599.45654297]
[-144.52992249 593.84936523]
[-157.63356018 586.50616455]
[-169.69058228 577.54754639]
[-180.50296021 567.12060547]
[-189.89315796 555.39660645]
[-197.70700073 542.56805420]
[-203.81614685 528.84552002]
[-208.12028503 514.45446777]
[-210.54875183 499.63116455]
[-211.06167603 484.61898804]
[-209.65060425 469.66448975]
[-206.33872986 455.01321411]
[-201.18041992 440.90576172]
[-194.26040649 427.57379150]
[-185.69229126 415.23620605]
[-175.61679077 404.09561157]
[-164.19935608 394.33496094]
[-151.62745667 386.11453247]
[-138.10752869 379.56927490]
[-123.86161804 374.80670166]
[-109.12361908 371.90502930]
[-94.13555908 370.91186523]
[-79.14354706 371.84356689]
[-64.39377594 374.68478394]
[-50.12844467 379.38888550]
[-43.64894867 365.86056519]
[-37.16945267 352.33221436]
[-30.68995857 338.80386353]
[-24.21046257 325.27551270]
[-17.73096657 311.74716187]
[-19.21140480 296.92633057]
[-6.27200222 287.82232666]
[0.20749369 274.29400635]
[6.68698978 260.76565552]
[5.86650705 257.33648682]
[6.66620779 253.33955383]
[9.33485794 249.54064941]
[13.76979923 246.78776550]
[20.84690475 233.56224060]
[27.92400932 220.33671570]
[35.00111389 207.11117554]
[42.07822037 193.88565063]
[49.15532684 180.66012573]
[56.23243332 167.43460083]
[50.67466354 151.56166077]
[58.47002792 136.27941895]
[75.22979736 131.26649475]
[82.10920715 117.93706512]
[88.98862457 104.60763550]
[76.41435242 112.78613281]
[61.74994278 115.94129181]
[46.92474365 113.65799713]
[33.88926315 106.23666382]
[24.35854530 94.65367889]
[19.58651924 80.43299866]
[20.20102882 65.44559479]
[26.12122154 51.66331100]
[36.56819916 40.89944839]
[50.16747665 34.57017899]
[65.12983704 33.50822830]
[79.48672485 37.85330963]
[91.34924316 47.03375626]
[99.15667725 59.84172058]
[101.88182831 74.59209442]
[99.16529083 89.34644318]
[108.82610321 77.87174225]
[118.48691559 66.39704132]
[128.14772034 54.92234039]
[131.11689758 39.38224792]
[145.23283386 34.62937546]
[148.20201111 19.08928108]
[162.31794739 14.33641243]
[161.15415955 -1.19688582]
[171.11505127 -12.69624138]
[185.93084717 -13.71000290]
[195.59165955 -25.18470383]
[195.26837158 -38.07881927]
[203.55111694 -47.43723679]
[215.59121704 -48.60452271]
[225.42178345 -59.93411636]
[235.25236511 -71.26371002]
[245.08294678 -82.59329987]
[254.91352844 -93.92289734]
[264.74411011 -105.25248718]
[274.57470703 -116.58208466]
[264.28839111 -127.51747131]
[255.16117859 -139.43742371]
[247.28674316 -152.21960449]
[240.74588013 -165.73286438]
[235.60569763 -179.83851624]
[231.91897583 -194.39183044]
[229.72351074 -209.24346924]
[229.04183960 -224.24101257]
[229.88098145 -239.23057556]
[232.23229980 -254.05831909]
[236.07167053 -268.57211304]
[241.35969543 -282.62301636]
[248.04212952 -296.06683350]
[256.05038452 -308.76562500]
[265.30227661 -320.58905029]
[275.70285034 -331.41580200]
[287.14541626 -341.13479614]
[299.51254272 -349.64627075]
[312.67733765 -356.86288452]
[326.50466919 -362.71060181]
[340.85266113 -367.12942505]
[355.57409668 -370.07397461]
[370.51791382 -371.51403809]
[385.53073120 -371.43487549]
[400.45849609 -369.83728027]
[415.14807129 -366.73764038]
[429.44866943 -362.16775513]
[443.21356201 -356.17453003]
[456.30148315 -348.81945801]
[468.57815552 -340.17803955]
[479.91760254 -330.33892822]
[490.20343018 -319.40307617]
[499.33010864 -307.48272705]
[507.20397949 -294.70019531]
[513.74426270 -281.18664551]
[518.88378906 -267.08074951]
[522.56988525 -252.52728271]
[524.76470947 -237.67555237]
[525.44567871 -222.67797852]
[524.60589600 -207.68846130]
[522.25396729 -192.86080933]
[518.41394043 -178.34718323]
[513.12530518 -164.29650879]
[506.44226074 -150.85299683]
[498.43347168 -138.15457153]
[489.18106079 -126.33154297]
[478.77996826 -115.50524139]
[467.33697510 -105.78675842]
[454.96948242 -97.27583313]
[441.80438232 -90.05978394]
[427.97680664 -84.21267700]
[413.62860107 -79.79449463]
[398.90704346 -76.85059357]
[383.96316528 -75.41117096]
[368.95034790 -75.49099731]
[354.02264404 -77.08925629]
[339.33322144 -80.18955231]
[325.03283691 -84.76006317]
[311.26818848 -90.75389099]
[298.18057251 -98.10952759]
[285.90429688 -106.75150299]
[276.07369995 -95.42190552]
[266.24313354 -84.09231567]
[256.41253662 -72.76271820]
[246.58197021 -61.43312836]
[236.75138855 -50.10353470]
[226.92080688 -38.77394104]
[224.52124023 -21.38978004]
[207.06636047 -15.52389240]
[197.40554810 -4.04919243]
[198.93106079 10.72268677]
[189.29708862 22.49728584]
[173.79263306 23.99722290]
[171.51446533 38.71657181]
[156.70753479 44.29018784]
[154.42936707 59.00953674]
[139.62242126 64.58315277]
[129.96160889 76.05785370]
[120.30080414 87.53255463]
[110.63999176 99.00725555]
[102.31805420 111.48704529]
[95.43863678 124.81647491]
[88.55922699 138.14590454]
[94.10440826 150.42048645]
[91.60417175 163.45733643]
[82.19132996 172.53921509]
[69.45796204 174.51170349]
[62.38085556 187.73722839]
[55.30374908 200.96275330]
[48.22664261 214.18829346]
[41.14953613 227.41381836]
[34.07243347 240.63934326]
[26.99532700 253.86486816]
[20.21533585 267.24514771]
[13.73583889 280.77349854]
[7.25634336 294.30184937]
[8.27332401 310.09033203]
[-4.20262098 318.22665405]
[-10.68211651 331.75500488]
[-17.16161346 345.28335571]
[-23.64110756 358.81170654]
[-30.12060356 372.34005737]
[-36.60010147 385.86837769]
[-23.99313545 394.03494263]
[-12.53402710 403.74664307]
[-2.41094255 414.84402466]
[6.20988703 427.14480591]
[13.18690014 440.44705200]
[18.40552711 454.53231812]
[21.78007507 469.16928101]
[23.25513077 484.11761475]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 202]
[40 201]
[41 200]
[42 199]
[43 198]
[44 197]
[46 195]
[47 194]
[48 193]
[52 192]
[53 191]
[54 190]
[55 189]
[56 188]
[57 187]
[58 186]
[61 182]
[62 181]
[63 180]
[79 179]
[80 178]
[81 177]
[82 176]
[84 174]
[86 172]
[89 169]
[90 168]
[93 166]
[94 165]
[95 164]
[96 163]
[97 162]
[98 161]
[99 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
