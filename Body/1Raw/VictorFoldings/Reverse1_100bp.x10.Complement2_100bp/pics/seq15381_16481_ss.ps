%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUAUCACAAUUACAGUAAUUCCUCUCUUCCUUCUCUUCAUUCGGCUCCCGCAGAAACUAACACAUCAUUCCCACCUUCCACUAAAAUAGCCUUACCCUCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[83.03360748 552.30963135]
[84.51697540 537.29425049]
[89.83697510 523.17474365]
[98.63088226 510.91384888]
[110.29911041 501.34750366]
[124.04611206 495.12796021]
[121.60037994 480.32870483]
[119.15465546 465.52941895]
[116.51663208 463.18994141]
[114.88070679 459.45648193]
[114.88970184 454.81393433]
[116.94558716 450.01596069]
[115.16311646 435.12225342]
[113.38065338 420.22854614]
[111.59818268 405.33480835]
[109.81571960 390.44110107]
[107.81170654 375.57556152]
[105.58658600 360.74154663]
[103.36147308 345.90750122]
[101.02598572 331.09042358]
[98.58025360 316.29113770]
[96.13452911 301.49188232]
[93.68880463 286.69259644]
[84.09582520 298.22409058]
[69.17182159 299.73205566]
[57.46593094 290.35272217]
[55.68382263 275.45895386]
[64.84636688 263.58261108]
[79.70484924 261.52697754]
[91.74715424 270.46881104]
[90.63150787 255.51036072]
[89.51585388 240.55191040]
[88.40020752 225.59344482]
[87.17323303 210.64372253]
[79.43970490 223.49644470]
[66.36405945 230.84678650]
[51.36423874 230.77337646]
[38.36116028 223.29541016]
[30.75379753 210.36761475]
[30.53069687 195.36927795]
[37.75017548 182.22091675]
[50.52508163 174.35951233]
[65.51608276 173.83998108]
[78.80456543 180.79815674]
[86.91668701 193.41433716]
[87.80950165 178.44091797]
[80.84346008 165.27568054]
[89.38844299 151.96051025]
[90.28125763 136.98710632]
[91.17407227 122.01370239]
[92.06688690 107.04029846]
[92.29021454 92.04196167]
[84.14546204 78.47827148]
[91.50039673 65.52627563]
[91.05378723 50.53292465]
[90.60718536 35.53957367]
[89.93740082 20.55453491]
[89.04458618 5.58112955]
[88.15176392 -9.39227581]
[75.24349213 -17.79957390]
[69.82416534 -32.02927017]
[73.77620697 -46.54978561]
[85.38179016 -55.84755325]
[84.48897552 -70.82096100]
[75.94399261 -84.13613129]
[82.91003418 -97.30137634]
[82.01721191 -112.27478027]
[81.12439728 -127.24818420]
[80.23158264 -142.22158813]
[68.47451782 -132.90647888]
[53.82755280 -136.14166260]
[47.08789062 -149.54229736]
[53.22375488 -163.22991943]
[67.71202087 -167.11453247]
[79.87167358 -158.33399963]
[80.09500122 -173.33233643]
[80.31832886 -188.33067322]
[80.54165649 -203.32901001]
[68.29444122 -212.67309570]
[63.94848633 -227.26644897]
[68.96956635 -241.45280457]
[81.23453522 -249.86163330]
[81.45786285 -264.85998535]
[81.68119049 -279.85830688]
[79.13730621 -284.41635132]
[78.64537811 -289.03277588]
[79.88401794 -292.91616821]
[82.26433563 -295.51739502]
[83.15715027 -310.49081421]
[84.04996490 -325.46423340]
[84.94278717 -340.43762207]
[85.83560181 -355.41104126]
[86.72841644 -370.38442993]
[72.21205139 -374.38052368]
[58.84391785 -381.30776978]
[47.20841599 -390.86334229]
[37.81420517 -402.62951660]
[31.07195091 -416.09188843]
[27.27639961 -430.66195679]
[26.59347725 -445.70281982]
[29.05303764 -460.55691528]
[34.54756165 -474.57492065]
[42.83684540 -487.14398193]
[53.55852509 -497.71466064]
[66.24388885 -505.82485962]
[80.33838654 -511.11999512]
[95.22587585 -513.36865234]
[110.25553131 -512.47247314]
[124.77032471 -508.47067261]
[138.13572693 -501.53817749]
[149.76747131 -491.97802734]
[159.15705872 -480.20819092]
[165.89401245 -466.74313354]
[169.68383789 -452.17156982]
[170.36083984 -437.13043213]
[167.89543152 -422.27731323]
[162.39540100 -408.26147461]
[154.10116577 -395.69567871]
[143.37533569 -385.12921143]
[130.68678284 -377.02401733]
[116.59019470 -371.73440552]
[101.70182037 -369.49160767]
[100.80900574 -354.51821899]
[99.91619110 -339.54479980]
[99.02337646 -324.57141113]
[98.13055420 -309.59799194]
[97.23773956 -294.62460327]
[96.67952728 -279.63497925]
[96.45619965 -264.63665771]
[96.23287201 -249.63830566]
[108.24205017 -240.86802673]
[112.83852386 -226.53846741]
[108.05998993 -212.08097839]
[95.53999329 -203.10568237]
[95.31666565 -188.10734558]
[95.09333801 -173.10900879]
[94.87001038 -158.11067200]
[95.20498657 -143.11441040]
[96.09780884 -128.14100647]
[96.99062347 -113.16759491]
[97.88343811 -98.19419098]
[106.36456299 -85.95001221]
[99.46237946 -71.71377563]
[100.35519409 -56.74037170]
[112.98340607 -48.88758469]
[118.63293457 -34.93957901]
[114.94293976 -20.16672325]
[103.12517548 -10.28509140]
[104.01799011 4.68831396]
[104.91080475 19.66172028]
[107.82487488 23.44553566]
[108.39290619 29.10012245]
[105.60053253 35.09296799]
[106.04714203 50.08631897]
[106.49374390 65.07966614]
[114.60655212 77.57093048]
[107.28356934 91.59535217]
[118.33115387 81.44889069]
[133.32284546 81.94828033]
[143.67070007 92.80746460]
[143.44702148 107.80579376]
[132.77992249 118.35155487]
[117.78000641 118.40364838]
[107.04029846 107.93311310]
[106.14747620 122.90651703]
[105.25466156 137.87992859]
[104.36184692 152.85333252]
[111.26403046 167.08956909]
[102.78290558 179.33374023]
[101.89009094 194.30714417]
[102.11341858 209.30548096]
[105.99596405 217.57371521]
[103.35865784 224.47779846]
[104.47431183 239.43626404]
[105.58995819 254.39471436]
[106.70560455 269.35314941]
[108.48807526 284.24688721]
[110.93379974 299.04614258]
[113.37953186 313.84542847]
[115.82525635 328.64468384]
[120.31201172 336.60125732]
[118.19551849 343.68237305]
[120.42063141 358.51641846]
[122.64575195 373.35046387]
[126.45871735 378.75164795]
[126.90465546 384.41717529]
[124.70943451 388.65863037]
[126.49190521 403.55236816]
[128.27436829 418.44607544]
[130.05683899 433.33978271]
[131.83929443 448.23352051]
[133.95391846 463.08370972]
[136.39965820 477.88296509]
[138.84538269 492.68225098]
[153.86248779 494.14822388]
[167.98812866 499.45187378]
[180.25920105 508.23156738]
[189.83905029 519.88867188]
[196.07449341 533.62847900]
[198.54039001 548.51409912]
[197.06861877 563.53063965]
[191.75953674 577.65423584]
[182.97509766 589.92193604]
[171.31425476 599.49725342]
[157.57206726 605.72741699]
[142.68548584 608.18756104]
[127.66952515 606.70996094]
[113.54798126 601.39544678]
[101.28369141 592.60626221]
[91.71285248 580.94171143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 194]
[7 193]
[8 192]
[12 191]
[13 190]
[14 189]
[15 188]
[16 187]
[17 184]
[18 183]
[19 182]
[20 180]
[21 179]
[22 178]
[23 177]
[30 176]
[31 175]
[32 174]
[33 173]
[34 171]
[45 170]
[46 169]
[48 167]
[49 166]
[50 165]
[51 164]
[52 157]
[54 155]
[55 154]
[56 153]
[57 150]
[58 149]
[59 148]
[63 144]
[64 143]
[66 141]
[67 140]
[68 139]
[69 138]
[75 137]
[76 136]
[77 135]
[78 134]
[82 130]
[83 129]
[84 128]
[88 127]
[89 126]
[90 125]
[91 124]
[92 123]
[93 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
