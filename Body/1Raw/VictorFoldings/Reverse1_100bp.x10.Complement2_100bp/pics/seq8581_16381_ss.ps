%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[220.47241211 472.11495972]
[226.27218628 458.25463867]
[233.94456482 445.33639526]
[243.34020996 433.61172485]
[254.27622986 423.30883789]
[266.53976440 414.62826538]
[259.66033936 401.29882812]
[246.94767761 393.53756714]
[247.49412537 377.72579956]
[240.61471558 364.39636230]
[233.73530579 351.06692505]
[227.87422180 346.56475830]
[226.85435486 337.48742676]
[220.17416382 324.05706787]
[213.19570923 310.77920532]
[205.92248535 297.66052246]
[198.64926147 284.54183960]
[191.37602234 271.42312622]
[175.86773682 263.20971680]
[176.34075928 244.80163574]
[168.87301636 231.79267883]
[161.40527344 218.78372192]
[145.03585815 217.55097961]
[132.50122070 206.69537354]
[128.87095642 190.34536743]
[135.76914978 174.90156555]
[128.10856628 162.00523376]
[120.44795990 149.10891724]
[112.78736877 136.21258545]
[105.12677002 123.31626129]
[90.50192261 121.90246582]
[79.47486115 112.19222260]
[76.22253418 97.86367035]
[81.97690582 84.34433746]
[74.31630707 71.44801331]
[66.65570831 58.55168533]
[67.51473236 73.52706909]
[63.97984695 88.10460663]
[56.35684967 101.02319336]
[45.30520630 111.16524506]
[31.78100014 117.65337372]
[16.95420456 119.92628479]
[2.10748768 117.78735352]
[-11.47476006 111.42162323]
[-22.61754036 101.37979126]
[-30.35688782 88.53057098]
[-34.02327347 73.98554993]
[-33.29952240 59.00301743]
[-28.24823952 44.87911987]
[-19.30641365 32.83570862]
[-7.24760342 23.91465950]
[6.88498402 18.88773537]
[21.86873817 18.18981361]
[36.40741730 21.88127136]
[49.24327469 29.64276123]
[59.26394653 40.79990387]
[55.50764465 26.27784348]
[51.75134277 11.75578403]
[47.88703918 -2.73790908]
[43.91493988 -17.20243263]
[39.94284439 -31.66695595]
[35.86317825 -46.10150909]
[31.67616844 -60.50529099]
[26.27571678 -67.87230682]
[27.53575897 -75.15476227]
[23.56366348 -89.61928558]
[19.59156609 -104.08380890]
[15.61947060 -118.54833221]
[7.27822638 -106.08142853]
[-7.40791464 -103.02900696]
[-20.02606392 -111.13964081]
[-23.34797287 -125.76718140]
[-15.47070122 -138.53231812]
[-0.90670770 -142.12258911]
[12.00051785 -134.48208618]
[9.33472157 -149.24331665]
[6.66892624 -164.00453186]
[4.00313091 -178.76574707]
[-11.01314259 -178.22511292]
[-25.95350266 -179.82711792]
[-40.51378250 -183.53912354]
[-54.39755630 -189.28556824]
[-67.32215881 -196.94946289]
[-79.02447510 -206.37478638]
[-89.26625061 -217.36962891]
[-97.83898163 -229.71017456]
[-104.56813049 -243.14518738]
[-109.31671143 -257.40112305]
[-111.98804474 -272.18777466]
[-112.52774811 -287.20407104]
[-110.92481995 -302.14431763]
[-107.21191406 -316.70437622]
[-101.46460724 -330.58779907]
[-93.79991150 -343.51193237]
[-84.37387085 -355.21365356]
[-73.37837982 -365.45474243]
[-61.03730392 -374.02673340]
[-47.60188675 -380.75503540]
[-33.34565735 -385.50274658]
[-18.55885124 -388.17315674]
[-3.54251003 -388.71191406]
[11.39765167 -387.10809326]
[25.95747185 -383.39425659]
[39.84053040 -377.64608765]
[52.76419067 -369.98062134]
[64.46533966 -360.55383301]
[74.70574951 -349.55770874]
[83.27695465 -337.21612549]
[90.00444794 -323.78027344]
[94.75125885 -309.52374268]
[97.42076111 -294.73678589]
[97.95860291 -279.72039795]
[96.35382843 -264.78033447]
[92.63912201 -250.22074890]
[86.89009094 -236.33805847]
[79.22380066 -223.41487122]
[69.79631042 -211.71430969]
[58.79955292 -201.47456360]
[46.45741653 -192.90412903]
[33.02116776 -186.17747498]
[18.76434898 -181.43153381]
[21.43014336 -166.67031860]
[24.09593964 -151.90910339]
[26.76173401 -137.14788818]
[30.08399391 -122.52042389]
[34.05609131 -108.05590057]
[38.02818680 -93.59137726]
[42.00028229 -79.12685394]
[46.07994843 -64.69230652]
[50.26696014 -50.28852081]
[55.15258789 -44.74303436]
[54.40736771 -35.63905334]
[58.37946701 -21.17453003]
[62.35156250 -6.71000528]
[67.15408325 -1.09239280]
[66.27339935 7.99948359]
[70.02970123 22.52154350]
[73.78600311 37.04360199]
[79.55204010 50.89108658]
[87.21263123 63.78741455]
[94.87322998 76.68373871]
[109.49807739 78.09753418]
[120.52513885 87.80777740]
[123.77746582 102.13632965]
[118.02309418 115.65566254]
[125.68369293 128.55198669]
[133.34428406 141.44831848]
[141.00488281 154.34463501]
[148.66548157 167.24096680]
[162.44700623 167.48681641]
[174.21405029 174.45497131]
[180.94758606 186.23330688]
[180.98161316 199.69224548]
[174.41423035 211.31599426]
[181.88197327 224.32493591]
[189.34971619 237.33389282]
[201.57339478 241.45025635]
[207.52548218 252.43917847]
[204.49472046 264.14990234]
[211.76794434 277.26858521]
[219.04118347 290.38729858]
[226.31440735 303.50598145]
[230.78984070 306.19253540]
[233.51475525 309.95129395]
[234.37388611 313.93588257]
[233.60453796 317.37686157]
[240.28474426 330.80725098]
[247.06472778 344.18753052]
[253.94413757 357.51693726]
[260.82354736 370.84637451]
[274.02828979 379.56106567]
[272.98977661 394.41943359]
[279.86917114 407.74884033]
[294.04922485 402.78170776]
[308.78256226 399.83645630]
[323.78244019 398.97042847]
[338.75686646 400.20050049]
[353.41433716 403.50268555]
[367.46957397 408.81277466]
[380.64895630 416.02731323]
[392.69595337 425.00595093]
[403.37606812 435.57388306]
[412.48144531 447.52539062]
[419.83477783 460.62783813]
[425.29299927 474.62622070]
[428.74981689 489.24798584]
[430.13793945 504.20858765]
[429.43038940 519.21673584]
[426.64089966 533.98040771]
[421.82379150 548.21209717]
[415.07281494 561.63488770]
[406.51937866 573.98742676]
[396.33001709 585.02923584]
[384.70300293 594.54553223]
[371.86471558 602.35095215]
[358.06503296 608.29357910]
[343.57257080 612.25775146]
[328.66943359 614.16632080]
[313.64572144 613.98211670]
[298.79385376 611.70874023]
[284.40295410 607.39038086]
[270.75311279 601.11120605]
[258.11004639 592.99340820]
[246.71986389 583.19494629]
[236.80427551 571.90655518]
[228.55627441 559.34802246]
[222.13642883 545.76379395]
[217.66969299 531.41827393]
[215.24301147 516.59069824]
[214.90362549 501.56964111]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 173]
[7 172]
[9 170]
[10 169]
[11 168]
[13 167]
[14 166]
[15 162]
[16 161]
[17 160]
[18 159]
[20 156]
[21 155]
[22 154]
[26 149]
[27 148]
[28 147]
[29 146]
[30 145]
[34 141]
[35 140]
[36 139]
[56 138]
[57 137]
[58 136]
[59 134]
[60 133]
[61 132]
[62 130]
[63 129]
[65 128]
[66 127]
[67 126]
[68 125]
[75 124]
[76 123]
[77 122]
[78 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
