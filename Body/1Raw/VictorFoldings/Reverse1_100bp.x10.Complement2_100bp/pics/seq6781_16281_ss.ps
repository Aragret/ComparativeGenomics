%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[-2.84082484 546.86761475]
[-17.04813766 539.41564941]
[-19.93845558 523.63513184]
[-9.29457474 511.63146973]
[-8.84796810 496.63812256]
[-16.20289993 483.68612671]
[-8.05814743 470.12243652]
[-7.61154175 455.12908936]
[-7.16493559 440.13574219]
[-6.71832991 425.14239502]
[-6.27172375 410.14904785]
[-5.82511806 395.15570068]
[-13.47074604 408.06091309]
[-25.02512169 417.62628174]
[-39.13084793 422.72808838]
[-54.13079453 422.76699829]
[-68.26278687 417.73840332]
[-79.86661530 408.23306274]
[-87.57907104 395.36770630]
[-90.49409485 380.65365601]
[-88.26924896 365.81958008]
[-81.16588593 352.60812378]
[-70.01852417 342.57138062]
[-56.13672256 336.88845825]
[-41.15131760 336.22695923]
[-26.82277107 340.66461182]
[-14.83438873 349.68008423]
[-6.59455490 362.21426392]
[-3.07117462 376.79617310]
[0.90092158 362.33163452]
[-6.66647243 349.55392456]
[-2.84425473 334.82824707]
[10.60950279 326.97750854]
[14.58159924 312.51300049]
[18.55369568 298.04846191]
[22.52579117 283.58395386]
[26.49788857 269.11941528]
[30.46998405 254.65489197]
[29.05313301 251.42613220]
[29.12976837 247.35069275]
[31.08079910 243.13800049]
[34.95589828 239.64076233]
[39.56990814 225.36802673]
[44.18391800 211.09530640]
[43.25030899 203.76385498]
[48.97432709 196.64532471]
[53.80032730 182.44287109]
[40.38420486 189.15164185]
[25.76584053 185.78959656]
[16.62854767 173.89379883]
[17.14977837 158.90286255]
[27.09123039 147.67042542]
[41.90780640 145.33181763]
[54.82556534 152.95622253]
[59.93869019 167.05970764]
[66.21604919 153.43638611]
[66.16026306 146.04594421]
[72.68962860 139.65805054]
[79.16912079 126.12969971]
[85.64862061 112.60135651]
[80.93307495 98.90062714]
[87.19206238 85.83267975]
[100.82303619 80.91915131]
[107.30252838 67.39080048]
[113.78202820 53.86245728]
[119.85585785 40.14719009]
[125.51864624 26.25716400]
[131.18142700 12.36713696]
[136.84422302 -1.52288961]
[142.50700378 -15.41291618]
[148.16979980 -29.30294418]
[153.83258057 -43.19297028]
[159.49536133 -57.08299637]
[155.22151184 -69.25250244]
[160.22401428 -80.70496368]
[171.32128906 -85.51919556]
[177.19026184 -99.32337189]
[183.05921936 -113.12754822]
[188.61843872 -127.05934143]
[193.86515808 -141.11181641]
[198.26615906 -155.45166016]
[201.80583191 -170.02804565]
[205.34550476 -184.60441589]
[208.88517761 -199.18078613]
[212.42485046 -213.75717163]
[215.96452332 -228.33354187]
[219.39558411 -242.93586731]
[222.71783447 -257.56332397]
[226.04010010 -272.19079590]
[224.45260620 -278.60882568]
[226.09770203 -284.04855347]
[229.68516541 -287.20120239]
[225.65023804 -302.49923706]
[236.32817078 -312.88339233]
[240.08447266 -327.40545654]
[243.84077454 -341.92752075]
[247.59707642 -356.44958496]
[251.35337830 -370.97164917]
[255.10968018 -385.49371338]
[241.59146118 -392.11508179]
[229.68305969 -401.32241821]
[219.87210083 -412.73861694]
[212.56033325 -425.89624023]
[208.04718018 -440.25646973]
[206.51745605 -455.23129272]
[208.03379822 -470.20745850]
[212.53410339 -484.57171631]
[219.83409119 -497.73587036]
[229.63484192 -509.16085815]
[241.53501892 -518.37878418]
[255.04731750 -525.01226807]
[269.61840820 -528.78961182]
[284.65161133 -529.55615234]
[299.53134155 -527.28051758]
[313.64825439 -522.05584717]
[326.42431641 -514.09613037]
[337.33633423 -503.72726440]
[345.93743896 -491.37390137]
[351.87548828 -477.54187012]
[354.90725708 -462.79760742]
[354.90859985 -447.74487305]
[351.87951660 -433.00006104]
[345.94400024 -419.16696167]
[337.34512329 -406.81204224]
[326.43499756 -396.44122314]
[313.66036987 -388.47918701]
[299.54440308 -383.25195312]
[284.66510010 -380.97360229]
[269.63174438 -381.73739624]
[265.87542725 -367.21533203]
[262.11914062 -352.69329834]
[258.36282349 -338.17123413]
[254.60653687 -323.64916992]
[250.85023499 -309.12710571]
[255.15383911 -294.86779785]
[244.20722961 -283.44488525]
[240.66755676 -268.86853027]
[237.34530640 -254.24105835]
[234.02304077 -239.61360168]
[235.60700989 -232.39468384]
[230.54089355 -224.79386902]
[227.00122070 -210.21749878]
[223.46154785 -195.64111328]
[219.92187500 -181.06474304]
[216.38220215 -166.48837280]
[212.84252930 -151.91198730]
[225.10308838 -160.55368042]
[240.10275269 -160.45372009]
[252.24702454 -151.64938354]
[257.00640869 -137.42445374]
[252.60574341 -123.08450317]
[240.68640137 -113.97796631]
[225.69396973 -113.50135803]
[213.22027588 -121.83244324]
[207.91763306 -135.86509705]
[202.67091370 -121.81262970]
[203.79405212 -118.47033691]
[203.35414124 -114.41799164]
[201.03504944 -110.39616394]
[196.86338806 -107.25858307]
[190.99443054 -93.45440674]
[185.12547302 -79.65023041]
[188.18963623 -62.37082672]
[173.38539124 -51.42021179]
[167.72261047 -37.53018570]
[162.05981445 -23.64015770]
[156.39703369 -9.75012970]
[150.73425293 4.13989687]
[145.07145691 18.02992439]
[139.40867615 31.91995049]
[133.74588013 45.80997849]
[134.70751953 48.44311523]
[134.68406677 51.61582184]
[133.46479797 54.95479965]
[130.97787476 58.01743698]
[127.31037140 60.34195328]
[120.83087921 73.87030029]
[114.35137939 87.39864349]
[119.06692505 101.09937286]
[112.80793762 114.16732025]
[99.17696381 119.08084869]
[92.69747162 132.60919189]
[86.21797180 146.13754272]
[79.83937073 159.71374512]
[73.56201172 173.33706665]
[68.00278473 187.26885986]
[63.17678452 201.47131348]
[58.45664978 215.70930481]
[53.84263992 229.98204041]
[49.22863007 244.25477600]
[44.93450928 258.62698364]
[40.96241379 273.09152222]
[36.99031448 287.55603027]
[33.01821899 302.02056885]
[29.04612350 316.48507690]
[25.07402611 330.94961548]
[32.63153839 344.57025146]
[28.39721680 359.18273926]
[15.36544514 366.30374146]
[11.39334965 380.76824951]
[9.16823196 395.60229492]
[8.72162628 410.59564209]
[8.27502060 425.58901978]
[7.82841444 440.58236694]
[7.38180828 455.57571411]
[6.93520260 470.56906128]
[14.25819016 484.59347534]
[6.14538145 497.08474731]
[5.69877577 512.07806396]
[15.60931587 524.69396973]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 209]
[5 208]
[7 206]
[8 205]
[9 204]
[10 203]
[11 202]
[12 201]
[29 200]
[30 199]
[33 196]
[34 195]
[35 194]
[36 193]
[37 192]
[38 191]
[42 190]
[43 189]
[44 188]
[46 187]
[47 186]
[55 185]
[56 184]
[58 183]
[59 182]
[60 181]
[63 178]
[64 177]
[65 176]
[66 171]
[67 170]
[68 169]
[69 168]
[70 167]
[71 166]
[72 165]
[73 164]
[76 162]
[77 161]
[78 160]
[79 156]
[80 155]
[81 146]
[82 145]
[83 144]
[84 143]
[85 142]
[86 141]
[87 139]
[88 138]
[89 137]
[92 136]
[94 134]
[95 133]
[96 132]
[97 131]
[98 130]
[99 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
