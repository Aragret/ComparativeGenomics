%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAAAAUAAAAUUCAAACAACCAAUCCAUCAACUCCAGAUCCCGACAAUCUUCAGGAUCCUUUCACUGUCGCUCCCGACACUCAAAAUCCAUCUCCCCCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[102.49831390 714.64916992]
[87.66197205 712.39514160]
[73.02695465 709.07641602]
[58.66955948 704.71032715]
[44.66464233 699.31958008]
[31.08521652 692.93231201]
[18.00208092 685.58184814]
[5.48344803 677.30651855]
[-6.40541792 668.14941406]
[-17.60253143 658.15826416]
[-28.04951859 647.38525391]
[-37.69190979 635.88647461]
[-46.47943115 623.72186279]
[-54.36627579 610.95489502]
[-61.31131744 597.65209961]
[-67.27835083 583.88287354]
[-72.23627472 569.71893311]
[-76.15922546 555.23419189]
[-79.02675629 540.50408936]
[-80.82391357 525.60552979]
[-81.54133606 510.61608887]
[-81.17528534 495.61395264]
[-79.72765350 480.67736816]
[-77.20600128 465.88415527]
[-73.62347412 451.31146240]
[-68.99874878 437.03527832]
[-63.35593414 423.13000488]
[-56.72445297 409.66815186]
[-49.13887787 396.71994019]
[-40.63875198 384.35281372]
[-31.26840019 372.63128662]
[-21.07667160 361.61645508]
[-10.11670017 351.36575317]
[1.55437171 341.93261719]
[13.87569618 333.36627197]
[26.78303337 325.71130371]
[40.20909119 319.00765991]
[54.08387375 313.29031372]
[68.33504486 308.58901978]
[82.88829041 304.92834473]
[97.66775513 302.32733154]
[112.59637451 300.79956055]
[112.14977264 285.80621338]
[111.70316315 270.81286621]
[111.25656128 255.81951904]
[110.80995178 240.82617188]
[100.79574585 226.41497803]
[109.65853882 210.27395630]
[108.98875427 195.28892517]
[108.31896210 180.30387878]
[107.64917755 165.31884766]
[105.42406464 150.48480225]
[101.66776276 135.96273804]
[97.91146088 121.44068146]
[94.15515900 106.91862488]
[91.14314270 104.51028442]
[89.20730591 100.78598022]
[88.91157532 96.25612640]
[90.57085419 91.66410828]
[87.46674347 76.98880768]
[84.36264038 62.31350327]
[81.25852966 47.63820267]
[78.15441895 32.96289825]
[74.83216095 18.33543968]
[71.29248810 3.75906444]
[67.64439392 -10.79055595]
[63.88809586 -25.31261444]
[59.48709869 -39.65246201]
[54.45018387 -53.78149033]
[49.41326523 -67.91052246]
[44.37635040 -82.03955078]
[29.68006325 -78.92464447]
[14.69972515 -77.79642487]
[-0.29732510 -78.67501831]
[-15.04344654 -81.54473877]
[-29.27547836 -86.35439301]
[-42.73943329 -93.01812744]
[-55.19502640 -101.41703033]
[-66.41998291 -111.40121460]
[-76.21396637 -122.79248810]
[-84.40220642 -135.38757324]
[-90.83856964 -148.96170044]
[-95.40818024 -163.27259827]
[-98.02950287 -178.06489563]
[-98.65575409 -193.07460022]
[-97.27574921 -208.03385925]
[-93.91413116 -222.67567444]
[-88.63087463 -236.73876953]
[-81.52027130 -249.97216797]
[-72.70922852 -262.13970947]
[-62.35497665 -273.02423096]
[-50.64230728 -282.43148804]
[-37.78024292 -290.19363403]
[-23.99832153 -296.17211914]
[-9.54250145 -300.26022339]
[5.32923841 -302.38504028]
[20.35149384 -302.50860596]
[35.25617599 -300.62872314]
[49.77729416 -296.77899170]
[63.65569687 -291.02804565]
[76.64371490 -283.47854614]
[88.50955200 -274.26522827]
[99.04146576 -263.55252075]
[108.05148315 -251.53157043]
[115.37881470 -238.41693115]
[120.89270020 -224.44265747]
[124.49474335 -209.85810852]
[126.12064362 -194.92359924]
[125.74140167 -179.90562439]
[123.36377716 -165.07220459]
[119.03020477 -150.68804932]
[112.81801605 -137.00988770]
[104.83808899 -124.28180695]
[95.23281860 -112.73094940]
[84.17362976 -102.56346130]
[71.85788727 -93.96079254]
[58.50537872 -87.07646942]
[63.54229736 -72.94744110]
[68.57920837 -58.81840897]
[73.61612701 -44.68937683]
[81.00702667 -57.74214172]
[95.42546082 -61.87841415]
[108.61190033 -54.72874451]
[113.01255035 -40.38879013]
[106.10652924 -27.07313156]
[91.84990692 -22.40957832]
[78.41015625 -29.06891632]
[82.16645813 -14.54685688]
[86.88481140 -8.85836411]
[85.86885834 0.21939211]
[89.40853119 14.79576778]
[92.94866943 18.00146103]
[94.51258850 23.46508408]
[92.82971954 29.85878944]
[95.93383026 44.53409195]
[99.03794098 59.20939636]
[102.14205170 73.88469696]
[105.24616241 88.55999756]
[108.67722321 103.16232300]
[112.43352509 117.68437958]
[116.18981934 132.20643616]
[119.94612122 146.72850037]
[124.08706665 132.31140137]
[133.36973572 120.52870941]
[146.41711426 113.12830353]
[161.29368591 111.20798492]
[175.79260254 115.05263519]
[187.76304626 124.09191895]
[195.42926025 136.98490906]
[197.65402222 151.81900024]
[194.10728455 166.39366150]
[185.31518555 178.54681396]
[172.58200073 186.47561646]
[157.79660034 189.00387573]
[143.15232849 185.75653076]
[130.82156372 177.21533203]
[122.63421631 164.64906311]
[123.30400085 179.63409424]
[123.97379303 194.61914062]
[124.64357758 209.60417175]
[133.61801147 218.86820984]
[133.86738586 231.36306763]
[125.80329895 240.37956238]
[126.24990845 255.37292480]
[126.69651031 270.36627197]
[127.14311981 285.35961914]
[127.58972931 300.35296631]
[142.58280945 300.98947144]
[157.49089050 302.70617676]
[172.23622131 305.49414062]
[186.74194336 309.33883667]
[200.93243408 314.22021484]
[214.73370361 320.11282349]
[228.07377625 326.98596191]
[240.88313293 334.80377197]
[253.09498596 343.52548218]
[264.64566040 353.10565186]
[275.47494507 363.49432373]
[285.52636719 374.63735962]
[294.74749756 386.47659302]
[303.09033203 398.95037842]
[310.51132202 411.99365234]
[316.97177124 425.53839111]
[322.43804932 439.51400757]
[326.88159180 453.84762573]
[330.27929688 468.46450806]
[332.61340332 483.28848267]
[333.87173462 498.24221802]
[334.04779053 513.24774170]
[333.14059448 528.22692871]
[331.15487671 543.10156250]
[328.10104370 557.79412842]
[323.99496460 572.22802734]
[318.85806274 586.32806396]
[312.71713257 600.02062988]
[305.60418701 613.23437500]
[297.55627441 625.90045166]
[288.61541748 637.95275879]
[278.82815552 649.32849121]
[268.24557495 659.96838379]
[256.92285156 669.81689453]
[244.91896057 678.82269287]
[232.29652405 686.93884277]
[219.12135315 694.12304688]
[205.46212769 700.33782959]
[191.39006042 705.55072021]
[176.97851562 709.73468018]
[162.30264282 712.86779785]
[147.43894958 714.93377686]
[132.46492004 715.92181396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 167]
[43 166]
[44 165]
[45 164]
[46 163]
[48 160]
[49 159]
[50 158]
[51 157]
[52 142]
[53 141]
[54 140]
[55 139]
[59 138]
[60 137]
[61 136]
[62 135]
[63 134]
[64 131]
[65 130]
[66 128]
[67 127]
[68 120]
[69 119]
[70 118]
[71 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
