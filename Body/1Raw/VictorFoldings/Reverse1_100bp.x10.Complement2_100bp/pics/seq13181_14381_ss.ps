%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGAUAAUACUCAGGAUCAACUGAACUUCACCUCUUCCGAUGCUAAAAAAACUACAGUAAAACACAUUCCCGCGUCUGACGACGCUUGUCUCACCACUAUxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[-2.91860867 666.43151855]
[2.63842702 680.50189209]
[3.57348371 695.60089111]
[-0.20504622 710.24938965]
[-8.32698059 723.01220703]
[-19.99661446 732.63897705]
[-34.07067871 738.18658447]
[-49.17033768 739.11151123]
[-63.81628036 735.32318115]
[-76.57364655 727.19268799]
[-86.19259644 715.51660156]
[-91.73077393 701.43884277]
[-92.64559174 686.33856201]
[-88.84743500 671.69519043]
[-80.70840454 658.94323730]
[-69.02587891 649.33209229]
[-54.94439697 643.80340576]
[-39.84351349 642.89868164]
[-36.08721161 628.37664795]
[-32.33090973 613.85455322]
[-28.57460976 599.33251953]
[-32.87821579 585.07318115]
[-21.93160629 573.65026855]
[-18.17530632 559.12823486]
[-14.41900539 544.60620117]
[-15.72380352 542.12512207]
[-16.12443924 538.97772217]
[-15.36219406 535.50579834]
[-13.30673695 532.13836670]
[-9.98266792 529.34466553]
[-5.36865854 515.07196045]
[-0.75464946 500.79922485]
[3.85935974 486.52648926]
[7.29042101 471.92416382]
[9.51553822 457.09011841]
[3.75181937 443.35589600]
[13.45064926 430.85617065]
[15.67576694 416.02212524]
[17.90088463 401.18807983]
[20.12600136 386.35403442]
[22.35111809 371.51998901]
[10.91043377 381.22106934]
[-4.03833771 382.45968628]
[-16.91967583 374.77392578]
[-22.92915726 361.03033447]
[-19.82539558 346.35494995]
[-8.76601791 336.22134399]
[6.12410259 334.40908813]
[19.29131889 341.59408569]
[25.82474899 355.09771729]
[29.79684448 340.63317871]
[33.76893997 326.16867065]
[37.74103546 311.70413208]
[33.65020752 297.38232422]
[44.76567459 286.12368774]
[30.64353180 278.96624756]
[18.30170250 269.04071045]
[8.27474022 256.77407837]
[0.99753958 242.69479370]
[-3.21353316 227.41003418]
[-4.17438936 211.57946777]
[-1.84126568 195.88677979]
[3.68728924 181.01019287]
[12.17457294 167.59315491]
[23.25586700 156.21643066]
[36.45410156 147.37306213]
[51.20040131 141.44694519]
[66.85860443 138.69616699]
[82.75270844 139.24176025]
[86.29238129 124.66539001]
[89.83205414 110.08901978]
[86.08058929 96.61986542]
[95.59156799 86.37131500]
[99.02263641 71.76898956]
[102.34489441 57.14152908]
[105.66715240 42.51406860]
[108.98941040 27.88660812]
[111.21453094 13.05256462]
[112.33017731 -1.90588892]
[113.44582367 -16.86434174]
[106.75636292 -31.20176506]
[115.41884613 -43.31830978]
[116.53449249 -58.27676392]
[109.84503174 -72.61418915]
[118.50751495 -84.73073578]
[104.34896088 -92.74754333]
[95.13687897 -106.08850861]
[92.67377472 -122.05388641]
[97.40261841 -137.43965149]
[108.32817078 -149.18043518]
[123.22595978 -154.96028137]
[124.11877441 -169.93368530]
[125.01158905 -184.90708923]
[125.90440369 -199.88049316]
[126.79721832 -214.85389709]
[119.89504242 -229.09013367]
[128.37615967 -241.33432007]
[121.47398376 -255.57055664]
[129.95510864 -267.81472778]
[130.84791565 -282.78811646]
[117.15997314 -289.39938354]
[107.04770660 -300.74884033]
[102.05316162 -315.10583496]
[102.93797302 -330.28097534]
[109.56721497 -343.96023560]
[120.92997742 -354.05755615]
[135.29351807 -359.03320312]
[150.46751404 -358.12844849]
[164.13801575 -351.48120117]
[174.22038269 -340.10516357]
[179.17713928 -325.73510742]
[178.25241089 -310.56231689]
[171.58718872 -296.90057373]
[160.19790649 -286.83316040]
[145.82131958 -281.89532471]
[144.92851257 -266.92190552]
[151.89454651 -253.75666809]
[143.34956360 -240.44149780]
[150.31561279 -227.27626038]
[141.77062988 -213.96109009]
[140.87780762 -198.98768616]
[139.98500061 -184.01426697]
[139.09217834 -169.04086304]
[138.19935608 -154.06745911]
[150.63580322 -147.91902161]
[159.81846619 -137.46194458]
[164.33616638 -124.25324249]
[163.47558594 -110.27647400]
[157.33369446 -97.64387512]
[146.80809021 -88.27713013]
[133.46597290 -83.61508179]
[140.23522949 -70.34758759]
[131.49295044 -57.16111755]
[130.37730408 -42.20266342]
[137.14656067 -28.93516922]
[128.40428162 -15.74869347]
[127.28862762 -0.79024017]
[126.17298126 14.16821289]
[135.89863586 2.74842262]
[149.99777222 -2.37159109]
[164.78489685 0.14653106]
[176.39469910 9.64455795]
[181.79238892 23.63972855]
[179.56706238 38.47373962]
[170.30036926 50.26901245]
[156.41462708 55.94229889]
[141.53952026 54.01060486]
[129.56338501 44.97887802]
[123.61687469 31.20886803]
[120.29460907 45.83632660]
[116.97235107 60.46378708]
[113.65009308 75.09124756]
[115.23405457 82.31017303]
[110.16794586 89.91098022]
[113.91941071 103.38013458]
[104.40843201 113.62868500]
[100.86875916 128.20506287]
[97.32908630 142.78143311]
[110.23561096 148.71551514]
[121.81938171 156.93054199]
[131.68208313 167.14212036]
[139.48495483 178.99719238]
[144.96038818 192.08634949]
[147.92114258 205.95787048]
[148.26672363 220.13336182]
[145.98681641 234.12423706]
[141.16152954 247.44857788]
[133.95864868 259.64773560]
[124.62779999 270.30203247]
[113.49172211 279.04537964]
[100.93518829 285.57766724]
[87.39167023 289.67517090]
[73.32839203 291.19818115]
[59.23019791 290.09576416]
[63.03691483 305.45217896]
[52.20555878 315.67623901]
[48.23346329 330.14074707]
[44.26136780 344.60528564]
[40.28927231 359.06979370]
[37.18516159 373.74511719]
[34.96004486 388.57916260]
[32.73492813 403.41320801]
[30.50980949 418.24725342]
[28.28469276 433.08126831]
[33.88925552 447.87652588]
[24.34958267 459.31524658]
[22.12446404 474.14929199]
[32.32645798 463.15295410]
[46.43912125 458.07034302]
[61.30964279 460.03695679]
[73.61591339 468.61340332]
[80.60868835 481.88372803]
[80.72574615 496.88327026]
[73.94095612 510.26110840]
[61.77004242 519.02856445]
[46.93202209 521.22705078]
[32.74175262 516.36535645]
[22.36936951 505.52960205]
[18.13209343 491.14050293]
[13.51808357 505.41323853]
[8.90407467 519.68597412]
[4.29006529 533.95867920]
[0.10305415 548.36248779]
[-3.65324640 562.88452148]
[-7.40954733 577.40661621]
[-3.37461805 592.70465088]
[-14.05255127 603.08880615]
[-17.80885124 617.61083984]
[-21.56515312 632.13293457]
[-25.32145309 646.65496826]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 210]
[19 209]
[20 208]
[21 207]
[23 205]
[24 204]
[25 203]
[30 202]
[31 201]
[32 200]
[33 199]
[34 187]
[35 186]
[37 184]
[38 183]
[39 182]
[40 181]
[41 180]
[50 179]
[51 178]
[52 177]
[53 176]
[55 174]
[69 158]
[70 157]
[71 156]
[73 154]
[74 152]
[75 151]
[76 150]
[77 149]
[78 138]
[79 137]
[80 136]
[82 134]
[83 133]
[85 131]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
[97 118]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
