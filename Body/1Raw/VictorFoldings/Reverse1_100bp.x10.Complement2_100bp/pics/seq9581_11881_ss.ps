%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[50.64509201 625.41717529]
[36.07100677 629.07971191]
[21.11896133 630.58105469]
[6.10765457 629.88934326]
[-8.64294624 627.01922607]
[-22.81842995 622.03186035]
[-36.11664581 615.03363037]
[-48.25413895 606.17364502]
[-58.97220230 595.64080811]
[-68.04238129 583.65960693]
[-75.27133179 570.48535156]
[-80.50498962 556.39898682]
[-83.63177490 541.70062256]
[-84.58506012 526.70367432]
[-83.34451294 511.72772217]
[-79.93658447 497.09201050]
[-74.43390656 483.10848999]
[-66.95378113 470.07525635]
[-57.65563202 458.27008057]
[-46.73765945 447.94458008]
[-34.43258286 439.31887817]
[-21.00267792 432.57681274]
[-6.73420906 427.86206055]
[8.06869125 425.27517700]
[23.09049988 424.87127686]
[24.87296486 409.97756958]
[26.65543175 395.08383179]
[28.43789673 380.19012451]
[30.22036362 365.29641724]
[31.66978264 350.36660767]
[32.78543091 335.40814209]
[26.01617241 322.14065552]
[34.75844955 308.95416260]
[35.87409973 293.99572754]
[36.98974991 279.03726196]
[38.10539627 264.07882690]
[29.89114761 276.62976074]
[17.92118073 285.66964722]
[3.60171580 290.13653564]
[-11.38500977 289.50561523]
[-25.27836990 283.85101318]
[-36.44618607 273.83703613]
[-43.57647705 260.64010620]
[-45.83158493 245.81057739]
[-42.94657516 231.09063721]
[-35.26037979 218.20954895]
[-23.67596626 208.68057251]
[-9.55425835 203.62316895]
[5.44573975 203.63146973]
[19.56184196 208.70449829]
[31.13570404 218.24629211]
[38.80764008 231.13586426]
[41.67639160 245.86056519]
[46.29039764 231.58782959]
[50.90440750 217.31509399]
[55.51841736 203.04235840]
[60.13242722 188.76963806]
[53.16949463 181.22717285]
[49.94040298 171.39822388]
[51.09149170 161.03540039]
[56.48167038 152.01600647]
[65.19586945 146.00187683]
[75.69979095 144.13333130]
[80.94651031 130.08085632]
[86.19322968 116.02838898]
[91.43994904 101.97592163]
[90.41432953 99.10579681]
[90.41036224 95.79905701]
[91.59177399 92.43339539]
[93.98046875 89.44167328]
[97.43994141 87.25877380]
[103.51377106 73.54351044]
[109.58760834 59.82824326]
[107.20207214 41.56925201]
[121.77172089 31.78701019]
[127.64068604 17.98283195]
[133.50964355 4.17865562]
[139.06886292 -9.75314236]
[144.31558228 -23.80561447]
[149.56230164 -37.85808563]
[154.38830566 -52.06053925]
[158.78930664 -66.40039062]
[163.19029236 -80.74023438]
[167.59129333 -95.08008575]
[171.56340027 -109.54460907]
[175.10307312 -124.12097931]
[178.64274597 -138.69735718]
[182.18240356 -153.27372742]
[176.58987427 -170.81809998]
[189.18908691 -183.03393555]
[192.51135254 -197.66139221]
[195.83360291 -212.28886414]
[181.81967163 -217.71354675]
[168.74494934 -225.12097168]
[156.88815308 -234.35321045]
[146.50201416 -245.21348572]
[137.80789185 -257.47033691]
[130.99110413 -270.86245728]
[126.19696808 -285.10446167]
[123.52765656 -299.89270020]
[123.04007721 -314.91204834]
[124.74461365 -329.84228516]
[128.60493469 -344.36523438]
[134.53877258 -358.17129517]
[142.41963196 -370.96621704]
[152.07951355 -382.47726440]
[163.31256104 -392.45907593]
[175.87930298 -400.69891357]
[189.51190186 -407.02111816]
[203.91976929 -411.29092407]
[218.79579163 -413.41732788]
[233.82290649 -413.35504150]
[248.68078613 -411.10534668]
[263.05276489 -406.71621704]
[276.63244629 -400.28118896]
[289.13046265 -391.93746948]
[300.28033447 -381.86285400]
[309.84445190 -370.27209473]
[317.61895752 -357.41226196]
[323.43811035 -343.55746460]
[327.17788696 -329.00302124]
[328.75854492 -314.05914307]
[328.14645386 -299.04440308]
[325.35461426 -284.27877808]
[320.44256592 -270.07702637]
[313.51498413 -256.74188232]
[304.71951294 -244.55754089]
[294.24368286 -233.78375244]
[282.31076050 -224.65013123]
[269.17504883 -217.35139465]
[255.11662292 -212.04307556]
[240.43508911 -208.83834839]
[225.44338989 -207.80552673]
[210.46107483 -208.96659851]
[207.13880920 -194.33914185]
[203.81654358 -179.71168518]
[209.99569702 -169.31242371]
[207.34757996 -157.09884644]
[196.75878906 -149.73405457]
[193.21911621 -135.15768433]
[189.67944336 -120.58130646]
[186.13977051 -106.00493622]
[187.48136902 -103.54357910]
[187.92881775 -100.40249634]
[187.21833801 -96.91958618]
[185.21325684 -93.52192688]
[181.93113708 -90.67908478]
[177.53015137 -76.33923340]
[173.12915039 -61.99938965]
[168.72814941 -47.65954208]
[169.92086792 -45.12269974]
[170.18055725 -41.96055222]
[169.26403809 -38.52610779]
[167.06027222 -35.25381470]
[163.61477661 -32.61136627]
[158.36805725 -18.55889511]
[153.12133789 -4.50642443]
[154.24449158 -1.16413713]
[153.80456543 2.88821006]
[151.48547363 6.91004133]
[147.31382751 10.04761696]
[141.44485474 23.85179329]
[135.57589722 37.65597153]
[139.80853271 48.98784637]
[135.03198242 60.53636551]
[123.30287170 65.90207672]
[117.22904205 79.61734772]
[111.15520477 93.33261108]
[105.49241638 107.22264099]
[100.24569702 121.27510834]
[94.99898529 135.32757568]
[89.75226593 149.38005066]
[99.04962921 167.19123840]
[92.35396576 185.81036377]
[74.40515900 193.38363647]
[69.79115295 207.65637207]
[65.17713928 221.92910767]
[60.56313324 236.20184326]
[55.94912338 250.47457886]
[53.06385040 265.19445801]
[51.94820023 280.15292358]
[50.83255386 295.11135864]
[49.71690369 310.06982422]
[56.40636444 324.40725708]
[47.74388504 336.52380371]
[46.62823486 351.48223877]
[48.89630890 356.18362427]
[49.11259460 360.82113647]
[47.64500427 364.62393188]
[45.11408234 367.07888794]
[43.33161545 381.97259521]
[41.54914856 396.86630249]
[39.76668167 411.76004028]
[37.98421860 426.65374756]
[52.48646927 430.59106445]
[66.26086426 436.59805298]
[79.01379395 444.54666138]
[90.47343445 454.26751709]
[100.39552307 465.55334473]
[108.56855774 478.16363525]
[114.81834412 491.82955933]
[119.01166534 506.25988770]
[121.05913544 521.14697266]
[120.91710663 536.17352295]
[118.58862305 551.01928711]
[114.12330627 565.36773682]
[107.61633301 578.91314697]
[99.20640564 591.36669922]
[89.07278442 602.46295166]
[77.43145752 611.96545410]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 194]
[26 193]
[27 192]
[28 191]
[29 190]
[30 186]
[31 185]
[33 183]
[34 182]
[35 181]
[36 180]
[53 179]
[54 178]
[55 177]
[56 176]
[57 175]
[63 172]
[64 171]
[65 170]
[66 169]
[71 168]
[72 167]
[73 166]
[75 163]
[76 162]
[77 161]
[78 157]
[79 156]
[80 155]
[81 150]
[82 149]
[83 148]
[84 147]
[85 142]
[86 141]
[87 140]
[88 139]
[90 136]
[91 135]
[92 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
