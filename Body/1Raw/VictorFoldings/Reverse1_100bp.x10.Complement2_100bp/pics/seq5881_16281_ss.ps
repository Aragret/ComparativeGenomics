%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[103.35576630 581.24475098]
[105.31588745 566.23022461]
[112.04725647 552.66674805]
[122.81970215 542.02563477]
[136.46470642 535.46118164]
[134.68223572 520.56744385]
[132.89978027 505.67373657]
[131.11730957 490.77999878]
[121.92243195 479.06234741]
[127.96502686 464.44052124]
[116.70504761 450.98022461]
[124.09246826 434.11288452]
[122.08844757 419.24734497]
[120.08443451 404.38180542]
[110.54655457 400.58709717]
[103.38848877 393.11734009]
[99.95025635 383.27398682]
[100.91552734 372.81109619]
[106.17687225 363.62277222]
[114.84310150 357.40020752]
[113.50486755 342.46002197]
[112.16663361 327.51983643]
[103.32471466 315.53363037]
[109.79997253 301.09817505]
[108.46173859 286.15798950]
[99.38336182 278.16366577]
[98.14618683 265.72769165]
[105.95617676 255.46286011]
[104.84053040 240.50440979]
[94.19281769 226.55473328]
[102.32603455 210.03407288]
[93.48411560 198.04785156]
[99.95937347 183.61241150]
[98.62113953 168.67222595]
[97.28290558 153.73204041]
[95.94467163 138.79185486]
[94.60643768 123.85167694]
[93.26820374 108.91149139]
[91.81877899 93.98168182]
[90.25825500 79.06307983]
[81.12724304 66.14273834]
[87.49848175 52.67958069]
[85.93795776 37.76097488]
[84.37743378 22.84237099]
[78.89055634 36.80282211]
[69.57953644 48.56312943]
[57.24985886 57.10591125]
[42.96817017 61.69212723]
[27.96997833 61.92502594]
[13.55277729 57.78445816]
[0.96379799 49.62862396]
[-8.70788670 38.16308975]
[-14.62557793 24.37973213]
[-16.27733803 9.47095299]
[-13.52027225 -5.27348995]
[-6.59289455 -18.57805443]
[3.90550780 -29.29176331]
[17.06671715 -36.48777390]
[31.75215912 -39.54355621]
[46.69139481 -38.19475937]
[60.59202957 -32.55806351]
[72.25151825 -23.12110138]
[80.66120911 -10.70026588]
[85.09303284 3.62644267]
[87.75882721 -11.13477421]
[90.42462158 -25.89599228]
[93.09041595 -40.65720749]
[95.75621033 -55.41842651]
[98.09169769 -70.23549652]
[100.09571075 -85.10102081]
[102.09973145 -99.96655273]
[104.10374451 -114.83207703]
[104.77352905 -129.81712341]
[96.42773438 -143.25804138]
[103.58901215 -156.31809998]
[102.91922760 -171.30314636]
[90.04769897 -175.17390442]
[79.01393127 -182.80955505]
[70.88368225 -193.45547485]
[66.43700409 -206.06712341]
[66.09339142 -219.41253662]
[69.87224579 -232.19261169]
[77.39236450 -243.16766357]
[87.91034698 -251.27754211]
[100.39404297 -255.74417114]
[100.17071533 -270.74249268]
[99.94738770 -285.74084473]
[99.72406006 -300.73916626]
[99.50073242 -315.73751831]
[96.24390411 -324.27160645]
[99.38740540 -330.96041870]
[99.38740540 -345.96041870]
[99.38740540 -360.96041870]
[99.38740540 -375.96041870]
[84.81028748 -379.85528564]
[71.73842621 -387.39114380]
[61.06307602 -398.05410767]
[53.51210403 -411.11724854]
[49.60035324 -425.68984985]
[49.59452820 -440.77832031]
[53.49502563 -455.35394287]
[61.03590393 -468.42291260]
[71.70301819 -479.09411621]
[84.76905823 -486.64004517]
[99.34316254 -490.54617310]
[114.43164825 -490.54617310]
[129.00575256 -486.64004517]
[142.07179260 -479.09411621]
[152.73890686 -468.42291260]
[160.27978516 -455.35394287]
[164.18028259 -440.77832031]
[164.17445374 -425.68984985]
[160.26271057 -411.11724854]
[152.71173096 -398.05410767]
[142.03639221 -387.39114380]
[128.96452332 -379.85528564]
[114.38740540 -375.96041870]
[114.38740540 -360.96041870]
[114.38740540 -345.96041870]
[114.38740540 -330.96041870]
[114.49907684 -315.96084595]
[114.72240448 -300.96249390]
[114.94573212 -285.96417236]
[115.16905975 -270.96582031]
[115.39238739 -255.96749878]
[131.00959778 -250.19181824]
[143.23747253 -238.83572388]
[150.18093872 -223.62063599]
[150.74909973 -206.86895752]
[144.82658386 -191.14955139]
[133.29551697 -178.88388062]
[117.90426636 -171.97293091]
[118.57405090 -156.98788452]
[126.87194061 -144.61880493]
[119.75856781 -130.48690796]
[127.31662750 -143.44358826]
[139.69924927 -151.90943909]
[154.51553345 -154.24984741]
[168.90470886 -150.01289368]
[180.08843994 -140.01667786]
[185.90731812 -126.19130707]
[185.23780823 -111.20626068]
[178.20918274 -97.95489502]
[166.17857361 -88.99585724]
[151.46890259 -86.05899048]
[136.92034912 -89.71135712]
[125.34203339 -99.24774170]
[118.96926880 -112.82806396]
[116.96525574 -97.96253967]
[114.96124268 -83.09700775]
[112.95722961 -68.23148346]
[114.79273987 -65.22096252]
[115.26127625 -61.17182159]
[113.89055634 -56.73623657]
[110.51743317 -52.75263214]
[107.85163879 -37.99141312]
[105.18583679 -23.23019600]
[102.52004242 -8.46897888]
[99.85424805 6.29223824]
[99.29603577 21.28184891]
[100.85655975 36.20045090]
[102.41708374 51.11905670]
[111.43647766 62.97231674]
[105.17686462 77.50255585]
[106.73738861 92.42115784]
[110.64142609 99.47318268]
[108.20838165 107.57325745]
[109.54661560 122.51344299]
[110.88484955 137.45362854]
[112.22309113 152.39381409]
[113.56132507 167.33399963]
[114.89955902 182.27418518]
[123.83719635 195.32904053]
[117.26622009 208.69584656]
[126.64536285 217.54991150]
[127.45240784 230.02117920]
[119.79898071 239.38874817]
[120.91462708 254.34721375]
[131.63267517 269.32067871]
[123.40192413 284.81976318]
[124.74015808 299.75994873]
[133.67779541 312.81481934]
[127.10681915 326.18161011]
[128.44505310 341.12179565]
[129.78329468 356.06198120]
[145.86231995 368.10955811]
[147.86640930 387.79425049]
[134.94996643 402.37780762]
[136.95397949 417.24331665]
[138.95799255 432.10885620]
[148.72314453 440.53527832]
[150.08624268 452.95806885]
[142.85873413 462.65805054]
[152.18110657 475.44100952]
[146.01103210 488.99755859]
[147.79348755 503.89126587]
[149.57595825 518.78497314]
[151.35842896 533.67871094]
[166.16714478 536.83789062]
[179.14642334 544.63641357]
[188.88836670 556.22833252]
[194.33624268 570.35632324]
[194.89909363 585.48779297]
[190.51586914 599.98144531]
[181.66204834 612.26513672]
[169.29800415 621.00634766]
[154.76490784 625.25695801]
[139.63919067 624.55590820]
[125.56158447 618.97918701]
[114.05912781 609.13171387]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 198]
[6 197]
[7 196]
[8 195]
[10 193]
[12 190]
[13 189]
[14 188]
[20 185]
[21 184]
[22 183]
[24 181]
[25 180]
[28 178]
[29 177]
[31 174]
[33 172]
[34 171]
[35 170]
[36 169]
[37 168]
[38 167]
[39 165]
[40 164]
[42 162]
[43 161]
[44 160]
[64 159]
[65 158]
[66 157]
[67 156]
[68 155]
[69 151]
[70 150]
[71 149]
[72 148]
[73 135]
[75 133]
[76 132]
[85 125]
[86 124]
[87 123]
[88 122]
[89 121]
[91 120]
[92 119]
[93 118]
[94 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
