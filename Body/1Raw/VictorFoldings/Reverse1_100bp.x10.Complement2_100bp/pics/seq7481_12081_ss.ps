%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[111.71145630 960.90905762]
[96.75616455 959.72808838]
[81.85708618 957.97515869]
[67.03607941 955.65283203]
[52.31490326 952.76452637]
[37.71516037 949.31451416]
[23.25827408 945.30773926]
[8.96546650 940.75024414]
[-5.14228678 935.64862061]
[-19.04428101 930.01037598]
[-32.72011185 923.84375000]
[-46.14971161 917.15783691]
[-59.31336594 909.96246338]
[-72.19175720 902.26818848]
[-84.76599121 894.08624268]
[-97.01760101 885.42864990]
[-108.92861176 876.30816650]
[-120.48154449 866.73815918]
[-131.65943909 856.73266602]
[-142.44589233 846.30639648]
[-152.82507324 835.47454834]
[-162.78175354 824.25317383]
[-172.30131531 812.65863037]
[-181.36979675 800.70794678]
[-189.97386169 788.41876221]
[-198.10092163 775.80895996]
[-205.73901367 762.89715576]
[-212.87695312 749.70227051]
[-219.50424194 736.24365234]
[-225.61117554 722.54107666]
[-231.18878174 708.61462402]
[-236.22886658 694.48474121]
[-240.72404480 680.17224121]
[-244.66770935 665.69799805]
[-248.05407715 651.08337402]
[-250.87818909 636.34973145]
[-253.13587952 621.51873779]
[-254.82385254 606.61218262]
[-255.93962097 591.65185547]
[-256.48153687 576.65979004]
[-256.44885254 561.65802002]
[-255.84155273 546.66845703]
[-254.66056824 531.71319580]
[-252.90760803 516.81408691]
[-250.58528137 501.99310303]
[-247.69696045 487.27191162]
[-244.24688721 472.67218018]
[-240.24014282 458.21530151]
[-235.68260193 443.92248535]
[-230.58096313 429.81472778]
[-224.94268799 415.91275024]
[-218.77606201 402.23693848]
[-212.09014893 388.80734253]
[-204.89476013 375.64370728]
[-197.20042419 362.76531982]
[-189.01847839 350.19110107]
[-180.36090088 337.93948364]
[-171.24040222 326.02847290]
[-161.67037964 314.47555542]
[-151.66487122 303.29766846]
[-141.23855591 292.51123047]
[-130.40673828 282.13208008]
[-119.18531799 272.17541504]
[-107.59077454 262.65585327]
[-95.64010620 253.58740234]
[-83.35086060 244.98333740]
[-70.74108124 236.85629272]
[-57.82925797 229.21821594]
[-44.63435364 222.08029175]
[-31.17573166 215.45301819]
[-17.47314262 209.34609985]
[-3.54669547 203.76852417]
[10.58316898 198.72845459]
[24.89571190 194.23329163]
[39.36993027 190.28964233]
[53.98458099 186.90328979]
[68.71820831 184.07919312]
[83.54920197 181.82151794]
[98.45578003 180.13356018]
[97.34013367 165.17510986]
[96.22448730 150.21665955]
[95.10884094 135.25820923]
[93.99318695 120.29975128]
[81.24493408 109.81882477]
[79.89497375 93.37055969]
[90.76372528 80.95130157]
[89.42549133 66.01111603]
[88.08725739 51.07093048]
[86.74902344 36.13074493]
[85.41078949 21.19056129]
[84.07255554 6.25037622]
[69.20608521 3.67154431]
[55.51403046 -2.66802359]
[43.92994690 -12.33608532]
[35.24365234 -24.67345619]
[30.04739761 -38.83895493]
[28.69546509 -53.86675262]
[31.28003693 -68.73223114]
[37.62489319 -82.42182922]
[47.29742432 -94.00218201]
[59.63814926 -102.68370819]
[73.80564880 -107.87449646]
[88.83396912 -109.22062683]
[103.69844818 -106.63031769]
[117.38559723 -100.28017426]
[128.96221924 -90.60317230]
[137.63897705 -78.25909424]
[142.82429504 -64.08959198]
[144.16462708 -49.06075287]
[141.56857300 -34.19727707]
[135.21315002 -20.51257706]
[125.53166962 -8.93970013]
[113.18424988 -0.26770312]
[99.01274109 4.91214180]
[100.35097504 19.85232735]
[101.68920898 34.79251099]
[103.02744293 49.73269653]
[104.36567688 64.67288208]
[105.70391083 79.61306763]
[116.32796478 86.52560425]
[121.09888458 98.26834106]
[118.30644226 110.63182831]
[108.95164490 119.18410492]
[110.06729126 134.14254761]
[111.18293762 149.10101318]
[112.29859161 164.05946350]
[113.41423798 179.01791382]
[128.40629578 178.47593689]
[143.40809631 178.50859070]
[158.39764404 179.11582947]
[173.35293579 180.29676819]
[188.25202942 182.04965210]
[203.07304382 184.37194824]
[217.79421997 187.26020813]
[232.39398193 190.71022034]
[246.85087585 194.71691895]
[261.14367676 199.27441406]
[275.25146484 204.37600708]
[289.15347290 210.01422119]
[302.82931519 216.18080139]
[316.25891113 222.86666870]
[329.42260742 230.06201172]
[342.30099487 237.75630188]
[354.87524414 245.93820190]
[367.12689209 254.59574890]
[379.03793335 263.71618652]
[390.59088135 273.28619385]
[401.76879883 283.29165649]
[412.55526733 293.71792603]
[422.93447876 304.54971313]
[432.89117432 315.77108765]
[442.41076660 327.36560059]
[451.47927856 339.31622314]
[460.08337402 351.60543823]
[468.21044922 364.21520996]
[475.84860229 377.12698364]
[482.98654175 390.32186890]
[489.61389160 403.78048706]
[495.72085571 417.48303223]
[501.29849243 431.40948486]
[506.33859253 445.53930664]
[510.83380127 459.85183716]
[514.77752686 474.32604980]
[518.16394043 488.94067383]
[520.98803711 503.67431641]
[523.24578857 518.50531006]
[524.93377686 533.41186523]
[526.04962158 548.37213135]
[526.59155273 563.36419678]
[526.55889893 578.36602783]
[525.95166016 593.35559082]
[524.77069092 608.31085205]
[523.01776123 623.20996094]
[520.69543457 638.03094482]
[517.80718994 652.75213623]
[514.35717773 667.35186768]
[510.35043335 681.80877686]
[505.79293823 696.10156250]
[500.69131470 710.20935059]
[495.05307007 724.11132812]
[488.88650513 737.78717041]
[482.20062256 751.21679688]
[475.00524902 764.38043213]
[467.31094360 777.25885010]
[459.12902832 789.83306885]
[450.47146606 802.08471680]
[441.35101318 813.99572754]
[431.78100586 825.54870605]
[421.77551270 836.72656250]
[411.34924316 847.51306152]
[400.51745605 857.89227295]
[389.29605103 867.84893799]
[377.70153809 877.36853027]
[365.75088501 886.43701172]
[353.46166992 895.04107666]
[340.85189819 903.16815186]
[327.94009399 910.80627441]
[314.74520874 917.94421387]
[301.28659058 924.57153320]
[287.58401489 930.67846680]
[273.65759277 936.25610352]
[259.52774048 941.29620361]
[245.21519470 945.79138184]
[230.74099731 949.73510742]
[216.12635803 953.12145996]
[201.39273071 955.94561768]
[186.56173706 958.20330811]
[171.65516663 959.89129639]
[156.69487000 961.00708008]
[141.70281982 961.54901123]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[79 127]
[80 126]
[81 125]
[82 124]
[83 123]
[86 119]
[87 118]
[88 117]
[89 116]
[90 115]
[91 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
