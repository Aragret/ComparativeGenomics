%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[56.68680573 522.73498535]
[51.10654449 508.77767944]
[47.77851105 494.11920166]
[46.78466797 479.12057495]
[48.14948654 464.15115356]
[51.83935547 449.57955933]
[57.76340866 435.76464844]
[65.77576447 423.04660034]
[75.67910767 411.73861694]
[87.22956085 402.11917114]
[100.14268494 394.42517090]
[114.10047913 388.84606934]
[110.77821350 374.21859741]
[107.45595551 359.59115601]
[98.35491180 354.94528198]
[93.20529175 345.86621094]
[93.91746521 335.23263550]
[100.49718475 326.57144165]
[97.61191559 311.85156250]
[94.72663879 297.13168335]
[91.84136963 282.41177368]
[81.80044556 271.41046143]
[86.73877716 256.37969971]
[84.49025726 254.70568848]
[82.76936340 252.04014587]
[81.95706177 248.57957458]
[82.35623932 244.65463257]
[84.14741516 240.69917297]
[82.14339447 225.83364868]
[80.13938141 210.96812439]
[78.13536835 196.10258484]
[73.21541595 210.27276611]
[64.70026398 222.62153625]
[53.20463181 232.25744629]
[39.55840302 238.48483276]
[24.74671173 240.85417175]
[9.83882141 239.19439697]
[-4.08905077 233.62535095]
[-16.03144073 224.54904175]
[-25.12621880 212.62071228]
[-30.71682167 198.70147705]
[-32.39966202 183.79617310]
[-30.05325127 168.98083496]
[-23.84698296 155.32498169]
[-14.22888851 143.81445312]
[-1.89330947 135.28019714]
[12.26923943 130.33831787]
[27.23635101 129.34556580]
[41.92753601 132.37361145]
[55.28223038 139.20385742]
[66.33634186 149.34321594]
[74.29186249 162.05972290]
[78.57466125 176.43652344]
[81.24045563 161.67530823]
[75.88820648 147.77555847]
[85.95490265 135.57014465]
[88.62069702 120.80892944]
[91.28649139 106.04771423]
[93.29050446 91.18218231]
[94.62873840 76.24199677]
[95.96697235 61.30181122]
[97.30520630 46.36162949]
[84.85352325 37.47890472]
[78.56136322 23.64758301]
[80.02740479 8.62369919]
[88.75827026 -3.56760693]
[102.32774353 -9.71048737]
[103.66597748 -24.65067291]
[105.00421143 -39.59085846]
[106.34244537 -54.53104401]
[107.68067932 -69.47122955]
[108.90766144 -84.42095947]
[110.02330780 -99.37941742]
[111.13895416 -114.33786774]
[112.25460052 -129.29632568]
[109.77213287 -138.08694458]
[113.49984741 -144.46864319]
[114.83808136 -159.40882874]
[105.06934357 -168.68170166]
[102.46290588 -181.69772339]
[107.75063324 -193.66110229]
[118.79710388 -200.29470825]
[120.35762787 -215.21331787]
[121.91815186 -230.13192749]
[123.47867584 -245.05052185]
[112.98982239 -234.32746887]
[98.39286041 -230.87367249]
[84.21081543 -235.75932312]
[74.83815002 -247.47056580]
[73.17908478 -262.37854004]
[79.74770355 -275.86383057]
[92.50864410 -283.74789429]
[107.50778961 -283.58776855]
[120.09748840 -275.43304443]
[126.37673187 -261.81033325]
[129.91641235 -276.38671875]
[133.45608521 -290.96307373]
[136.99575806 -305.53945923]
[123.34323120 -311.87152100]
[111.18853760 -320.74560547]
[100.99887085 -331.82067871]
[93.16588593 -344.67098999]
[87.99067688 -358.80264282]
[85.67214966 -373.67242432]
[86.29943085 -388.70880127]
[89.84841156 -403.33380127]
[96.18267059 -416.98532104]
[105.05873871 -429.13858032]
[116.13544464 -439.32644653]
[128.98703003 -447.15734863]
[143.11950684 -452.33026123]
[157.98966980 -454.64639282]
[173.02595520 -454.01666260]
[187.65039062 -450.46533203]
[201.30087280 -444.12884521]
[213.45268250 -435.25082397]
[223.63876343 -424.17245483]
[231.46759033 -411.31961060]
[236.63822937 -397.18630981]
[238.95193481 -382.31576538]
[238.31979370 -367.27957153]
[234.76608276 -352.65570068]
[228.42739868 -339.00625610]
[219.54739380 -326.85589600]
[208.46739197 -316.67160034]
[195.61328125 -308.84484863]
[181.47911072 -303.67651367]
[166.60820007 -301.36520386]
[151.57212830 -301.99978638]
[148.03245544 -287.42340088]
[144.49278259 -272.84704590]
[140.95310974 -258.27066040]
[138.39727783 -243.49000549]
[136.83676147 -228.57139587]
[135.27622986 -213.65280151]
[133.71571350 -198.73419189]
[144.85455322 -186.13398743]
[143.40536499 -169.03970337]
[129.77827454 -158.07058716]
[128.44003296 -143.13040161]
[127.21305847 -128.18067932]
[126.09741211 -113.22222137]
[124.98175812 -98.26376343]
[123.86611176 -83.30531311]
[126.50341797 -76.40122223]
[122.62086487 -68.13299561]
[121.28263092 -53.19281006]
[119.94439697 -38.25262451]
[118.60616302 -23.31243896]
[117.26792908 -8.37225342]
[129.52967834 0.08440234]
[135.95492554 13.63328362]
[134.72760010 28.67854881]
[126.07749939 41.17145157]
[112.24539185 47.69986343]
[110.90715790 62.64004898]
[109.56892395 77.58023071]
[108.23069000 92.52041626]
[120.40572357 83.75864410]
[135.23184204 86.03598022]
[144.21597290 98.04785919]
[142.21159363 112.91333771]
[130.36692810 122.11679840]
[115.46710205 120.38607025]
[106.04771423 108.71350861]
[103.38191223 123.47472382]
[100.71611786 138.23594666]
[105.87768555 153.19149780]
[96.00167084 164.34109497]
[93.33587646 179.10231018]
[93.00090027 194.09857178]
[95.00491333 208.96411133]
[97.00892639 223.82963562]
[99.01293945 238.69515991]
[101.45866394 253.49443054]
[111.70596313 265.54861450]
[106.56126404 279.52648926]
[109.44653320 294.24639893]
[112.33181000 308.96627808]
[115.21707916 323.68618774]
[129.13830566 338.26568604]
[122.08341980 356.26889038]
[125.40567780 370.89633179]
[128.72793579 385.52380371]
[143.72631836 384.52624512]
[158.69607544 385.88735962]
[173.26858521 389.57360840]
[187.08497620 395.49426270]
[199.80500793 403.50347900]
[211.11543274 413.40402222]
[220.73771667 424.95208740]
[228.43492126 437.86328125]
[234.01748657 451.81970215]
[237.34794617 466.47763062]
[238.34426880 481.47607422]
[236.98191833 496.44573975]
[233.29444885 511.01794434]
[227.37268066 524.83386230]
[219.36241150 537.55322266]
[209.46093750 548.86279297]
[197.91207886 558.48413086]
[185.00022888 566.18029785]
[171.04335022 571.76171875]
[156.38516235 575.09094238]
[141.38661194 576.08605957]
[126.41707611 574.72247314]
[111.84517670 571.03381348]
[98.02976227 565.11083984]
[85.31105804 557.09954834]
[74.00226593 547.19714355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 184]
[13 183]
[14 182]
[18 180]
[19 179]
[20 178]
[21 177]
[23 175]
[28 174]
[29 173]
[30 172]
[31 171]
[53 170]
[54 169]
[56 167]
[57 166]
[58 165]
[59 158]
[60 157]
[61 156]
[62 155]
[67 150]
[68 149]
[69 148]
[70 147]
[71 146]
[72 144]
[73 143]
[74 142]
[75 141]
[77 140]
[78 139]
[82 136]
[83 135]
[84 134]
[85 133]
[95 132]
[96 131]
[97 130]
[98 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
