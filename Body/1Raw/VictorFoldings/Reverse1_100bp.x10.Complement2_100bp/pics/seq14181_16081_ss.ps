%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGUCCCAACUAAGCCCUCCUAGGAUAACCACGCCCCCGAAACAUACUAAUACCCGCAACUAAUCAUCAUCAAUGACCAACUUGUAACAAACAACCACAUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[4.04782391 454.90747070]
[11.71378708 467.87078857]
[16.41336823 482.17910767]
[17.92675972 497.16320801]
[16.18317795 512.12231445]
[11.26417255 526.35668945]
[3.39981413 539.20056152]
[-7.04206610 550.05328369]
[-19.57308197 558.40716553]
[-33.60713959 563.87152100]
[-48.48783112 566.19079590]
[-63.51916885 565.25646973]
[-77.99810791 561.11230469]
[-91.24743652 553.95202637]
[-102.64746857 544.11059570]
[-111.66500092 532.04833984]
[-117.87825775 518.32940674]
[-120.99665070 503.59545898]
[-120.87431335 488.53558350]
[-117.51696777 473.85424805]
[-111.08164978 460.23803711]
[-101.86935425 448.32385254]
[-90.31094360 438.66894531]
[-76.94703674 431.72488403]
[-62.40268326 427.81646729]
[-47.35815048 427.12646484]
[-32.51709747 429.68716431]
[-26.85431099 415.79714966]
[-21.19152451 401.90710449]
[-23.55149078 387.20065308]
[-11.17690754 377.34265137]
[-5.51412106 363.45260620]
[0.14866547 349.56259155]
[5.81145191 335.67257690]
[11.47423840 321.78253174]
[16.82542419 307.76953125]
[21.86234093 293.64047241]
[26.89925766 279.51144409]
[31.93617249 265.38241577]
[36.97309113 251.25340271]
[42.01000595 237.12437439]
[47.04692078 222.99534607]
[46.33201218 215.63934326]
[52.26543808 208.69439697]
[57.51215744 194.64192200]
[62.75887680 180.58944702]
[68.00559235 166.53698730]
[60.37701035 151.54887390]
[66.06076813 135.36215210]
[82.00055695 128.15504456]
[87.03747559 114.02601624]
[80.92216492 100.89022064]
[85.78766632 87.24202728]
[98.83349609 80.93706512]
[103.87040710 66.80803680]
[108.90732574 52.67900467]
[113.94424438 38.54997635]
[100.42972565 45.05826569]
[85.86303711 41.47894287]
[76.90386963 29.44842720]
[77.64823151 14.46690750]
[87.75581360 3.38373327]
[102.60556793 1.26598239]
[115.40837860 9.08186245]
[120.31095886 23.25991058]
[126.79045868 9.73156452]
[133.06781006 -3.89175153]
[139.14164734 -17.60701752]
[145.21548462 -31.32228470]
[151.28932190 -45.03755188]
[149.80270386 -60.78876114]
[162.03086853 -69.29295349]
[168.10470581 -83.00821686]
[174.17854309 -96.72348022]
[174.79205322 -105.83728790]
[180.44625854 -110.59667969]
[186.72361755 -124.21999359]
[193.00097656 -137.84330750]
[199.27833557 -151.46662903]
[186.75650024 -160.52323914]
[176.23855591 -171.83906555]
[168.12493896 -184.98062134]
[162.72401428 -199.44500732]
[160.24041748 -214.67906189]
[160.76722717 -230.10060120]
[164.28250122 -245.12062073]
[170.65022278 -259.16580200]
[179.62550354 -271.70037842]
[190.86404419 -282.24664307]
[203.93531799 -290.40304565]
[218.33908081 -295.85958862]
[233.52450562 -298.40951538]
[248.91123962 -297.95721436]
[263.91159058 -294.52175903]
[269.98544312 -308.23703003]
[276.05926514 -321.95230103]
[282.13311768 -335.66757202]
[288.20693970 -349.38281250]
[275.47268677 -357.35903931]
[264.00323486 -367.06637573]
[254.03210449 -378.30725098]
[245.76226807 -390.85278320]
[239.36210632 -404.44760132]
[234.96191406 -418.81488037]
[232.65126038 -433.66217041]
[232.47720337 -448.68716431]
[234.44328308 -463.58398438]
[238.50947571 -478.04934692]
[244.59298706 -491.78875732]
[252.56997681 -504.52252197]
[262.27801514 -515.99133301]
[273.51953125 -525.96179199]
[286.06558228 -534.23083496]
[299.66076660 -540.63018799]
[314.02832031 -545.02947998]
[328.87576294 -547.33923340]
[343.90075684 -547.51232910]
[358.79745483 -545.54534912]
[373.26257324 -541.47827148]
[387.00161743 -535.39392090]
[399.73486328 -527.41613770]
[411.20312500 -517.70733643]
[421.17285156 -506.46524048]
[429.44113159 -493.91870117]
[435.83963013 -480.32308960]
[440.23803711 -465.95526123]
[442.54684448 -451.10769653]
[442.71905518 -436.08267212]
[440.75112915 -421.18609619]
[436.68316650 -406.72122192]
[430.59793091 -392.98257446]
[422.61938477 -380.24981689]
[412.90991211 -368.78216553]
[401.66717529 -358.81311035]
[389.12011719 -350.54559326]
[375.52410889 -344.14797974]
[361.15600586 -339.75042725]
[346.30828857 -337.44253540]
[331.28326416 -337.27127075]
[316.38681030 -339.24011230]
[301.92221069 -343.30899048]
[295.84835815 -329.59371948]
[289.77453613 -315.87844849]
[283.70071411 -302.16317749]
[277.62686157 -288.44793701]
[289.62789917 -280.17623901]
[299.90155029 -269.83129883]
[308.09472656 -257.76654053]
[313.92535400 -244.39456177]
[317.19229126 -230.17295837]
[317.78207397 -215.58874512]
[315.67297363 -201.14163208]
[310.93576050 -187.32690430]
[303.73132324 -174.61845398]
[294.30523682 -163.45252991]
[282.97937012 -154.21273804]
[270.14080811 -147.21687317]
[256.22885132 -142.70603943]
[241.71971130 -140.83621216]
[227.11041260 -141.67301941]
[212.90165710 -145.18927002]
[206.62429810 -131.56594849]
[200.34693909 -117.94263458]
[194.06958008 -104.31932068]
[187.89381409 -90.64965057]
[181.81997681 -76.93437958]
[175.74613953 -63.21911621]
[177.66719055 -48.44891357]
[165.00459290 -38.96371841]
[158.93075562 -25.24845123]
[152.85691833 -11.53318405]
[146.78308105 2.18208241]
[147.63723755 6.88096046]
[145.54866028 12.16630459]
[140.31880188 16.21106148]
[133.83930969 29.73940659]
[128.07327271 43.58689117]
[123.03635406 57.71591949]
[117.99944305 71.84494781]
[112.96252441 85.97398376]
[119.07783508 99.10977936]
[114.21233368 112.75797272]
[101.16650391 119.06293488]
[96.12959290 133.19197083]
[103.26496124 144.61567688]
[102.52886963 157.86967468]
[94.41375732 168.12770081]
[82.05806732 171.78370667]
[76.81134796 185.83616638]
[71.56462860 199.88864136]
[66.31790924 213.94111633]
[61.17595291 228.03225708]
[56.13903427 242.16128540]
[51.10211945 256.29031372]
[46.06520081 270.41934204]
[41.02828598 284.54837036]
[35.99137115 298.67739868]
[30.95445442 312.80642700]
[31.89660645 317.94058228]
[30.87712860 322.46981812]
[28.45492554 325.74822998]
[25.36426544 327.44531250]
[19.70147896 341.33535767]
[14.03869247 355.22537231]
[8.37590599 369.11541748]
[2.71311927 383.00543213]
[4.66804457 398.70538330]
[-7.30149794 407.56988525]
[-12.96428394 421.45993042]
[-18.62707138 435.34994507]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 210]
[28 209]
[29 208]
[31 206]
[32 205]
[33 204]
[34 203]
[35 202]
[36 198]
[37 197]
[38 196]
[39 195]
[40 194]
[41 193]
[42 192]
[44 191]
[45 190]
[46 189]
[47 188]
[50 184]
[51 183]
[54 180]
[55 179]
[56 178]
[57 177]
[65 176]
[66 175]
[67 172]
[68 171]
[69 170]
[70 169]
[72 167]
[73 166]
[74 165]
[76 164]
[77 163]
[78 162]
[79 161]
[94 145]
[95 144]
[96 143]
[97 142]
[98 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
