%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[117.12422943 652.82983398]
[102.32975006 649.21832275]
[90.28723145 639.89642334]
[83.08312225 626.47924805]
[81.96556854 611.29138184]
[87.12819672 596.96423340]
[97.67655945 585.98004150]
[111.78307343 580.24194336]
[112.22968292 565.24859619]
[112.67628479 550.25524902]
[101.04435730 559.72613525]
[86.10897827 558.33532715]
[76.42581177 546.87945557]
[77.54181671 531.92102051]
[88.81769562 522.02893066]
[103.79411316 522.86968994]
[113.89157104 533.96093750]
[115.67403412 519.06719971]
[117.45649719 504.17349243]
[119.23896790 489.27978516]
[121.02143097 474.38604736]
[122.80390167 459.49234009]
[115.03826141 443.75506592]
[126.19737244 429.10733032]
[127.75789642 414.18875122]
[129.31842041 399.27014160]
[129.20675659 384.27053833]
[127.42428589 369.37683105]
[125.64181519 354.48312378]
[111.07757568 351.14123535]
[98.51190948 343.00286865]
[89.47191620 331.03402710]
[85.06406403 316.66766357]
[85.83879852 301.63204956]
[91.72190094 287.74285889]
[102.02108002 276.68399048]
[115.50741577 269.80328369]
[113.72495270 254.90957642]
[104.53008270 243.19190979]
[110.57266998 228.57008362]
[108.79019928 213.67637634]
[107.00773621 198.78265381]
[105.00372314 183.91712952]
[95.46405029 172.47842407]
[101.06861115 157.68316650]
[98.84349060 142.84913635]
[96.61837769 128.01509094]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[88.43721008 74.22700500]
[85.99148560 59.42773819]
[83.54575348 44.62846756]
[81.10002899 29.82919502]
[78.65429688 15.02992439]
[68.77043915 2.67598033]
[74.32904053 -11.14253139]
[71.88331604 -25.94180107]
[69.43758392 -40.74107361]
[66.66197205 -55.48203659]
[63.55786514 -70.15734100]
[60.45375443 -84.83264160]
[48.39427567 -90.83126831]
[42.08365250 -102.50973511]
[43.62861252 -115.49800110]
[52.24262619 -125.08071136]
[49.35735321 -139.80059814]
[46.47208023 -154.52049255]
[43.58680725 -169.24038696]
[40.70153427 -183.96028137]
[30.45423508 -196.01446533]
[35.59894180 -209.99235535]
[26.35355377 -198.18037415]
[11.48106194 -196.22871399]
[-0.49889717 -205.25537109]
[-2.72365880 -220.08946228]
[6.08122158 -232.23335266]
[20.87190819 -234.73046875]
[33.17510986 -226.15113831]
[31.61458778 -241.06974792]
[30.05406380 -255.98835754]
[18.06039619 -265.92764282]
[16.69032478 -281.07946777]
[26.23983955 -292.45233154]
[24.67931747 -307.37094116]
[22.78602409 -322.25097656]
[20.56090736 -337.08502197]
[18.33579063 -351.91906738]
[16.11067390 -366.75311279]
[13.88555622 -381.58715820]
[-1.08090007 -383.63211060]
[-14.86441326 -389.81204224]
[-26.34761620 -399.62594604]
[-34.59961319 -412.27825928]
[-38.95145798 -426.74334717]
[-39.05036163 -441.84854126]
[-34.88830948 -456.36935425]
[-26.80269814 -469.12863159]
[-15.44899273 -479.09207153]
[-1.74758708 -485.45196533]
[13.19080734 -487.69271851]
[28.15520096 -485.63272095]
[41.93249893 -479.43896484]
[53.40583801 -469.61352539]
[61.64512253 -456.95291138]
[65.98242950 -442.48348999]
[66.06616211 -427.37820435]
[61.88952255 -412.86157227]
[53.79109573 -400.11041260]
[42.42738724 -390.15838623]
[28.71960068 -383.81228638]
[30.94471741 -368.97824097]
[33.16983414 -354.14419556]
[35.39495087 -339.31015015]
[37.62006760 -324.47610474]
[40.22296143 -322.09759521]
[41.80312729 -318.34017944]
[41.72501373 -313.69830322]
[39.59792328 -308.93148804]
[41.15844345 -294.01287842]
[52.85475922 -284.86236572]
[54.64987183 -269.75500488]
[44.97266769 -257.54888916]
[46.53319168 -242.63026428]
[48.09371567 -227.71166992]
[50.31883240 -212.87762451]
[60.35975647 -201.87629700]
[55.42142487 -186.84555054]
[58.30669785 -172.12565613]
[61.19197083 -157.40576172]
[64.07723999 -142.68586731]
[66.96251678 -127.96598053]
[81.30802917 -119.18845367]
[84.93809509 -102.42130280]
[75.12905884 -87.93675232]
[78.23316956 -73.26145172]
[81.33728027 -58.58614731]
[84.07712555 -56.36678696]
[85.87813568 -52.71009064]
[86.07644653 -48.07177353]
[84.23685455 -43.18680191]
[86.68258667 -28.38752937]
[89.12831116 -13.58825874]
[98.83723450 -2.29285741]
[93.45356750 12.58419704]
[95.89929962 27.38346863]
[98.34502411 42.18273926]
[100.79075623 56.98200989]
[103.23648071 71.78128052]
[107.42851257 77.86804199]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[111.45242310 125.78997040]
[113.67753601 140.62400818]
[115.90265656 155.45805359]
[125.60148621 167.95777893]
[119.83776855 181.69200134]
[123.65073395 187.09320068]
[124.09667206 192.75871277]
[121.90145111 197.00018311]
[123.68392181 211.89390564]
[125.46638489 226.78762817]
[134.78875732 239.57058716]
[128.61866760 253.12710571]
[130.40113831 268.02081299]
[145.13029480 271.52471924]
[157.74826050 279.84088135]
[166.74275208 291.94955444]
[171.04368591 306.37771606]
[170.15046692 321.37850952]
[164.19015503 335.14254761]
[153.89985657 346.01632690]
[140.53553772 352.70065308]
[142.31800842 367.59436035]
[144.10046387 382.48809814]
[149.92193604 368.66381836]
[160.29165649 357.82550049]
[173.84530640 351.39913940]
[188.79969788 350.23019409]
[203.18730164 354.47247314]
[215.11517334 363.56784058]
[223.01402283 376.31961060]
[225.84460449 391.05014038]
[223.23449707 405.82128906]
[215.52713013 418.68972778]
[203.73651123 427.96234131]
[189.41392517 432.41918945]
[174.44374084 431.47387695]
[160.79554749 425.25079346]
[150.26499939 414.56869507]
[144.23703003 400.83065796]
[142.67649841 415.74926758]
[141.11598206 430.66787720]
[148.61688232 441.16067505]
[147.00999451 453.55429077]
[137.69761658 461.27481079]
[135.91514587 476.16851807]
[134.13269043 491.06222534]
[132.35021973 505.95596313]
[130.56774902 520.84967041]
[128.78529358 535.74340820]
[127.66963959 550.70184326]
[127.22303009 565.69519043]
[126.77642822 580.68853760]
[140.51638794 587.25610352]
[150.39225769 598.84869385]
[154.69297791 613.45770264]
[152.67340088 628.55212402]
[144.68345642 641.51672363]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 205]
[9 204]
[10 203]
[17 202]
[18 201]
[19 200]
[20 199]
[21 198]
[22 197]
[24 194]
[25 193]
[26 192]
[27 176]
[28 175]
[29 174]
[37 166]
[38 165]
[40 163]
[41 162]
[42 161]
[43 158]
[45 156]
[46 155]
[47 154]
[48 153]
[50 151]
[51 149]
[52 148]
[53 147]
[54 146]
[55 145]
[57 143]
[58 142]
[59 141]
[60 137]
[61 136]
[62 135]
[66 132]
[67 131]
[68 130]
[69 129]
[70 128]
[72 126]
[79 125]
[80 124]
[81 123]
[84 120]
[85 119]
[86 115]
[87 114]
[88 113]
[89 112]
[90 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
