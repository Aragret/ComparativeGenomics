%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[93.20724487 516.49420166]
[78.18647003 516.56268311]
[63.28026962 514.70977783]
[48.73340607 510.96582031]
[34.78475952 505.39233398]
[21.66337395 498.08087158]
[9.58471966 489.15145874]
[-1.25286329 478.75073242]
[-10.67141151 467.04946899]
[-18.51626396 454.23986816]
[-24.65860176 440.53219604]
[-28.99756050 426.15158081]
[-31.46189117 411.33419800]
[-32.01112747 396.32330322]
[-30.63625336 381.36541748]
[-27.35984039 366.70617676]
[-22.23569298 352.58627319]
[-15.34795475 339.23760986]
[-6.80972719 326.87933350]
[3.23878384 315.71438599]
[14.63257313 305.92614746]
[27.18454361 297.67529297]
[40.68857956 291.09735107]
[54.92293549 286.30032349]
[69.65386963 283.36297607]
[84.63948059 282.33355713]
[85.53229523 267.36016846]
[86.42510986 252.38674927]
[87.31792450 237.41334534]
[80.35188293 224.24810791]
[88.89686584 210.93293762]
[89.78968811 195.95953369]
[90.68250275 180.98612976]
[91.24071503 165.99650574]
[91.46404266 150.99816895]
[91.68737030 135.99983215]
[84.14041138 123.15878296]
[92.08232117 109.47533417]
[84.97538757 122.68486023]
[74.33284760 133.25540161]
[61.07538605 140.27250671]
[46.34990692 143.12911987]
[31.43030930 141.57810974]
[17.60729027 135.75366211]
[6.07667589 126.15966034]
[-2.16401768 113.62606812]
[-6.40188885 99.23716736]
[-6.27031898 84.23774719]
[-1.78069067 69.92539978]
[6.67859840 57.53829193]
[18.37573624 48.14803314]
[32.29880142 42.56697083]
[47.24330902 41.27792740]
[61.91641617 44.39241409]
[75.04874420 51.64099503]
[85.50421906 62.39660263]
[92.37833405 75.72875977]
[95.07630157 90.48059845]
[99.47729492 76.14074707]
[103.87829590 61.80090332]
[108.27928925 47.46105576]
[112.68029022 33.12120819]
[111.50982666 28.03425407]
[112.32604980 23.46401596]
[114.59944916 20.08071709]
[117.61124420 18.24730110]
[122.64816284 4.11827087]
[127.68507385 -10.01075840]
[125.03105927 -25.60777092]
[136.59284973 -34.99789429]
[141.62976074 -49.12692261]
[146.66667175 -63.25595474]
[151.70359802 -77.38498688]
[156.42372131 -91.62297058]
[160.82472229 -105.96282196]
[165.22572327 -120.30266571]
[169.51985168 -134.67488098]
[173.70686340 -149.07865906]
[177.89387512 -163.48243713]
[182.08087158 -177.88623047]
[186.26788330 -192.29000854]
[190.45489502 -206.69378662]
[176.49594116 -212.21482849]
[163.11531067 -219.01875305]
[150.43061829 -227.04577637]
[138.55334473 -236.22534180]
[127.58785248 -246.47680664]
[117.63051605 -257.71005249]
[108.76884460 -269.82638550]
[101.08071136 -282.71929932]
[94.63368988 -296.27548218]
[89.48442841 -310.37582397]
[85.67819214 -324.89639282]
[83.24841309 -339.70959473]
[82.21646881 -354.68521118]
[82.59140778 -369.69168091]
[84.36994171 -384.59710693]
[87.53643799 -399.27047729]
[92.06307983 -413.58282471]
[97.91007233 -427.40844727]
[105.02603912 -440.62576294]
[113.34843445 -453.11862183]
[122.80413055 -464.77728271]
[133.31002808 -475.49926758]
[144.77378845 -485.19033813]
[157.09466553 -493.76531982]
[170.16439819 -501.14886475]
[183.86810303 -507.27606201]
[198.08537292 -512.09313965]
[212.69123840 -515.55767822]
[227.55735779 -517.63922119]
[242.55308533 -518.31958008]
[257.54660034 -517.59265137]
[272.40618896 -515.46496582]
[287.00125122 -511.95507812]
[301.20349121 -507.09390259]
[314.88809204 -500.92416382]
[327.93484497 -493.50009155]
[340.22903442 -484.88690186]
[351.66265869 -475.16027832]
[362.13519287 -464.40573120]
[371.55465698 -452.71777344]
[379.83822632 -440.19912720]
[386.91311646 -426.95977783]
[392.71716309 -413.11608887]
[397.19934082 -398.78973389]
[400.32025146 -384.10659790]
[402.05249023 -369.19573975]
[402.38085938 -354.18817139]
[401.30239868 -339.21582031]
[398.82666016 -324.41024780]
[394.97534180 -309.90155029]
[389.78231812 -295.81729126]
[383.29324341 -282.28115845]
[375.56512451 -269.41220093]
[366.66586304 -257.32345581]
[356.67370605 -246.12117004]
[345.67642212 -235.90379333]
[333.77072144 -226.76113892]
[321.06115723 -218.77354431]
[307.65948486 -212.01119995]
[293.68344116 -206.53353882]
[279.25585938 -202.38868713]
[264.50357056 -199.61309814]
[249.55616760 -198.23114014]
[234.54504395 -198.25495911]
[219.60209656 -199.68435669]
[204.85868835 -202.50677490]
[200.67167664 -188.10299683]
[196.48466492 -173.69921875]
[192.29765320 -159.29542542]
[188.11064148 -144.89164734]
[183.92362976 -130.48786926]
[185.07510376 -123.18746185]
[179.56556702 -115.90166473]
[175.16456604 -101.56182098]
[170.76358032 -87.22197723]
[172.08366394 -83.95246124]
[171.88572693 -79.88111877]
[169.81013489 -75.72837830]
[165.83262634 -72.34806824]
[160.79570007 -58.21903610]
[155.75878906 -44.09000778]
[150.72187805 -29.96097755]
[153.73616028 -15.37456989]
[141.81410217 -4.97384214]
[136.77719116 9.15518761]
[131.74026489 23.28421593]
[127.02014160 37.52220535]
[122.61914062 51.86205292]
[118.21813965 66.20189667]
[113.81714630 80.54174805]
[109.41614532 94.88159180]
[107.08065796 109.69866180]
[114.61164093 123.61250305]
[106.68570709 136.22315979]
[106.46237946 151.22149658]
[106.23905182 166.21984863]
[108.78293610 170.77787781]
[109.27486420 175.39430237]
[108.03622437 179.27769470]
[105.65590668 181.87893677]
[104.76309204 196.85234070]
[103.87027740 211.82574463]
[110.77245331 226.06198120]
[102.29133606 238.30616760]
[101.39851379 253.27957153]
[100.50569916 268.25296021]
[99.61288452 283.22637939]
[114.36999512 286.02926636]
[128.64750671 290.69628906]
[142.21096802 297.15081787]
[154.83764648 305.28683472]
[166.32022095 314.97079468]
[176.47013855 326.04360962]
[185.12071228 338.32351685]
[192.12989807 351.60882568]
[197.38258362 365.68142700]
[200.79254150 380.31018066]
[202.30377197 395.25488281]
[201.89144897 410.27014160]
[199.56233215 425.10940552]
[195.35470581 439.52899170]
[189.33761597 453.29208374]
[181.60990906 466.17272949]
[172.29846191 477.95938110]
[161.55618286 488.45852661]
[149.55944824 497.49771118]
[136.50529480 504.92852783]
[122.60804749 510.62896729]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 189]
[27 188]
[28 187]
[29 186]
[31 184]
[32 183]
[33 182]
[34 178]
[35 177]
[36 176]
[38 174]
[58 173]
[59 172]
[60 171]
[61 170]
[62 169]
[66 168]
[67 167]
[68 166]
[70 164]
[71 163]
[72 162]
[73 161]
[74 157]
[75 156]
[76 155]
[77 153]
[78 152]
[79 151]
[80 150]
[81 149]
[82 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
