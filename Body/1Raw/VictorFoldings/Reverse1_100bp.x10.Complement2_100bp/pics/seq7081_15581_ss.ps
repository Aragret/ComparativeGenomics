%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[131.03807068 678.68621826]
[124.15094757 665.31927490]
[119.62206268 650.98065186]
[117.58174133 636.08282471]
[118.08868408 621.05444336]
[121.12830353 606.32800293]
[126.61313629 592.32714844]
[134.38539124 579.45465088]
[144.22142029 568.08099365]
[155.83824158 558.53332520]
[168.90161133 551.08642578]
[183.03565979 545.95452881]
[180.36987305 531.19329834]
[177.70407104 516.43206787]
[175.03826904 501.67086792]
[162.69377136 493.41564941]
[159.77999878 478.48364258]
[168.52255249 465.59158325]
[165.85675049 450.83035278]
[163.19096375 436.06912231]
[160.52516174 421.30792236]
[157.63989258 406.58801270]
[154.53578186 391.91271973]
[151.43167114 377.23742676]
[148.32756042 362.56210327]
[145.22344971 347.88681030]
[142.11933899 333.21151733]
[131.91574097 322.36090088]
[136.62973022 307.25830078]
[133.52561951 292.58300781]
[130.42150879 277.90768433]
[127.20823669 263.25588989]
[123.88597870 248.62844849]
[120.56372070 234.00097656]
[117.24146271 219.37351990]
[113.91919708 204.74606323]
[110.42718506 201.48802185]
[108.94477844 196.00170898]
[110.72265625 189.63377380]
[107.83738708 174.91387939]
[104.95211029 160.19398499]
[101.95733643 145.49598694]
[98.85323334 130.82067871]
[85.71974182 127.33686066]
[75.35793304 118.54718018]
[69.77893066 106.15765381]
[70.06558990 92.57298279]
[76.16225433 80.42983246]
[86.88562775 72.08507538]
[84.00035095 57.36518860]
[81.00557709 42.66718292]
[77.90146637 27.99188042]
[74.25337982 13.44225979]
[70.06636810 -0.96152198]
[65.87935638 -15.36530399]
[60.47890854 -22.73232079]
[61.73894882 -30.01477242]
[57.76685333 -44.47929764]
[53.79475784 -58.94382095]
[49.82266235 -73.40834045]
[45.39488220 -78.31816101]
[44.27886200 -83.89054871]
[45.95450974 -88.36282349]
[42.41483688 -102.93920135]
[38.87516403 -117.51557922]
[35.33549118 -132.09194946]
[31.79582024 -146.66833496]
[28.25614738 -161.24470520]
[13.27230644 -163.64474487]
[0.38362083 -171.57725525]
[-8.46219921 -183.80694580]
[-11.94242191 -198.45193481]
[-9.55701447 -213.27336121]
[-1.70021796 -226.01762390]
[10.40420437 -234.75901794]
[-0.37112084 -246.34362793]
[4.14430714 -260.53729248]
[0.60463470 -275.11367798]
[-2.93503761 -289.69003296]
[-6.47470999 -304.26641846]
[-10.01438236 -318.84280396]
[-13.55405521 -333.41915894]
[-28.59012985 -332.78457642]
[-43.46104431 -335.09588623]
[-57.59519958 -340.26425171]
[-70.44931793 -348.09097290]
[-81.52932739 -358.27526855]
[-90.40932465 -370.42565918]
[-96.74800110 -384.07510376]
[-100.30171204 -398.69897461]
[-100.93386078 -413.73513794]
[-98.62015533 -428.60568237]
[-93.44951630 -442.73898315]
[-85.62069702 -455.59185791]
[-75.43460846 -466.67019653]
[-63.28279114 -475.54824829]
[-49.63232040 -481.88470459]
[-35.00788116 -485.43606567]
[-19.97160339 -486.06576538]
[-5.10143709 -483.74966431]
[9.03104591 -478.57672119]
[21.88263130 -470.74581909]
[32.95933533 -460.55795288]
[41.83540726 -448.40469360]
[48.16966629 -434.75320435]
[51.71863937 -420.12817383]
[52.34592438 -405.09179688]
[50.02739716 -390.22201538]
[44.85218430 -376.09036255]
[37.01920319 -363.24005127]
[26.82953644 -352.16497803]
[14.67484379 -343.29089355]
[1.02232039 -336.95883179]
[4.56199265 -322.38247681]
[8.10166550 -307.80609131]
[11.64133739 -293.22970581]
[15.18101025 -278.65335083]
[18.72068214 -264.07696533]
[29.24282646 -253.53495789]
[24.98057938 -238.29869080]
[39.74596786 -236.08226013]
[52.57260895 -228.36068726]
[61.48986435 -216.28395081]
[65.11383057 -201.67387390]
[62.86205292 -186.74928284]
[55.04686737 -173.78912354]
[42.83252335 -164.78437805]
[46.37219620 -150.20800781]
[49.91186905 -135.63162231]
[53.45154190 -121.05525208]
[56.99121094 -106.47887421]
[60.53088379 -91.90249634]
[64.28718567 -77.38043976]
[68.25928497 -62.91591644]
[72.23137665 -48.45139313]
[76.20347595 -33.98686981]
[80.28314209 -19.55231476]
[84.47015381 -5.14853334]
[88.65716553 9.25524902]
[98.05908203 -2.43251777]
[113.05881500 -2.52174544]
[122.59912109 9.05334091]
[119.64723206 23.76001930]
[106.37918091 30.75707245]
[92.57677460 24.88776970]
[95.68088531 39.56307220]
[100.14052582 45.45657730]
[98.72024536 54.47991562]
[101.60551453 69.19980621]
[116.88062286 74.18771362]
[127.57353973 86.18227386]
[130.78170776 101.92761993]
[125.63429260 117.14971161]
[113.52853394 127.71657562]
[116.63264465 142.39187622]
[121.47019958 150.14015198]
[119.67200470 157.30871582]
[122.55728149 172.02861023]
[125.44255066 186.74850464]
[128.54666138 201.42379761]
[131.86892700 216.05126953]
[135.19117737 230.67872620]
[138.51344299 245.30618286]
[141.83569336 259.93365479]
[146.78808594 267.60903931]
[145.09681702 274.80358887]
[148.20092773 289.47888184]
[151.30503845 304.15417480]
[161.73066711 316.05447388]
[156.79464722 330.10739136]
[159.89875793 344.78271484]
[163.00286865 359.45800781]
[166.10697937 374.13330078]
[169.21109009 388.80862427]
[172.31518555 403.48391724]
[176.44288635 408.64855957]
[177.22525024 414.27749634]
[175.28637695 418.64212036]
[177.95217896 433.40335083]
[180.61796570 448.16455078]
[183.28376770 462.92578125]
[195.98345947 471.94549561]
[198.47668457 486.95343018]
[189.79949951 499.00506592]
[192.46528625 513.76629639]
[195.13108826 528.52752686]
[197.79687500 543.28875732]
[212.83314514 543.15264893]
[227.67611694 545.55981445]
[241.89869690 550.44097900]
[255.09170532 557.65576172]
[266.87554932 566.99652100]
[276.91113281 578.19445801]
[284.90979004 590.92749023]
[290.64135742 604.82916260]
[293.94088745 619.49957275]
[294.71347046 634.51660156]
[292.93692017 649.44818115]
[288.66229248 663.86468506]
[282.01257324 677.35131836]
[273.17913818 689.52008057]
[262.41613770 700.02081299]
[250.03318787 708.55139160]
[236.38662720 714.86639404]
[221.86906433 718.78411865]
[206.89822388 720.19183350]
[191.90481567 719.04907227]
[177.32026672 715.38867188]
[163.56416321 709.31597900]
[151.03231812 701.00567627]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 187]
[13 186]
[14 185]
[15 184]
[18 181]
[19 180]
[20 179]
[21 178]
[22 175]
[23 174]
[24 173]
[25 172]
[26 171]
[27 170]
[29 168]
[30 167]
[31 166]
[32 164]
[33 163]
[34 162]
[35 161]
[36 160]
[39 159]
[40 158]
[41 157]
[42 155]
[43 154]
[49 149]
[50 148]
[51 146]
[52 145]
[53 139]
[54 138]
[55 137]
[57 136]
[58 135]
[59 134]
[60 133]
[63 132]
[64 131]
[65 130]
[66 129]
[67 128]
[68 127]
[75 120]
[77 118]
[78 117]
[79 116]
[80 115]
[81 114]
[82 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
