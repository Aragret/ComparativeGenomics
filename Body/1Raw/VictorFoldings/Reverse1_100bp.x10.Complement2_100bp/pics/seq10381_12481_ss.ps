%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[57.92168045 530.95892334]
[45.40591431 539.23413086]
[32.43813324 546.78137207]
[19.06064415 553.57592773]
[5.31707478 559.59570312]
[-8.74774170 564.82104492]
[-23.08793068 569.23492432]
[-37.65671539 572.82293701]
[-52.40657806 575.57342529]
[-67.28940582 577.47735596]
[-82.25665283 578.52850342]
[-97.25949860 578.72351074]
[-112.24900818 578.06164551]
[-127.17629242 576.54516602]
[-141.99264526 574.17895508]
[-156.64976501 570.97082520]
[-171.09982300 566.93109131]
[-185.29568481 562.07299805]
[-199.19105530 556.41247559]
[-212.74061584 549.96783447]
[-225.90016174 542.76025391]
[-238.62677002 534.81311035]
[-250.87892151 526.15234375]
[-262.61666870 516.80633545]
[-273.80169678 506.80538940]
[-284.39755249 496.18225098]
[-294.36965942 484.97152710]
[-303.68551636 473.20977783]
[-312.31469727 460.93539429]
[-320.22906494 448.18838501]
[-327.40283203 435.01034546]
[-333.81256104 421.44427490]
[-339.43737793 407.53436279]
[-344.25891113 393.32604980]
[-348.26144409 378.86566162]
[-351.43191528 364.20034790]
[-353.75997925 349.37792969]
[-355.23806763 334.44680786]
[-355.86135864 319.45565796]
[-355.62777710 304.45333862]
[-354.53811646 289.48886108]
[-352.59591675 274.61099243]
[-349.80755615 259.86825562]
[-346.18206787 245.30873108]
[-341.73129272 230.97994995]
[-336.46978760 216.92861938]
[-330.41467285 203.20057678]
[-323.58572388 189.84060669]
[-316.00518799 176.89227295]
[-307.69784546 164.39784241]
[-298.69073486 152.39802551]
[-289.01324463 140.93200684]
[-278.69696045 130.03715515]
[-267.77554321 119.74900818]
[-256.28457642 110.10114288]
[-244.26156616 101.12501526]
[-231.74574280 92.84991455]
[-218.77789307 85.30281830]
[-205.40036011 78.50835419]
[-191.65673828 72.48868561]
[-177.59188843 67.26343536]
[-163.25166321 62.84965897]
[-148.68284607 59.26174927]
[-133.93296814 56.51140976]
[-119.05011749 54.60760880]
[-104.08286285 53.55656052]
[-89.08001709 53.36169052]
[-74.09051514 54.02363586]
[-59.16324234 55.54023743]
[-44.34690094 57.90654755]
[-29.68981171 61.11484528]
[-15.23978710 65.15467072]
[-1.04395700 70.01284790]
[12.85137272 75.67352295]
[26.40087891 82.11823273]
[39.56036377 89.32595825]
[52.28690720 97.27320099]
[64.53899384 105.93401337]
[76.27666473 115.28016663]
[86.27483368 104.09819794]
[89.32199860 90.45244598]
[102.54319000 85.90363312]
[112.54136658 74.72165680]
[122.53953552 63.53968430]
[132.02842712 51.92242050]
[140.98913574 39.89304352]
[149.94982910 27.86366463]
[158.91052246 15.83428669]
[167.87121582 3.80490947]
[156.60569763 -6.11179161]
[146.18598938 -16.91374588]
[136.68139648 -28.52906799]
[128.15519714 -40.88045502]
[120.66413879 -53.88571548]
[114.25806427 -67.45829773]
[108.97959900 -81.50787354]
[104.86387634 -95.94094849]
[101.93828583 -110.66146851]
[100.22229767 -125.57147217]
[99.72734070 -140.57173157]
[100.45668793 -155.56242371]
[102.40550995 -170.44378662]
[105.56081390 -185.11677551]
[109.90161896 -199.48376465]
[115.39903259 -213.44912720]
[122.01646423 -226.91992188]
[129.70988464 -239.80650330]
[138.42808533 -252.02313232]
[148.11305237 -263.48846436]
[158.70033264 -274.12625122]
[170.11946106 -283.86566162]
[182.29446411 -292.64190674]
[195.14430237 -300.39654541]
[208.58345032 -307.07800293]
[222.52249146 -312.64181519]
[236.86866760 -317.05090332]
[251.52647400 -320.27600098]
[266.39840698 -322.29562378]
[281.38543701 -323.09628296]
[296.38790894 -322.67269897]
[311.30590820 -321.02767944]
[326.04016113 -318.17218018]
[340.49267578 -314.12518311]
[354.56719971 -308.91360474]
[368.17010498 -302.57220459]
[381.21087646 -295.14309692]
[393.60269165 -286.67578125]
[405.26309204 -277.22656250]
[416.11450195 -266.85836792]
[426.08471680 -255.64015198]
[435.10733032 -243.64660645]
[443.12234497 -230.95755005]
[450.07638550 -217.65739441]
[455.92321777 -203.83468628]
[460.62390137 -189.58139038]
[464.14715576 -174.99237061]
[466.46951294 -160.16470337]
[467.57556152 -145.19709778]
[467.45794678 -130.18913269]
[466.11740112 -115.24069977]
[463.56286621 -100.45127106]
[459.81137085 -85.91927338]
[454.88781738 -71.74141693]
[448.82504272 -58.01204681]
[441.66336060 -44.82254410]
[433.45043945 -32.26067352]
[424.24090576 -20.41003990]
[414.09609985 -9.34950542]
[403.08349609 0.84732336]
[391.27636719 10.11258602]
[378.75335693 18.38462448]
[365.59774780 25.60838509]
[351.89709473 31.73579979]
[337.74261475 36.72608566]
[323.22845459 40.54603577]
[308.45120239 43.17022705]
[293.50927734 44.58119965]
[278.50201416 44.76955795]
[263.52935791 43.73405075]
[248.69093323 41.48157120]
[234.08546448 38.02710724]
[219.81018066 33.39364624]
[205.96006775 27.61203003]
[192.62728882 20.72072792]
[179.90058899 12.76560497]
[170.93989563 24.79498291]
[161.97920227 36.82435989]
[153.01850891 48.85373688]
[144.05781555 60.88311768]
[159.01797485 59.79061508]
[170.45858765 69.49176788]
[171.82594299 84.42931366]
[162.33677673 96.04634857]
[147.42689514 97.68811035]
[135.63735962 88.41411591]
[133.72151184 73.53785706]
[123.72333527 84.71983337]
[113.72516632 95.90180206]
[110.67800140 109.54755402]
[97.45681000 114.09636688]
[87.45863342 125.27834320]
[98.05458069 135.90139771]
[108.02677917 147.11206055]
[117.34271240 158.87371826]
[125.97198486 171.14804077]
[133.88645935 183.89498901]
[141.06031799 197.07296753]
[147.47016907 210.63900757]
[153.09507751 224.54884338]
[157.91673279 238.75712585]
[161.91937256 253.21749878]
[165.08996582 267.88278198]
[167.41815186 282.70516968]
[168.89636230 297.63629150]
[169.51974487 312.62744141]
[169.28628540 327.62973022]
[168.19674683 342.59423828]
[166.25468445 357.47213745]
[163.46641541 372.21490479]
[159.84103394 386.77444458]
[155.39039612 401.10327148]
[150.12898254 415.15463257]
[144.07398987 428.88272095]
[137.24513245 442.24273682]
[129.66471863 455.19113159]
[121.35744476 467.68563843]
[112.35043335 479.68551636]
[102.67304230 491.15161133]
[92.35684967 502.04653931]
[81.43549347 512.33477783]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[79 181]
[80 180]
[82 178]
[83 177]
[84 176]
[85 169]
[86 168]
[87 167]
[88 166]
[89 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
