%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[93.77936554 592.52679443]
[106.42649841 583.90655518]
[104.64403534 569.01287842]
[102.86156464 554.11914062]
[100.85755157 539.25360107]
[98.63243866 524.41955566]
[96.40731812 509.58551025]
[94.18220520 494.75149536]
[84.64252472 483.31277466]
[90.24709320 468.51751709]
[88.02197266 453.68347168]
[85.79685974 438.84945679]
[77.70597076 451.48025513]
[63.77851486 457.05035400]
[49.20907974 453.48220825]
[39.43171310 442.10665894]
[38.09312057 427.16650391]
[45.69257355 414.23406982]
[59.39565659 408.13278198]
[74.09146118 411.13833618]
[84.29931641 422.13073730]
[83.85270691 407.13739014]
[75.26625824 398.61685181]
[74.77147675 386.12930298]
[83.17859650 376.34753418]
[75.25266266 363.73687744]
[82.78364563 349.82302856]
[82.56031799 334.82470703]
[74.10167694 326.17727661]
[73.79286957 313.68374634]
[82.34468842 304.02822876]
[82.34468842 289.02822876]
[82.34468842 274.02822876]
[71.80033875 284.69671631]
[56.87754440 286.21661377]
[44.39880753 277.89309692]
[40.06924057 263.53152466]
[45.86825943 249.69781494]
[59.14463806 242.71656799]
[73.82859039 245.77951050]
[83.20741272 257.48806763]
[84.76792908 242.56945801]
[86.32845306 227.65084839]
[87.77787781 212.72103882]
[89.11611176 197.78085327]
[90.00892639 182.80744934]
[90.45552826 167.81410217]
[90.90213776 152.82073975]
[91.34873962 137.82739258]
[91.79534912 122.83404541]
[92.24195099 107.84069824]
[79.70071411 116.06975555]
[65.40078735 111.54072571]
[59.88354492 97.59224701]
[67.21609497 84.50661469]
[81.99314880 81.93007660]
[93.32096100 91.76043701]
[87.06134033 77.23020172]
[96.08074188 65.37693787]
[97.64125824 50.45833206]
[99.20178223 35.53973007]
[92.94216919 21.00949287]
[101.96156311 9.15623188]
[103.52208710 -5.76237249]
[105.08261108 -20.68097687]
[102.86296844 -29.54162216]
[106.77903748 -35.80949402]
[108.56150055 -50.70321274]
[110.34397125 -65.59693146]
[112.12643433 -80.49064636]
[113.90890503 -95.38436127]
[111.82143402 -104.27707672]
[115.83038330 -110.48594666]
[117.83439636 -125.35147095]
[119.83840942 -140.21701050]
[121.73170471 -155.09703064]
[115.68911743 -169.71885681]
[124.88398743 -181.43652344]
[126.66645050 -196.33024597]
[119.32260132 -206.93356323]
[121.11383820 -219.30187988]
[130.54013062 -226.88288879]
[132.54414368 -241.74841309]
[134.54815674 -256.61395264]
[136.55216980 -271.47946167]
[138.55618286 -286.34500122]
[139.33750916 -301.32464600]
[138.89089966 -316.31799316]
[138.44429016 -331.31134033]
[129.60877991 -340.70794678]
[129.54547119 -353.20513916]
[137.74288940 -362.10058594]
[137.51956177 -377.09893799]
[137.29623413 -392.09725952]
[136.96125793 -407.09350586]
[136.51464844 -422.08688354]
[122.11463928 -426.82135010]
[110.20425415 -436.19784546]
[102.22174072 -449.08407593]
[99.13102722 -463.92401123]
[101.30533600 -478.92562866]
[108.48209381 -492.27740479]
[119.79468536 -502.36703491]
[133.87705994 -507.97619629]
[149.02870178 -508.42752075]
[163.41996765 -503.66650391]
[175.31304932 -494.26806641]
[183.27180481 -481.36715698]
[186.33515930 -466.52154541]
[184.13320923 -451.52398682]
[176.93185425 -438.18545532]
[165.60069275 -428.11666870]
[151.50801086 -422.53347778]
[151.95460510 -407.54013062]
[155.29586792 -400.94787598]
[152.29457092 -392.32058716]
[152.51789856 -377.32226562]
[152.74122620 -362.32391357]
[162.53976440 -347.76522827]
[153.43763733 -331.75793457]
[153.88424683 -316.76458740]
[154.33085632 -301.77124023]
[162.41618347 -314.40560913]
[175.40090942 -321.91540527]
[190.38421631 -322.62289429]
[204.01878357 -316.37002563]
[213.25863647 -304.55371094]
[216.03955078 -289.81375122]
[211.74026489 -275.44308472]
[201.32125854 -264.65216064]
[187.11015320 -259.85168457]
[172.28175354 -262.11410522]
[160.14875793 -270.93399048]
[153.42170715 -284.34097290]
[151.41769409 -269.47546387]
[149.41368103 -254.60992432]
[147.40966797 -239.74440002]
[145.40565491 -224.87887573]
[152.93612671 -209.02772522]
[141.56016541 -194.54777527]
[139.77770996 -179.65405273]
[145.94778442 -166.09753418]
[136.62541199 -153.31457520]
[138.95181274 -146.29960632]
[134.70393372 -138.21298218]
[132.69992065 -123.34745789]
[130.69590759 -108.48193359]
[128.80261230 -93.60189819]
[127.02014923 -78.70818329]
[125.23768616 -63.81446457]
[123.45522308 -48.92074585]
[121.67275238 -34.02702713]
[120.00121307 -19.12045479]
[118.44068909 -4.20184946]
[116.88016510 10.71675491]
[123.25140381 24.17991257]
[114.12039185 37.10025024]
[112.55986786 52.01885605]
[110.99934387 66.93746185]
[117.37057495 80.40061951]
[108.23956299 93.32096100]
[107.23530579 108.28730011]
[106.78869629 123.28065491]
[106.34209442 138.27400208]
[105.89548492 153.26734924]
[105.44888306 168.26069641]
[105.00227356 183.25405884]
[107.19523621 187.00170898]
[108.00057983 190.86381531]
[107.55270386 194.39012146]
[106.11845398 197.22023010]
[104.05628967 199.11907959]
[102.71805573 214.05926514]
[105.06937408 222.88589478]
[101.24706268 229.21136475]
[99.68653870 244.12997437]
[98.12601471 259.04858398]
[97.34468842 274.02822876]
[97.34468842 289.02822876]
[97.34468842 304.02822876]
[106.91938019 319.75738525]
[97.55865479 334.60137939]
[97.78198242 349.59970093]
[105.72388458 363.28314209]
[98.17693329 376.12420654]
[107.98474121 391.70907593]
[98.84606171 406.69079590]
[99.29266357 421.68414307]
[100.63089752 436.62432861]
[102.85601807 451.45837402]
[105.08113098 466.29241943]
[114.77996826 478.79214478]
[109.01624298 492.52636719]
[111.24136353 507.36041260]
[113.46648407 522.19445801]
[115.69159698 537.02850342]
[119.50456238 542.42968750]
[119.95050049 548.09521484]
[117.75528717 552.33666992]
[119.53775024 567.23040771]
[121.32021332 582.12408447]
[135.64436340 587.51647949]
[145.81315613 598.95562744]
[149.48988342 613.81292725]
[145.82965088 628.67431641]
[135.67356873 640.12475586]
[121.35541534 645.53302002]
[106.16539764 643.65625000]
[93.59408569 634.92584229]
[86.53025818 621.34790039]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 201]
[3 200]
[4 199]
[5 196]
[6 195]
[7 194]
[8 193]
[10 191]
[11 190]
[12 189]
[21 188]
[22 187]
[25 185]
[27 183]
[28 182]
[31 180]
[32 179]
[33 178]
[41 177]
[42 176]
[43 175]
[44 173]
[45 172]
[46 167]
[47 166]
[48 165]
[49 164]
[50 163]
[51 162]
[57 161]
[59 159]
[60 158]
[61 157]
[63 155]
[64 154]
[65 153]
[67 152]
[68 151]
[69 150]
[70 149]
[71 148]
[73 147]
[74 146]
[75 145]
[76 143]
[78 141]
[79 140]
[82 138]
[83 137]
[84 136]
[85 135]
[86 134]
[87 122]
[88 121]
[89 120]
[92 118]
[93 117]
[94 116]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
