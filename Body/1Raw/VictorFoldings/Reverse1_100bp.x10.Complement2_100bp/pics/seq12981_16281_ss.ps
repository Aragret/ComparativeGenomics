%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCACCUCAUCCCGACUCUGACCCCACCCCGGAAGAUACCGACUCCCCUCAGUCCCCACCUCUGGAUUAACCCGACUAAACGGACGACGACGAUCCUCCUCxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[-101.11486053 439.83804321]
[-93.56241608 452.82675171]
[-87.89122772 466.74020386]
[-84.21167755 481.30752563]
[-82.59539795 496.24517822]
[-83.07384491 511.26242065]
[-85.63771057 526.06689453]
[-90.23707581 540.37048340]
[-96.78242493 553.89471436]
[-105.14635468 566.37628174]
[-115.16603851 577.57238770]
[-126.64646149 587.26495361]
[-139.36413574 595.26538086]
[-153.07153320 601.41790771]
[-167.50180054 605.60278320]
[-182.37408447 607.73858643]
[-197.39886475 607.78363037]
[-212.28369141 605.73718262]
[-226.73883057 601.63897705]
[-240.48289490 595.56884766]
[-253.24836731 587.64489746]
[-264.78674316 578.02136230]
[-274.87344360 566.88568115]
[-283.31213379 554.45446777]
[-289.93853760 540.96978760]
[-294.62368774 526.69403076]
[-297.27633667 511.90524292]
[-297.84490967 496.89114380]
[-296.31832886 481.94406128]
[-292.72625732 467.35488892]
[-287.13870239 453.40768433]
[-279.66433716 440.37387085]
[-270.44869995 428.50717163]
[-259.67120361 418.03857422]
[-247.54158020 409.17187500]
[-234.29595947 402.07965088]
[-220.19216919 396.89996338]
[-205.50474548 393.73361206]
[-190.51957703 392.64224243]
[-175.52836609 393.64712524]
[-160.82292175 396.72866821]
[-146.68948364 401.82687378]
[-133.40315247 408.84255981]
[-124.62255096 396.68109131]
[-115.84194183 384.51965332]
[-107.06134033 372.35818481]
[-98.28073883 360.19674683]
[-89.50013733 348.03527832]
[-80.71952820 335.87384033]
[-71.93892670 323.71237183]
[-63.15832520 311.55090332]
[-54.37771988 299.38946533]
[-60.60095596 285.85665894]
[-59.20559311 270.92651367]
[-50.46667480 258.61807251]
[-36.64950180 252.29490662]
[-21.42317772 253.74621582]
[-12.64257336 241.58476257]
[-3.86197042 229.42329407]
[4.91863298 217.26184082]
[13.69923592 205.10038757]
[22.47983932 192.93893433]
[31.26044273 180.77748108]
[24.05804443 168.92025757]
[21.91213989 155.17008972]
[25.17933464 141.59788513]
[33.39845276 130.26048279]
[45.35530853 122.88897705]
[59.26199722 120.62441254]
[73.02420807 123.84128571]
[81.98490143 111.81190491]
[90.94560242 99.78252411]
[90.93414307 95.92607117]
[92.62261963 92.08329773]
[95.96678162 89.01351166]
[100.58480835 87.42805481]
[110.07370758 75.81079102]
[119.56260681 64.19352722]
[129.05151367 52.57626343]
[138.54040527 40.95900345]
[141.27787781 25.37642288]
[155.32148743 20.41391563]
[164.81037903 8.79665184]
[174.29928589 -2.82061195]
[183.78817749 -14.43787575]
[193.10305786 -26.19512749]
[202.24186707 -38.08975983]
[204.98872375 -46.80139542]
[211.60635376 -50.09210968]
[220.92123413 -61.84936142]
[230.23611450 -73.60661316]
[239.55099487 -85.36386108]
[248.86587524 -97.12111664]
[237.97039795 -107.44516754]
[228.02999878 -118.69177246]
[219.12248230 -130.77290344]
[211.31756592 -143.59400940]
[204.67633057 -157.05476379]
[199.25076294 -171.04978943]
[195.08331299 -185.46957397]
[192.20661926 -200.20124817]
[190.64317322 -215.12951660]
[190.40521240 -230.13754272]
[191.49461365 -245.10787964]
[193.90284729 -259.92333984]
[197.61105347 -274.46798706]
[202.59022522 -288.62799072]
[208.80139160 -302.29251099]
[216.19592285 -315.35461426]
[224.71595764 -327.71206665]
[234.29481506 -339.26812744]
[244.85752869 -349.93240356]
[256.32144165 -359.62139893]
[268.59680176 -368.25930786]
[281.58752441 -375.77850342]
[295.19198608 -382.12011719]
[309.30371094 -387.23455811]
[323.81219482 -391.08175659]
[338.60394287 -393.63165283]
[353.56317139 -394.86422729]
[368.57278442 -394.76989746]
[383.51535034 -393.34936523]
[398.27386475 -390.61376953]
[412.73284912 -386.58447266]
[426.77917480 -381.29309082]
[440.30285645 -374.78094482]
[453.19805908 -367.09909058]
[465.36386108 -358.30755615]
[476.70507812 -348.47525024]
[487.13290405 -337.67904663]
[496.56573486 -326.00347900]
[504.92977905 -313.53988647]
[512.15954590 -300.38589478]
[518.19848633 -286.64437866]
[522.99926758 -272.42291260]
[526.52435303 -257.83279419]
[528.74615479 -242.98823547]
[529.64727783 -228.00538635]
[529.22070312 -213.00154114]
[527.46978760 -198.09410095]
[524.40814209 -183.39974976]
[520.05975342 -169.03349304]
[514.45867920 -155.10775757]
[507.64880371 -141.73155212]
[499.68334961 -129.00956726]
[490.62466431 -117.04134369]
[480.54370117 -105.92057800]
[469.51928711 -95.73429871]
[457.63778687 -86.56221771]
[444.99209595 -78.47613525]
[431.68127441 -71.53932953]
[417.80944824 -65.80609894]
[403.48519897 -61.32130432]
[388.82061768 -58.12005234]
[373.93051147 -56.22739410]
[358.93139648 -55.65814590]
[343.94064331 -56.41675949]
[329.07562256 -58.49729919]
[314.45263672 -61.88348389]
[300.18618774 -66.54880524]
[286.38784790 -72.45676422]
[273.16567993 -79.56110382]
[260.62313843 -87.80622864]
[251.30824280 -76.04898071]
[241.99336243 -64.29173279]
[232.67848206 -52.53447723]
[223.36360168 -40.77722549]
[214.13650513 -28.95095634]
[204.99769592 -17.05632401]
[204.71890259 -12.28858662]
[201.44207764 -7.64536810]
[195.40544128 -4.94897699]
[185.91654968 6.66828632]
[176.42764282 18.28554916]
[166.93875122 29.90281296]
[164.87997437 44.65444946]
[150.15766907 50.44789886]
[140.66876221 62.06516266]
[131.17987061 73.68242645]
[121.69097137 85.29969025]
[112.20207214 96.91695404]
[102.97497559 108.74322510]
[94.01428223 120.77259827]
[85.05358124 132.80197144]
[92.70814514 147.15960693]
[93.33290100 163.36001587]
[86.85347748 178.15791321]
[74.61357117 188.61105347]
[59.09658432 192.66529846]
[43.42189789 189.55807495]
[34.64129639 201.71954346]
[25.86069107 213.88099670]
[17.08008957 226.04244995]
[8.29948521 238.20390320]
[-0.48111776 250.36535645]
[-9.26172066 262.52682495]
[-3.09278464 276.52294922]
[-4.74681044 291.62792969]
[-13.68004608 303.79608154]
[-27.41263199 309.81869507]
[-42.21626663 308.17007446]
[-50.99686813 320.33151245]
[-59.77747345 332.49298096]
[-68.55807495 344.65441895]
[-77.33867645 356.81588745]
[-86.11928558 368.97735596]
[-94.89988708 381.13879395]
[-103.68048859 393.30026245]
[-112.46109009 405.46170044]
[-121.24169159 417.62316895]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 210]
[44 209]
[45 208]
[46 207]
[47 206]
[48 205]
[49 204]
[50 203]
[51 202]
[52 201]
[57 196]
[58 195]
[59 194]
[60 193]
[61 192]
[62 191]
[63 190]
[70 184]
[71 183]
[72 182]
[76 181]
[77 180]
[78 179]
[79 178]
[80 177]
[82 175]
[83 174]
[84 173]
[85 172]
[86 169]
[87 168]
[89 167]
[90 166]
[91 165]
[92 164]
[93 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
