%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCAAUAAAAGCAAUUACAAUCAUUCCCACCCCUUCGCUCCAACUGGACAAUCCCACUCUUCUUAAUAAGCUCACGAUAUCCGCGAACAGUCCCUCCAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[82.48566437 658.65338135]
[94.96270752 649.69689941]
[93.40218353 634.77832031]
[91.84166718 619.85968018]
[90.28114319 604.94110107]
[88.72061920 590.02246094]
[87.16009521 575.10388184]
[85.59957123 560.18530273]
[83.81710815 545.29156494]
[81.81309509 530.42602539]
[79.80908203 515.56048584]
[70.44076538 503.98104858]
[76.26499176 489.27087402]
[74.26097107 474.40533447]
[72.25695801 459.53982544]
[69.06954193 455.98321533]
[68.08251190 450.38653564]
[70.42141724 444.20260620]
[68.86089325 429.28399658]
[61.73766708 442.48474121]
[49.34745789 450.93948364]
[34.45827103 452.75942993]
[20.39639282 447.53796387]
[10.30327988 436.44161987]
[6.43376017 421.94931030]
[9.65229511 407.29867554]
[19.23985481 395.76269531]
[33.05455399 389.91854858]
[48.01015091 391.07183838]
[60.76553345 398.96487427]
[68.47111511 411.83441162]
[69.36393738 396.86099243]
[70.25675201 381.88757324]
[71.14956665 366.91418457]
[72.04238129 351.94076538]
[59.60594940 345.79232788]
[50.42327881 335.33526611]
[45.90557861 322.12655640]
[46.76616287 308.14978027]
[52.90805817 295.51718140]
[63.43366241 286.15045166]
[76.77577972 281.48840332]
[77.89142609 266.52993774]
[79.00707245 251.57148743]
[76.36977386 244.66740417]
[80.25231934 236.39916992]
[73.68134308 223.03236389]
[82.61898041 209.97750854]
[83.95721436 195.03732300]
[85.29544830 180.09713745]
[75.57766724 168.86770630]
[76.72200012 153.69717407]
[88.56635284 143.58039856]
[89.90458679 128.64021301]
[91.24282074 113.70003510]
[84.32715607 104.32907867]
[85.45252991 92.73706818]
[94.04157257 84.87134552]
[95.60209656 69.95273590]
[97.16262054 55.03413391]
[95.25447083 51.13375854]
[94.73860931 47.22243881]
[95.44751740 43.73921585]
[97.08828735 41.02361679]
[99.28597260 39.28340149]
[101.73169708 24.48413086]
[104.17742157 9.68486023]
[92.42089081 -0.09937370]
[87.17488098 -14.36037540]
[89.75429535 -29.23360825]
[99.36772919 -40.74177551]
[113.35649872 -45.85839081]
[115.80223083 -60.65766144]
[118.24795532 -75.45693207]
[116.55964661 -84.43398285]
[120.84184265 -90.45764923]
[123.50763702 -105.21887207]
[118.34606934 -120.17443085]
[128.22209167 -131.32402039]
[129.78260803 -146.24263000]
[130.22921753 -161.23597717]
[122.90622711 -175.26040649]
[131.01904297 -187.75166321]
[131.46563721 -202.74501038]
[131.80061340 -217.74127197]
[132.02394104 -232.73960876]
[132.24726868 -247.73794556]
[132.24726868 -262.73794556]
[132.02394104 -277.73629761]
[131.80061340 -292.73461914]
[131.57728577 -307.73297119]
[116.82125092 -310.74514771]
[103.05791473 -316.85946655]
[90.93102264 -325.78988647]
[81.00776672 -337.11874390]
[73.75228119 -350.31616211]
[69.50391388 -364.76489258]
[68.46136475 -379.78912354]
[70.67340851 -394.68612671]
[76.03657532 -408.75915527]
[84.30001831 -421.35000610]
[95.07723999 -431.86978149]
[107.86418152 -439.82644653]
[122.06275940 -444.84780884]
[137.00889587 -446.69909668]
[152.00352478 -445.29364014]
[166.34530640 -440.69723511]
[179.36347961 -433.12481689]
[190.44914246 -422.93060303]
[199.08380127 -410.59136963]
[204.86358643 -396.68423462]
[207.51818848 -381.85968018]
[206.92343140 -366.81109619]
[203.10714722 -352.24227905]
[196.24780273 -338.83468628]
[186.66625977 -327.21539307]
[174.81062317 -317.92788696]
[161.23544312 -311.40649414]
[146.57562256 -307.95629883]
[146.79895020 -292.95794678]
[147.02227783 -277.95962524]
[147.24560547 -262.96127319]
[149.98780823 -259.05111694]
[150.30279541 -253.37680054]
[147.24560547 -247.51461792]
[147.02227783 -232.51628113]
[146.79895020 -217.51794434]
[149.84251404 -210.78308105]
[146.45899963 -202.29841614]
[146.01239014 -187.30505371]
[153.36732483 -174.35305786]
[145.22256470 -160.78938293]
[144.77595520 -145.79602051]
[153.98199463 -157.63870239]
[167.83843994 -163.38316345]
[182.72325134 -161.52783203]
[194.74559021 -152.55769348]
[200.76281738 -138.81748962]
[199.20207214 -123.89891052]
[190.47131348 -111.70162201]
[176.85275269 -105.41397095]
[161.90623474 -106.67952728]
[149.53875732 -115.16748047]
[142.98330688 -128.65823364]
[148.33554077 -114.75849152]
[138.26885986 -102.55307770]
[135.60305786 -87.79185486]
[133.04722595 -73.01119995]
[130.60150146 -58.21193314]
[128.15577698 -43.41266251]
[139.75457764 -34.06744385]
[145.15431213 -20.07819939]
[142.81137085 -5.16589069]
[133.25604248 6.64904356]
[118.97669220 12.13058758]
[116.53096771 26.92985916]
[114.08524323 41.72912979]
[112.08122253 56.59465790]
[110.52070618 71.51325989]
[108.96018219 86.43186951]
[116.18365479 101.57114410]
[106.18300629 115.03826904]
[104.84477234 129.97845459]
[103.50653839 144.91864014]
[113.36440277 156.97932434]
[111.79441071 172.11174011]
[100.23563385 181.43537903]
[98.89739990 196.37556458]
[97.55916595 211.31575012]
[104.03442383 225.75117493]
[95.19250488 237.73741150]
[93.96553040 252.68714905]
[92.84987640 267.64559937]
[91.73423004 282.60403442]
[105.89278412 290.62084961]
[115.10486603 303.96182251]
[117.56797028 319.92721558]
[112.83912659 335.31295776]
[101.91357422 347.05374146]
[87.01578522 352.83358765]
[86.12297058 367.80700684]
[85.23015594 382.78039551]
[84.33734131 397.75381470]
[83.44452667 412.72720337]
[83.77950287 427.72348022]
[85.34002686 442.64208984]
[87.12248993 457.53579712]
[89.12650299 472.40133667]
[91.13051605 487.26684570]
[100.64216614 499.90960693]
[94.67460632 513.55645752]
[96.67861938 528.42199707]
[98.68263245 543.28753662]
[102.41476440 548.74487305]
[102.77629852 554.41644287]
[100.51817322 558.62475586]
[102.07869720 573.54333496]
[103.63922119 588.46197510]
[105.19974518 603.38055420]
[106.76026917 618.29919434]
[108.32079315 633.21777344]
[109.88131714 648.13635254]
[123.94174194 654.31701660]
[133.01516724 666.70928955]
[134.66090393 681.97973633]
[128.43624878 696.02069092]
[116.01559448 705.05523682]
[100.74004364 706.65313721]
[86.71864319 700.38446045]
[77.72307587 687.93554688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 202]
[3 201]
[4 200]
[5 199]
[6 198]
[7 197]
[8 196]
[9 193]
[10 192]
[11 191]
[13 189]
[14 188]
[15 187]
[18 186]
[19 185]
[31 184]
[32 183]
[33 182]
[34 181]
[35 180]
[42 174]
[43 173]
[44 172]
[46 171]
[48 169]
[49 168]
[50 167]
[53 164]
[54 163]
[55 162]
[58 160]
[59 159]
[60 158]
[65 157]
[66 156]
[67 155]
[72 150]
[73 149]
[74 148]
[76 147]
[77 146]
[79 144]
[80 133]
[81 132]
[83 130]
[84 129]
[85 127]
[86 126]
[87 125]
[88 122]
[89 121]
[90 120]
[91 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
