%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[247.12521362 194.36914062]
[234.06103516 186.99845886]
[220.99684143 179.62776184]
[207.93266296 172.25708008]
[194.86846924 164.88638306]
[179.98176575 165.37123108]
[171.76451111 151.85134888]
[158.70033264 144.48065186]
[145.63613892 137.10997009]
[132.57196045 129.73927307]
[119.50776672 122.36859131]
[124.48910522 136.51730347]
[120.31333160 150.92434692]
[108.53791046 160.21624756]
[93.55477142 160.92735291]
[80.95227051 152.79243469]
[75.43081665 138.84562683]
[79.04978180 124.28873444]
[90.45938110 114.55112457]
[105.40525055 113.26493835]
[91.52891541 111.55059052]
[85.72385406 98.83081055]
[73.62809753 89.95991516]
[61.53234863 81.08901978]
[49.43659592 72.21812439]
[55.72975922 85.83414459]
[57.05538940 100.77545929]
[53.25775528 115.28675842]
[44.78298950 127.66328430]
[32.62670898 136.45104980]
[18.21701813 140.61767578]
[3.24675298 139.67367554]
[-10.52539539 133.72994995]
[-21.48148918 123.48475647]
[-28.33441544 110.14169312]
[-30.27910042 95.26828766]
[-27.08708382 80.61185455]
[-19.13336182 67.89421082]
[-7.35232830 58.60942841]
[6.87199163 53.84825897]
[21.86853981 54.17004776]
[35.87688065 59.53779221]
[26.21607208 48.06309128]
[16.55526161 36.58839035]
[8.63428402 32.03911591]
[6.83757877 24.87017822]
[-2.65131974 13.25291443]
[-12.14021778 1.63565159]
[-21.62911606 -9.98161221]
[-34.08105087 -1.59865367]
[-47.25335693 5.59961176]
[-61.03364563 11.55177021]
[-75.30435944 16.20703888]
[-89.94372559 19.52569962]
[-104.82685852 21.47943878]
[-119.82676697 22.05158615]
[-134.81547546 21.23726273]
[-149.66511536 19.04341316]
[-164.24897766 15.48875713]
[-178.44264221 10.60362148]
[-192.12500000 4.42968512]
[-205.17933655 -2.98037672]
[-217.49426270 -11.56334209]
[-228.96470642 -21.24598312]
[-239.49281311 -31.94569016]
[-248.98873901 -43.57117462]
[-257.37149048 -56.02324677]
[-264.56954956 -69.19567108]
[-270.52148438 -82.97606659]
[-275.17651367 -97.24684906]
[-278.49493408 -111.88627625]
[-280.44842529 -126.76943207]
[-281.02029419 -141.76934814]
[-280.20574951 -156.75805664]
[-278.01162720 -171.60765076]
[-274.45672607 -186.19145203]
[-269.57138062 -200.38504028]
[-263.39721680 -214.06730652]
[-255.98692322 -227.12152100]
[-247.40374756 -239.43629456]
[-237.72091675 -250.90657043]
[-227.02104187 -261.43450928]
[-215.39540100 -270.93023682]
[-202.94317627 -279.31277466]
[-189.77064514 -286.51062012]
[-175.99014282 -292.46231079]
[-161.71928406 -297.11709595]
[-147.07980347 -300.43527222]
[-132.19660950 -302.38851929]
[-117.19667816 -302.96017456]
[-102.20799255 -302.14535522]
[-87.35843658 -299.95098877]
[-72.77468872 -296.39587402]
[-58.58118820 -291.51025391]
[-44.89902878 -285.33584595]
[-31.84494019 -277.92535400]
[-19.53030205 -269.34197998]
[-8.06018066 -259.65896606]
[2.46756530 -248.95890808]
[11.96311283 -237.33309937]
[20.34544945 -224.88075256]
[27.54305649 -211.70808411]
[33.49452591 -197.92750549]
[38.14908218 -183.65655518]
[41.46701050 -169.01702881]
[43.42000580 -154.13378906]
[43.99140549 -139.13385010]
[43.17633057 -124.14518738]
[40.98173904 -109.29566193]
[37.42635345 -94.71197510]
[32.54050827 -80.51855469]
[26.36588860 -66.83649445]
[18.95517540 -53.78253174]
[10.37159348 -41.46803665]
[0.68837923 -29.99807739]
[-10.01185322 -19.47051048]
[-0.52295476 -7.85324669]
[8.96594334 3.76401663]
[18.45484161 15.38127995]
[28.02996254 26.92758179]
[37.69077301 38.40228271]
[47.35158157 49.87697983]
[58.30749130 60.12237167]
[70.40324402 68.99327087]
[82.49899292 77.86416626]
[94.59474945 86.73506165]
[108.47108459 88.44940948]
[114.27614594 101.16918945]
[126.87845612 109.30440521]
[139.94264221 116.67509460]
[153.00683594 124.04578400]
[166.07101440 131.41647339]
[179.13519287 138.78715515]
[194.95634460 138.82951355]
[202.23916626 151.82220459]
[215.30334473 159.19288635]
[228.36753845 166.56358337]
[241.43171692 173.93426514]
[254.49591064 181.30496216]
[262.95278931 168.90516663]
[272.43078613 157.26724243]
[282.86163330 146.47503662]
[294.17013550 136.60632324]
[306.27484131 127.73220062]
[319.08850098 119.91659546]
[332.51882935 113.21584320]
[346.46905518 107.67819977]
[360.83862305 103.34358215]
[375.52404785 100.24321747]
[390.41949463 98.39944458]
[405.41763306 97.82554626]
[420.41043091 98.52565002]
[435.28982544 100.49472809]
[449.94863892 103.71857452]
[464.28125000 108.17398071]
[478.18435669 113.82882690]
[491.55780029 120.64238739]
[504.30523682 128.56555176]
[516.33483887 137.54124451]
[527.55987549 147.50477600]
[537.89953613 158.38438416]
[547.27923584 170.10166931]
[555.63146973 182.57218933]
[562.89599609 195.70613098]
[569.02056885 209.40881348]
[573.96093750 223.58155823]
[577.68157959 238.12220764]
[580.15570068 252.92601013]
[581.36547852 267.88629150]
[581.30212402 282.89529419]
[579.96612549 297.84484863]
[577.36712646 312.62722778]
[573.52386475 327.13595581]
[568.46398926 341.26647949]
[562.22393799 354.91699219]
[554.84881592 367.98910522]
[546.39160156 380.38867188]
[536.91326904 392.02636719]
[526.48217773 402.81829834]
[515.17340088 412.68670654]
[503.06848145 421.56054688]
[490.25460815 429.37579346]
[476.82409668 436.07620239]
[462.87374878 441.61349487]
[448.50405884 445.94772339]
[433.81854248 449.04772949]
[418.92306519 450.89111328]
[403.92489624 451.46463013]
[388.93212891 450.76412964]
[374.05276489 448.79467773]
[359.39404297 445.57043457]
[345.06158447 441.11465454]
[331.15859985 435.45947266]
[317.78533936 428.64556885]
[305.03808594 420.72207642]
[293.00872803 411.74606323]
[281.78393555 401.78222656]
[271.44461060 390.90237427]
[262.06518555 379.18484497]
[253.71327209 366.71408081]
[246.44905090 353.57998657]
[240.32487488 339.87713623]
[235.38484192 325.70425415]
[231.66456604 311.16351318]
[229.19082642 296.35964966]
[227.98147583 281.39932251]
[228.04522705 266.39031982]
[229.38160706 251.44082642]
[231.98097229 236.65849304]
[235.82463074 222.14987183]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 139]
[2 138]
[3 137]
[4 136]
[5 135]
[7 133]
[8 132]
[9 131]
[10 130]
[11 129]
[20 128]
[22 126]
[23 125]
[24 124]
[25 123]
[42 122]
[43 121]
[44 120]
[46 119]
[47 118]
[48 117]
[49 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
