%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[146.10482788 582.28002930]
[147.08259583 567.00579834]
[155.05654907 553.94152832]
[168.19435120 546.08935547]
[167.30152893 531.11596680]
[166.40870667 516.14257812]
[165.51589966 501.16915894]
[164.62307739 486.19573975]
[162.72979736 471.31570435]
[159.84451294 456.59582520]
[156.95924377 441.87591553]
[146.91831970 430.87460327]
[151.85664368 415.84384155]
[148.97137451 401.12396240]
[146.08610535 386.40405273]
[143.20083618 371.68417358]
[133.34002686 364.67767334]
[130.81579590 352.43789673]
[137.51550293 341.41625977]
[134.84970093 326.65502930]
[132.18391418 311.89382935]
[117.97067261 302.90368652]
[114.59065247 286.08435059]
[124.61425018 271.74743652]
[121.72898102 257.02755737]
[118.84370422 242.30766296]
[115.95843506 227.58776855]
[113.07315826 212.86787415]
[110.18788910 198.14797974]
[107.30261230 183.42810059]
[104.41734314 168.70820618]
[100.04594421 162.74894714]
[101.60040283 153.74775696]
[98.93460846 138.98654175]
[94.65242004 132.96287537]
[96.34072113 123.98582458]
[93.89499664 109.18655396]
[83.17082214 119.67426300]
[68.26676941 117.98042297]
[60.16954422 105.35366821]
[64.84812164 91.10197449]
[78.85363007 85.73115540]
[91.86079407 93.19902039]
[90.52255249 78.25884247]
[89.18431854 63.31865311]
[87.84608459 48.37846756]
[86.50785065 33.43828583]
[85.16961670 18.49809837]
[83.83138275 3.55791378]
[82.04891968 -11.33580303]
[79.82379913 -26.16984749]
[77.59868622 -41.00389099]
[67.89985657 -53.50362015]
[73.66357422 -67.23783875]
[61.86153412 -81.37267303]
[68.91672516 -97.44100189]
[66.47099304 -112.24027252]
[64.02526855 -127.03954315]
[59.53851318 -134.99610901]
[61.65501022 -142.07722473]
[59.42989349 -156.91127014]
[57.20477295 -171.74531555]
[54.97965622 -186.57936096]
[48.81055832 -172.90667725]
[37.37587357 -163.19853210]
[22.88346100 -159.32942200]
[8.13158035 -162.04641724]
[-4.03141260 -170.82489014]
[-11.25703430 -183.96986389]
[-12.15012932 -198.94325256]
[-6.53825665 -212.85392761]
[4.49501991 -223.01596069]
[18.81934738 -227.46720886]
[33.66892242 -225.34822083]
[46.17652512 -217.06813049]
[53.92753601 -204.22448730]
[51.05502319 -212.89549255]
[54.49405670 -219.43727112]
[55.16384125 -234.42231750]
[55.83362961 -249.40734863]
[56.50341415 -264.39239502]
[57.17319870 -279.37744141]
[57.84298325 -294.36245728]
[43.39528275 -298.64608765]
[30.40056419 -306.25857544]
[19.61199951 -316.75360107]
[11.65368366 -329.51806641]
[6.98453903 -343.80767822]
[5.87184715 -358.79040527]
[8.37595749 -373.59506226]
[14.34702969 -387.36178589]
[23.43398857 -399.29202271]
[35.10517120 -408.69497681]
[48.67942047 -415.02740479]
[63.36585617 -417.92517090]
[64.03564453 -432.91021729]
[64.70542908 -447.89526367]
[65.37521362 -462.88027954]
[51.27975464 -468.41174316]
[39.74569702 -478.22213745]
[32.02417374 -491.24737549]
[28.95275116 -506.07455444]
[30.86459541 -521.09533691]
[37.55232620 -534.68035889]
[48.29050827 -545.35601807]
[61.91434097 -551.96435547]
[76.94601440 -553.78851318]
[91.75501251 -550.63055420]
[104.73494720 -542.83312988]
[114.47787476 -531.24200439]
[119.92694092 -517.11450195]
[120.49107361 -501.98306274]
[116.10908508 -487.48904419]
[107.25629425 -475.20462036]
[94.89299011 -466.46234131]
[80.36025238 -462.21051025]
[79.69046783 -447.22546387]
[79.02068329 -432.24041748]
[78.35089874 -417.25540161]
[92.72023773 -413.05892944]
[105.67540741 -405.54071045]
[116.46115875 -395.13400269]
[124.44751740 -382.44061279]
[129.16658020 -368.19610596]
[130.33988953 -353.22708130]
[127.89494324 -338.40335083]
[121.96956635 -324.58728027]
[112.90419006 -312.58374023]
[101.22232819 -303.09304810]
[87.60028076 -296.67025757]
[72.82802582 -293.69268799]
[72.15823364 -278.70764160]
[71.48844910 -263.72259521]
[70.81866455 -248.73756409]
[70.14888000 -233.75251770]
[69.47909546 -218.76748657]
[68.92088318 -203.77787781]
[69.81369781 -188.80447388]
[72.03881836 -173.97042847]
[74.26393890 -159.13638306]
[76.48905182 -144.30233765]
[78.82453918 -129.48527527]
[81.27026367 -114.68599701]
[83.71599579 -99.88672638]
[93.36382294 -92.58974457]
[95.52251434 -80.28024292]
[88.49761963 -69.46295929]
[98.03729248 -58.02425766]
[92.43273163 -43.22900772]
[94.65784454 -28.39496422]
[96.88296509 -13.56092072]
[99.05448914 -11.78817844]
[100.65464783 -9.04845238]
[101.31161499 -5.55505848]
[100.73757935 -1.65185392]
[98.77156830 2.21967959]
[100.10980225 17.15986443]
[101.44803619 32.10004807]
[102.78627014 47.04023361]
[104.12450409 61.98041916]
[105.46273804 76.92060852]
[106.80097198 91.86078644]
[108.69426727 106.74082184]
[111.13999176 121.54009247]
[113.69582367 136.32075500]
[116.36162567 151.08197021]
[119.13723755 165.82293701]
[122.02250671 180.54281616]
[124.90777588 195.26271057]
[127.79305267 209.98260498]
[130.67832947 224.70249939]
[133.56359863 239.42239380]
[136.44886780 254.14227295]
[139.33413696 268.86218262]
[151.30297852 275.03967285]
[157.43902588 286.81079102]
[155.70085144 299.77462769]
[146.94512939 309.22802734]
[149.61091614 323.98925781]
[152.27671814 338.75045776]
[164.49436951 352.52764893]
[157.92073059 368.79888916]
[160.80599976 383.51879883]
[163.69126892 398.23867798]
[166.57653809 412.95858765]
[176.82383728 425.01275635]
[171.67913818 438.99066162]
[174.56440735 453.71054077]
[177.44967651 468.43041992]
[184.33078003 455.10186768]
[197.27197266 447.51733398]
[212.26332092 448.02694702]
[224.65956116 456.47283936]
[230.61961365 470.23794556]
[228.29666138 485.05697632]
[218.41052246 496.33813477]
[204.02450562 500.58578491]
[189.59628296 496.48376465]
[179.59648132 485.30291748]
[180.48930359 500.27633667]
[181.38212585 515.24975586]
[182.27493286 530.22314453]
[183.16775513 545.19653320]
[197.14555359 551.43194580]
[206.61544800 563.45605469]
[209.40132141 578.50585938]
[204.86302185 593.12304688]
[194.04339600 603.94873047]
[179.42872620 608.49511719]
[164.37734985 605.71759033]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 203]
[5 202]
[6 201]
[7 200]
[8 199]
[9 189]
[10 188]
[11 187]
[13 185]
[14 184]
[15 183]
[16 182]
[19 180]
[20 179]
[21 178]
[24 174]
[25 173]
[26 172]
[27 171]
[28 170]
[29 169]
[30 168]
[31 167]
[33 166]
[34 165]
[36 164]
[37 163]
[43 162]
[44 161]
[45 160]
[46 159]
[47 158]
[48 157]
[49 156]
[50 151]
[51 150]
[52 149]
[54 147]
[56 144]
[57 143]
[58 142]
[60 141]
[61 140]
[62 139]
[63 138]
[76 137]
[78 136]
[79 135]
[80 134]
[81 133]
[82 132]
[83 131]
[95 119]
[96 118]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
