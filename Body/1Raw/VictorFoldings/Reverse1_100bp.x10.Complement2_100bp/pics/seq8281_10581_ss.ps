%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[182.25053406 523.24591064]
[188.14822388 509.37817383]
[197.08555603 497.24472046]
[208.58053589 487.49987793]
[222.01325989 480.66915894]
[218.47358704 466.09277344]
[214.93391418 451.51638794]
[211.39424133 436.94003296]
[207.74615479 422.39041138]
[203.98985291 407.86834717]
[200.23355103 393.34628296]
[195.93943787 378.97406006]
[191.11343384 364.77160645]
[186.28742981 350.56915283]
[181.46144104 336.36669922]
[176.31947327 322.27557373]
[170.76025391 308.34375000]
[165.09747314 294.45373535]
[153.12792969 285.58923340]
[155.08285522 269.88928223]
[149.42005920 255.99925232]
[143.75727844 242.10922241]
[140.66661072 240.41212463]
[138.24441528 237.13371277]
[137.22492981 232.60447693]
[138.16708374 227.47033691]
[133.13017273 213.34129333]
[128.09326172 199.21226501]
[123.05634308 185.08323669]
[118.01942444 170.95420837]
[112.98250580 156.82518005]
[99.02094269 146.19308472]
[102.48903656 128.10845947]
[97.24231720 114.05598450]
[86.58087921 105.01024628]
[88.70520782 91.19073486]
[83.45848846 77.13826752]
[78.21177673 63.08579636]
[66.13618469 52.86372375]
[68.93296814 38.23405075]
[63.68625259 24.18157959]
[61.47835159 39.01819611]
[54.39009094 52.23774719]
[43.25419617 62.28722000]
[29.37889862 67.98600006]
[14.39425755 68.66461945]
[0.06065131 64.24333191]
[-11.93802166 55.24156570]
[-20.19216919 42.71682739]
[-23.73210335 28.14051628]
[-22.14195442 13.22504044]
[-15.60853291 -0.27734417]
[-4.89937782 -10.78039169]
[8.72740936 -17.05021286]
[23.67096710 -18.35023689]
[38.17574310 -14.52773857]
[50.53772736 -6.03177977]
[59.30533600 6.14095306]
[57.52286911 -8.75276470]
[55.74040222 -23.64648247]
[53.95793533 -38.54019928]
[52.17547226 -53.43391800]
[50.39300537 -68.32763672]
[48.61053848 -83.22135162]
[46.82807541 -98.11506653]
[42.70107269 -106.26403809]
[45.13164520 -113.24358368]
[43.57112122 -128.16218567]
[34.06119156 -136.87562561]
[33.06855774 -149.33349609]
[40.58166885 -158.81399536]
[39.24343491 -173.75418091]
[37.90520096 -188.69436646]
[36.56696701 -203.63455200]
[32.68441772 -211.90277100]
[35.32172012 -218.80686951]
[34.20607376 -233.76531982]
[33.09042358 -248.72377014]
[31.97477531 -263.68222046]
[23.23249626 -276.86871338]
[30.00175476 -290.13619995]
[28.33021355 -305.04275513]
[26.10509682 -319.87680054]
[23.87998009 -334.71084595]
[21.65486336 -349.54489136]
[6.62213230 -350.25430298]
[-7.98327780 -353.88311768]
[-21.59997559 -360.29183960]
[-33.70456696 -369.23416138]
[-43.83179092 -380.36633301]
[-51.59238052 -393.26049805]
[-56.68803787 -407.42102051]
[-58.92290115 -422.30361938]
[-58.21106720 -437.33624268]
[-54.57989883 -451.94107056]
[-48.16896439 -465.55673218]
[-39.22468948 -477.65988159]
[-28.09086227 -487.78527832]
[-15.19544125 -495.54379272]
[-1.03409028 -500.63714600]
[13.84886551 -502.86959839]
[28.88136482 -502.15533447]
[43.48559952 -498.52182007]
[57.10022354 -492.10867310]
[69.20191956 -483.16244507]
[79.32553864 -472.02697754]
[87.08195496 -459.13031006]
[92.17302704 -444.96810913]
[94.40306854 -430.08480835]
[93.68637085 -415.05242920]
[90.05047607 -400.44876099]
[83.63513184 -386.83520508]
[74.68694305 -374.73495483]
[63.54983902 -364.61312866]
[50.65190506 -356.85879517]
[36.48890686 -351.77001953]
[38.71402359 -336.93597412]
[40.93914032 -322.10192871]
[43.16425705 -307.26788330]
[54.04338837 -317.59475708]
[68.92057800 -315.67922974]
[76.82891083 -302.93331909]
[71.93865967 -288.75283813]
[57.85474014 -283.59115601]
[44.96020889 -291.25183105]
[53.62268829 -279.13528442]
[46.93322754 -264.79788208]
[48.04887772 -249.83941650]
[49.16452789 -234.88096619]
[50.28017426 -219.92251587]
[51.50714874 -204.97277832]
[52.84538269 -190.03259277]
[54.18362045 -175.09240723]
[55.52185440 -160.15222168]
[66.37607574 -146.36264038]
[58.48972702 -129.72271729]
[60.05025101 -114.80410767]
[61.72179031 -99.89753723]
[63.50425720 -85.00381470]
[65.28672028 -70.11009979]
[67.06919098 -55.21638107]
[68.85165405 -40.32266617]
[70.63411713 -25.42894745]
[72.41658783 -10.53523064]
[74.19905090 4.35848713]
[77.73872375 18.93486214]
[82.98544312 32.98733521]
[94.68575287 42.20428085]
[92.26424408 57.83907700]
[97.51096344 71.89154816]
[102.75768280 85.94401550]
[113.41912079 94.98975372]
[111.29479218 108.80926514]
[116.54151154 122.86173248]
[127.93044281 128.91606140]
[132.01115417 140.72840881]
[127.11153412 151.78826904]
[132.14845276 165.91729736]
[137.18536377 180.04632568]
[142.22229004 194.17535400]
[147.25920105 208.30438232]
[152.29611206 222.43341064]
[157.64730835 236.44644165]
[163.31008911 250.33645630]
[168.97286987 264.22650146]
[181.34745789 274.08450317]
[178.98748779 288.79095459]
[184.65028381 302.68096924]
[190.78785706 309.44619751]
[190.29228210 316.82022095]
[194.36866760 320.08059692]
[196.56698608 324.16967773]
[196.88604736 328.23333740]
[195.66389465 331.54071045]
[200.48989868 345.74316406]
[205.31588745 359.94561768]
[210.14189148 374.14807129]
[219.01254272 362.05215454]
[233.99333191 361.29324341]
[244.04096985 372.43078613]
[241.74871826 387.25460815]
[228.80633545 394.83712769]
[214.75561523 389.58999634]
[218.51191711 404.11203003]
[222.26821899 418.63409424]
[227.44692993 426.15863037]
[225.97062683 433.40036011]
[229.51029968 447.97671509]
[233.04995728 462.55310059]
[236.58963013 477.12948608]
[251.65908813 477.03881836]
[266.34310913 480.42645264]
[279.84982300 487.10971069]
[291.45080566 496.72811890]
[300.52044678 508.76300049]
[306.56961060 522.56530762]
[309.27212524 537.39074707]
[308.48217773 552.43975830]
[304.24240112 566.90075684]
[296.78146362 579.99395752]
[286.50170898 591.01318359]
[273.95748901 599.36419678]
[259.82531738 604.59661865]
[244.86732483 606.42834473]
[229.89016724 604.76049805]
[215.70155334 599.68310547]
[203.06666565 591.46990967]
[192.66685486 580.56390381]
[185.06300354 567.55322266]
[180.66517639 553.13946533]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 190]
[6 189]
[7 188]
[8 187]
[9 185]
[10 184]
[11 183]
[12 177]
[13 176]
[14 175]
[15 174]
[16 170]
[17 168]
[18 167]
[20 165]
[21 164]
[22 163]
[26 162]
[27 161]
[28 160]
[29 159]
[30 158]
[31 157]
[33 154]
[34 153]
[36 151]
[37 150]
[38 149]
[40 147]
[41 146]
[58 145]
[59 144]
[60 143]
[61 142]
[62 141]
[63 140]
[64 139]
[65 138]
[67 137]
[68 136]
[71 134]
[72 133]
[73 132]
[74 131]
[76 130]
[77 129]
[78 128]
[79 127]
[81 125]
[82 119]
[83 118]
[84 117]
[85 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
