%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[85.56505585 552.02429199]
[77.07791901 539.61987305]
[70.58386993 526.06524658]
[66.23513794 511.67813110]
[64.13366699 496.79580688]
[64.32872009 481.76705933]
[66.81571198 466.94427490]
[71.53636169 452.67486572]
[78.37999725 439.29336548]
[87.18620300 427.11340332]
[97.74853516 416.42053223]
[109.81941986 407.46539307]
[123.11587524 400.45794678]
[137.32623291 395.56237793]
[134.66043091 380.80117798]
[131.99462891 366.03994751]
[129.32884216 351.27874756]
[126.66304779 336.51751709]
[123.99725342 321.75631714]
[111.95606232 308.99008179]
[118.32642365 291.71292114]
[115.44114685 276.99301147]
[112.55587769 262.27313232]
[102.14871979 273.07550049]
[87.20083618 271.82617188]
[78.73125458 259.44607544]
[82.98343658 245.06140137]
[96.82283020 239.27597046]
[110.04656219 246.35325623]
[98.78658295 232.89295959]
[106.17400360 216.02560425]
[104.16999054 201.16007996]
[102.16597748 186.29454041]
[100.16196442 171.42901611]
[96.97454071 167.87242126]
[95.98751068 162.27574158]
[98.32642365 156.09181213]
[96.76589966 141.17320251]
[95.20537567 126.25460052]
[93.64485168 111.33599854]
[91.64083862 96.47046661]
[89.19511414 81.67119598]
[86.74938202 66.87192535]
[84.30365753 52.07265472]
[79.74086761 66.36184692]
[71.38495636 78.81892395]
[59.89490128 88.46146393]
[46.17685699 94.52902222]
[31.31268883 96.54308319]
[16.47464180 94.34481812]
[2.83291078 88.10757446]
[-8.53666306 78.32326508]
[-16.73742676 65.76350403]
[-21.12263298 51.41882324]
[-21.34644890 36.42049408]
[-17.39122009 21.95134735]
[-9.56887436 9.15248489]
[1.50368583 -0.96672535]
[14.95323277 -7.60823822]
[29.71907806 -10.24827766]
[44.63672638 -8.67863750]
[58.52970886 -3.02310729]
[70.30236816 6.27229452]
[79.02626038 18.47449303]
[84.01407623 32.62457657]
[86.01808929 17.75904846]
[88.02210236 2.89351964]
[90.02611542 -11.97200871]
[92.03012848 -26.83753586]
[90.07528687 -35.76034164]
[94.17623901 -41.90883636]
[96.40135193 -56.74288177]
[98.62647247 -71.57692719]
[100.85158539 -86.41097260]
[103.07670593 -101.24501038]
[102.74172974 -116.24127197]
[99.85645294 -130.96116638]
[96.97118378 -145.68106079]
[94.08590698 -160.40093994]
[91.20063782 -175.12083435]
[88.31536865 -189.84072876]
[76.38243103 -193.56536865]
[67.21858978 -201.96134949]
[62.52141190 -213.39009094]
[63.12554550 -225.65939331]
[68.85504913 -236.44390869]
[78.56841278 -243.72579956]
[76.12268829 -258.52505493]
[73.67695618 -273.32434082]
[58.66945267 -274.96060181]
[44.66035080 -280.58621216]
[32.68922424 -289.78375244]
[23.64441109 -301.87069702]
[18.19709206 -315.95007324]
[16.75149727 -330.97714233]
[19.41489983 -345.83679199]
[25.98965454 -359.42633057]
[35.98787689 -370.73730469]
[48.66762543 -378.93035889]
[63.08798218 -383.39758301]
[78.17886353 -383.80740356]
[92.82041931 -380.12942505]
[105.92615509 -372.63662720]
[116.52352905 -361.88494873]
[123.82615662 -348.67230225]
[127.29212952 -333.97912598]
[126.66425323 -318.89575195]
[121.98911285 -304.54147339]
[113.61363983 -291.98144531]
[102.15935516 -282.14773560]
[88.47622681 -275.77005005]
[90.92195892 -260.97079468]
[93.36768341 -246.17152405]
[109.50689697 -239.00231934]
[118.18817139 -223.44319153]
[115.77065277 -205.63209534]
[103.03525543 -192.72599792]
[105.92053223 -178.00610352]
[108.80580139 -163.28622437]
[111.69107819 -148.56632996]
[114.57634735 -133.84643555]
[117.46161652 -119.12654114]
[121.43618011 -133.59039307]
[128.83847046 -146.63668823]
[139.21585083 -157.46766663]
[151.93374634 -165.42098999]
[166.21443176 -170.01029968]
[181.18466187 -170.95498657]
[195.92898560 -168.19726562]
[209.54577637 -161.90577698]
[221.20237732 -152.46524048]
[230.18597412 -140.45295715]
[235.94721985 -126.60348511]
[238.13381958 -111.76371002]
[236.61204529 -96.84110260]
[231.47496033 -82.74818420]
[223.03669739 -70.34674072]
[211.81327820 -60.39512253]
[198.49099731 -53.50187683]
[183.88452148 -50.08853149]
[168.88703918 -50.36381149]
[154.41567993 -54.31088257]
[141.35533142 -61.68837738]
[130.50466919 -72.04516602]
[122.52719879 -84.74792480]
[117.91075134 -99.01989746]
[115.68563080 -84.18585205]
[113.46051025 -69.35180664]
[111.23539734 -54.51776505]
[109.01027679 -39.68371964]
[106.89565277 -24.83352280]
[104.89163971 -9.96799469]
[102.88762665 4.89753342]
[100.88361359 19.76306152]
[98.87960052 34.62858963]
[99.10292816 49.62692642]
[101.54865265 64.42620087]
[103.99438477 79.22547150]
[106.44010925 94.02474213]
[108.75848389 96.00328827]
[110.40818024 98.86912537]
[111.05918121 102.37621307]
[110.47697449 106.16003418]
[108.56346130 109.77547455]
[110.12397766 124.69407654]
[111.68450165 139.61268616]
[113.24502563 154.53128052]
[115.02749634 169.42500305]
[117.03150940 184.29052734]
[119.03552246 199.15606689]
[121.03953552 214.02159119]
[130.80467224 222.44801331]
[132.16778564 234.87080383]
[124.94028473 244.57078552]
[127.27577209 259.38784790]
[130.16104126 274.10775757]
[133.04631042 288.82763672]
[143.29570007 296.65789795]
[145.39581299 308.97753906]
[138.75846863 319.09051514]
[141.42425537 333.85171509]
[144.09005737 348.61294556]
[146.75585938 363.37417603]
[149.42164612 378.13537598]
[152.08744812 392.89660645]
[167.11251831 392.51239014]
[182.02014160 394.42633057]
[196.46084595 398.59362793]
[210.09614563 404.91653442]
[222.60639954 413.24685669]
[233.69833374 423.38931274]
[243.11195374 435.10614014]
[250.62658691 448.12268066]
[256.06607056 462.13385010]
[259.30291748 476.81115723]
[260.26123047 491.81054688]
[258.91854858 506.78045654]
[255.30636597 521.36993408]
[249.50932312 535.23693848]
[241.66334534 548.05651855]
[231.95231628 559.52807617]
[220.60391235 569.38269043]
[207.88414001 577.38946533]
[194.09117126 583.36059570]
[179.54833984 587.15612793]
[164.59654236 588.68713379]
[149.58625793 587.91772461]
[134.86936951 584.86590576]
[120.79085541 579.60321045]
[107.68073273 572.25305176]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 185]
[15 184]
[16 183]
[17 182]
[18 181]
[19 180]
[21 177]
[22 176]
[23 175]
[29 174]
[31 171]
[32 170]
[33 169]
[34 168]
[37 167]
[38 166]
[39 165]
[40 164]
[41 159]
[42 158]
[43 157]
[44 156]
[65 155]
[66 154]
[67 153]
[68 152]
[69 151]
[71 150]
[72 149]
[73 148]
[74 147]
[75 146]
[76 122]
[77 121]
[78 120]
[79 119]
[80 118]
[81 117]
[87 113]
[88 112]
[89 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
