%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[59.37638092 793.77777100]
[44.41290283 794.90875244]
[29.40698624 794.99316406]
[14.43173218 794.03063965]
[-0.43989709 792.02581787]
[-15.13544846 788.98846436]
[-29.58332634 784.93334961]
[-43.71314240 779.88037109]
[-57.45605469 773.85400391]
[-70.74510956 766.88366699]
[-83.51556396 759.00329590]
[-95.70520020 750.25128174]
[-107.25463104 740.67028809]
[-118.10758972 730.30694580]
[-128.21119690 719.21185303]
[-137.51623535 707.43896484]
[-145.97737122 695.04565430]
[-153.55337524 682.09234619]
[-160.20733643 668.64202881]
[-165.90684509 654.76037598]
[-170.62413025 640.51501465]
[-174.33621216 625.97521973]
[-177.02499390 611.21191406]
[-178.67739868 596.29699707]
[-179.28535461 581.30316162]
[-178.84591675 566.30346680]
[-177.36120605 551.37091064]
[-174.83847046 536.57830811]
[-171.28999329 521.99774170]
[-166.73307800 507.70022583]
[-161.18989563 493.75543213]
[-154.68748474 480.23123169]
[-147.25750732 467.19360352]
[-138.93615723 454.70599365]
[-129.76399231 442.82931519]
[-119.78569031 431.62136841]
[-109.04986572 421.13674927]
[-97.60881042 411.42660522]
[-85.51828766 402.53817749]
[-72.83718109 394.51483154]
[-59.62728882 387.39559937]
[-45.95295715 381.21520996]
[-31.88081169 376.00372314]
[-17.47941017 371.78659058]
[-2.81891441 368.58428955]
[12.02924919 366.41247559]
[26.99274254 365.28173828]
[41.99866104 365.19750977]
[56.97389984 366.16030884]
[58.97791672 351.29476929]
[60.87120819 336.41473389]
[62.65367508 321.52102661]
[64.43614197 306.62728882]
[66.21860504 291.73358154]
[68.00106812 276.83987427]
[69.78353882 261.94613647]
[71.56600189 247.05242920]
[73.34846497 232.15870667]
[75.13093567 217.26499939]
[63.98416138 227.30239868]
[49.07889557 228.98556519]
[35.97443390 221.68672180]
[29.55841827 208.12815857]
[32.22386169 193.36686707]
[42.97661972 182.90846252]
[57.80618286 180.65367126]
[71.18148804 187.44346619]
[78.11407471 200.74656677]
[81.65374756 186.17019653]
[85.19342041 171.59381104]
[88.73308563 157.01744080]
[92.27275848 142.44107056]
[93.72218323 127.51126099]
[93.05239868 112.52622223]
[85.69034576 100.63959503]
[91.96256256 88.14356232]
[91.29277802 73.15852356]
[80.37274933 65.27388763]
[76.05072784 52.72277069]
[79.69273376 40.16020966]
[89.75392151 32.11024094]
[89.30731201 17.11689186]
[88.86071014 2.12354112]
[87.96788788 -12.84986496]
[86.62965393 -27.79005051]
[85.29141998 -42.73023605]
[83.95318604 -57.67042160]
[82.50376892 -72.60022736]
[80.94324493 -87.51883698]
[79.38272095 -102.43743896]
[77.82220459 -117.35604095]
[62.93869400 -119.88265991]
[49.28927612 -126.33215332]
[37.88682175 -136.22592163]
[29.57746887 -148.82977295]
[24.97782898 -163.20843506]
[24.42922401 -178.29490662]
[27.97236443 -192.96968079]
[35.34432602 -206.14376831]
[45.99806213 -216.83958435]
[59.14299011 -224.26342773]
[73.80367279 -227.86439514]
[88.89218903 -227.37527466]
[103.28887177 -222.83235168]
[115.92539215 -214.57275391]
[125.86402893 -203.20938110]
[132.36727905 -189.58549500]
[134.95256042 -174.71206665]
[133.42800903 -159.69279480]
[127.90677643 -145.64222717]
[118.79856873 -133.60299683]
[106.77927399 -124.46849823]
[92.74080658 -118.91656494]
[94.30133057 -103.99796295]
[95.86185455 -89.07935333]
[97.42237854 -74.16075134]
[101.24468994 -67.83526611]
[98.89337158 -59.00865555]
[100.23160553 -44.06847000]
[101.56983948 -29.12828445]
[102.90807343 -14.18809891]
[104.97023773 -12.28924751]
[106.40448761 -9.45913601]
[106.85236359 -5.93283272]
[106.04701996 -2.07071543]
[103.85405731 1.67693508]
[104.30066681 16.67028427]
[104.74726868 31.66363525]
[117.46965027 42.66271591]
[118.31727600 59.79737091]
[106.27781677 72.48873901]
[106.94760132 87.47377777]
[114.30965424 99.36040497]
[108.03743744 111.85643768]
[108.70722198 126.84147644]
[115.01530457 113.23236084]
[125.00981140 102.04710388]
[137.82609558 94.25334167]
[152.35543823 90.52532196]
[167.34091187 91.18554688]
[181.48609924 96.17689514]
[193.56730652 105.06758118]
[202.53941345 117.08845520]
[207.62620544 131.19960022]
[208.38764954 146.18026733]
[204.75787354 160.73446655]
[197.05087280 173.60311890]
[185.93339539 183.67294312]
[172.36720276 190.07283020]
[157.52590942 192.24909973]
[142.69345093 190.01350403]
[129.15295410 183.55941772]
[118.07583618 173.44520569]
[110.42036438 160.54583740]
[106.84913635 145.98074341]
[103.30946350 160.55711365]
[99.76979065 175.13348389]
[96.23011780 189.70986938]
[92.69044495 204.28623962]
[90.02465057 219.04745483]
[88.24218750 233.94117737]
[86.45971680 248.83489990]
[84.67725372 263.72860718]
[82.89479065 278.62231445]
[81.11231995 293.51605225]
[79.32985687 308.40975952]
[77.54739380 323.30346680]
[75.76492310 338.19720459]
[77.85239410 347.08990479]
[73.84344482 353.29876709]
[71.83943176 368.16430664]
[86.53502655 371.20144653]
[100.98296356 375.25631714]
[115.11284637 380.30911255]
[128.85585022 386.33529663]
[142.14500427 393.30545044]
[154.91557312 401.18563843]
[167.10533142 409.93746948]
[178.65489197 419.51828003]
[189.50801086 429.88143921]
[199.61177063 440.97640991]
[208.91697693 452.74917603]
[217.37829590 465.14236450]
[224.95448303 478.09558105]
[231.60864258 491.54574585]
[237.30834961 505.42733765]
[242.02583313 519.67266846]
[245.73812866 534.21240234]
[248.42712402 548.97564697]
[250.07972717 563.89056396]
[250.68791199 578.88439941]
[250.24867249 593.88409424]
[248.76419067 608.81665039]
[246.24165344 623.60925293]
[242.69338989 638.18988037]
[238.13667297 652.48748779]
[232.59370422 666.43237305]
[226.09147644 679.95666504]
[218.66169739 692.99438477]
[210.34053040 705.48211670]
[201.16853333 717.35894775]
[191.19038391 728.56701660]
[180.45471191 739.05175781]
[169.01379395 748.76208496]
[156.92340088 757.65069580]
[144.24241638 765.67425537]
[131.03262329 772.79364014]
[117.35837555 778.97424316]
[103.28630829 784.18591309]
[88.88496399 788.40325928]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 171]
[50 170]
[51 168]
[52 167]
[53 166]
[54 165]
[55 164]
[56 163]
[57 162]
[58 161]
[59 160]
[68 159]
[69 158]
[70 157]
[71 156]
[72 155]
[73 135]
[74 134]
[76 132]
[77 131]
[81 128]
[82 127]
[83 126]
[84 121]
[85 120]
[86 119]
[87 118]
[88 116]
[89 115]
[90 114]
[91 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
