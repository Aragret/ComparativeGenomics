%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[170.55755615 380.37899780]
[167.45344543 365.70370483]
[164.34933472 351.02841187]
[161.24522400 336.35308838]
[158.14111328 321.67779541]
[154.49302673 307.12817383]
[150.30601501 292.72439575]
[146.11900330 278.32061768]
[135.13662720 268.25897217]
[138.71427917 252.84757996]
[134.52728271 238.44378662]
[130.23315430 224.07157898]
[125.83215332 209.73173523]
[114.70119476 199.83471680]
[118.04900360 184.37176514]
[106.91804504 174.47474670]
[110.26585388 159.01179504]
[105.86486053 144.67195129]
[101.46385956 130.33210754]
[97.06285858 115.99225616]
[84.49179840 104.88619232]
[88.42597961 88.57979584]
[83.81196594 74.30706024]
[79.19795990 60.03432846]
[74.58395386 45.76159668]
[68.92116547 31.87156868]
[62.24097061 18.44119263]
[55.56077576 5.01081610]
[48.88058090 -8.41955948]
[42.20038605 -21.84993553]
[29.70713043 -22.28169632]
[18.64711189 -27.95130157]
[11.09121418 -37.72821045]
[8.42478943 -49.71950912]
[11.09394836 -61.63624191]
[18.53227234 -71.23033142]
[12.25491238 -84.85364532]
[5.97755146 -98.47696686]
[-0.45598182 -104.96136475]
[-0.29016739 -112.35015869]
[-6.36400127 -126.06542969]
[-12.43783569 -139.78070068]
[-13.06730556 -124.79390717]
[-16.66027832 -110.23058319]
[-23.07364655 -96.67076111]
[-32.05196762 -84.65453339]
[-43.23764038 -74.66049957]
[-56.18514252 -67.08671570]
[-70.37878418 -62.23484802]
[-85.25322723 -60.29813766]
[-100.21604156 -61.35372925]
[-114.67125702 -65.35957336]
[-128.04312134 -72.15612793]
[-139.79905701 -81.47267151]
[-149.47080994 -92.93814850]
[-156.67317200 -106.09588623]
[-161.11926270 -120.42181396]
[-162.63200378 -135.34533691]
[-161.15115356 -150.27206421]
[-156.73567200 -164.60746765]
[-149.56144714 -177.78054810]
[-139.91421509 -189.26666260]
[-128.17820740 -198.60832214]
[-114.82089233 -205.43342590]
[-100.37427521 -209.47013855]
[-85.41374969 -210.55770874]
[-70.53520203 -208.65277100]
[-56.33123016 -203.83125305]
[-43.36757278 -196.28514099]
[-32.16057205 -186.31503296]
[-23.15659714 -174.31800842]
[-16.71568108 -160.77586365]
[-16.49235344 -175.77420044]
[-16.26902580 -190.77253723]
[-16.04569817 -205.77087402]
[-15.82236958 -220.76921082]
[-15.59904194 -235.76754761]
[-15.37571430 -250.76588440]
[-15.15238667 -265.76422119]
[-14.92905903 -280.76257324]
[-15.04072571 -295.76214600]
[-15.48733139 -310.75549316]
[-15.93393707 -325.74884033]
[-30.86427307 -327.44174194]
[-45.40169525 -331.24227905]
[-59.25024033 -337.07308960]
[-72.12796783 -344.81552124]
[-83.77271271 -354.31185913]
[-93.94738770 -365.36883545]
[-102.44486237 -377.76132202]
[-109.09214020 -391.23703003]
[-113.75387573 -405.52160645]
[-116.33518219 -420.32421875]
[-116.78348541 -435.34353638]
[-115.08967590 -450.27377319]
[-111.28823853 -464.81094360]
[-105.45655060 -478.65911865]
[-97.71334839 -491.53637695]
[-88.21627045 -503.18054199]
[-77.15866852 -513.35455322]
[-64.76565552 -521.85125732]
[-51.28954697 -528.49768066]
[-37.00468826 -533.15850830]
[-22.20190430 -535.73889160]
[-7.18256378 -536.18627930]
[7.74756145 -534.49157715]
[22.28451347 -530.68920898]
[36.13233566 -524.85668945]
[49.00910950 -517.11267090]
[60.65267181 -507.61486816]
[70.82598114 -496.55664062]
[79.32192230 -484.16311646]
[85.96752930 -470.68658447]
[90.62750244 -456.40142822]
[93.20697021 -441.59851074]
[93.65341949 -426.57913208]
[91.95776367 -411.64910889]
[88.15452576 -397.11239624]
[82.32112122 -383.26492310]
[74.57632446 -370.38864136]
[65.07781219 -358.74566650]
[54.01894760 -348.57302856]
[41.62488556 -340.07785034]
[28.14794922 -333.43310547]
[13.86251450 -328.77401733]
[-0.94058746 -326.19546509]
[-0.49398154 -311.20208740]
[-0.04737561 -296.20874023]
[2.25443625 -293.53778076]
[3.37690592 -289.61923218]
[2.74774456 -285.01950073]
[0.06927878 -280.53924561]
[-0.15404893 -265.54089355]
[-0.37737665 -250.54255676]
[-0.60070437 -235.54421997]
[-0.82403207 -220.54588318]
[-1.04735982 -205.54754639]
[-1.27068758 -190.54920959]
[-1.49401522 -175.55087280]
[-1.71734297 -160.55253601]
[1.27743137 -145.85452271]
[7.35126543 -132.13926697]
[13.42509937 -118.42399597]
[19.60086823 -104.75432587]
[25.87822914 -91.13101196]
[32.15559006 -77.50769043]
[49.61710739 -74.86818695]
[62.10863495 -62.16336060]
[64.49390411 -44.34791946]
[55.63076019 -28.53013039]
[62.31095505 -15.09975433]
[68.99114990 -1.66937840]
[75.67134857 11.76099777]
[82.35153961 25.19137383]
[84.88105774 10.40619469]
[94.38803864 -1.19628084]
[108.38735962 -6.58319283]
[123.21965027 -4.34641600]
[135.00778198 4.92936134]
[140.67036438 18.81947327]
[138.72720337 33.69308090]
[129.68624878 45.66225433]
[115.91077423 51.59828186]
[101.00166321 49.94950104]
[88.85668182 41.14758682]
[93.47069550 55.42031860]
[98.08470154 69.69305420]
[102.69870758 83.96578979]
[112.72956848 89.88381958]
[116.22944641 100.99201965]
[111.40270996 111.59125519]
[115.80371094 125.93110657]
[120.20470428 140.27095032]
[124.60570526 154.61079407]
[136.05145264 165.53350830]
[132.38885498 179.97076416]
[143.83459473 190.89346313]
[140.17199707 205.33073425]
[144.57299805 219.67057800]
[150.08253479 226.95637512]
[148.93106079 234.25677490]
[153.11807251 248.66056824]
[164.39993286 259.75247192]
[160.52278137 274.13360596]
[164.70979309 288.53738403]
[168.89680481 302.94116211]
[178.29872131 291.25338745]
[193.29846191 291.16415405]
[202.83876038 302.73925781]
[199.88687134 317.44592285]
[186.61882019 324.44299316]
[172.81640625 318.57366943]
[175.92051697 333.24899292]
[179.02462769 347.92428589]
[182.12873840 362.59957886]
[185.23284912 377.27490234]
[200.21864319 379.68130493]
[213.32119751 387.34204102]
[222.76852417 399.22113037]
[227.28294373 413.71197510]
[226.25390625 428.85479736]
[219.82060242 442.60171509]
[208.85307312 453.09347534]
[194.83457947 458.91125488]
[179.66101074 459.26815796]
[165.38447571 454.11599731]
[153.93576050 444.15148926]
[146.86318970 430.72229004]
[145.12329102 415.64459229]
[148.95135498 400.95751953]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 196]
[2 195]
[3 194]
[4 193]
[5 192]
[6 186]
[7 185]
[8 184]
[10 182]
[11 181]
[12 179]
[13 178]
[15 176]
[17 174]
[18 173]
[19 172]
[20 171]
[22 168]
[23 167]
[24 166]
[25 165]
[26 154]
[27 153]
[28 152]
[29 151]
[30 150]
[36 146]
[37 145]
[38 144]
[40 143]
[41 142]
[42 141]
[72 140]
[73 139]
[74 138]
[75 137]
[76 136]
[77 135]
[78 134]
[79 133]
[80 132]
[81 128]
[82 127]
[83 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
