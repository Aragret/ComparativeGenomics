%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGAUUCGUAUCACAAUCUCAAACCUAAUCACCCGAUAAAAGACGAUCCCCCACCUUCGCCUACUCAUUCUUCUAAGGACGAUGUUGAUAUCACGAACxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[-25.48227882 359.99426270]
[-21.19831657 374.38745117]
[-18.61430931 389.18069458]
[-17.76519775 404.17385864]
[-18.66246605 419.16424561]
[-21.29398155 433.94909668]
[-25.62415504 448.32846069]
[-31.59442520 462.10787964]
[-39.12405396 475.10101318]
[-48.11120605 487.13211060]
[-58.43434525 498.03848267]
[-69.95386505 507.67266846]
[-82.51396942 515.90435791]
[-95.94480133 522.62219238]
[-110.06472015 527.73529053]
[-124.68277740 531.17462158]
[-139.60127258 532.89361572]
[-154.61846924 532.86895752]
[-169.53125000 531.10107422]
[-184.13795471 527.61389160]
[-198.24102783 522.45446777]
[-211.64976501 515.69262695]
[-224.18281555 507.41979980]
[-235.67066956 497.74792480]
[-245.95799255 486.80773926]
[-254.90565491 474.74722290]
[-262.39263916 461.72949219]
[-268.31768799 447.93057251]
[-272.60067749 433.53707886]
[-275.18371582 418.74368286]
[-276.03182983 403.75042725]
[-275.13354492 388.76013184]
[-272.50103760 373.97546387]
[-268.16992188 359.59637451]
[-262.19873047 345.81735229]
[-254.66822815 332.82473755]
[-245.68028259 320.79421997]
[-235.35641479 309.88851929]
[-223.83624268 300.25512695]
[-211.27558899 292.02429199]
[-197.84431458 285.30737305]
[-183.72404480 280.19515991]
[-169.10575867 276.75680542]
[-154.18714905 275.03884888]
[-139.16996765 275.06445312]
[-124.25729370 276.83334351]
[-109.65082550 280.32153320]
[-95.54808807 285.48190308]
[-82.13980865 292.24462891]
[-69.60731506 300.51828003]
[-59.94650650 289.04357910]
[-50.28569412 277.56887817]
[-40.62488556 266.09417725]
[-30.96407509 254.61947632]
[-21.30326462 243.14477539]
[-28.24925232 226.40788269]
[-25.72574615 208.37748718]
[-14.34580040 194.05734253]
[2.80768728 187.46575928]
[21.01675034 190.50828552]
[22.63539696 175.70190430]
[37.17868805 169.47267151]
[46.31749344 157.57804871]
[55.45629501 145.68341064]
[57.07493973 130.87701416]
[71.61823273 124.64779663]
[80.75703430 112.75316620]
[89.89583588 100.85853577]
[91.91921234 93.05606842]
[99.26031494 88.85618591]
[108.57520294 77.09893036]
[117.89008331 65.34168243]
[117.18302155 52.46290207]
[125.18345642 42.86202621]
[137.18347168 41.33678055]
[146.67236328 29.71951866]
[156.16125488 18.10225487]
[165.65016174 6.48499250]
[167.08703613 0.03155054]
[170.98255920 -4.10632229]
[175.59864807 -5.33139038]
[185.42921448 -16.66098404]
[170.51058960 -18.22121239]
[162.30055237 -30.77490807]
[166.85124207 -45.06795502]
[180.80807495 -50.56404877]
[193.88256836 -43.21167374]
[196.43716431 -28.43232155]
[207.08316040 -38.99936676]
[217.72917175 -49.56641769]
[228.37518311 -60.13346481]
[239.02119446 -70.70050812]
[249.66720581 -81.26756287]
[260.15469360 -91.99193573]
[270.48138428 -102.87127686]
[280.80804443 -113.75061035]
[291.13470459 -124.62994385]
[301.46136475 -135.50927734]
[291.58914185 -146.81738281]
[282.81921387 -159.00027466]
[275.22863770 -171.95086670]
[268.88415527 -185.55534363]
[263.84149170 -199.69416809]
[260.14501953 -214.24305725]
[257.82714844 -229.07417297]
[256.90829468 -244.05717468]
[257.39654541 -259.06036377]
[259.28756714 -273.95193481]
[262.56475830 -288.60098267]
[267.19934082 -302.87875366]
[273.15054321 -316.65982056]
[280.36611938 -329.82302856]
[288.78259277 -342.25271606]
[298.32604980 -353.83966064]
[308.91259766 -364.48199463]
[320.44918823 -374.08624268]
[332.83447266 -382.56793213]
[345.95956421 -389.85260010]
[359.70916748 -395.87615967]
[373.96240234 -400.58572388]
[388.59399414 -403.93988037]
[403.47540283 -405.90914917]
[418.47583008 -406.47625732]
[433.46347046 -405.63616943]
[448.30654907 -403.39630127]
[462.87469482 -399.77633667]
[477.03982544 -394.80807495]
[490.67745972 -388.53518677]
[503.66778564 -381.01281738]
[515.89660645 -372.30703735]
[527.25640869 -362.49438477]
[537.64746094 -351.66107178]
[546.97845459 -339.90234375]
[555.16723633 -327.32147217]
[562.14196777 -314.02908325]
[567.84130859 -300.14196777]
[572.21520996 -285.78219604]
[575.22515869 -271.07589722]
[576.84478760 -256.15240479]
[577.05981445 -241.14279175]
[575.86834717 -226.17900085]
[573.28088379 -211.39253235]
[569.32012939 -196.91334534]
[564.02093506 -182.86866760]
[557.42980957 -169.38194275]
[549.60473633 -156.57168579]
[540.61450195 -144.55047607]
[530.53802490 -133.42395020]
[519.46392822 -123.28991699]
[507.48950195 -114.23741150]
[494.72000122 -106.34600830]
[481.26763916 -99.68503571]
[467.25064087 -94.31305695]
[452.79217529 -90.27725983]
[438.01934814 -87.61312866]
[423.06195068 -86.34407043]
[408.05142212 -86.48123932]
[393.11972046 -88.02342224]
[378.39801025 -90.95707703]
[364.01574707 -95.25641632]
[350.09924316 -100.88365173]
[336.77084351 -107.78934479]
[324.14770508 -115.91278839]
[312.34069824 -125.18260956]
[302.01403809 -114.30327606]
[291.68737793 -103.42394257]
[281.36071777 -92.54460144]
[271.03402710 -81.66526794]
[270.26074219 -76.95240784]
[266.51864624 -72.67529297]
[260.23425293 -70.62155151]
[249.58824158 -60.05450439]
[238.94223022 -49.48745346]
[228.29621887 -38.92040634]
[217.65022278 -28.35335922]
[207.00421143 -17.78631210]
[196.75881958 -6.83040237]
[186.92823792 4.49919081]
[177.26742554 15.97389030]
[167.77851868 27.59115410]
[158.28962708 39.20841599]
[148.80073547 50.82567978]
[146.91983032 68.27357483]
[129.64733887 74.65656281]
[120.33245087 86.41381073]
[111.01757050 98.17106628]
[101.79046631 109.99733734]
[92.65166473 121.89196777]
[83.51286316 133.78660583]
[81.24055481 149.44377136]
[67.35092926 154.82221985]
[58.21212387 166.71684265]
[49.07332230 178.61148071]
[46.80101013 194.26866150]
[32.91138458 199.64709473]
[38.88868713 210.07398987]
[40.99393463 221.87167358]
[39.00351715 233.65419006]
[33.17358398 244.04530334]
[24.20735168 251.83932495]
[13.17036343 256.14093018]
[1.36387110 256.46801758]
[-9.82856464 252.80558777]
[-19.48937416 264.28027344]
[-29.15018463 275.75497437]
[-38.81099701 287.22967529]
[-48.47180557 298.70437622]
[-58.13261795 310.17907715]
[-47.84456635 321.11859131]
[-38.89610672 333.17849731]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 208]
[51 207]
[52 206]
[53 205]
[54 204]
[55 203]
[60 195]
[62 193]
[63 192]
[64 191]
[66 189]
[67 188]
[68 187]
[70 186]
[71 185]
[72 184]
[75 182]
[76 181]
[77 180]
[78 179]
[81 178]
[82 177]
[88 176]
[89 175]
[90 174]
[91 173]
[92 172]
[93 171]
[94 168]
[95 167]
[96 166]
[97 165]
[98 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
