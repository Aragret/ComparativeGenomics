%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGAUAAUACUCAGGAUCAACUGAACUUCACCUCUUCCGAUGCUAAAAAAACUACAGUAAAACACAUUCCCGCGUCUGACGACGCUUGUCUCACCACUAUxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[139.80131531 529.97644043]
[140.06196594 514.94873047]
[142.61364746 500.13693237]
[147.39653015 485.88827515]
[154.29852295 472.53677368]
[163.15780640 460.39535522]
[173.76672363 449.74871826]
[185.87657166 440.84634399]
[199.20349121 433.89700317]
[194.37750244 419.69454956]
[189.55149841 405.49209595]
[184.72550964 391.28964233]
[179.59713745 385.96783447]
[179.93508911 376.83966064]
[175.32107544 362.56692505]
[161.68226624 351.52383423]
[165.68727112 333.55047607]
[160.86126709 319.34802246]
[156.03527832 305.14556885]
[151.20927429 290.94311523]
[136.90380859 291.83786011]
[122.84320831 288.99273682]
[109.98926544 282.59591675]
[99.22285461 273.07873535]
[91.28363800 261.08666992]
[86.71920013 247.43545532]
[85.84731293 233.05563354]
[88.73382568 218.92915344]
[95.18771362 206.02230835]
[104.77370453 195.21960449]
[116.84166718 187.26318359]
[112.22766113 172.99046326]
[107.61364746 158.71772766]
[102.99964142 144.44499207]
[98.38562775 130.17225647]
[94.14836121 144.56134033]
[83.77599335 155.39709473]
[69.58572388 160.25881958]
[54.74770355 158.06036377]
[42.57678604 149.29289246]
[35.79198074 135.91505432]
[35.90903091 120.91551208]
[42.90179062 107.64519501]
[55.20805740 99.06872559]
[70.07858276 97.10211182]
[84.19124603 102.18470001]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[88.54757690 74.21002960]
[78.84874725 61.71030045]
[84.61246490 47.97608185]
[82.38735199 33.14203644]
[80.16223145 18.30799294]
[77.93711853 3.47394943]
[72.06752777 17.27785873]
[61.14652634 27.56045151]
[47.01449203 32.58892822]
[32.05291748 31.51590538]
[18.78309822 24.52220345]
[9.44122791 12.78638554]
[5.60157442 -1.71385849]
[7.91118860 -16.53498077]
[15.98085976 -29.17936325]
[28.45070648 -37.51620483]
[43.21934128 -40.14060211]
[57.79798508 -36.61029816]
[69.72988892 -27.52020645]
[77.00479889 -14.40058994]
[77.67458344 -29.38562965]
[78.34436798 -44.37066650]
[79.01415253 -59.35570526]
[79.68393707 -74.34074402]
[72.57056427 -88.47264099]
[80.86845398 -100.84172821]
[81.53823853 -115.82676697]
[82.20802307 -130.81181335]
[68.48969269 -137.29895020]
[58.32753754 -148.51383972]
[53.24704361 -162.72659302]
[53.99306488 -177.76092529]
[60.42082596 -191.32737732]
[71.52268982 -201.37197876]
[85.58600616 -206.38717651]
[86.25579834 -221.37222290]
[86.92558289 -236.35725403]
[87.59536743 -251.34230042]
[79.48321533 -261.37005615]
[80.34957886 -273.83734131]
[89.18590546 -282.09841919]
[90.07872772 -297.07183838]
[90.97154236 -312.04522705]
[91.86435699 -327.01864624]
[92.75717163 -341.99206543]
[93.64998627 -356.96545410]
[94.54280090 -371.93887329]
[80.22335815 -376.69448853]
[67.62320709 -384.99499512]
[57.60145950 -396.27450562]
[50.84140778 -409.76388550]
[47.80396652 -424.54348755]
[48.69623566 -439.60556030]
[53.45737457 -453.92318726]
[61.76276016 -466.52011108]
[73.04611969 -476.53750610]
[86.53813934 -483.29235840]
[101.31890106 -486.32409668]
[116.38063812 -485.42602539]
[130.69641113 -480.65933228]
[143.29014587 -472.34909058]
[153.30317688 -461.06185913]
[160.05281067 -447.56723022]
[163.07884216 -432.78530884]
[162.17494202 -417.72390747]
[157.40274048 -403.41000366]
[149.08763123 -390.81945801]
[137.79653931 -380.81079102]
[124.29930878 -374.06637573]
[109.51621246 -371.04605103]
[108.62339020 -356.07263184]
[107.73057556 -341.09924316]
[106.83776093 -326.12582397]
[105.94494629 -311.15243530]
[105.05213165 -296.17901611]
[104.15931702 -281.20562744]
[112.84788513 -265.95846558]
[102.58040619 -250.67251587]
[101.91062164 -235.68746948]
[101.24083710 -220.70243835]
[100.57104492 -205.71739197]
[114.13085938 -199.46752930]
[124.29231262 -188.47251892]
[129.48410034 -174.38670349]
[128.88584900 -159.34576416]
[122.55761719 -145.64295959]
[111.43544769 -135.37940979]
[97.19306183 -130.14202881]
[96.52327728 -115.15698242]
[95.85349274 -100.17194366]
[103.01477051 -87.11187744]
[94.66897583 -73.67095947]
[93.99919128 -58.68592072]
[93.32940674 -43.70088196]
[92.65962219 -28.71584320]
[91.98983765 -13.73080540]
[92.77116394 1.24883235]
[94.99627686 16.08287621]
[97.22139740 30.91691971]
[99.44651031 45.75096512]
[108.98619080 57.18966293]
[103.38162231 71.98491669]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[112.65836334 125.55825043]
[117.27237701 139.83097839]
[121.88638306 154.10371399]
[126.50038910 168.37644958]
[131.11439514 182.64918518]
[146.83395386 182.16473389]
[162.04017639 186.12120056]
[175.50532532 194.19065857]
[186.14460754 205.71351624]
[193.10360718 219.75230408]
[195.82684326 235.16802979]
[194.10212708 250.71252441]
[188.07705688 265.12954712]
[178.24645996 277.25625610]
[165.41172791 286.11712646]
[170.23773193 300.31958008]
[175.06372070 314.52203369]
[179.88972473 328.72448730]
[191.09335327 335.11523438]
[194.82055664 347.04385376]
[189.59381104 357.95291138]
[194.20782471 372.22564697]
[198.92796326 386.46362305]
[203.75395203 400.66607666]
[208.57995605 414.86853027]
[213.40596008 429.07098389]
[228.20779419 426.46218872]
[243.23440552 426.14358521]
[258.13351440 428.12258911]
[272.55590820 432.35287476]
[286.16348267 438.73522949]
[298.63723755 447.12008667]
[309.68478394 457.31085205]
[319.04718018 469.06866455]
[326.50491333 482.11791992]
[331.88320923 496.15267944]
[335.05593872 510.84396362]
[335.94876099 525.84741211]
[334.54077148 540.81127930]
[330.86489868 555.38488770]
[325.00738525 569.22644043]
[317.10552979 582.01165771]
[307.34454346 593.44067383]
[295.95321655 603.24572754]
[283.19860840 611.19683838]
[269.37969971 617.10772705]
[254.82043457 620.83978271]
[239.86209106 622.30548096]
[224.85531616 621.47058105]
[210.15190125 618.35449219]
[196.09648132 613.03039551]
[183.01858521 605.62310791]
[171.22473145 596.30615234]
[160.99140930 585.29797363]
[152.55850220 572.85662842]
[146.12368774 559.27380371]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 180]
[10 179]
[11 178]
[12 177]
[14 176]
[15 175]
[17 172]
[18 171]
[19 170]
[20 169]
[31 159]
[32 158]
[33 157]
[34 156]
[35 155]
[47 154]
[49 152]
[50 151]
[52 149]
[53 148]
[54 147]
[55 146]
[69 145]
[70 144]
[71 143]
[72 142]
[73 141]
[75 139]
[76 138]
[77 137]
[84 130]
[85 129]
[86 128]
[87 127]
[90 125]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
[96 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
