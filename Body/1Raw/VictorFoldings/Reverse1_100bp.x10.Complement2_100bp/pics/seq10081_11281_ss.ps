%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[299.65786743 433.79522705]
[310.80297852 423.71890259]
[302.38836670 411.30139160]
[293.97375488 398.88391113]
[285.55914307 386.46640015]
[277.14450073 374.04891968]
[268.72988892 361.63140869]
[260.31527710 349.21392822]
[251.71672058 336.92306519]
[242.93611145 324.76162720]
[234.15550232 312.60015869]
[225.37490845 300.43872070]
[221.97105408 299.51885986]
[218.84361267 296.90463257]
[216.78413391 292.74389648]
[216.48812866 287.53240967]
[208.25932312 274.99099731]
[200.03051758 262.44961548]
[186.57939148 256.05300903]
[185.47790527 240.27018738]
[177.24909973 227.72879028]
[161.17288208 220.69157410]
[160.27545166 202.29930115]
[151.86083984 189.88180542]
[143.44621277 177.46430969]
[128.81628418 174.91468811]
[120.10576630 162.44145203]
[122.87924194 147.11351013]
[114.46462250 134.69601440]
[106.05000305 122.27851868]
[97.63538361 109.86102295]
[90.86599731 105.48519135]
[89.18953705 97.19541931]
[80.96073151 84.65402222]
[68.51371002 81.27252197]
[61.91810608 70.65735626]
[64.24645233 58.78699875]
[56.20528030 46.12447357]
[42.27572632 38.62260437]
[41.98449707 23.73084450]
[33.94332504 11.06832027]
[26.70114326 5.50157547]
[25.87832260 -1.84313393]
[18.02656746 -14.62397671]
[10.17481136 -27.40481949]
[-2.16601014 -31.15541077]
[-8.44263554 -41.96224976]
[-5.76189518 -53.75801849]
[-13.42249298 -66.65434265]
[-21.08308983 -79.55067444]
[-28.83948135 -92.38961029]
[-36.69123840 -105.17045593]
[-44.54299164 -117.95130157]
[-52.39474869 -130.73214722]
[-60.24650192 -143.51298523]
[-73.62005615 -145.11380005]
[-83.48581696 -153.99508667]
[-86.39196014 -166.74798584]
[-81.49593353 -178.66680908]
[-89.15653229 -191.56314087]
[-96.81713104 -204.45945740]
[-104.47772217 -217.35578918]
[-112.13832092 -230.25212097]
[-125.91102600 -224.25914001]
[-140.32626343 -220.03964233]
[-155.15669250 -217.66017151]
[-170.16839600 -217.15824890]
[-185.12463379 -218.54182434]
[-199.78950500 -221.78903198]
[-213.93176270 -226.84869385]
[-227.32832336 -233.64099121]
[-239.76792908 -242.05879211]
[-251.05436707 -251.96937561]
[-261.00964355 -263.21640015]
[-269.47677612 -275.62249756]
[-276.32217407 -288.99197388]
[-281.43792725 -303.11404419]
[-284.74331665 -317.76593018]
[-286.18621826 -332.71655273]
[-285.74389648 -347.73013306]
[-283.42330933 -362.56988525]
[-279.26104736 -377.00173950]
[-273.32278442 -390.79812622]
[-265.70214844 -403.74142456]
[-256.51931763 -415.62753296]
[-245.91915894 -426.26895142]
[-234.06883240 -435.49786377]
[-221.15522766 -443.16873169]
[-207.38201904 -449.16055298]
[-192.96643066 -453.37881470]
[-178.13580322 -455.75704956]
[-163.12405396 -456.25769043]
[-148.16793823 -454.87286377]
[-133.50332642 -451.62442017]
[-119.36151123 -446.56356812]
[-105.96551514 -439.77014160]
[-93.52662659 -431.35128784]
[-82.24101257 -421.43978882]
[-72.28667450 -410.19192505]
[-63.82060242 -397.78509521]
[-56.97631454 -384.41503906]
[-51.86176300 -370.29254150]
[-48.55760193 -355.64038086]
[-47.11595154 -340.68963623]
[-47.55954361 -325.67608643]
[-49.88138580 -310.83654785]
[-54.04485703 -296.40502930]
[-59.98429108 -282.60913086]
[-67.60601807 -269.66647339]
[-76.78983307 -257.78115845]
[-87.39089203 -247.14064026]
[-99.24199677 -237.91271973]
[-91.58139801 -225.01638794]
[-83.92079926 -212.12005615]
[-76.26020050 -199.22373962]
[-68.59960938 -186.32740784]
[-52.13961411 -182.87669373]
[-43.09001541 -168.30206299]
[-47.46566010 -151.36474609]
[-39.61390686 -138.58389282]
[-31.76214981 -125.80305481]
[-23.91039467 -113.02220917]
[-16.05863953 -100.24137115]
[-9.87893963 -96.18759155]
[-8.18676281 -87.21127319]
[-0.52616566 -74.31494141]
[7.13443184 -61.41861725]
[22.88038254 -53.67058563]
[22.95565414 -35.25657272]
[30.80740929 -22.47573280]
[38.65916443 -9.69488907]
[46.60585022 3.02714682]
[54.64702225 15.68967152]
[68.00141907 22.28583336]
[68.86780548 38.08330154]
[76.90898132 50.74582672]
[92.87863922 58.02160263]
[93.50212860 76.42520905]
[101.73093414 88.96661377]
[110.05287933 101.44640350]
[118.46749878 113.86389923]
[126.88211823 126.28139496]
[135.29673767 138.69889832]
[150.56100464 141.80369568]
[158.91773987 154.51666260]
[155.86370850 169.04968262]
[164.27833557 181.46717834]
[172.69294739 193.88467407]
[185.18893433 197.08047485]
[191.94184875 207.59626770]
[189.79049683 219.49998474]
[198.01930237 232.04138184]
[212.05900574 239.33502197]
[212.57191467 254.22079468]
[220.80072021 266.76220703]
[229.02952576 279.30358887]
[237.53636169 291.65811157]
[246.31695557 303.81954956]
[255.09756470 315.98101807]
[263.87817383 328.14248657]
[269.74362183 331.19338989]
[272.73825073 336.02340698]
[272.73275757 340.79928589]
[281.14739990 353.21679688]
[289.56201172 365.63427734]
[297.97662354 378.05178833]
[306.39123535 390.46926880]
[314.80587769 402.88677979]
[323.22048950 415.30426025]
[336.70980835 408.68728638]
[350.98876953 404.01214600]
[365.77944946 401.36978149]
[380.79394531 400.81170654]
[395.73995972 402.34875488]
[410.32659912 405.95098877]
[424.26992798 411.54830933]
[437.29849243 419.03176880]
[449.15875244 428.25567627]
[459.61981201 439.04052734]
[468.47802734 451.17633057]
[475.56100464 464.42691040]
[480.73083496 478.53430176]
[483.88693237 493.22393799]
[484.96780396 508.20986938]
[483.95248413 523.20037842]
[480.86065674 537.90368652]
[475.75256348 552.03350830]
[468.72760010 565.31494141]
[459.92254639 577.48937988]
[449.50875854 588.31988525]
[437.68896484 597.59558105]
[424.69320679 605.13592529]
[410.77450562 610.79418945]
[396.20376587 614.46014404]
[381.26461792 616.06256104]
[366.24783325 615.57012939]
[351.44573975 612.99249268]
[337.14645386 608.37982178]
[323.62832642 601.82189941]
[311.15447998 593.44641113]
[299.96774292 583.41632080]
[290.28585815 571.92687988]
[282.29724121 559.20178223]
[276.15747070 545.48864746]
[271.98602295 531.05450439]
[269.86407471 516.18023682]
[269.83294678 501.15542603]
[271.89328003 486.27249146]
[276.00491333 471.82116699]
[282.08782959 458.08276367]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 169]
[3 168]
[4 167]
[5 166]
[6 165]
[7 164]
[8 163]
[9 160]
[10 159]
[11 158]
[12 157]
[16 156]
[17 155]
[18 154]
[20 152]
[21 151]
[23 148]
[24 147]
[25 146]
[28 143]
[29 142]
[30 141]
[31 140]
[33 139]
[34 138]
[37 136]
[38 135]
[40 133]
[41 132]
[43 131]
[44 130]
[45 129]
[48 127]
[49 126]
[50 125]
[51 123]
[52 122]
[53 121]
[54 120]
[55 119]
[59 116]
[60 115]
[61 114]
[62 113]
[63 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
