%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[-71.54075623 458.03750610]
[-65.71650696 471.88238525]
[-61.67345810 486.34811401]
[-59.47537613 501.20651245]
[-59.15692902 516.22320557]
[-60.72313690 531.16143799]
[-64.14929962 545.78552246]
[-69.38137817 559.86492920]
[-76.33685303 573.17749023]
[-84.90603638 585.51330566]
[-94.95377350 596.67779541]
[-106.32160187 606.49493408]
[-118.83022308 614.80981445]
[-132.28237915 621.49139404]
[-146.46588135 626.43414307]
[-161.15705872 629.56030273]
[-176.12419128 630.82043457]
[-191.13125610 630.19464111]
[-205.94154358 627.69293213]
[-220.32147217 623.35461426]
[-234.04426575 617.24822998]
[-246.89349365 609.47003174]
[-258.66650391 600.14263916]
[-269.17758179 589.41326904]
[-278.26101685 577.45104980]
[-285.77352905 564.44470215]
[-291.59658813 550.59930420]
[-295.63842773 536.13323975]
[-297.83526611 521.27465820]
[-298.15243530 506.25790405]
[-296.58499146 491.31982422]
[-293.15759277 476.69598389]
[-287.92431641 462.61706543]
[-280.96771240 449.30508423]
[-272.39749146 436.97000122]
[-262.34881592 425.80633545]
[-250.98017883 415.99017334]
[-238.47085571 407.67633057]
[-225.01814270 400.99591064]
[-210.83421326 396.05429077]
[-196.14277649 392.92941284]
[-181.17553711 391.67056274]
[-166.16853333 392.29757690]
[-151.35845947 394.80056763]
[-136.97888184 399.14004517]
[-123.25660706 405.24761963]
[-110.40804291 413.02691650]
[-101.09315491 401.26965332]
[-91.77827454 389.51242065]
[-82.46339417 377.75515747]
[-73.14850616 365.99792480]
[-71.30960083 351.21725464]
[-56.67517471 345.20526123]
[-47.36029053 333.44799805]
[-38.04541016 321.69076538]
[-36.20649719 306.91009521]
[-21.57207298 300.89810181]
[-12.25718975 289.14083862]
[-2.94230723 277.38360596]
[5.74751711 265.15710449]
[13.78869057 252.49458313]
[21.82986259 239.83206177]
[29.87103653 227.16954041]
[37.53163528 214.27320862]
[44.80486298 201.15451050]
[52.07809067 188.03582764]
[58.75828552 174.60545349]
[64.83212280 160.89018250]
[70.90595245 147.17491150]
[76.97978973 133.45964050]
[83.05361938 119.74437714]
[74.64222717 105.83126831]
[76.13116455 89.64148712]
[86.93910217 77.49592590]
[102.84635925 74.13654327]
[108.71531677 60.33236313]
[114.58428192 46.52818680]
[120.45323944 32.72401047]
[125.38483429 18.55787659]
[129.35693359 4.09335232]
[133.32902527 -10.37117195]
[137.19332886 -24.86486435]
[140.94963074 -39.38692474]
[144.70593262 -53.90898514]
[148.46223450 -68.43104553]
[152.21853638 -82.95310211]
[155.97483826 -97.47515869]
[159.73114014 -111.99722290]
[163.16220093 -126.59954071]
[166.26631165 -141.27484131]
[167.60453796 -156.21502686]
[167.15792847 -171.20837402]
[166.71133423 -186.20173645]
[166.26472473 -201.19508362]
[165.70651245 -216.18469238]
[165.03672791 -231.16972351]
[164.36694336 -246.15476990]
[150.17655945 -251.68223572]
[139.46583557 -262.50814819]
[134.09045410 -276.75683594]
[134.98176575 -291.95962524]
[141.98532104 -305.48257446]
[153.88771057 -314.98275757]
[168.62678528 -318.81414795]
[183.64889526 -316.31298828]
[196.35139465 -307.91259766]
[204.53347778 -295.06838989]
[206.77754211 -280.00570679]
[202.69482422 -265.33428955]
[192.99264526 -253.59597778]
[179.35197449 -246.82455444]
[180.02175903 -231.83950806]
[180.69154358 -216.85447693]
[184.13058472 -210.31269836]
[181.25807190 -201.64169312]
[181.70468140 -186.64833069]
[182.15129089 -171.65498352]
[182.59788513 -156.66163635]
[189.46183777 -169.99903870]
[200.42637634 -180.23518372]
[214.20343018 -186.16754150]
[229.17446899 -187.09918213]
[243.58071899 -182.92065430]
[255.72973633 -174.12284851]
[264.19427490 -161.73933411]
[267.97991943 -147.22489929]
[266.64196777 -132.28469849]
[260.33755493 -118.67386627]
[249.80735779 -107.99141693]
[236.28842163 -101.49230957]
[221.36895752 -99.94004059]
[206.80168152 -103.51697540]
[194.29794312 -111.80290222]
[185.32667542 -123.82439423]
[180.94160461 -138.17073059]
[177.83749390 -123.49542999]
[179.44401550 -120.35673523]
[179.61009216 -116.28395844]
[177.91326904 -111.96260834]
[174.25318909 -108.24092102]
[170.49688721 -93.71885681]
[166.74060059 -79.19680023]
[162.98429871 -64.67474365]
[159.22799683 -50.15268326]
[155.47169495 -35.63062286]
[151.71539307 -21.10856438]
[153.08372498 -13.84568119]
[147.79354858 -6.39907551]
[143.82145691 8.06544876]
[139.84934998 22.52997208]
[151.94622803 13.66060066]
[166.91099548 12.63303185]
[180.10664368 19.76567078]
[187.44439697 32.84839249]
[186.65052795 47.82736969]
[177.97105408 60.06120682]
[164.09539795 65.75911713]
[149.32308960 63.15553665]
[138.23147583 53.05721664]
[134.25741577 38.59297180]
[128.38845825 52.39714813]
[122.51949310 66.20132446]
[116.65053558 80.00550079]
[124.33274078 90.78382111]
[125.71850586 103.94696045]
[120.44924927 116.08876801]
[109.88845825 124.06737518]
[96.76889038 125.81821442]
[90.69505310 139.53347778]
[84.62122345 153.24874878]
[78.54738617 166.96401978]
[72.47355652 180.67927551]
[86.82019043 176.30047607]
[100.12532043 183.22677612]
[104.76714325 197.49049377]
[98.08663177 210.92070007]
[83.91066742 215.82398987]
[70.35990143 209.39152527]
[65.19678497 195.30905151]
[57.92355728 208.42774963]
[50.65032578 221.54643250]
[50.88027954 225.88246155]
[49.82465744 229.68380737]
[47.80940628 232.61196899]
[45.23691940 234.46910095]
[42.53356171 235.21070862]
[34.49238968 247.87322998]
[26.45121574 260.53576660]
[18.41004181 273.19827271]
[33.03039551 269.84487915]
[46.44254303 276.56158447]
[52.51463699 290.27764893]
[48.47059250 304.72219849]
[36.15929413 313.29144287]
[21.20930290 312.06762695]
[10.45555210 301.61026001]
[8.81494427 286.69848633]
[-0.49993876 298.45571899]
[-9.81482124 310.21298218]
[-12.31999493 325.83459473]
[-26.28815651 331.00564575]
[-35.60303879 342.76287842]
[-44.91792297 354.52014160]
[-47.42309570 370.14175415]
[-61.39125824 375.31280518]
[-70.70613861 387.07003784]
[-80.02102661 398.82730103]
[-89.33590698 410.58456421]
[-98.65078735 422.34179688]
[-88.13878632 433.07031250]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 209]
[48 208]
[49 207]
[50 206]
[51 205]
[53 203]
[54 202]
[55 201]
[57 199]
[58 198]
[59 197]
[60 189]
[61 188]
[62 187]
[63 186]
[64 181]
[65 180]
[66 179]
[67 172]
[68 171]
[69 170]
[70 169]
[71 168]
[75 163]
[76 162]
[77 161]
[78 160]
[79 150]
[80 149]
[81 148]
[82 146]
[83 145]
[84 144]
[85 143]
[86 142]
[87 141]
[88 140]
[89 136]
[90 135]
[91 118]
[92 117]
[93 116]
[94 115]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
