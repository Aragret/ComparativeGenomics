%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[122.56429291 626.36175537]
[111.02779388 616.76428223]
[100.22264862 606.35028076]
[90.20650482 595.17535400]
[81.03279877 583.29913330]
[72.75048828 570.78491211]
[65.40375519 557.69946289]
[59.03179550 544.11273193]
[53.66861343 530.09704590]
[49.34282303 515.72729492]
[46.07749939 501.08010864]
[43.89007187 486.23364258]
[42.79220963 471.26708984]
[42.78976440 456.26034546]
[43.88275528 441.29345703]
[46.06534958 426.44628906]
[49.32590103 411.79803467]
[53.64701080 397.42687988]
[59.00563049 383.40948486]
[65.37316132 369.82061768]
[72.71563721 356.73281860]
[80.99387360 344.21591187]
[90.16371155 332.33663940]
[100.17621613 321.15844727]
[110.97797394 310.74093628]
[122.51134491 301.13970947]
[134.71479797 292.40597534]
[147.52322388 284.58633423]
[160.86827087 277.72253418]
[154.99931335 263.91833496]
[149.13035583 250.11416626]
[143.26139832 236.30999756]
[140.71513367 235.13752747]
[138.47987366 232.88581848]
[136.96902466 229.66824341]
[136.54731750 225.74565125]
[137.48118591 221.50515747]
[132.44425964 207.37612915]
[127.40734863 193.24708557]
[122.26538849 179.15594482]
[117.01866913 165.10348511]
[111.77195740 151.05101013]
[106.42076874 137.03799438]
[100.96540833 123.06518555]
[95.51005554 109.09239197]
[89.87796021 103.32592773]
[90.07919312 94.87072754]
[84.83247375 80.81826019]
[79.48129272 66.80523682]
[74.02593231 52.83243561]
[68.57057953 38.85963821]
[63.11521912 24.88684273]
[60.12761307 39.58630371]
[51.12711716 51.58593369]
[37.85158539 58.56878662]
[22.86431313 59.18658447]
[9.05910969 53.32003784]
[-0.89845800 42.10189056]
[-5.08573818 27.69818687]
[-2.69423342 12.89005661]
[5.81429434 0.53671896]
[18.79698181 -6.97659063]
[33.74707413 -8.19917011]
[47.77794647 -2.89495826]
[58.18111420 7.91297531]
[55.29584122 -6.80691624]
[52.41056824 -21.52680779]
[49.52529526 -36.24670029]
[41.22994614 -23.74921227]
[26.87817764 -19.38724899]
[13.03142357 -25.15504265]
[6.02023602 -38.41563034]
[9.05003452 -53.10645676]
[20.73563576 -62.51106644]
[35.73453903 -62.32980728]
[47.19038010 -52.64393616]
[45.85214615 -67.58412170]
[44.51391220 -82.52430725]
[43.17567444 -97.46449280]
[41.83744049 -112.40467834]
[27.21913719 -116.34555054]
[14.85436726 -125.03372955]
[6.22438097 -137.40481567]
[2.35493374 -151.95463562]
[3.69438982 -166.92218018]
[10.06186104 -180.50267029]
[20.67136002 -191.06523132]
[34.22876740 -197.34869385]
[32.89053345 -212.28887939]
[31.55229950 -227.22906494]
[30.21406555 -242.16925049]
[28.87583160 -257.10943604]
[27.53759766 -272.04962158]
[12.78630257 -275.40438843]
[-0.20529179 -283.15512085]
[-10.16440201 -294.54244995]
[-16.11533737 -308.45077515]
[-17.47508240 -323.51751709]
[-14.11042690 -338.26654053]
[-6.35100365 -351.25292969]
[5.04299784 -361.20440674]
[18.95530891 -367.14602661]
[34.02294540 -368.49569702]
[48.76972961 -365.12115479]
[61.75092697 -357.35302734]
[71.69476318 -345.95236206]
[77.62705994 -332.03607178]
[78.96661377 -316.96752930]
[75.58219147 -302.22302246]
[67.80537415 -289.24700928]
[56.39804459 -279.31082153]
[42.47778320 -273.38784790]
[43.81601715 -258.44766235]
[45.15425110 -243.50749207]
[46.49248505 -228.56730652]
[47.83071899 -213.62712097]
[49.16895294 -198.68693542]
[63.62723923 -194.91290283]
[75.94502258 -186.40400696]
[84.62464905 -174.17132568]
[88.60281372 -159.68009949]
[87.38075256 -144.67420959]
[81.08673096 -130.96635437]
[70.46285248 -120.21901703]
[56.77762604 -113.74291229]
[58.11585999 -98.80272675]
[59.45409393 -83.86254120]
[60.79232788 -68.92235565]
[62.13056564 -53.98217010]
[64.24518585 -39.13197327]
[67.13046265 -24.41208076]
[70.01573181 -9.69218826]
[72.90100861 5.02770281]
[77.08802032 19.43148422]
[82.54337311 33.40428162]
[87.99873352 47.37707901]
[93.45408630 61.34987640]
[98.81497955 66.43737793]
[98.88494873 75.57154083]
[104.13166809 89.62400818]
[109.48284912 103.63703156]
[114.93820953 117.60983276]
[120.39356232 131.58262634]
[126.42973328 138.43846130]
[125.82442474 145.80429077]
[131.07113647 159.85676575]
[136.31785583 173.90924072]
[142.25128174 180.85418701]
[141.53637695 188.21017456]
[146.57328796 202.33920288]
[151.61021423 216.46823120]
[157.06556702 230.44104004]
[162.93452454 244.24520874]
[168.80349731 258.04937744]
[174.67245483 271.85357666]
[188.87451172 267.00549316]
[203.39257812 263.20703125]
[218.14918518 260.47848511]
[233.06559753 258.83438110]
[248.06222534 258.28347778]
[263.05905151 258.82876587]
[277.97607422 260.46728516]
[292.73370361 263.19030762]
[307.25320435 266.98330688]
[321.45709229 271.82604980]
[335.26956177 277.69268799]
[348.61697388 284.55194092]
[361.42807007 292.36718750]
[373.63452148 301.09677124]
[385.17117310 310.69406128]
[395.97647095 321.10787964]
[405.99279785 332.28262329]
[415.16671753 344.15875244]
[423.44921875 356.67282104]
[430.79617310 369.75811768]
[437.16836548 383.34478760]
[442.53176880 397.36035156]
[446.85778809 411.73004150]
[450.12335205 426.37719727]
[452.31103516 441.22360229]
[453.40914917 456.19012451]
[453.41183472 471.19686890]
[452.31909180 486.16378784]
[450.13674927 501.01098633]
[446.87643433 515.65930176]
[442.55554199 530.03051758]
[437.19717407 544.04803467]
[430.82986450 557.63696289]
[423.48760986 570.72491455]
[415.20956421 583.24194336]
[406.03991699 595.12133789]
[396.02758789 606.29974365]
[385.22601318 616.71740723]
[373.69281006 626.31884766]
[361.48950195 635.05273438]
[348.68118286 642.87261963]
[335.33624268 649.73663330]
[321.52587891 655.60821533]
[307.32373047 660.45605469]
[292.80560303 664.25427246]
[278.04895020 666.98260498]
[263.13250732 668.62646484]
[248.13587952 669.17712402]
[233.13905334 668.63159180]
[218.22204590 666.99285889]
[203.46446228 664.26959229]
[188.94503784 660.47631836]
[174.74124146 655.63336182]
[160.92884827 649.76647949]
[147.58155823 642.90698242]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 155]
[30 154]
[31 153]
[32 152]
[37 151]
[38 150]
[39 149]
[40 147]
[41 146]
[42 145]
[43 143]
[44 142]
[45 141]
[47 140]
[48 139]
[49 137]
[50 136]
[51 135]
[52 134]
[65 133]
[66 132]
[67 131]
[68 130]
[76 129]
[77 128]
[78 127]
[79 126]
[80 125]
[88 117]
[89 116]
[90 115]
[91 114]
[92 113]
[93 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
