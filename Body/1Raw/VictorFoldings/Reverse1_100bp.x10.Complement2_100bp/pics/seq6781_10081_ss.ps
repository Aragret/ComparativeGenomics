%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[68.53402710 374.92611694]
[75.96620178 388.03561401]
[80.17419434 402.50592041]
[80.93107605 417.55664062]
[78.19602966 432.37609863]
[72.11655426 446.16510010]
[63.02050781 458.18002319]
[51.39842606 467.77294922]
[37.87707520 474.42648315]
[23.18564224 477.78189087]
[8.11642265 477.65814209]
[-6.51792383 474.06192017]
[-19.92818260 467.18722534]
[-31.39115906 457.40475464]
[-40.28866577 445.24203491]
[-46.14087296 431.35507202]
[-48.63217545 416.49267578]
[-47.62822723 401.45645142]
[-43.18316269 387.05718994]
[-35.53670120 374.07150269]
[-25.10120964 363.19964600]
[-12.43945789 355.02795410]
[1.76572144 349.99707031]
[16.74826050 348.37835693]
[31.70017052 350.25909424]
[36.94688797 336.20660400]
[34.15010071 321.57693481]
[46.22568893 311.35485840]
[51.47240829 297.30239868]
[56.71912766 283.24993896]
[61.96584320 269.19744873]
[66.68598175 254.95947266]
[70.87298584 240.55567932]
[74.84508514 226.09115601]
[78.60138702 211.56910706]
[82.35768890 197.04704285]
[86.11399078 182.52497864]
[88.44947815 167.70791626]
[89.34229279 152.73451233]
[90.23510742 137.76110840]
[91.12792206 122.78769684]
[92.02073669 107.81429291]
[92.80206299 92.83465576]
[85.68869019 78.70275879]
[93.98657227 66.33367157]
[94.65635681 51.34863281]
[95.32614136 36.36359406]
[95.88435364 21.37398338]
[96.33096313 6.38063335]
[96.77756500 -8.61271667]
[97.22417450 -23.60606575]
[97.67077637 -38.59941483]
[98.11738586 -53.59276581]
[98.56398773 -68.58611298]
[99.01059723 -83.57946777]
[99.45719910 -98.57281494]
[99.79217529 -113.56907654]
[96.68806458 -128.24438477]
[90.41070557 -141.86769104]
[84.13334656 -155.49101257]
[77.85598755 -169.11431885]
[71.57862854 -182.73764038]
[70.06579590 -167.81413269]
[63.02491379 -154.56927490]
[51.50043488 -144.96789551]
[37.20196152 -140.43429565]
[22.25057602 -141.64100647]
[8.86423492 -148.40899658]
[-0.97128052 -159.73431396]
[-5.79692984 -173.93688965]
[-4.89685631 -188.90986633]
[1.59541953 -202.43208313]
[12.71680737 -212.49760437]
[26.81751442 -217.61326599]
[41.80578613 -217.02020264]
[55.45819855 -210.80638123]
[65.74848175 -199.89520264]
[62.42622375 -214.52265930]
[59.10396576 -229.15011597]
[55.78170395 -243.77757263]
[40.76650620 -242.97021484]
[25.83086395 -244.71221924]
[11.40450382 -248.95347595]
[-2.09749675 -255.57192993]
[-14.28665924 -264.37716675]
[-24.81227684 -275.11587524]
[-33.37150574 -287.47900391]
[-39.71808243 -301.11093140]
[-43.66939926 -315.61938477]
[-45.11177444 -330.58691406]
[-44.00370407 -345.58294678]
[-40.37706757 -360.17593384]
[-34.33621597 -373.94604492]
[-26.05495262 -386.49710083]
[-15.77154636 -397.46792603]
[-3.78187370 -406.54293823]
[9.56910038 -413.46099854]
[23.89724159 -418.02307129]
[38.79030228 -420.09786987]
[53.81977463 -419.62570190]
[68.55323792 -416.62017822]
[82.56677246 -411.16778564]
[95.45718384 -403.42535400]
[106.85359955 -393.61566162]
[116.42810822 -382.02096558]
[123.90523529 -368.97488403]
[129.06985474 -354.85275269]
[131.77336121 -340.06088257]
[131.93797302 -325.02490234]
[129.55895996 -310.17739868]
[124.70476532 -295.94558716]
[117.51506042 -282.73892212]
[108.19669342 -270.93737793]
[97.01778412 -260.88055420]
[84.29997253 -252.85775757]
[70.40916443 -247.09983826]
[73.73142242 -232.47238159]
[77.05368042 -217.84492493]
[80.37594604 -203.21745300]
[85.20194244 -189.01499939]
[91.47930145 -175.39169312]
[97.75666046 -161.76837158]
[104.03401947 -148.14505005]
[110.31138611 -134.52174377]
[110.73641968 -149.51571655]
[114.03907013 -164.14761353]
[120.09587097 -177.87040710]
[128.68038940 -190.17106628]
[139.47166443 -200.58972168]
[152.06626892 -208.73686218]
[165.99336243 -214.30789185]
[180.73223877 -217.09452820]
[195.73188782 -216.99263000]
[210.43154907 -214.00596619]
[224.28164673 -208.24620056]
[236.76438904 -199.92869568]
[247.41310120 -189.36436462]
[255.82968140 -176.94819641]
[261.69946289 -163.14437866]
[264.80297852 -148.46894836]
[265.02426147 -133.47058105]
[262.35498047 -118.70999146]
[256.89492798 -104.73902130]
[248.84826660 -92.07998657]
[238.51582336 -81.20614624]
[226.28385925 -72.52403259]
[212.60968018 -66.35823059]
[198.00453186 -62.93925476]
[183.01440430 -62.39492798]
[168.19973755 -64.74559784]
[154.11437988 -69.90338135]
[141.28492737 -77.67544556]
[130.19100952 -87.77124023]
[121.24739838 -99.81332397]
[114.79051208 -113.34574890]
[117.83408356 -106.61087799]
[114.45055389 -98.12621307]
[114.00394440 -83.13285828]
[113.55734253 -68.13951111]
[113.11073303 -53.14616013]
[112.66413116 -38.15280914]
[112.21752167 -23.15946007]
[111.77091217 -8.16611099]
[111.32431030 6.82723951]
[110.87770081 21.82058907]
[113.82066345 28.60002899]
[110.31118011 37.03337860]
[109.64139557 52.01841736]
[108.97161102 67.00345612]
[116.13288879 80.06352234]
[107.78710175 93.50444031]
[110.60183716 101.05757141]
[106.99414062 108.70710754]
[106.10132599 123.68051147]
[105.20851135 138.65391541]
[104.31569672 153.62731934]
[103.42288208 168.60073853]
[112.02200317 156.31028748]
[124.83448792 148.51026917]
[139.70121765 146.51513672]
[154.11686707 150.66108704]
[165.65216064 160.24946594]
[172.36318970 173.66445923]
[173.11904907 188.64540100]
[167.79232788 202.66775513]
[157.28070068 213.36848450]
[143.35556030 218.94435120]
[128.36351013 218.45570374]
[114.83100891 211.98489380]
[105.03849792 200.62239075]
[100.63604736 186.28128052]
[96.87974548 200.80334473]
[93.12344360 215.32540894]
[89.36714172 229.84745789]
[90.76284790 236.30993652]
[88.95652008 241.69827271]
[85.27677155 244.74269104]
[81.08975983 259.14648438]
[95.29212189 254.32020569]
[108.00225830 262.28591919]
[109.85072327 277.17156982]
[99.47490692 288.00405884]
[84.52346802 286.79803467]
[76.01831818 274.44418335]
[70.77159882 288.49664307]
[65.52487946 302.54910278]
[60.27816010 316.60159302]
[62.69966507 332.23638916]
[50.99935913 341.45333862]
[45.75263977 355.50579834]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 210]
[26 209]
[28 207]
[29 206]
[30 205]
[31 204]
[32 198]
[33 197]
[34 194]
[35 193]
[36 192]
[37 191]
[38 177]
[39 176]
[40 175]
[41 174]
[42 173]
[43 171]
[45 169]
[46 168]
[47 167]
[48 165]
[49 164]
[50 163]
[51 162]
[52 161]
[53 160]
[54 159]
[55 158]
[56 157]
[57 155]
[58 124]
[59 123]
[60 122]
[61 121]
[62 120]
[77 119]
[78 118]
[79 117]
[80 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
