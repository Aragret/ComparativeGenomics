%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[65.13358307 682.41021729]
[50.09224701 681.73791504]
[35.51948166 677.95269775]
[22.05234337 671.21990967]
[10.27955532 661.83404541]
[0.71577662 650.20526123]
[-6.22090769 636.84204102]
[-10.22725487 622.32849121]
[-11.12812424 607.29913330]
[-8.88413525 592.41094971]
[-3.59338331 578.31475830]
[4.51284122 565.62689209]
[15.08016968 554.90191650]
[27.64664268 546.60870361]
[41.66291046 541.10980225]
[56.51623917 538.64556885]
[57.18602371 523.66052246]
[57.85580826 508.67547607]
[58.52559280 493.69046021]
[59.19537735 478.70541382]
[56.69077301 474.63897705]
[56.71409607 468.95596313]
[60.11478043 463.28613281]
[61.23043060 448.32769775]
[62.34607697 433.36923218]
[63.46172714 418.41079712]
[64.57737732 403.45233154]
[50.90485382 398.93713379]
[38.70550919 391.27075195]
[28.69328308 380.89651489]
[21.45539856 368.41629028]
[17.41793060 354.55575562]
[16.82071495 340.12200928]
[19.70311928 325.95678711]
[25.90147018 312.88708496]
[35.05834961 301.67721558]
[46.64319229 292.98382568]
[59.98303986 287.31759644]
[74.30162048 285.01315308]
[75.63985443 270.07296753]
[76.97808838 255.13278198]
[78.31632233 240.19259644]
[79.65455627 225.25241089]
[70.09034729 216.61785889]
[67.20253754 203.86079407]
[72.26395416 191.58918762]
[83.63392639 184.36849976]
[85.19445038 169.44989014]
[86.75497437 154.53128052]
[88.31549835 139.61268616]
[89.87602234 124.69407654]
[91.43653870 109.77547455]
[92.55219269 94.81701660]
[93.22197723 79.83197784]
[93.89176178 64.84693909]
[92.99894714 49.87353516]
[90.55321503 35.07426453]
[88.10749054 20.27499390]
[85.66176605 5.47572327]
[83.21603394 -9.32354736]
[73.33217621 -21.67749214]
[78.89077759 -35.49600220]
[76.44504547 -50.29527283]
[73.99932098 -65.09454346]
[57.88809586 -66.54869080]
[42.70694351 -72.10493469]
[29.48102188 -81.38218689]
[19.10192680 -93.74827576]
[12.26759529 -108.36304474]
[9.43538189 -124.23541260]
[10.79144669 -140.29058838]
[16.23853302 -155.44287109]
[25.40292168 -168.66900635]
[37.66006470 -179.07736206]
[52.17714691 -185.96801758]
[49.29187393 -200.68789673]
[46.40660095 -215.40779114]
[33.98517990 -229.00154114]
[40.31584167 -245.36886597]
[37.21173477 -260.04418945]
[34.10762405 -274.71948242]
[31.00351334 -289.39477539]
[27.89940262 -304.07006836]
[12.85109997 -303.88345337]
[-1.94440556 -306.63650513]
[-15.91841507 -312.22338867]
[-28.53380394 -320.42938232]
[-39.30567169 -330.93902588]
[-47.81997681 -343.34841919]
[-53.74944687 -357.18054199]
[-56.86617661 -371.90374756]
[-57.05036163 -386.95205688]
[-54.29492569 -401.74713135]
[-48.70577621 -415.72024536]
[-40.49774933 -428.33428955]
[-29.98633957 -439.10446167]
[-17.57557678 -447.61676025]
[-3.74249482 -453.54397583]
[10.98119640 -456.65832520]
[26.02955818 -456.84008789]
[40.82417297 -454.08224487]
[54.79637146 -448.49084473]
[67.40910339 -440.28076172]
[78.17756653 -429.76760864]
[86.68785858 -417.35546875]
[92.61284637 -403.52145386]
[95.72481537 -388.79724121]
[95.90412903 -373.74884033]
[93.14389801 -358.95468140]
[87.55023193 -344.98339844]
[79.33811951 -332.37197876]
[68.82322693 -321.60522461]
[56.40970230 -313.09695435]
[42.57470322 -307.17419434]
[45.67881393 -292.49890137]
[48.78292465 -277.82357788]
[51.88703537 -263.14828491]
[54.99114609 -248.47297668]
[64.95517731 -241.61407471]
[67.66136169 -229.41323853]
[61.12649155 -218.29307556]
[64.01176453 -203.57318115]
[66.89703369 -188.85328674]
[80.77557373 -188.32109070]
[94.19207764 -184.69995117]
[106.46751404 -178.16949463]
[116.97982025 -169.05670166]
[125.19536591 -157.81951904]
[130.69610596 -145.02380371]
[133.20077515 -131.31491089]
[132.57934570 -117.38510132]
[128.85972595 -103.93857574]
[122.22653961 -91.65588379]
[113.01194763 -81.15950012]
[101.67905426 -72.98225403]
[88.79859161 -67.54027557]
[91.24431610 -52.74100113]
[93.69004822 -37.94173050]
[103.39897156 -26.64632988]
[98.01530457 -11.76927567]
[100.46103668 3.02999568]
[102.90676117 17.82926559]
[105.35248566 32.62853622]
[107.79821777 47.42780685]
[113.20887756 33.43764114]
[123.50573730 22.53009033]
[137.16131592 16.32322121]
[152.14988708 15.73778725]
[166.24798584 20.86063576]
[177.36424255 30.93181992]
[183.84963989 44.45734024]
[184.74208069 59.43077087]
[179.90919495 73.63088226]
[170.06791687 84.95117950]
[156.67813110 91.71236420]
[141.72613525 92.91145325]
[127.42996979 88.37057495]
[115.91038513 78.76332855]
[108.87680054 65.51672363]
[108.20701599 80.50176239]
[107.53723145 95.48680115]
[109.39597321 97.90229034]
[110.41690063 101.04748535]
[110.32805634 104.61337280]
[108.97542572 108.19480133]
[106.35514832 111.33599854]
[104.79462433 126.25460052]
[103.23410034 141.17320251]
[101.67357635 156.09181213]
[100.11305237 171.01042175]
[98.55252838 185.92901611]
[109.81523895 199.31448364]
[107.94924164 216.36831665]
[94.59474182 226.59063721]
[93.25650787 241.53082275]
[91.91827393 256.47100830]
[90.58003998 271.41119385]
[89.24180603 286.35137939]
[103.95629120 291.68786621]
[116.78266907 300.63940430]
[126.85279846 312.59304810]
[133.48692322 326.73297119]
[136.23951721 342.09606934]
[134.92922974 357.63754272]
[129.65083313 372.30197144]
[120.76834106 385.09497070]
[108.88998413 395.15069580]
[94.82649994 401.79034424]
[79.53582764 404.56799316]
[78.42018127 419.52642822]
[77.30452728 434.48489380]
[76.18888092 449.44332886]
[75.07323456 464.40179443]
[74.18041992 479.37518311]
[73.51063538 494.36022949]
[72.84085083 509.34527588]
[72.17105865 524.33032227]
[71.50127411 539.31536865]
[86.07553101 543.09490967]
[99.54531860 549.82232666]
[111.32179260 559.20361328]
[120.89015198 570.82861328]
[127.83209229 584.18908691]
[131.84414673 598.70104980]
[132.75093079 613.73010254]
[130.51280212 628.61914062]
[125.22759247 642.71740723]
[117.12635803 655.40844727]
[106.56324768 666.13763428]
[94.00003815 674.43579102]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 198]
[17 197]
[18 196]
[19 195]
[20 194]
[23 193]
[24 192]
[25 191]
[26 190]
[27 189]
[39 178]
[40 177]
[41 176]
[42 175]
[43 174]
[47 171]
[48 170]
[49 169]
[50 168]
[51 167]
[52 166]
[53 161]
[54 160]
[55 159]
[56 144]
[57 143]
[58 142]
[59 141]
[60 140]
[62 138]
[63 137]
[64 136]
[75 123]
[76 122]
[77 121]
[79 118]
[80 117]
[81 116]
[82 115]
[83 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
