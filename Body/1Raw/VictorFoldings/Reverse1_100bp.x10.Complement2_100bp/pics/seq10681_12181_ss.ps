%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[267.43267822 424.33877563]
[277.30566406 413.01455688]
[288.62869263 403.14019775]
[280.39987183 390.59881592]
[272.17108154 378.05740356]
[263.94226074 365.51602173]
[255.71345520 352.97460938]
[249.41580200 349.10662842]
[247.45712280 340.18466187]
[239.41593933 327.52212524]
[226.06155396 320.92596436]
[225.19515991 305.12850952]
[217.15399170 292.46597290]
[209.11280823 279.80346680]
[201.07164001 267.14093018]
[196.68835449 265.24465942]
[193.44975281 260.57470703]
[192.98608398 253.97950745]
[185.32548523 241.08319092]
[177.66488647 228.18685913]
[170.00428772 215.29052734]
[161.96311951 202.62800598]
[153.54850769 190.21051025]
[145.13388062 177.79301453]
[136.62705994 165.43850708]
[128.02848816 153.14767456]
[119.42992401 140.85682678]
[105.87365723 144.85870361]
[91.74405670 144.48193359]
[78.42031860 139.76330566]
[67.20295715 131.16339111]
[59.18690872 119.52163696]
[55.15460205 105.97438812]
[55.49963760 91.84397888]
[60.18833542 78.50967407]
[68.76303101 67.27303314]
[60.34840775 54.85553741]
[51.93379211 42.43804169]
[37.78705215 35.35422897]
[37.05257034 20.47774506]
[24.55658340 17.28194046]
[17.80366898 6.76614857]
[19.95502663 -5.13755751]
[11.72621822 -17.67895889]
[-2.31348467 -24.97260666]
[-2.82639766 -39.85837936]
[-16.86610031 -47.15202713]
[-17.37901306 -62.03779602]
[-25.60782242 -74.57920074]
[-33.83662796 -87.12059784]
[-42.06543732 -99.66199493]
[-50.38738251 -112.14179230]
[-58.80199814 -124.55928802]
[-72.94873810 -131.64309692]
[-73.68321991 -146.51957703]
[-82.09783936 -158.93707275]
[-90.51245880 -171.35456848]
[-103.77974701 -164.32418823]
[-117.72938538 -158.76948547]
[-132.19783020 -154.75558472]
[-147.01544189 -152.32955933]
[-162.00849915 -151.51985168]
[-177.00120544 -152.33595276]
[-191.81777954 -154.76829529]
[-206.28451538 -158.78834534]
[-220.23178101 -164.34899902]
[-233.49606323 -171.38504028]
[-245.92185974 -179.81398010]
[-257.36346436 -189.53700256]
[-267.68670654 -200.44009399]
[-276.77059937 -212.39543152]
[-284.50863647 -225.26284790]
[-290.81005859 -238.89146423]
[-295.60101318 -253.12150574]
[-298.82528687 -267.78613281]
[-300.44512939 -282.71340942]
[-300.44152832 -297.72830200]
[-298.81451416 -312.65478516]
[-295.58319092 -327.31787109]
[-290.78543091 -341.54559326]
[-284.47744751 -355.17120361]
[-276.73324585 -368.03488159]
[-267.64361572 -379.98587036]
[-257.31512451 -390.88400269]
[-245.86886597 -400.60153198]
[-233.43904114 -409.02450562]
[-220.17137146 -416.05419922]
[-206.22143555 -421.60815430]
[-191.75277710 -425.62124634]
[-176.93502808 -428.04647827]
[-161.94192505 -428.85537720]
[-146.94926453 -428.03848267]
[-132.13282776 -425.60534668]
[-117.66630554 -421.58450317]
[-103.71933746 -416.02310181]
[-90.45542145 -408.98635864]
[-78.03009033 -400.55673218]
[-66.58901978 -390.83309937]
[-56.26633835 -379.92944336]
[-47.18309021 -367.97363281]
[-39.44575882 -355.10580444]
[-33.14506912 -341.47683716]
[-28.35489082 -327.24655151]
[-25.13138390 -312.58172607]
[-23.51234627 -297.65438843]
[-23.51675797 -282.63949585]
[-25.14456749 -267.71307373]
[-28.37668991 -253.05018616]
[-33.17523193 -238.82270813]
[-39.48392868 -225.19744873]
[-47.22881699 -212.33416748]
[-56.31909180 -200.38368225]
[-66.64817810 -189.48609924]
[-78.09496307 -179.76919556]
[-69.68034363 -167.35169983]
[-61.26572418 -154.93420410]
[-47.72085571 -148.73857117]
[-46.38450241 -132.97390747]
[-37.96988678 -120.55641174]
[-31.61533928 -116.78261566]
[-29.52403641 -107.89080811]
[-21.29522896 -95.34940338]
[-13.06642151 -82.80800629]
[-4.83761358 -70.26660919]
[8.61351013 -63.87000275]
[9.71500301 -48.08718491]
[23.16612625 -41.69058228]
[24.26761818 -25.90776634]
[32.49642563 -13.36636543]
[48.57263947 -6.32915783]
[49.47006607 12.06312752]
[63.01493454 18.25875473]
[64.35128784 34.02342224]
[72.76590729 46.44091797]
[81.18052673 58.85841370]
[96.39285278 54.90242386]
[112.04058838 56.39005661]
[126.23493195 63.14174271]
[137.26252747 74.34249878]
[143.79223633 88.64031219]
[145.03590393 104.30932617]
[140.84338379 119.45817566]
[131.72076416 132.25827026]
[140.31933594 144.54910278]
[148.91789246 156.83995056]
[156.40141296 162.07775879]
[157.55137634 169.37840271]
[165.96600342 181.79589844]
[174.38061523 194.21339417]
[178.35237122 195.96815491]
[181.26608276 198.62799072]
[182.96717834 201.74916077]
[183.46101379 204.88328552]
[182.90061951 207.62994385]
[190.56121826 220.52626038]
[198.22181702 233.42259216]
[205.88241577 246.31892395]
[213.73416138 259.09976196]
[221.77534485 271.76229858]
[229.81651306 284.42480469]
[237.85768127 297.08734131]
[251.78724670 304.58920288]
[252.07847595 319.48095703]
[260.11962891 332.14349365]
[268.25485229 344.74578857]
[276.48367310 357.28720093]
[284.71246338 369.82861328]
[292.94128418 382.36999512]
[301.17010498 394.91140747]
[314.73596191 388.45535278]
[329.05462646 383.90670776]
[343.85928345 381.35021973]
[358.87417603 380.83349609]
[373.81954956 382.36621094]
[388.41702271 385.91976929]
[402.39462280 391.42800903]
[415.49194336 398.78826904]
[427.46502686 407.86346436]
[438.09082031 418.48449707]
[447.17135620 430.45352173]
[454.53744507 443.54757690]
[460.05191040 457.52273560]
[463.61196899 472.11859131]
[465.15133667 487.06329346]
[464.64135742 502.07843018]
[462.09146118 516.88421631]
[457.54919434 531.20489502]
[451.09921265 544.77362061]
[442.86160278 557.33770752]
[432.98986816 568.66302490]
[421.66787720 578.53857422]
[409.10659790 586.78045654]
[395.54003906 593.23504639]
[381.22088623 597.78210449]
[366.41595459 600.33697510]
[351.40100098 600.85205078]
[336.45578003 599.31774902]
[321.85870361 595.76257324]
[307.88171387 590.25286865]
[294.78515625 582.89117432]
[282.81304932 573.81469727]
[272.18844604 563.19250488]
[263.10919189 551.22247314]
[255.74452209 538.12762451]
[250.23158264 524.15191650]
[246.67308044 509.55563354]
[245.13533020 494.61077881]
[245.64695740 479.59573364]
[248.19844055 464.79019165]
[252.74224854 450.47000122]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 169]
[4 168]
[5 167]
[6 166]
[7 165]
[9 164]
[10 163]
[12 161]
[13 160]
[14 159]
[15 158]
[18 157]
[19 156]
[20 155]
[21 154]
[22 149]
[23 148]
[24 147]
[25 145]
[26 144]
[27 143]
[36 135]
[37 134]
[38 133]
[40 131]
[43 129]
[44 128]
[46 126]
[48 124]
[49 123]
[50 122]
[51 121]
[52 119]
[53 118]
[55 116]
[56 115]
[57 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
