%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[49.00794601 473.66516113]
[46.35400772 488.45751953]
[41.52492905 502.68911743]
[34.62858963 516.04193115]
[25.81905556 528.21771240]
[15.29313850 538.94445801]
[3.28598976 547.98248291]
[-9.93414593 555.12988281]
[-24.07192802 560.22705078]
[-38.81150818 563.16003418]
[-53.82360458 563.86334229]
[-68.77284241 562.32122803]
[-83.32524109 558.56817627]
[-97.15570068 552.68804932]
[-109.95524597 544.81219482]
[-121.43792725 535.11651611]
[-131.34721375 523.81768799]
[-139.46173096 511.16812134]
[-145.60020447 497.45034790]
[-149.62550354 482.97088623]
[-151.44767761 468.05322266]
[-151.02603149 453.03057861]
[-148.36997986 438.23855591]
[-143.53887939 424.00769043]
[-136.64064026 410.65582275]
[-127.82936859 398.48129272]
[-117.30192566 387.75607300]
[-105.29348755 378.71975708]
[-92.07233429 371.57421875]
[-77.93383026 366.47909546]
[-63.19382858 363.54821777]
[-48.18163300 362.84704590]
[-33.23261642 364.39126587]
[-18.68075180 368.14639282]
[-12.81179047 354.34219360]
[-6.94283009 340.53802490]
[-1.07386935 326.73385620]
[4.79509163 312.92965698]
[0.56245774 301.59780884]
[5.33901119 290.04928589]
[17.06811714 284.68356323]
[23.14195061 270.96829224]
[29.21578407 257.25302124]
[29.04997063 249.86424255]
[35.48350525 243.37983704]
[41.76086426 229.75651550]
[48.03822708 216.13319397]
[53.80426025 202.28572083]
[59.05097580 188.23324585]
[64.29769897 174.18077087]
[69.54441071 160.12829590]
[74.79113007 146.07583618]
[62.83484268 137.11091614]
[53.88740158 125.14154816]
[48.67318344 111.13674927]
[47.61432648 96.23032379]
[50.79655457 81.62909698]
[57.96223831 68.51515198]
[68.53125000 57.95018387]
[81.64793396 50.78952408]
[96.25038147 47.61288834]
[111.15639496 48.67745209]
[116.40311432 34.62498093]
[121.64983368 20.57250786]
[126.89655304 6.52003717]
[132.14326477 -7.53243399]
[137.38998413 -21.58490562]
[139.72547913 -36.40197372]
[139.05569458 -51.38701248]
[138.38591003 -66.37204742]
[137.71612549 -81.35708618]
[134.20663452 -89.79043579]
[137.14959717 -96.56987762]
[136.70298767 -111.56322479]
[136.25637817 -126.55657959]
[135.80978394 -141.54992676]
[125.58773804 -130.57221985]
[110.71681213 -128.60867310]
[97.99578857 -136.55697632]
[93.24053955 -150.78326416]
[98.62511444 -164.78349304]
[111.68774414 -172.15693665]
[126.45638275 -169.53254700]
[136.17965698 -158.10844421]
[137.29530334 -173.06689453]
[138.41094971 -188.02534485]
[139.52659607 -202.98379517]
[140.53085327 -217.95014954]
[141.42367554 -232.92355347]
[142.31649780 -247.89695740]
[143.20930481 -262.87036133]
[128.61152649 -266.50622559]
[114.93048096 -272.76272583]
[102.63215637 -281.42675781]
[92.13541412 -292.20327759]
[83.79777527 -304.72518921]
[77.90322113 -318.56604004]
[74.65250397 -333.25436401]
[74.15635681 -348.28994751]
[76.43167877 -363.16064453]
[81.40095520 -377.35995483]
[88.89495850 -390.40429688]
[98.65842438 -401.84936523]
[110.35882568 -411.30532837]
[123.59764862 -418.45013428]
[137.92398071 -423.04043579]
[152.84988403 -424.91986084]
[167.86695862 -424.02444458]
[182.46376038 -420.38467407]
[196.14311218 -414.12448120]
[208.43911743 -405.45712280]
[218.93295288 -394.67776489]
[227.26721191 -382.15362549]
[233.15803528 -368.31118774]
[236.40478516 -353.62194824]
[236.89688110 -338.58624268]
[234.61755371 -323.71618652]
[229.64445496 -309.51818848]
[222.14692688 -296.47586060]
[212.38038635 -285.03344727]
[200.67742920 -275.58062744]
[187.43667603 -268.43939209]
[173.10911560 -263.85296631]
[158.18270874 -261.97753906]
[157.28990173 -247.00413513]
[156.39707947 -232.03073120]
[155.50425720 -217.05732727]
[158.24406433 -210.19326782]
[154.48504639 -201.86814880]
[153.36940002 -186.90969849]
[152.25375366 -171.95124817]
[151.13810730 -156.99279785]
[150.80313110 -141.99653625]
[151.24974060 -127.00318146]
[151.69633484 -112.00983429]
[152.14294434 -97.01648712]
[152.70115662 -82.02687836]
[153.37094116 -67.04183960]
[154.04072571 -52.05679703]
[154.71051025 -37.07175827]
[160.73052979 -50.81072998]
[169.52731323 -62.96049118]
[180.70066833 -72.96829987]
[193.74226379 -80.37888336]
[208.05880737 -84.85509491]
[222.99899292 -86.19329834]
[237.88314819 -84.33262634]
[252.03411865 -79.35771179]
[264.80816650 -71.49488831]
[275.62411499 -61.10186386]
[283.98995972 -48.65144730]
[289.52505493 -34.71004868]
[291.97763062 -19.91191101]
[291.23611450 -4.93025112]
[287.33419800 9.55336666]
[280.44946289 22.88003349]
[270.89505005 34.44347382]
[259.10562134 43.71763229]
[245.61758423 50.28059387]
[231.04449463 53.83378601]
[216.04936218 54.21556854]
[201.31434631 51.40856552]
[187.50979614 45.54047775]
[175.26373291 36.87826920]
[165.13325500 25.81600761]
[157.57925415 12.85695457]
[152.94537354 -1.40934050]
[151.44245911 -16.33818626]
[146.19573975 -2.28571582]
[140.94902039 11.76675510]
[135.70230103 25.81922722]
[130.45558167 39.87169647]
[125.20886993 53.92416763]
[137.16516113 62.88908386]
[146.11259460 74.85845184]
[151.32681274 88.86325073]
[152.38566589 103.76967621]
[149.20344543 118.37090302]
[142.03776550 131.48484802]
[131.46875000 142.04981995]
[118.35206604 149.21047974]
[103.74961853 152.38711548]
[88.84360504 151.32255554]
[83.59688568 165.37501526]
[78.35016632 179.42749023]
[73.10344696 193.47996521]
[67.85672760 207.53244019]
[82.37871552 203.77584839]
[94.46118164 212.66482544]
[95.19738770 227.64674377]
[84.04462433 237.67750549]
[69.22429657 235.36277771]
[61.66154099 222.41056824]
[55.38418198 236.03387451]
[49.10681915 249.65719604]
[42.93105316 263.32687378]
[36.85721588 277.04214478]
[30.78338432 290.75738525]
[33.16891479 309.01638794]
[18.59926796 318.79864502]
[12.73030758 332.60281372]
[6.86134672 346.40698242]
[0.99238598 360.21115112]
[-4.87657499 374.01535034]
[7.92409086 381.88937378]
[19.40815353 391.58340454]
[29.31905174 402.88082886]
[37.43537521 415.52926636]
[43.57580185 429.24615479]
[47.60314941 443.72503662]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 204]
[35 203]
[36 202]
[37 201]
[38 200]
[41 198]
[42 197]
[43 196]
[45 195]
[46 194]
[47 193]
[48 187]
[49 186]
[50 185]
[51 184]
[52 183]
[62 173]
[63 172]
[64 171]
[65 170]
[66 169]
[67 168]
[68 140]
[69 139]
[70 138]
[71 137]
[73 136]
[74 135]
[75 134]
[76 133]
[84 132]
[85 131]
[86 130]
[87 129]
[88 127]
[89 126]
[90 125]
[91 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
