%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[84.19427490 629.74755859]
[80.25490570 644.66345215]
[68.86131287 655.06488037]
[53.64916229 657.63275146]
[39.47258759 651.54766846]
[30.85528374 638.75140381]
[30.54700089 623.32708740]
[38.64611053 610.19665527]
[52.56821823 603.54998779]
[54.35068512 588.65625000]
[56.13315201 573.76257324]
[57.91561508 558.86883545]
[51.74553299 545.31231689]
[61.06790161 532.52935791]
[48.43821716 524.59484863]
[40.47322845 511.91143799]
[38.79810715 496.96636963]
[43.79833221 482.71795654]
[54.53268051 472.00997925]
[68.90988159 467.00424194]
[70.69235229 452.11053467]
[72.47481537 437.21679688]
[74.25727844 422.32308960]
[76.03974915 407.42938232]
[77.60027313 392.51077271]
[78.93850708 377.57058716]
[80.27674103 362.63040161]
[81.61497498 347.69021606]
[82.17318726 332.70059204]
[81.94985962 317.70227051]
[81.72653198 302.70391846]
[81.50320435 287.70559692]
[81.27987671 272.70724487]
[80.94490051 257.71099854]
[80.49829102 242.71763611]
[70.27625275 253.69534302]
[55.40532684 255.65888977]
[42.68429947 247.71060181]
[37.92905426 233.48429871]
[43.31362534 219.48406982]
[56.37625885 212.11062622]
[71.14489746 214.73501587]
[80.86816406 226.15911865]
[81.98381042 211.20066833]
[83.09946442 196.24221802]
[84.21511078 181.28376770]
[85.33075714 166.32531738]
[82.69345856 159.42121887]
[86.57600403 151.15299988]
[87.91423798 136.21281433]
[85.94612885 133.28724670]
[85.29725647 129.26307678]
[86.46855164 124.77070618]
[89.66043091 120.64045715]
[91.66445160 105.77492523]
[89.53479004 98.00079346]
[93.81055450 90.70362854]
[96.03567505 75.86958313]
[86.91315460 63.24351883]
[89.38105774 48.23138809]
[101.47429657 39.61227036]
[103.69940948 24.77822685]
[105.92453003 9.94418335]
[108.14965057 -4.88986015]
[102.54508209 -19.68511009]
[112.08476257 -31.12381172]
[105.05986023 -41.94109344]
[107.21855927 -54.25059509]
[116.86637878 -61.54758072]
[119.31211090 -76.34685516]
[112.43016815 -93.42667389]
[124.08592224 -106.54576111]
[126.31103516 -121.37980652]
[128.53614807 -136.21385193]
[130.76127625 -151.04789734]
[132.87590027 -165.89808655]
[131.08471680 -169.85354614]
[130.68554688 -173.77848816]
[131.49784851 -177.23907471]
[133.21873474 -179.90461731]
[135.46725464 -181.57862854]
[138.35252380 -196.29850769]
[141.23780823 -211.01840210]
[144.12307739 -225.73829651]
[147.00834656 -240.45819092]
[149.89361572 -255.17808533]
[138.43360901 -265.30801392]
[133.61453247 -279.71887207]
[136.63563538 -294.50872803]
[146.58744812 -305.72555542]
[160.72235107 -310.42340088]
[163.60763550 -325.14331055]
[166.49290466 -339.86318970]
[169.37817383 -354.58306885]
[171.71366882 -369.40014648]
[173.49612427 -384.29385376]
[175.27859497 -399.18759155]
[177.06106567 -414.08129883]
[178.84352112 -428.97500610]
[164.95286560 -434.91018677]
[153.29788208 -444.51947021]
[144.82341003 -457.02386475]
[140.21640015 -471.40969849]
[139.85035706 -486.51077271]
[143.75492859 -501.10293579]
[151.61361694 -514.00323486]
[162.78932190 -524.16589355]
[176.37609863 -530.76715088]
[191.27252197 -533.27178955]
[206.27101135 -531.47674561]
[220.15570068 -525.52764893]
[231.80102539 -515.90667725]
[240.26293945 -503.39376831]
[244.85548401 -489.00329590]
[245.20635986 -473.90185547]
[241.28712463 -459.31362915]
[233.41549683 -446.42123413]
[222.22958374 -436.26977539]
[208.63618469 -429.68222046]
[193.73724365 -427.19256592]
[191.95477295 -412.29882812]
[190.17231750 -397.40512085]
[188.38984680 -382.51141357]
[186.60737610 -367.61767578]
[199.83276367 -374.69503784]
[213.67161560 -368.90829468]
[217.92243958 -354.52322388]
[209.45167542 -342.14395142]
[194.50367737 -340.89602661]
[184.09806824 -351.69781494]
[181.21279907 -336.97790527]
[178.32752991 -322.25802612]
[175.44224548 -307.53814697]
[186.75767517 -297.85171509]
[191.73851013 -283.70791626]
[188.95260620 -268.87197876]
[179.04974365 -257.34677124]
[164.61351013 -252.29280090]
[161.72824097 -237.57292175]
[158.84297180 -222.85302734]
[155.95768738 -208.13313293]
[153.07241821 -193.41323853]
[150.18714905 -178.69334412]
[147.74142456 -163.89407349]
[149.96310425 -156.84526062]
[145.59530640 -148.82278442]
[143.37019348 -133.98873901]
[141.14508057 -119.15469360]
[138.91996765 -104.32064819]
[145.85546875 -94.40977478]
[144.12307739 -82.03307343]
[134.11137390 -73.90112305]
[131.66564941 -59.10185623]
[138.72084045 -43.03352356]
[126.91880035 -28.89869308]
[132.68252563 -15.16447353]
[122.98368835 -2.66474271]
[120.75857544 12.16930103]
[118.53345490 27.00334549]
[116.30834198 41.83738708]
[125.34050751 53.62533188]
[123.29523468 68.70085907]
[110.86972046 78.09469604]
[108.64459991 92.92874146]
[106.52997589 107.77893829]
[104.52596283 122.64447021]
[102.85442352 137.55104065]
[101.51618958 152.49122620]
[100.28921509 167.44096375]
[99.17356110 182.39941406]
[98.05791473 197.35786438]
[96.94226837 212.31631470]
[95.82661438 227.27478027]
[95.49163818 242.27102661]
[95.93824768 257.26437378]
[99.32177734 265.74905396]
[96.27821350 272.48391724]
[96.50154114 287.48226929]
[96.72486877 302.48059082]
[96.94819641 317.47894287]
[97.17152405 332.47726440]
[107.55587006 321.65298462]
[122.45438385 319.91104126]
[135.05566406 328.04785156]
[139.59857178 342.34338379]
[134.00614929 356.26190186]
[120.83518982 363.44003296]
[106.10726166 360.59603882]
[96.55516052 349.02844238]
[95.21692657 363.96862793]
[93.87869263 378.90881348]
[92.54045868 393.84899902]
[94.97117615 399.99743652]
[94.06758118 405.60818481]
[90.93346405 409.21182251]
[89.15100098 424.10556030]
[87.36853027 438.99926758]
[85.58606720 453.89297485]
[83.80360413 468.78671265]
[96.59352875 477.04376221]
[104.49787140 489.98242188]
[105.99456024 505.00839233]
[100.84004211 519.13610840]
[90.10699463 529.58172607]
[75.96161652 534.31182861]
[82.00420380 548.93365479]
[72.80933380 560.65130615]
[71.02687073 575.54504395]
[69.24440002 590.43872070]
[67.46193695 605.33245850]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 210]
[10 209]
[11 208]
[12 207]
[14 205]
[20 199]
[21 198]
[22 197]
[23 196]
[24 195]
[25 192]
[26 191]
[27 190]
[28 189]
[29 181]
[30 180]
[31 179]
[32 178]
[33 177]
[34 175]
[35 174]
[43 173]
[44 172]
[45 171]
[46 170]
[47 169]
[49 168]
[50 167]
[54 166]
[55 165]
[57 164]
[58 163]
[61 160]
[62 159]
[63 158]
[64 157]
[66 155]
[69 153]
[70 152]
[72 149]
[73 148]
[74 147]
[75 146]
[76 144]
[81 143]
[82 142]
[83 141]
[84 140]
[85 139]
[86 138]
[91 133]
[92 132]
[93 131]
[94 130]
[95 124]
[96 123]
[97 122]
[98 121]
[99 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
