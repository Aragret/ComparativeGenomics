%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[81.26518250 516.41192627]
[83.35119629 531.49725342]
[79.11485291 546.12512207]
[69.29012299 557.76098633]
[55.57920456 564.38903809]
[40.35759735 564.86083984]
[26.26253700 559.09460449]
[15.73607540 548.08941650]
[10.60198784 533.75207520]
[11.74978447 518.56646729]
[18.98060417 505.16363525]
[31.04166222 495.86575317]
[45.84330750 492.28369141]
[48.50910187 477.52246094]
[51.17490005 462.76126099]
[53.84069443 448.00003052]
[56.50648880 433.23883057]
[54.60176468 426.09783936]
[59.32342529 418.27838135]
[62.20869827 403.55850220]
[57.06399536 389.58059692]
[67.31129456 377.52642822]
[70.19656372 362.80651855]
[56.48141861 368.88064575]
[43.11130524 362.08062744]
[39.94216919 347.41921997]
[49.31018829 335.70428467]
[64.30960083 335.57159424]
[73.88299561 347.11737061]
[77.85508728 332.65286255]
[81.82718658 318.18832397]
[85.79928589 303.72381592]
[89.77137756 289.25927734]
[92.21710968 274.46002197]
[93.10992432 259.48660278]
[94.00273895 244.51319885]
[94.89555359 229.53979492]
[95.00722504 214.54020691]
[94.33743286 199.55517578]
[86.03955078 187.18608093]
[93.15292358 173.05418396]
[92.48313904 158.06915283]
[91.81335449 143.08410645]
[79.91889954 152.22314453]
[65.32172394 148.77024841]
[58.78232574 135.27075195]
[65.12129974 121.67600250]
[79.66579437 118.00752258]
[91.69337463 126.96813965]
[92.13998413 111.97478485]
[85.68240356 99.57352448]
[92.86666870 87.57860565]
[93.31327820 72.58525848]
[93.75988007 57.59190750]
[94.20648956 42.59855652]
[94.65309143 27.60520744]
[92.17735291 23.00979805]
[91.75421143 18.38656807]
[93.05052948 14.52203751]
[95.46931458 11.95652771]
[96.58496094 -3.00192547]
[94.10249329 -11.79255486]
[97.83020020 -18.17424393]
[99.16843414 -33.11442947]
[100.50667572 -48.05461502]
[101.84490967 -62.99480057]
[103.18314362 -77.93498230]
[96.70788574 -92.37041473]
[105.54980469 -104.35664368]
[106.88803864 -119.29682922]
[100.41278076 -133.73225403]
[109.25469971 -145.71849060]
[110.59293365 -160.65867615]
[109.58867645 -175.62501526]
[106.26641083 -190.25248718]
[102.94415283 -204.87994385]
[99.62189484 -219.50740051]
[89.02024078 -231.25114441]
[93.74649048 -245.37600708]
[90.42423248 -260.00347900]
[87.10197449 -274.63092041]
[77.02104950 -263.52349854]
[62.04259872 -264.32723999]
[53.20817184 -276.44964600]
[57.03018188 -290.95455933]
[70.69118500 -297.14947510]
[84.11977386 -290.46902466]
[81.89466095 -305.30307007]
[79.66954041 -320.13711548]
[77.44442749 -334.97116089]
[62.47797012 -337.01614380]
[48.69445801 -343.19604492]
[37.21125412 -353.00994873]
[28.95925522 -365.66229248]
[24.60741043 -380.12734985]
[24.50850677 -395.23254395]
[28.67055893 -409.75335693]
[36.75617218 -422.51263428]
[48.10987473 -432.47607422]
[61.81128311 -438.83596802]
[76.74967957 -441.07672119]
[91.71407318 -439.01675415]
[105.49137115 -432.82296753]
[116.96470642 -422.99752808]
[125.20399475 -410.33694458]
[129.54130554 -395.86749268]
[129.62503052 -380.76220703]
[125.44839478 -366.24560547]
[117.34996796 -353.49441528]
[105.98625946 -343.54241943]
[92.27847290 -337.19628906]
[94.50358582 -322.36224365]
[96.72870636 -307.52819824]
[98.95381927 -292.69415283]
[101.72943115 -277.95318604]
[105.05168915 -263.32574463]
[108.37394714 -248.69827271]
[118.73797607 -238.00077820]
[114.24935150 -222.82966614]
[117.57161713 -208.20220947]
[120.89387512 -193.57473755]
[124.21613312 -178.94728088]
[127.85227203 -193.49989319]
[135.23176575 -206.55911255]
[145.82188416 -217.18217468]
[158.85810852 -224.60218811]
[173.39935303 -228.28350830]
[188.39587402 -227.96037292]
[202.76506042 -223.65611267]
[215.46957397 -215.68145752]
[225.59226990 -204.61209106]
[232.40240479 -191.24711609]
[235.40830994 -176.55139160]
[234.39302063 -161.58578491]
[229.42980957 -147.43069458]
[220.87699890 -135.10798645]
[209.35198975 -125.50724030]
[195.68681335 -119.32154083]
[180.86795044 -116.99745178]
[165.96519470 -118.70273590]
[152.05439758 -124.31429291]
[140.13978577 -133.42703247]
[131.08146667 -145.38307190]
[125.53311920 -159.32044983]
[124.19488525 -144.38026428]
[130.76585388 -131.01345825]
[121.82822418 -117.95859528]
[120.48999023 -103.01840973]
[127.06096649 -89.65160370]
[118.12332153 -76.59674835]
[116.78508759 -61.65656662]
[115.44685364 -46.71638107]
[114.10861969 -31.77619553]
[112.77038574 -16.83600998]
[111.54341125 -1.88627672]
[110.42776489 13.07217693]
[109.64643860 28.05181313]
[109.19983673 43.04516220]
[108.75322723 58.03851318]
[108.30662537 73.03186035]
[107.86001587 88.02521515]
[114.31759644 100.42647552]
[107.13333130 112.42139435]
[106.68672180 127.41474152]
[106.79839325 142.41432190]
[107.46817780 157.39936829]
[108.13796234 172.38439941]
[116.48375702 185.82531738]
[109.32247162 198.88539124]
[109.99226379 213.87042236]
[120.04972076 202.74174500]
[134.88977051 200.55700684]
[147.72772217 208.31503296]
[152.69424438 222.46894836]
[147.51872253 236.54780579]
[134.56730652 244.11491394]
[119.76123810 241.71069336]
[109.86895752 230.43261719]
[108.97614288 245.40602112]
[108.08332825 260.37942505]
[107.19051361 275.35284424]
[115.56539154 262.90850830]
[128.02236938 254.55242920]
[142.71351624 251.52421570]
[157.45950317 254.27304077]
[170.07283020 262.39117432]
[178.68240356 274.67428589]
[182.01103210 289.30032349]
[179.56494141 304.09951782]
[171.70698547 316.87655640]
[159.60285950 325.73602295]
[145.04812622 329.36364746]
[130.20190430 327.22134399]
[117.26652527 319.62686157]
[108.16089630 307.70681763]
[104.23590088 293.23138428]
[100.26380920 307.69589233]
[96.29170990 322.16043091]
[92.31961823 336.62493896]
[88.34751892 351.08947754]
[84.91645813 365.69180298]
[82.03118134 380.41168213]
[86.96951294 395.44244385]
[76.92858887 406.44375610]
[74.04331970 421.16366577]
[71.26770782 435.90463257]
[68.60191345 450.66583252]
[65.93611908 465.42706299]
[63.27032089 480.18826294]
[60.60452652 494.94949341]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 210]
[14 209]
[15 208]
[16 207]
[17 206]
[19 205]
[20 204]
[22 202]
[23 201]
[29 200]
[30 199]
[31 198]
[32 197]
[33 196]
[34 181]
[35 180]
[36 179]
[37 178]
[38 170]
[39 169]
[41 167]
[42 166]
[43 165]
[49 164]
[50 163]
[52 161]
[53 160]
[54 159]
[55 158]
[56 157]
[60 156]
[61 155]
[63 154]
[64 153]
[65 152]
[66 151]
[67 150]
[69 148]
[70 147]
[72 145]
[73 144]
[74 122]
[75 121]
[76 120]
[77 119]
[79 117]
[80 116]
[81 115]
[87 114]
[88 113]
[89 112]
[90 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
