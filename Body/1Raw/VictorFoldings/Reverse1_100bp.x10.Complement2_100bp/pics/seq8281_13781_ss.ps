%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[15.46443558 497.07308960]
[14.12620163 482.13290405]
[12.78796768 467.19271851]
[11.44973278 452.25253296]
[10.11149883 437.31234741]
[8.55097580 422.39376831]
[6.76851034 407.50003052]
[4.98604441 392.60632324]
[3.20357823 377.71261597]
[-1.87497842 391.82672119]
[-10.38978863 404.17572021]
[-21.77609634 413.94055176]
[-35.27868652 420.47357178]
[-50.00198364 423.34140015]
[-64.96944427 422.35388184]
[-79.18832397 417.57650757]
[-91.71554565 409.32614136]
[-101.72021484 398.14996338]
[-108.53876495 384.78930664]
[-111.71894073 370.13031006]
[-111.04981995 355.14523315]
[-106.57576752 340.82800293]
[-98.59355164 328.12823486]
[-87.63259125 317.88824463]
[-74.41988373 310.78723145]
[-59.83179474 307.29617310]
[-44.83588791 307.64657593]
[-30.42679214 311.81527710]
[-17.56021118 319.52572632]
[-7.08953810 330.26654053]
[0.29074410 343.32531738]
[4.09177828 357.84100342]
[7.19588852 343.16567993]
[10.29999828 328.49038696]
[13.40410900 313.81509399]
[16.50821877 299.13977051]
[19.61232948 284.46447754]
[22.71643829 269.78918457]
[25.82054901 255.11387634]
[16.37337875 266.76510620]
[4.05916119 275.33013916]
[-10.15095425 280.13354492]
[-25.13629723 280.79647827]
[-39.71506119 277.26666260]
[-52.73750687 269.82244873]
[-63.17662811 259.05099487]
[-70.20915222 245.80169678]
[-73.28045654 231.11949158]
[-72.14834595 216.16227722]
[-66.90208435 202.10963440]
[-57.95541763 190.06982422]
[-46.01391983 180.99234009]
[-32.01935196 175.59307861]
[-17.07537651 174.29785156]
[-2.36054158 177.20880127]
[10.96468067 184.09635925]
[21.84940910 194.41734314]
[29.43522453 207.35778809]
[33.12388229 221.89718628]
[32.62387466 236.89228821]
[39.89710617 223.77359009]
[47.17033386 210.65489197]
[54.44356537 197.53619385]
[60.72092438 183.91288757]
[65.96764374 169.86041260]
[71.21436310 155.80793762]
[68.41757965 141.17826843]
[80.49316406 130.95619202]
[85.73988342 116.90372467]
[90.98660278 102.85125732]
[89.94609070 97.71011353]
[91.86013031 92.35196686]
[96.60440063 88.46238708]
[102.26718903 74.57236481]
[107.92997742 60.68233490]
[113.59275818 46.79230881]
[119.25554657 32.90227890]
[124.39750671 18.81114006]
[129.01152039 4.53840637]
[132.87582397 -9.95528698]
[128.16181946 -25.05789566]
[138.36543274 -35.90850449]
[141.46954346 -50.58380890]
[144.57365417 -65.25910950]
[147.67776489 -79.93441010]
[140.57078552 -98.79848480]
[154.10725403 -112.60612488]
[156.77305603 -127.36734009]
[159.43884277 -142.12855530]
[162.10464478 -156.88977051]
[164.77043152 -171.65100098]
[159.60887146 -186.60655212]
[169.48489380 -197.75614929]
[170.93431091 -212.68595886]
[171.15763855 -227.68429565]
[171.38096619 -242.68263245]
[171.60429382 -257.68096924]
[171.82762146 -272.67932129]
[172.05094910 -287.67764282]
[172.27427673 -302.67599487]
[158.79896545 -309.93371582]
[150.24960327 -322.62887573]
[148.59078979 -337.84420776]
[154.20370483 -352.08337402]
[165.79853821 -362.07431030]
[180.71087646 -365.52114868]
[195.51397705 -361.63183594]
[206.80621338 -351.30010986]
[211.99267578 -336.90014648]
[209.88159180 -321.74093628]
[200.95803833 -309.30593872]
[187.27261353 -302.45266724]
[187.04928589 -287.45431519]
[186.82595825 -272.45599365]
[186.60263062 -257.45764160]
[186.37930298 -242.45930481]
[186.15597534 -227.46096802]
[185.93264771 -212.46263123]
[194.57406616 -224.72337341]
[207.88116455 -231.64587402]
[222.88111877 -231.68362427]
[236.22288513 -224.82817078]
[244.92590332 -212.61106873]
[247.04586792 -197.76162720]
[242.10917664 -183.59727478]
[231.21871948 -173.28233337]
[216.80744934 -169.12120056]
[202.09484863 -172.04350281]
[190.36779785 -181.39636230]
[184.24610901 -195.09036255]
[189.59834290 -181.19061279]
[179.53166199 -168.98519897]
[176.86585999 -154.22398376]
[174.20005798 -139.46276855]
[171.53427124 -124.70154572]
[168.86846924 -109.94033051]
[175.42620850 -102.10393524]
[176.61297607 -91.73379517]
[171.79704285 -82.22658539]
[162.35305786 -76.83029938]
[159.24894714 -62.15499878]
[156.14483643 -47.47969818]
[153.04072571 -32.80439377]
[157.97676086 -18.75146103]
[147.55111694 -6.85117674]
[160.07496643 -15.10667229]
[174.98927307 -13.50556087]
[185.47541809 -2.77984905]
[186.73927307 12.16681194]
[178.20301819 24.50101089]
[163.76931763 28.58371544]
[150.03707886 22.54837227]
[143.28425598 9.15241528]
[138.67024231 23.42514801]
[153.00999451 19.02386856]
[165.47732544 27.36447144]
[166.88177490 42.29857635]
[156.18803406 52.81731796]
[141.27912903 51.16667175]
[133.14556885 38.56506729]
[127.48278809 52.45509338]
[121.81999969 66.34512329]
[116.15721130 80.23514557]
[110.49443054 94.12517548]
[105.03907013 108.09796906]
[99.79235077 122.15044403]
[94.54563141 136.20291138]
[96.96714020 151.83770752]
[85.26683044 161.05465698]
[80.02011108 175.10713196]
[74.77339935 189.15960693]
[87.30013275 180.90847778]
[102.26802063 179.92752075]
[115.76449585 186.47314453]
[124.26161194 198.83433533]
[125.53823853 213.77992249]
[119.26066589 227.40313721]
[107.06984711 236.14292908]
[92.15242767 237.71472168]
[78.40778351 231.70767212]
[69.42873383 219.69198608]
[67.56225586 204.80943298]
[60.28902817 217.92811584]
[53.01580048 231.04681396]
[45.74256897 244.16551208]
[40.49585342 258.21798706]
[37.39174271 272.89328003]
[34.28763199 287.56857300]
[31.18352127 302.24389648]
[28.07941055 316.91918945]
[24.97530174 331.59448242]
[21.87119102 346.26980591]
[18.76708031 360.94509888]
[18.09729576 375.93014526]
[19.87976074 390.82385254]
[21.66222763 405.71755981]
[23.44469261 420.61129761]
[27.09515572 426.12359619]
[27.37221527 431.79989624]
[25.05168343 435.97412109]
[26.38991737 450.91430664]
[27.72815323 465.85449219]
[29.06638718 480.79467773]
[30.40462112 495.73486328]
[43.33531189 504.52868652]
[47.53846741 519.59082031]
[41.02948761 533.80932617]
[26.88171387 540.47076416]
[11.77528954 536.42974854]
[2.84300876 523.59429932]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 204]
[2 203]
[3 202]
[4 201]
[5 200]
[6 197]
[7 196]
[8 195]
[9 194]
[32 193]
[33 192]
[34 191]
[35 190]
[36 189]
[37 188]
[38 187]
[39 186]
[60 185]
[61 184]
[62 183]
[63 182]
[64 171]
[65 170]
[66 169]
[68 167]
[69 166]
[70 165]
[73 164]
[74 163]
[75 162]
[76 161]
[77 160]
[78 154]
[79 153]
[80 145]
[82 143]
[83 142]
[84 141]
[85 140]
[87 136]
[88 135]
[89 134]
[90 133]
[91 132]
[93 130]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
