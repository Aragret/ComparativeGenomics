%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGUCCCAACUAAGCCCUCCUAGGAUAACCACGCCCCCGAAACAUACUAAUACCCGCAACUAAUCAUCAUCAAUGACCAACUUGUAACAAACAACCACAUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[45.79761887 601.35498047]
[45.30191040 616.44329834]
[40.75270462 630.83795166]
[32.48759079 643.47088623]
[21.11989403 653.40460205]
[7.49316931 659.90185547]
[-7.38138771 662.48065186]
[-22.39998627 660.94958496]
[-36.44814682 655.42218018]
[-48.48340225 646.30871582]
[-57.61265945 634.28546143]
[-63.15846252 620.24456787]
[-64.70927429 605.22796631]
[-62.15002441 590.35003662]
[-55.67061615 576.71484375]
[-45.75186920 565.33410645]
[-33.12981796 557.05236816]
[-18.74110603 552.48431396]
[-3.65346837 551.96875000]
[-0.11379591 537.39239502]
[3.31726503 522.79010010]
[6.63952446 508.16262817]
[9.96178436 493.53515625]
[13.28404331 478.90768433]
[16.60630417 464.28024292]
[19.92856216 449.65277100]
[23.14183617 435.00097656]
[18.20581245 420.94805908]
[28.63144302 409.04776001]
[31.73555374 394.37246704]
[34.83966446 379.69717407]
[37.94377518 365.02185059]
[33.00775146 350.96893311]
[43.43338013 339.06863403]
[46.53749084 324.39334106]
[49.64160156 309.71804810]
[52.74571228 295.04272461]
[55.63098526 280.32284546]
[58.29677963 265.56164551]
[60.96257401 250.80041504]
[63.62837219 236.03919983]
[66.29416656 221.27798462]
[68.95996094 206.51675415]
[63.60771561 192.61701965]
[73.67440796 180.41160583]
[71.73554230 176.04699707]
[72.51790619 170.41806030]
[76.64559937 165.25340271]
[79.74971008 150.57809448]
[82.85382080 135.90278625]
[81.43953705 133.48246765]
[80.89876556 130.35610962]
[81.50521851 126.85359192]
[83.40825653 123.39773560]
[86.60427094 120.45843506]
[90.57636261 105.99390411]
[94.44067383 91.50021362]
[98.19697571 76.97815704]
[101.95326996 62.45609665]
[105.70957184 47.93403625]
[109.46587372 33.41197586]
[113.22217560 18.88991737]
[105.46270752 5.38331032]
[109.47900391 -9.29061317]
[122.40331268 -16.60484123]
[126.15960693 -31.12689972]
[118.40014648 -44.63350677]
[122.41644287 -59.30743027]
[135.34074402 -66.62165833]
[139.09704590 -81.14371490]
[142.85334778 -95.66577911]
[146.60964966 -110.18783569]
[150.36595154 -124.70989227]
[154.12225342 -139.23194885]
[146.36277771 -152.73855591]
[150.37907410 -167.41249084]
[163.30339050 -174.72671509]
[167.05967712 -189.24877930]
[170.81597900 -203.77082825]
[174.57228088 -218.29289246]
[178.32858276 -232.81495667]
[182.08488464 -247.33700562]
[185.07966614 -262.03500366]
[187.30477905 -276.86904907]
[185.48300171 -285.81997681]
[189.67503357 -291.90673828]
[192.12077332 -306.70599365]
[194.56649780 -321.50527954]
[189.18283081 -336.38232422]
[198.89175415 -347.67773438]
[201.33747864 -362.47698975]
[203.78320312 -377.27627563]
[206.22894287 -392.07553101]
[208.12222290 -406.95556641]
[209.46046448 -421.89575195]
[210.79869080 -436.83593750]
[204.32344055 -451.27139282]
[213.16535950 -463.25759888]
[199.10414124 -468.77658081]
[187.16822815 -478.03457642]
[178.32519531 -490.28109741]
[173.29191589 -504.52340698]
[172.47642517 -519.60687256]
[175.94480896 -534.30883789]
[183.41590881 -547.43737793]
[194.28408813 -557.92828369]
[207.66828918 -564.93115234]
[222.48355103 -567.87817383]
[237.52882385 -566.53051758]
[251.58448792 -560.99743652]
[263.51110840 -551.72747803]
[272.34182739 -539.47204590]
[277.36077881 -525.22473145]
[278.16113281 -510.14041138]
[274.67797852 -495.44195557]
[267.19369507 -482.32092285]
[256.31497192 -471.84091187]
[242.92375183 -464.85153198]
[228.10554504 -461.91937256]
[234.67651367 -448.55258179]
[225.73887634 -435.49771118]
[224.40065002 -420.55752563]
[223.06240845 -405.61734009]
[236.07121277 -413.08535767]
[250.07621765 -407.71319580]
[254.75344849 -393.46105957]
[246.65502930 -380.83508301]
[231.75082397 -379.14263916]
[221.02821350 -389.62982178]
[218.58247375 -374.83053589]
[216.13674927 -360.03128052]
[213.69102478 -345.23199463]
[219.24961853 -331.41348267]
[209.36576843 -319.05953979]
[206.92004395 -304.26028442]
[204.47430420 -289.46099854]
[202.13882446 -274.64395142]
[199.91371155 -259.80990601]
[211.92398071 -268.79620361]
[226.90713501 -268.08563232]
[238.01309204 -258.00308228]
[240.16433716 -243.15814209]
[232.37736511 -230.33772278]
[218.21228027 -225.40315247]
[204.14514160 -230.61044312]
[196.60694885 -243.58070374]
[192.85064697 -229.05865479]
[189.09434509 -214.53659058]
[185.33804321 -200.01452637]
[181.58174133 -185.49247742]
[177.82543945 -170.97041321]
[185.58224487 -158.30677795]
[181.97969055 -143.52583313]
[168.64430237 -135.47564697]
[164.88800049 -120.95359802]
[161.13171387 -106.43153381]
[157.37541199 -91.90947723]
[153.61911011 -77.38742065]
[149.86280823 -62.86535645]
[157.61959839 -50.20172119]
[154.01704407 -35.42077637]
[140.68167114 -27.37059975]
[136.92536926 -12.84854031]
[144.68215942 -0.18490317]
[141.07962036 14.59603977]
[127.74423218 22.64621925]
[123.98793030 37.16827774]
[120.23163605 51.69033813]
[116.47533417 66.21239471]
[112.71903229 80.73445892]
[108.96273041 95.25651550]
[110.15348816 103.22863007]
[105.04089355 109.96600342]
[101.06879425 124.43052673]
[97.52912140 139.00689697]
[94.42501068 153.68220520]
[91.32089996 168.35751343]
[88.43563080 183.07739258]
[93.59719849 198.03295898]
[83.72117615 209.18255615]
[81.05538177 223.94377136]
[78.38958740 238.70498657]
[75.72379303 253.46620178]
[73.05799866 268.22741699]
[70.39220428 282.98864746]
[72.26469421 289.32940674]
[70.86413574 294.83715820]
[67.42101288 298.14685059]
[64.31690216 312.82214355]
[61.21279526 327.49746704]
[58.10868454 342.17276001]
[62.82268143 357.27536011]
[52.61907578 368.12597656]
[49.51496506 382.80126953]
[46.41085815 397.47659302]
[43.30674744 412.15188599]
[48.02074432 427.25448608]
[37.81713867 438.10510254]
[39.10291672 447.14859009]
[34.55602264 452.97503662]
[31.23376274 467.60250854]
[27.91150475 482.22994995]
[24.58924484 496.85742188]
[21.26698494 511.48486328]
[17.94472504 526.11236572]
[19.09571648 535.17395020]
[14.46257973 540.93206787]
[10.92290688 555.50842285]
[24.09378242 562.88616943]
[34.78495026 573.54455566]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 208]
[20 207]
[21 205]
[22 204]
[23 203]
[24 202]
[25 201]
[26 200]
[27 198]
[29 196]
[30 195]
[31 194]
[32 193]
[34 191]
[35 190]
[36 189]
[37 188]
[38 185]
[39 184]
[40 183]
[41 182]
[42 181]
[43 180]
[45 178]
[48 177]
[49 176]
[50 175]
[55 174]
[56 173]
[57 171]
[58 170]
[59 169]
[60 168]
[61 167]
[62 166]
[65 163]
[66 162]
[69 159]
[70 158]
[71 157]
[72 156]
[73 155]
[74 154]
[77 151]
[78 150]
[79 149]
[80 148]
[81 147]
[82 146]
[83 138]
[84 137]
[86 136]
[87 135]
[88 134]
[90 132]
[91 131]
[92 130]
[93 129]
[94 123]
[95 122]
[96 121]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
