%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUA\
) } def
/len { sequence length } bind def

/coor [
[138.18165588 556.60949707]
[128.07827759 545.51531982]
[118.71420288 533.79046631]
[110.12872314 521.48400879]
[102.35784149 508.64761353]
[95.43416595 495.33517456]
[89.38671875 481.60244751]
[84.24087524 467.50711060]
[80.01821136 453.10821533]
[76.73645020 438.46618652]
[74.40935516 423.64242554]
[73.04667664 408.69912720]
[72.65413666 393.69897461]
[73.23337555 378.70486450]
[74.78197479 363.77969360]
[77.29343414 348.98605347]
[80.75721741 334.38601685]
[85.15879822 320.04083252]
[90.47972107 306.01062012]
[96.69765472 292.35424805]
[103.78652191 279.12902832]
[111.71659851 266.39038086]
[120.45461273 254.19177246]
[129.96391296 242.58436584]
[140.20463562 231.61683655]
[151.13378906 221.33518982]
[162.70556641 211.78254700]
[153.92497253 199.62109375]
[145.14436340 187.45964050]
[136.36375427 175.29817200]
[127.58315277 163.13671875]
[126.18620300 178.07153320]
[116.36446381 189.40878296]
[101.78120422 192.91998291]
[87.87561798 187.29551697]
[79.83413696 174.63317871]
[80.65605164 159.65571594]
[90.03479767 147.94934082]
[104.47233582 143.88024902]
[118.58474731 148.96682739]
[111.31151581 135.84812927]
[104.03828430 122.72943115]
[96.76506042 109.61074066]
[90.41305542 104.64842224]
[89.48285675 96.24214172]
[81.53617096 83.52010345]
[72.75556946 71.35865021]
[63.97496796 59.19719315]
[55.19436264 47.03573608]
[46.41376114 34.87428284]
[37.63315582 22.71282578]
[24.70433617 30.33976936]
[11.12693691 36.74124146]
[-2.98320198 41.86263275]
[-17.50569534 45.66024017]
[-32.31663895 48.10166550]
[-47.28967285 49.16608047]
[-62.29704285 48.84440231]
[-77.21070862 47.13937759]
[-91.90344238 44.06555176]
[-106.24987030 39.64915085]
[-120.12760162 33.92785645]
[-133.41822815 26.95047569]
[-146.00836182 18.77654457]
[-157.79058838 9.47579861]
[-168.66436768 -0.87240869]
[-178.53695679 -12.17978859]
[-187.32409668 -24.34986877]
[-194.95082092 -37.27881622]
[-201.35206604 -50.85632324]
[-206.47322083 -64.96654510]
[-210.27058411 -79.48910522]
[-212.71176147 -94.30008698]
[-213.77592468 -109.27313995]
[-213.45401001 -124.28050232]
[-211.74873352 -139.19413757]
[-208.67465210 -153.88682556]
[-204.25802612 -168.23316956]
[-198.53648376 -182.11080933]
[-191.55888367 -195.40132141]
[-183.38475037 -207.99131775]
[-174.08380127 -219.77339172]
[-163.73541260 -230.64700317]
[-152.42787170 -240.51939392]
[-140.25764465 -249.30633545]
[-127.32857513 -256.93283081]
[-113.75096130 -263.33386230]
[-99.64064789 -268.45477295]
[-85.11803436 -272.25189209]
[-70.30700684 -274.69284058]
[-55.33393860 -275.75674438]
[-40.32658005 -275.43457031]
[-25.41296577 -273.72906494]
[-10.72034073 -270.65475464]
[3.62594175 -266.23785400]
[17.50348091 -260.51611328]
[30.79387856 -253.53828430]
[43.38373947 -245.36393738]
[55.16565323 -236.06278992]
[66.03909302 -225.71421814]
[75.91130066 -214.40650940]
[84.69802856 -202.23614502]
[92.32432556 -189.30694580]
[98.72512054 -175.72921753]
[103.84580231 -161.61882019]
[107.64268494 -147.09614563]
[110.08337402 -132.28507996]
[111.14704132 -117.31198883]
[110.82461548 -102.30463409]
[109.11884308 -87.39105225]
[106.04428101 -72.69847870]
[101.62716675 -58.35226822]
[95.90517426 -44.47482681]
[88.92713165 -31.18454361]
[80.75257111 -18.59481812]
[71.45123291 -6.81306076]
[61.10248566 4.06020927]
[49.79461288 13.93222237]
[58.57521439 26.09367752]
[67.35581970 38.25513458]
[76.13642120 50.41659164]
[84.91702271 62.57804489]
[93.69763184 74.73950195]
[94.36930084 59.75454712]
[102.94871521 47.45033264]
[116.77743530 41.63945007]
[131.57049561 44.12247086]
[142.74409485 54.12999725]
[146.83598328 68.56108856]
[142.57823181 82.94412231]
[131.29016113 92.82234955]
[116.46949768 95.13489532]
[102.70838165 89.16503906]
[109.88375092 102.33750916]
[117.15698242 115.45620728]
[124.43020630 128.57490540]
[131.70344543 141.69358826]
[139.74461365 154.35612488]
[148.52522278 166.51757812]
[157.30581665 178.67903137]
[166.08642578 190.84048462]
[174.86701965 203.00193787]
[187.57574463 195.02400208]
[200.77421570 187.88543701]
[214.40708923 181.61616516]
[228.41717529 176.24250793]
[242.74572754 171.78700256]
[257.33264160 168.26831055]
[272.11669922 165.70121765]
[287.03594971 164.09649658]
[302.02777100 163.46084595]
[317.02929688 163.79695129]
[331.97763062 165.10340881]
[346.81002808 167.37472534]
[361.46429443 170.60139465]
[375.87896729 174.76985168]
[389.99359131 179.86264038]
[403.74893188 185.85838318]
[417.08734131 192.73193359]
[429.95285034 200.45446777]
[442.29150391 208.99359131]
[454.05154419 218.31349182]
[465.18365479 228.37507629]
[475.64111328 239.13612366]
[485.38006592 250.55152893]
[494.35968018 262.57339478]
[502.54229736 275.15130615]
[509.89358521 288.23248291]
[516.38269043 301.76211548]
[521.98248291 315.68338013]
[526.66931152 329.93792725]
[530.42364502 344.46594238]
[533.22973633 359.20654297]
[535.07574463 374.09783936]
[535.95404053 389.07742310]
[535.86077881 404.08242798]
[534.79644775 419.04992676]
[532.76556396 433.91714478]
[529.77655029 448.62173462]
[525.84191895 463.10198975]
[520.97833252 477.29721069]
[515.20599365 491.14782715]
[508.54928589 504.59573364]
[501.03601074 517.58459473]
[492.69772339 530.05981445]
[483.56942749 541.96917725]
[473.68936157 553.26269531]
[463.09899902 563.89300537]
[451.84274292 573.81549072]
[439.96780396 582.98852539]
[427.52398682 591.37365723]
[414.56350708 598.93572998]
[401.14071655 605.64300537]
[387.31192017 611.46734619]
[373.13510132 616.38439941]
[358.66973877 620.37341309]
[343.97653198 623.41772461]
[329.11703491 625.50457764]
[314.15365601 626.62518311]
[299.14910889 626.77484131]
[284.16632080 625.95294189]
[269.26818848 624.16296387]
[254.51715088 621.41235352]
[239.97509766 617.71270752]
[225.70301819 613.07946777]
[211.76077271 607.53210449]
[198.20684814 601.09393311]
[185.09809875 593.79193115]
[172.48950195 585.65667725]
[160.43394470 576.72235107]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 142]
[28 141]
[29 140]
[30 139]
[31 138]
[40 137]
[41 136]
[42 135]
[43 134]
[45 133]
[46 123]
[47 122]
[48 121]
[49 120]
[50 119]
[51 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
