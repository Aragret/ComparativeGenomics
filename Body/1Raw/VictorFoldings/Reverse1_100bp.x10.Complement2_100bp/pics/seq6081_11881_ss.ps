%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[61.75545120 618.83404541]
[53.61932755 631.49102783]
[43.23468399 642.37939453]
[30.97691727 651.10540771]
[17.28914070 657.35369873]
[2.66615844 660.89837646]
[-12.36341858 661.61132812]
[-27.25628090 659.46679688]
[-41.47406006 654.54223633]
[-54.50279236 647.01568604]
[-65.87149811 637.15930176]
[-75.16920471 625.32928467]
[-82.05980682 611.95330811]
[-86.29421234 597.51495361]
[-87.71935272 582.53613281]
[-86.28370667 567.55828857]
[-82.03917694 553.12292480]
[-75.13919067 539.75177002]
[-65.83319092 527.92828369]
[-54.45756912 518.07989502]
[-41.42356110 510.56246948]
[-27.20233154 505.64788818]
[-12.30796814 503.51379395]
[2.72110534 504.23727417]
[6.26077795 489.66088867]
[9.80045033 475.08453369]
[13.34012222 460.50814819]
[16.87979507 445.93176270]
[19.98390579 431.25646973]
[22.64970016 416.49526978]
[20.74497414 409.35424805]
[25.46663666 401.53482056]
[28.35190964 386.81491089]
[31.23718262 372.09503174]
[34.12245560 357.37515259]
[37.00772858 342.65524292]
[28.51093102 330.47576904]
[31.22731781 315.50659180]
[44.05989838 306.67694092]
[46.94517136 291.95706177]
[49.83044434 277.23718262]
[52.71571732 262.51727295]
[51.26555634 260.11828613]
[50.67829514 257.00030518]
[51.23253632 253.48915100]
[53.08391571 250.00534058]
[56.23580933 247.01878357]
[59.99211121 232.49673462]
[63.64019775 217.94711304]
[67.17987061 203.37072754]
[70.71954346 188.79435730]
[59.12221146 179.41526794]
[52.72084045 165.87525940]
[52.83352661 150.83702087]
[59.49147797 137.28372192]
[71.42221069 127.92720032]
[86.29238129 124.66539001]
[89.83205414 110.08901978]
[86.08058929 96.61986542]
[95.59156799 86.37131500]
[99.13124084 71.79493713]
[102.34452057 57.14315033]
[105.22978973 42.42325592]
[98.69491577 31.30308533]
[101.40110779 19.10225296]
[111.36513519 12.24334240]
[114.46924591 -2.43196011]
[117.57335663 -17.10726166]
[120.67746735 -31.78256416]
[119.18544769 -35.86029053]
[119.07929993 -39.80405045]
[120.14673615 -43.19462585]
[122.06111908 -45.72478867]
[124.42791748 -47.22692490]
[128.40000916 -61.69145203]
[132.37211609 -76.15597534]
[136.12841797 -90.67803192]
[139.66809082 -105.25440979]
[143.20774841 -119.83078766]
[146.74742126 -134.40716553]
[150.28709412 -148.98353577]
[153.82676697 -163.55990601]
[157.04005432 -178.21170044]
[152.10171509 -193.24244690]
[162.14263916 -204.24377441]
[165.02790833 -218.96366882]
[167.91319275 -233.68354797]
[170.79846191 -248.40344238]
[173.68373108 -263.12332153]
[165.25767517 -271.51013184]
[161.96008301 -282.80731201]
[164.49911499 -294.17602539]
[172.13111877 -302.81710815]
[182.87333679 -306.66040039]
[186.19558716 -321.28787231]
[189.51785278 -335.91531372]
[175.67933655 -341.80899048]
[163.11567688 -350.07907104]
[152.23075867 -360.45974731]
[143.37446594 -372.61727905]
[136.83149719 -386.16088867]
[132.81219482 -400.65521240]
[131.44575500 -415.63427734]
[132.77610779 -430.61660767]
[136.76048279 -445.12054443]
[143.27078247 -458.67987061]
[152.09776306 -470.85873413]
[162.95764160 -481.26559448]
[175.50134277 -489.56591797]
[189.32562256 -495.49291992]
[203.98608398 -498.85601807]
[219.01147461 -499.54714966]
[233.91876221 -497.54406738]
[248.22875977 -492.91116333]
[261.48144531 -485.79739380]
[273.25082397 -476.43139648]
[283.15853882 -465.11428833]
[290.88610840 -452.20986938]
[296.18511963 -438.13290405]
[298.88522339 -423.33596802]
[298.89962769 -408.29470825]
[296.22787476 -393.49264526]
[290.95584106 -379.40557861]
[283.25299072 -366.48635864]
[273.36697388 -355.15029907]
[261.61557007 -345.76177979]
[248.37652588 -338.62265015]
[234.07542419 -333.96234131]
[219.17198181 -331.93072510]
[204.14530945 -332.59304810]
[200.82304382 -317.96560669]
[197.50079346 -303.33813477]
[208.17141724 -288.46356201]
[204.51818848 -270.19973755]
[188.40362549 -260.23806763]
[185.51835632 -245.51817322]
[182.63307190 -230.79827881]
[179.74780273 -216.07838440]
[176.86253357 -201.35850525]
[182.00723267 -187.38061523]
[171.75993347 -175.32643127]
[173.41300964 -172.21199036]
[173.63970947 -168.14215088]
[172.00740051 -163.79600525]
[168.40315247 -160.02023315]
[164.86347961 -145.44386292]
[161.32380676 -130.86749268]
[157.78413391 -116.29111481]
[154.24446106 -101.71473694]
[150.70478821 -87.13835907]
[152.38043213 -82.66608429]
[151.26441956 -77.09369659]
[146.83663940 -72.18387604]
[142.86453247 -57.71935272]
[138.89244080 -43.25482941]
[135.35276794 -28.67845535]
[132.24865723 -14.00315189]
[129.14454651 0.67215008]
[126.04043579 15.34745216]
[132.37110901 31.71478653]
[119.94968414 45.30852890]
[117.06440735 60.02841949]
[118.71747589 63.14285660]
[118.94417572 67.21269989]
[117.31187439 71.55883789]
[113.70761871 75.33460999]
[110.16794586 89.91098022]
[113.91941071 103.38013458]
[104.40843201 113.62868500]
[100.86875916 128.20506287]
[112.58686066 137.92346191]
[118.89768982 151.70971680]
[118.59822083 166.80708313]
[111.80141449 180.22215271]
[99.90314484 189.31835938]
[85.29592133 192.33403015]
[81.75624847 206.91040039]
[78.21657562 221.48678589]
[79.23252106 230.56454468]
[74.51416779 236.25303650]
[70.75786591 250.77508545]
[67.43560791 265.40255737]
[64.55033875 280.12243652]
[61.66506195 294.84234619]
[58.77979279 309.56222534]
[67.32942963 322.58303833]
[64.19365692 337.47000122]
[51.72761917 345.54052734]
[48.84234619 360.26040649]
[45.95707321 374.98031616]
[43.07180023 389.70019531]
[40.18652725 404.42007446]
[37.41091919 419.16104126]
[34.74512100 433.92227173]
[36.35789108 437.95376587]
[36.58141327 441.89260864]
[35.61539841 445.31347656]
[33.77719498 447.89950562]
[31.45617104 449.47143555]
[27.91649818 464.04782104]
[24.37682533 478.62420654]
[20.83715248 493.20056152]
[17.29748154 507.77694702]
[30.98456001 514.02679443]
[43.24135208 522.75415039]
[53.62478256 533.64367676]
[61.75949478 546.30157471]
[67.35142517 560.27038574]
[70.19843292 575.04504395]
[70.19759369 590.09149170]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 203]
[25 202]
[26 201]
[27 200]
[28 199]
[29 194]
[30 193]
[32 192]
[33 191]
[34 190]
[35 189]
[36 188]
[39 185]
[40 184]
[41 183]
[42 182]
[47 181]
[48 180]
[49 178]
[50 177]
[51 176]
[57 170]
[58 169]
[60 167]
[61 166]
[62 162]
[63 161]
[66 159]
[67 158]
[68 157]
[69 156]
[74 155]
[75 154]
[76 153]
[77 150]
[78 149]
[79 148]
[80 147]
[81 146]
[82 145]
[83 141]
[85 139]
[86 138]
[87 137]
[88 136]
[89 135]
[94 132]
[95 131]
[96 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
