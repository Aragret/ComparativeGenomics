%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[60.03427887 560.42095947]
[47.10766983 568.15728760]
[32.78350449 572.82269287]
[17.78027534 574.18316650]
[2.85054421 572.17053223]
[-11.25682449 566.88562012]
[-23.83420944 558.59362793]
[-34.25073624 547.71044922]
[-41.98391342 534.78198242]
[-46.64585114 520.45666504]
[-48.00270462 505.45312500]
[-45.98641968 490.52386475]
[-40.69812775 476.41778564]
[-32.40308762 463.84240723]
[-21.51737976 453.42852783]
[-8.58702278 445.69848633]
[5.73940134 441.04000854]
[20.74328613 439.68679810]
[22.74729919 424.82125854]
[24.64059067 409.94122314]
[26.42305756 395.04751587]
[28.20552254 380.15380859]
[29.98798943 365.26007080]
[16.76260185 372.33743286]
[2.92375708 366.55068970]
[-1.32706261 352.16561890]
[7.14368868 339.78634644]
[22.09168816 338.53842163]
[32.49730301 349.34020996]
[35.38257599 334.62030029]
[38.26784897 319.90042114]
[36.81768799 317.50143433]
[36.23042679 314.38345337]
[36.78466415 310.87231445]
[38.63604355 307.38848877]
[41.78793716 304.40194702]
[45.54423904 289.87988281]
[49.30054092 275.35781860]
[53.05684280 260.83575439]
[56.81314087 246.31369019]
[49.05634689 233.65005493]
[52.65889740 218.86911011]
[65.99427795 210.81893921]
[69.75057983 196.29687500]
[73.50688171 181.77482605]
[77.04654694 167.19844055]
[80.36881256 152.57098389]
[83.69107056 137.94352722]
[87.01332855 123.31606293]
[90.33558655 108.68860626]
[93.22086334 93.96871185]
[95.66658783 79.16944122]
[98.11231232 64.37017059]
[100.55804443 49.57089996]
[101.67369080 34.61244583]
[93.73178864 20.92900085]
[101.27873993 8.08794212]
[101.05541229 -6.91039562]
[87.22097015 -10.89774895]
[75.08469391 -18.61418533]
[65.62583160 -29.42644501]
[59.60461044 -42.45190811]
[57.50110245 -56.63064575]
[59.47700119 -70.81165314]
[65.36320496 -83.84630585]
[74.67424774 -94.68138885]
[86.64834595 -102.44418335]
[100.30969238 -106.51277161]
[100.30969238 -121.51277161]
[100.30969238 -136.51277161]
[100.30969238 -151.51277161]
[100.30969238 -166.51277161]
[90.43465424 -155.22190857]
[75.83501434 -151.77946472]
[61.95607376 -157.46936035]
[53.97434235 -170.16944885]
[54.86680222 -185.14286804]
[64.30059052 -196.80493164]
[78.75713348 -200.80596924]
[92.84450531 -195.65368652]
[101.30879211 -183.26864624]
[103.09125519 -198.16235352]
[104.87372589 -213.05607605]
[106.65618896 -227.94979858]
[108.43865967 -242.84350586]
[102.39606476 -257.46533203]
[111.59094238 -269.18298340]
[113.37340546 -284.07672119]
[115.15587616 -298.97042847]
[100.66609192 -302.95840454]
[86.93256378 -309.06149292]
[74.26210785 -317.14340210]
[62.93778229 -327.02355957]
[53.21257401 -338.48123169]
[45.30375290 -351.26043701]
[39.38800430 -365.07568359]
[35.59748459 -379.61837769]
[34.01688004 -394.56359863]
[34.68149567 -409.57745361]
[37.57649231 -424.32452393]
[42.63718796 -438.47540283]
[49.75052643 -451.71389771]
[58.75759125 -463.74429321]
[69.45716858 -474.29782104]
[81.61021423 -483.13870239]
[94.94523621 -490.06942749]
[109.16432190 -494.93515015]
[123.94980621 -497.62719727]
[138.97137451 -498.08538818]
[153.89346313 -496.29953003]
[168.38267517 -492.30950928]
[182.11532593 -486.20443726]
[194.78463745 -478.12072754]
[206.10754395 -468.23898315]
[215.83113098 -456.77993774]
[223.73812866 -443.99960327]
[229.65190125 -430.18347168]
[233.44035339 -415.64025879]
[235.01882935 -400.69482422]
[234.35208130 -385.68106079]
[231.45498657 -370.93438721]
[226.39227295 -356.78424072]
[219.27705383 -343.54675293]
[210.26826477 -331.51763916]
[199.56718445 -320.96563721]
[187.41288757 -312.12649536]
[174.07687378 -305.19766235]
[159.85710144 -300.33395386]
[145.07122803 -297.64404297]
[130.04959106 -297.18795776]
[128.26712036 -282.29425049]
[126.48465729 -267.40054321]
[132.65473938 -253.84400940]
[123.33237457 -241.06105042]
[121.54991150 -226.16732788]
[119.76744080 -211.27360535]
[117.98497772 -196.37989807]
[116.20250702 -181.48617554]
[115.30969238 -166.51277161]
[115.30969238 -151.51277161]
[115.30969238 -136.51277161]
[115.30969238 -121.51277161]
[115.30969238 -106.51277161]
[130.25610352 -101.82967377]
[143.03961182 -92.74577332]
[152.40191650 -80.14051056]
[157.41688538 -65.24063873]
[157.58222961 -49.50087738]
[152.86975098 -34.46185684]
[143.72929382 -21.59933090]
[131.04582214 -12.17936611]
[116.05374908 -7.13372326]
[116.27707672 7.86461449]
[124.20301056 20.47527885]
[116.67202759 34.38911819]
[124.61251068 21.66320801]
[137.24169922 13.56978321]
[152.12110901 11.67155933]
[166.37774658 16.33505440]
[177.25889587 26.65981865]
[182.66355896 40.65230179]
[181.54818726 55.61077499]
[174.12814331 68.64699554]
[161.83612061 77.24386597]
[147.04551697 79.74147034]
[132.61216736 75.65756226]
[121.32291412 65.78067017]
[115.35731506 52.01662827]
[112.91158295 66.81589508]
[110.46585846 81.61516571]
[108.02013397 96.41443634]
[109.57867432 99.03369141]
[110.21862030 102.27791595]
[109.70666504 105.80797577]
[107.93803406 109.20330048]
[104.96305084 112.01086426]
[101.64079285 126.63832092]
[98.31852722 141.26577759]
[94.99626923 155.89324951]
[91.67401123 170.52070618]
[93.26150513 176.93875122]
[91.61640930 182.37849426]
[88.02893829 185.53111267]
[84.27263641 200.05317688]
[80.51633453 214.57524109]
[88.27580261 228.08184814]
[84.25950623 242.75576782]
[71.33519745 250.06999207]
[67.57890320 264.59207153]
[63.82260132 279.11410522]
[60.06629944 293.63616943]
[56.30999756 308.15823364]
[52.98773956 322.78570557]
[50.10246658 337.50558472]
[47.21719360 352.22546387]
[44.88170624 367.04254150]
[43.09923935 381.93624878]
[41.31677628 396.82998657]
[39.53430939 411.72369385]
[41.62177658 420.61639404]
[37.61282730 426.82528687]
[35.60881424 441.69079590]
[49.71874237 446.96884155]
[62.30014420 455.25473022]
[72.72194672 466.13287354]
[80.46138763 479.05761719]
[85.13026428 493.38064575]
[86.49439240 508.38354492]
[84.48533630 523.31378174]
[79.20388031 537.42242432]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 202]
[19 201]
[20 199]
[21 198]
[22 197]
[23 196]
[29 195]
[30 194]
[31 193]
[36 192]
[37 191]
[38 190]
[39 189]
[40 188]
[43 185]
[44 184]
[45 183]
[46 180]
[47 179]
[48 178]
[49 177]
[50 176]
[51 171]
[52 170]
[53 169]
[54 168]
[55 155]
[57 153]
[58 152]
[68 143]
[69 142]
[70 141]
[71 140]
[72 139]
[81 138]
[82 137]
[83 136]
[84 135]
[85 134]
[87 132]
[88 131]
[89 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
