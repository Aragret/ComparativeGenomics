%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[64.48976135 672.40332031]
[50.28684998 677.99255371]
[35.06600571 676.85736084]
[21.84934616 669.22302246]
[13.26104736 656.60540771]
[11.00632095 641.50976562]
[15.53284645 626.93328857]
[25.94187737 615.77020264]
[40.16669083 610.23693848]
[41.28234100 595.27844238]
[42.39799118 580.32000732]
[35.62873077 567.05249023]
[44.37100983 553.86602783]
[35.91040802 538.49121094]
[46.40433884 523.35980225]
[47.29715347 508.38641357]
[48.18996811 493.41302490]
[49.08278656 478.43960571]
[47.32511902 476.25585938]
[46.32655716 473.24429321]
[46.40673447 469.69058228]
[47.77607727 465.99066162]
[50.50070953 462.60977173]
[52.28317261 447.71606445]
[54.06563950 432.82232666]
[55.84810638 417.92861938]
[57.63057327 403.03491211]
[59.41303635 388.14117432]
[49.38420868 381.30029297]
[43.17886734 370.78237915]
[42.02748108 358.55227661]
[46.20965195 346.92520142]
[54.98945618 338.12838745]
[66.74417114 333.87463379]
[60.98045349 320.14041138]
[70.67928314 307.64068604]
[72.90440369 292.80664062]
[75.12951660 277.97259521]
[77.35463715 263.13854980]
[79.24793243 248.25852966]
[80.80844879 233.33992004]
[82.36897278 218.42131042]
[83.92949677 203.50271606]
[82.27109528 201.24266052]
[81.40800476 198.18951416]
[81.64678192 194.64291382]
[83.17996979 191.00782776]
[86.05284882 187.75198364]
[88.49857330 172.95271301]
[90.94429779 158.15344238]
[93.39002991 143.35415649]
[95.83575439 128.55488586]
[95.38915253 113.56154633]
[86.03180695 103.17252350]
[89.98339081 89.76071930]
[86.66113281 75.13325500]
[83.33887482 60.50579453]
[80.01660919 45.87833405]
[67.19596100 32.66044998]
[73.03649902 16.11188507]
[69.49682617 1.53551042]
[58.72150421 -10.04908848]
[63.23693085 -24.24275589]
[59.69725800 -38.81912994]
[54.63114929 -46.41994476]
[56.21511459 -53.63886642]
[45.61346054 -65.38260651]
[50.33971024 -79.50747681]
[47.01745224 -94.13493347]
[36.41579819 -105.87867737]
[41.14204788 -120.00354767]
[30.54039383 -131.74728394]
[35.26664352 -145.87214661]
[31.06251526 -150.97477722]
[30.19642830 -156.59144592]
[32.07010269 -160.98443604]
[29.18482971 -175.70433044]
[26.29955673 -190.42422485]
[23.41428375 -205.14411926]
[20.52901077 -219.86401367]
[17.64373970 -234.58389282]
[14.75846672 -249.30378723]
[11.87319374 -264.02368164]
[8.98792076 -278.74356079]
[-1.41923904 -267.94122314]
[-16.36712074 -269.19055176]
[-24.83670044 -281.57061768]
[-20.58452034 -295.95529175]
[-6.74512959 -301.74072266]
[6.47860813 -294.66345215]
[4.69614220 -309.55715942]
[-10.20279217 -312.04681396]
[-23.79619598 -318.63439941]
[-34.98210907 -328.78585815]
[-42.85374451 -341.67825317]
[-46.77297974 -356.26647949]
[-46.42210388 -371.36791992]
[-41.82955551 -385.75836182]
[-33.36763763 -398.27127075]
[-21.72231674 -407.89224243]
[-7.83762789 -413.84136963]
[7.16086006 -415.63638306]
[22.05728531 -413.13174438]
[35.64406586 -406.53051758]
[46.81977463 -396.36782837]
[54.67845535 -383.46752930]
[58.58303070 -368.87539673]
[58.21698380 -353.77429199]
[53.60998535 -339.38845825]
[45.13549805 -326.88406372]
[33.48051834 -317.27481079]
[19.58985901 -311.33963013]
[21.37232590 -296.44592285]
[23.70781326 -281.62884521]
[26.59308434 -266.90896606]
[29.47835732 -252.18905640]
[32.36363220 -237.46917725]
[35.24890137 -222.74928284]
[38.13417435 -208.02938843]
[41.01944733 -193.30949402]
[43.90472031 -178.58959961]
[46.78999329 -163.86972046]
[49.89410400 -149.19441223]
[60.25812531 -138.49691772]
[55.76950836 -123.32580566]
[66.13352966 -112.62831116]
[61.64490891 -97.45719147]
[64.96717072 -82.82973480]
[75.33119202 -72.13224792]
[70.84257507 -56.96112442]
[74.27363586 -42.35880280]
[77.81330872 -27.78242683]
[88.33544922 -17.24042892]
[84.07320404 -2.00416207]
[87.61287689 12.57221317]
[97.77670288 19.13141632]
[100.84496307 31.24626732]
[94.64407349 42.55607605]
[97.96633148 57.18353653]
[101.28858948 71.81099701]
[104.61084747 86.43845367]
[113.96819305 96.82747650]
[110.01660919 110.23928070]
[113.50091553 95.64957428]
[120.10321045 82.18073273]
[129.50137329 70.48993683]
[141.23681641 61.14760590]
[154.73696899 54.60957336]
[169.34312439 51.19484329]
[184.34260559 51.07002640]
[199.00355530 54.24121475]
[212.61064148 60.55368042]
[224.49993896 69.69941711]
[234.09135437 81.23219299]
[240.91687012 94.58930206]
[244.64349365 109.11900330]
[245.08937073 124.11237335]
[242.23274231 138.83786011]
[236.21301270 152.57695007]
[227.32386780 164.65930176]
[215.99905396 174.49539185]
[202.79112244 181.60528564]
[188.34452820 185.64207458]
[173.36413574 186.40881348]
[158.58088684 183.86805725]
[144.71606445 178.14381409]
[132.44619751 169.51535034]
[122.36994171 158.40370178]
[114.97894287 145.35099792]
[110.63502502 131.00062561]
[108.18930054 145.79989624]
[105.74356842 160.59916687]
[103.29784393 175.39843750]
[100.85211945 190.19770813]
[98.84810638 205.06323242]
[97.28758240 219.98184204]
[95.72705841 234.90043640]
[94.16653442 249.81904602]
[96.29362488 254.58586121]
[96.37173462 259.22775269]
[94.79157257 262.98516846]
[92.18868256 265.36367798]
[89.96356201 280.19772339]
[87.73844910 295.03176880]
[85.51332855 309.86581421]
[91.11788940 324.66107178]
[81.57821655 336.09976196]
[94.87719727 348.42431641]
[98.08761597 366.10971069]
[90.10974884 382.04095459]
[74.30675507 389.92364502]
[72.52429199 404.81735229]
[70.74182129 419.71109009]
[68.95935822 434.60479736]
[67.17689514 449.49850464]
[65.39442444 464.39224243]
[64.05619049 479.33242798]
[63.16337585 494.30581665]
[62.27056122 509.27923584]
[61.37774277 524.25262451]
[69.33969879 534.40008545]
[68.28781128 546.85308838]
[59.32946396 554.98168945]
[66.01892090 569.31909180]
[57.35644150 581.43566895]
[56.24079514 596.39410400]
[55.12514496 611.35253906]
[68.37176514 618.93475342]
[77.00968933 631.51843262]
[79.32384491 646.60510254]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 207]
[10 206]
[11 205]
[13 203]
[15 200]
[16 199]
[17 198]
[18 197]
[23 196]
[24 195]
[25 194]
[26 193]
[27 192]
[28 191]
[34 187]
[36 185]
[37 184]
[38 183]
[39 182]
[40 178]
[41 177]
[42 176]
[43 175]
[48 174]
[49 173]
[50 172]
[51 171]
[52 170]
[53 143]
[55 141]
[56 140]
[57 139]
[58 138]
[60 135]
[61 134]
[63 132]
[64 131]
[66 130]
[68 128]
[69 127]
[71 125]
[73 123]
[76 122]
[77 121]
[78 120]
[79 119]
[80 118]
[81 117]
[82 116]
[83 115]
[84 114]
[90 113]
[91 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
