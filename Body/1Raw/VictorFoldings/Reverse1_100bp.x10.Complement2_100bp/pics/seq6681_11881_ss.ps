%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[121.01093292 635.14978027]
[125.23949432 620.21997070]
[137.45677185 610.65344238]
[136.78698730 595.66845703]
[136.11720276 580.68341064]
[135.44741821 565.69836426]
[127.14952850 553.32928467]
[134.26290894 539.19738770]
[133.59312439 524.21234131]
[132.81179810 509.23269653]
[131.91897583 494.25927734]
[131.02616882 479.28588867]
[130.13334656 464.31246948]
[129.12908936 449.34613037]
[128.01344299 434.38766479]
[119.35095978 422.27111816]
[126.04042053 407.93371582]
[124.92477417 392.97525024]
[123.80912018 378.01678467]
[122.69347382 363.05834961]
[121.57782745 348.09988403]
[112.91534424 335.98333740]
[119.60480499 321.64593506]
[118.48915863 306.68746948]
[117.37350464 291.72900391]
[116.25785828 276.77056885]
[115.14221191 261.81210327]
[114.02656555 246.85365295]
[112.91091156 231.89520264]
[111.79526520 216.93675232]
[110.01280212 202.04302979]
[107.56707001 187.24375916]
[105.12134552 172.44448853]
[102.67561340 157.64521790]
[100.11978149 142.86456299]
[97.45398712 128.10334778]
[94.78819275 113.34213257]
[85.90407562 102.54564667]
[90.45059204 89.32366180]
[76.74796295 74.53851318]
[84.07012177 56.64234161]
[80.96601105 41.96703720]
[77.86190033 27.29173470]
[74.75778961 12.61643314]
[70.63009644 7.45177364]
[69.84773254 1.82283735]
[71.78659821 -2.54177308]
[69.12080383 -17.30298996]
[66.45500946 -32.06420898]
[62.16088867 -46.43642044]
[56.29192734 -60.24059677]
[50.42296600 -74.04477692]
[44.55400467 -87.84895325]
[32.03402328 -97.52162170]
[34.17477036 -112.26158905]
[28.30580902 -126.06576538]
[22.43684769 -139.86993408]
[16.56788635 -153.67411804]
[15.50589657 -138.71176147]
[10.32556629 -124.63468170]
[1.43543875 -112.55305481]
[-10.46337318 -103.41969299]
[-24.43247986 -97.95489502]
[-39.37022018 -96.58962250]
[-54.09853745 -99.43156433]
[-67.45590210 -106.25657654]
[-78.38888550 -116.52642822]
[-86.03528595 -129.43118286]
[-89.79205322 -143.95312500]
[-89.36293030 -158.94697571]
[-84.78175354 -173.23028564]
[-76.40981293 -185.67658997]
[-64.90735626 -195.30433655]
[-51.18151474 -201.35423279]
[-36.31476212 -203.34916687]
[-21.47955894 -201.13179016]
[-7.84586763 -194.87699890]
[3.51110220 -185.07806396]
[11.69715786 -172.50460815]
[10.02561760 -187.41119385]
[8.24315166 -202.30490112]
[6.46068573 -217.19862366]
[4.67821980 -232.09234619]
[2.89575386 -246.98605347]
[-7.20255947 -235.89443970]
[-22.17901611 -235.05435181]
[-33.45442200 -244.94703674]
[-34.56970978 -259.90551758]
[-24.88599777 -271.36090088]
[-9.95055008 -272.75100708]
[1.68047249 -263.28036499]
[1.23386657 -278.27371216]
[-7.60164690 -287.67034912]
[-7.66495752 -300.16754150]
[0.53246808 -309.06295776]
[0.30914032 -324.06130981]
[0.08581261 -339.05963135]
[-0.13751510 -354.05798340]
[-0.36084282 -369.05630493]
[-14.04627228 -375.90960693]
[-22.96981621 -388.34460449]
[-25.08090973 -403.50381470]
[-19.89443779 -417.90377808]
[-8.60221577 -428.23550415]
[6.20088863 -432.12478638]
[21.11322975 -428.67797852]
[32.70805740 -418.68704224]
[38.32097244 -404.44787598]
[36.66216278 -389.23251343]
[28.11280823 -376.53735352]
[14.63749504 -369.27963257]
[14.86082268 -354.28131104]
[15.08415031 -339.28295898]
[15.30747795 -324.28463745]
[15.53080559 -309.28628540]
[25.32934189 -294.72760010]
[16.22721672 -278.72033691]
[16.67382240 -263.72698975]
[17.78947067 -248.76852417]
[19.57193756 -233.87480164]
[21.35440254 -218.98109436]
[23.13686943 -204.08737183]
[24.91933441 -189.19364929]
[28.83539963 -182.92578125]
[26.61576271 -174.06513977]
[30.37206459 -159.54307556]
[36.24102402 -145.73890686]
[42.10998535 -131.93472290]
[47.97894669 -118.13054657]
[60.07913971 -109.44524384]
[58.35818100 -93.71791077]
[64.22714233 -79.91373444]
[70.09609985 -66.10955811]
[75.96506500 -52.30538177]
[77.69631195 -67.20513916]
[84.62851715 -80.50718689]
[95.84962463 -90.46141815]
[109.88330841 -95.75817871]
[124.88320160 -95.70058441]
[138.87579346 -90.29621887]
[150.02014160 -80.25611877]
[156.84999084 -66.90122986]
[158.46678162 -51.98861694]
[154.65777588 -37.48029327]
[145.92411804 -25.28507614]
[133.41488647 -17.00745583]
[118.77587128 -13.73649788]
[103.93308258 -15.90255165]
[90.83936310 -23.22063637]
[81.21622467 -34.73000336]
[83.88202667 -19.96878624]
[86.54782104 -5.20756865]
[89.43309021 9.51232243]
[92.53720093 24.18762589]
[95.64131165 38.86292648]
[98.74542236 53.53823090]
[107.77629089 58.31907272]
[112.79016113 67.47381592]
[111.91975403 78.09561920]
[105.21180725 86.65786743]
[114.09592438 97.45435333]
[109.54940796 110.67633820]
[112.21520996 125.43755341]
[114.88100433 140.19877625]
[119.48571777 148.08764648]
[117.47488403 155.19949341]
[119.92061615 169.99876404]
[122.36634064 184.79803467]
[124.81207275 199.59730530]
[134.40504456 188.06582642]
[149.32905579 186.55784607]
[161.03494263 195.93719482]
[162.81704712 210.83094788]
[153.65451050 222.70730591]
[138.79602051 224.76293945]
[126.75371552 215.82110596]
[127.86936951 230.77955627]
[128.98501587 245.73800659]
[130.10066223 260.69647217]
[131.21630859 275.65490723]
[132.33195496 290.61337280]
[133.44761658 305.57180786]
[134.56326294 320.53027344]
[143.30554199 333.71673584]
[136.53628540 346.98425293]
[137.65193176 361.94268799]
[138.76757812 376.90115356]
[139.88322449 391.85961914]
[140.99887085 406.81805420]
[149.74114990 420.00454712]
[142.97189331 433.27203369]
[144.08753967 448.23046875]
[147.84655762 456.55560303]
[145.10675049 463.41964722]
[145.99957275 478.39306641]
[146.89239502 493.36645508]
[147.78520203 508.33987427]
[151.41984558 516.72003174]
[148.57815552 523.54254150]
[149.24794006 538.52758789]
[157.59373474 551.96850586]
[150.43244934 565.02856445]
[151.10224915 580.01361084]
[151.77203369 594.99865723]
[152.44181824 609.98370361]
[165.46385193 618.42205811]
[171.00752258 632.91503906]
[166.94117737 647.88983154]
[154.82838440 657.58831787]
[139.32679749 658.28118896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 205]
[4 204]
[5 203]
[6 202]
[8 200]
[9 199]
[10 197]
[11 196]
[12 195]
[13 194]
[14 192]
[15 191]
[17 189]
[18 188]
[19 187]
[20 186]
[21 185]
[23 183]
[24 182]
[25 181]
[26 180]
[27 179]
[28 178]
[29 177]
[30 176]
[31 169]
[32 168]
[33 167]
[34 166]
[35 164]
[36 163]
[37 162]
[39 160]
[41 156]
[42 155]
[43 154]
[44 153]
[47 152]
[48 151]
[49 150]
[50 134]
[51 133]
[52 132]
[53 131]
[55 129]
[56 128]
[57 127]
[58 126]
[79 125]
[80 123]
[81 122]
[82 121]
[83 120]
[84 119]
[91 118]
[92 117]
[95 115]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
