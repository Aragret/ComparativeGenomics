%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[149.42375183 649.69091797]
[146.96499634 664.69171143]
[138.94860840 677.60705566]
[126.59702301 686.46746826]
[111.79378510 689.92181396]
[96.79626465 687.44329834]
[83.89147949 679.40991211]
[75.04732513 667.04669189]
[71.61245728 652.23895264]
[74.11067200 637.24468994]
[82.16101074 624.35046387]
[94.53585815 615.52258301]
[109.34813690 612.10723877]
[111.79386139 597.30792236]
[114.23959351 582.50866699]
[116.68531799 567.70941162]
[119.13104248 552.91015625]
[120.91351318 538.01641846]
[122.02915955 523.05798340]
[121.91749573 508.05838013]
[120.57926178 493.11819458]
[119.24102783 478.17800903]
[116.21559143 474.48263550]
[115.47945404 468.84747314]
[118.09215546 462.77413940]
[117.19934082 447.80072021]
[116.30652618 432.82733154]
[115.41371155 417.85391235]
[114.52088928 402.88052368]
[106.03977203 390.63635254]
[112.94194794 376.40011597]
[98.54345703 365.09527588]
[96.95341492 346.53765869]
[109.64682770 332.47381592]
[108.30858612 317.53363037]
[106.97035217 302.59344482]
[105.63211823 287.65325928]
[104.29388428 272.71310425]
[102.95565033 257.77291870]
[101.61741638 242.83271790]
[91.48497009 237.58869934]
[85.07585144 228.00544739]
[84.07844543 216.39944458]
[88.85578918 205.64408875]
[98.32679749 198.45822144]
[97.43398285 183.48480225]
[96.54116058 168.51139832]
[95.64834595 153.53799438]
[94.75553131 138.56459045]
[93.86271667 123.59118652]
[92.96990204 108.61778259]
[82.22930908 119.08867645]
[67.22940063 119.03585815]
[56.56280518 108.48958588]
[56.33983994 93.49124908]
[66.68821716 82.63256073]
[81.67993164 82.13388824]
[92.72663116 92.28002167]
[93.17323303 77.28667450]
[93.61984253 62.29332352]
[94.06644440 47.29997253]
[94.51305389 32.30662155]
[93.28607941 17.35688782]
[90.40080261 2.63699698]
[87.51553345 -12.08289433]
[84.63025665 -26.80278587]
[81.74498749 -41.52267838]
[78.53171539 -56.17446518]
[74.99204254 -70.75083923]
[69.92592621 -78.35165405]
[71.50989532 -85.57057190]
[68.18763733 -100.19803619]
[64.86537170 -114.82549286]
[54.38740158 -122.34712219]
[51.92141724 -134.59875488]
[58.25471497 -144.90487671]
[47.82908249 -156.80516052]
[52.76511002 -170.85809326]
[42.33947754 -182.75837708]
[47.27550125 -196.81130981]
[44.17139053 -211.48661804]
[41.06727982 -226.16191101]
[37.96316910 -240.83721924]
[34.85906219 -255.51251221]
[19.80271339 -255.52192688]
[5.07742357 -258.66192627]
[-8.67308235 -264.79522705]
[-20.84769249 -273.65368652]
[-30.91418266 -284.85009766]
[-38.43249130 -297.89495850]
[-43.07394791 -312.21804810]
[-44.63565063 -327.19317627]
[-43.04932785 -342.16574097]
[-38.38432312 -356.48117065]
[-30.84457779 -369.51364136]
[-20.75969124 -380.69348145]
[-8.57053280 -389.53192139]
[5.19003916 -395.64260864]
[19.92047119 -398.75839233]
[34.97681427 -398.74304199]
[49.70086670 -395.59725952]
[63.44895935 -389.45855713]
[75.62008667 -380.59530640]
[85.68216705 -369.39492798]
[93.19534302 -356.34710693]
[97.83116913 -342.02218628]
[99.38697815 -327.04644775]
[97.79476166 -312.07452393]
[93.12413025 -297.76092529]
[85.57925415 -284.73141479]
[75.48997498 -273.55554199]
[63.29733658 -264.72189331]
[49.53436279 -258.61663818]
[52.63847351 -243.94132996]
[55.74258423 -229.26602173]
[58.84669495 -214.59071350]
[61.95080185 -199.91542053]
[72.15441132 -189.06480408]
[67.44041443 -173.96220398]
[77.64401245 -163.11158752]
[72.93001556 -148.00898743]
[85.34596252 -135.60691833]
[79.49283600 -118.14775848]
[82.81509399 -103.52029419]
[86.13735199 -88.89283752]
[89.56841278 -74.29051208]
[93.10808563 -59.71413803]
[95.91280365 -57.57733536]
[97.82188416 -53.97588348]
[98.15821075 -49.34553146]
[96.46487427 -44.40795135]
[99.35015106 -29.68805885]
[102.23542023 -14.96816730]
[105.12069702 -0.24827567]
[108.00596619 14.47161579]
[112.78310394 0.25265107]
[122.31798553 -11.32690144]
[135.35614014 -18.74355316]
[150.18215942 -21.02151489]
[164.84542847 -17.86108208]
[177.41676331 -9.67806530]
[186.24215698 2.45092130]
[190.16050720 16.93009949]
[188.65626526 31.85448456]
[181.92733765 45.26051712]
[170.85905457 55.38440323]
[156.90762329 60.89416885]
[141.90859985 61.06491470]
[127.83535767 55.87417221]
[116.53947449 46.00487518]
[109.50640106 32.75322723]
[109.05979919 47.74657822]
[108.61318970 62.73992920]
[108.16658020 77.73327637]
[107.71997833 92.72663116]
[107.94330597 107.72496796]
[108.83612061 122.69837189]
[109.72893524 137.67178345]
[110.62174988 152.64518738]
[111.51457214 167.61859131]
[112.40738678 182.59199524]
[113.30020142 197.56539917]
[127.93942261 209.59068298]
[129.11982727 228.17884827]
[116.55760193 241.49449158]
[117.89583588 256.43466187]
[119.23406982 271.37484741]
[120.57230377 286.31503296]
[121.91053772 301.25521851]
[123.24877167 316.19540405]
[124.58700562 331.13558960]
[135.01919556 336.83700562]
[141.33914185 346.76470947]
[142.07441711 358.39025879]
[137.15779114 368.81823730]
[127.91535950 375.50729370]
[136.46034241 388.82244873]
[129.49429321 401.98770142]
[130.38711548 416.96109009]
[131.27992249 431.93450928]
[132.17274475 446.90792847]
[133.06556702 461.88131714]
[134.18121338 476.83978271]
[135.51943970 491.77996826]
[136.85768127 506.72015381]
[144.17665100 493.62692261]
[156.69137573 485.35757446]
[171.60600281 483.75952148]
[185.58857727 489.18975830]
[195.51536560 500.43515015]
[199.16868591 514.98345947]
[195.73239136 529.58453369]
[185.97413635 540.97650146]
[172.07395935 546.61431885]
[157.13719177 545.23852539]
[144.50073242 537.15643311]
[136.98760986 524.17358398]
[135.87196350 539.13208008]
[147.91519165 530.19000244]
[162.77357483 532.24633789]
[171.93554688 544.12310791]
[170.15272522 559.01678467]
[158.44638062 568.39556885]
[143.52244568 566.88690186]
[133.93031311 555.35583496]
[131.48458862 570.15515137]
[129.03886414 584.95440674]
[126.59313202 599.75366211]
[124.14740753 614.55291748]
[137.07327271 622.55230713]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 209]
[14 208]
[15 207]
[16 206]
[17 205]
[18 198]
[19 197]
[20 185]
[21 184]
[22 183]
[25 182]
[26 181]
[27 180]
[28 179]
[29 178]
[31 176]
[34 171]
[35 170]
[36 169]
[37 168]
[38 167]
[39 166]
[40 165]
[45 162]
[46 161]
[47 160]
[48 159]
[49 158]
[50 157]
[51 156]
[58 155]
[59 154]
[60 153]
[61 152]
[62 151]
[63 135]
[64 134]
[65 133]
[66 132]
[67 131]
[68 127]
[69 126]
[71 125]
[72 124]
[73 123]
[76 121]
[78 119]
[80 117]
[81 116]
[82 115]
[83 114]
[84 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
