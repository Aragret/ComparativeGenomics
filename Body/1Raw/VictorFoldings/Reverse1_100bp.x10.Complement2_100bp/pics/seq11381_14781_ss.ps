%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[155.83454895 596.86663818]
[168.82768250 589.14202881]
[165.28800964 574.56561279]
[154.76586914 564.02362061]
[159.02810669 548.78735352]
[155.48843384 534.21099854]
[151.94876099 519.63458252]
[148.40908813 505.05822754]
[137.88694763 494.51623535]
[142.14920044 479.27996826]
[138.60952759 464.70358276]
[129.90078735 476.91662598]
[115.13027954 479.53042603]
[102.75920868 471.04769897]
[99.87429047 456.32772827]
[108.12813568 443.80279541]
[122.79256439 440.64773560]
[135.46658325 448.66915894]
[133.24147034 433.83511353]
[131.01634216 419.00106812]
[128.79122925 404.16702271]
[126.56611633 389.33297729]
[117.02799988 381.89315796]
[115.05281067 369.55288696]
[122.23798370 358.84136963]
[120.23397064 343.97586060]
[108.99488831 337.67407227]
[103.35331726 325.87344360]
[105.57105255 312.78558350]
[115.05937958 303.22598267]
[113.27691650 288.33224487]
[111.49444580 273.43853760]
[109.71198273 258.54483032]
[95.83638000 255.73747253]
[83.48741150 248.77156067]
[73.87892151 238.31655884]
[67.96009064 225.38569641]
[66.32164001 211.23771667]
[69.13692474 197.25430298]
[76.14368439 184.80522156]
[86.66841888 175.11413574]
[99.69110870 169.13824463]
[90.67171478 157.28498840]
[96.93133545 142.75474548]
[95.37081146 127.83614349]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[89.71058655 73.72438049]
[88.15006256 58.80577469]
[86.58953857 43.88716888]
[75.26013947 53.71797180]
[60.48332596 51.14002991]
[53.15201569 38.05370712]
[58.67057800 24.10575104]
[72.97093201 19.57807732]
[85.51053619 27.80690765]
[85.06392670 12.81355667]
[76.91917419 -0.75012898]
[84.27410889 -13.70212650]
[83.82749939 -28.69547653]
[80.68338013 -34.51149368]
[80.91384125 -40.18986511]
[83.59752655 -44.14041901]
[83.59752655 -59.14041901]
[83.59752655 -74.14041901]
[83.59752655 -89.14041901]
[75.86022186 -102.94058990]
[83.59752655 -115.66786194]
[80.62796021 -121.57491302]
[81.02738190 -127.24390411]
[83.82749939 -131.11280823]
[84.27410889 -146.10615540]
[84.72071075 -161.09950256]
[85.16732025 -176.09286499]
[85.61392212 -191.08621216]
[86.06053162 -206.07955933]
[86.39550781 -221.07582092]
[86.61883545 -236.07415771]
[86.84216309 -251.07249451]
[86.50718689 -266.06875610]
[85.61437225 -281.04214478]
[84.72155762 -296.01556396]
[83.82873535 -310.98898315]
[82.93592072 -325.96237183]
[82.04310608 -340.93579102]
[81.15029144 -355.90917969]
[66.22389221 -357.78460693]
[51.89632034 -362.37103271]
[38.65557098 -369.51226807]
[26.95262337 -378.96508789]
[17.18606949 -390.40750122]
[9.68855476 -403.44982910]
[4.71544504 -417.64779663]
[2.43612027 -432.51788330]
[2.92821431 -447.55358887]
[6.17496634 -462.24282837]
[12.06579304 -476.08523560]
[20.40005493 -488.60940552]
[30.89389229 -499.38876343]
[43.18988419 -508.05612183]
[56.86923981 -514.31628418]
[71.46604156 -517.95611572]
[86.48312378 -518.85150146]
[101.40901947 -516.97204590]
[115.73535156 -512.38177490]
[128.97418213 -505.23696899]
[140.67457581 -495.78100586]
[150.43804932 -484.33593750]
[157.93203735 -471.29159546]
[162.90132141 -457.09228516]
[165.17663574 -442.22158813]
[164.68049622 -427.18600464]
[161.42977905 -412.49765015]
[155.53523254 -398.65682983]
[147.19758606 -386.13491821]
[136.70085144 -375.35839844]
[124.40251923 -366.69436646]
[110.72148132 -360.43786621]
[96.12369537 -356.80200195]
[97.01651001 -341.82858276]
[97.90932465 -326.85519409]
[98.80214691 -311.88177490]
[99.69496155 -296.90838623]
[100.58777618 -281.93496704]
[101.48059082 -266.96157837]
[113.23766327 -276.27667236]
[127.88462067 -273.04150391]
[134.62428284 -259.64086914]
[128.48841858 -245.95323181]
[114.00016022 -242.06861877]
[101.84049988 -250.84916687]
[101.61717224 -235.85083008]
[101.39384460 -220.85249329]
[104.43740845 -214.11761475]
[101.05387878 -205.63294983]
[100.60727692 -190.63960266]
[100.16066742 -175.64625549]
[99.71406555 -160.65290833]
[99.26745605 -145.65954590]
[98.82085419 -130.66619873]
[98.59752655 -115.66786194]
[106.33482361 -102.94058990]
[98.59752655 -89.14041901]
[98.59752655 -74.14041901]
[98.59752655 -59.14041901]
[98.59752655 -44.14041901]
[98.82085419 -29.14208221]
[99.26745605 -14.14873219]
[107.38026428 -1.65747142]
[100.05728149 12.36695099]
[100.50388336 27.36030006]
[101.50814056 42.32664490]
[103.06866455 57.24525070]
[104.62918854 72.16385651]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[110.28941345 126.27561951]
[111.84993744 141.19422913]
[120.98094940 154.11456299]
[114.60971832 167.57772827]
[130.08703613 171.35826111]
[143.31184387 180.19509888]
[152.69538879 193.00453186]
[157.11796570 208.22692871]
[156.06250000 224.01669312]
[149.67494202 238.46595764]
[138.74440002 249.83514404]
[124.60569763 256.76235962]
[126.38816071 271.65606689]
[128.17062378 286.54977417]
[129.95309448 301.44351196]
[143.90074158 312.00201416]
[145.85824585 329.04559326]
[135.09950256 341.97183228]
[137.10351562 356.83737183]
[148.69380188 371.14636230]
[141.40016174 387.10784912]
[143.62527466 401.94189453]
[145.85038757 416.77593994]
[148.07551575 431.60998535]
[150.30062866 446.44403076]
[153.18589783 461.16390991]
[156.72557068 475.74029541]
[167.50090027 487.32489014]
[162.98547363 501.51855469]
[166.52514648 516.09490967]
[170.06481934 530.67132568]
[173.60449219 545.24768066]
[184.37980652 556.83227539]
[179.86437988 571.02593994]
[183.40405273 585.60235596]
[198.49285889 586.50762939]
[212.64385986 591.82183838]
[224.59878540 601.07226562]
[233.29460144 613.43652344]
[237.95808411 627.81512451]
[238.17454529 642.92950439]
[233.92475891 657.43572998]
[225.58660889 670.04388428]
[213.90150452 679.63293457]
[199.90849304 685.35021973]
[184.85180664 686.68725586]
[170.07028198 683.52526855]
[156.87829590 676.14538574]
[146.44886780 665.20379639]
[139.70935059 651.67346191]
[137.25904846 636.75744629]
[139.31581116 621.78210449]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 193]
[3 192]
[5 190]
[6 189]
[7 188]
[8 187]
[10 185]
[11 184]
[18 183]
[19 182]
[20 181]
[21 180]
[22 179]
[25 177]
[26 176]
[30 173]
[31 172]
[32 171]
[33 170]
[42 162]
[44 160]
[45 159]
[46 158]
[48 156]
[49 155]
[50 154]
[51 153]
[57 152]
[58 151]
[60 149]
[61 148]
[64 147]
[65 146]
[66 145]
[67 144]
[69 142]
[72 141]
[73 140]
[74 139]
[75 138]
[76 137]
[77 136]
[78 134]
[79 133]
[80 132]
[81 126]
[82 125]
[83 124]
[84 123]
[85 122]
[86 121]
[87 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
