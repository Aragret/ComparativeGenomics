%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[97.24047852 708.54296875]
[83.79423523 701.86962891]
[71.03197479 693.96655273]
[59.06586456 684.90301514]
[48.00106049 674.75885010]
[37.93480301 663.62310791]
[28.95556068 651.59362793]
[21.14224052 638.77624512]
[14.56350994 625.28344727]
[9.27718353 611.23394775]
[5.32971859 596.75109863]
[2.75580764 581.96228027]
[1.57806969 566.99743652]
[1.80685532 551.98803711]
[3.44015384 537.06597900]
[6.46361160 522.36248779]
[10.85065746 508.00671387]
[16.56273651 494.12481689]
[23.54965210 480.83883667]
[31.75000000 468.26550293]
[41.09171295 456.51531982]
[51.49269104 445.69152832]
[62.86153793 435.88928223]
[75.09832764 427.19473267]
[88.09553528 419.68426514]
[101.73892975 413.42388916]
[115.90860748 408.46862793]
[130.48004150 404.86203003]
[128.25492859 390.02798462]
[118.71525574 378.58926392]
[124.31981659 363.79403687]
[122.09470367 348.95999146]
[119.86958313 334.12594604]
[110.32991028 322.68722534]
[115.93447113 307.89199829]
[113.70935059 293.05795288]
[111.48423767 278.22390747]
[109.03851318 263.42462158]
[106.37271118 248.66340637]
[102.09052277 242.63973999]
[103.77883148 233.66268921]
[101.33309937 218.86341858]
[91.74012756 230.39488220]
[76.81611633 231.90287781]
[65.11022949 222.52352905]
[63.32812119 207.62976074]
[72.49066925 195.75341797]
[87.34914398 193.69778442]
[99.39144897 202.63961792]
[98.27580261 187.68116760]
[97.16015625 172.72271729]
[96.04450989 157.76426697]
[92.41222382 151.32777405]
[95.02529144 142.57508850]
[94.13247681 127.60167694]
[93.23966217 112.62827301]
[85.70145416 100.85257721]
[91.78693390 88.26454163]
[81.29300690 73.13315582]
[89.75360107 57.75833130]
[88.63795471 42.79987717]
[87.52230835 27.84142494]
[86.40666199 12.88297081]
[85.29100800 -2.07548237]
[84.17536163 -17.03393555]
[83.05971527 -31.99238968]
[81.72148132 -46.93257523]
[80.16095734 -61.85117722]
[78.60043335 -76.76978302]
[77.03990936 -91.68838501]
[73.03469086 -99.89789581]
[75.56890869 -106.84048462]
[65.13673401 -112.54190826]
[58.81677246 -122.46960449]
[58.08150101 -134.09515381]
[62.99812317 -144.52311707]
[72.24056244 -151.21217346]
[71.34774780 -166.18557739]
[70.45493317 -181.15898132]
[56.82333374 -188.09634399]
[48.54903030 -200.84124756]
[47.77019882 -215.91638184]
[54.59599686 -229.26795959]
[67.10409546 -237.35578918]
[66.21128082 -252.32919312]
[65.31846619 -267.30258179]
[64.42565155 -282.27600098]
[63.42139053 -297.24234009]
[62.30574036 -312.20080566]
[61.19009399 -327.15924072]
[60.07444382 -342.11770630]
[45.22662354 -344.76214600]
[31.50325584 -351.01672363]
[19.76700974 -360.48834229]
[10.75563145 -372.58157349]
[5.03558493 -386.53619385]
[2.96643686 -401.47506714]
[4.67825603 -416.45907593]
[10.06343555 -430.54632568]
[18.78345871 -442.85128784]
[30.29017639 -452.60043335]
[43.86027145 -459.18096924]
[58.64070892 -462.17919922]
[73.70238495 -461.40667725]
[88.09850311 -456.91195679]
[100.92411804 -448.97756958]
[111.37299347 -438.10229492]
[118.78831482 -424.96975708]
[122.70394135 -410.40545654]
[122.87372589 -395.32495117]
[119.28701782 -380.67617798]
[112.16925812 -367.38000488]
[101.96788788 -356.27221680]
[89.32416534 -348.05105591]
[75.03289795 -343.23336792]
[76.14854431 -328.27490234]
[77.26419067 -313.31643677]
[78.37984467 -298.35800171]
[82.01213074 -291.92150879]
[79.39905548 -283.16882324]
[80.29187012 -268.19540405]
[81.18468475 -253.22200012]
[82.07749939 -238.24859619]
[95.45806122 -231.70442200]
[103.82208252 -219.25857544]
[104.84015656 -204.19770813]
[98.13897705 -190.55986023]
[85.42833710 -182.05180359]
[86.32115173 -167.07839966]
[87.21396637 -152.10499573]
[101.61246490 -140.80017090]
[103.20250702 -122.24256134]
[90.50909424 -108.17871857]
[91.95851135 -93.24890900]
[93.51903534 -78.33030701]
[95.07955933 -63.41170120]
[96.64008331 -48.49309540]
[99.72019958 -44.84317398]
[100.54015350 -39.21959305]
[98.01816559 -33.10803604]
[99.13381195 -18.14958382]
[100.24946594 -3.19113088]
[101.36511230 11.76732254]
[102.48075867 26.72577667]
[103.59641266 41.68423080]
[104.71205902 56.64268112]
[113.67040253 64.77130890]
[114.72229004 77.22431183]
[106.76033783 87.37172699]
[114.29854584 99.14742279]
[108.21306610 111.73545837]
[109.10588074 126.70886230]
[109.99870300 141.68226624]
[111.00296021 156.64860535]
[112.11860657 171.60707092]
[113.23426056 186.56552124]
[114.34990692 201.52397156]
[116.13237000 216.41769409]
[118.57810211 231.21696472]
[121.13393402 245.99761963]
[123.79972839 260.75881958]
[127.77182007 266.04409790]
[128.38624573 271.69381714]
[126.31828308 275.99877930]
[128.54339600 290.83282471]
[130.76850891 305.66687012]
[140.46734619 318.16659546]
[134.70362854 331.90081787]
[136.92874146 346.73486328]
[139.15385437 361.56890869]
[148.85269165 374.06863403]
[143.08897400 387.80285645]
[145.31408691 402.63690186]
[160.30241394 401.80950928]
[175.30235291 402.38931274]
[190.18209839 404.37121582]
[204.81086731 407.73776245]
[219.06008911 412.45941162]
[232.80456543 418.49462891]
[245.92349243 425.79040527]
[258.30157471 434.28259277]
[269.83004761 443.89660645]
[280.40756226 454.54791260]
[289.94119263 466.14291382]
[298.34716797 478.57974243]
[305.55154419 491.74905396]
[311.49108887 505.53515625]
[316.11355591 519.81683350]
[319.37835693 534.46868896]
[321.25677490 549.36181641]
[321.73226929 564.36541748]
[320.80075073 579.34765625]
[318.47030640 594.17681885]
[314.76150513 608.72253418]
[309.70687866 622.85711670]
[303.35086060 636.45617676]
[295.74932861 649.40032959]
[286.96905518 661.57580566]
[277.08724976 672.87554932]
[266.19070435 683.20025635]
[254.37522888 692.45928955]
[241.74462891 700.57116699]
[228.40992737 707.46459961]
[214.48828125 713.07910156]
[200.10205078 717.36523438]
[185.37768555 720.28540039]
[170.44456482 721.81384277]
[155.43391418 721.93725586]
[140.47769165 720.65447998]
[125.70729065 717.97680664]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 173]
[29 172]
[31 170]
[32 169]
[33 168]
[35 166]
[36 165]
[37 164]
[38 161]
[39 160]
[41 159]
[42 158]
[49 157]
[50 156]
[51 155]
[52 154]
[54 153]
[55 152]
[56 151]
[58 149]
[60 146]
[61 145]
[62 144]
[63 143]
[64 142]
[65 141]
[66 140]
[67 137]
[68 136]
[69 135]
[70 134]
[72 133]
[77 130]
[78 129]
[79 128]
[84 123]
[85 122]
[86 121]
[87 120]
[88 118]
[89 117]
[90 116]
[91 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
