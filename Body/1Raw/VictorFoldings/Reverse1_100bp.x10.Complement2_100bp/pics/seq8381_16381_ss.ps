%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[70.44989777 555.01196289]
[61.43240738 567.01959229]
[51.10491180 577.92102051]
[39.60204315 587.57403564]
[27.07376480 595.85296631]
[13.68341351 602.64971924]
[-0.39444363 607.87579346]
[-14.97627163 611.46301270]
[-29.87196732 613.36462402]
[-44.88733292 613.55578613]
[-59.82661438 612.03405762]
[-74.49504852 608.81927490]
[-88.70139313 603.95330811]
[-102.26045227 597.49963379]
[-114.99545288 589.54241943]
[-126.74035645 580.18536377]
[-137.34205627 569.55041504]
[-146.66233826 557.77630615]
[-154.57968140 545.01641846]
[-160.99087524 531.43725586]
[-165.81234741 517.21575928]
[-168.98121643 502.53732300]
[-170.45619202 487.59335327]
[-170.21803284 472.57867432]
[-168.26983643 457.68899536]
[-164.63702393 443.11846924]
[-159.36692810 429.05703735]
[-152.52827454 415.68801880]
[-144.21022034 403.18569946]
[-134.52120972 391.71310425]
[-123.58753967 381.41976929]
[-111.55177307 372.43988037]
[-98.57080841 364.89056396]
[-84.81388855 358.87017822]
[-70.46035767 354.45727539]
[-55.69734573 351.70932007]
[-40.71731567 350.66217041]
[-25.71556854 351.32946777]
[-10.88767719 353.70254517]
[3.57304311 357.75042725]
[9.23582935 343.86038208]
[14.89861584 329.97036743]
[20.14533424 315.91790771]
[24.97133255 301.71545410]
[29.79732895 287.51296997]
[34.62332916 273.31051636]
[24.70345306 262.19918823]
[21.65690613 247.51673889]
[26.39993095 233.18600464]
[37.75378799 223.08715820]
[52.73581314 220.00718689]
[57.56180954 205.80473328]
[62.38780975 191.60227966]
[67.10794067 177.36428833]
[71.72195435 163.09155273]
[76.33596039 148.81881714]
[72.88871765 134.32862854]
[84.49581909 123.57754517]
[89.10983276 109.30481720]
[86.37054443 95.59394836]
[96.61743927 86.08117676]
[101.23144531 71.80844116]
[105.84545898 57.53570938]
[110.45946503 43.26297379]
[112.13100433 28.35640144]
[110.79277039 13.41621685]
[109.45453644 -1.52396858]
[108.11630249 -16.46415329]
[99.17866516 -29.51900673]
[105.74964142 -42.88581467]
[104.41140747 -57.82600021]
[103.07317352 -72.76618195]
[101.73493958 -87.70636749]
[93.50455475 -75.16600800]
[79.84451294 -68.96895599]
[64.98754120 -71.03543854]
[53.53722763 -80.72514343]
[49.04157639 -95.03559113]
[52.89361191 -109.53255463]
[63.89973831 -119.72397614]
[78.64959717 -122.45194244]
[92.57276917 -116.87115479]
[101.35511017 -104.71064758]
[102.02489471 -119.69568634]
[102.69467926 -134.68072510]
[103.36446381 -149.66577148]
[103.69944000 -164.66201782]
[103.69944000 -179.66201782]
[103.69944000 -194.66201782]
[103.58777618 -209.66160583]
[103.36444855 -224.65994263]
[88.60840607 -227.67214966]
[74.84506989 -233.78645325]
[62.71817780 -242.71687317]
[52.79492188 -254.04573059]
[45.53943634 -267.24316406]
[41.29106903 -281.69186401]
[40.24852371 -296.71609497]
[42.46056366 -311.61309814]
[47.82372665 -325.68615723]
[56.08716965 -338.27700806]
[66.86439514 -348.79678345]
[79.65133667 -356.75341797]
[93.84991455 -361.77481079]
[108.79605103 -363.62606812]
[123.79067230 -362.22064209]
[138.13246155 -357.62420654]
[151.15063477 -350.05181885]
[162.23629761 -339.85757446]
[170.87095642 -327.51834106]
[176.65074158 -313.61123657]
[179.30534363 -298.78668213]
[178.71058655 -283.73806763]
[174.89430237 -269.16928101]
[168.03495789 -255.76167297]
[158.45341492 -244.14239502]
[146.59777832 -234.85485840]
[133.02259827 -228.33348083]
[118.36278534 -224.88327026]
[118.58611298 -209.88493347]
[121.82884979 -203.24366760]
[118.69944000 -194.66201782]
[118.69944000 -179.66201782]
[118.69944000 -164.66201782]
[120.92070770 -161.92372131]
[121.92601013 -157.97348022]
[121.16017914 -153.39453125]
[118.34950256 -148.99598694]
[117.67971802 -134.01094055]
[117.00993347 -119.02590179]
[116.34014893 -104.04086304]
[116.67512512 -89.04460144]
[118.01335907 -74.10441589]
[119.35159302 -59.16423416]
[120.68982697 -44.22404861]
[129.53173828 -32.23781586]
[123.05648804 -17.80238724]
[124.39472198 -2.86220264]
[125.73295593 12.07798195]
[127.07118988 27.01816750]
[132.47172546 13.02409077]
[140.71722412 0.49365282]
[151.43255615 -10.00309467]
[164.13024902 -17.98861885]
[178.23263550 -23.09963417]
[193.09817505 -25.10362053]
[208.05055237 -23.90941238]
[222.40956116 -19.57133675]
[235.52195740 -12.28674793]
[246.79119873 -2.38704538]
[255.70462036 9.67739964]
[261.85671997 23.35773659]
[264.96762085 38.03160095]
[264.89581299 53.03142929]
[261.64453125 67.67482758]
[255.36169434 81.29562378]
[246.33314514 93.27416229]
[234.96961975 103.06549072]
[221.78807068 110.22418213]
[207.38818359 114.42455292]
[192.42504883 115.47551727]
[177.57939148 113.32926941]
[163.52658081 108.08344269]
[150.90594482 99.97668457]
[140.29162598 89.37780762]
[132.16650391 76.76898193]
[126.90022278 62.72383118]
[124.73220062 47.87698364]
[120.11818695 62.14971924]
[115.50418091 76.42245483]
[110.89016724 90.69518280]
[113.62945557 104.40605164]
[103.38256073 113.91882324]
[98.76855469 128.19155884]
[101.88577271 143.70263672]
[90.60869598 153.43283081]
[85.99468231 167.70556641]
[81.38067627 181.97830200]
[81.71863556 191.10647583]
[76.59026337 196.42828369]
[71.76426697 210.63073730]
[66.93827057 224.83319092]
[76.94216919 236.40338135]
[79.79273987 251.32888794]
[74.82279205 265.58251953]
[63.46161652 275.36923218]
[48.82578278 278.13653564]
[43.99978638 292.33898926]
[39.17378616 306.54144287]
[34.34778976 320.74389648]
[35.34468079 324.97003174]
[34.98143387 328.89846802]
[33.51865387 332.13815308]
[31.31716919 334.42291260]
[28.78864288 335.63314819]
[23.12585640 349.52319336]
[17.46306992 363.41320801]
[30.63203049 370.62960815]
[42.89252472 379.30010986]
[54.08471680 389.31173706]
[64.06268311 400.53393555]
[72.69635773 412.82043457]
[79.87316895 426.01098633]
[85.49954987 439.93368530]
[89.50215912 454.40701294]
[91.82881165 469.24224854]
[92.44917297 484.24603271]
[91.35515594 499.22268677]
[88.56101990 513.97705078]
[84.10320282 528.31671143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 197]
[41 196]
[42 195]
[43 190]
[44 189]
[45 188]
[46 187]
[51 182]
[52 181]
[53 180]
[54 178]
[55 177]
[56 176]
[58 174]
[59 173]
[61 171]
[62 170]
[63 169]
[64 168]
[65 140]
[66 139]
[67 138]
[68 137]
[70 135]
[71 134]
[72 133]
[73 132]
[83 131]
[84 130]
[85 129]
[86 128]
[87 124]
[88 123]
[89 122]
[90 120]
[91 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
