%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[60.67511368 614.80035400]
[49.40375900 624.71356201]
[37.27764130 633.56072998]
[24.39723778 641.26855469]
[10.86928463 647.77319336]
[-3.19411874 653.02062988]
[-17.67643738 656.96746826]
[-32.45766068 659.58105469]
[-47.41530991 660.83959961]
[-62.42543411 660.73278809]
[-77.36365509 659.26147461]
[-92.10618591 656.43780518]
[-106.53086090 652.28521729]
[-120.51815033 646.83813477]
[-133.95214844 640.14160156]
[-146.72154236 632.25128174]
[-158.72052002 623.23242188]
[-169.84963989 613.15979004]
[-180.01667786 602.11682129]
[-189.13740540 590.19512939]
[-197.13623047 577.49334717]
[-203.94685364 564.11688232]
[-209.51287842 550.17645264]
[-213.78814697 535.78765869]
[-216.73725891 521.06976318]
[-218.33575439 506.14459229]
[-218.57040405 491.13592529]
[-217.43925476 476.16809082]
[-214.95167542 461.36514282]
[-211.12829590 446.84973145]
[-206.00077820 432.74215698]
[-199.61161804 419.15930176]
[-192.01377869 406.21374512]
[-183.27018738 394.01272583]
[-173.45332336 382.65734863]
[-162.64451599 372.24172974]
[-150.93333435 362.85217285]
[-138.41683960 354.56649780]
[-125.19873810 347.45333862]
[-111.38856506 341.57165527]
[-97.10074615 336.97018433]
[-82.45369720 333.68704224]
[-67.56877136 331.74945068]
[-52.56932068 331.17346191]
[-37.57963943 331.96383667]
[-22.72393799 334.11404419]
[-8.12531662 337.60623169]
[6.09525204 342.41149902]
[12.16908550 328.69625854]
[18.24291992 314.98098755]
[24.31675339 301.26571655]
[30.39058876 287.55044556]
[35.84594345 273.57763672]
[40.67194366 259.37518311]
[45.49794006 245.17274475]
[50.32393646 230.97027588]
[55.14993668 216.76782227]
[59.97593307 202.56536865]
[64.80193329 188.36291504]
[69.41593933 174.09017944]
[73.81694031 159.75033569]
[78.21793365 145.41049194]
[74.55533600 130.97322083]
[86.00108337 120.05052185]
[90.40208435 105.71067047]
[94.69620514 91.33846283]
[97.58148193 76.61856842]
[99.14200592 61.69996262]
[100.70252228 46.78136063]
[102.26304626 31.86275482]
[103.82357025 16.94415092]
[101.69647980 12.17733097]
[101.61837006 7.53543472]
[103.19853210 3.77802444]
[105.80142212 1.39952099]
[108.02654266 -13.43452263]
[110.25165558 -28.26856613]
[112.47677612 -43.10261154]
[114.70189667 -57.93665314]
[116.92700958 -72.77069855]
[119.15213013 -87.60474396]
[121.37724304 -102.43878174]
[119.55547333 -111.38970184]
[123.74750519 -117.47646332]
[126.19322968 -132.27574158]
[111.76965332 -136.45864868]
[97.94205475 -142.31816101]
[84.90455627 -149.77201843]
[72.84018707 -158.71557617]
[61.91829681 -169.02328491]
[52.29222488 -180.55043030]
[44.09710693 -193.13519287]
[37.44798279 -206.60090637]
[32.43819809 -220.75854492]
[29.13808441 -235.40933228]
[27.59396935 -250.34761047]
[27.82752991 -265.36364746]
[29.83548546 -280.24667358]
[33.58964920 -294.78775024]
[39.03731918 -308.78271484]
[46.10201645 -322.03512573]
[54.68456268 -334.35894775]
[64.66447449 -345.58114624]
[75.90165710 -355.54418945]
[88.23834229 -364.10818481]
[101.50135803 -371.15298462]
[115.50449371 -376.57962036]
[130.05119324 -380.31192017]
[144.93721008 -382.29751587]
[159.95359802 -382.50851440]
[174.88954163 -380.94195557]
[189.53535461 -377.61984253]
[203.68544006 -372.58877563]
[217.14114380 -365.91943359]
[229.71359253 -357.70541382]
[241.22625732 -348.06204224]
[251.51754761 -337.12469482]
[260.44296265 -325.04687500]
[267.87722778 -311.99819946]
[273.71594238 -298.16180420]
[277.87719727 -283.73196411]
[280.30252075 -268.91122437]
[280.95788574 -253.90766907]
[279.83410645 -238.93191528]
[276.94692993 -224.19418335]
[272.33691406 -209.90138245]
[266.06875610 -196.25416565]
[258.23046875 -183.44410706]
[248.93208313 -171.65104675]
[238.30412292 -161.04054260]
[226.49578857 -151.76155090]
[213.67286682 -143.94432068]
[200.01536560 -137.69860840]
[185.71501160 -133.11209106]
[170.97254944 -130.24914551]
[155.99496460 -129.14997864]
[140.99250793 -129.83000183]
[138.54676819 -115.03073883]
[136.21128845 -100.21366882]
[133.98617554 -85.37962341]
[131.76104736 -70.54557800]
[129.53593445 -55.71153641]
[127.31082153 -40.87749481]
[125.08570099 -26.04344940]
[122.86058807 -11.20940590]
[120.63546753 3.62463808]
[118.74217224 18.50467300]
[117.18165588 33.42327881]
[115.62113190 48.34188461]
[114.06060791 63.26048660]
[112.50008392 78.17909241]
[121.89653015 66.48692322]
[135.39799500 59.95158768]
[150.39753723 59.83494949]
[163.99899292 66.15953064]
[173.57614136 77.70415497]
[177.27976990 92.23973846]
[174.39476013 106.95968628]
[165.47819519 119.02180481]
[152.25169373 126.09709167]
[137.26908875 126.81941223]
[123.42330170 121.04930878]
[113.38772583 109.90088654]
[109.09999084 95.52547455]
[110.05286407 103.52951050]
[104.74192810 110.11167145]
[100.34093475 124.45151520]
[103.68874359 139.91445923]
[92.55778503 149.81147766]
[88.15678406 164.15133667]
[83.75579071 178.49118042]
[84.86153412 185.00952148]
[82.81640625 190.31184387]
[79.00438690 193.18891907]
[74.17839050 207.39137268]
[69.35239410 221.59382629]
[64.52639008 235.79627991]
[59.70039749 249.99873352]
[54.87439728 264.20120239]
[50.04840088 278.40365601]
[63.94717407 272.76235962]
[77.81717682 278.47402954]
[83.71304321 292.26672363]
[78.25734711 306.23937988]
[64.57537079 312.38784790]
[50.50475693 307.18997192]
[44.10585403 293.62426758]
[38.03202057 307.33953857]
[31.95818710 321.05480957]
[25.88435173 334.77008057]
[19.81051826 348.48535156]
[32.92604065 355.78591919]
[45.32334137 364.24890137]
[56.89968872 373.80419922]
[67.55915070 384.37258911]
[77.21340942 395.86651611]
[85.78244781 408.19076538]
[93.19527435 421.24316406]
[99.39046478 434.91558838]
[104.31666565 449.09469604]
[107.93306732 463.66305542]
[110.20970154 478.49990845]
[111.12770081 493.48233032]
[110.67946625 508.48614502]
[108.86869812 523.38702393]
[105.71041107 538.06152344]
[101.23077393 552.38800049]
[95.46691132 566.24774170]
[88.46657562 579.52593994]
[80.28778076 592.11254883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 191]
[49 190]
[50 189]
[51 188]
[52 187]
[53 180]
[54 179]
[55 178]
[56 177]
[57 176]
[58 175]
[59 174]
[60 171]
[61 170]
[62 169]
[64 167]
[65 166]
[66 164]
[67 151]
[68 150]
[69 149]
[70 148]
[71 147]
[75 146]
[76 145]
[77 144]
[78 143]
[79 142]
[80 141]
[81 140]
[82 139]
[84 138]
[85 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
