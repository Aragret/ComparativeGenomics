%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[7.68398905 317.32101440]
[8.89233971 332.28344727]
[8.69426060 347.29327393]
[7.09149218 362.21862793]
[4.09812117 376.92828369]
[-0.25954694 391.29299927]
[-5.94321537 405.18655396]
[-12.90293503 418.48678589]
[-21.07754326 431.07687378]
[-30.39519691 442.84616089]
[-40.77401352 453.69119263]
[-52.12277985 463.51666260]
[-64.34175873 472.23623657]
[-77.32357025 479.77328491]
[-90.95413208 486.06155396]
[-105.11363983 491.04580688]
[-119.67767334 494.68222046]
[-134.51823425 496.93881226]
[-149.50489807 497.79580688]
[-164.50595093 497.24566650]
[-179.38957214 495.29318237]
[-194.02496338 491.95553589]
[-208.28350830 487.26208496]
[-222.03987122 481.25402832]
[-235.17318726 473.98419189]
[-247.56803894 465.51647949]
[-259.11547852 455.92526245]
[-269.71401978 445.29489136]
[-279.27056885 433.71871948]
[-287.70108032 421.29855347]
[-294.93148804 408.14349365]
[-300.89825439 394.36917114]
[-305.54895020 380.09661865]
[-308.84268188 365.45126343]
[-310.75051880 350.56185913]
[-311.25567627 335.55923462]
[-310.35372925 320.57519531]
[-308.05261230 305.74148560]
[-304.37255859 291.18841553]
[-299.34585571 277.04391479]
[-293.01675415 263.43228149]
[-285.44079590 250.47312927]
[-276.68463135 238.28034973]
[-266.82516479 226.96110535]
[-255.94905090 216.61485291]
[-244.15188599 207.33253479]
[-231.53733826 199.19572449]
[-218.21627808 192.27592468]
[-204.30575562 186.63394165]
[-189.92802429 182.31938171]
[-175.20945740 179.37013245]
[-160.27937317 177.81213379]
[-145.26901245 177.65907288]
[-130.31027222 178.91229248]
[-115.53461456 181.56077576]
[-101.07189941 185.58125305]
[-87.04921722 190.93838501]
[-73.58981323 197.58509827]
[-60.81195831 205.46298218]
[-48.82796097 214.50279236]
[-37.74313354 224.62510681]
[-26.63589859 214.54396057]
[-22.41163445 200.26094055]
[-6.99279785 196.71551514]
[4.11443615 186.63436890]
[15.22166920 176.55322266]
[26.32890320 166.47209167]
[37.43613815 156.39094543]
[48.46801376 146.22740173]
[59.42392349 135.98200989]
[70.37982941 125.73662567]
[80.29448700 114.48052979]
[89.07508850 102.31906891]
[97.76491547 90.09258270]
[106.36347961 77.80175018]
[114.96203613 65.51091003]
[123.56060028 53.22006989]
[121.01564789 37.85254288]
[129.91090393 25.51037407]
[144.57717896 23.17885399]
[153.17575073 10.88801670]
[161.77430725 -1.40282118]
[170.37286377 -13.69365883]
[178.97143555 -25.98449707]
[187.56999207 -38.27533340]
[189.14091492 -54.01836014]
[202.77653503 -60.01163483]
[211.37509155 -72.30247498]
[219.97364807 -84.59331512]
[227.73004150 -97.43225098]
[234.60946655 -110.76168060]
[241.48887634 -124.09111023]
[248.36828613 -137.42054749]
[255.24769592 -150.74996948]
[253.95318604 -169.11857605]
[269.07925415 -178.01628113]
[275.75946045 -191.44665527]
[282.43963623 -204.87702942]
[269.99981689 -213.29927063]
[258.79360962 -223.30447388]
[249.02098083 -234.71409607]
[240.85636902 -247.32450867]
[234.44548035 -260.91067505]
[229.90269470 -275.23013306]
[227.30911255 -290.02731323]
[226.71101379 -305.03817749]
[228.11904907 -319.99481201]
[231.50811768 -334.63027954]
[236.81773376 -348.68344116]
[243.95312500 -361.90350342]
[252.78697205 -374.05450439]
[263.16162109 -384.91958618]
[274.89190674 -394.30490112]
[287.76849365 -402.04290771]
[301.56161499 -407.99551392]
[316.02505493 -412.05651855]
[330.90075684 -414.15344238]
[345.92321777 -414.24884033]
[360.82434082 -412.34103394]
[375.33822632 -408.46408081]
[389.20581055 -402.68713379]
[402.17965698 -395.11328125]
[414.02819824 -385.87774658]
[424.54000854 -375.14529419]
[433.52746582 -363.10748291]
[440.83020020 -349.97912598]
[446.31790161 -335.99453735]
[449.89257812 -321.40325928]
[451.49047852 -306.46572876]
[451.08306885 -291.44848633]
[448.67764282 -276.61956787]
[444.31710815 -262.24356079]
[438.07928467 -248.57707214]
[430.07553101 -235.86396790]
[420.44860840 -224.33114624]
[409.37039185 -214.18440247]
[397.03854370 -205.60484314]
[383.67312622 -198.74555969]
[369.51272583 -193.72897339]
[354.80999756 -190.64460754]
[339.82736206 -189.54751587]
[324.83215332 -190.45726013]
[310.09204102 -193.35762024]
[295.87002563 -198.19683838]
[289.18981934 -184.76646423]
[282.50964355 -171.33607483]
[286.06027222 -159.77236938]
[280.60479736 -148.52862549]
[268.57711792 -143.87055969]
[261.69772339 -130.54112244]
[254.81829834 -117.21170044]
[247.93888855 -103.88227081]
[241.05947876 -90.55284119]
[254.72991943 -96.72689056]
[269.58340454 -94.63539124]
[281.01739502 -84.92642975]
[285.48895264 -70.60842896]
[281.61251831 -56.11797714]
[270.58923340 -45.94509506]
[255.83480835 -43.24196625]
[241.92105103 -48.84617996]
[233.15928650 -61.02121353]
[232.26449585 -75.99475098]
[223.66592407 -63.70391083]
[215.06736755 -51.41307068]
[214.11148071 -36.54917145]
[199.86083984 -29.67677116]
[191.26226807 -17.38593292]
[182.66371155 -5.09509516]
[174.06513977 7.19574261]
[165.46658325 19.48657990]
[156.86801147 31.77741814]
[159.70532227 46.35429382]
[151.16024780 58.94144058]
[135.85144043 61.81863403]
[127.25287628 74.10947418]
[118.65431213 86.40031433]
[110.05574799 98.69114685]
[108.38279724 106.57617950]
[101.23654175 111.09967041]
[92.45594025 123.26113129]
[106.30368805 117.49572754]
[121.30100250 117.77970123]
[134.92056274 124.06519318]
[144.86724854 135.29299927]
[149.46485901 149.57101440]
[147.93861389 164.49316406]
[140.54571533 177.54479980]
[128.53199768 186.52648926]
[113.92198944 189.92465210]
[99.17772675 187.16664124]
[86.78387451 178.71723938]
[78.82901001 166.00032043]
[76.65368652 151.15888977]
[80.62522125 136.69253540]
[69.66931152 146.93792725]
[58.71340561 157.18331909]
[54.58289337 165.33050537]
[47.51727676 167.49818420]
[36.41004181 177.57933044]
[25.30280876 187.66046143]
[14.19557476 197.74160767]
[3.08834100 207.82273865]
[-1.93038845 222.82684326]
[-16.55475998 225.65119934]
[-27.66199493 235.73233032]
[-18.65815926 247.74339294]
[-10.81863403 260.54479980]
[-4.21231365 274.02407837]
[1.10274374 288.06277466]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 206]
[62 205]
[64 203]
[65 202]
[66 201]
[67 200]
[68 199]
[69 197]
[70 196]
[71 195]
[72 181]
[73 180]
[74 178]
[75 177]
[76 176]
[77 175]
[80 172]
[81 171]
[82 170]
[83 169]
[84 168]
[85 167]
[87 165]
[88 164]
[89 163]
[90 153]
[91 152]
[92 151]
[93 150]
[94 149]
[96 146]
[97 145]
[98 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
