%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[10.79365921 475.92428589]
[9.13505077 490.84460449]
[6.02196312 505.53048706]
[1.48437929 519.84051514]
[-4.43400097 533.63690186]
[-11.67617893 546.78668213]
[-20.17240715 559.16333008]
[-29.84085846 570.64758301]
[-40.58842087 581.12884521]
[-52.31158447 590.50616455]
[-64.89744568 598.68927002]
[-78.22479248 605.59930420]
[-92.16527557 611.16973877]
[-106.58463287 615.34692383]
[-121.34400177 618.09063721]
[-136.30122375 619.37438965]
[-151.31227112 619.18597412]
[-166.23254395 617.52703857]
[-180.91838074 614.41369629]
[-195.22831726 609.87579346]
[-209.02456665 603.95715332]
[-222.17424011 596.71472168]
[-234.55068970 588.21820068]
[-246.03474426 578.54956055]
[-256.51577759 567.80175781]
[-265.89288330 556.07843018]
[-274.07571411 543.49237061]
[-280.98547363 530.16491699]
[-286.55563354 516.22430420]
[-290.73254395 501.80487061]
[-293.47595215 487.04544067]
[-294.75946045 472.08819580]
[-294.57070923 457.07717896]
[-292.91149902 442.15692139]
[-289.79782104 427.47116089]
[-285.25964355 413.16128540]
[-279.34072876 399.36517334]
[-272.09802246 386.21563721]
[-263.60128784 373.83935547]
[-253.93238831 362.35549927]
[-243.18440247 351.87466431]
[-231.46087646 342.49783325]
[-218.87467957 334.31524658]
[-205.54705811 327.40573120]
[-191.60635376 321.83587646]
[-177.18682861 317.65924072]
[-162.42735291 314.91613770]
[-147.47007751 313.63293457]
[-132.45904541 313.82199097]
[-117.53882599 315.48147583]
[-102.85311890 318.59545898]
[-88.54335022 323.13388062]
[-74.74734497 329.05310059]
[-61.59796906 336.29608154]
[-49.22185135 344.79302979]
[-39.56103897 333.31832886]
[-29.90022850 321.84362793]
[-20.23941803 310.36892700]
[-10.57860756 298.89422607]
[-0.91779739 287.41952515]
[8.74301338 275.94485474]
[18.31813240 264.39852905]
[26.26481628 251.67649841]
[24.56388283 236.87933350]
[37.36630630 227.58372498]
[43.64366531 213.96040344]
[49.92102814 200.33708191]
[56.19838715 186.71377563]
[62.16995239 172.95365906]
[67.83274078 159.06364441]
[73.49552155 145.17361450]
[79.15830994 131.28358459]
[84.82109833 117.39356232]
[90.48388672 103.50353241]
[90.36888123 95.44379425]
[96.33576965 89.44987488]
[102.20472717 75.64569855]
[108.07369232 61.84151840]
[113.73647308 47.95149231]
[119.19183350 33.97869492]
[124.64718628 20.00589561]
[122.45873260 4.33677864]
[134.29496765 -4.70494556]
[139.75032043 -18.67774391]
[132.43423462 -34.56781006]
[138.74958801 -50.51871109]
[154.33428955 -56.83976364]
[151.91278076 -72.47456360]
[163.61308289 -81.69150543]
[168.85980225 -95.74398041]
[174.10652161 -109.79644775]
[171.68502808 -125.43125153]
[183.38533020 -134.64819336]
[188.63204956 -148.70066833]
[175.36471558 -155.74574280]
[163.13049316 -164.46231079]
[152.13871765 -174.70126343]
[142.57748413 -186.28735352]
[134.61036682 -199.02235413]
[128.37373352 -212.68835449]
[123.97427368 -227.05148315]
[121.48728180 -241.86599731]
[120.95529938 -256.87838745]
[122.38744354 -271.83178711]
[125.75920868 -286.47030640]
[131.01287842 -300.54348755]
[138.05859375 -313.81045532]
[146.77575684 -326.04428101]
[157.01521301 -337.03555298]
[168.60176086 -346.59625244]
[181.33714294 -354.56274414]
[195.00343323 -360.79873657]
[209.36679077 -365.19750977]
[224.18142700 -367.68380737]
[239.19384766 -368.21505737]
[254.14717102 -366.78222656]
[268.78552246 -363.40975952]
[282.85842896 -358.15539551]
[296.12509155 -351.10906982]
[308.35848999 -342.39132690]
[319.34927368 -332.15133667]
[328.90942383 -320.56433105]
[336.87530518 -307.82858276]
[343.11065674 -294.16198730]
[347.50875854 -279.79843140]
[349.99432373 -264.98367310]
[350.52487183 -249.97123718]
[349.09130859 -235.01797485]
[345.71817017 -220.37977600]
[340.46313477 -206.30711365]
[333.41616821 -193.04078674]
[324.69784546 -180.80781555]
[314.45733643 -169.81750488]
[302.86987305 -160.25791931]
[290.13372803 -152.29263306]
[276.46685791 -146.05793762]
[262.10308838 -141.66053772]
[247.28820801 -139.17564392]
[232.27574158 -138.64581299]
[217.32255554 -140.08009338]
[202.68452454 -143.45394897]
[197.43780518 -129.40147400]
[200.23458862 -114.77180481]
[188.15899658 -104.54973602]
[182.91227722 -90.49726105]
[177.66555786 -76.44479370]
[180.46234131 -61.81512070]
[168.38676453 -51.59304810]
[175.32305908 -40.73407364]
[174.72961426 -27.66770744]
[166.59928894 -17.17446327]
[153.72312927 -13.22238636]
[148.26776123 0.75041151]
[150.84642029 15.42010021]
[138.61999512 25.46125221]
[133.16462708 39.43405151]
[127.70927429 53.40684891]
[128.77239990 58.06290054]
[126.92190552 63.43623352]
[121.87786865 67.71047974]
[116.00890350 81.51465607]
[110.13994598 95.31883240]
[104.37390900 109.16632080]
[98.71112823 123.05634308]
[93.04833984 136.94636536]
[87.38555145 150.83639526]
[81.72276306 164.72642517]
[76.05997467 178.61645508]
[76.77194214 183.78755188]
[75.55123901 188.26673889]
[72.98506165 191.43373108]
[69.82170105 192.99113464]
[63.54434204 206.61444092]
[57.26698303 220.23776245]
[50.98962402 233.86108398]
[52.24155807 249.63267517]
[39.88813400 257.95385742]
[51.87965393 248.94256592]
[66.12693787 244.25056458]
[81.12643433 244.37301636]
[95.29521942 249.29699707]
[107.13802338 258.50286865]
[115.40503693 271.01913452]
[119.22383118 285.52487183]
[118.19140625 300.48928833]
[112.41670227 314.33316040]
[102.50914764 325.59552002]
[89.51430511 333.08776855]
[74.80355835 336.01928711]
[59.92935562 334.08068848]
[46.46141434 327.47656250]
[35.82104111 316.90383911]
[29.13113594 303.47830200]
[27.09770203 288.61676025]
[29.93539619 273.88745117]
[26.93038368 282.51342773]
[20.21771240 285.60565186]
[10.55690289 297.08035278]
[0.89609230 308.55505371]
[-8.76471806 320.02975464]
[-18.42552948 331.50445557]
[-28.08633804 342.97915649]
[-37.74715042 354.45385742]
[-27.26567841 365.20120239]
[-17.88811874 376.92416382]
[-9.70478344 389.50988770]
[-2.79448318 402.83709717]
[2.77622938 416.77746582]
[6.95370436 431.19674683]
[9.69770908 445.95605469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 203]
[56 202]
[57 201]
[58 200]
[59 199]
[60 198]
[61 197]
[62 195]
[63 177]
[65 175]
[66 174]
[67 173]
[68 172]
[69 168]
[70 167]
[71 166]
[72 165]
[73 164]
[74 163]
[76 162]
[77 161]
[78 160]
[79 157]
[80 156]
[81 155]
[83 153]
[84 152]
[87 148]
[89 146]
[90 145]
[91 144]
[93 142]
[94 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
