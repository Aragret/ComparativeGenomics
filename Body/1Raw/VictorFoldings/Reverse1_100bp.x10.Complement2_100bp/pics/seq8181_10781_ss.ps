%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[169.33995056 640.15551758]
[168.44714355 625.18206787]
[167.55432129 610.20867920]
[166.66149902 595.23529053]
[165.76869202 580.26184082]
[164.87586975 565.28845215]
[163.98306274 550.31506348]
[163.09024048 535.34167480]
[152.65139771 521.23498535]
[161.02967834 504.83728027]
[159.80270386 489.88754272]
[158.46447754 474.94735718]
[157.12623596 460.00717163]
[155.78800964 445.06698608]
[154.44976807 430.12680054]
[152.55647278 415.24676514]
[150.11074829 400.44747925]
[147.66502380 385.64822388]
[145.21929932 370.84893799]
[142.55349731 356.08773804]
[139.66822815 341.36782837]
[124.68766022 341.51852417]
[109.93056488 338.91314697]
[95.89978790 333.63900757]
[83.07368469 325.87435913]
[71.88983154 315.88235474]
[62.73009872 304.00222778]
[55.90759277 290.63769531]
[51.65597534 276.24319458]
[50.12144852 261.30859375]
[51.35773087 246.34236145]
[55.32417679 231.85429382]
[61.88712311 218.33821106]
[70.82436371 206.25508118]
[81.83271027 196.01728821]
[94.53825378 187.97454834]
[108.50905609 182.40203857]
[105.62377930 167.68214417]
[102.73851013 152.96224976]
[99.85323334 138.24237061]
[96.96796417 123.52247620]
[94.08268738 108.80258179]
[90.54301453 94.22620392]
[79.26116180 83.13430786]
[83.13830566 68.75317383]
[78.95129395 54.34938812]
[74.76428223 39.94560623]
[70.57727051 25.54182625]
[66.39025879 11.13804340]
[62.62100220 7.52697802]
[60.79626465 3.25806355]
[60.84100723 -0.81784713]
[62.35335922 -4.00298834]
[58.81368637 -18.57936287]
[55.27401733 -33.15573883]
[51.73434448 -47.73211288]
[38.71831894 -60.75765228]
[44.31182861 -77.39134216]
[40.72507095 -62.82648087]
[32.65890121 -50.17986298]
[20.96456337 -40.78611755]
[6.87618637 -35.63658905]
[-8.11944771 -35.27471924]
[-22.43981552 -39.73869705]
[-34.57365417 -48.55742645]
[-43.24044800 -60.80024719]
[-47.52557373 -75.17514038]
[-46.97680664 -90.16510010]
[-41.65206528 -104.18819427]
[-32.11328125 -115.76453400]
[-19.36710167 -123.67243195]
[-4.75866318 -127.07736206]
[10.17037010 -125.61998749]
[23.84450340 -119.45410156]
[34.82067108 -109.23041534]
[41.94059753 -96.02767944]
[41.94059753 -111.02767944]
[41.94059753 -126.02767944]
[41.94059753 -141.02767944]
[30.94693947 -146.97808838]
[23.56919479 -156.97994995]
[21.15806961 -169.09878540]
[24.11094284 -181.02276611]
[31.80787086 -190.50381470]
[42.74053192 -195.78134155]
[43.18713760 -210.77468872]
[43.63374329 -225.76803589]
[44.08034897 -240.76138306]
[44.52695465 -255.75473022]
[29.80010986 -258.80288696]
[15.82637501 -264.36218262]
[3.03039384 -272.26370239]
[-8.19897652 -282.26730347]
[-17.52049065 -294.06903076]
[-24.65087509 -307.31021118]
[-29.37344742 -321.58847046]
[-31.54469299 -336.46987915]
[-31.09863091 -351.50225830]
[-28.04881668 -366.22875977]
[-22.48793030 -380.20187378]
[-14.58495998 -392.99694824]
[-4.58006954 -404.22518921]
[7.22270441 -413.54534912]
[20.46468925 -420.67422485]
[34.74347305 -425.39520264]
[49.62514496 -427.56475830]
[64.65746307 -427.11697388]
[79.38362122 -424.06549072]
[93.35609436 -418.50302124]
[106.15028381 -410.59860229]
[117.37738037 -400.59243774]
[126.69622040 -388.78860474]
[133.82359314 -375.54580688]
[138.54293823 -361.26651001]
[140.71080017 -346.38458252]
[140.26133728 -331.35232544]
[137.20817566 -316.62649536]
[131.64411926 -302.65466309]
[123.73825073 -289.86135864]
[113.73081207 -278.63540649]
[101.92592621 -269.31790161]
[88.68232727 -262.19201660]
[74.40246582 -257.47430420]
[59.52030563 -255.30813599]
[59.07369995 -240.31477356]
[58.62709427 -225.32142639]
[58.18048477 -210.32807922]
[57.73387909 -195.33473206]
[72.19270325 -185.19500732]
[77.71904755 -168.25657654]
[71.92068481 -151.24310303]
[56.94059753 -141.02767944]
[56.94059753 -126.02767944]
[56.94059753 -111.02767944]
[56.94059753 -96.02767944]
[58.83388901 -81.14764404]
[69.09424591 -74.74049377]
[72.34252930 -62.67266464]
[66.31072235 -51.27178574]
[69.85038757 -36.69541168]
[73.39006042 -22.11903572]
[76.92973328 -7.54266071]
[80.79404449 6.95103264]
[84.98105621 21.35481453]
[89.16806030 35.75859833]
[93.35507202 50.16238022]
[97.54208374 64.56616211]
[108.52445984 74.62780762]
[104.94680023 90.03919220]
[113.10150909 77.44948578]
[127.74057007 74.17874908]
[140.47807312 82.10061646]
[144.01741028 96.67707825]
[136.33105469 109.55807495]
[121.82213593 113.36479187]
[108.80258179 105.91731262]
[111.68785095 120.63719940]
[114.57312775 135.35708618]
[117.45839691 150.07698059]
[120.34367371 164.79687500]
[123.22894287 179.51676941]
[138.26966858 179.40267944]
[153.07130432 182.05368042]
[167.13002014 187.37803650]
[179.96752930 195.19305420]
[191.14739990 205.23133850]
[200.28987122 217.14990234]
[207.08471680 230.54194641]
[211.30183411 244.95072937]
[212.79902649 259.88513184]
[211.52673340 274.83633423]
[207.52978516 289.29531860]
[200.94567871 302.77005005]
[192.00000000 314.80224609]
[180.99856567 324.98300171]
[168.31704712 332.96664429]
[154.38812256 338.48257446]
[157.27339172 353.20245361]
[161.32373047 358.42800903]
[162.02220154 364.06796265]
[160.01856995 368.40322876]
[162.46429443 383.20248413]
[164.91001892 398.00177002]
[167.35574341 412.80102539]
[178.07992554 402.31332397]
[192.98397827 404.00717163]
[201.08120728 416.63391113]
[196.40261841 430.88562012]
[182.39710999 436.25643921]
[169.38995361 428.78857422]
[170.72819519 443.72875977]
[172.06642151 458.66891479]
[173.40466309 473.60910034]
[174.74288940 488.54928589]
[178.62544250 496.81753540]
[175.98814392 503.72161865]
[185.23442078 512.71435547]
[185.85569763 525.19622803]
[178.06364441 534.44885254]
[178.95646667 549.42224121]
[179.84927368 564.39562988]
[180.74209595 579.36907959]
[181.63491821 594.34246826]
[182.52772522 609.31585693]
[183.42054749 624.28924561]
[184.31335449 639.26269531]
[195.30992126 650.94409180]
[192.89071655 666.80371094]
[178.91157532 674.67535400]
[164.09608459 668.52062988]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 206]
[2 205]
[3 204]
[4 203]
[5 202]
[6 201]
[7 200]
[8 199]
[10 196]
[11 194]
[12 193]
[13 192]
[14 191]
[15 190]
[16 184]
[17 183]
[18 182]
[19 181]
[20 178]
[21 177]
[37 161]
[38 160]
[39 159]
[40 158]
[41 157]
[42 156]
[43 149]
[45 147]
[46 146]
[47 145]
[48 144]
[49 143]
[53 142]
[54 141]
[55 140]
[56 139]
[58 136]
[76 135]
[77 134]
[78 133]
[79 132]
[85 128]
[86 127]
[87 126]
[88 125]
[89 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
