%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[35.94368362 569.68792725]
[20.80044556 569.01104736]
[6.80314589 563.19287109]
[-4.35797358 552.93591309]
[-11.33515263 539.47875977]
[-13.28586388 524.44647217]
[-9.97454834 509.65417480]
[-1.80106425 496.88821411]
[10.24760056 487.69009399]
[24.71651077 483.17053223]
[25.38629723 468.18548584]
[26.05608177 453.20043945]
[26.72586632 438.21542358]
[27.39565277 423.23037720]
[28.06543732 408.24533081]
[25.96865654 405.41058350]
[25.14074516 401.41937256]
[26.11027718 396.87921143]
[29.11455154 392.61053467]
[30.45278549 377.67034912]
[18.27775764 386.43212891]
[3.45164061 384.15478516]
[-5.53249264 372.14291382]
[-3.52812290 357.27743530]
[8.31655598 348.07397461]
[23.21637344 349.80471802]
[32.63576508 361.47726440]
[35.30156326 346.71606445]
[37.96735764 331.95483398]
[40.63315201 317.19360352]
[43.29895020 302.43240356]
[45.96474457 287.67117310]
[48.63053894 272.90997314]
[51.29633331 258.14874268]
[53.96213150 243.38752747]
[56.62792587 228.62631226]
[43.71976089 236.26695251]
[29.15593910 232.67597961]
[21.27927971 219.91046143]
[24.60188866 205.28308105]
[37.22042847 197.17306519]
[51.90642166 200.22618103]
[60.24687958 212.69255066]
[64.21897888 198.22802734]
[68.19107056 183.76350403]
[72.16316986 169.29898071]
[70.90312195 162.01652527]
[76.30357361 154.64950562]
[72.42642975 140.26837158]
[83.70829010 129.17648315]
[87.89530182 114.77269745]
[81.00897980 102.02417755]
[85.05349731 88.11058044]
[97.70092010 81.04029083]
[101.88792419 66.63651276]
[106.07493591 52.23273087]
[110.26194763 37.82894897]
[114.44895935 23.42516518]
[117.55307007 8.74986267]
[119.55708313 -6.11566544]
[117.76590729 -10.07112408]
[117.36672974 -13.99606800]
[118.17903137 -17.45664215]
[119.89993286 -20.12218475]
[122.14845276 -21.79619598]
[125.03372192 -36.51608658]
[127.91899109 -51.23597717]
[119.36936188 -64.25679016]
[122.50512695 -79.14374542]
[134.97116089 -87.21427917]
[137.85644531 -101.93416595]
[140.74171448 -116.65406036]
[143.62698364 -131.37394714]
[146.51225281 -146.09384155]
[149.39752197 -160.81373596]
[152.28280640 -175.53363037]
[155.16807556 -190.25350952]
[150.22975159 -205.28427124]
[160.27067566 -216.28558350]
[163.15594482 -231.00547791]
[166.04121399 -245.72537231]
[159.67085266 -263.00253296]
[171.71203613 -275.76876831]
[174.37783813 -290.52996826]
[177.04362488 -305.29119873]
[179.70942688 -320.05239868]
[182.26525879 -334.83306885]
[184.71098328 -349.63232422]
[170.34754944 -354.03405762]
[156.69900513 -360.31103516]
[144.00889587 -368.35122681]
[132.50372314 -378.01116943]
[122.38878632 -389.11843872]
[113.84461212 -401.47485352]
[107.02368164 -414.85986328]
[102.04771423 -429.03457642]
[99.00551605 -443.74609375]
[97.95138550 -458.73184204]
[98.90412140 -473.72436523]
[101.84672546 -488.45611572]
[106.72669220 -502.66418457]
[113.45692444 -516.09503174]
[121.91731262 -528.50891113]
[131.95687866 -539.68438721]
[143.39643860 -549.42193604]
[156.03186035 -557.54779053]
[169.63764954 -563.91693115]
[183.97097778 -568.41571045]
[198.77604675 -570.96386719]
[213.78866577 -571.51593018]
[228.74090576 -570.06195068]
[243.36593628 -566.62799072]
[257.40274048 -561.27526855]
[270.60079956 -554.09930420]
[282.72460938 -545.22821045]
[293.55783081 -534.82025146]
[302.90707397 -523.06121826]
[310.60549927 -510.16091919]
[316.51574707 -496.34960938]
[320.53234863 -481.87374878]
[322.58358765 -466.99166870]
[322.63287354 -451.96899414]
[320.67932129 -437.07379150]
[316.75781250 -422.57186890]
[310.93832397 -408.72207642]
[303.32470703 -395.77154541]
[294.05282593 -383.95141602]
[283.28814697 -373.47262573]
[271.22280884 -364.52215576]
[258.07208252 -357.25973511]
[244.07072449 -351.81503296]
[229.46855164 -348.28515625]
[214.52616882 -346.73312378]
[199.51025391 -347.18661499]
[197.06452942 -332.38732910]
[199.07536316 -325.27548218]
[194.47064209 -317.38662720]
[191.80485535 -302.62539673]
[189.13905334 -287.86419678]
[186.47325134 -273.10296631]
[193.11059570 -262.98999023]
[191.01048279 -250.67036438]
[180.76110840 -242.84010315]
[177.87583923 -228.12020874]
[174.99055481 -213.40031433]
[180.13526917 -199.42242432]
[169.88796997 -187.36824036]
[167.00270081 -172.64834595]
[164.11741638 -157.92846680]
[161.23214722 -143.20857239]
[158.34687805 -128.48867798]
[155.46160889 -113.76878357]
[152.57632446 -99.04889679]
[149.69105530 -84.32900238]
[158.18785095 -72.14951324]
[155.47146606 -57.18034744]
[142.63888550 -48.35070419]
[139.75361633 -33.63081360]
[136.86834717 -18.91092300]
[134.42260742 -4.11165190]
[132.41859436 10.75387669]
[142.80673218 -0.06678608]
[157.18560791 -4.33852720]
[171.79664612 -0.94472420]
[182.82052612 9.22749138]
[187.37565613 23.51912689]
[184.27131653 38.19438171]
[174.31898499 49.41717911]
[160.12019348 54.25391006]
[145.38644409 51.44026184]
[133.96911621 41.71171951]
[128.85273743 27.61217690]
[124.66573334 42.01595688]
[120.47872162 56.41973877]
[116.29170990 70.82352448]
[112.10469818 85.22730255]
[118.99102020 97.97582245]
[114.94650269 111.88941956]
[102.29907990 118.95970917]
[98.11207581 133.36349487]
[101.68973541 148.77487183]
[90.70735931 158.83651733]
[86.62769318 173.27107239]
[82.65559387 187.73559570]
[78.68350220 202.20011902]
[74.71140289 216.66464233]
[71.38914490 231.29211426]
[68.72335052 246.05332947]
[66.05755615 260.81454468]
[63.39175797 275.57577515]
[60.72595978 290.33697510]
[58.06016541 305.09820557]
[55.39437103 319.85940552]
[52.72857666 334.62063599]
[50.06277847 349.38183594]
[47.39698410 364.14306641]
[45.39297104 379.00860596]
[44.05473709 393.94879150]
[43.05047607 408.91513062]
[42.38069153 423.90014648]
[41.71090698 438.88519287]
[41.04112244 453.87023926]
[40.37133408 468.85528564]
[39.70154953 483.84030151]
[53.70954895 489.63272095]
[64.88954926 499.86907959]
[71.89151764 513.31335449]
[73.86992645 528.34204102]
[70.58587646 543.14038086]
[62.43593597 555.92138672]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 204]
[11 203]
[12 202]
[13 201]
[14 200]
[15 199]
[19 198]
[20 197]
[27 196]
[28 195]
[29 194]
[30 193]
[31 192]
[32 191]
[33 190]
[34 189]
[35 188]
[36 187]
[43 186]
[44 185]
[45 184]
[46 183]
[48 182]
[50 180]
[51 179]
[54 176]
[55 175]
[56 174]
[57 173]
[58 172]
[59 161]
[60 160]
[65 159]
[66 158]
[67 157]
[70 154]
[71 153]
[72 152]
[73 151]
[74 150]
[75 149]
[76 148]
[77 147]
[79 145]
[80 144]
[81 143]
[83 140]
[84 139]
[85 138]
[86 137]
[87 135]
[88 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
