%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[99.82459259 493.13003540]
[98.26084137 478.08312988]
[101.42536163 463.28985596]
[109.00812531 450.19952393]
[120.26625061 440.09457397]
[134.09678650 433.96502686]
[132.53627014 419.04641724]
[130.97573853 404.12780762]
[129.41522217 389.20919800]
[127.85469055 374.29058838]
[126.29417419 359.37200928]
[110.23316193 354.12756348]
[98.04039764 342.35174561]
[92.20252991 326.37887573]
[93.93953705 309.40588379]
[102.95008850 294.85247803]
[117.46250916 285.67211914]
[115.45849609 270.80657959]
[106.09018707 259.22711182]
[111.91440582 244.51695251]
[109.91039276 229.65142822]
[107.90637970 214.78588867]
[94.72908020 207.89410400]
[88.05779266 194.40492249]
[90.63881683 179.39852905]
[101.68888855 168.66529846]
[99.68487549 153.79977417]
[97.68086243 138.93424988]
[95.67684937 124.06871796]
[93.67283630 109.20319366]
[91.55821228 94.35299683]
[89.33309174 79.51895142]
[87.10797119 64.68490601]
[71.51979065 62.59981537]
[57.16215515 56.21695328]
[45.19291687 46.06000137]
[36.57478333 32.95662689]
[31.99790955 17.97104645]
[31.82462883 2.31760049]
[36.06077576 -12.73766327]
[44.35589218 -25.97937584]
[56.03217697 -36.34096527]
[70.13990021 -42.99056244]
[67.69417572 -57.78983307]
[65.24844360 -72.58910370]
[62.80271912 -87.38837433]
[50.23871613 -96.59617615]
[47.96922302 -111.63957977]
[56.82488251 -123.56069183]
[54.37915421 -138.35997009]
[51.93342590 -153.15924072]
[49.48770142 -167.95851135]
[46.17425919 -171.99188232]
[44.86972809 -176.44738770]
[45.39849854 -180.48910522]
[47.27862930 -183.47196960]
[45.49616241 -198.36567688]
[43.71369934 -213.25939941]
[41.93123245 -228.15312195]
[40.14876556 -243.04682922]
[25.15643692 -242.38179016]
[10.15633106 -242.83898926]
[-4.76766491 -244.41587830]
[-19.53208733 -247.10363770]
[-34.05436707 -250.88722229]
[-48.25329208 -255.74549866]
[-62.04944992 -261.65127563]
[-75.36569214 -268.57153320]
[-88.12754059 -276.46755981]
[-100.26362610 -285.29522705]
[-111.70608521 -295.00512695]
[-122.39092255 -305.54299927]
[-132.25839233 -316.84988403]
[-141.25328064 -328.86251831]
[-149.32531738 -341.51379395]
[-156.42935181 -354.73291016]
[-162.52563477 -368.44595337]
[-167.58010864 -382.57623291]
[-171.56446838 -397.04470825]
[-174.45646667 -411.77047729]
[-176.23989868 -426.67120361]
[-176.90481567 -441.66354370]
[-176.44747925 -456.66363525]
[-174.87046814 -471.58761597]
[-172.18257141 -486.35202026]
[-168.39884949 -500.87426758]
[-163.54046631 -515.07318115]
[-157.63455200 -528.86926270]
[-150.71418762 -542.18542480]
[-142.81803894 -554.94720459]
[-133.99026489 -567.08325195]
[-124.28025818 -578.52557373]
[-113.74230194 -589.21032715]
[-102.43534088 -599.07769775]
[-90.42259979 -608.07250977]
[-77.77127075 -616.14440918]
[-64.55209351 -623.24835205]
[-50.83900070 -629.34448242]
[-36.70868301 -634.39886475]
[-22.24016380 -638.38311768]
[-7.51435709 -641.27496338]
[7.38638210 -643.05822754]
[22.37872314 -643.72302246]
[37.37882233 -643.26556396]
[52.30278778 -641.68841553]
[67.06716156 -639.00042725]
[81.58937836 -635.21655273]
[95.78821564 -630.35803223]
[109.58426666 -624.45202637]
[122.90039062 -617.53149414]
[135.66209412 -609.63525391]
[147.79803467 -600.80737305]
[159.24032593 -591.09729004]
[169.92497253 -580.55920410]
[179.79223633 -569.25219727]
[188.78692627 -557.23937988]
[196.85873413 -544.58795166]
[203.96252441 -531.36871338]
[210.05857849 -517.65557861]
[215.11279297 -503.52520752]
[219.09690857 -489.05664062]
[221.98863220 -474.33081055]
[223.77180481 -459.43005371]
[224.43646240 -444.43771362]
[223.97886658 -429.43762207]
[222.40158081 -414.51367188]
[219.71343994 -399.74932861]
[215.92945862 -385.22714233]
[211.07081604 -371.02835083]
[205.16467285 -357.23233032]
[198.24406433 -343.91629028]
[190.34768677 -331.15463257]
[181.51969910 -319.01879883]
[171.80949402 -307.57659912]
[161.27134705 -296.89202881]
[149.96421814 -287.02487183]
[137.95130920 -278.03027344]
[125.29983521 -269.95858765]
[112.08053589 -262.85491943]
[98.36733246 -256.75897217]
[84.23693085 -251.70487976]
[69.76834106 -247.72090149]
[55.04248428 -244.82929993]
[56.82494736 -229.93557739]
[58.60741425 -215.04187012]
[60.38988113 -200.14814758]
[62.17234802 -185.25442505]
[64.28697205 -170.40423584]
[66.73269653 -155.60496521]
[69.17842865 -140.80569458]
[71.62415314 -126.00641632]
[83.84437561 -117.56830597]
[86.53551483 -102.59458160]
[77.60198975 -89.83409882]
[80.04771423 -75.03482819]
[82.49344635 -60.23556137]
[84.93917084 -45.43629074]
[99.19909668 -43.98657990]
[112.60763550 -38.88695908]
[124.24658203 -30.47991371]
[133.31715393 -19.33466339]
[139.19483948 -6.20859718]
[141.47239685 8.00417137]
[139.98799133 22.33372307]
[134.83680725 35.80051804]
[126.36484528 47.48234940]
[115.14576721 56.57750702]
[101.94201660 62.45978928]
[104.16713715 77.29383850]
[106.39225006 92.12787628]
[110.60728455 98.99854279]
[108.53836060 107.19918060]
[110.54237366 122.06470490]
[112.54638672 136.93023682]
[114.55039978 151.79576111]
[116.55441284 166.66128540]
[130.05224609 174.08523560]
[136.51490784 187.87243652]
[133.65380859 202.64668274]
[122.77190399 212.78187561]
[124.77591705 227.64739990]
[126.77993774 242.51293945]
[136.29158020 255.15568542]
[130.32402039 268.80258179]
[132.32803345 283.66809082]
[145.15318298 286.84887695]
[156.10758972 294.18093872]
[163.89950562 304.77359009]
[167.61897278 317.35308838]
[166.84408569 330.41607666]
[161.68873596 342.40899658]
[152.78648376 351.91290283]
[141.21276855 357.81146240]
[142.77330017 372.73007202]
[144.33381653 387.64868164]
[145.89434814 402.56729126]
[147.45486450 417.48590088]
[149.01539612 432.40451050]
[163.81500244 435.53927612]
[176.92054749 443.09570312]
[187.04809570 454.33349609]
[193.20544434 468.15167236]
[194.78936768 483.19650269]
[191.64466858 497.99398804]
[184.07945251 511.09448242]
[172.83488464 521.21447754]
[159.01257324 527.36260986]
[143.96670532 528.93640137]
[129.17131042 525.78179932]
[116.07589722 518.20782471]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 198]
[7 197]
[8 196]
[9 195]
[10 194]
[11 193]
[17 185]
[18 184]
[20 182]
[21 181]
[22 180]
[26 176]
[27 175]
[28 174]
[29 173]
[30 172]
[31 170]
[32 169]
[33 168]
[43 157]
[44 156]
[45 155]
[46 154]
[49 151]
[50 150]
[51 149]
[52 148]
[56 147]
[57 146]
[58 145]
[59 144]
[60 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
