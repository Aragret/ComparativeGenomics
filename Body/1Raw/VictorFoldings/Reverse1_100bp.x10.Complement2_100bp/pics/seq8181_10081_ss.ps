%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[120.55533600 548.46740723]
[119.26438141 533.44128418]
[121.75163269 518.56634521]
[127.86075592 504.77761841]
[137.20771790 492.94183350]
[149.20495605 483.80307007]
[163.09831238 477.93576050]
[160.87319946 463.10171509]
[158.64807129 448.26766968]
[156.42295837 433.43362427]
[154.19784546 418.59957886]
[151.97273254 403.76556396]
[148.97795105 389.06753540]
[145.22164917 374.54547119]
[141.46534729 360.02343750]
[137.70904541 345.50137329]
[134.87283325 343.40655518]
[132.91033936 339.83392334]
[132.50511169 335.20910645]
[134.12474060 330.24685669]
[131.02062988 315.57156372]
[127.91652679 300.89624023]
[119.80816650 313.51586914]
[105.52292633 318.09100342]
[91.59183502 312.53002930]
[84.38399506 299.37527466]
[87.19473267 284.64099121]
[98.73901367 275.06341553]
[113.73896027 275.02136230]
[125.33773804 284.53558350]
[123.77721405 269.61700439]
[122.21669006 254.69837952]
[113.19729614 242.84512329]
[119.45690918 228.31489563]
[117.56361389 213.43486023]
[115.33850098 198.60081482]
[113.11338043 183.76676941]
[110.11860657 169.06875610]
[106.36230469 154.54670715]
[102.60601044 140.02464294]
[98.84970856 125.50258636]
[95.09340668 110.98052216]
[91.12130737 96.51599884]
[86.40117645 82.27801514]
[81.15445709 68.22554016]
[75.90773773 54.17306900]
[63.83215332 43.95099640]
[66.62893677 29.32132530]
[61.38222122 15.26885414]
[56.13550186 1.21638322]
[50.88878250 -12.83608818]
[36.78826523 -19.45523834]
[31.66753006 -33.78118515]
[38.06477737 -47.18308258]
[34.03738022 -50.50380325]
[31.90019035 -54.62517548]
[31.64165306 -58.69312286]
[32.91291809 -61.98192596]
[28.29891014 -76.25466156]
[23.68490219 -90.52738953]
[9.89400864 -97.76956177]
[5.41806746 -112.30987549]
[12.40735817 -125.41275024]
[7.79334927 -139.68548584]
[3.17933989 -153.95822144]
[-1.43466938 -168.23095703]
[-6.04867840 -182.50367737]
[-10.66268826 -196.77641296]
[-22.26979065 -207.52749634]
[-18.82254601 -222.01770020]
[-23.43655586 -236.29042053]
[-28.05056381 -250.56315613]
[-32.66457367 -264.83590698]
[-47.46474457 -262.24725342]
[-62.48115540 -261.74368286]
[-77.42150116 -263.33493042]
[-91.99497223 -266.99011230]
[-105.91787720 -272.63800049]
[-118.91921997 -280.16867065]
[-130.74592590 -289.43557739]
[-141.16775513 -300.25830078]
[-149.98188782 -312.42617798]
[-157.01670837 -325.70236206]
[-162.13533020 -339.82846069]
[-165.23806763 -354.52944946]
[-166.26457214 -369.51919556]
[-165.19482422 -384.50588989]
[-162.04968262 -399.19787598]
[-156.89033508 -413.30911255]
[-149.81721497 -426.56497192]
[-140.96803284 -438.70736694]
[-130.51499939 -449.49996948]
[-118.66162109 -458.73269653]
[-105.63860321 -466.22586060]
[-91.69945526 -471.83355713]
[-77.11550140 -475.44662476]
[-62.17062378 -476.99481201]
[-47.15573120 -476.44787598]
[-32.36309052 -473.81655884]
[-18.08064461 -469.15203857]
[-4.58640623 -462.54507446]
[7.85695457 -454.12432861]
[19.00722504 -444.05371094]
[28.64736176 -432.52920532]
[36.58971786 -419.77520752]
[42.67968750 -406.03988647]
[46.79873657 -391.59069824]
[48.86668015 -376.70883179]
[48.84326553 -361.68399048]
[46.72895432 -346.80865479]
[42.56489182 -332.37234497]
[36.43214417 -318.65609741]
[28.45007706 -305.92691040]
[18.77407074 -294.43249512]
[7.59246731 -284.39666748]
[-4.87707710 -276.01477051]
[-18.39183998 -269.44989014]
[-13.77783108 -255.17716980]
[-9.16382217 -240.90443420]
[-4.54981279 -226.63169861]
[6.72726583 -216.90150452]
[3.61004543 -201.39042664]
[8.22405434 -187.11769104]
[12.83806419 -172.84495544]
[17.45207405 -158.57221985]
[22.06608200 -144.29949951]
[26.68009186 -130.02676392]
[40.01683426 -123.49476624]
[44.89941406 -109.08591461]
[37.95763397 -95.14140320]
[42.57164383 -80.86866760]
[47.18565369 -66.59593201]
[52.11724854 -52.42979813]
[65.73235321 -46.49983978]
[71.25345612 -32.32337570]
[64.94125366 -18.08280563]
[70.18797302 -4.03033495]
[75.43469238 10.02213669]
[80.68141174 24.07460785]
[92.38171387 33.29155350]
[89.96021271 48.92634964]
[95.20693207 62.97882080]
[100.45364380 77.03129578]
[108.96022797 64.67661285]
[123.91178131 63.47200775]
[134.28657532 74.30545807]
[132.43669128 89.19095612]
[119.72581482 97.15545654]
[105.52509308 92.32898712]
[109.43074799 95.83039093]
[111.09661865 101.27081299]
[109.61546326 107.22422028]
[113.37176514 121.74628448]
[117.12806702 136.26834106]
[120.88436890 150.79040527]
[124.64067078 165.31245422]
[132.17744446 152.34338379]
[146.24414062 147.13491821]
[160.40965271 152.06831360]
[168.19769287 164.88807678]
[166.04768372 179.73320007]
[154.94256592 189.81668091]
[139.95947266 190.52848816]
[127.94742584 181.54164124]
[130.17254639 196.37568665]
[132.39765930 211.20973206]
[135.65068054 215.29200745]
[136.88873291 219.76643372]
[136.29985046 223.79983521]
[134.37551880 226.75436401]
[143.50653076 239.67469788]
[137.13529968 253.13786316]
[138.69581604 268.05645752]
[140.25633240 282.97506714]
[142.59182739 297.79214478]
[145.69593811 312.46743774]
[148.80004883 327.14273071]
[152.23110962 341.74505615]
[155.98741150 356.26712036]
[159.74371338 370.78918457]
[163.50001526 385.31124878]
[171.03678894 372.34216309]
[185.10348511 367.13369751]
[199.26899719 372.06710815]
[207.05703735 384.88687134]
[204.90702820 399.73199463]
[193.80191040 409.81546021]
[178.81881714 410.52725220]
[166.80676270 401.54043579]
[169.03189087 416.37448120]
[171.25700378 431.20852661]
[173.48211670 446.04257202]
[175.70724487 460.87661743]
[177.93235779 475.71066284]
[192.93572998 477.24343872]
[207.08628845 482.46002197]
[219.49449158 491.03247070]
[229.38035583 502.42196655]
[236.12246704 515.91253662]
[239.29698181 530.65606689]
[238.70436096 545.72589111]
[234.38186646 560.17468262]
[226.60119629 573.09411621]
[215.85145569 583.67211914]
[202.80838013 591.24371338]
[188.29188538 595.33300781]
[173.21446228 595.68286133]
[158.52392578 592.27130127]
[145.14369202 585.31280518]
[133.91490173 575.24481201]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 194]
[8 193]
[9 192]
[10 191]
[11 190]
[12 189]
[13 181]
[14 180]
[15 179]
[16 178]
[20 177]
[21 176]
[22 175]
[30 174]
[31 173]
[32 172]
[34 170]
[35 166]
[36 165]
[37 164]
[38 156]
[39 155]
[40 154]
[41 153]
[42 152]
[43 149]
[44 143]
[45 142]
[46 141]
[48 139]
[49 138]
[50 137]
[51 136]
[54 133]
[58 132]
[59 131]
[60 130]
[63 127]
[64 126]
[65 125]
[66 124]
[67 123]
[68 122]
[70 120]
[71 119]
[72 118]
[73 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
