%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[82.36720276 741.42510986]
[67.35310364 741.33038330]
[52.43413544 739.64031982]
[37.77933502 736.37396240]
[23.55475807 731.56835938]
[9.92157841 725.27801514]
[-2.96573019 717.57415771]
[-14.96114445 708.54412842]
[-25.92874718 698.29016113]
[-35.74426651 686.92846680]
[-44.29648590 674.58782959]
[-51.48850250 661.40802002]
[-57.23882294 647.53845215]
[-61.48229599 633.13616943]
[-64.17083740 618.36444092]
[-65.27397919 603.39062500]
[-64.77922821 588.38439941]
[-62.69218826 573.51574707]
[-59.03651047 558.95318604]
[-53.85360718 544.86169434]
[-47.20221710 531.40100098]
[-39.15769577 518.72351074]
[-29.81119919 506.97299194]
[-19.26862717 496.28253174]
[-7.64943695 486.77322388]
[4.91471767 478.55288696]
[18.28147507 471.71463013]
[32.29938126 466.33590698]
[46.80959702 462.47772217]
[61.64771652 460.18374634]
[76.64561462 459.48001099]
[77.53842926 444.50659180]
[78.43124390 429.53320312]
[79.10102844 414.54815674]
[79.54763794 399.55480957]
[79.99423981 384.56146240]
[80.44084930 369.56811523]
[80.77582550 354.57183838]
[80.99915314 339.57351685]
[77.95558167 332.83862305]
[81.33911133 324.35397339]
[81.78572083 309.36062622]
[79.22084808 305.33190918]
[79.15956116 299.64920044]
[82.47544861 293.92938232]
[83.36826324 278.95596313]
[84.26107788 263.98254395]
[85.15390015 249.00915527]
[86.04671478 234.03575134]
[86.93952942 219.06234741]
[87.83234406 204.08894348]
[88.72515869 189.11552429]
[89.61797333 174.14212036]
[90.51079559 159.16871643]
[91.18058014 144.18368530]
[91.62718201 129.19032288]
[92.07379150 114.19698334]
[83.74431610 99.63689423]
[92.71562195 85.46325684]
[92.93894958 70.46492004]
[85.40797424 56.55107880]
[93.33390808 43.94041443]
[92.44108582 28.96700859]
[90.43707275 14.10148144]
[87.99134827 -0.69778973]
[85.10607910 -15.41768074]
[82.22080231 -30.13757324]
[79.33553314 -44.85746384]
[76.45025635 -59.57735443]
[61.40670013 -60.63876724]
[47.16159439 -65.55429077]
[34.68402100 -73.98317719]
[24.82117081 -85.34587097]
[18.24082756 -98.86389160]
[15.38614941 -113.61312103]
[16.44583321 -128.58702087]
[21.34165382 -142.76528931]
[29.73420334 -155.18339539]
[41.04640961 -164.99822998]
[54.50322723 -171.54525757]
[51.61795425 -186.26515198]
[48.73268127 -200.98503113]
[45.84740829 -215.70492554]
[40.60005188 -201.65269470]
[30.14908409 -190.89271545]
[16.25567818 -185.23822021]
[1.26111591 -185.64210510]
[-12.30775452 -192.03630066]
[-22.16433907 -203.34327698]
[-26.64763260 -217.65760803]
[-25.00211906 -232.56707764]
[-17.50509834 -245.55917358]
[-5.41994953 -254.44451904]
[9.21676826 -257.72573853]
[23.93851089 -254.84992981]
[36.26440430 -246.30169678]
[44.11788177 -233.52000427]
[44.11788177 -248.52000427]
[44.11788177 -263.52001953]
[44.11788177 -278.52001953]
[30.77675438 -286.12985229]
[23.04178429 -299.39883423]
[22.99364090 -314.75765991]
[30.64527512 -328.07485962]
[43.93843460 -335.76821899]
[59.29732895 -335.76821899]
[72.59048462 -328.07485962]
[80.24211884 -314.75765991]
[80.19397736 -299.39883423]
[72.45900726 -286.12985229]
[59.11788177 -278.52001953]
[59.11788177 -263.52001953]
[59.11788177 -248.52000427]
[59.11788177 -233.52000427]
[60.56729889 -218.59019470]
[63.45257187 -203.87031555]
[66.33784485 -189.15042114]
[69.22312164 -174.43052673]
[84.15578461 -173.44816589]
[98.33618927 -168.63020325]
[110.79578400 -160.29934692]
[120.68188477 -149.01850891]
[127.31609344 -135.55270386]
[130.24076843 -120.81719971]
[129.25067139 -105.81528473]
[124.40728760 -91.56999207]
[116.03509521 -79.05431366]
[104.69980621 -69.12472534]
[91.17015076 -62.46262741]
[94.05541992 -47.74273682]
[96.94069672 -33.02284622]
[99.82596588 -18.30295372]
[102.71124268 -3.58306241]
[104.95975494 -1.90905154]
[106.68065643 0.75649095]
[107.49295807 4.21706486]
[107.09378052 8.14200878]
[105.30260468 12.09746742]
[107.30661774 26.96299553]
[114.45852661 13.77777004]
[127.19292450 5.85090303]
[142.18106079 5.25445938]
[155.50508118 12.14434719]
[163.68211365 24.71956635]
[164.57469177 39.69298553]
[157.94952393 53.15058899]
[145.53839111 61.57458878]
[130.58554077 62.76297760]
[116.99961090 56.40510559]
[108.33224487 44.16374207]
[115.87919617 57.00480270]
[107.93728638 70.68824768]
[107.71395874 85.68658447]
[115.30745697 94.51721954]
[115.04737091 106.16082764]
[107.06713867 114.64358521]
[106.62053680 129.63693237]
[106.17392731 144.63027954]
[108.96630096 150.62313843]
[108.39826202 156.27772522]
[105.48419952 160.06153870]
[104.59138489 175.03494263]
[103.69856262 190.00834656]
[102.80574799 204.98175049]
[101.91293335 219.95515442]
[101.02011871 234.92855835]
[100.12730408 249.90196228]
[99.23448944 264.87536621]
[98.34166718 279.84878540]
[97.44885254 294.82217407]
[96.77906799 309.80722046]
[96.33246613 324.80056763]
[95.99748993 339.79684448]
[95.77416229 354.79516602]
[98.77545166 363.42245483]
[95.43419647 370.01470947]
[94.98758698 385.00805664]
[94.54098511 400.00140381]
[94.09437561 414.99475098]
[96.88674927 420.98760986]
[96.31871796 426.64218140]
[93.40464783 430.42599487]
[92.51183319 445.39941406]
[91.61901855 460.37283325]
[106.42701721 462.85379028]
[120.88740540 466.89474487]
[134.83633423 472.44985962]
[148.11576843 479.45623779]
[160.57521057 487.83441162]
[172.07350159 497.48953247]
[182.48037720 508.31216431]
[191.67788696 520.17968750]
[199.56182861 532.95758057]
[206.04287720 546.50115967]
[211.04759216 560.65692139]
[214.51925659 575.26440430]
[216.41854858 590.15820312]
[216.72395325 605.16949463]
[215.43197632 620.12823486]
[212.55729675 634.86486816]
[208.13247681 649.21240234]
[202.20762634 663.00836182]
[194.84991455 676.09637451]
[186.14268494 688.32818604]
[176.18461609 699.56512451]
[165.08851624 709.67987061]
[152.98014832 718.55792236]
[139.99667358 726.09857178]
[126.28521729 732.21643066]
[112.00114441 736.84216309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 184]
[32 183]
[33 182]
[34 179]
[35 178]
[36 177]
[37 176]
[38 174]
[39 173]
[41 172]
[42 171]
[45 170]
[46 169]
[47 168]
[48 167]
[49 166]
[50 165]
[51 164]
[52 163]
[53 162]
[54 161]
[55 158]
[56 157]
[57 156]
[59 153]
[60 152]
[62 150]
[63 139]
[64 138]
[65 133]
[66 132]
[67 131]
[68 130]
[69 129]
[80 118]
[81 117]
[82 116]
[83 115]
[97 114]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
