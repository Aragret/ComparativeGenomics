%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[207.49105835 435.17987061]
[210.50451660 420.47045898]
[215.09069824 406.17312622]
[221.19583130 392.45544434]
[228.74835205 379.47830200]
[237.65968323 367.39379883]
[247.82537842 356.34362793]
[259.12622070 346.45736694]
[250.52766418 334.16653442]
[241.92909241 321.87570190]
[233.33053589 309.58486938]
[224.73196411 297.29400635]
[216.13340759 285.00317383]
[207.53485107 272.71234131]
[192.86857605 270.38082886]
[183.97331238 258.03866577]
[186.51826477 242.67112732]
[177.91970825 230.38029480]
[169.32113647 218.08944702]
[160.72257996 205.79861450]
[156.25898743 204.09996033]
[152.81509399 199.57926941]
[152.05738831 193.01136780]
[143.82858276 180.46995544]
[130.37745667 174.07336426]
[129.27597046 158.29054260]
[121.04716492 145.74914551]
[112.81835938 133.20774841]
[104.58954620 120.66634369]
[88.35817719 117.68133545]
[79.20205688 103.95059204]
[82.68577576 87.81890106]
[74.27115631 75.40140533]
[65.85653687 62.98390579]
[57.34970856 50.62939835]
[48.75114441 38.33856201]
[40.15258026 26.04772186]
[36.48198700 40.59168243]
[23.67357635 48.39838409]
[9.06459141 44.99580383]
[1.02372229 32.33308411]
[4.15714312 17.66401291]
[16.66988754 9.39169693]
[31.39329529 12.25437450]
[23.92555428 -0.75457746]
[16.45781136 -13.76352978]
[8.99007130 -26.77248192]
[1.52232993 -39.78143311]
[-5.94541121 -52.79038620]
[-9.77564716 -54.83568954]
[-12.48346996 -57.70487213]
[-13.94770241 -60.94392014]
[-14.20706272 -64.10609436]
[-13.44394016 -66.80345917]
[-20.12413406 -80.23383331]
[-26.80432892 -93.66421509]
[-34.27207184 -106.67316437]
[-42.50087738 -119.21456909]
[-50.72968674 -131.75596619]
[-58.95849609 -144.29736328]
[-72.40065002 -137.60075378]
[-86.54050446 -132.54101562]
[-101.17955780 -129.18920898]
[-116.11228943 -127.59236145]
[-131.12907410 -127.77291107]
[-146.01908875 -129.72831726]
[-160.57331848 -133.43112183]
[-174.58743286 -138.82934570]
[-187.86470032 -145.84721375]
[-200.21873474 -154.38621521]
[-211.47608948 -164.32644653]
[-221.47874451 -175.52838135]
[-230.08625793 -187.83476257]
[-237.17781067 -201.07281494]
[-242.65385437 -215.05671692]
[-246.43750000 -229.59013367]
[-248.47563171 -244.46905518]
[-248.73963928 -259.48461914]
[-247.22581482 -274.42599487]
[-243.95541382 -289.08343506]
[-238.97434998 -303.25119019]
[-232.35253906 -316.73037720]
[-224.18295288 -329.33172607]
[-214.58027649 -340.87835693]
[-203.67932129 -351.20819092]
[-191.63310242 -360.17620850]
[-178.61074829 -367.65646362]
[-164.79505920 -373.54400635]
[-150.37998962 -377.75616455]
[-135.56791687 -380.23379517]
[-120.56676483 -380.94213867]
[-105.58712769 -379.87121582]
[-90.83930206 -377.03610229]
[-76.53031158 -372.47656250]
[-62.86105347 -366.25662231]
[-50.02340698 -358.46362305]
[-38.19759750 -349.20690918]
[-27.54963684 -338.61645508]
[-18.22901154 -326.84097290]
[-10.36656666 -314.04571533]
[-4.07267761 -300.41036987]
[0.56429905 -286.12628174]
[3.47926688 -271.39401245]
[4.63130426 -256.42041016]
[4.00423908 -241.41563416]
[1.60687363 -226.59036255]
[-2.52713656 -212.15269470]
[-8.33975697 -198.30531311]
[-15.74938583 -185.24263000]
[-24.65200615 -173.14801025]
[-34.92263412 -162.19125366]
[-46.41709518 -152.52616882]
[-38.18828583 -139.98477173]
[-29.95947838 -127.44337463]
[-21.73067093 -114.90196991]
[-19.66823769 -129.75950623]
[-9.35005951 -140.64689636]
[5.37544012 -143.50340271]
[19.01601410 -137.26364136]
[26.48406410 -124.25485992]
[24.99419403 -109.32903290]
[15.10208702 -98.05312347]
[0.49725509 -94.63275909]
[-13.37395382 -100.34440613]
[-6.69375896 -86.91403198]
[-0.01356436 -73.48365784]
[7.06354094 -60.25812912]
[14.53128242 -47.24917603]
[21.99902344 -34.24022293]
[29.46676445 -21.23127174]
[36.93450546 -8.22231865]
[44.40224838 4.78663349]
[52.44342041 17.44915771]
[61.04198456 29.73999596]
[69.64054871 42.03083420]
[76.05057526 45.70960236]
[78.27403259 54.56929016]
[86.68865204 66.98678589]
[95.10327148 79.40428162]
[107.74661255 80.29843140]
[117.61300659 88.25505829]
[121.16562653 100.42192078]
[117.13095093 112.43753815]
[125.35975647 124.97893524]
[133.58856201 137.52033997]
[141.81736755 150.06173706]
[155.85707092 157.35537720]
[156.36999512 172.24114990]
[164.59880066 184.78256226]
[173.01341248 197.20005798]
[181.61198425 209.49089050]
[190.21054077 221.78172302]
[198.80911255 234.07257080]
[214.11790466 236.94975281]
[222.66299438 249.53691101]
[219.82568359 264.11376953]
[228.42424011 276.40463257]
[237.02281189 288.69546509]
[245.62136841 300.98629761]
[254.21994019 313.27713013]
[262.81851196 325.56796265]
[271.41705322 337.85879517]
[284.57821655 330.63168335]
[298.44360352 324.86990356]
[312.85067749 320.64102173]
[327.63052368 317.99465942]
[342.60986328 316.96182251]
[357.61306763 317.55459595]
[372.46420288 319.76608276]
[386.98919678 323.57031250]
[401.01770020 328.92269897]
[414.38528442 335.76046753]
[426.93518066 344.00347900]
[438.52026367 353.55505371]
[449.00473022 364.30325317]
[458.26562500 376.12200928]
[466.19436646 388.87280273]
[472.69799805 402.40609741]
[477.70025635 416.56323242]
[481.14254761 431.17822266]
[482.98443604 446.07971191]
[483.20437622 461.09298706]
[481.79980469 476.04205322]
[478.78713989 490.75161743]
[474.20172119 505.04919434]
[468.09732056 518.76721191]
[460.54550171 531.74475098]
[451.63479614 543.82977295]
[441.46972656 554.88049316]
[430.16940308 564.76733398]
[417.86636353 573.37445068]
[404.70483398 580.60089111]
[390.83911133 586.36187744]
[376.43179321 590.58996582]
[361.65182495 593.23553467]
[346.67242432 594.26757812]
[331.66925049 593.67401123]
[316.81823730 591.46173096]
[302.29345703 587.65673828]
[288.26522827 582.30358887]
[274.89801025 575.46508789]
[262.34857178 567.22143555]
[250.76399231 557.66918945]
[240.28010559 546.92047119]
[231.01986694 535.10119629]
[223.09181213 522.34997559]
[216.58889771 508.81634521]
[211.58738708 494.65893555]
[208.14590454 480.04376221]
[206.30479431 465.14215088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 162]
[9 161]
[10 160]
[11 159]
[12 158]
[13 157]
[14 156]
[17 153]
[18 152]
[19 151]
[20 150]
[23 149]
[24 148]
[26 146]
[27 145]
[28 144]
[29 143]
[32 139]
[33 138]
[34 137]
[35 135]
[36 134]
[37 133]
[44 132]
[45 131]
[46 130]
[47 129]
[48 128]
[49 127]
[54 126]
[55 125]
[56 124]
[57 115]
[58 114]
[59 113]
[60 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
