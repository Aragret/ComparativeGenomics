%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUAAGUCGGUAUUAAAUGCAGAGCUCACUACACCCGCUAACUACUUUUCCGCCAACUCCGCAGACCACUCAUCACGUACCGAUCCUUAUCAGGACACCAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[50.86367035 617.99914551]
[36.69801712 623.00714111]
[21.97322464 625.99493408]
[6.97591496 626.90417480]
[-8.00198555 625.71734619]
[-22.66892815 622.45745850]
[-36.73941803 617.18798828]
[-49.93956375 610.01147461]
[-62.01242447 601.06762695]
[-72.72299957 590.53057861]
[-81.86280060 578.60534668]
[-89.25392151 565.52416992]
[-94.75249481 551.54162598]
[-98.25148010 536.92987061]
[-99.68277740 521.97338867]
[-99.01852417 506.96319580]
[-96.27164459 492.19158936]
[-91.49561310 477.94604492]
[-84.78339386 464.50384521]
[-76.26564789 452.12667847]
[-66.10816956 441.05548096]
[-54.50867844 431.50570679]
[-41.69296265 423.66329956]
[-27.91048431 417.68087769]
[-13.42952251 413.67489624]
[1.46804607 411.72332764]
[16.49223709 411.86419678]
[18.71735382 397.03015137]
[20.94247055 382.19610596]
[23.16758728 367.36206055]
[25.39270592 352.52801514]
[27.61782265 337.69396973]
[29.84293938 322.85992432]
[31.06991386 307.91018677]
[31.29324341 292.91183472]
[31.51657104 277.91351318]
[24.48694611 291.16433716]
[14.05018234 301.93811035]
[1.02936566 309.38513184]
[-13.54862690 312.91815186]
[-28.53411484 312.25848389]
[-42.74528122 307.45819092]
[-55.06137085 298.89584351]
[-64.51109314 287.24667358]
[-70.34918976 273.42944336]
[-72.11525726 258.53375244]
[-69.67001343 243.73440552]
[-63.20629120 230.19851685]
[-53.23386002 218.99357605]
[-40.53917694 211.00326538]
[-26.12340546 206.85772705]
[-11.12342834 206.88389587]
[3.27779222 211.07971191]
[15.94451618 219.11427307]
[25.87779236 230.35394287]
[32.29423904 243.91229248]
[34.68790054 258.72357178]
[39.30191040 244.45082092]
[34.07517624 233.54176331]
[37.80237198 221.61314392]
[49.00600052 215.22241211]
[53.83200073 201.01995850]
[58.65799713 186.81750488]
[55.42687225 172.27758789]
[67.19275665 161.70050049]
[72.01875305 147.49804688]
[76.84474945 133.29559326]
[63.86211777 140.80900574]
[48.93118286 139.37123108]
[37.62081528 129.51853943]
[34.14950562 114.92572784]
[39.81196213 101.03556824]
[52.49623108 93.02873993]
[67.47138977 93.89158630]
[79.15208435 103.30229950]
[83.18164825 117.75207520]
[89.66114044 104.22372437]
[96.03974915 90.64752197]
[102.31710815 77.02420044]
[108.28867340 63.26409912]
[113.95146179 49.37407303]
[119.61424255 35.48404694]
[125.27703094 21.59401894]
[129.35670471 7.15946579]
[131.80242920 -7.63980484]
[134.24815369 -22.43907547]
[136.69387817 -37.23834610]
[139.13960266 -52.03761673]
[137.46699524 -56.04465103]
[137.18486023 -59.97974014]
[138.09983826 -63.41459656]
[139.89933777 -66.02771759]
[142.19668579 -67.63404083]
[145.51895142 -82.26149750]
[148.51373291 -96.95950317]
[151.17951965 -111.72072601]
[153.84532166 -126.48194122]
[156.40115356 -141.26258850]
[158.84687805 -156.06185913]
[145.04240417 -162.13537598]
[133.18257141 -171.45175171]
[124.01286316 -183.42535400]
[118.10971069 -197.30352783]
[115.84420013 -212.21386719]
[117.35873413 -227.21910095]
[122.55810547 -241.37599182]
[131.11547852 -253.79461670]
[142.49293518 -263.69433594]
[155.97528076 -270.45281982]
[170.71499634 -273.64526367]
[185.78552246 -273.07095337]
[200.23953247 -268.76602173]
[213.16842651 -261.00106812]
[223.75949097 -250.26420593]
[231.34693909 -237.23036194]
[235.45384216 -222.71884155]
[235.82202148 -207.64186096]
[232.42835999 -192.94717407]
[225.48614502 -179.55850220]
[215.43179321 -168.31747437]
[202.89733887 -159.93069458]
[188.67068481 -154.92536926]
[173.64614868 -153.61613464]
[171.20042419 -138.81686401]
[173.21125793 -131.70501709]
[168.60653687 -123.81614685]
[165.94073486 -109.05492401]
[163.27494812 -94.29370880]
[164.97419739 -91.20423126]
[165.26145935 -87.13821411]
[163.69404602 -82.76825714]
[160.14640808 -78.93923950]
[156.82415771 -64.31178284]
[153.93887329 -49.59188843]
[151.49314880 -34.79261780]
[149.04742432 -19.99334908]
[146.60169983 -5.19407749]
[144.15597534 9.60519314]
[153.60487366 -2.04462624]
[166.58775330 -9.55759239]
[181.39649963 -11.94524574]
[196.08277893 -8.89344883]
[208.71434021 -0.80371773]
[217.62928772 11.25960350]
[221.65470886 25.70937729]
[220.26098633 40.64448929]
[213.63150024 54.09996796]
[202.63845825 64.30551147]
[188.72819519 69.91840363]
[173.73085022 70.20018005]
[159.61955261 65.11376190]
[148.25093079 55.32835770]
[141.12068176 42.13140106]
[139.16705322 27.25680542]
[133.50427246 41.14683151]
[127.84148407 55.03685760]
[122.17870331 68.92688751]
[123.20183563 72.30113220]
[122.64145660 76.33858490]
[120.20365143 80.28958893]
[115.94042969 83.30156708]
[109.66306305 96.92488098]
[109.41806793 104.98171234]
[103.18949127 110.70322418]
[96.70999146 124.23156738]
[91.04721069 138.12159729]
[86.22120667 152.32405090]
[81.39521027 166.52650452]
[84.28115082 182.08227539]
[72.86045074 191.64349365]
[68.03445435 205.84594727]
[63.20845795 220.04840088]
[67.21346283 238.02175903]
[53.57464600 249.06483459]
[48.96063614 263.33755493]
[46.51490784 278.13684082]
[46.29158020 293.13516235]
[46.06825256 308.13351440]
[55.55861282 296.51745605]
[69.78923035 291.77514648]
[84.35060120 295.37606812]
[94.73071289 306.20440674]
[97.71318817 320.90490723]
[92.37386322 334.92245483]
[80.36719513 343.91357422]
[65.41357422 345.09222412]
[52.14654922 338.09323120]
[44.67698288 325.08505249]
[42.45186615 339.91906738]
[40.22674942 354.75311279]
[38.00163269 369.58715820]
[35.77651596 384.42120361]
[33.55139542 399.25524902]
[31.32628059 414.08929443]
[45.73057938 418.36273193]
[59.39991760 424.59936523]
[72.06821442 432.67773438]
[83.48888397 442.44064331]
[93.43960571 453.69805908]
[101.72670746 466.23083496]
[108.18885803 479.79498291]
[112.70027924 494.12655640]
[115.17315674 508.94650269]
[115.55934906 523.96636963]
[113.85134888 538.89385986]
[110.08238983 553.43829346]
[104.32584381 567.31665039]
[96.69376373 580.25872803]
[87.33470154 592.01263428]
[76.43084717 602.34954834]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 194]
[28 193]
[29 192]
[30 191]
[31 190]
[32 189]
[33 188]
[34 178]
[35 177]
[36 176]
[57 175]
[58 174]
[61 172]
[62 171]
[63 170]
[65 168]
[66 167]
[67 166]
[76 165]
[77 164]
[78 162]
[79 161]
[80 157]
[81 156]
[82 155]
[83 154]
[84 138]
[85 137]
[86 136]
[87 135]
[88 134]
[93 133]
[94 132]
[95 128]
[96 127]
[97 126]
[98 124]
[99 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
