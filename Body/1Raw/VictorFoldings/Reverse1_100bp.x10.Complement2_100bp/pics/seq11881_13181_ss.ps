%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[49.51004410 598.77764893]
[51.56681442 613.75299072]
[49.11650848 628.66900635]
[42.37699890 642.19934082]
[31.94755745 653.14093018]
[18.75556946 660.52081299]
[3.97405338 663.68280029]
[-11.08262730 662.34570312]
[-25.07564354 656.62847900]
[-36.76074600 647.03942871]
[-45.09889984 634.43121338]
[-49.34869003 619.92498779]
[-49.13221741 604.81060791]
[-44.46874237 590.43206787]
[-35.77292633 578.06781006]
[-23.81800270 568.81738281]
[-9.66699409 563.50317383]
[5.42180300 562.59783936]
[8.96147537 548.02148438]
[12.50114822 533.44512939]
[16.04082108 518.86871338]
[11.52539253 504.67507935]
[22.30071831 493.09048462]
[25.84039116 478.51409912]
[24.32803535 475.32894897]
[24.28329659 471.25305176]
[26.10803413 466.98413086]
[29.87728882 463.37307739]
[34.06430054 448.96926880]
[38.25131226 434.56549072]
[42.43832397 420.16171265]
[46.62533569 405.75793457]
[50.81234360 391.35415649]
[54.99935532 376.95037842]
[59.18636703 362.54660034]
[63.26603317 348.11203003]
[67.23812866 333.64752197]
[70.45140076 318.99572754]
[72.89713287 304.19644165]
[75.34285736 289.39718628]
[77.78858948 274.59790039]
[75.77775574 267.48605347]
[80.38246918 259.59719849]
[83.04827118 244.83596802]
[85.71406555 230.07475281]
[88.37985992 215.31353760]
[91.04565430 200.55232239]
[93.60148621 185.77166748]
[94.60574341 170.80532837]
[94.15914154 155.81196594]
[93.71253204 140.81861877]
[93.26593018 125.82527161]
[92.81932068 110.83192444]
[91.92650604 95.85852051]
[90.58827209 80.91833496]
[89.25003815 65.97814941]
[87.91180420 51.03796387]
[76.97200775 36.22572327]
[84.97109222 20.60581398]
[75.84008026 7.68547440]
[82.21131897 -5.77768421]
[80.65079498 -20.69628906]
[79.09027100 -35.61489487]
[76.02277374 -39.83834457]
[74.98575592 -44.36359787]
[75.75415039 -48.36667252]
[77.80849457 -51.23233414]
[76.91567993 -66.20574188]
[76.02286530 -81.17914581]
[65.52893066 -96.31053925]
[73.98953247 -111.68535614]
[62.29711151 -121.97734833]
[61.37877655 -137.16323853]
[71.26267242 -148.24674988]
[70.14701843 -163.20520020]
[69.03137207 -178.16365051]
[67.91572571 -193.12211609]
[64.15670776 -201.44723511]
[66.89651489 -208.31129456]
[66.00369263 -223.28469849]
[64.88804626 -238.24314880]
[63.54981232 -253.18333435]
[62.21157837 -268.12350464]
[60.87334442 -283.06369019]
[59.53511047 -298.00387573]
[58.19687653 -312.94406128]
[43.22125626 -314.37423706]
[28.76348114 -318.53207397]
[15.31598282 -325.27590942]
[3.33677578 -334.37609863]
[-6.76613235 -345.52264404]
[-14.64864063 -358.33596802]
[-20.04227257 -372.37957764]
[-22.76332474 -387.17520142]
[-22.71911812 -402.21890259]
[-19.91115761 -416.99826050]
[-14.43508339 -431.00994873]
[-6.47740698 -443.77670288]
[3.69083548 -454.86370850]
[15.72331810 -463.89331055]
[29.21021843 -470.55801392]
[43.69217682 -474.63079834]
[58.67594528 -475.97293091]
[73.65118408 -474.53872681]
[88.10783386 -470.37701416]
[101.55351257 -463.62954712]
[113.53026581 -454.52612305]
[123.63017273 -443.37686157]
[131.50923157 -430.56143188]
[136.89907837 -416.51635742]
[139.61613464 -401.71997070]
[139.56787109 -386.67630005]
[136.75593567 -371.89767456]
[131.27607727 -357.88748169]
[123.31496429 -345.12286377]
[113.14373016 -334.03860474]
[101.10881042 -325.01223755]
[87.62011719 -318.35116577]
[73.13706207 -314.28231812]
[74.47529602 -299.34213257]
[75.81352997 -284.40194702]
[77.15176392 -269.46176147]
[78.48999786 -254.52156067]
[79.82823181 -239.58137512]
[82.85366821 -235.88600159]
[83.58980560 -230.25083923]
[80.97710419 -224.17750549]
[81.86991882 -209.20410156]
[82.87417603 -194.23776245]
[83.98982239 -179.27931213]
[85.10547638 -164.32084656]
[86.22112274 -149.36239624]
[97.63980865 -139.86770630]
[98.98432159 -124.71359253]
[88.94799042 -112.80101013]
[97.90633392 -104.67238617]
[98.95822144 -92.21937561]
[90.99626923 -82.07196045]
[91.88908386 -67.09855652]
[92.78189850 -52.12514877]
[94.00887299 -37.17541504]
[95.56939697 -22.25681114]
[97.12992096 -7.33820724]
[106.14931488 4.51505327]
[99.88970184 19.04528999]
[109.08609772 26.90358734]
[110.50828552 39.31975174]
[102.85198975 49.69972992]
[104.19022369 64.63991547]
[105.52845764 79.58010101]
[106.86669159 94.52028656]
[109.03148651 96.66578674]
[110.46346283 99.64638519]
[110.85181427 103.19217682]
[109.98979950 106.92221069]
[107.81267548 110.38531494]
[108.25927734 125.37866974]
[108.70588684 140.37202454]
[109.15248871 155.36537170]
[109.59909821 170.35871887]
[117.06742859 157.35009766]
[129.13294983 148.43812561]
[143.76239014 145.12460327]
[158.49043274 147.96792603]
[170.83515930 156.48893738]
[178.71626282 169.25170898]
[180.80563354 184.10546875]
[176.75117493 198.54713440]
[167.23612976 210.14299011]
[153.86396790 216.93896484]
[138.88812256 217.78979492]
[124.83227539 212.55209351]
[114.06510162 202.10853577]
[108.40075684 188.21739197]
[110.08906555 197.19444275]
[105.80686951 203.21810913]
[103.14107513 217.97933960]
[100.47528076 232.74055481]
[97.80948639 247.50177002]
[95.14369202 262.26300049]
[92.58786011 277.04364014]
[90.14212799 291.84289551]
[87.69640350 306.64218140]
[85.25067902 321.44143677]
[97.39340210 312.63497925]
[112.36432648 313.56851196]
[123.31893158 323.81530762]
[125.24893188 338.69064331]
[117.27194977 351.39367676]
[103.03495026 356.11682129]
[89.04690552 350.70068359]
[81.70265198 337.61959839]
[77.73056030 352.08413696]
[78.47577667 361.18811035]
[73.59014893 366.73361206]
[69.40313721 381.13739014]
[65.21612549 395.54116821]
[61.02911758 409.94494629]
[56.84210587 424.34872437]
[52.65509415 438.75250244]
[48.46808243 453.15628052]
[44.28107071 467.56005859]
[40.41676712 482.05377197]
[36.87709427 496.63015747]
[41.13933945 511.86639404]
[30.61719513 522.40838623]
[27.07752228 536.98480225]
[23.53785133 551.56115723]
[19.99817848 566.13751221]
[32.99130630 573.86218262]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 209]
[19 208]
[20 207]
[21 206]
[23 204]
[24 203]
[28 202]
[29 201]
[30 200]
[31 199]
[32 198]
[33 197]
[34 196]
[35 195]
[36 193]
[37 192]
[38 184]
[39 183]
[40 182]
[41 181]
[43 180]
[44 179]
[45 178]
[46 177]
[47 176]
[48 174]
[49 160]
[50 159]
[51 158]
[52 157]
[53 156]
[54 151]
[55 150]
[56 149]
[57 148]
[59 145]
[61 143]
[62 142]
[63 141]
[67 140]
[68 139]
[69 138]
[71 135]
[74 132]
[75 131]
[76 130]
[77 129]
[79 128]
[80 127]
[81 124]
[82 123]
[83 122]
[84 121]
[85 120]
[86 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
