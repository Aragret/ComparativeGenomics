%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[74.42417145 430.40863037]
[75.50454712 415.28881836]
[81.69388580 401.45162964]
[92.24478912 390.56793213]
[105.88317871 383.95205688]
[104.32265472 369.03344727]
[102.76213074 354.11483765]
[101.20161438 339.19622803]
[99.64109039 324.27764893]
[97.30560303 309.46057129]
[94.20149231 294.78527832]
[89.74185181 288.89175415]
[91.16212463 279.86840820]
[88.27685547 265.14852905]
[85.39157867 250.42863464]
[82.50630951 235.70875549]
[79.62104034 220.98886108]
[75.55322266 235.42675781]
[67.78818512 248.26046753]
[56.88647461 258.56350708]
[43.63510132 265.59210205]
[28.99069405 268.83883667]
[14.01044464 268.06936646]
[-0.22421031 263.33917236]
[-12.68565845 254.98979187]
[-22.47429848 243.62393188]
[-28.88347816 230.06213379]
[-31.45051384 215.28341675]
[-29.99008942 200.35469055]
[-24.60763359 186.35365295]
[-15.69171047 174.29104614]
[-3.88596916 165.03768921]
[9.95732403 159.26161194]
[24.83880997 157.37976074]
[39.68418121 159.52799988]
[53.42173767 165.55123901]
[65.05975342 175.01467896]
[73.75807190 187.23512268]
[78.88899994 201.33151245]
[80.67146301 186.43778992]
[82.45393372 171.54406738]
[84.12547302 156.63749695]
[85.68599701 141.71890259]
[87.24652100 126.80029297]
[76.25041962 137.00253296]
[61.37186813 138.90744019]
[48.16019058 131.80450439]
[41.54301834 118.34297180]
[43.98839569 103.54364014]
[54.58425140 92.92630768]
[69.37860107 90.45096588]
[82.85350800 97.04087067]
[89.98339081 110.23928070]
[86.03180695 96.82747650]
[95.38915253 86.43845367]
[98.71141052 71.81099701]
[102.03366852 57.18353653]
[105.35592651 42.55607605]
[93.22540283 51.37935638]
[78.22590637 51.50272369]
[65.95188904 42.88016510]
[60.98125458 28.72768402]
[65.16792297 14.32380199]
[76.95037079 5.04081345]
[91.93404388 4.34104300]
[104.53038788 12.48548794]
[110.04136658 26.43763733]
[115.07828522 12.30860806]
[120.11520386 -1.82042146]
[125.15211487 -15.94945145]
[130.18904114 -30.07847977]
[134.26870728 -44.51303482]
[137.37281799 -59.18833542]
[140.47692871 -73.86363983]
[130.50776672 -83.38239288]
[126.57498932 -96.48017120]
[129.60340881 -109.70508575]
[138.69775391 -119.62664032]
[151.40368652 -123.72555542]
[154.72595215 -138.35301208]
[158.04820251 -152.98048401]
[161.37046814 -167.60794067]
[164.69273376 -182.23539734]
[158.49183655 -193.54521179]
[161.56008911 -205.66006470]
[171.72392273 -212.21925354]
[175.26359558 -226.79563904]
[178.80326843 -241.37200928]
[182.34294128 -255.94837952]
[185.88261414 -270.52474976]
[180.29006958 -288.06912231]
[192.88929749 -300.28497314]
[196.21154785 -314.91241455]
[199.53381348 -329.53988647]
[202.85606384 -344.16735840]
[206.17832947 -358.79479980]
[192.33981323 -364.68847656]
[179.77615356 -372.95855713]
[168.89123535 -383.33923340]
[160.03494263 -395.49676514]
[153.49198914 -409.04037476]
[149.47268677 -423.53469849]
[148.10624695 -438.51376343]
[149.43658447 -453.49609375]
[153.42095947 -468.00003052]
[159.93127441 -481.55935669]
[168.75823975 -493.73822021]
[179.61813354 -504.14508057]
[192.16181946 -512.44543457]
[205.98609924 -518.37237549]
[220.64656067 -521.73547363]
[235.67195129 -522.42663574]
[250.57923889 -520.42352295]
[264.88925171 -515.79064941]
[278.14193726 -508.67687988]
[289.91131592 -499.31088257]
[299.81903076 -487.99377441]
[307.54660034 -475.08935547]
[312.84561157 -461.01239014]
[315.54568481 -446.21548462]
[315.56008911 -431.17419434]
[312.88833618 -416.37213135]
[307.61630249 -402.28506470]
[299.91348267 -389.36584473]
[290.02746582 -378.02978516]
[278.27603149 -368.64126587]
[265.03698730 -361.50213623]
[250.73590088 -356.84182739]
[235.83247375 -354.81021118]
[220.80578613 -355.47256470]
[217.48353577 -340.84509277]
[214.16127014 -326.21762085]
[210.83900452 -311.59017944]
[207.51675415 -296.96270752]
[213.69590759 -286.56344604]
[211.04779053 -274.34988403]
[200.45898438 -266.98507690]
[196.91931152 -252.40872192]
[193.37963867 -237.83233643]
[189.83996582 -223.25596619]
[186.30029297 -208.67958069]
[192.14083862 -192.13102722]
[179.32019043 -178.91313171]
[175.99792480 -164.28567505]
[172.67567444 -149.65821838]
[169.35340881 -135.03076172]
[166.03114319 -120.40329742]
[177.23490906 -108.40524292]
[179.09817505 -91.92829132]
[170.68981934 -77.44379425]
[155.15222168 -70.75952911]
[152.04811096 -56.08422470]
[148.94400024 -41.40892410]
[160.49151611 -50.98258972]
[175.36857605 -52.89905548]
[188.96539307 -46.56447983]
[197.06881714 -33.94170761]
[197.16792297 -18.94203377]
[189.23200989 -6.21327496]
[175.72010803 0.30042505]
[160.81901550 -1.41927421]
[149.14599609 -10.83950520]
[144.31806946 -25.04156494]
[139.28114319 -10.91253471]
[134.24423218 3.21649480]
[129.20732117 17.34552383]
[124.17040253 31.47455406]
[119.98339081 45.87833405]
[116.66112518 60.50579453]
[113.33886719 75.13325500]
[110.01660919 89.76071930]
[113.96819305 103.17252350]
[104.61084747 113.56154633]
[102.16512299 128.36080933]
[100.60459900 143.27941895]
[99.04407501 158.19802856]
[101.26371765 167.05867004]
[97.34764862 173.32653809]
[95.56518555 188.22026062]
[93.78271484 203.11396790]
[94.34092712 218.10359192]
[97.22620392 232.82347107]
[100.11147308 247.54336548]
[102.99674225 262.26324463]
[105.88201904 276.98315430]
[108.87679291 291.68115234]
[111.98090363 306.35644531]
[120.08926392 293.73684692]
[134.37449646 289.16168213]
[148.30558777 294.72268677]
[155.51342773 307.87741089]
[152.70269775 322.61172485]
[141.15841675 332.18927002]
[126.15847015 332.23135376]
[114.55969238 322.71710205]
[116.12021637 337.63571167]
[117.68074036 352.55432129]
[119.24126434 367.47293091]
[120.80178070 382.39154053]
[135.51405334 386.04187012]
[148.08883667 394.50653076]
[157.00767517 406.76336670]
[161.19357300 421.33233643]
[160.14105225 436.45410156]
[153.97723389 450.30267334]
[143.44641113 461.20578003]
[129.82022095 467.84677124]
[114.74412537 469.42376709]
[100.03860474 465.74633789]
[87.47944641 457.25851440]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 199]
[6 198]
[7 197]
[8 196]
[9 195]
[10 187]
[11 186]
[13 185]
[14 184]
[15 183]
[16 182]
[17 181]
[39 180]
[40 179]
[41 178]
[42 176]
[43 175]
[44 174]
[53 173]
[55 171]
[56 170]
[57 169]
[58 168]
[67 167]
[68 166]
[69 165]
[70 164]
[71 163]
[72 153]
[73 152]
[74 151]
[79 147]
[80 146]
[81 145]
[82 144]
[83 143]
[86 141]
[87 140]
[88 139]
[89 138]
[90 137]
[92 134]
[93 133]
[94 132]
[95 131]
[96 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
