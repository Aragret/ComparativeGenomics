%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[45.82408142 539.54754639]
[38.84453201 552.84844971]
[30.22135735 565.14758301]
[20.09615707 576.24304199]
[8.63519764 585.95257568]
[-3.97332382 594.11669922]
[-17.52236176 600.60144043]
[-31.78943062 605.30029297]
[-46.54025269 608.13604736]
[-61.53260422 609.06219482]
[-76.52029419 608.06353760]
[-91.25721741 605.15637207]
[-105.50138092 600.38854980]
[-119.01887512 593.83831787]
[-131.58773804 585.61322021]
[-143.00157166 575.84832764]
[-153.07295227 564.70404053]
[-161.63650513 552.36328125]
[-168.55158997 539.02874756]
[-173.70468140 524.91937256]
[-177.01113892 510.26690674]
[-178.41668701 495.31188965]
[-177.89822388 480.29989624]
[-175.46427917 465.47747803]
[-171.15481567 451.08801270]
[-165.04058838 437.36776733]
[-157.22201538 424.54208374]
[-147.82748413 412.82156372]
[-137.01124573 402.39862061]
[-124.95092773 393.44445801]
[-111.84456635 386.10610962]
[-97.90737152 380.50405884]
[-83.36821747 376.73028564]
[-68.46584320 374.84680176]
[-53.44496155 374.88449097]
[-38.55222702 376.84274292]
[-24.03219414 380.68942261]
[-18.36940765 366.79940796]
[-12.70662022 352.90939331]
[-15.06658649 338.20291138]
[-2.69200349 328.34490967]
[2.97078323 314.45489502]
[8.63356972 300.56484985]
[14.29635620 286.67483521]
[19.85558319 272.74304199]
[25.31093979 258.77023315]
[22.73227882 244.10055542]
[34.95871735 234.05940247]
[32.38005829 219.38970947]
[44.60649490 209.34855652]
[50.06185532 195.37576294]
[48.98859406 192.01712036]
[49.48880005 187.97177124]
[51.86751175 183.98490906]
[56.08541870 180.90980530]
[62.15925217 167.19453430]
[60.23819733 152.42433167]
[72.90080261 142.93913269]
[78.97463989 129.22386169]
[85.04846954 115.50859833]
[91.12230682 101.79333496]
[90.25699615 98.03519440]
[91.05241394 93.91388702]
[93.63362122 90.17966461]
[97.78580475 87.61076355]
[104.46599579 74.18038940]
[111.14619446 60.75001526]
[117.82638550 47.31963730]
[122.33401489 33.01295090]
[124.55913544 18.17890739]
[126.78424835 3.34486341]
[121.17968750 -11.45038700]
[130.71936035 -22.88908768]
[132.94447327 -37.72313309]
[127.33991241 -52.51838303]
[136.87959290 -63.95708466]
[139.10470581 -78.79113007]
[133.50013733 -93.58638000]
[143.03982544 -105.02507782]
[145.26493835 -119.85912323]
[147.49005127 -134.69316101]
[141.88548279 -149.48841858]
[151.42517090 -160.92712402]
[153.65028381 -175.76115417]
[155.87539673 -190.59519958]
[158.10050964 -205.42924500]
[160.32563782 -220.26329041]
[150.33630371 -227.77867126]
[144.52386475 -238.76431274]
[143.93713379 -251.10671997]
[148.62615967 -262.46075439]
[157.64436340 -270.69512939]
[169.23893738 -274.29251099]
[171.90473938 -289.05371094]
[174.57052612 -303.81494141]
[177.23632812 -318.57617188]
[179.90211487 -333.33737183]
[182.56791687 -348.09860229]
[185.23370361 -362.85980225]
[171.46723938 -369.00375366]
[159.57157898 -378.26422119]
[150.23831177 -390.10287476]
[144.01007080 -403.83139038]
[141.24894714 -418.65164185]
[142.11546326 -433.70196533]
[146.55926514 -448.10739136]
[154.32199097 -461.03039551]
[164.95230103 -471.71960449]
[177.83219910 -479.55364990]
[192.21282959 -484.07699585]
[207.25814819 -485.02670288]
[222.09342957 -482.34750366]
[235.85615540 -476.19525146]
[247.74621582 -466.92755127]
[257.07229614 -455.08325195]
[263.29223633 -441.35095215]
[266.04437256 -426.52902222]
[265.16870117 -411.47921753]
[260.71618652 -397.07650757]
[252.94563293 -384.15823364]
[242.30882263 -373.47543335]
[229.42419434 -365.64923096]
[215.04081726 -361.13458252]
[199.99493408 -360.19400024]
[197.32913208 -345.43280029]
[194.66333008 -330.67156982]
[191.99754333 -315.91036987]
[189.33174133 -301.14913940]
[186.66595459 -286.38793945]
[184.00015259 -271.62670898]
[196.79487610 -259.45434570]
[199.74740601 -241.88351440]
[191.48939514 -225.91841125]
[175.15968323 -218.03817749]
[172.93455505 -203.20413208]
[170.70944214 -188.37008667]
[168.48432922 -173.53604126]
[166.25920105 -158.70199585]
[172.02293396 -144.96777344]
[162.32409668 -132.46804810]
[160.09898376 -117.63400269]
[157.87385559 -102.79995728]
[163.63757324 -89.06574249]
[153.93875122 -76.56600952]
[151.71363831 -61.73196411]
[157.47735596 -47.99774551]
[147.77851868 -35.49801636]
[145.55340576 -20.66397095]
[151.31712341 -6.92974997]
[141.61828613 5.56998062]
[139.39317322 20.40402412]
[137.16806030 35.23806763]
[145.84783936 23.00444984]
[157.47149658 13.52338314]
[171.19990540 7.47931480]
[186.04200745 5.30857086]
[200.92633057 7.16785908]
[214.77836609 12.92295647]
[226.59811401 22.15839577]
[235.53231812 34.20746613]
[240.93598938 48.20033264]
[242.41905212 63.12683487]
[239.87442017 77.90942383]
[233.48580933 91.48092651]
[223.71441650 102.86160278]
[211.26564026 111.22987366]
[197.03816223 115.98162842]
[182.05909729 116.77383423]
[167.40979004 113.54929352]
[154.14778137 106.54079437]
[143.23045349 96.25429535]
[135.44596863 83.43237305]
[131.35627747 69.00065613]
[131.25675964 53.99983215]
[124.57656860 67.43020630]
[117.89636993 80.86058044]
[111.21617889 94.29096222]
[104.83757019 107.86716461]
[98.76374054 121.58243561]
[92.68990326 135.29769897]
[86.61607361 149.01296997]
[88.10268402 164.76417542]
[75.87451935 173.26837158]
[69.80068207 186.98362732]
[64.03465271 200.83111572]
[58.57929611 214.80390930]
[60.76775360 230.47303772]
[48.93151474 239.51475525]
[51.11997223 255.18386841]
[39.28373718 264.22558594]
[33.82838058 278.19839478]
[33.62242508 287.33050537]
[28.18638420 292.33761597]
[22.52359581 306.22766113]
[16.86080933 320.11767578]
[11.19802380 334.00769043]
[13.15294838 349.70767212]
[1.18340647 358.57217407]
[-4.47938013 372.46218872]
[-10.14216709 386.35223389]
[2.92852879 393.75393677]
[14.94537163 402.76635742]
[25.71103477 413.24151611]
[35.04873657 425.00738525]
[42.80514526 437.87075806]
[48.85289001 451.62039185]
[53.09265900 466.03057861]
[55.45484161 480.86459351]
[55.90063858 495.87890625]
[54.42273331 510.82696533]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 200]
[38 199]
[39 198]
[41 196]
[42 195]
[43 194]
[44 193]
[45 191]
[46 190]
[48 188]
[50 186]
[51 185]
[55 184]
[56 183]
[58 181]
[59 180]
[60 179]
[61 178]
[65 177]
[66 176]
[67 175]
[68 174]
[69 152]
[70 151]
[71 150]
[73 148]
[74 147]
[76 145]
[77 144]
[79 142]
[80 141]
[81 140]
[83 138]
[84 137]
[85 136]
[86 135]
[87 134]
[93 130]
[94 129]
[95 128]
[96 127]
[97 126]
[98 125]
[99 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
