%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCAAUAAAAGCAAUUACAAUCAUUCCCACCCCUUCGCUCCAACUGGACAAUCCCACUCUUCUUAAUAAGCUCACGAUAUCCGCGAACAGUCCCUCCAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[91.41181183 811.25830078]
[78.39247894 803.79125977]
[66.03423309 795.27465820]
[54.42150497 785.76654053]
[43.63362122 775.33190918]
[33.74427414 764.04211426]
[24.82101631 751.97418213]
[16.92480850 739.21057129]
[10.10958672 725.83850098]
[4.42190790 711.94927979]
[-0.09937458 697.63781738]
[-3.42337513 683.00189209]
[-5.52738762 668.14147949]
[-6.39703894 653.15802002]
[-6.02638865 638.15399170]
[-4.41796827 623.23175049]
[-1.58276558 608.49334717]
[2.45985198 594.03936768]
[7.68226862 579.96862793]
[14.04881001 566.37719727]
[21.51598549 553.35797119]
[30.03278351 540.99981689]
[39.54103088 529.38720703]
[49.97576904 518.59942627]
[61.26571655 508.71023560]
[73.33375549 499.78710938]
[86.09745026 491.89105225]
[99.46960449 485.07598877]
[113.35887146 479.38848877]
[127.67037201 474.86737061]
[124.34811401 460.23989868]
[121.02584839 445.61245728]
[108.42663574 433.39660645]
[114.01917267 415.85223389]
[110.47949982 401.27587891]
[106.93982697 386.69949341]
[103.40015411 372.12310791]
[99.86048126 357.54675293]
[95.72302246 371.96484375]
[86.71470642 383.95858765]
[74.02072906 391.95001221]
[59.31121445 394.88772583]
[44.52144241 392.38519287]
[31.59726524 384.77169800]
[22.23908043 373.04885864]
[17.67811584 358.75909424]
[18.51444817 343.78244019]
[24.63804054 330.08932495]
[35.24323273 319.48129272]
[48.93472290 313.35406494]
[63.91116714 312.51373291]
[78.20215607 317.07089233]
[89.92745972 326.42596436]
[97.54522705 339.35037231]
[97.32189941 324.35202026]
[97.09857178 309.35369873]
[86.26526642 299.19616699]
[85.82512665 283.98889160]
[96.55271912 272.69479370]
[96.32939148 257.69647217]
[86.53085327 243.13777161]
[95.63298035 227.13050842]
[95.18637085 212.13714600]
[94.73976898 197.14379883]
[94.29315948 182.15045166]
[93.84655762 167.15710449]
[93.39994812 152.16375732]
[90.05869293 145.57150269]
[93.05998230 136.94421387]
[92.83665466 121.94587708]
[92.61332703 106.94754028]
[89.35401154 99.57533264]
[92.50000000 91.72462463]
[92.50000000 76.72462463]
[92.50000000 61.72462845]
[82.92531586 45.99545288]
[92.28604126 31.15147400]
[92.06271362 16.15313530]
[84.12080383 2.46969032]
[91.66775513 -10.37136745]
[91.44442749 -25.36970520]
[83.50252533 -39.05315018]
[91.04947662 -51.89421082]
[90.82614899 -66.89254761]
[90.60282135 -81.89088440]
[90.37949371 -96.88922119]
[87.32231140 -102.75140381]
[87.63729095 -108.42571259]
[90.37949371 -112.33587646]
[90.60282135 -127.33421326]
[82.19570160 -137.11599731]
[82.69048309 -149.60354614]
[91.27693176 -158.12406921]
[91.72354126 -173.11741638]
[92.17014313 -188.11077881]
[84.84716034 -202.13519287]
[92.95996857 -214.62644958]
[93.40657043 -229.61981201]
[79.31388855 -235.20298767]
[67.98271942 -245.27177429]
[60.78136063 -258.61032104]
[58.57941437 -273.60787964]
[61.64277649 -288.45346069]
[69.60152435 -301.35440063]
[81.49461365 -310.75283813]
[95.88587952 -315.51385498]
[111.03751373 -315.06253052]
[125.11988831 -309.45336914]
[136.43247986 -299.36370850]
[143.60923767 -286.01193237]
[145.78355408 -271.01034546]
[142.69284058 -256.17041016]
[134.71032715 -243.28416443]
[122.79994202 -233.90768433]
[108.39992523 -229.17320251]
[107.95331573 -214.17985535]
[115.30825043 -201.22784424]
[107.16349792 -187.66416931]
[106.71688843 -172.67082214]
[106.27028656 -157.67745972]
[115.40896606 -142.69577026]
[105.60115814 -127.11088562]
[105.37783051 -112.11254883]
[105.37783051 -97.11254883]
[105.60115814 -82.11421204]
[105.82448578 -67.11587524]
[106.04781342 -52.11753845]
[113.97374725 -39.50687408]
[106.44276428 -25.59303284]
[106.66609192 -10.59469509]
[114.59202576 2.01596880]
[107.06105042 15.92980862]
[107.28437805 30.92814636]
[115.74301910 39.57556915]
[116.05182648 52.06910324]
[107.50000000 61.72462845]
[107.50000000 76.72462463]
[107.50000000 91.72462463]
[107.61166382 106.72421265]
[107.83499146 121.72254944]
[108.05831909 136.72088623]
[108.39329529 151.71714783]
[108.83990479 166.71049500]
[109.28650665 181.70384216]
[109.73311615 196.69718933]
[110.17972565 211.69055176]
[110.62632751 226.68389893]
[119.46184540 236.08052063]
[119.52515411 248.57771301]
[111.32772827 257.47314453]
[111.55105591 272.47146606]
[122.61015320 283.44116211]
[122.62298584 298.65478516]
[112.09690857 309.13034058]
[112.32023621 324.12869263]
[112.54356384 339.12704468]
[114.43685913 354.00708008]
[117.97653198 368.58343506]
[121.51620483 383.15982056]
[125.05587769 397.73620605]
[128.59555054 412.31256104]
[139.18434143 419.67736816]
[141.83245850 431.89093018]
[135.65330505 442.29019165]
[138.97557068 456.91763306]
[142.29783630 471.54510498]
[157.15818787 469.44055176]
[172.14160156 468.57037354]
[187.14567566 468.94049072]
[202.06794739 470.54837036]
[216.80647278 473.38305664]
[231.26057434 477.42514038]
[245.33151245 482.64706421]
[258.92315674 489.01312256]
[271.94268799 496.47982788]
[284.30111694 504.99618530]
[295.91406250 514.50402832]
[306.70220947 524.93835449]
[316.59182739 536.22796631]
[325.51538086 548.29571533]
[333.41189575 561.05908203]
[340.22741699 574.43103027]
[345.91543579 588.32006836]
[350.43704224 602.63140869]
[353.76141357 617.26727295]
[355.86578369 632.12768555]
[356.73577881 647.11108398]
[356.36547852 662.11517334]
[354.75741577 677.03741455]
[351.92257690 691.77587891]
[347.88031006 706.22991943]
[342.65820312 720.30084229]
[336.29199219 733.89239502]
[328.82513428 746.91180420]
[320.30862427 759.27014160]
[310.80065918 770.88299561]
[300.36618042 781.67102051]
[289.07647705 791.56048584]
[277.00863647 800.48388672]
[264.24514771 808.38024902]
[250.87313843 815.19561768]
[236.98400879 820.88348389]
[222.67262268 825.40490723]
[208.03672791 828.72912598]
[193.17631531 830.83331299]
[178.19288635 831.70312500]
[163.18881226 831.33264160]
[148.26658630 829.72442627]
[133.52812195 826.88940430]
[119.07411957 822.84692383]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 166]
[31 165]
[32 164]
[34 161]
[35 160]
[36 159]
[37 158]
[38 157]
[54 156]
[55 155]
[56 154]
[59 151]
[60 150]
[62 147]
[63 146]
[64 145]
[65 144]
[66 143]
[67 142]
[69 141]
[70 140]
[71 139]
[73 138]
[74 137]
[75 136]
[77 133]
[78 132]
[80 130]
[81 129]
[83 127]
[84 126]
[85 125]
[86 124]
[89 123]
[90 122]
[93 120]
[94 119]
[95 118]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
