%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[59.03932571 680.97137451]
[44.26841736 683.66168213]
[29.29720306 684.79327393]
[14.28972149 684.35369873]
[-0.58959872 682.34783936]
[-15.17773247 678.79760742]
[-29.31484413 673.74194336]
[-42.84603882 667.23626709]
[-55.62306213 659.35174561]
[-67.50592041 650.17486572]
[-78.36441803 639.80609131]
[-88.07958984 628.35913086]
[-96.54498291 615.95935059]
[-103.66784668 602.74261475]
[-109.37014771 588.85369873]
[-113.58940125 574.44482422]
[-116.27938080 559.67382812]
[-117.41060638 544.70257568]
[-116.97069550 529.69512939]
[-114.96446228 514.81585693]
[-111.41388702 500.22781372]
[-106.35787201 486.09082031]
[-99.85181427 472.55978394]
[-91.96700287 459.78295898]
[-82.78981781 447.90032959]
[-72.42082214 437.04208374]
[-60.97360992 427.32717896]
[-48.57361221 418.86209106]
[-35.35669327 411.73953247]
[-21.46765518 406.03756714]
[-7.05867863 401.81866455]
[7.71236229 399.12905884]
[22.68362999 397.99819946]
[37.69108963 398.43847656]
[39.69510269 383.57293701]
[41.69911957 368.70742798]
[43.59241104 353.82739258]
[45.37487411 338.93365479]
[47.15734100 324.03994751]
[48.93980789 309.14624023]
[50.72227478 294.25250244]
[52.50473785 279.35879517]
[41.35796356 289.39617920]
[26.45269966 291.07937622]
[13.34823799 283.78051758]
[6.93222237 270.22195435]
[9.59766674 255.46067810]
[20.35042572 245.00227356]
[35.17998886 242.74746704]
[48.55529022 249.53726196]
[55.48787689 262.84036255]
[59.02754974 248.26399231]
[62.56722260 233.68762207]
[66.10689545 219.11123657]
[69.64656830 204.53486633]
[60.29098129 190.55946350]
[64.01098633 173.81204224]
[78.98140717 164.76185608]
[82.30366516 150.13439941]
[85.62592316 135.50692749]
[88.62069702 120.80892944]
[91.28649139 106.04771423]
[93.17978668 91.16767883]
[94.29543304 76.20922089]
[95.41107941 61.25077057]
[96.52673340 46.29231644]
[97.64237976 31.33386230]
[98.75802612 16.37541008]
[99.87368011 1.41695583]
[100.98932648 -13.54149723]
[101.99358368 -28.50784111]
[102.88640594 -43.48124695]
[95.98422241 -57.71748352]
[104.46534729 -69.96166229]
[105.35816193 -84.93506622]
[95.14557648 -96.69690704]
[96.26432037 -111.86935425]
[107.54037476 -121.53300476]
[108.43318939 -136.50640869]
[105.82012177 -145.25910950]
[109.45240784 -151.69558716]
[110.56805420 -166.65403748]
[111.68370056 -181.61248779]
[112.79935455 -196.57095337]
[113.69216919 -211.54435730]
[114.36195374 -226.52938843]
[115.03173828 -241.51443481]
[100.29473114 -244.46757507]
[86.18126678 -249.63580322]
[73.02218628 -256.89797974]
[61.12596130 -266.08383179]
[50.77145004 -276.97808838]
[42.20138550 -289.32531738]
[35.61665344 -302.83612061]
[31.17161179 -317.19378662]
[28.97046089 -332.06170654]
[29.06479836 -347.09140015]
[31.45241165 -361.93051147]
[36.07733154 -376.23123169]
[42.83114624 -389.65832520]
[51.55553436 -401.89700317]
[62.04598236 -412.66040039]
[74.05657959 -421.69622803]
[87.30578613 -428.79263306]
[101.48300934 -433.78329468]
[116.25592804 -436.55120850]
[131.27824402 -437.03149414]
[146.19779968 -435.21289062]
[160.66485596 -431.13806152]
[174.34030151 -424.90246582]
[186.90356445 -416.65231323]
[198.06013489 -406.58099365]
[207.54849243 -394.92459106]
[215.14620972 -381.95635986]
[220.67518616 -367.98028564]
[224.00581360 -353.32397461]
[225.06002808 -338.33099365]
[223.81309509 -323.35284424]
[220.29428101 -308.74057007]
[214.58602905 -294.83673096]
[206.82218933 -281.96728516]
[197.18472290 -270.43386841]
[185.89956665 -260.50683594]
[173.23126221 -252.41893005]
[159.47676086 -246.35971069]
[144.95848083 -242.47123718]
[130.01676941 -240.84465027]
[129.34698486 -225.85960388]
[128.67720032 -210.87457275]
[131.18180847 -206.80812073]
[131.15849304 -201.12512207]
[127.75780487 -195.45529175]
[126.64215851 -180.49684143]
[125.52650452 -165.53839111]
[124.41085815 -150.57994080]
[123.40660095 -135.61358643]
[122.51378632 -120.64019012]
[132.56159973 -109.70506287]
[131.86946106 -94.50717926]
[120.33156586 -84.04225159]
[119.43875122 -69.06884766]
[126.40479279 -55.90360641]
[117.85980988 -42.58843231]
[116.96699524 -27.61502647]
[119.70679474 -20.75096893]
[115.94777679 -12.42584896]
[114.83213043 2.53260446]
[113.71648407 17.49105835]
[112.60083771 32.44951248]
[111.48518372 47.40796280]
[110.36953735 62.36641693]
[109.25389099 77.32487488]
[108.13823700 92.28332520]
[119.44687653 82.42864227]
[134.44137573 82.02283478]
[146.26647949 91.25143433]
[149.51588440 105.89524841]
[142.70402527 119.25932312]
[128.94517517 125.23378754]
[114.52971649 121.08718872]
[106.04771423 108.71350861]
[103.38191223 123.47472382]
[105.14857483 128.38655090]
[104.88122559 133.02139282]
[103.02597046 136.65086365]
[100.25338745 138.82919312]
[96.93112183 153.45664978]
[93.60886383 168.08410645]
[102.05117035 178.57897949]
[102.89527893 191.82653809]
[96.05664062 202.97621155]
[84.22293854 208.07453918]
[80.68327332 222.65090942]
[77.14360046 237.22729492]
[73.60392761 251.80366516]
[70.06425476 266.38003540]
[67.39846039 281.14126587]
[65.61598969 296.03497314]
[63.83352661 310.92868042]
[62.05105972 325.82241821]
[60.26859283 340.71612549]
[58.48612595 355.60983276]
[60.57359695 364.50256348]
[56.56464767 370.71142578]
[54.56063080 385.57696533]
[52.55661774 400.44247437]
[67.14492798 403.99200439]
[81.28227997 409.04696655]
[94.81378937 415.55206299]
[107.59119415 423.43594360]
[119.47450256 432.61224365]
[130.33351135 442.98046875]
[140.04922485 454.42697144]
[148.51522827 466.82632446]
[155.63873291 480.04275513]
[161.34170532 493.93136597]
[165.56166077 508.34002686]
[168.25234985 523.11090088]
[169.38430786 538.08209229]
[168.94512939 553.08953857]
[166.93962097 567.96893311]
[163.38975525 582.55712891]
[158.33442688 596.69439697]
[151.82902527 610.22570801]
[143.94483948 623.00292969]
[134.76823425 634.88604736]
[124.39975739 645.74475098]
[112.95301819 655.46020508]
[100.55343628 663.92590332]
[87.33686066 671.04913330]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 186]
[35 185]
[36 184]
[37 182]
[38 181]
[39 180]
[40 179]
[41 178]
[42 177]
[51 176]
[52 175]
[53 174]
[54 173]
[55 172]
[58 168]
[59 167]
[60 166]
[61 162]
[62 161]
[63 153]
[64 152]
[65 151]
[66 150]
[67 149]
[68 148]
[69 147]
[70 146]
[71 144]
[72 143]
[74 141]
[75 140]
[78 137]
[79 136]
[81 135]
[82 134]
[83 133]
[84 132]
[85 129]
[86 128]
[87 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
