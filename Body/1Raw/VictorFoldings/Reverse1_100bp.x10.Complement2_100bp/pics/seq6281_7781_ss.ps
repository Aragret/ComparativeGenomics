%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[195.36224365 794.16363525]
[208.13407898 785.80639648]
[206.13006592 770.94091797]
[204.12605286 756.07537842]
[202.12203979 741.20983887]
[200.11802673 726.34429932]
[190.74972534 714.76483154]
[196.57394409 700.05468750]
[194.56993103 685.18914795]
[190.56097412 678.98028564]
[192.64843750 670.08758545]
[190.86598206 655.19384766]
[189.08351135 640.30010986]
[186.74803162 625.48303223]
[183.86274719 610.76318359]
[180.97747803 596.04327393]
[177.76420593 581.39147949]
[174.22453308 566.81512451]
[170.68486023 552.23876953]
[167.14518738 537.66235352]
[163.60551453 523.08599854]
[160.06584167 508.50961304]
[156.52616882 493.93322754]
[152.98649597 479.35687256]
[149.44636536 476.15118408]
[147.88244629 470.68756104]
[149.56530762 464.29385376]
[146.46119690 449.61853027]
[143.35708618 434.94323730]
[140.25297546 420.26794434]
[137.14888000 405.59262085]
[134.87568665 403.95227051]
[133.11528015 401.31265259]
[132.25155640 397.86456299]
[132.59225464 393.93411255]
[134.32434082 389.95242310]
[132.09921265 375.11837769]
[129.87409973 360.28433228]
[127.64898682 345.45028687]
[125.42386627 330.61624146]
[123.19875336 315.78219604]
[111.10551453 307.16308594]
[108.63761139 292.15093994]
[117.76012421 279.52490234]
[115.53501129 264.69085693]
[113.30989075 249.85681152]
[111.08477783 235.02276611]
[98.07340240 230.87292480]
[88.07136536 221.47674561]
[83.06963348 208.62638855]
[84.09742737 194.80894470]
[91.01102448 182.72514343]
[102.51071167 174.76145935]
[100.50669098 159.89593506]
[98.50267792 145.03041077]
[96.49866486 130.16488647]
[94.49465179 115.29935455]
[85.67522430 107.69284821]
[84.20520782 96.13948059]
[90.83880615 86.56677246]
[81.51643372 73.78381348]
[87.68651581 60.22729111]
[84.55648041 56.04997635]
[83.45220184 51.54066849]
[84.16091919 47.52659607]
[86.17236328 44.63066483]
[85.05671692 29.67221260]
[83.82974243 14.72247791]
[82.49150848 -0.21770687]
[81.15327454 -15.15789223]
[72.21563721 -28.21274567]
[78.78661346 -41.57955551]
[77.44837952 -56.51973724]
[76.11013794 -71.45992279]
[60.73554611 -76.16419220]
[48.37302399 -86.38371277]
[40.89674377 -100.53082275]
[39.42535019 -116.42543793]
[44.15470505 -131.63096619]
[54.33238220 -143.82785034]
[68.37721252 -151.16738892]
[66.81668854 -166.08599854]
[63.74919128 -170.30944824]
[62.71217346 -174.83470154]
[63.48056793 -178.83776855]
[65.53491211 -181.70343018]
[64.64209747 -196.67683411]
[63.74927902 -211.65025330]
[62.74502182 -226.61659241]
[61.62937164 -241.57504272]
[60.51372147 -256.53350830]
[51.77144241 -269.71997070]
[58.54070282 -282.98745728]
[57.42505264 -297.94592285]
[56.30940628 -312.90438843]
[41.77946472 -317.29132080]
[29.81784821 -326.63391113]
[22.04227066 -339.66867065]
[19.50431252 -354.63272095]
[22.54721451 -369.50234985]
[30.75944519 -382.26651001]
[43.03036880 -391.19894409]
[57.70044708 -395.09167480]
[72.78566742 -393.41821289]
[86.24588013 -386.40484619]
[96.26070404 -375.00012207]
[101.47571564 -360.74642944]
[101.18562317 -345.57144165]
[95.42966461 -331.52743530]
[84.98628235 -320.51382446]
[71.26786041 -314.02001953]
[72.38350677 -299.06155396]
[73.49915314 -284.10311890]
[82.16163635 -271.98657227]
[75.47217560 -257.64913940]
[76.58782196 -242.69068909]
[77.70347595 -227.73223877]
[81.33575439 -221.29576111]
[78.72268677 -212.54306030]
[79.61550140 -197.56965637]
[80.50831604 -182.59625244]
[81.73529053 -167.64651489]
[83.29581451 -152.72790527]
[96.89168549 -149.25061035]
[108.50871277 -141.32450867]
[116.73995209 -129.88482666]
[120.58011627 -116.29382324]
[119.54828644 -102.17850494]
[113.74809265 -89.23590851]
[103.85763550 -79.02904510]
[91.05032349 -72.79815674]
[92.38855743 -57.85797119]
[93.72679138 -42.91778946]
[102.56871033 -30.93155670]
[96.09346008 -16.49612617]
[97.43169403 -1.55594099]
[98.76992798 13.38424397]
[102.49763489 19.76593399]
[100.01516724 28.55656242]
[101.13082123 43.51501465]
[102.58023834 58.44482422]
[111.77510834 70.16248322]
[105.73252106 84.78430939]
[116.12969971 97.94770813]
[109.36018372 113.29534149]
[111.36419678 128.16087341]
[113.36820984 143.02639771]
[115.37222290 157.89192200]
[117.37623596 172.75744629]
[132.73565674 178.87956238]
[142.85386658 191.83784485]
[145.04389954 208.03724670]
[138.80184937 223.04365540]
[125.91882324 232.79763794]
[128.14393616 247.63168335]
[130.36904907 262.46572876]
[132.59417725 277.29977417]
[145.01968384 286.69360352]
[147.06495667 301.76913452]
[138.03279114 313.55709839]
[140.25790405 328.39114380]
[142.48303223 343.22515869]
[144.70814514 358.05920410]
[146.93325806 372.89324951]
[149.15838623 387.72729492]
[151.82417297 402.48852539]
[154.92828369 417.16381836]
[158.03239441 431.83914185]
[161.13650513 446.51443481]
[164.24061584 461.18972778]
[167.56288147 475.81719971]
[171.10255432 490.39355469]
[174.64222717 504.96994019]
[178.18188477 519.54632568]
[181.72155762 534.12268066]
[185.26123047 548.69909668]
[188.80090332 563.27545166]
[192.34057617 577.85180664]
[195.94483948 581.62756348]
[197.57713318 585.97375488]
[197.35044861 590.04357910]
[195.69737244 593.15802002]
[198.58264160 607.87786865]
[201.46791077 622.59777832]
[211.87507629 611.79541016]
[226.82295227 613.04473877]
[235.29254150 625.42486572]
[231.04035950 639.80950928]
[217.20097351 645.59497070]
[203.97723389 638.51763916]
[205.75968933 653.41137695]
[207.54216003 668.30511475]
[209.43545532 683.18511963]
[211.43946838 698.05065918]
[220.95112610 710.69342041]
[214.98355103 724.34027100]
[216.98757935 739.20581055]
[218.99159241 754.07135010]
[220.99560547 768.93688965]
[222.99961853 783.80242920]
[237.52854919 788.47918701]
[248.58357239 799.00299072]
[253.96968079 813.28417969]
[252.61746216 828.48724365]
[244.79539490 841.59368896]
[232.05657959 850.00109863]
[216.93028259 852.04028320]
[202.41987610 847.30633545]
[191.40638733 836.73907471]
[186.07656860 822.43682861]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 200]
[3 199]
[4 198]
[5 197]
[6 196]
[8 194]
[9 193]
[11 192]
[12 191]
[13 190]
[14 184]
[15 183]
[16 182]
[17 178]
[18 177]
[19 176]
[20 175]
[21 174]
[22 173]
[23 172]
[24 171]
[27 170]
[28 169]
[29 168]
[30 167]
[31 166]
[36 165]
[37 164]
[38 163]
[39 162]
[40 161]
[41 160]
[44 157]
[45 156]
[46 155]
[47 154]
[53 149]
[54 148]
[55 147]
[56 146]
[57 145]
[60 143]
[62 141]
[66 140]
[67 139]
[68 137]
[69 136]
[70 135]
[72 133]
[73 132]
[74 131]
[81 123]
[82 122]
[86 121]
[87 120]
[88 119]
[89 117]
[90 116]
[91 115]
[93 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
