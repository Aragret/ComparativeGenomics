%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[145.63786316 604.42999268]
[137.99617004 591.50952148]
[131.59797668 577.93017578]
[126.49948120 563.81140137]
[122.74551392 549.27722168]
[120.36906433 534.45538330]
[119.39099884 519.47613525]
[119.81993866 504.47113037]
[121.65209198 489.57220459]
[124.87136841 474.91033936]
[129.44947815 460.61434937]
[135.34617615 446.80987549]
[142.50965881 433.61825562]
[150.87695312 421.15539551]
[160.37454224 409.53082275]
[170.91894531 398.84674072]
[182.41751099 389.19699097]
[194.76916504 380.66638184]
[207.86537170 373.32992554]
[201.79153442 359.61465454]
[195.71771240 345.89938354]
[189.64387512 332.18411255]
[183.46810913 318.51446533]
[177.19073486 304.89114380]
[170.91337585 291.26782227]
[165.25918579 286.50842285]
[164.64566040 277.39462280]
[158.57182312 263.67935181]
[152.49800110 249.96409607]
[146.42416382 236.24882507]
[140.35032654 222.53355408]
[134.27648926 208.81828308]
[131.13667297 207.21395874]
[128.61793518 204.00912476]
[127.46405792 199.51225281]
[128.25292969 194.35232544]
[122.79756927 180.37953186]
[117.34221649 166.40673828]
[111.88685608 152.43392944]
[99.47809601 148.96229553]
[91.21116638 138.82623291]
[90.27782440 125.58465576]
[97.24231720 114.05598450]
[86.58087921 105.01024628]
[88.70520782 91.19073486]
[83.45848846 77.13826752]
[78.21177673 63.08579636]
[72.96505737 49.03332520]
[69.51956177 46.39087677]
[67.31578827 43.11858368]
[66.39926910 39.68413925]
[66.65897369 36.52199173]
[67.85168457 33.98514938]
[63.45068359 19.64529991]
[59.04968643 5.30545378]
[54.64868546 -9.03439331]
[50.24768829 -23.37424088]
[45.84669113 -37.71408844]
[41.33906174 -52.02077484]
[36.72505188 -66.29351044]
[32.11104584 -80.56623840]
[23.06127930 -68.60372925]
[8.07085228 -68.06793976]
[-1.80985439 -79.35384369]
[0.70284992 -94.14189148]
[13.75669289 -101.53088379]
[27.72773552 -96.07513428]
[24.18806267 -110.65150452]
[11.17203999 -123.67704773]
[16.76554871 -140.31072998]
[13.00924778 -154.83279419]
[9.25294685 -169.35485840]
[5.49664640 -183.87690735]
[-9.40713787 -182.00460815]
[-24.42798805 -182.05357361]
[-39.31924820 -184.02302551]
[-53.83638763 -187.88061523]
[-67.74102783 -193.56298828]
[-80.80483246 -200.97683716]
[-92.81329346 -210.00042725]
[-103.56920624 -220.48559570]
[-112.89596558 -232.26013184]
[-120.64041138 -245.13072205]
[-126.67536926 -258.88598633]
[-130.90173340 -273.30007935]
[-133.25012207 -288.13632202]
[-133.68196106 -303.15103149]
[-132.19015503 -318.09768677]
[-128.79920959 -332.73086548]
[-123.56480408 -346.81027222]
[-116.57289124 -360.10467529]
[-107.93828583 -372.39581299]
[-97.80277252 -383.48184204]
[-86.33278656 -393.18069458]
[-73.71668243 -401.33312988]
[-60.16161728 -407.80526733]
[-45.89018631 -412.49081421]
[-31.13673401 -415.31289673]
[-16.14352798 -416.22509766]
[-1.15676999 -415.21246338]
[13.57744408 -412.29162598]
[27.81716537 -407.51055908]
[41.32856369 -400.94775391]
[53.88977051 -392.71096802]
[65.29451752 -382.93548584]
[75.35553741 -371.78182983]
[83.90760803 -359.43313599]
[90.81029510 -346.09216309]
[95.95026398 -331.97802734]
[99.24309540 -317.32244873]
[100.63473511 -302.36611938]
[100.10231781 -287.35464478]
[97.65458679 -272.53448486]
[93.33174896 -258.14901733]
[87.20477295 -244.43449402]
[79.37427521 -231.61607361]
[69.96884918 -219.90428162]
[59.14292526 -209.49142456]
[47.07428360 -200.54847717]
[33.96110153 -193.22230530]
[20.01870537 -187.63320923]
[23.77500725 -173.11116028]
[27.53130722 -158.58909607]
[31.28760719 -144.06703186]
[41.54796600 -137.65988159]
[44.79625320 -125.59205627]
[38.76443863 -114.19117737]
[42.30411148 -99.61480713]
[46.38377762 -85.18025208]
[50.99778748 -70.90751648]
[55.61179733 -56.63478470]
[60.66036987 -51.23721695]
[60.18653870 -42.11508560]
[64.58753967 -27.77523804]
[68.98853302 -13.43539143]
[73.38953400 0.90445560]
[77.79052734 15.24430275]
[82.19152832 29.58415031]
[87.01752472 43.78660583]
[92.26424408 57.83907700]
[97.51096344 71.89154816]
[102.75768280 85.94401550]
[113.41912079 94.98975372]
[111.29479218 108.80926514]
[127.34011841 115.77825165]
[133.26423645 131.87855530]
[125.85965729 146.97857666]
[131.31501770 160.95137024]
[136.77037048 174.92417908]
[142.22572327 188.89697266]
[147.99176025 202.74446106]
[154.06559753 216.45971680]
[160.13941956 230.17498779]
[166.21325684 243.89025879]
[172.28709412 257.60552979]
[178.36093140 271.32080078]
[184.53669739 284.99044800]
[190.81405640 298.61376953]
[197.09141541 312.23709106]
[203.52494812 318.72149658]
[203.35913086 326.11029053]
[209.43296814 339.82556152]
[215.50680542 353.54083252]
[221.58064270 367.25610352]
[235.81480408 362.48922729]
[250.43281555 359.07626343]
[265.30618286 357.04714966]
[280.30419922 356.41973877]
[295.29510498 357.19952393]
[310.14706421 359.37966919]
[324.72964478 362.94100952]
[338.91464233 367.85226440]
[352.57739258 374.07025146]
[365.59786987 381.54034424]
[377.86160278 390.19686890]
[389.26083374 399.96374512]
[399.69534302 410.75518799]
[409.07351685 422.47628784]
[417.31286621 435.02410889]
[424.34097290 448.28833008]
[430.09613037 462.15243530]
[434.52774048 476.49450684]
[437.59683228 491.18856812]
[439.27645874 506.10543823]
[439.55184937 521.11407471]
[438.42056274 536.08251953]
[435.89260864 550.87927246]
[431.99011230 565.37426758]
[426.74743652 579.44012451]
[420.21063232 592.95324707]
[412.43713379 605.79492188]
[403.49530029 617.85217285]
[393.46365356 629.01910400]
[382.43041992 639.19763184]
[370.49249268 648.29821777]
[357.75485229 656.24090576]
[344.32937622 662.95593262]
[330.33410645 668.38421631]
[315.89199829 672.47814941]
[301.12997437 675.20166016]
[286.17779541 676.53088379]
[271.16687012 676.45410156]
[256.22906494 674.97198486]
[241.49569702 672.09753418]
[227.09623718 667.85607910]
[213.15722656 662.28485107]
[199.80116272 655.43286133]
[187.14544678 647.36022949]
[175.30126953 638.13793945]
[164.37274170 627.84710693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 164]
[20 163]
[21 162]
[22 161]
[23 159]
[24 158]
[25 157]
[27 156]
[28 155]
[29 154]
[30 153]
[31 152]
[32 151]
[36 150]
[37 149]
[38 148]
[39 147]
[43 144]
[45 142]
[46 141]
[47 140]
[48 139]
[53 138]
[54 137]
[55 136]
[56 135]
[57 134]
[58 133]
[59 131]
[60 130]
[61 129]
[67 128]
[68 127]
[70 124]
[71 123]
[72 122]
[73 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
