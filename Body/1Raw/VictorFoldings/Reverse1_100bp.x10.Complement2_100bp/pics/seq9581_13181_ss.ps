%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[128.25729370 590.22271729]
[127.76157379 605.31103516]
[123.21237183 619.70574951]
[114.94725800 632.33862305]
[103.57955933 642.27233887]
[89.95283508 648.76965332]
[75.07827759 651.34838867]
[60.05968094 649.81732178]
[46.01152039 644.28997803]
[33.97626495 635.17651367]
[24.84700966 623.15319824]
[19.30120659 609.11230469]
[17.75039101 594.09576416]
[20.30964279 579.21783447]
[26.78905106 565.58258057]
[36.70779800 554.20184326]
[49.32984924 545.92016602]
[63.71856308 541.35205078]
[78.80619812 540.83654785]
[82.34587097 526.26013184]
[85.88554382 511.68377686]
[89.42521667 497.10739136]
[92.96488953 482.53103638]
[96.50456238 467.95465088]
[98.72968292 453.12060547]
[99.62249756 438.14721680]
[100.51531219 423.17379761]
[101.40812683 408.20037842]
[101.85473633 393.20703125]
[101.85473633 378.20703125]
[101.85473633 363.20703125]
[101.85473633 348.20703125]
[94.11743164 335.47976685]
[101.85473633 321.67959595]
[101.85473633 306.67959595]
[101.63140869 291.68124390]
[101.18479919 276.68789673]
[100.73818970 261.69454956]
[85.01310730 256.83493042]
[71.88159943 246.86981201]
[62.94140625 232.98960876]
[59.28784180 216.86238098]
[61.37963104 200.43344116]
[68.98139191 185.69065857]
[81.18998718 174.42391968]
[96.54177094 168.00788879]
[95.64895630 153.03448486]
[94.75614166 138.06108093]
[93.86331940 123.08767700]
[92.97050476 108.11426544]
[89.64824677 93.48680878]
[83.98545837 79.59677887]
[78.32267761 65.70675659]
[65.94808960 55.84874725]
[68.30805969 41.14229202]
[64.18357849 37.94295502]
[61.92462540 33.88704300]
[61.54508591 29.82859421]
[62.71786880 26.50340080]
[57.68095398 12.37437057]
[52.64403534 -1.75465882]
[47.60712051 -15.88368797]
[42.57020569 -30.01271820]
[40.29716110 -15.18594170]
[33.39143372 -1.87012768]
[22.58179665 8.52947617]
[9.00901794 14.91537285]
[-5.89453459 16.61364555]
[-20.55605316 13.44507122]
[-33.42827225 5.74403524]
[-43.15275955 -5.67675161]
[-48.70326233 -19.61202812]
[-49.49402237 -34.59117126]
[-45.44159317 -49.03339386]
[-36.97363663 -61.41457748]
[-24.98379326 -70.42810059]
[-10.73738003 -75.12274933]
[4.26214218 -75.00308990]
[18.43184090 -70.08174133]
[30.27635193 -60.87807083]
[38.54577255 -48.36318588]
[27.60597992 -63.17542648]
[35.60506439 -78.79533386]
[34.04454041 -93.71394348]
[32.48402023 -108.63254547]
[30.92349625 -123.55114746]
[29.36297226 -138.46975708]
[27.80245018 -153.38836670]
[26.13090897 -168.29493713]
[24.34844208 -183.18864441]
[9.41177845 -185.32371521]
[-4.46295595 -191.25280762]
[-16.32975769 -200.57167053]
[-25.37952995 -212.64495850]
[-30.99524307 -226.64945984]
[-32.79401016 -241.63034058]
[-30.65318298 -256.56619263]
[-24.71873283 -270.43862915]
[-15.39527702 -282.30181885]
[-3.31850600 -291.34695435]
[10.68816757 -296.95724487]
[25.66974449 -298.75021362]
[40.60475540 -296.60363770]
[54.47490692 -290.66381836]
[66.33451080 -281.33578491]
[75.37495422 -269.25552368]
[80.97985077 -255.24668884]
[82.76704407 -240.26441956]
[80.61469269 -225.33024597]
[74.66952515 -211.46238708]
[65.33691406 -199.60638428]
[53.25316238 -190.57060242]
[39.24216080 -184.97111511]
[41.02462769 -170.07739258]
[44.94069290 -163.80952454]
[42.72105408 -154.94888306]
[44.28157806 -140.03027344]
[45.84210205 -125.11167145]
[47.40262222 -110.19306946]
[48.96314621 -95.27446747]
[50.52367020 -80.35585785]
[59.72006607 -72.49755859]
[61.14225769 -60.08139801]
[53.48595810 -49.70141983]
[56.69923401 -35.04963303]
[61.73614883 -20.92060471]
[66.77306366 -6.79157495]
[71.80998230 7.33745432]
[76.84690094 21.46648407]
[82.19808197 35.47950745]
[94.16762543 44.34400558]
[92.21269989 60.04396820]
[97.87548828 73.93399811]
[103.53827667 87.82402039]
[104.69802856 72.86891937]
[109.63877106 58.70597839]
[118.03281403 46.27456284]
[129.32341003 36.39921188]
[142.76168823 29.73492050]
[157.45632935 26.72370529]
[172.43269348 27.56528854]
[186.69746399 32.20385361]
[199.30450439 40.33174133]
[209.41763306 51.40985870]
[216.36608887 64.70343018]
[219.68899536 79.33074188]
[219.16595459 94.32162476]
[214.83166504 108.68177032]
[206.97360229 121.45874023]
[196.11297607 131.80506897]
[182.97010803 139.03454590]
[168.41673279 142.66763306]
[153.41812134 142.46337891]
[138.96908569 138.43533325]
[126.02796173 130.85064697]
[115.45310211 120.21240234]
[107.94391632 107.22145081]
[108.83673096 122.19485474]
[109.72954559 137.16825867]
[110.62236023 152.14166260]
[111.51517487 167.11508179]
[124.72900391 170.41485596]
[136.46412659 177.29403687]
[145.77528381 187.18754578]
[151.91557312 199.28794861]
[154.39634705 212.61132812]
[153.02606201 226.07734680]
[147.92507935 238.59680176]
[139.51513672 249.15971375]
[128.48446655 256.91683960]
[115.73154449 261.24795532]
[116.17814636 276.24130249]
[116.62475586 291.23464966]
[119.76887512 297.05065918]
[119.53841400 302.72903442]
[116.85473633 306.67959595]
[116.85473633 321.67959595]
[124.59203339 335.47976685]
[116.85473633 348.20703125]
[116.85473633 363.20703125]
[116.85473633 378.20703125]
[116.85473633 393.20703125]
[119.15830231 396.88772583]
[120.07827759 400.72415161]
[119.73559570 404.26223755]
[118.38624573 407.13378906]
[116.38153076 409.09320068]
[115.48871613 424.06661987]
[114.59590149 439.04000854]
[113.70308685 454.01342773]
[122.56807709 441.91336060]
[135.76425171 434.78164673]
[150.74363708 433.99536133]
[164.61392212 439.70629883]
[174.69700623 450.81176758]
[179.04598999 465.16748047]
[176.82115173 480.00155640]
[168.45207214 492.44979858]
[155.55468750 500.10861206]
[140.61929321 501.49923706]
[126.52966309 496.35311890]
[116.00629425 485.66394043]
[111.08094025 471.49432373]
[107.54126740 486.07070923]
[104.00159454 500.64706421]
[100.46192169 515.22344971]
[96.92224884 529.79980469]
[93.38257599 544.37622070]
[106.55345154 551.75390625]
[117.24462128 562.41229248]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 208]
[20 207]
[21 206]
[22 205]
[23 204]
[24 203]
[25 190]
[26 189]
[27 188]
[28 187]
[29 182]
[30 181]
[31 180]
[32 179]
[34 177]
[35 176]
[36 173]
[37 172]
[38 171]
[46 161]
[47 160]
[48 159]
[49 158]
[50 157]
[51 134]
[52 133]
[53 132]
[55 130]
[59 129]
[60 128]
[61 127]
[62 126]
[63 125]
[81 124]
[83 121]
[84 120]
[85 119]
[86 118]
[87 117]
[88 116]
[89 114]
[90 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
