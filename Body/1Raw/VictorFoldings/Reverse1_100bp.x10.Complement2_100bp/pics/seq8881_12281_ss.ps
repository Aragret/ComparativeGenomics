%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[46.98757553 557.05535889]
[39.71165466 570.19299316]
[30.93294144 582.37786865]
[20.77467537 593.43884277]
[9.37946129 603.22076416]
[-3.09272838 611.58618164]
[-16.46680450 618.41778564]
[-30.55501556 623.61956787]
[-45.15958405 627.11859131]
[-60.07548523 628.86566162]
[-75.09332275 628.83624268]
[-90.00227356 627.03082275]
[-104.59303284 623.47467041]
[-118.66077423 618.21777344]
[-132.00801086 611.33392334]
[-144.44735718 602.91967773]
[-155.80419922 593.09326172]
[-165.91908264 581.99255371]
[-174.65003967 569.77343750]
[-181.87448120 556.60742188]
[-187.49098206 542.67938232]
[-191.42071533 528.18475342]
[-193.60850525 513.32708740]
[-194.02363586 498.31500244]
[-192.66027832 483.35913086]
[-189.53758240 468.66949463]
[-184.69937134 454.45233154]
[-178.21356201 440.90719604]
[-170.17123413 428.22424316]
[-160.68525696 416.58154297]
[-149.88882446 406.14251709]
[-137.93348694 397.05371094]
[-124.98707581 389.44274902]
[-111.23134613 383.41644287]
[-96.85940552 379.05941772]
[-82.07301331 376.43280029]
[-67.07975006 375.57351685]
[-52.09009552 376.49362183]
[-37.31447983 379.18014526]
[-22.96032715 383.59542847]
[-16.88649368 369.88015747]
[-10.81266022 356.16488647]
[-12.73371315 341.39468384]
[-0.07110708 331.90951538]
[6.00272703 318.19424438]
[12.07656097 304.47897339]
[18.15039444 290.76370239]
[24.22422791 277.04843140]
[30.19579124 263.28833008]
[36.06475067 249.48414612]
[41.93371201 235.67997742]
[47.38906860 221.70718384]
[52.42598724 207.57815552]
[57.46290207 193.44912720]
[62.49982071 179.32008362]
[61.78491211 171.96409607]
[67.71833801 165.01914978]
[72.96505737 150.96667480]
[78.21177673 136.91419983]
[83.45848846 122.86173248]
[88.70520782 108.80926514]
[86.58087921 94.98975372]
[97.24231720 85.94401550]
[94.82081604 70.30921936]
[106.52111816 61.09227753]
[111.76783752 47.03980637]
[115.52413940 32.51774597]
[117.74925995 17.68370247]
[104.31901550 24.36416054]
[90.65859985 18.16794968]
[86.83795929 3.66268468]
[95.67353058 -8.45889282]
[110.65206146 -9.26120758]
[120.73145294 1.84559679]
[124.05371094 -12.78186321]
[127.37596893 -27.40932274]
[121.17507935 -38.71913528]
[124.24333954 -50.83398438]
[134.40716553 -57.39318466]
[137.94683838 -71.96955872]
[140.28231812 -86.78662872]
[141.39797974 -101.74508667]
[142.51362610 -116.70353699]
[143.62927246 -131.66198730]
[144.74491882 -146.62043762]
[145.86056519 -161.57890320]
[131.17831421 -164.76916504]
[117.08298492 -169.97181702]
[103.84893799 -177.08560181]
[91.73377228 -185.97204590]
[80.97331238 -196.45817566]
[71.77703094 -208.33985901]
[64.32391357 -221.38583374]
[58.75905609 -235.34213257]
[55.19077301 -249.93711853]
[53.68852234 -264.88668823]
[54.28154373 -279.89981079]
[56.95829391 -294.68429565]
[61.66667175 -308.95236206]
[68.31502533 -322.42623901]
[76.77394867 -334.84368896]
[86.87877655 -345.96298218]
[98.43282318 -355.56765747]
[111.21117401 -363.47082520]
[124.96511078 -369.51858521]
[139.42691040 -373.59323120]
[154.31504822 -375.61544800]
[169.33973694 -375.54589844]
[184.20851135 -373.38589478]
[198.63195801 -369.17752075]
[212.32929993 -363.00268555]
[225.03393555 -354.98156738]
[236.49855042 -345.27029419]
[246.50000000 -334.05792236]
[254.84358215 -321.56268311]
[261.36688232 -308.02783203]
[265.94296265 -293.71679688]
[268.48269653 -278.90814209]
[268.93670654 -263.89016724]
[267.29608154 -248.95515442]
[263.59283447 -234.39382935]
[257.89898682 -220.48965454]
[250.32539368 -207.51324463]
[241.01950073 -195.71722412]
[230.16241455 -185.33117676]
[217.96548462 -176.55729675]
[204.66613770 -169.56634521]
[190.52322388 -164.49441528]
[175.81207275 -161.44023132]
[160.81901550 -160.46324158]
[159.70336914 -145.50479126]
[158.58772278 -130.54634094]
[157.47207642 -115.58789062]
[156.35643005 -100.62943268]
[155.24078369 -85.67098236]
[164.59664917 -97.39564514]
[178.29219055 -103.51381683]
[193.26779175 -102.65867615]
[206.17787170 -95.02127075]
[214.13827515 -82.30781555]
[215.37062073 -67.35852051]
[209.59962463 -53.51310730]
[198.11451721 -43.86466980]
[183.48110962 -40.56869888]
[168.96855164 -44.36151505]
[157.81896973 -54.39580154]
[152.52320862 -68.42988586]
[148.98353577 -53.85351562]
[154.82408142 -37.30494690]
[142.00343323 -24.08706474]
[138.68116760 -9.45960426]
[135.35891724 5.16785622]
[132.58329773 19.90881920]
[130.35818481 34.74286270]
[139.80989075 23.09532547]
[152.96269226 15.88393974]
[167.86541748 14.17847157]
[182.30735779 18.23191643]
[194.14613342 27.44297028]
[201.62551880 40.44522858]
[203.63600159 55.30987930]
[199.87934875 69.83184814]
[190.91282654 81.85688019]
[178.06655884 89.60113525]
[163.24623108 91.91580200]
[148.65032959 88.45751190]
[136.44409180 79.73928070]
[128.43821716 67.05440521]
[125.82031250 52.28652191]
[120.57359314 66.33899689]
[123.37037659 80.96866608]
[111.29479218 91.19073486]
[113.41912079 105.01024628]
[102.75768280 114.05598450]
[97.51096344 128.10845947]
[92.26424408 142.16091919]
[87.01752472 156.21339417]
[81.77080536 170.26586914]
[76.62884521 184.35700989]
[71.59193420 198.48603821]
[66.55501556 212.61506653]
[61.51810074 226.74409485]
[62.45195770 230.98460388]
[62.03026199 234.90718079]
[60.51941299 238.12475586]
[58.28415680 240.37648010]
[55.73788834 241.54893494]
[49.86893082 255.35311890]
[43.99996948 269.15728760]
[43.52220535 278.27920532]
[37.93949509 283.12225342]
[31.86566162 296.83752441]
[25.79182816 310.55279541]
[19.71799278 324.26806641]
[13.64415932 337.98333740]
[15.13077164 353.73452759]
[2.90260673 362.23873901]
[-3.17122722 375.95401001]
[-9.24506092 389.66928101]
[3.67145562 397.33084106]
[15.59112740 406.46636963]
[26.34662247 416.94757080]
[35.78694534 428.62734985]
[43.77957535 441.34167480]
[50.21230698 454.91207886]
[54.99483109 469.14810181]
[58.06000900 483.84982300]
[59.36481476 498.81091309]
[58.89092636 513.82128906]
[56.64499664 528.67028809]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 199]
[41 198]
[42 197]
[44 195]
[45 194]
[46 193]
[47 192]
[48 191]
[49 189]
[50 188]
[51 187]
[52 182]
[53 181]
[54 180]
[55 179]
[57 178]
[58 177]
[59 176]
[60 175]
[61 174]
[63 172]
[65 170]
[66 169]
[67 154]
[68 153]
[74 152]
[75 151]
[76 150]
[79 148]
[80 147]
[81 135]
[82 134]
[83 133]
[84 132]
[85 131]
[86 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
