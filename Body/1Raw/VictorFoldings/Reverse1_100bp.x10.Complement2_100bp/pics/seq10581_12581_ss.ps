%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[163.55316162 802.75305176]
[150.49398804 795.36352539]
[137.91949463 787.17645264]
[125.87830353 778.22344971]
[114.41701508 768.53912354]
[103.57997131 758.16107178]
[93.40908813 747.12927246]
[83.94373322 735.48657227]
[75.22050476 723.27789307]
[67.27317047 710.55047607]
[60.13246155 697.35363770]
[53.82601547 683.73834229]
[48.37823105 669.75738525]
[43.81017685 655.46472168]
[40.13953018 640.91577148]
[37.38048935 626.16674805]
[35.54373550 611.27465820]
[34.63636780 596.29724121]
[34.66189957 581.29241943]
[35.62023163 566.31817627]
[37.50765991 551.43243408]
[40.31687546 536.69287109]
[44.03701401 522.15649414]
[48.65368271 507.87945557]
[54.14901733 493.91708374]
[60.50176239 480.32336426]
[67.68733978 467.15090942]
[75.67794037 454.45065308]
[84.44266510 442.27172852]
[93.94759369 430.66125488]
[104.15596008 419.66418457]
[115.02825928 409.32302856]
[126.52243805 399.67779541]
[138.59402466 390.76580811]
[151.19631958 382.62158203]
[164.28056335 375.27655029]
[177.79612732 368.75918579]
[172.13334656 354.86917114]
[166.47055054 340.97915649]
[160.80776978 327.08911133]
[155.14497375 313.19909668]
[152.61645508 311.98886108]
[150.41496277 309.70410156]
[148.95219421 306.46438599]
[148.58894348 302.53594971]
[149.58583069 298.30984497]
[144.75984192 284.10736084]
[139.93383789 269.90490723]
[135.10783386 255.70246887]
[124.39936066 250.07618713]
[120.26250458 238.28338623]
[125.42965698 226.46545410]
[120.81564331 212.19271851]
[116.20163727 197.91999817]
[111.58762360 183.64726257]
[106.97361755 169.37452698]
[101.05043793 183.15553284]
[88.21755219 190.92193604]
[73.26130676 189.77706909]
[61.76001358 180.14793396]
[58.00336838 165.62596130]
[63.39250565 151.62748718]
[75.91741180 143.37359619]
[90.90660858 143.94279480]
[102.77015686 153.12373352]
[99.88488770 138.40383911]
[96.99961090 123.68394470]
[83.69869232 117.44130707]
[76.57256317 104.59205627]
[78.32053375 90.00337219]
[88.28049469 79.20132446]
[85.39522552 64.48143768]
[82.50994873 49.76154327]
[79.62467957 35.04165268]
[76.73940277 20.32176018]
[73.74462891 5.62375593]
[70.64051819 -9.05154610]
[67.53640747 -23.72684860]
[64.32313538 -38.37863541]
[61.00087738 -53.00609589]
[57.67861557 -67.63356018]
[54.35635757 -82.26101685]
[50.92529678 -96.86334229]
[47.38562393 -111.43971252]
[32.32237244 -111.22466278]
[17.58904648 -114.36740112]
[3.92465973 -120.71029663]
[-7.98538733 -129.93518066]
[-17.54369164 -141.57934570]
[-24.27081108 -155.05871582]
[-27.82931900 -169.69718933]
[-28.04071999 -184.76049805]
[-24.89441109 -199.49305725]
[-18.54820824 -213.15589905]
[-9.32043743 -225.06372070]
[2.32604313 -234.61920166]
[15.80704880 -241.34304810]
[30.44638062 -244.89801025]
[45.50973129 -245.10575867]
[60.24153519 -241.95588684]
[73.90284729 -235.60636902]
[85.80841827 -226.37571716]
[95.36108398 -214.72692871]
[102.08166504 -201.24429321]
[105.63307953 -186.60409546]
[105.83718109 -171.54069519]
[102.68373108 -156.80966187]
[96.33090973 -143.14988708]
[87.09737396 -131.24655151]
[75.44625854 -121.69670868]
[61.96199799 -114.97938538]
[65.50167084 -100.40301514]
[70.13481140 -94.64489746]
[68.98381805 -85.58327484]
[72.30607605 -70.95581818]
[75.62833405 -56.32835388]
[78.95059967 -41.70089722]
[83.49748993 -35.87444305]
[82.21171570 -26.83095932]
[85.31581879 -12.15565681]
[88.41992950 2.51964593]
[92.87957764 8.41314983]
[91.45929718 17.43648720]
[94.34456635 32.15637970]
[97.22984314 46.87627029]
[100.11511230 61.59616089]
[103.00038910 76.31605530]
[116.30130768 82.55869293]
[123.42743683 95.40794373]
[121.67946625 109.99662781]
[111.71950531 120.79867554]
[114.60477448 135.51856995]
[117.49005127 150.23846436]
[121.24635315 164.76051331]
[125.86035919 179.03324890]
[130.47436523 193.30598450]
[135.08837891 207.57872009]
[139.70239258 221.85145569]
[153.65115356 233.87281799]
[149.31030273 250.87646484]
[154.13629150 265.07891846]
[158.96229553 279.28137207]
[163.78828430 293.48382568]
[169.03500366 307.53631592]
[174.69779968 321.42633057]
[180.36058044 335.31634521]
[186.02336121 349.20639038]
[191.68615723 363.09640503]
[205.90594482 358.30642700]
[220.39602661 354.40972900]
[235.10032654 351.42141724]
[249.96197510 349.35305786]
[264.92346191 348.21264648]
[279.92687988 348.00460815]
[294.91424561 348.72970581]
[309.82751465 350.38519287]
[324.60903931 352.96459961]
[339.20159912 356.45800781]
[353.54873657 360.85186768]
[367.59497070 366.12918091]
[381.28591919 372.26956177]
[394.56866455 379.24920654]
[407.39178467 387.04113770]
[419.70565796 395.61520386]
[431.46267700 404.93823242]
[442.61734009 414.97418213]
[453.12649536 425.68417358]
[462.94949341 437.02682495]
[472.04830933 448.95819092]
[480.38775635 461.43218994]
[487.93554688 474.40051270]
[494.66250610 487.81298828]
[500.54260254 501.61770630]
[505.55310059 515.76129150]
[509.67459106 530.18908691]
[512.89111328 544.84515381]
[515.19030762 559.67285156]
[516.56317139 574.61474609]
[517.00445557 589.61315918]
[516.51245117 604.60998535]
[515.08905029 619.54718018]
[512.73968506 634.36700439]
[509.47360229 649.01214600]
[505.30334473 663.42584229]
[500.24502563 677.55242920]
[494.31826782 691.33715820]
[487.54595947 704.72680664]
[479.95431519 717.66955566]
[471.57272339 730.11523438]
[462.43359375 742.01574707]
[452.57229614 753.32513428]
[442.02697754 763.99951172]
[430.83843994 773.99761963]
[419.04992676 783.28088379]
[406.70712280 791.81323242]
[393.85769653 799.56170654]
[380.55145264 806.49639893]
[366.83978271 812.59039307]
[352.77578735 817.82019043]
[338.41384888 822.16546631]
[323.80957031 825.60949707]
[309.01940918 828.13891602]
[294.10061646 829.74389648]
[279.11090088 830.41833496]
[264.10824585 830.15948486]
[249.15071106 828.96850586]
[234.29614258 826.84985352]
[219.60203552 823.81182861]
[205.12522888 819.86614990]
[190.92172241 815.02807617]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 148]
[38 147]
[39 146]
[40 145]
[41 144]
[46 143]
[47 142]
[48 141]
[49 140]
[52 138]
[53 137]
[54 136]
[55 135]
[56 134]
[65 133]
[66 132]
[67 131]
[71 127]
[72 126]
[73 125]
[74 124]
[75 123]
[76 121]
[77 120]
[78 119]
[79 117]
[80 116]
[81 115]
[82 114]
[83 112]
[84 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
