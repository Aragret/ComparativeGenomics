%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGAUUCGUAUCACAAUCUCAAACCUAAUCACCCGAUAAAAGACGAUCCCCCACCUUCGCCUACUCAUUCUUCUAAGGACGAUGUUGAUAUCACGAACxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[19.60466957 615.27148438]
[13.59777641 629.06695557]
[5.08841228 641.47607422]
[-5.61581421 652.05041504]
[-18.12795258 660.40759277]
[-31.99569511 666.24560547]
[-46.71773529 669.35333252]
[-61.76187515 669.61853027]
[-76.58428192 667.03149414]
[-90.64913940 661.68579102]
[-103.44800568 653.77465820]
[-114.51820374 643.58416748]
[-123.45956421 631.48254395]
[-129.94886780 617.90734863]
[-133.75151062 603.34930420]
[-134.73004150 588.33471680]
[-132.84907532 573.40625000]
[-128.17663574 559.10363770]
[-120.88160706 545.94390869]
[-111.22769928 534.40270996]
[-99.56389618 524.89733887]
[-86.31184387 517.77136230]
[-71.95059967 513.28234863]
[-56.99929428 511.59268188]
[-41.99842453 512.76330566]
[-38.02632904 498.29879761]
[-34.05423355 483.83425903]
[-30.08213806 469.36975098]
[-26.11004066 454.90521240]
[-27.52689171 451.67645264]
[-27.45025635 447.60101318]
[-25.49922752 443.38833618]
[-21.62412643 439.89108276]
[-17.01011848 425.61834717]
[-12.39610863 411.34561157]
[-7.78209972 397.07290649]
[-3.16809034 382.80017090]
[-4.50646353 378.21563721]
[-2.97907877 372.74169922]
[1.80161119 368.17480469]
[6.83852768 354.04577637]
[11.87544346 339.91674805]
[16.91235924 325.78771973]
[13.89807034 311.20129395]
[25.82012749 300.80056763]
[30.85704422 286.67153931]
[35.68304062 272.46908569]
[40.29705048 258.19635010]
[44.91106033 243.92361450]
[37.49680328 233.38519287]
[37.50620270 220.30535889]
[45.15987396 209.45954895]
[57.84672928 204.93646240]
[62.67272949 190.73400879]
[67.49872589 176.53155518]
[72.32472229 162.32910156]
[77.15071869 148.12664795]
[81.76473236 133.85391235]
[86.16572571 119.51406097]
[90.56672668 105.17421722]
[91.90496063 90.23403168]
[90.12249756 75.34030914]
[88.34002686 60.44659424]
[79.01766205 47.66363525]
[85.18774414 34.10710907]
[83.40528107 19.21339226]
[81.40126801 4.34786463]
[79.17614746 -10.48617935]
[76.95102692 -25.32022285]
[74.72591400 -40.15426636]
[72.50079346 -54.98831177]
[65.03141785 -41.98029709]
[51.76445389 -34.98117447]
[36.81082535 -36.15969467]
[24.80406761 -45.15068054]
[19.46461105 -59.16817474]
[22.44694328 -73.86870575]
[32.82695389 -84.69715881]
[47.38828659 -88.29821777]
[61.61895370 -83.55604553]
[71.10952759 -71.93983459]
[70.88619995 -86.93817139]
[67.62937164 -95.47227478]
[70.77287292 -102.16107941]
[70.77287292 -117.16107941]
[70.77287292 -132.16108704]
[70.77287292 -147.16108704]
[70.32626343 -162.15443420]
[69.43344879 -177.12783813]
[65.79879761 -185.50799561]
[68.64049530 -192.33050537]
[67.97071075 -207.31555176]
[67.30091858 -222.30058289]
[66.63113403 -237.28562927]
[51.99824905 -241.07640076]
[39.13368225 -249.01329041]
[29.18134499 -260.39056396]
[23.02619362 -274.19656372]
[21.21554184 -289.20367432]
[23.91038895 -304.07742310]
[30.87111092 -317.49533081]
[41.47876740 -328.26422119]
[54.79012680 -335.42654419]
[69.62155914 -338.34545898]
[84.65426636 -336.76138306]
[98.55153656 -330.81518555]
[110.07764435 -321.03561401]
[118.20769501 -308.29223633]
[122.21877289 -293.71820068]
[121.75420380 -278.60940552]
[116.85530853 -264.30932617]
[107.95768738 -252.08950806]
[95.85251617 -243.03654480]
[81.61617279 -237.95541382]
[82.28596497 -222.97036743]
[82.95574951 -207.98533630]
[83.62553406 -193.00028992]
[84.40685272 -178.02066040]
[85.29966736 -163.04724121]
[87.30438232 -161.08784485]
[88.65373230 -158.21627808]
[88.99641418 -154.67820740]
[88.07643890 -150.84178162]
[85.77287292 -147.16108704]
[85.77287292 -132.16108704]
[85.77287292 -117.16107941]
[85.77287292 -102.16107941]
[85.88453674 -87.16149902]
[86.10786438 -72.16316223]
[87.33483887 -57.21342850]
[89.55995941 -42.37938309]
[91.78507233 -27.54533958]
[94.01019287 -12.71129608]
[96.23530579 2.12274742]
[99.47532654 5.63149405]
[100.54557800 11.21285534]
[98.29899597 17.43092728]
[100.08145905 32.32464600]
[109.27633667 44.04230499]
[103.23374939 58.66412735]
[105.01621246 73.55784607]
[106.79867554 88.45156097]
[111.78565979 74.30483246]
[119.56819153 61.48171997]
[129.81536865 50.52748108]
[142.09147644 41.90789032]
[155.87451172 35.98945236]
[170.57841492 33.02383041]
[185.57798767 33.13711929]
[200.23544312 36.32450485]
[213.92750549 42.45045471]
[226.07200623 51.25449371]
[236.15255737 62.36226654]
[243.74050903 75.30146790]
[248.51322937 89.52191162]
[250.26779175 104.41894531]
[248.92958069 119.35913086]
[244.55548096 133.70721436]
[237.33151245 146.85308838]
[227.56481934 158.23780823]
[215.67070007 167.37727356]
[202.15489197 173.88287354]
[187.59208679 177.47799683]
[172.60151672 178.00976562]
[157.82058716 175.45556641]
[143.87777710 169.92401123]
[131.36595154 161.65029907]
[120.81712341 150.98623657]
[112.67982483 138.38526917]
[107.30005646 124.38319397]
[104.90657043 109.57521057]
[100.50557709 123.91506195]
[96.10457611 138.25491333]
[97.21031952 144.77325439]
[95.16519165 150.07556152]
[91.35317993 152.95263672]
[86.52717590 167.15509033]
[81.70117950 181.35754395]
[76.87518311 195.56001282]
[72.04918671 209.76246643]
[80.06750488 225.30999756]
[74.47070312 241.52699280]
[59.18379211 248.53762817]
[54.56978226 262.81036377]
[49.95577621 277.08309937]
[50.96434784 283.61718750]
[48.84050369 288.88845825]
[44.98607254 291.70846558]
[39.94915771 305.83749390]
[42.60317230 321.43450928]
[31.04138947 330.82461548]
[26.00447273 344.95364380]
[20.96755791 359.08267212]
[15.93064117 373.21170044]
[11.10464287 387.41415405]
[6.49063396 401.68688965]
[1.87662458 415.95962524]
[-2.73738480 430.23236084]
[-7.35139418 444.50509644]
[-11.64551735 458.87731934]
[-15.61761379 473.34182739]
[-19.58971024 487.80636597]
[-23.56180573 502.27087402]
[-27.53390312 516.73541260]
[-14.03897095 523.38995361]
[-2.04745984 532.47845459]
[8.00714684 543.67224121]
[15.76138020 556.56677246]
[20.93492889 570.69586182]
[23.34077454 585.54870605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 204]
[26 203]
[27 202]
[28 201]
[29 200]
[33 199]
[34 198]
[35 197]
[36 196]
[37 195]
[40 194]
[41 193]
[42 192]
[43 191]
[45 189]
[46 188]
[47 185]
[48 184]
[49 183]
[53 180]
[54 179]
[55 178]
[56 177]
[57 176]
[58 173]
[59 172]
[60 171]
[61 142]
[62 141]
[63 140]
[65 138]
[66 137]
[67 134]
[68 133]
[69 132]
[70 131]
[71 130]
[81 129]
[82 128]
[84 127]
[85 126]
[86 125]
[87 124]
[88 119]
[89 118]
[91 117]
[92 116]
[93 115]
[94 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
