%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUCCAAAACCGAGCAUUCUUCCGGAUCUAUCCCCUAACACGCCACACACUACGAUCCCAUCUUAGGCUCAUACAACCUCUUUAUUUUACACGUAUCACCxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[115.97364807 607.36682129]
[100.78787231 606.68804932]
[87.01991272 600.24511719]
[76.76928711 589.02044678]
[71.59913635 574.72576904]
[72.29786682 559.54089355]
[78.75893402 545.78143311]
[89.99707031 535.54553223]
[104.29853821 530.39422607]
[104.96833038 515.40917969]
[105.63811493 500.42413330]
[106.30789948 485.43908691]
[93.12305450 478.46591187]
[84.23677826 466.41006470]
[81.45473480 451.63098145]
[85.38136292 437.05010986]
[95.28955078 425.57339478]
[109.25462341 419.51220703]
[109.92440796 404.52716064]
[110.59420013 389.54211426]
[111.26398468 374.55709839]
[111.04065704 359.55874634]
[109.92500305 344.60028076]
[108.80935669 329.64184570]
[107.69371033 314.68338013]
[106.57805634 299.72494507]
[93.91136932 294.61883545]
[84.63589478 284.50479126]
[80.60378265 271.31799316]
[82.65642548 257.61526489]
[90.44962311 246.07914734]
[102.50976562 238.99284363]
[101.61695099 224.01943970]
[100.61269379 209.05308533]
[99.49704742 194.09463501]
[98.38139343 179.13618469]
[84.90488434 172.79196167]
[76.35649872 160.47201538]
[75.11429596 145.42796326]
[81.61168671 131.69184875]
[94.19424438 122.99550629]
[93.07859802 108.03704834]
[91.18530273 93.15701294]
[88.51950836 78.39579773]
[85.74389648 63.65483475]
[82.85862732 48.93494415]
[79.97335052 34.21505356]
[77.00481415 31.04618645]
[75.36407471 27.45835876]
[75.01980591 23.92043686]
[75.79161072 20.84295082]
[77.38198853 18.53452301]
[75.37797546 3.66899562]
[73.37396240 -11.19653225]
[71.36994934 -26.06206131]
[69.36593628 -40.92758942]
[66.17404938 -45.05783844]
[65.00275421 -49.55020523]
[65.65162659 -53.57438660]
[67.61973572 -56.49994278]
[66.28150177 -71.44012451]
[64.94326782 -86.38031006]
[61.83915710 -101.05561829]
[57.01316071 -115.25807190]
[52.18716431 -129.46052551]
[47.25556946 -143.62666321]
[42.21865463 -157.75569153]
[37.18173599 -171.88471985]
[32.14482117 -186.01374817]
[28.16731453 -189.39405823]
[26.09172058 -193.54679871]
[25.89377975 -197.61814880]
[27.21386909 -200.88766479]
[22.81287193 -215.22750854]
[18.41187286 -229.56735229]
[14.01087475 -243.90719604]
[-0.87176692 -241.79687500]
[-15.90130424 -242.04081726]
[-30.70762062 -244.63302612]
[-44.92609787 -249.50964355]
[-58.20658875 -256.55059814]
[-70.22205353 -265.58248901]
[-80.67660522 -276.38290405]
[-89.31278229 -288.68585205]
[-95.91791534 -302.18841553]
[-100.32934570 -316.55801392]
[-102.43843842 -331.44082642]
[-102.19326019 -346.47033691]
[-99.59983826 -361.27645874]
[-94.72204590 -375.49453735]
[-87.68000031 -388.77444458]
[-78.64711761 -400.78915405]
[-67.84584045 -411.24282837]
[-55.54216385 -419.87799072]
[-42.03907394 -426.48199463]
[-27.66909790 -430.89224243]
[-12.78610706 -433.00009155]
[2.24338961 -432.75369263]
[17.04927826 -430.15902710]
[31.26694870 -425.28005981]
[44.54627991 -418.23693848]
[56.56025696 -409.20306396]
[67.01302338 -398.40090942]
[75.64717102 -386.09652710]
[82.25007629 -372.59289551]
[86.65913391 -358.22256470]
[88.76576996 -343.33938599]
[88.51810455 -328.30990601]
[85.92224121 -313.50424194]
[81.04210663 -299.28698730]
[73.99786377 -286.00823975]
[64.96300507 -273.99499512]
[54.16000366 -263.54312134]
[41.85490036 -254.90998840]
[28.35072327 -248.30819702]
[32.75172043 -233.96835327]
[37.15271759 -219.62850952]
[41.55371475 -205.28865051]
[46.27384949 -191.05065918]
[51.31076813 -176.92163086]
[56.34768295 -162.79260254]
[61.38459778 -148.66357422]
[66.59163666 -143.41871643]
[66.38961792 -134.28652954]
[71.21561432 -120.08406830]
[76.04161072 -105.88161469]
[78.69027710 -120.64591217]
[86.16899109 -133.64855957]
[97.59915924 -143.36201477]
[111.63797760 -148.64515686]
[126.63618469 -148.87731934]
[140.83180237 -144.03123474]
[152.55712891 -134.67620850]
[160.43470764 -121.91127014]
[163.53909302 -107.23602295]
[161.50555420 -92.37450409]
[154.57301331 -79.07263184]
[143.55589294 -68.89308929]
[129.74847412 -63.03176880]
[114.77282715 -62.17724609]
[100.38829803 -66.42990875]
[88.28474426 -75.29016876]
[79.88345337 -87.71854401]
[81.22168732 -72.77835846]
[82.55992126 -57.83817673]
[84.23146057 -42.93160248]
[86.23547363 -28.06607437]
[88.23948669 -13.20054626]
[90.24350739 1.66498196]
[92.24752045 16.53050995]
[94.69324493 31.32978058]
[97.57851410 46.04967117]
[100.46379089 60.76956558]
[104.83518982 66.72881317]
[103.28072357 75.73000336]
[105.94652557 90.49121857]
[114.42702484 78.11862183]
[128.84214783 73.97082520]
[142.60148621 79.94412994]
[149.41447449 93.30764008]
[146.16627502 107.95172882]
[134.34194946 117.18131256]
[119.34741211 116.77676392]
[108.03704834 106.92140198]
[109.15270233 121.87985992]
[122.88607025 128.61347961]
[131.34921265 141.23377991]
[132.35240173 156.29565430]
[125.72615051 169.74737549]
[113.33985138 178.02053833]
[114.45549774 192.97898865]
[115.57114410 207.93743896]
[119.33016205 216.26255798]
[116.59035492 223.12661743]
[117.48317719 238.10002136]
[132.34471130 245.34754944]
[141.47111511 259.02249146]
[142.45021057 275.33993530]
[135.10931396 289.84051514]
[121.53651428 298.60928345]
[122.65216064 313.56774902]
[123.76780701 328.52618408]
[124.88346100 343.48464966]
[125.99910736 358.44311523]
[135.00701904 346.44903564]
[149.31018066 341.93023682]
[163.57388306 346.57214355]
[172.47808838 358.64337158]
[172.70178223 373.64172363]
[164.16149902 385.97311401]
[150.04258728 391.03829956]
[135.61102295 386.94805908]
[126.24902344 375.22686768]
[125.57923889 390.21191406]
[124.90944672 405.19696045]
[124.23966217 420.18197632]
[137.60829163 427.46490479]
[146.45307922 439.77981567]
[149.06320190 454.65286255]
[144.97372437 469.12481689]
[135.04731750 480.33978271]
[121.29293823 486.10888672]
[120.62315369 501.09390259]
[119.95336914 516.07897949]
[119.28357697 531.06396484]
[133.06843567 537.47070312]
[143.34857178 548.66833496]
[148.55630493 562.94940186]
[147.89753723 578.13604736]
[141.47268677 591.91247559]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 205]
[10 204]
[11 203]
[12 202]
[18 196]
[19 195]
[20 194]
[21 193]
[22 184]
[23 183]
[24 182]
[25 181]
[26 180]
[32 175]
[33 174]
[34 172]
[35 171]
[36 170]
[41 165]
[42 164]
[43 156]
[44 155]
[45 153]
[46 152]
[47 151]
[52 150]
[53 149]
[54 148]
[55 147]
[56 146]
[60 145]
[61 144]
[62 143]
[63 126]
[64 125]
[65 124]
[66 122]
[67 121]
[68 120]
[69 119]
[73 118]
[74 117]
[75 116]
[76 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
