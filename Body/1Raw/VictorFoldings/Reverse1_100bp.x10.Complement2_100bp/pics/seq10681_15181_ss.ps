%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[219.33859253 522.70227051]
[232.34353638 514.94659424]
[229.23942566 500.27130127]
[226.13531494 485.59600830]
[223.03120422 470.92068481]
[219.92709351 456.24539185]
[216.82298279 441.57009888]
[211.36763000 427.59729004]
[203.70703125 414.70095825]
[196.04643250 401.80462646]
[188.38583374 388.90829468]
[185.66203308 403.65893555]
[174.86799622 414.07473755]
[160.02964783 416.27087402]
[146.68128967 409.42822266]
[139.80155945 396.09896851]
[141.95642090 381.25454712]
[152.34216309 370.43157959]
[167.08514404 367.66677856]
[180.68748474 373.99212646]
[174.61364746 360.27685547]
[168.53981018 346.56158447]
[162.46598816 332.84631348]
[156.39215088 319.13104248]
[141.81488037 316.19143677]
[131.64347839 305.10058594]
[129.93312073 289.97021484]
[137.54795837 276.57916260]
[131.47412109 262.86389160]
[125.40029144 249.14863586]
[119.32646179 235.43336487]
[113.25262451 221.71810913]
[112.21885681 236.68243408]
[106.66980743 250.61830139]
[97.13437653 262.19738770]
[84.52140808 270.31607056]
[70.03310394 274.20056152]
[55.05039597 273.48056030]
[41.00133514 268.22470093]
[29.22499084 258.93395996]
[20.84380913 246.49388123]
[16.65662956 232.09014893]
[17.06254768 217.09564209]
[22.02287674 202.93954468]
[31.06482506 190.97113037]
[43.32657623 182.33113098]
[57.63941574 177.84307861]
[72.63913727 177.93473816]
[86.89605713 182.59736633]
[99.05130768 191.38656616]
[107.94683838 203.46560669]
[105.72171783 188.63156128]
[103.49660492 173.79751587]
[91.40336609 165.17840576]
[88.93546295 150.16627502]
[98.05798340 137.54020691]
[95.83286285 122.70616150]
[93.60774994 107.87212372]
[89.39271545 101.00145721]
[91.46163940 92.80081940]
[89.45762634 77.93529510]
[87.45361328 63.06976318]
[85.44960022 48.20423508]
[75.68445587 39.77780533]
[74.32134247 27.35501480]
[81.54885101 17.65503120]
[79.76638031 2.76131392]
[77.98391724 -12.13240337]
[73.85691833 -20.28137207]
[76.28749084 -27.26091957]
[74.72696686 -42.17952347]
[73.16644287 -57.09812927]
[64.03543091 -70.01847076]
[70.40666199 -83.48162842]
[61.27565002 -96.40196228]
[67.64688873 -109.86512756]
[66.08636475 -124.78372955]
[56.95534897 -137.70407104]
[63.32658386 -151.16722107]
[61.76605988 -166.08583069]
[60.20553589 -181.00444031]
[58.64501572 -195.92303467]
[57.08449173 -210.84164429]
[42.07549286 -211.69378662]
[27.39758110 -214.94265747]
[13.43095016 -220.50407410]
[0.53736681 -228.23399353]
[-10.94919300 -237.93218994]
[-20.73119926 -249.34747314]
[-28.55527496 -262.18414307]
[-34.21875763 -276.10968018]
[-37.57494736 -290.76342773]
[-38.53691483 -305.76577759]
[-37.07974243 -320.72817993]
[-33.24116898 -335.26300049]
[-27.12063026 -348.99383545]
[-18.87665558 -361.56494141]
[-8.72278976 -372.65075684]
[3.07796073 -381.96411133]
[16.21992683 -389.26376343]
[30.36270142 -394.36062622]
[45.13995361 -397.12268066]
[60.16891098 -397.47842407]
[75.06029510 -395.41860962]
[89.42837524 -390.99655151]
[102.90099335 -384.32687378]
[115.12916565 -375.58227539]
[125.79616547 -364.98928833]
[134.62568665 -352.82229614]
[141.38900757 -339.39645386]
[145.91096497 -325.05950928]
[148.07441711 -310.18283081]
[147.82333374 -295.15173340]
[145.16421509 -280.35562134]
[140.16592407 -266.17770386]
[132.95794678 -252.98522949]
[123.72698975 -241.11993408]
[112.71214294 -230.88912964]
[100.19872284 -222.55783081]
[86.51085663 -216.34184265]
[72.00309753 -212.40216064]
[73.56362152 -197.48356628]
[75.12414551 -182.56495667]
[76.68466187 -167.64634705]
[78.24518585 -152.72775269]
[87.26457977 -140.87448120]
[81.00496674 -126.34425354]
[82.56549072 -111.42564392]
[91.58488464 -99.57238770]
[85.32527161 -85.04215240]
[94.34466553 -73.18888855]
[88.08504486 -58.65865326]
[89.64556885 -43.74004745]
[91.20609283 -28.82144356]
[92.87763214 -13.91486931]
[94.66010284 0.97884810]
[96.44256592 15.87256527]
[107.70254517 29.33287048]
[100.31512451 46.20022202]
[102.31913757 61.06575012]
[104.32315063 75.93128204]
[106.32716370 90.79680634]
[108.44178772 105.64700317]
[110.66690826 120.48104858]
[112.89202881 135.31509399]
[125.31754303 144.70893860]
[127.36281586 159.78445435]
[118.33065033 171.57240295]
[120.55576324 186.40644836]
[122.78088379 201.24049377]
[126.96789551 215.64427185]
[133.04173279 229.35954285]
[139.11555481 243.07479858]
[145.18939209 256.79006958]
[151.26322937 270.50534058]
[166.29681396 273.86648560]
[176.35108948 285.30172729]
[177.72770691 300.28735352]
[170.10742188 313.05722046]
[176.18124390 326.77249146]
[182.25508118 340.48776245]
[188.32891846 354.20300293]
[194.40275574 367.91827393]
[201.28216553 381.24771118]
[208.94276428 394.14404297]
[216.60336304 407.04037476]
[224.26396179 419.93670654]
[223.19241333 404.97500610]
[225.97755432 390.23583984]
[232.43464661 376.69677734]
[242.13539124 365.25582886]
[254.43640137 356.67184448]
[268.52178955 351.51409912]
[283.45730591 350.12475586]
[298.25234985 352.59597778]
[311.92559814 358.76379395]
[323.57019043 368.21914673]
[332.41372681 380.33489990]
[337.86972046 394.30746460]
[339.57623291 409.21005249]
[337.42007446 424.05429077]
[331.54431152 437.85556030]
[322.33862305 449.69851685]
[310.41360474 458.79760742]
[296.56018066 464.54937744]
[281.69720459 466.57229614]
[266.81051636 464.73220825]
[252.88745117 459.15112305]
[240.85148621 450.19927979]
[231.49829102 438.46597290]
[234.60240173 453.14126587]
[237.70651245 467.81658936]
[240.81062317 482.49188232]
[243.91473389 497.16717529]
[247.01884460 511.84249878]
[262.05035400 513.66790771]
[275.67364502 520.27734375]
[286.41091919 530.95397949]
[293.09750366 544.53955078]
[295.00805664 559.56048584]
[291.93539429 574.38739014]
[284.21276855 587.41198730]
[272.67788696 597.22143555]
[258.58193970 602.75164795]
[243.45399475 603.40283203]
[228.93501282 599.10430908]
[216.59986877 590.32232666]
[207.78662109 578.00952148]
[203.45123291 563.50146484]
[204.06401062 548.37194824]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 195]
[3 194]
[4 193]
[5 192]
[6 191]
[7 190]
[8 167]
[9 166]
[10 165]
[11 164]
[20 163]
[21 162]
[22 161]
[23 160]
[24 159]
[28 155]
[29 154]
[30 153]
[31 152]
[32 151]
[51 150]
[52 149]
[53 148]
[56 145]
[57 144]
[58 143]
[60 142]
[61 141]
[62 140]
[63 139]
[66 137]
[67 136]
[68 135]
[70 134]
[71 133]
[72 132]
[74 130]
[76 128]
[77 127]
[79 125]
[80 124]
[81 123]
[82 122]
[83 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
