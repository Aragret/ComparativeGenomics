%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[41.40053940 695.90588379]
[26.91248703 699.81396484]
[12.19151115 702.72418213]
[-2.69374967 704.62310791]
[-17.67389488 705.50170898]
[-32.67907715 705.35601807]
[-47.63933563 704.18670654]
[-62.48492050 701.99914551]
[-77.14661407 698.80358887]
[-91.55605316 694.61492920]
[-105.64604950 689.45269775]
[-119.35092163 683.34094238]
[-132.60676575 676.30822754]
[-145.35176086 668.38726807]
[-157.52650452 659.61499023]
[-169.07421875 650.03234863]
[-179.94107056 639.68402100]
[-190.07640076 628.61822510]
[-199.43292236 616.88653564]
[-207.96704102 604.54370117]
[-215.63896179 591.64727783]
[-222.41290283 578.25732422]
[-228.25727844 564.43634033]
[-233.14485168 550.24871826]
[-237.05284119 535.76062012]
[-239.96299744 521.03961182]
[-241.86178589 506.15435791]
[-242.74032593 491.17422485]
[-242.59452820 476.16903687]
[-241.42509460 461.20877075]
[-239.23744202 446.36322021]
[-236.04179382 431.70153809]
[-231.85304260 417.29214478]
[-226.69071960 403.20217896]
[-220.57888794 389.49734497]
[-213.54605103 376.24154663]
[-205.62500000 363.49661255]
[-196.85267639 351.32189941]
[-187.26995850 339.77426147]
[-176.92153931 328.90747070]
[-165.85566711 318.77224731]
[-154.12393188 309.41577148]
[-141.78103638 300.88174438]
[-128.88453674 293.20993042]
[-115.49455261 286.43606567]
[-101.67351532 280.59176636]
[-87.48587036 275.70428467]
[-72.99776459 271.79641724]
[-58.27675247 268.88635254]
[-43.39146423 266.98767090]
[-28.41131020 266.10922241]
[-13.40612888 266.25512695]
[1.55411565 267.42465210]
[16.39967155 269.61239624]
[31.06131935 272.80816650]
[35.24832916 258.40438843]
[39.43534088 244.00059509]
[43.62235260 229.59681702]
[47.80936432 215.19302368]
[51.99637604 200.78924561]
[38.89319992 208.09039307]
[24.13928986 205.38444519]
[14.47993755 193.90852356]
[14.33126640 178.90925598]
[23.76124763 167.24411011]
[38.45862198 164.24624634]
[51.70394516 171.28622437]
[57.44172287 185.14733887]
[55.08175659 170.44088745]
[67.45634460 160.58287048]
[73.11912537 146.69285583]
[78.78191376 132.80282593]
[84.44470215 118.91279602]
[90.00392914 104.98099518]
[95.35511017 90.96797180]
[100.60182953 76.91550446]
[105.84854889 62.86302948]
[111.09526825 48.81055832]
[116.34198761 34.75808716]
[110.02978516 20.51751709]
[115.55088806 6.34105444]
[129.16598511 0.41109455]
[134.41270447 -13.64137650]
[139.65942383 -27.69384766]
[144.69635010 -41.82287598]
[149.52233887 -56.02533340]
[154.34834290 -70.22779083]
[157.23361206 -84.94767761]
[158.12643433 -99.92108917]
[159.01924133 -114.89449310]
[159.91206360 -129.86790466]
[153.00987244 -144.10414124]
[161.49099731 -156.34831238]
[162.38381958 -171.32171631]
[163.27662659 -186.29512024]
[148.87762451 -190.75962830]
[135.96580505 -198.54092407]
[125.29187012 -209.18661499]
[117.47637939 -222.07774353]
[112.97371674 -236.46487427]
[112.04565430 -251.51155090]
[114.74616241 -266.34295654]
[120.91822052 -280.09683228]
[130.20300293 -291.97354126]
[142.06071472 -301.28259277]
[155.80194092 -307.48275757]
[170.62779236 -310.21356201]
[185.67633057 -309.31628418]
[200.07263184 -304.84304810]
[212.97972107 -297.05392456]
[223.64720154 -286.40176392]
[231.45487976 -273.50588989]
[235.94882202 -259.11602783]
[236.86775208 -244.06880188]
[234.15826416 -229.23902893]
[227.97785950 -215.48890686]
[218.68588257 -203.61782837]
[206.82254028 -194.31596375]
[193.07754517 -188.12413025]
[178.25004578 -185.40229797]
[177.35722351 -170.42889404]
[176.46440125 -155.45549011]
[183.43045044 -142.29025269]
[174.88546753 -128.97508240]
[173.99264526 -114.00167847]
[173.09983826 -99.02826691]
[172.20701599 -84.05486298]
[179.98870850 -96.87848663]
[191.31112671 -106.71733856]
[205.09507751 -112.63364410]
[220.02676392 -114.06349182]
[234.68301392 -110.87060547]
[247.66687012 -103.35931396]
[257.74078369 -92.24552917]
[263.94461060 -78.58856964]
[265.68698120 -63.69010925]
[262.80187988 -48.97018433]
[255.56428528 -35.83180237]
[244.66401672 -25.52722931]
[231.14004517 -19.03863144]
[216.28135681 -16.98446274]
[201.50421143 -19.56051254]
[188.21707153 -26.52124786]
[177.68637085 -37.20321274]
[170.91584778 -50.58827591]
[168.55079651 -65.40179443]
[163.72479248 -51.19933701]
[158.89880371 -36.99687958]
[160.16876221 -32.39294434]
[158.56005859 -26.94234276]
[153.71189880 -22.44713020]
[148.46517944 -8.39465809]
[143.21846008 5.65781260]
[149.61570740 19.05970955]
[144.49497986 33.38565445]
[130.39445496 40.00480652]
[125.14773560 54.05727768]
[119.90102386 68.10974884]
[114.65430450 82.16222382]
[109.40758514 96.21469116]
[109.76250458 104.26742554]
[103.97672272 110.43635559]
[103.77076721 119.56845856]
[98.33472443 124.57558441]
[92.67194366 138.46560669]
[87.00915527 152.35563660]
[81.34636688 166.24566650]
[83.30129242 181.94561768]
[71.33174896 190.81011963]
[66.40015411 204.97625732]
[62.21314621 219.38003540]
[58.02613449 233.78382874]
[53.83912277 248.18760681]
[49.65211105 262.59140015]
[45.46509933 276.99517822]
[59.55517197 282.15719604]
[73.26012421 288.26876831]
[86.51605225 295.30133057]
[99.26116180 303.22210693]
[111.43602753 311.99420166]
[122.98387146 321.57669067]
[133.85086060 331.92489624]
[143.98632812 342.99057007]
[153.34301758 354.72210693]
[161.87730408 367.06481934]
[169.54939270 379.96118164]
[176.32350159 393.35101318]
[182.16807556 407.17193604]
[187.05584717 421.35949707]
[190.96401978 435.84750366]
[193.87437439 450.56848145]
[195.77336121 465.45370483]
[196.65209961 480.43386841]
[196.50651550 495.43902588]
[195.33726501 510.39929199]
[193.14982605 525.24493408]
[189.95436096 539.90661621]
[185.76580811 554.31610107]
[180.60366821 568.40612793]
[174.49203491 582.11102295]
[167.45936584 595.36694336]
[159.53849792 608.11199951]
[150.76632690 620.28674316]
[141.18376160 631.83453369]
[130.83549500 642.70147705]
[119.76975250 652.83685303]
[108.03814697 662.19348145]
[95.69537354 670.72766113]
[82.79897308 678.39965820]
[69.40907288 685.17370605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 175]
[56 174]
[57 173]
[58 172]
[59 171]
[60 170]
[68 169]
[70 167]
[71 166]
[72 165]
[73 164]
[74 162]
[75 160]
[76 159]
[77 158]
[78 157]
[79 156]
[82 153]
[83 152]
[84 151]
[85 148]
[86 147]
[87 146]
[88 127]
[89 126]
[90 125]
[91 124]
[93 122]
[94 121]
[95 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
