%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[94.25177765 714.61968994]
[79.39270782 716.90100098]
[64.36012268 716.76910400]
[49.54338455 714.22735596]
[35.32629395 709.34161377]
[22.07710266 702.23840332]
[10.13899803 693.10180664]
[-0.17879440 682.16839600]
[-8.60901928 669.72137451]
[-14.93331242 656.08325195]
[-18.98786163 641.60717773]
[-20.66764069 626.66815186]
[-19.92914391 611.65313721]
[-16.79149628 596.95104980]
[-11.33597279 582.94268799]
[-3.70388293 569.99096680]
[5.90708256 558.43133545]
[17.24797630 548.56317139]
[30.02504349 540.64215088]
[43.90732574 534.87341309]
[58.53524017 531.40637207]
[73.52988434 530.33087158]
[74.86811829 515.39068604]
[76.20635223 500.45046997]
[77.54459381 485.51028442]
[78.66024017 470.55184937]
[79.55305481 455.57843018]
[72.58701324 442.41320801]
[81.13199615 429.09802246]
[82.02481079 414.12463379]
[82.91762543 399.15121460]
[83.81044769 384.17779541]
[84.70326233 369.20440674]
[85.59607697 354.23098755]
[86.48889160 339.25759888]
[87.38170624 324.28417969]
[84.64190674 317.42013550]
[88.40091705 309.09500122]
[89.51657104 294.13656616]
[90.29788971 279.15692139]
[90.74449921 264.16357422]
[91.19110107 249.17021179]
[83.83617401 236.21821594]
[91.98092651 222.65454102]
[92.42752838 207.66117859]
[92.87413788 192.66783142]
[93.32073975 177.67448425]
[93.43241119 162.67489624]
[93.20908356 147.67655945]
[92.98575592 132.67822266]
[79.51879120 126.41185760]
[70.09697723 114.92901611]
[66.58116913 100.49761200]
[69.66574860 85.96792603]
[78.74149323 74.20965576]
[92.01590729 67.54510498]
[91.79257965 52.54676437]
[91.56925201 37.54842758]
[91.34592438 22.55009079]
[91.12259674 7.55175304]
[90.89926910 -7.44658422]
[82.95736694 -21.13002968]
[90.50431824 -33.97108841]
[90.28099060 -48.96942520]
[90.05766296 -63.96776199]
[89.72268677 -78.96401978]
[89.27607727 -93.95737457]
[88.82947540 -108.95072174]
[88.27126312 -123.94033051]
[87.60147858 -138.92536926]
[86.93169403 -153.91041565]
[85.92742920 -168.87675476]
[84.58919525 -183.81694031]
[83.25096130 -198.75712585]
[81.80154419 -213.68693542]
[80.24102020 -228.60552979]
[76.23580170 -236.81504822]
[78.77001953 -243.75762939]
[77.43178558 -258.69781494]
[76.09355164 -273.63800049]
[74.75531769 -288.57818604]
[59.75069427 -289.37939453]
[45.01283264 -292.30792236]
[30.84178543 -297.30413818]
[17.52605057 -304.26632690]
[5.33672142 -313.05273438]
[-5.47804165 -323.48449707]
[-14.69806480 -335.34921265]
[-22.13563919 -348.40539551]
[-27.63934708 -362.38714600]
[-31.09713936 -377.00988770]
[-32.43862152 -391.97589111]
[-31.63647842 -406.98046875]
[-28.70704269 -421.71813965]
[-23.70995522 -435.88888550]
[-16.74695015 -449.20419312]
[-7.95978355 -461.39297485]
[2.47264791 -472.20709229]
[14.33795357 -481.42639160]
[27.39457130 -488.86315918]
[41.37668228 -494.36599731]
[55.99963379 -497.82287598]
[70.96572113 -499.16345215]
[85.97024536 -498.36035156]
[100.70774078 -495.43002319]
[114.87817383 -490.43206787]
[128.19305420 -483.46823120]
[140.38128662 -474.68029785]
[151.19476318 -464.24719238]
[160.41331482 -452.38131714]
[167.84927368 -439.32424927]
[173.35125732 -425.34179688]
[176.80723572 -410.71862793]
[178.14686584 -395.75247192]
[177.34286499 -380.74798584]
[174.41160583 -366.01068115]
[169.41276550 -351.84054565]
[162.44810486 -338.52609253]
[153.65943909 -326.33840942]
[143.22566223 -315.52557373]
[131.35922241 -306.30776978]
[118.30168152 -298.87261963]
[104.31888580 -293.37149048]
[89.69550323 -289.91641235]
[91.03373718 -274.97622681]
[92.37197113 -260.03604126]
[93.71020508 -245.09587097]
[95.15962982 -230.16606140]
[96.72014618 -215.24745178]
[100.54246521 -208.92196655]
[98.19114685 -200.09535217]
[99.52938080 -185.15516663]
[100.86761475 -170.21498108]
[103.32432556 -167.68577576]
[104.67803955 -163.84097290]
[104.32377625 -159.21195984]
[101.91673279 -154.58020020]
[102.58651733 -139.59515381]
[103.25630188 -124.61011505]
[106.69533539 -118.06834412]
[103.82282257 -109.39733124]
[104.26943207 -94.40397644]
[104.71603394 -79.41062927]
[108.05729675 -72.81837463]
[105.05599976 -64.19109344]
[105.27932739 -49.19275284]
[105.50265503 -34.19441605]
[113.42858887 -21.58375168]
[105.89760590 -7.66991186]
[106.12093353 7.32842541]
[106.34426117 22.32676315]
[106.56758881 37.32509995]
[106.79091644 52.32343674]
[107.01424408 67.32177734]
[120.48120880 73.58814240]
[129.90301514 85.07098389]
[133.41883850 99.50238800]
[130.33425903 114.03207397]
[121.25850677 125.79034424]
[107.98409271 132.45489502]
[108.20742035 147.45323181]
[108.43074799 162.45156860]
[111.10921478 166.93185425]
[111.73837280 171.53157043]
[110.61590576 175.45013428]
[108.31409454 178.12109375]
[107.86748505 193.11444092]
[107.42087555 208.10778809]
[106.97427368 223.10113525]
[114.29726410 237.12556458]
[106.18445587 249.61682129]
[105.73784637 264.61016846]
[105.29123688 279.60351562]
[107.76698303 284.19894409]
[108.19012451 288.82217407]
[106.89379883 292.68670654]
[104.47502136 295.25219727]
[103.35937500 310.21066284]
[102.35511017 325.17700195]
[101.46229553 340.15042114]
[100.56948090 355.12380981]
[99.67666626 370.09722900]
[98.78385162 385.07061768]
[97.89103699 400.04403687]
[96.99821472 415.01742554]
[96.10540009 429.99084473]
[103.00758362 444.22708130]
[94.52645874 456.47125244]
[93.63364410 471.44467163]
[96.24634552 477.51797485]
[95.51020813 483.15316772]
[92.48477173 486.84854126]
[91.14653778 501.78872681]
[89.80830383 516.72888184]
[88.47006989 531.66906738]
[103.03488159 535.39233398]
[116.81377411 541.40380859]
[129.44984436 549.54791260]
[140.61579895 559.61358643]
[150.02239990 571.34014893]
[157.42597961 584.42382812]
[162.63481140 598.52575684]
[165.51393127 613.28063965]
[165.98876953 628.30633545]
[164.04705811 643.21356201]
[159.73905945 657.61621094]
[153.17636108 671.14129639]
[144.52897644 683.43841553]
[134.02087402 694.18902588]
[121.92424774 703.11468506]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 195]
[23 194]
[24 193]
[25 192]
[26 189]
[27 188]
[29 186]
[30 185]
[31 184]
[32 183]
[33 182]
[34 181]
[35 180]
[36 179]
[38 178]
[39 177]
[40 173]
[41 172]
[42 171]
[44 169]
[45 168]
[46 167]
[47 166]
[48 162]
[49 161]
[50 160]
[56 154]
[57 153]
[58 152]
[59 151]
[60 150]
[61 149]
[63 147]
[64 146]
[65 145]
[66 143]
[67 142]
[68 141]
[69 139]
[70 138]
[71 137]
[72 133]
[73 132]
[74 131]
[75 129]
[76 128]
[78 127]
[79 126]
[80 125]
[81 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
