%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[114.81259918 603.50378418]
[111.88916016 588.75378418]
[111.50070190 573.72192383]
[113.65839386 558.84063721]
[118.30015564 544.53814697]
[125.29244232 531.22589111]
[134.43406677 519.28692627]
[145.46200562 509.06475830]
[158.05895996 500.85351562]
[171.86250305 494.88943481]
[168.32283020 480.31304932]
[164.78315735 465.73669434]
[161.02685547 451.21463013]
[157.05476379 436.75009155]
[153.08265686 422.28558350]
[149.11056519 407.82104492]
[145.13847351 393.35653687]
[130.99993896 392.63858032]
[117.75426483 387.58157349]
[106.70117950 378.66760254]
[98.92964935 366.75781250]
[95.21060181 353.00939941]
[95.92042542 338.76306152]
[101.00295258 325.41232300]
[109.97365570 314.26721191]
[121.96579742 306.42562866]
[118.20949554 291.90356445]
[114.45319366 277.38153076]
[110.69689941 262.85946655]
[100.43653870 256.45230103]
[97.18824768 244.38447571]
[103.22006226 232.98361206]
[99.68038940 218.40722656]
[96.14072418 203.83085632]
[92.60105133 189.25448608]
[88.79783630 203.76432800]
[80.54427338 216.28944397]
[68.71137238 225.50804138]
[54.54788971 230.44723511]
[39.54853058 230.58581543]
[25.29621124 225.90911865]
[13.29501629 216.91070557]
[4.81145906 204.54020691]
[0.74082994 190.10310364]
[1.51271164 175.12298584]
[7.04564571 161.18072510]
[16.75572968 149.74768066]
[29.61823273 142.03042603]
[44.27574539 138.84338379]
[59.18142700 140.52287292]
[72.76224518 146.89164734]
[83.58497620 157.27761841]
[90.50754547 170.58489990]
[87.46398163 163.85003662]
[90.84751129 155.36537170]
[91.29411316 140.37202454]
[91.74072266 125.37866974]
[92.18732452 110.38531494]
[92.18732452 95.38531494]
[91.74072266 80.39196777]
[91.29411316 65.39862061]
[90.84751129 50.40526581]
[90.40090179 35.41191864]
[87.65602875 30.97201347]
[86.95845795 26.38216591]
[88.02246094 22.44732857]
[90.28424835 19.74239922]
[90.50757599 4.74406195]
[90.73090363 -10.25427532]
[90.95423126 -25.25261307]
[77.24996185 -38.33340836]
[77.45534515 -56.95787430]
[90.97314453 -69.30229950]
[90.74981689 -84.30063629]
[90.52648926 -99.29897308]
[82.58458710 -112.98242188]
[90.13153839 -125.82347870]
[89.90821075 -140.82180786]
[89.68488312 -155.82015991]
[89.46155548 -170.81849670]
[74.92600250 -174.89251709]
[62.14028549 -182.88925171]
[52.13606644 -194.15338135]
[45.71771622 -207.76635742]
[43.39766312 -222.62130737]
[45.35548782 -237.51301575]
[51.42404175 -251.23574829]
[61.10369873 -262.68081665]
[73.60347748 -270.92623901]
[87.90564728 -275.31091309]
[87.68231964 -290.30923462]
[76.62321472 -301.27893066]
[76.61038208 -316.49255371]
[87.13645935 -326.96813965]
[86.91313171 -341.96646118]
[78.97122192 -355.64990234]
[86.51818085 -368.49096680]
[86.29485321 -383.48931885]
[86.07152557 -398.48764038]
[72.38609314 -405.34094238]
[63.46254730 -417.77590942]
[61.35145569 -432.93515015]
[66.53792572 -447.33511353]
[77.83014679 -457.66680908]
[92.63325500 -461.55612183]
[107.54559326 -458.10928345]
[119.14042664 -448.11837769]
[124.75333405 -433.87921143]
[123.09452820 -418.66384888]
[114.54517365 -405.96868896]
[101.06986237 -398.71096802]
[101.29319000 -383.71264648]
[101.51651764 -368.71429443]
[109.44244385 -356.10363770]
[101.91146851 -342.18978882]
[102.13479614 -327.19146729]
[112.96810150 -317.03393555]
[113.40824127 -301.82666016]
[102.68065643 -290.53256226]
[102.90398407 -275.53424072]
[117.33036041 -271.57736206]
[130.07008362 -263.70776367]
[140.08621216 -252.55593872]
[146.56065369 -239.01997375]
[148.96099854 -224.19316101]
[147.08425903 -209.27572632]
[141.07406616 -195.47769165]
[131.40965271 -183.92068481]
[118.86769867 -175.54681396]
[104.45989227 -171.04182434]
[104.68321991 -156.04348755]
[104.90654755 -141.04513550]
[105.12987518 -126.04680634]
[113.05580902 -113.43614197]
[105.52482605 -99.52230072]
[105.74815369 -84.52396393]
[105.97148132 -69.52562714]
[115.68582916 -63.54251480]
[121.36443329 -53.50910950]
[121.49586487 -41.86108017]
[115.93180084 -31.49082756]
[105.95256805 -25.02928543]
[105.72924042 -10.03094769]
[105.50591278 4.96738958]
[105.28258514 19.96572685]
[105.39425659 34.96531296]
[105.84085846 49.95866013]
[106.28746796 64.95201111]
[106.73406982 79.94535828]
[107.18067932 94.93871307]
[109.21392822 97.20925903]
[110.46595764 100.26980591]
[110.64257050 103.83242798]
[109.56006622 107.50453949]
[107.18067932 110.83192444]
[106.73406982 125.82527161]
[106.28746796 140.81861877]
[105.84085846 155.81196594]
[105.50588226 170.80822754]
[107.17742157 185.71481323]
[110.71709442 200.29118347]
[114.25676727 214.86755371]
[117.79644012 229.44393921]
[130.81246948 242.46946716]
[125.21895599 259.10314941]
[128.97525024 273.62521362]
[132.73155212 288.14727783]
[136.48785400 302.66934204]
[152.35475159 304.11212158]
[166.74411011 310.88940430]
[177.92401123 322.16516113]
[184.55575562 336.56307983]
[185.85424805 352.33474731]
[181.68077087 367.57168579]
[172.55767822 380.43652344]
[159.60299683 389.38442993]
[163.57508850 403.84896851]
[167.54718018 418.31347656]
[171.51928711 432.77801514]
[175.49137878 447.24252319]
[179.91915894 452.15234375]
[181.03518677 457.72473145]
[179.35952759 462.19702148]
[182.89920044 476.77337646]
[186.43887329 491.34976196]
[201.44038391 490.31893921]
[216.40031433 491.83837891]
[230.88821411 495.86437988]
[244.48725891 502.28106689]
[256.80618286 510.90386963]
[267.49050903 521.48461914]
[276.23284912 533.71899414]
[282.78167725 547.25488281]
[286.94857788 561.70294189]
[288.61364746 576.64733887]
[287.72894287 591.65820312]
[284.31997681 606.30352783]
[278.48483276 620.16204834]
[270.39135742 632.83502197]
[260.27243042 643.95776367]
[248.41918945 653.21026611]
[235.17269897 660.32635498]
[220.91406250 665.10119629]
[206.05354309 667.39752197]
[191.01870728 667.14916992]
[176.24212646 664.36334229]
[162.14897156 659.12017822]
[149.14471436 651.57055664]
[137.60351562 641.93164062]
[127.85743713 630.48077393]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 185]
[11 184]
[12 183]
[13 180]
[14 179]
[15 178]
[16 177]
[17 176]
[26 168]
[27 167]
[28 166]
[29 165]
[32 163]
[33 162]
[34 161]
[35 160]
[53 159]
[55 158]
[56 157]
[57 156]
[58 155]
[59 150]
[60 149]
[61 148]
[62 147]
[63 146]
[67 145]
[68 144]
[69 143]
[70 142]
[73 137]
[74 136]
[75 135]
[77 133]
[78 132]
[79 131]
[80 130]
[90 120]
[91 119]
[94 116]
[95 115]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
