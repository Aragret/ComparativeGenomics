%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[76.01375580 400.64624023]
[72.59292603 386.01071167]
[71.44640350 371.02453613]
[72.60105896 356.03897095]
[76.02982330 341.40530396]
[81.65232849 327.46658325]
[89.33677673 314.54956055]
[98.90302277 302.95700073]
[110.12683105 292.96066284]
[122.74509430 284.79489136]
[136.46202087 278.65109253]
[132.48991394 264.18655396]
[128.51782227 249.72203064]
[124.54573059 235.25750732]
[120.91171265 232.15863037]
[119.18581390 226.74400330]
[120.67757416 220.30302429]
[117.13790131 205.72665405]
[113.59822845 191.15026855]
[110.05855560 176.57389832]
[98.22485352 171.47557068]
[91.38622284 160.32589722]
[92.23033142 147.07833862]
[100.67263794 136.58346558]
[97.35037994 121.95600891]
[94.02811432 107.32855225]
[90.33779144 103.60089111]
[88.99869537 98.07096100]
[90.83157349 92.21626282]
[87.94630432 77.49636841]
[85.06102753 62.77647781]
[82.17575836 48.05658722]
[79.29048920 33.33669662]
[76.29570770 18.63869286]
[68.97097015 31.72869492]
[55.39974213 38.11788940]
[40.64376068 35.42326355]
[30.20664215 24.64984322]
[27.98117256 9.81585312]
[34.79739761 -3.54599881]
[48.11303329 -10.45207119]
[62.96167755 -8.32656956]
[73.80570984 2.03877258]
[72.46747589 -12.90141296]
[71.12924194 -27.84159851]
[69.79100800 -42.78178406]
[68.45277405 -57.72196960]
[67.11454010 -72.66215515]
[52.11821365 -72.17877197]
[37.11875153 -72.55229950]
[22.16507530 -73.78152466]
[7.30596209 -75.86243439]
[-7.41012001 -78.78824615]
[-21.93517113 -82.54940796]
[-36.22180939 -87.13365173]
[-50.22344208 -92.52603149]
[-63.89439392 -98.70896149]
[-77.19007111 -105.66226196]
[-90.06710815 -113.36325836]
[-102.48349762 -121.78682709]
[-114.39875031 -130.90550232]
[-125.77399445 -140.68954468]
[-136.57212830 -151.10700989]
[-146.75791931 -162.12394714]
[-156.29815674 -173.70442200]
[-165.16172791 -185.81065369]
[-173.31970215 -198.40313721]
[-180.74548340 -211.44082642]
[-187.41484070 -224.88117981]
[-193.30603027 -238.68035889]
[-198.39982605 -252.79335022]
[-202.67961121 -267.17413330]
[-206.13145447 -281.77578735]
[-208.74406433 -296.55068970]
[-210.50892639 -311.45065308]
[-211.42028809 -326.42706299]
[-211.47517395 -341.43106079]
[-210.67341614 -356.41372681]
[-209.01760864 -371.32620239]
[-206.51316833 -386.11984253]
[-203.16827393 -400.74633789]
[-198.99380493 -415.15805054]
[-194.00340271 -429.30795288]
[-188.21333313 -443.14984131]
[-181.64248657 -456.63864136]
[-174.31230164 -469.73031616]
[-166.24667358 -482.38214111]
[-157.47192383 -494.55291748]
[-148.01666260 -506.20288086]
[-137.91174316 -517.29400635]
[-127.19012451 -527.79022217]
[-115.88677216 -537.65722656]
[-104.03855896 -546.86285400]
[-91.68412781 -555.37701416]
[-78.86377716 -563.17205811]
[-65.61933136 -570.22241211]
[-51.99398804 -576.50524902]
[-38.03218460 -581.99987793]
[-23.77946663 -586.68853760]
[-9.28232384 -590.55590820]
[5.41195822 -593.58929443]
[20.25544930 -595.77886963]
[35.19972992 -597.11743164]
[50.19606018 -597.60070801]
[65.19551849 -597.22705078]
[80.14918518 -595.99774170]
[95.00828552 -593.91668701]
[109.72434235 -590.99078369]
[124.24936676 -587.22949219]
[138.53596497 -582.64514160]
[152.53755188 -577.25268555]
[166.20846558 -571.06964111]
[179.50408936 -564.11621094]
[192.38105774 -556.41510010]
[204.79739380 -547.99145508]
[216.71257019 -538.87268066]
[228.08773804 -529.08856201]
[238.88577271 -518.67102051]
[249.07148743 -507.65399170]
[258.61163330 -496.07342529]
[267.47509766 -483.96713257]
[275.63299561 -471.37457275]
[283.05865479 -458.33685303]
[289.72790527 -444.89645386]
[295.61898804 -431.09722900]
[300.71267700 -416.98419189]
[304.99237061 -402.60336304]
[308.44409180 -388.00167847]
[311.05657959 -373.22677612]
[312.82131958 -358.32678223]
[313.73257446 -343.35037231]
[313.78735352 -328.34637451]
[312.98547363 -313.36370850]
[311.32952881 -298.45123291]
[308.82498169 -283.65762329]
[305.47998047 -269.03115845]
[301.30538940 -254.61947632]
[296.31488037 -240.46961975]
[290.52468872 -226.62776184]
[283.95373535 -213.13902283]
[276.62344360 -200.04740906]
[268.55773926 -187.39562988]
[259.78289795 -175.22494507]
[250.32754517 -163.57505798]
[240.22253418 -152.48396301]
[229.50083923 -141.98785400]
[218.19740295 -132.12094116]
[206.34912109 -122.91542816]
[193.99461365 -114.40132904]
[181.17420959 -106.60642242]
[167.92970276 -99.55613708]
[154.30430603 -93.27346039]
[140.34246826 -87.77889252]
[126.08971405 -83.09034729]
[111.59253693 -79.22312927]
[96.89823151 -76.18984222]
[82.05472565 -74.00038910]
[83.39295959 -59.06020355]
[84.73119354 -44.12001801]
[86.06942749 -29.17983246]
[87.40766144 -14.23964691]
[88.74589539 0.70053834]
[90.97101593 15.53458214]
[95.43065643 21.42808533]
[94.01037598 30.45142365]
[96.89565277 45.17131424]
[99.78092194 59.89120483]
[102.66619110 74.61109924]
[105.55146790 89.33098602]
[108.65557861 104.00629425]
[111.97783661 118.63375092]
[115.30009460 133.26121521]
[130.27052307 142.31140137]
[133.99052429 159.05882263]
[124.63493347 173.03422546]
[128.17460632 187.61059570]
[131.71427917 202.18698120]
[135.25395203 216.76335144]
[139.01025391 231.28541565]
[142.98234558 245.74993896]
[146.95443726 260.21444702]
[150.92654419 274.67898560]
[165.85742188 272.95584106]
[180.87635803 273.53216553]
[195.63127136 276.39450073]
[209.77629089 281.47570801]
[222.97984314 288.65670776]
[234.93241882 297.76913452]
[245.35382080 308.59939575]
[253.99977112 320.89361572]
[260.66757202 334.36361694]
[265.20095825 348.69363403]
[267.49362183 363.54772949]
[267.49185181 378.57769775]
[265.19567871 393.43124390]
[260.65890503 407.76019287]
[253.98791504 421.22860718]
[245.33908081 433.52078247]
[234.91511536 444.34860229]
[222.96038818 453.45819092]
[209.75514221 460.63607788]
[195.60891724 465.71395874]
[180.85331726 468.57278442]
[165.83425903 469.14556885]
[150.90377808 467.41891479]
[136.41189575 463.43322754]
[122.69830322 457.28198242]
[110.08447266 449.10934448]
[98.86609650 439.10693359]
[89.30613708 427.50918579]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 182]
[12 181]
[13 180]
[14 179]
[17 178]
[18 177]
[19 176]
[20 175]
[24 172]
[25 171]
[26 170]
[29 169]
[30 168]
[31 167]
[32 166]
[33 165]
[34 163]
[43 162]
[44 161]
[45 160]
[46 159]
[47 158]
[48 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
