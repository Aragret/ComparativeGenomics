%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[19.47500229 536.33618164]
[16.37129211 521.63159180]
[15.49395180 506.62866211]
[16.86258316 491.66253662]
[20.44661140 477.06759644]
[26.16596603 463.16986084]
[33.89287567 450.27984619]
[43.45471573 438.68551636]
[54.63787842 428.64584351]
[67.19252014 420.38519287]
[80.83816528 414.08804321]
[76.65115356 399.68426514]
[72.46414185 385.28048706]
[68.27713013 370.87670898]
[64.09011841 356.47293091]
[59.90311050 342.06915283]
[55.71609879 327.66537476]
[53.07154083 342.43038940]
[47.63491440 356.41049194]
[39.60947037 369.08297729]
[29.29524422 379.97412109]
[17.07784081 388.67672729]
[3.41401935 394.86541748]
[-11.18539047 398.30883789]
[-26.17457771 398.87829590]
[-40.99316025 396.55242920]
[-55.08713913 391.41824341]
[-67.92959595 383.66769409]
[-79.04040527 373.59048462]
[-88.00418091 361.56341553]
[-94.48580933 348.03607178]
[-98.24297333 333.51425171]
[-99.13520050 318.54080200]
[-97.12913513 303.67553711]
[-92.29978180 289.47424316]
[-84.82768250 276.46777344]
[-74.99219513 265.14245605]
[-63.16101456 255.92164612]
[-49.77647018 249.15008545]
[-35.33894730 245.08094788]
[-20.38820457 243.86634827]
[-5.48318386 245.55169678]
[8.81887627 250.07397461]
[21.98328590 257.26412964]
[33.51787949 266.85336304]
[42.99143219 278.48312378]
[50.04976654 291.71868896]
[54.42779541 306.05920410]
[56.87352371 291.25994873]
[59.31924820 276.46066284]
[50.46358871 264.53955078]
[52.73308563 249.49615479]
[65.29708862 240.28836060]
[59.73848724 226.46984863]
[69.62234497 214.11590576]
[72.06807709 199.31663513]
[74.51380157 184.51736450]
[76.95952606 169.71809387]
[75.43858337 167.36332703]
[74.75875092 164.26423645]
[75.20820618 160.73812866]
[76.95503998 157.20074463]
[80.01660919 154.12165833]
[83.33887482 139.49420166]
[86.66113281 124.86674500]
[89.98339081 110.23928070]
[86.03180695 96.82747650]
[95.38915253 86.43845367]
[84.07488251 73.86533356]
[82.49985504 57.19138336]
[91.08757019 43.00642776]
[106.28413391 36.79821014]
[109.38824463 22.12290764]
[112.49235535 7.44760513]
[111.00033569 3.36988020]
[110.89418793 -0.57388157]
[111.96162415 -3.96445441]
[113.87601471 -6.49461937]
[116.24280548 -7.99675655]
[120.21490479 -22.46128082]
[124.18699646 -36.92580414]
[128.15910339 -51.39032745]
[132.13119507 -65.85485077]
[124.57367706 -79.47548676]
[128.80799866 -94.08798981]
[141.83976746 -101.20898438]
[145.81187439 -115.67350769]
[142.00515747 -131.02992249]
[152.83650208 -141.25396729]
[156.80860901 -155.71849060]
[160.78070068 -170.18301392]
[156.97398376 -185.53942871]
[167.80534363 -195.76347351]
[171.77743530 -210.22799683]
[175.74952698 -224.69252014]
[179.72161865 -239.15704346]
[166.07528687 -245.46792603]
[153.65390015 -253.93899536]
[142.79631042 -264.33911133]
[133.79873657 -276.38458252]
[126.90662384 -289.74679565]
[122.30801392 -304.06121826]
[120.12834930 -318.93734741]
[120.42709351 -333.96932983]
[123.19609070 -348.74710083]
[128.35981750 -362.86752319]
[135.77737427 -375.94534302]
[145.24644470 -387.62380981]
[156.50866699 -397.58432007]
[169.25682068 -405.55517578]
[183.14312744 -411.31887817]
[197.78875732 -414.71823120]
[212.79415894 -415.66049194]
[227.74996948 -414.11990356]
[242.24819946 -410.13854980]
[255.89332581 -403.82504272]
[268.31307983 -395.35159302]
[279.16867065 -384.94937134]
[288.16390991 -372.90216064]
[295.05346680 -359.53860474]
[299.64932251 -345.22329712]
[301.82611084 -330.34677124]
[301.52447510 -315.31484985]
[298.75262451 -300.53759766]
[293.58618164 -286.41818237]
[286.16610718 -273.34179688]
[276.69479370 -261.66516113]
[265.43063354 -251.70678711]
[252.68095398 -243.73840332]
[238.79353333 -237.97737122]
[224.14724731 -234.58084106]
[209.14167786 -233.64149475]
[194.18615723 -235.18493652]
[190.21405029 -220.72041321]
[186.24195862 -206.25588989]
[182.26986694 -191.79136658]
[186.36068726 -177.46955872]
[175.24522400 -166.21092224]
[171.27313232 -151.74639893]
[167.30102539 -137.28186035]
[171.39186096 -122.96005249]
[160.27639771 -111.70140839]
[156.30429077 -97.23688507]
[163.87168884 -84.45916748]
[160.04946899 -69.73349762]
[146.59571838 -61.88275528]
[142.62362671 -47.41823196]
[138.65151978 -32.95370865]
[134.67942810 -18.48918343]
[130.70733643 -4.02466011]
[127.16765594 10.55171490]
[124.06354523 25.22701836]
[120.95944214 39.90232086]
[130.78388977 48.94236374]
[134.89147949 61.75922012]
[132.10743713 75.03772736]
[123.05432129 85.28758240]
[110.01660919 89.76071930]
[113.96819305 103.17252350]
[104.61084747 113.56154633]
[101.28858948 128.18901062]
[97.96633148 142.81646729]
[94.64407349 157.44392395]
[91.75879669 172.16381836]
[89.31307220 186.96308899]
[86.86734772 201.76235962]
[84.42161560 216.56163025]
[89.80528259 231.43867493]
[80.09635925 242.73408508]
[89.02988434 255.49456787]
[86.33874512 270.46829224]
[74.11852264 278.90640259]
[71.67279053 293.70565796]
[69.22706604 308.50494385]
[70.11988068 323.47836304]
[74.30689240 337.88214111]
[78.49390411 352.28591919]
[82.68091583 366.68969727]
[86.86792755 381.09347534]
[91.05493927 395.49725342]
[95.24195099 409.90103149]
[110.13693237 407.90176392]
[125.16352844 408.14486694]
[139.98603821 410.62496948]
[154.27331543 415.28665161]
[167.70617676 422.02578735]
[179.98454285 430.69177246]
[190.83410645 441.09103394]
[200.01246643 452.99127197]
[207.31457520 466.12658691]
[212.57733154 480.20355225]
[215.68313599 494.90771484]
[216.56260681 509.91052246]
[215.19612122 524.87683105]
[211.61416626 539.47229004]
[205.89678955 553.37078857]
[198.17172241 566.26190186]
[188.61152649 577.85760498]
[177.42979431 587.89886475]
[164.87632751 596.16131592]
[151.23158264 602.46038818]
[136.80036926 606.65539551]
[121.90510559 608.65258789]
[106.87854767 608.40728760]
[92.05638885 605.92504883]
[77.76977539 601.26135254]
[64.33786774 594.52032471]
[52.06073761 585.85260010]
[41.21266556 575.45178223]
[32.03599930 563.55023193]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 181]
[12 180]
[13 179]
[14 178]
[15 177]
[16 176]
[17 175]
[48 174]
[49 173]
[50 172]
[53 169]
[55 167]
[56 166]
[57 165]
[58 164]
[63 163]
[64 162]
[65 161]
[66 160]
[68 158]
[72 153]
[73 152]
[74 151]
[79 150]
[80 149]
[81 148]
[82 147]
[83 146]
[86 143]
[87 142]
[89 140]
[90 139]
[91 138]
[93 136]
[94 135]
[95 134]
[96 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
