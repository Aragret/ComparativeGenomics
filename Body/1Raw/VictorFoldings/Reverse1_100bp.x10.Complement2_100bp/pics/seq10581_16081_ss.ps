%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[184.37335205 621.73291016]
[187.72059631 607.07330322]
[193.49734497 593.19036865]
[201.53736877 580.48339844]
[211.60935974 569.31817627]
[223.42350769 560.01580811]
[236.63990784 552.84399414]
[231.81391907 538.64154053]
[226.98791504 524.43908691]
[222.16191101 510.23663330]
[217.33592224 496.03417969]
[212.50991821 481.83172607]
[207.68392944 467.62927246]
[202.75233459 453.46313477]
[197.71540833 439.33410645]
[192.67849731 425.20507812]
[187.64158630 411.07604980]
[184.62979126 409.24264526]
[182.35638428 405.85934448]
[181.54016113 401.28909302]
[182.71063232 396.20214844]
[178.30963135 381.86230469]
[164.83674622 370.61737061]
[169.10890198 352.70565796]
[164.49488831 338.43292236]
[159.88087463 324.16018677]
[155.26687622 309.88745117]
[150.65286255 295.61471558]
[146.03884888 281.34197998]
[141.42485046 267.06924438]
[130.38258362 264.19964600]
[122.01009369 256.27392578]
[118.46691895 245.17707825]
[120.74347687 233.63072205]
[128.38771057 224.52565002]
[124.20069122 210.12187195]
[120.01367950 195.71809387]
[115.82666779 181.31430054]
[111.63965607 166.91052246]
[107.45265198 152.50674438]
[103.26564026 138.10296631]
[99.07862854 123.69918060]
[94.89161682 109.29539490]
[90.06562042 95.09294128]
[84.61026001 81.12014008]
[79.15489960 67.14734650]
[73.69954681 53.17454910]
[68.24418640 39.20175171]
[59.92249298 51.68170929]
[44.99053192 53.10879135]
[34.45559311 42.43100357]
[36.08364105 27.51961899]
[48.67454147 19.36674881]
[62.94554520 23.98125648]
[58.54454803 9.64140892]
[54.03691864 -4.66527796]
[49.42290878 -18.93801117]
[44.80889893 -33.21074295]
[42.63619232 -18.36893463]
[37.46553040 -4.28830051]
[29.51677322 8.43244171]
[19.12790871 19.25239944]
[6.74067307 27.71150208]
[-7.11821890 33.45006561]
[-21.85948181 36.22407913]
[-36.85630798 35.91559601]
[-51.47102737 32.53773117]
[-65.08221436 26.23411369]
[-77.11111450 17.27277374]
[-87.04624939 6.03475475]
[-94.46517181 -7.00209856]
[-99.05243683 -21.28345108]
[-100.61297607 -36.20205307]
[-99.08044434 -51.12356186]
[-94.51999664 -65.41349792]
[-87.12555695 -78.46425629]
[-77.21154022 -89.72090912]
[-65.19948578 -98.70481110]
[-51.60015488 -105.03396606]
[-36.99180222 -108.43926239]
[-21.99557877 -108.77589417]
[-7.24913454 -106.02955627]
[6.62050581 -100.31702423]
[19.02359772 -91.88118744]
[29.43275642 -81.08074951]
[37.40537643 -68.37495422]
[42.60250473 -54.30388260]
[44.16302872 -69.22248840]
[45.72355270 -84.14109039]
[47.28407669 -99.05969238]
[41.02445984 -113.58993530]
[50.04385376 -125.44319153]
[51.60437775 -140.36180115]
[52.16259003 -155.35140991]
[51.71598434 -170.34475708]
[51.26937485 -185.33810425]
[50.82276917 -200.33145142]
[36.59957886 -205.69515991]
[25.51508522 -216.09719849]
[19.25959206 -229.95133972]
[18.78701591 -245.14492798]
[24.16942406 -259.36105347]
[34.58603668 -270.43185425]
[48.44839478 -276.66912842]
[63.64258957 -277.12170410]
[77.85161591 -271.72061157]
[88.90870667 -261.28942871]
[95.12773132 -247.41888428]
[95.56033325 -232.22410583]
[90.14054108 -218.02218628]
[79.69483948 -206.97883606]
[65.81612396 -200.77806091]
[66.26272583 -185.78471375]
[66.70933533 -170.79136658]
[67.15593719 -155.79801941]
[76.11814880 -167.82626343]
[90.12281799 -173.19926453]
[104.83045197 -170.25213623]
[115.68372345 -159.89808655]
[119.31963348 -145.34541321]
[114.61155701 -131.10343933]
[103.01833344 -121.58518219]
[88.13226318 -119.73998260]
[74.56594086 -126.13959503]
[66.52297974 -138.80126953]
[64.96245575 -123.88266754]
[71.33369446 -110.41950989]
[62.20267868 -97.49917603]
[60.64215851 -82.58056641]
[59.08163452 -67.66196442]
[57.52111053 -52.74335861]
[59.08163452 -37.82475281]
[63.69564438 -23.55202103]
[68.30965424 -9.27928734]
[73.35822296 -3.88172174]
[72.88439178 5.24041080]
[77.28539276 19.58025742]
[82.21698761 33.74639130]
[87.67234039 47.71919250]
[93.12770081 61.69198990]
[98.58306122 75.66478729]
[104.03841400 89.63758087]
[111.03740692 76.37055206]
[125.32629395 71.80682373]
[138.71975708 78.56071472]
[143.54542542 92.76329041]
[137.03890991 106.27866364]
[122.92745972 111.36461639]
[109.29539490 105.10838318]
[113.48240662 119.51216888]
[117.66941833 133.91595459]
[121.85643005 148.31973267]
[126.04344177 162.72351074]
[130.23045349 177.12728882]
[134.41746521 191.53108215]
[138.60447693 205.93486023]
[142.79148865 220.33863831]
[159.73052979 228.82292175]
[164.99859619 246.68797302]
[155.69757080 262.45523071]
[160.31158447 276.72796631]
[164.92559814 291.00070190]
[169.53961182 305.27343750]
[174.15361023 319.54617310]
[178.76762390 333.81890869]
[183.38163757 348.09164429]
[194.48887634 354.64846802]
[198.03805542 366.63125610]
[192.64947510 377.46130371]
[197.05047607 391.80114746]
[201.77061462 406.03912354]
[206.80752563 420.16815186]
[211.84445190 434.29718018]
[216.88136292 448.42623901]
[222.71072388 455.45874023]
[221.88638306 462.80328369]
[226.71237183 477.00573730]
[231.53837585 491.20819092]
[236.36437988 505.41064453]
[241.19036865 519.61309814]
[246.01637268 533.81555176]
[250.84236145 548.01800537]
[265.69210815 545.65295410]
[280.72790527 545.83166504]
[295.51724243 548.54901123]
[309.63452148 553.72692871]
[322.67358398 561.21624756]
[334.25927734 570.80163574]
[344.05828857 582.20727539]
[351.78860474 595.10491943]
[357.22787476 609.12359619]
[360.21957397 623.85986328]
[360.67761230 638.88977051]
[358.58883667 653.78088379]
[354.01333618 668.10473633]
[347.08276367 681.44921875]
[337.99649048 693.43035889]
[327.01599121 703.70349121]
[314.45718384 711.97296143]
[300.68142700 718.00085449]
[286.08502197 721.61383057]
[271.08798218 722.70782471]
[256.12179565 721.25140381]
[241.61706543 717.28649902]
[227.99111938 710.92712402]
[215.63600159 702.35626221]
[204.90719604 691.82061768]
[196.11338806 679.62316895]
[189.50759888 666.11499023]
[185.27989197 651.68463135]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 182]
[8 181]
[9 180]
[10 179]
[11 178]
[12 177]
[13 176]
[14 174]
[15 173]
[16 172]
[17 171]
[21 170]
[22 169]
[24 166]
[25 165]
[26 164]
[27 163]
[28 162]
[29 161]
[30 160]
[35 157]
[36 156]
[37 155]
[38 154]
[39 153]
[40 152]
[41 151]
[42 150]
[43 149]
[44 142]
[45 141]
[46 140]
[47 139]
[48 138]
[54 137]
[55 136]
[56 134]
[57 133]
[58 132]
[87 131]
[88 130]
[89 129]
[90 128]
[92 126]
[93 125]
[94 115]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
