%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[52.24576950 856.07141113]
[37.27122879 857.05645752]
[22.26483345 856.93292236]
[7.30853987 855.70147705]
[-7.51596260 853.36877441]
[-22.12770653 849.94763184]
[-36.44688797 845.45672607]
[-50.39529800 839.92059326]
[-63.89675522 833.36938477]
[-76.87751770 825.83898926]
[-89.26669312 817.37048340]
[-100.99661255 808.01013184]
[-112.00320435 797.80908203]
[-122.22635651 786.82293701]
[-131.61024475 775.11187744]
[-140.10360718 762.73968506]
[-147.66004944 749.77410889]
[-154.23829651 736.28582764]
[-159.80244446 722.34851074]
[-164.32209778 708.03839111]
[-167.77255249 693.43353271]
[-170.13496399 678.61376953]
[-171.39645386 663.65997314]
[-171.55010986 648.65386963]
[-170.59510803 633.67736816]
[-168.53665161 618.81231689]
[-165.38598633 604.13983154]
[-161.16032410 589.74017334]
[-155.88273621 575.69189453]
[-149.58206177 562.07171631]
[-142.29270935 548.95410156]
[-134.05447388 536.41058350]
[-124.91237640 524.50982666]
[-114.91632843 513.31665039]
[-104.12093353 502.89233398]
[-92.58515167 493.29373169]
[-80.37198639 484.57330322]
[-67.54814911 476.77868652]
[-54.18367386 469.95239258]
[-40.35155106 464.13177490]
[-26.12733650 459.34860229]
[-11.58871078 455.62896729]
[3.18491602 452.99322510]
[18.11285591 451.45574951]
[33.11357880 451.02493286]
[48.10514832 451.70315552]
[49.88761520 436.80944824]
[51.67008209 421.91574097]
[53.45254898 407.02200317]
[55.23501205 392.12829590]
[57.01747894 377.23458862]
[50.84739685 363.67803955]
[60.16976166 350.89508057]
[61.95222855 336.00137329]
[48.72684097 343.07873535]
[34.88799667 337.29199219]
[30.63717842 322.90692139]
[39.10792923 310.52764893]
[54.05592728 309.27972412]
[64.46154022 320.08151245]
[67.34681702 305.36160278]
[70.23208618 290.64172363]
[73.11736298 275.92181396]
[76.00263214 261.20193481]
[78.88790894 246.48204041]
[81.55370331 231.72082520]
[83.99942780 216.92155457]
[86.44515228 202.12228394]
[88.89088440 187.32301331]
[90.34030151 172.39320374]
[90.78691101 157.39985657]
[91.23351288 142.40650940]
[91.68012238 127.41315460]
[79.11238861 119.60635376]
[72.11570740 106.57022858]
[72.55621338 91.78171539]
[80.31640625 79.18515015]
[93.32653046 72.14023590]
[93.77313995 57.14688873]
[94.21974182 42.15353775]
[91.34722900 33.48252487]
[94.78626251 26.94074821]
[95.45604706 11.95570946]
[96.12583160 -3.02932954]
[96.79561615 -18.01436806]
[96.57228851 -33.01270676]
[95.45664215 -47.97116089]
[94.34099579 -62.92961121]
[93.22534943 -77.88806915]
[83.97906494 -86.88079071]
[83.35778809 -99.36268616]
[91.14983368 -108.61528778]
[82.03846741 -117.74467468]
[81.60309601 -130.23443604]
[89.53203583 -139.36999512]
[88.86225128 -154.35504150]
[88.19246674 -169.34007263]
[74.00208282 -174.86753845]
[63.29135513 -185.69345093]
[57.91598511 -199.94213867]
[58.80728531 -215.14494324]
[65.81083679 -228.66789246]
[77.71323395 -238.16806030]
[92.45230103 -241.99945068]
[107.47442627 -239.49829102]
[120.17691803 -231.09790039]
[128.35899353 -218.25369263]
[130.60307312 -203.19102478]
[126.52034760 -188.51959229]
[116.81816864 -176.78128052]
[103.17750549 -170.00985718]
[103.84729004 -155.02482605]
[104.51707458 -140.03977966]
[114.74473572 -125.77928162]
[106.12323761 -109.50810242]
[116.56208801 -95.40145111]
[108.18379974 -79.00371552]
[109.29944611 -64.04525757]
[110.41510010 -49.08680725]
[111.53074646 -34.12835312]
[120.53865814 -46.12241745]
[134.84182739 -50.64120483]
[149.10551453 -45.99932098]
[158.00973511 -33.92807388]
[158.23341370 -18.92974281]
[149.69314575 -6.59833193]
[135.57421875 -1.53315210]
[121.14266205 -5.62339115]
[111.78065491 -17.34458351]
[111.11087036 -2.35954428]
[110.44108582 12.62549496]
[109.77130127 27.61053276]
[109.21308899 42.60014343]
[108.76648712 57.59349442]
[108.31987762 72.58684540]
[120.88761139 80.39364624]
[127.88429260 93.42977142]
[127.44378662 108.21828461]
[119.68359375 120.81484985]
[106.67346954 127.85976410]
[106.22686005 142.85311890]
[105.78025818 157.84646606]
[105.33364868 172.83981323]
[114.99591064 161.36633301]
[129.29556274 156.83642578]
[143.80169678 160.65373230]
[154.01943970 171.63543701]
[156.78271484 186.37870789]
[151.23529053 200.31521606]
[139.09608459 209.12655640]
[124.12657166 210.08244324]
[110.96521759 202.88670349]
[103.69015503 189.76873779]
[101.24442291 204.56800842]
[98.79869843 219.36727905]
[96.35297394 234.16654968]
[98.31966400 240.47874451]
[97.00125885 246.00674438]
[93.60779572 249.36732483]
[90.72252655 264.08721924]
[87.83724976 278.80709839]
[84.95198059 293.52697754]
[82.06670380 308.24688721]
[79.18143463 322.96676636]
[76.84594727 337.78384399]
[75.06348419 352.67755127]
[81.10607147 367.29937744]
[71.91119385 379.01702881]
[70.12873077 393.91076660]
[68.34626770 408.80447388]
[66.56379700 423.69818115]
[64.78133392 438.59191895]
[62.99886703 453.48562622]
[77.72709656 456.36425781]
[92.20251465 460.32272339]
[106.34605408 465.33944702]
[120.08047485 471.38702393]
[133.33074951 478.43237305]
[146.02452087 486.43710327]
[158.09246826 495.35742188]
[169.46865845 505.14462280]
[180.09095764 515.74530029]
[189.90138245 527.10144043]
[198.84631348 539.15118408]
[206.87690735 551.82855225]
[213.94931030 565.06445312]
[220.02490234 578.78649902]
[225.07048035 592.91973877]
[229.05850220 607.38708496]
[231.96717834 622.10937500]
[233.78062439 637.00634766]
[234.48893738 651.99652100]
[234.08824158 666.99804688]
[232.58073425 681.92907715]
[229.97463989 696.70794678]
[226.28421021 711.25402832]
[221.52958679 725.48779297]
[215.73672485 739.33154297]
[208.93730164 752.70971680]
[201.16841125 765.54919434]
[192.47251892 777.77984619]
[182.89710999 789.33483887]
[172.49446106 800.15112305]
[161.32141113 810.16961670]
[149.43898010 819.33563232]
[136.91206360 827.59899902]
[123.80908203 834.91467285]
[110.20159912 841.24267578]
[96.16393280 846.54846191]
[81.77275848 850.80297852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 173]
[47 172]
[48 171]
[49 170]
[50 169]
[51 168]
[53 166]
[54 165]
[60 164]
[61 163]
[62 162]
[63 161]
[64 160]
[65 159]
[66 156]
[67 155]
[68 154]
[69 153]
[70 143]
[71 142]
[72 141]
[73 140]
[78 135]
[79 134]
[80 133]
[82 132]
[83 131]
[84 130]
[85 129]
[86 120]
[87 119]
[88 118]
[89 117]
[92 115]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
