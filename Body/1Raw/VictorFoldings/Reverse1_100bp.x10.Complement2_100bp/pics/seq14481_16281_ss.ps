%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACUAACAAUCGCCACACCAGCCCACACAAUAAUAAGACUUAAAACCCCCUCCAAUAUACCCAAAUUAUCAAAAAAAUUAAAUAAAUCCCCCUUACUACxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[207.24298096 262.65084839]
[208.07554626 247.66751099]
[209.97488403 232.78175354]
[212.93133545 218.06942749]
[216.92982483 203.60548401]
[221.94996643 189.46365356]
[227.96620178 175.71600342]
[214.68835449 168.73754883]
[201.41050720 161.75909424]
[188.13265991 154.78063965]
[174.85481262 147.80218506]
[160.75263977 152.45669556]
[147.18760681 145.56869507]
[142.40115356 130.74548340]
[129.12330627 123.76702881]
[115.84545898 116.78857422]
[102.56761169 109.81012726]
[94.53448486 109.14579773]
[89.14517212 102.62764740]
[75.97269440 95.45228577]
[62.80022049 88.27691650]
[46.98019409 88.47012329]
[39.50474548 75.58731079]
[26.33227158 68.41194153]
[18.27171326 81.06912231]
[9.36618519 93.14671326]
[-0.34278843 104.58841705]
[-10.80994129 115.34088135]
[-21.98646927 125.35397339]
[-33.82026291 134.58099365]
[-46.25614548 142.97894287]
[-59.23613739 150.50866699]
[-72.69971466 157.13502502]
[-86.58410645 162.82716370]
[-100.82458496 167.55851746]
[-115.35473633 171.30703735]
[-130.10682678 174.05522156]
[-145.01206970 175.79029846]
[-160.00097656 176.50415039]
[-175.00364685 176.19345093]
[-189.95013428 174.85964966]
[-204.77076721 172.50898743]
[-219.39643860 169.15238953]
[-233.75894165 164.80552673]
[-247.79132080 159.48864746]
[-261.42813110 153.22657776]
[-274.60583496 146.04847717]
[-287.26296997 137.98783875]
[-299.34051514 129.08222961]
[-310.78213501 119.37317657]
[-321.53451538 108.90595245]
[-331.54754639 97.72935486]
[-340.77450562 85.89550018]
[-349.17236328 73.45955658]
[-356.70199585 60.47951889]
[-363.32827759 47.01589584]
[-369.02029419 33.13146210]
[-373.75155640 18.89095879]
[-377.49996948 4.36077976]
[-380.24807739 -10.39132881]
[-381.98306274 -25.29658318]
[-382.69680786 -40.28548813]
[-382.38598633 -55.28816223]
[-381.05209351 -70.23464966]
[-378.70132446 -85.05525970]
[-375.34463501 -99.68090057]
[-370.99768066 -114.04337311]
[-365.68072510 -128.07571411]
[-359.41854858 -141.71250916]
[-352.24035645 -154.89015198]
[-344.17962646 -167.54722595]
[-335.27392578 -179.62469482]
[-325.56481934 -191.06626892]
[-315.09750366 -201.81860352]
[-303.92086792 -211.83154297]
[-292.08694458 -221.05841064]
[-279.65093994 -229.45619202]
[-266.67083740 -236.98573303]
[-253.20718384 -243.61192322]
[-239.32270813 -249.30386353]
[-225.08216858 -254.03501892]
[-210.55197144 -257.78335571]
[-195.79985046 -260.53134155]
[-180.89457703 -262.26620483]
[-165.90567017 -262.97985840]
[-150.90299988 -262.66897583]
[-135.95651245 -261.33496094]
[-121.13592529 -258.98410034]
[-106.51030731 -255.62730408]
[-92.14785767 -251.28024292]
[-78.11554718 -245.96319580]
[-64.47880554 -239.70092773]
[-51.30120468 -232.52265930]
[-38.64419174 -224.46183777]
[-26.56677246 -215.55607605]
[-15.12526608 -205.84686279]
[-4.37301350 -195.37950134]
[5.63985109 -184.20277405]
[14.86664295 -172.36878967]
[23.26434135 -159.93273926]
[30.79379463 -146.95259094]
[37.41989136 -133.48887634]
[43.11174393 -119.60437775]
[47.84281158 -105.36380768]
[51.59103394 -90.83358002]
[54.33893585 -76.08143616]
[56.07370377 -61.17615509]
[56.78725433 -46.18724060]
[56.47625351 -31.18457222]
[55.14215851 -16.23810387]
[52.79118347 -1.41752064]
[49.43429565 13.20807457]
[45.08714294 27.57048988]
[39.76999283 41.60276413]
[33.50763702 55.23946381]
[46.68011475 62.41483307]
[61.55795670 61.70839310]
[69.97558594 75.10443878]
[83.14806366 82.27980804]
[96.32054138 89.45516968]
[109.54606628 96.53227997]
[122.82391357 103.51073456]
[136.10176086 110.48918152]
[149.37960815 117.46763611]
[164.30300903 113.00335693]
[177.66921997 120.26964569]
[181.83326721 134.52433777]
[195.11111450 141.50279236]
[208.38896179 148.48124695]
[221.66680908 155.45970154]
[234.94465637 162.43815613]
[242.85575867 149.68638611]
[251.65641785 137.53147888]
[261.30175781 126.03537750]
[271.74267578 115.25666046]
[282.92593384 105.25025940]
[294.79455566 96.06716156]
[307.28802490 87.75415802]
[320.34274292 80.35362244]
[333.89212036 73.90325165]
[347.86715698 68.43592834]
[362.19662476 63.97950745]
[376.80749512 60.55669785]
[391.62533569 58.18494415]
[406.57461548 56.87632751]
[421.57916260 56.63751984]
[436.56250000 57.46973801]
[451.44830322 59.36874008]
[466.16070557 62.32484818]
[480.62472534 66.32300568]
[494.76666260 71.34282684]
[508.51446533 77.35874176]
[521.79809570 84.34008789]
[534.54980469 92.25128937]
[546.70458984 101.05204010]
[558.20062256 110.69748688]
[568.97930908 121.13848114]
[578.98559570 132.32180786]
[588.16857910 144.19049072]
[596.48150635 156.68405151]
[603.88195801 169.73880005]
[610.33221436 183.28825378]
[615.79943848 197.26332092]
[620.25573730 211.59281921]
[623.67840576 226.20372009]
[626.05004883 241.02157593]
[627.35858154 255.97085571]
[627.59729004 270.97540283]
[626.76495361 285.95874023]
[624.86584473 300.84451294]
[621.90960693 315.55691528]
[617.91131592 330.02090454]
[612.89141846 344.16281128]
[606.87536621 357.91055298]
[599.89392090 371.19412231]
[591.98260498 383.94577026]
[583.18176270 396.10052490]
[573.53625488 407.59646606]
[563.09515381 418.37503052]
[551.91180420 428.38125610]
[540.04302979 437.56417847]
[527.54937744 445.87698364]
[514.49456787 453.27731323]
[500.94509888 459.72747803]
[486.96997070 465.19461060]
[472.64044189 469.65078735]
[458.02951050 473.07339478]
[443.21163940 475.44491577]
[428.26235962 476.75329590]
[413.25781250 476.99188232]
[398.27447510 476.15942383]
[383.38870239 474.26019287]
[368.67636108 471.30386353]
[354.21240234 467.30548096]
[340.07052612 462.28546143]
[326.32281494 456.26931763]
[313.03930664 449.28778076]
[300.28771973 441.37637329]
[288.13302612 432.57543945]
[276.63714600 422.92980957]
[265.85867310 412.48864746]
[255.85252380 401.30517578]
[246.66970825 389.43634033]
[238.35699463 376.94265747]
[230.95675659 363.88778687]
[224.50669861 350.33825684]
[219.03968811 336.36309814]
[214.58360291 322.03353882]
[211.16113281 307.42257690]
[208.78971863 292.60467529]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 131]
[8 130]
[9 129]
[10 128]
[11 127]
[14 124]
[15 123]
[16 122]
[17 121]
[19 120]
[20 119]
[21 118]
[23 116]
[24 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
