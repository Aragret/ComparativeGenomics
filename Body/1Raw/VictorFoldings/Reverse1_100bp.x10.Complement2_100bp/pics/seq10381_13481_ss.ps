%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[131.45991516 474.50714111]
[132.72804260 459.52383423]
[136.51026917 444.97039795]
[142.69779968 431.26556396]
[151.11259460 418.80364990]
[161.51255798 407.94320679]
[173.59843445 398.99673462]
[187.02250671 392.22161865]
[182.62150574 377.88177490]
[178.22052002 363.54193115]
[173.81951904 349.20208740]
[169.41851807 334.86221313]
[165.01751709 320.52236938]
[160.61651611 306.18252563]
[156.21553040 291.84268188]
[151.70790100 277.53601074]
[147.09388733 263.26327515]
[142.47987366 248.99053955]
[128.84104919 237.94746399]
[132.84606934 219.97410583]
[128.02006531 205.77165222]
[123.19406891 191.56919861]
[118.36807251 177.36672974]
[113.54206848 163.16427612]
[102.12137604 153.60305786]
[105.00730896 138.04728699]
[100.18131256 123.84483337]
[95.35531616 109.64237976]
[88.77529144 96.16264343]
[80.54647827 83.62124634]
[76.60129547 81.80754852]
[73.72750092 79.10462189]
[72.07307434 75.95847321]
[71.62595367 72.81734467]
[72.22717285 70.07933807]
[64.75942993 57.07038498]
[57.29169083 44.06143188]
[49.82395172 31.05247879]
[44.30773544 27.40790558]
[41.83183670 22.29254150]
[42.33414459 17.54314995]
[35.25704193 4.31762123]
[28.17993546 -8.90790653]
[21.10283089 -22.13343430]
[7.76981974 -30.65055847]
[8.58699512 -45.52273178]
[1.50988996 -58.74825668]
[-5.56721544 -71.97378540]
[-12.64432049 -85.19931030]
[-26.38535118 -79.16504669]
[-40.55267334 -74.21375275]
[-55.06108475 -70.37522125]
[-69.82332611 -67.67252350]
[-84.75061798 -66.12192535]
[-99.75317383 -65.73274994]
[-114.74078369 -66.50733948]
[-129.62329102 -68.44103241]
[-144.31120300 -71.52219391]
[-158.71618652 -75.73230743]
[-172.75158691 -81.04603577]
[-186.33300781 -87.43143463]
[-199.37876892 -94.85009766]
[-211.81039429 -103.25740051]
[-223.55314636 -112.60278320]
[-234.53637695 -122.83004761]
[-244.69404602 -133.87768555]
[-253.96504211 -145.67924500]
[-262.29364014 -158.16374207]
[-269.62973022 -171.25611877]
[-275.92916870 -184.87760925]
[-281.15411377 -198.94630432]
[-285.27313232 -213.37759399]
[-288.26144409 -228.08468628]
[-290.10107422 -242.97911072]
[-290.78094482 -257.97131348]
[-290.29696655 -272.97113037]
[-288.65209961 -287.88830566]
[-285.85617065 -302.63317871]
[-281.92605591 -317.11706543]
[-276.88534546 -331.25280762]
[-270.76437378 -344.95544434]
[-263.59997559 -358.14251709]
[-255.43518066 -370.73477173]
[-246.31915283 -382.65643311]
[-236.30668640 -393.83584595]
[-225.45799255 -404.20571899]
[-213.83834839 -413.70370483]
[-201.51760864 -422.27270508]
[-188.56987000 -429.86117554]
[-175.07302856 -436.42346191]
[-161.10824585 -441.92007446]
[-146.75950623 -446.31802368]
[-132.11309814 -449.59082031]
[-117.25711823 -451.71875000]
[-102.28090668 -452.68908691]
[-87.27454376 -452.49594116]
[-72.32826996 -451.14047241]
[-57.53198242 -448.63088989]
[-42.97466278 -444.98220825]
[-28.74386406 -440.21643066]
[-14.92517471 -434.36218262]
[-1.60170019 -427.45471191]
[11.14642811 -419.53552246]
[23.24254036 -410.65225220]
[34.61388779 -400.85833740]
[45.19208145 -390.21267700]
[54.91350555 -378.77929688]
[63.71968460 -366.62695312]
[71.55767059 -353.82873535]
[78.38031006 -340.46160889]
[84.14657593 -326.60598755]
[88.82178497 -312.34518433]
[92.37783051 -297.76495361]
[94.79331970 -282.95300293]
[96.05371857 -267.99841309]
[96.15145874 -252.99111938]
[95.08594513 -238.02139282]
[92.86358643 -223.17924500]
[89.49774933 -208.55393982]
[85.00867462 -194.23344421]
[79.42336273 -180.30387878]
[72.77540588 -166.84902954]
[65.10478210 -153.94981384]
[56.45763016 -141.68380737]
[46.88595200 -130.12477112]
[36.44731140 -119.34223175]
[25.20449066 -109.40103912]
[13.22510719 -100.36097717]
[0.58120662 -92.27642059]
[7.65831184 -79.05088806]
[14.73541737 -65.82536316]
[21.81252289 -52.59983444]
[34.63933182 -45.02869034]
[34.32835770 -29.21053886]
[41.40546417 -15.98501110]
[48.48256683 -2.75948405]
[55.55967331 10.46604347]
[62.83290482 23.58473778]
[70.30064392 36.59368896]
[77.76838684 49.60264206]
[85.23612976 62.61159515]
[93.08788300 75.39244080]
[101.31668854 87.93383789]
[100.02674103 72.98940277]
[103.59519958 58.42005157]
[111.64547729 45.76330948]
[123.32800293 36.35488129]
[137.40989685 31.18765831]
[152.40507507 30.80694962]
[166.73103333 35.25293350]
[178.87594604 44.05641174]
[187.55810547 56.28833389]
[191.86128235 70.65783691]
[191.33135986 85.64847565]
[186.02423096 99.67824554]
[176.50000000 111.26655579]
[163.76376343 119.19046783]
[149.15960693 122.61373901]
[134.22875977 121.17511749]
[120.54689026 115.02642059]
[109.55776978 104.81638336]
[114.38377380 119.01883698]
[119.20977020 133.22129822]
[130.97564697 143.79837036]
[127.74452972 158.33828735]
[132.57052612 172.54074097]
[137.39653015 186.74319458]
[142.22251892 200.94564819]
[147.04852295 215.14810181]
[158.25215149 221.53884888]
[161.97933960 233.46745300]
[156.75260925 244.37652588]
[161.36662292 258.64926147]
[165.98062134 272.92199707]
[171.59802246 280.12493896]
[170.55537415 287.44168091]
[174.95637512 301.78152466]
[179.35736084 316.12136841]
[183.75836182 330.46124268]
[188.15936279 344.80108643]
[192.56036377 359.14093018]
[196.96136475 373.48077393]
[201.36235046 387.82061768]
[216.27592468 385.89871216]
[231.29975891 386.52502441]
[246.00160217 389.68154907]
[259.95846558 395.27743530]
[272.76876831 403.15170288]
[284.06393433 413.07778931]
[293.51898193 424.77011108]
[300.86187744 437.89221191]
[305.88134766 452.06658936]
[308.43295288 466.88540649]
[308.44332886 481.92230225]
[305.91210938 496.74459839]
[300.91213989 510.92587280]
[293.58734131 524.05810547]
[284.14837646 535.76342773]
[272.86688232 545.70501709]
[260.06744385 553.59692383]
[246.11828613 559.21203613]
[231.42079163 562.38879395]
[216.39782715 563.03576660]
[201.48164368 561.13439941]
[187.10139465 556.73937988]
[173.67082214 549.97711182]
[161.57637024 541.04223633]
[151.16600037 530.19177246]
[142.73925781 517.73797607]
[136.53858948 504.03906250]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 183]
[9 182]
[10 181]
[11 180]
[12 179]
[13 178]
[14 177]
[15 176]
[16 174]
[17 173]
[18 172]
[20 169]
[21 168]
[22 167]
[23 166]
[24 165]
[26 163]
[27 162]
[28 161]
[29 143]
[30 142]
[35 141]
[36 140]
[37 139]
[38 138]
[41 137]
[42 136]
[43 135]
[44 134]
[46 132]
[47 131]
[48 130]
[49 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
