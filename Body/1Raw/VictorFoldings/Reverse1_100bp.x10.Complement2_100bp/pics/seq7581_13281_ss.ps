%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[150.57225037 603.70050049]
[145.23658752 589.66845703]
[141.30200195 575.18103027]
[138.80641174 560.37768555]
[137.77383423 545.40106201]
[138.21421814 530.39526367]
[140.12330627 515.50494385]
[143.48274231 500.87341309]
[148.26016235 486.64166260]
[154.40954590 472.94671631]
[161.87167358 459.92044067]
[170.57469177 447.68835449]
[180.43475342 436.36819458]
[191.35693359 426.06903076]
[203.23602295 416.89001465]
[215.95762634 408.91958618]
[209.27742004 395.48922729]
[202.59722900 382.05883789]
[195.91703796 368.62847900]
[189.23684692 355.19808960]
[182.55664062 341.76770020]
[179.45068359 356.44262695]
[168.97990417 367.18331909]
[154.38877869 370.66168213]
[140.19853210 365.79992676]
[130.80616760 354.10446167]
[129.12200928 339.19931030]
[135.66790771 325.70297241]
[148.41555786 317.79745483]
[163.41494751 317.93234253]
[176.01853943 326.06604004]
[171.19253540 311.86358643]
[166.36653137 297.66113281]
[161.22457886 283.56997681]
[155.76922607 269.59716797]
[150.31385803 255.62438965]
[144.85850525 241.65158081]
[133.02227783 232.60986328]
[135.21072388 216.94075012]
[129.75537109 202.96794128]
[117.13333893 202.41795349]
[105.61442566 197.11553955]
[96.92463684 187.81632996]
[92.38072205 175.87765503]
[92.69073486 163.06051636]
[97.84394073 151.26986694]
[107.10718536 142.27142334]
[102.07026672 128.14239502]
[97.03335571 114.01336670]
[86.50777435 104.80989838]
[88.83761597 91.02355194]
[83.80070496 76.89452362]
[78.76378632 62.76549149]
[73.72686768 48.63646317]
[71.99098206 63.53567886]
[66.91059875 77.64913940]
[58.75222778 90.23647308]
[47.94384384 100.63738251]
[35.05242920 108.30624390]
[20.75424767 112.84077454]
[5.79934931 114.00310516]
[-9.02776146 111.73224640]
[-22.94928551 106.14733887]
[-35.23492432 97.54135132]
[-45.24020004 86.36573029]
[-52.44025421 73.20673370]
[-56.45738983 58.75465393]
[-57.08087158 43.76761627]
[-54.27799606 29.03181458]
[-48.19579697 15.32025528]
[-39.15332794 3.35222268]
[-27.62494850 -6.24446535]
[-14.21540737 -12.96638584]
[0.37185505 -16.46092033]
[15.37162113 -16.54475212]
[29.99703217 -13.21348476]
[43.48086929 -6.64186811]
[55.11579514 2.82536292]
[64.29146576 14.69157696]
[70.52706146 28.33587265]
[70.97367096 13.34252262]
[71.42027283 -1.65082729]
[71.86688232 -16.64417648]
[62.76475525 -32.65145111]
[72.56329346 -47.21014786]
[72.78662109 -62.20848465]
[62.05902863 -73.50257874]
[62.49917221 -88.70984650]
[73.33247375 -98.86736298]
[73.55580139 -113.86569977]
[73.66747284 -128.86528015]
[73.66747284 -143.86528015]
[73.66747284 -158.86528015]
[73.66747284 -173.86528015]
[73.66747284 -188.86528015]
[59.16995239 -193.10775757]
[46.45567322 -201.26397705]
[36.55532455 -212.67272949]
[30.27148247 -226.40917969]
[28.11355019 -241.35975647]
[30.25646019 -256.31250000]
[36.52650070 -270.05526733]
[46.41538239 -281.47396851]
[59.12145996 -289.64294434]
[73.61470795 -293.89999390]
[88.72023010 -293.89999390]
[103.21347809 -289.64294434]
[115.91955566 -281.47396851]
[125.80844116 -270.05526733]
[132.07847595 -256.31250000]
[134.22138977 -241.35975647]
[132.06346130 -226.40917969]
[125.77961731 -212.67272949]
[115.87926483 -201.26397705]
[103.16498566 -193.10775757]
[88.66747284 -188.86528015]
[88.66747284 -173.86528015]
[88.66747284 -158.86528015]
[88.66747284 -143.86528015]
[88.66747284 -128.86528015]
[91.81097412 -122.17646790]
[88.55413818 -113.64237213]
[88.33081055 -98.64403534]
[98.85688782 -88.16847229]
[98.84405518 -72.95484161]
[87.78495789 -61.98515701]
[87.56163025 -46.98682022]
[95.75905609 -38.09138489]
[95.69574738 -25.59419250]
[86.86022949 -16.19757080]
[86.41362762 -1.20422137]
[85.96701813 13.78912830]
[85.52040863 28.78247833]
[87.85589600 43.59954834]
[92.89281464 57.72857666]
[97.92973328 71.85760498]
[102.96664429 85.98663330]
[113.49222565 95.19010162]
[111.16238403 108.97644806]
[116.19929504 123.10547638]
[121.23621368 137.23451233]
[138.59173584 139.99473572]
[152.08990479 151.10824585]
[158.06945801 167.44375610]
[154.96780396 184.47000122]
[143.72816467 197.51258850]
[149.18353271 211.48538208]
[161.40997314 221.52653503]
[158.83129883 236.19622803]
[164.28666687 250.16902161]
[169.74201965 264.14181519]
[175.19737244 278.11462402]
[179.27375793 281.37500000]
[181.47207642 285.46411133]
[181.79115295 289.52777100]
[180.56900024 292.83511353]
[185.39498901 307.03756714]
[190.22099304 321.24002075]
[195.98701477 335.08752441]
[202.66722107 348.51788330]
[209.34741211 361.94827271]
[216.02760315 375.37866211]
[222.70779419 388.80902100]
[229.38800049 402.23941040]
[243.41969299 396.90289307]
[257.90689087 392.96743774]
[272.71008301 390.47094727]
[287.68667603 389.43746948]
[302.69247437 389.87695312]
[317.58291626 391.78518677]
[332.21463013 395.14373779]
[346.44668579 399.92028809]
[360.14199829 406.06884766]
[373.16870117 413.53021240]
[385.40133667 422.23248291]
[396.72207642 432.09185791]
[407.02191162 443.01342773]
[416.20162964 454.89196777]
[424.17282104 467.61309814]
[430.85873413 481.05426025]
[436.19494629 495.08605957]
[440.13009644 509.57336426]
[442.62628174 524.37658691]
[443.65948486 539.35321045]
[443.21969604 554.35900879]
[441.31118774 569.24938965]
[437.95233154 583.88104248]
[433.17547607 598.11297607]
[427.02664185 611.80822754]
[419.56503296 624.83477783]
[410.86251831 637.06719971]
[401.00289917 648.38775635]
[390.08114624 658.68737793]
[378.20242310 667.86682129]
[365.48114014 675.83776855]
[352.03982544 682.52343750]
[338.00790405 687.85937500]
[323.52053833 691.79425049]
[308.71725464 694.29010010]
[293.74063110 695.32299805]
[278.73486328 694.88293457]
[263.84448242 692.97412109]
[249.21290588 689.61499023]
[234.98104858 684.83782959]
[221.28596497 678.68872070]
[208.25955200 671.22686768]
[196.02726746 662.52410889]
[184.70692444 652.66424561]
[174.40754700 641.74230957]
[165.22830200 629.86340332]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 164]
[17 163]
[18 162]
[19 161]
[20 160]
[21 159]
[31 158]
[32 157]
[33 156]
[34 152]
[35 151]
[36 150]
[37 149]
[39 147]
[40 146]
[47 141]
[48 140]
[49 139]
[51 137]
[52 136]
[53 135]
[54 134]
[80 133]
[81 132]
[82 131]
[83 130]
[85 127]
[86 126]
[89 123]
[90 122]
[91 120]
[92 119]
[93 118]
[94 117]
[95 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
