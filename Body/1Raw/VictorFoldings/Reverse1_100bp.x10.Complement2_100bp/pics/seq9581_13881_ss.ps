%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[98.41630554 587.25079346]
[90.66476440 573.66961670]
[93.50738525 558.29260254]
[105.60196686 548.38024902]
[105.60196686 533.38024902]
[105.60196686 518.38024902]
[105.60196686 503.38021851]
[105.60196686 488.38021851]
[105.60196686 473.38021851]
[105.60196686 458.38021851]
[105.60196686 443.38021851]
[93.21270752 432.00723267]
[92.87562561 414.85491943]
[105.28761292 402.52764893]
[105.06428528 387.52929688]
[89.41329193 382.43609619]
[76.43160248 372.27658081]
[67.69905853 358.26480103]
[64.28601074 342.08496094]
[66.62216949 325.68899536]
[74.44258881 311.06103516]
[86.81757355 299.97729492]
[102.26317596 293.79055786]
[101.59339142 278.80551147]
[100.92360687 263.82046509]
[100.25382233 248.83543396]
[96.81478882 242.29365540]
[99.68730164 233.62263489]
[99.24069214 218.62928772]
[91.12788391 206.13803101]
[98.45087433 192.11360168]
[98.00427246 177.12025452]
[97.22294617 162.14062500]
[96.10729980 147.18215942]
[87.44481659 135.06561279]
[94.13427734 120.72819519]
[93.01863098 105.76974487]
[90.48256683 102.86444092]
[89.23942566 98.85539246]
[89.75344849 94.34509277]
[92.20240784 90.12106323]
[91.75580597 75.12771606]
[91.30919647 60.13436127]
[90.86259460 45.14101410]
[79.64139557 34.33719635]
[79.40206146 19.12544441]
[89.77100372 8.49432755]
[89.32439423 -6.49902248]
[88.87778473 -21.49237251]
[88.43118286 -36.48572159]
[87.98457336 -51.47907257]
[87.53797150 -66.47241974]
[87.09136200 -81.46577454]
[70.83493042 -91.56844330]
[64.00598907 -109.28778839]
[69.19511414 -127.39860535]
[84.13145447 -138.63241577]
[83.01580048 -153.59088135]
[69.55352783 -164.76165771]
[68.35901642 -181.87562561]
[79.68421936 -194.30859375]
[78.34598541 -209.24877930]
[77.00775146 -224.18896484]
[75.66951752 -239.12915039]
[74.33128357 -254.06933594]
[72.99304962 -269.00952148]
[59.84017944 -277.02874756]
[53.99958420 -291.09078979]
[57.51754379 -305.72253418]
[68.84114838 -315.36172485]
[67.50291443 -330.30191040]
[66.16468048 -345.24209595]
[64.82644653 -360.18228149]
[62.49096298 -374.99935913]
[59.16870117 -389.62680054]
[55.84644318 -404.25427246]
[52.52418137 -418.88174438]
[39.43439865 -427.32537842]
[36.27352905 -442.20703125]
[44.40393066 -454.63412476]
[40.85629272 -458.46313477]
[39.28887939 -462.83306885]
[39.57614136 -466.89910889]
[41.27539825 -469.98858643]
[38.60960388 -484.74978638]
[35.94380569 -499.51101685]
[33.27801132 -514.27221680]
[30.61221695 -529.03344727]
[15.57495308 -530.27569580]
[1.37191164 -535.36840820]
[-11.02852058 -543.96441650]
[-20.78086281 -555.47766113]
[-27.22018242 -569.12310791]
[-29.90743637 -583.97033691]
[-28.65940285 -599.00714111]
[-23.56117630 -613.20819092]
[-14.96036148 -625.60528564]
[-3.44337630 -635.35321045]
[10.20453262 -641.78723145]
[25.05282784 -644.46881104]
[40.08912659 -643.21496582]
[54.28823090 -638.11120605]
[66.68202209 -629.50561523]
[76.42546844 -617.98486328]
[82.85424805 -604.33447266]
[85.53003693 -589.48516846]
[84.27039337 -574.44934082]
[79.16120148 -560.25219727]
[70.55081940 -547.86175537]
[59.02630615 -538.12274170]
[45.37343216 -531.69921875]
[48.03923035 -516.93804932]
[50.70502472 -502.17681885]
[53.37081909 -487.41558838]
[56.03661346 -472.65438843]
[59.03139114 -457.95635986]
[71.73219299 -450.26058960]
[75.30980682 -435.47357178]
[67.15164185 -422.20397949]
[70.47389984 -407.57653809]
[73.79616547 -392.94906616]
[77.11842346 -378.32162476]
[83.59962463 -391.84915161]
[96.30926514 -399.81564331]
[111.30913544 -399.75256348]
[123.95135498 -391.67950439]
[130.31858826 -378.09796143]
[128.43789673 -363.21633911]
[118.89202118 -351.64584351]
[104.63884735 -346.97174072]
[90.09489441 -350.64236450]
[79.76663208 -361.52050781]
[81.10486603 -346.58032227]
[82.44309998 -331.64013672]
[83.78133392 -316.69995117]
[96.63775635 -309.22665405]
[102.70006561 -295.45303345]
[99.45154572 -280.57687378]
[87.93323517 -270.34774780]
[89.27146912 -255.40756226]
[90.60970306 -240.46737671]
[91.94793701 -225.52719116]
[93.28617096 -210.58700562]
[94.62440491 -195.64682007]
[105.57089233 -188.84947205]
[110.67990875 -176.80871582]
[107.87997437 -163.83293152]
[97.97425842 -154.70652771]
[99.08990479 -139.74807739]
[109.51534271 -135.77806091]
[117.74389648 -128.16957092]
[122.56079102 -117.99370575]
[123.23552704 -106.70417786]
[119.63240814 -95.92968750]
[112.23565674 -87.23897552]
[102.08471680 -81.91237640]
[102.53131866 -66.91902924]
[102.97792816 -51.92567825]
[103.42453003 -36.93232727]
[103.87113953 -21.93897820]
[104.31774139 -6.94562817]
[104.76435089 8.04772186]
[115.74768066 18.04281998]
[116.41419220 33.24184799]
[105.85594177 44.69440842]
[106.30255127 59.68775558]
[106.74915314 74.68110657]
[107.19576263 89.67445374]
[107.97708130 104.65409088]
[109.09272766 119.61254883]
[117.83500671 132.79902649]
[111.06575012 146.06651306]
[112.18139648 161.02496338]
[115.12178802 165.33787537]
[116.02361298 169.89199829]
[115.13637543 173.87042236]
[112.99761963 176.67364502]
[113.44422150 191.66700745]
[121.58897400 205.23068237]
[114.23404694 218.18267822]
[114.68064880 233.17604065]
[115.23886108 248.16564941]
[115.90864563 263.15069580]
[116.57843018 278.13571167]
[117.24821472 293.12075806]
[130.41145325 296.61691284]
[142.04286194 303.67004395]
[151.20568848 313.70108032]
[157.16513062 325.89157104]
[159.44726562 339.25039673]
[157.87663269 352.69451904]
[152.58982849 365.13665771]
[144.02354431 375.57318115]
[132.87861633 383.16522217]
[120.06262207 387.30596924]
[120.28594971 402.30432129]
[130.96638489 410.51058960]
[134.91279602 423.18481445]
[130.89837646 435.63339233]
[120.60196686 443.38021851]
[120.60196686 458.38021851]
[120.60196686 473.38021851]
[120.60196686 488.38021851]
[120.60196686 503.38021851]
[120.60196686 518.38024902]
[120.60196686 533.38024902]
[120.60196686 548.38024902]
[132.69654846 558.29260254]
[135.53916931 573.66961670]
[127.78762817 587.25079346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 207]
[5 206]
[6 205]
[7 204]
[8 203]
[9 202]
[10 201]
[11 200]
[14 196]
[15 195]
[23 185]
[24 184]
[25 183]
[26 182]
[28 181]
[29 180]
[31 178]
[32 177]
[33 173]
[34 172]
[36 170]
[37 169]
[41 168]
[42 167]
[43 166]
[44 165]
[47 162]
[48 161]
[49 160]
[50 159]
[51 158]
[52 157]
[53 156]
[57 149]
[58 148]
[61 144]
[62 143]
[63 142]
[64 141]
[65 140]
[66 139]
[70 135]
[71 134]
[72 133]
[73 132]
[74 122]
[75 121]
[76 120]
[77 119]
[80 116]
[84 115]
[85 114]
[86 113]
[87 112]
[88 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
