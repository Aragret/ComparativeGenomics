%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[41.95074844 598.84490967]
[49.22884750 612.04693604]
[53.13533020 626.60723877]
[53.44308853 641.67938232]
[50.13422012 656.38702393]
[43.40110397 669.87512207]
[33.63519287 681.35943604]
[21.40426636 690.17242432]
[7.41941071 695.80151367]
[-7.50631142 697.91961670]
[-22.50513840 696.40350342]
[-36.70505524 691.34130859]
[-49.28050232 683.02734375]
[-59.50035858 671.94500732]
[-66.77044678 658.73864746]
[-70.66810608 644.17596436]
[-70.96672821 629.10363770]
[-67.64894104 614.39801025]
[-60.90764999 600.91400146]
[-51.13478088 589.43554688]
[-38.89850998 580.63006592]
[-24.91024399 575.00939941]
[-9.98324108 572.90032959]
[5.01466322 574.42559814]
[10.05157948 560.29656982]
[15.08849525 546.16754150]
[20.12541199 532.03851318]
[25.16232872 517.90948486]
[10.69788265 521.88183594]
[-1.51558971 513.17370605]
[-2.47477126 498.20443726]
[8.52741051 488.00875854]
[23.38055611 490.10256958]
[31.13531685 502.94073486]
[37.20915222 489.22546387]
[35.28809738 474.45526123]
[47.95070267 464.97006226]
[54.02453613 451.25482178]
[52.10348511 436.48461914]
[64.76609039 426.99942017]
[70.83992767 413.28414917]
[76.91375732 399.56887817]
[82.98759460 385.85360718]
[89.06142426 372.13833618]
[95.13526154 358.42306519]
[98.02053070 343.70318604]
[97.57392883 328.70983887]
[97.12731934 313.71649170]
[93.78606415 307.12423706]
[96.78735352 298.49694824]
[96.56402588 283.49862671]
[96.34069824 268.50027466]
[96.11737061 253.50193787]
[80.99715424 250.11882019]
[67.11471558 243.21849060]
[55.27540970 233.19657898]
[46.16720963 220.62998962]
[40.32065964 206.24362183]
[38.07803345 190.86860657]
[39.57324982 175.39422607]
[44.72391891 160.71655273]
[53.23585129 147.68650818]
[64.61987305 137.06056213]
[78.21991730 129.45677185]
[93.25084686 125.31889343]
[92.80423737 110.32554626]
[92.02291870 95.34590912]
[90.90727234 80.38745117]
[89.79161835 65.42900085]
[86.39093781 59.75917816]
[86.36761475 54.07617569]
[88.87221527 50.00973129]
[88.20243073 35.02468872]
[87.53264618 20.03965187]
[78.55821228 10.77561855]
[78.30884552 -1.71924317]
[86.37292480 -10.73574066]
[85.92631531 -25.72908974]
[77.78156281 -39.29277802]
[85.13649750 -52.24477386]
[84.68988800 -67.23812103]
[76.54513550 -80.80181122]
[83.90007019 -93.75380707]
[83.45346069 -108.74715424]
[83.00685883 -123.74050903]
[74.86210632 -137.30419922]
[82.21703339 -150.25619507]
[81.77043152 -165.24954224]
[70.54923248 -176.05335999]
[70.30989838 -191.26510620]
[80.67884064 -201.89622498]
[80.23223114 -216.88957214]
[79.78562164 -231.88291931]
[65.09900665 -235.34205627]
[51.80856323 -242.48535156]
[40.82047272 -252.82575989]
[32.88391113 -265.65829468]
[28.54001427 -280.10794067]
[28.08494949 -295.18957520]
[31.54974747 -309.87484741]
[38.69817352 -323.16253662]
[49.04283142 -334.14663696]
[61.87841034 -342.07824707]
[76.32975769 -346.41656494]
[91.41155243 -346.86581421]
[106.09549713 -343.39532471]
[119.38041687 -336.24179077]
[130.36051941 -325.89288330]
[138.28717041 -313.05422974]
[142.61990356 -298.60122681]
[143.06332397 -283.51925659]
[139.58718872 -268.83663940]
[132.42849731 -255.55448914]
[122.07536316 -244.57838440]
[109.23366547 -236.65669250]
[94.77897644 -232.32952881]
[95.22557831 -217.33618164]
[95.67218781 -202.34283447]
[106.65551758 -192.34773254]
[107.32202911 -177.14871216]
[96.76377869 -165.69615173]
[97.21038818 -150.70280457]
[105.32319641 -138.21153259]
[98.00020599 -124.18711090]
[98.44681549 -109.19376373]
[98.89341736 -94.20041656]
[107.00622559 -81.70915222]
[99.68323517 -67.68473053]
[100.12984467 -52.69137955]
[108.24265289 -40.20011902]
[100.91966248 -26.17569542]
[101.36627197 -11.18234634]
[111.38047791 3.22884941]
[102.51768494 19.36986732]
[103.18746948 34.35490417]
[103.85725403 49.33994293]
[104.75007629 64.31334686]
[105.86572266 79.27180481]
[106.98136902 94.23025513]
[109.51743317 97.13555908]
[110.76057434 101.14460754]
[110.24655151 105.65490723]
[107.79759216 109.87893677]
[108.24419403 124.87228394]
[122.49543762 127.77492523]
[135.73358154 133.77958679]
[147.29322815 142.58078003]
[156.59411621 153.73251343]
[163.17036438 166.67091370]
[166.69371033 180.74278259]
[166.98992920 195.23851013]
[164.04747009 209.42784119]
[158.01779175 222.59678650]
[149.20768738 234.08338928]
[138.06356812 243.31112671]
[125.14890289 249.81777954]
[111.11571503 253.27861023]
[111.33904266 268.27694702]
[111.56237030 283.27529907]
[111.78569794 298.27362061]
[112.12067413 313.26986694]
[112.56727600 328.26324463]
[113.01388550 343.25659180]
[119.27163696 329.62423706]
[128.03593445 317.45104980]
[138.97911072 307.19204712]
[151.69206238 299.23083496]
[165.69949341 293.86502075]
[180.47772217 291.29519653]
[195.47425842 291.61746216]
[210.12844849 294.81976318]
[223.89242554 300.78237915]
[236.25163269 309.28237915]
[246.74398804 320.00201416]
[254.97724915 332.54049683]
[260.64358521 346.42907715]
[263.53118896 361.14849854]
[263.53207397 376.14849854]
[260.64624023 390.86828613]
[254.98152161 404.75753784]
[246.74975586 417.29696655]
[236.25866699 428.01785278]
[223.90046692 436.51931763]
[210.13719177 442.48355103]
[195.48338318 445.68759155]
[180.48687744 446.01162720]
[165.70834351 443.44357300]
[151.70028687 438.07940674]
[138.98638916 430.11968994]
[128.04199219 419.86199951]
[119.27626038 407.68981934]
[113.01689148 394.05822754]
[109.49790192 379.47686768]
[108.85052490 364.49691772]
[102.77669525 378.21218872]
[96.70285797 391.92745972]
[90.62902832 405.64270020]
[84.55519104 419.35797119]
[78.48135376 433.07324219]
[79.96797180 448.82446289]
[67.73980713 457.32864380]
[61.66596985 471.04391479]
[63.15258408 486.79510498]
[50.92441559 495.29931641]
[44.85058212 509.01458740]
[39.29135895 522.94635010]
[34.25444031 537.07537842]
[29.21752548 551.20440674]
[24.18060875 565.33343506]
[19.14369202 579.46246338]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 210]
[25 209]
[26 208]
[27 207]
[28 206]
[34 205]
[35 204]
[37 202]
[38 201]
[40 199]
[41 198]
[42 197]
[43 196]
[44 195]
[45 194]
[46 163]
[47 162]
[48 161]
[50 160]
[51 159]
[52 158]
[53 157]
[65 144]
[66 143]
[67 139]
[68 138]
[69 137]
[72 136]
[73 135]
[74 134]
[77 132]
[78 131]
[80 129]
[81 128]
[83 126]
[84 125]
[85 124]
[87 122]
[88 121]
[91 118]
[92 117]
[93 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
