%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[187.63815308 214.61018372]
[196.84777832 202.75207520]
[186.04562378 192.34469604]
[175.24346924 181.93733215]
[164.44131470 171.52995300]
[153.63916016 161.12258911]
[139.10536194 157.86405945]
[134.53558350 142.71717834]
[123.65625000 132.39051819]
[112.70034027 122.14511871]
[101.74443054 111.89972687]
[90.63719177 101.81858826]
[79.38109589 91.90393829]
[68.12500000 81.98928833]
[56.29873276 72.76219177]
[43.94422531 64.25536346]
[31.58971596 55.74853516]
[19.23520660 47.24170685]
[2.09295249 50.72917938]
[-11.99050713 40.93270111]
[-14.57917213 24.31531143]
[-27.05896568 15.99336815]
[-39.53876114 7.67142439]
[-52.08016205 -0.55738366]
[-64.68247223 -8.69259930]
[-77.28478241 -16.82781601]
[-89.88709259 -24.96303177]
[-98.87581635 -12.94706154]
[-108.67212677 -1.57986879]
[-119.22932434 9.08437824]
[-130.49711609 18.99485779]
[-142.42179871 28.10434151]
[-154.94653320 36.36941910]
[-168.01165771 43.75070572]
[-181.55488586 50.21302032]
[-195.51168823 55.72557068]
[-209.81556702 60.26208496]
[-224.39833069 63.80094528]
[-239.19050598 66.32528687]
[-254.12158203 67.82308197]
[-269.12042236 68.28718567]
[-284.11553955 67.71540070]
[-299.03549194 66.11043549]
[-313.80917358 63.47994995]
[-328.36614990 59.83647156]
[-342.63708496 55.19737244]
[-356.55395508 49.58475113]
[-370.05041504 43.02536011]
[-383.06219482 35.55045700]
[-395.52728271 27.19566154]
[-407.38626099 18.00078964]
[-418.58258057 8.00966167]
[-429.06295776 -2.73011279]
[-438.77737427 -14.16735172]
[-447.67959595 -26.24755287]
[-455.72717285 -38.91314316]
[-462.88174438 -52.10377121]
[-469.10925293 -65.75657654]
[-474.37997437 -79.80648804]
[-478.66882324 -94.18656158]
[-481.95532227 -108.82826233]
[-484.22387695 -123.66181946]
[-485.46362305 -138.61654663]
[-485.66867065 -153.62115479]
[-484.83801270 -168.60417175]
[-482.97567749 -183.49418640]
[-480.09045410 -198.22023010]
[-476.19616699 -212.71212769]
[-471.31134033 -226.90081787]
[-465.45922852 -240.71868896]
[-458.66778564 -254.09989929]
[-450.96929932 -266.98065186]
[-442.40051270 -279.29962158]
[-433.00222778 -290.99804688]
[-422.81927490 -302.02017212]
[-411.90011597 -312.31353760]
[-400.29684448 -321.82901001]
[-388.06472778 -330.52130127]
[-375.26205444 -338.34896851]
[-361.94985962 -345.27471924]
[-348.19155884 -351.26553345]
[-334.05270386 -356.29287720]
[-319.60073853 -360.33276367]
[-304.90444946 -363.36596680]
[-290.03393555 -365.37802124]
[-275.06002808 -366.35934448]
[-260.05410767 -366.30526733]
[-245.08767700 -365.21603394]
[-230.23205566 -363.09683228]
[-215.55802917 -359.95779419]
[-201.13554382 -355.81384277]
[-187.03330994 -350.68472290]
[-173.31854248 -344.59490967]
[-160.05661011 -337.57339478]
[-147.31069946 -329.65362549]
[-135.14154053 -320.87341309]
[-123.60715485 -311.27453613]
[-112.76248932 -300.90274048]
[-102.65922546 -289.80749512]
[-93.34551239 -278.04162598]
[-84.86573792 -265.66122437]
[-77.26030731 -252.72531128]
[-70.56546783 -239.29550171]
[-64.81312561 -225.43580627]
[-60.03068542 -211.21226501]
[-56.24094391 -196.69267273]
[-53.46195984 -181.94622803]
[-51.70697784 -167.04318237]
[-50.98435974 -152.05456543]
[-51.29755020 -137.05181885]
[-52.64505768 -122.10641479]
[-55.02045441 -107.28959656]
[-58.41242981 -92.67196655]
[-62.80480957 -78.32318115]
[-68.17667389 -64.31162262]
[-74.50241089 -50.70405960]
[-81.75187683 -37.56534195]
[-69.14956665 -29.43012619]
[-56.54725647 -21.29491043]
[-43.94494629 -13.15969563]
[-36.62044144 -12.17305851]
[-31.21681595 -4.80836964]
[-18.73702240 3.51357436]
[-6.25722885 11.83551788]
[5.90044403 7.56697083]
[18.48465729 11.13343716]
[26.83999443 21.44841576]
[27.74203300 34.88719940]
[40.09654236 43.39402771]
[52.45104980 51.90085220]
[64.80555725 60.40768051]
[61.10637283 45.87096786]
[66.55082703 31.89391899]
[79.10827637 23.68962669]
[94.09510803 24.31809044]
[105.92160034 33.54490662]
[110.17675781 47.92870331]
[105.27352142 62.10467911]
[93.04067230 70.78554535]
[78.03965759 70.73319244]
[89.29575348 80.64784241]
[100.55184937 90.56249237]
[105.72590637 91.42452240]
[110.04866791 95.12412262]
[111.98982239 100.94381714]
[122.94573212 111.18920898]
[133.90164185 121.43460083]
[142.30708313 125.01039124]
[144.94294739 131.91502380]
[160.24938965 135.91795349]
[164.04652405 150.32041931]
[174.84867859 160.72779846]
[185.65084839 171.13517761]
[196.45300293 181.54254150]
[207.25515747 191.94992065]
[218.76232910 182.30537415]
[231.22947693 173.93864441]
[244.51533508 166.94448853]
[258.46936035 161.40219116]
[272.93347168 157.37454224]
[287.74374390 154.90718079]
[302.73236084 154.02806091]
[317.72952271 154.74713135]
[332.56530762 157.05625916]
[347.07156372 160.92927551]
[361.08398438 166.32229614]
[374.44375610 173.17420959]
[386.99948120 181.40737915]
[398.60897827 190.92854309]
[409.14059448 201.62977600]
[418.47509766 213.38984680]
[426.50665283 226.07551575]
[433.14428711 239.54302979]
[438.31280518 253.63978577]
[441.95361328 268.20608521]
[444.02545166 283.07684326]
[444.50488281 298.08358765]
[443.38644409 313.05624390]
[440.68280029 327.82522583]
[436.42462158 342.22314453]
[430.66012573 356.08685303]
[423.45465088 369.25930786]
[414.88983154 381.59121704]
[405.06271362 392.94287109]
[394.08465576 403.18560791]
[382.08001709 412.20343018]
[369.18484497 419.89410400]
[355.54525757 426.17053223]
[341.31576538 430.96154785]
[326.65762329 434.21292114]
[311.73693848 435.88778687]
[296.72274780 435.96716309]
[281.78518677 434.45016479]
[267.09350586 431.35394287]
[252.81417847 426.71362305]
[239.10897827 420.58175659]
[226.13322449 413.02783203]
[214.03392029 404.13745117]
[202.94816589 394.01135254]
[193.00157166 382.76425171]
[184.30683899 370.52359009]
[176.96249390 357.42803955]
[171.05175781 343.62603760]
[166.64158630 329.27395630]
[163.78196716 314.53439331]
[162.50527954 299.57437134]
[162.82600403 284.56341553]
[164.74052429 269.67156982]
[168.22711182 255.06761169]
[173.24627686 240.91699219]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 155]
[3 154]
[4 153]
[5 152]
[6 151]
[8 149]
[9 147]
[10 146]
[11 145]
[12 142]
[13 141]
[14 140]
[15 131]
[16 130]
[17 129]
[18 128]
[21 124]
[22 123]
[23 122]
[24 120]
[25 119]
[26 118]
[27 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
