%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[43.11303329 689.05938721]
[29.95672035 696.28973389]
[16.15505028 702.19573975]
[1.84094524 706.72045898]
[-12.84773827 709.82037354]
[-27.76953697 711.46557617]
[-42.78074265 711.64025879]
[-57.73678589 710.34271240]
[-72.49362183 707.58544922]
[-86.90914154 703.39501953]
[-100.84450531 697.81182861]
[-114.16550446 690.88952637]
[-126.74385071 682.69488525]
[-138.45840454 673.30682373]
[-149.19633484 662.81567383]
[-158.85423279 651.32257080]
[-167.33909607 638.93817139]
[-174.56919861 625.78173828]
[-180.47491455 611.97991943]
[-184.99935913 597.66571045]
[-188.09895325 582.97698975]
[-189.74386597 568.05517578]
[-189.91824341 553.04394531]
[-188.62040710 538.08795166]
[-185.86285400 523.33111572]
[-181.67214966 508.91571045]
[-176.08863831 494.98043823]
[-169.16610718 481.65960693]
[-160.97122192 469.08142090]
[-151.58290100 457.36703491]
[-141.09156799 446.62933350]
[-129.59825134 436.97164917]
[-117.21366119 428.48703003]
[-104.05706024 421.25720215]
[-90.25515747 415.35177612]
[-75.94087219 410.82760620]
[-61.25205994 407.72830200]
[-46.33019638 406.08367920]
[-31.31898499 405.90960693]
[-16.36299515 407.20773315]
[-1.60626531 409.96560669]
[2.58074594 395.56179810]
[6.76775742 381.15802002]
[10.84742355 366.72348022]
[14.81952000 352.25894165]
[13.55947781 344.97650146]
[18.95992851 337.60949707]
[23.14694023 323.20568848]
[27.33395195 308.80191040]
[25.96532822 305.55242920]
[26.10263252 301.47857666]
[28.11616707 297.29541016]
[32.04290771 293.85623169]
[36.86890411 279.65377808]
[41.69490051 265.45132446]
[46.52090073 251.24888611]
[51.34689713 237.04641724]
[56.17289352 222.84396362]
[60.99889374 208.64151001]
[65.50652313 194.33482361]
[69.69353485 179.93104553]
[73.88054657 165.52726746]
[78.06755066 151.12347412]
[82.14722443 136.68891907]
[86.11931610 122.22440338]
[90.09141541 107.75988007]
[93.73950195 93.21025848]
[97.06175995 78.58279419]
[99.28688049 63.74875259]
[100.40252686 48.79030228]
[101.51817322 33.83184814]
[102.63382721 18.87339401]
[103.74947357 3.91494060]
[104.53079224 -11.06469631]
[104.97740173 -26.05804634]
[105.42400360 -41.05139542]
[98.10102081 -55.07582092]
[106.21382904 -67.56707764]
[106.66043091 -82.56043243]
[106.88375854 -97.55876923]
[106.88375854 -112.55876923]
[106.88375854 -127.55876923]
[94.49878693 -136.71946716]
[89.93603516 -151.24650574]
[94.74534607 -165.50604248]
[106.88375854 -174.09655762]
[106.88375854 -189.09655762]
[106.88375854 -204.09655762]
[106.88375854 -219.09655762]
[106.88375854 -234.09655762]
[106.88375854 -249.09655762]
[97.30907440 -264.82571411]
[106.66979980 -279.66970825]
[106.44647217 -294.66806030]
[106.22314453 -309.66638184]
[91.70960999 -313.89114380]
[79.08705902 -322.20755005]
[69.47787476 -333.87609863]
[63.73651123 -347.85925293]
[62.37347794 -362.91360474]
[65.50997925 -377.70053101]
[72.86711121 -390.90524292]
[83.79069519 -401.35351562]
[97.30941010 -408.11636353]
[112.22116852 -410.59237671]
[127.20004272 -408.56143188]
[140.91412354 -402.20410156]
[152.14393616 -392.08569336]
[159.89097595 -379.10589600]
[163.46633911 -364.41888428]
[162.55213928 -349.33062744]
[157.22964478 -335.18273926]
[147.97213745 -323.23327637]
[135.60279846 -314.54473877]
[121.22148132 -309.88970947]
[121.44480896 -294.89138794]
[121.66813660 -279.89303589]
[130.12678528 -271.24560547]
[130.43559265 -258.75207520]
[121.88375854 -249.09655762]
[121.88375854 -234.09655762]
[121.88375854 -219.09655762]
[121.88375854 -204.09655762]
[121.88375854 -189.09655762]
[121.88375854 -174.09655762]
[134.02218628 -165.50604248]
[138.83148193 -151.24650574]
[134.26873779 -136.71946716]
[121.88375854 -127.55876923]
[121.88375854 -112.55876923]
[121.88375854 -97.55876923]
[124.56744385 -93.60821533]
[124.79790497 -87.92984009]
[121.65378571 -82.11382294]
[121.20717621 -67.12047577]
[128.56210327 -54.16847610]
[120.41735840 -40.60478973]
[119.97074890 -25.61144066]
[119.52414703 -10.61809063]
[121.66289520 -7.81486464]
[122.55014038 -3.83644176]
[121.64831543 0.71767807]
[118.70792389 5.03058910]
[117.59227753 19.98904228]
[116.47663116 34.94749451]
[115.36097717 49.90594864]
[114.24533081 64.86440277]
[123.97098541 53.44461060]
[138.07011414 48.32460022]
[152.85723877 50.84272003]
[164.46704102 60.34074783]
[169.86474609 74.33592224]
[167.63940430 89.16992950]
[158.37271118 100.96520233]
[144.48696899 106.63848877]
[129.61187744 104.70679474]
[117.63573456 95.67507172]
[111.68922424 81.90505981]
[108.36695862 96.53251648]
[109.93899536 100.05403137]
[109.95117188 104.25138092]
[108.13645172 108.41236877]
[104.55593872 111.73197174]
[100.58383942 126.19649506]
[96.61174774 140.66102600]
[97.35696411 149.76499939]
[92.47133636 155.31048584]
[88.28432465 169.71427917]
[84.09731293 184.11805725]
[79.91030121 198.52183533]
[81.15637207 203.59080505]
[80.40828705 208.17268372]
[78.18551636 211.58946228]
[75.20134735 213.46751404]
[70.37535095 227.66996765]
[65.54935455 241.87242126]
[60.72335434 256.07489014]
[55.89735794 270.27734375]
[51.07135773 284.47979736]
[46.24536133 298.68225098]
[41.73773193 312.98892212]
[37.55072021 327.39270020]
[33.36371231 341.79650879]
[29.28404427 356.23104858]
[25.31194878 370.69555664]
[26.05716705 379.79956055]
[21.17153931 385.34503174]
[16.98452759 399.74880981]
[12.79751682 414.15261841]
[26.73310280 419.73529053]
[40.05437851 426.65701294]
[52.63304901 434.85113525]
[64.34797668 444.23876953]
[75.08632660 454.72943115]
[84.74469757 466.22216797]
[93.23004913 478.60626221]
[100.46067810 491.76242065]
[106.36694336 505.56396484]
[110.89196014 519.87799072]
[113.99214935 534.56658936]
[115.63765717 549.48840332]
[115.81263733 564.49957275]
[114.51539612 579.45562744]
[111.75843048 594.21252441]
[107.56829834 608.62817383]
[101.98534393 622.56359863]
[95.06334686 635.88476562]
[86.86895752 648.46325684]
[77.48110962 660.17797852]
[66.99021149 670.91613770]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 189]
[42 188]
[43 187]
[44 185]
[45 184]
[47 183]
[48 182]
[49 181]
[53 180]
[54 179]
[55 178]
[56 177]
[57 176]
[58 175]
[59 174]
[60 170]
[61 169]
[62 168]
[63 167]
[64 165]
[65 164]
[66 163]
[67 159]
[68 158]
[69 147]
[70 146]
[71 145]
[72 144]
[73 143]
[74 139]
[75 138]
[76 137]
[78 135]
[79 134]
[80 131]
[81 130]
[82 129]
[86 125]
[87 124]
[88 123]
[89 122]
[90 121]
[91 120]
[93 117]
[94 116]
[95 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
