%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[146.96670532 514.96917725]
[156.85108948 503.47680664]
[170.07151794 496.06088257]
[167.62579346 481.26159668]
[165.18006897 466.46234131]
[162.73434448 451.66305542]
[160.28862000 436.86380005]
[150.57969666 425.56838989]
[155.96334839 410.69134521]
[153.51762390 395.89205933]
[151.07189941 381.09280396]
[138.85166931 372.65469360]
[136.16053772 357.68096924]
[145.09405518 344.92047119]
[142.64833069 330.12121582]
[140.20260620 315.32192993]
[137.75688171 300.52267456]
[128.04795837 289.22726440]
[133.43162537 274.35021973]
[130.98588562 259.55093384]
[128.54016113 244.75166321]
[126.09443665 229.95239258]
[123.64871216 215.15312195]
[121.20298004 200.35385132]
[117.88072205 185.72639465]
[113.69371033 171.32261658]
[109.50669861 156.91882324]
[105.21257782 142.54661560]
[100.81157684 128.20677185]
[96.41058350 113.86692047]
[86.30645752 104.20264435]
[89.24957275 90.53408051]
[84.84857178 76.19422913]
[80.44757843 61.85438538]
[76.04657745 47.51453781]
[64.60083008 36.59183502]
[68.26342773 22.15456963]
[61.48343658 8.77429676]
[52.52273941 -3.25508094]
[43.56204605 -15.28445816]
[34.60134888 -27.31383705]
[25.64065361 -39.34321213]
[16.67995644 -51.37259293]
[7.71926117 -63.40196991]
[-1.33073902 -75.36430359]
[-10.46954155 -87.25894165]
[-19.69664001 -99.08520508]
[-29.01152229 -110.84246063]
[-38.41367340 -122.53004456]
[-47.90257263 -134.14730835]
[-57.39147186 -145.76457214]
[-66.88037109 -157.38183594]
[-79.40852356 -149.10920715]
[-92.70933533 -142.14649963]
[-106.64632416 -136.56513977]
[-121.07646179 -132.42243958]
[-135.85168457 -129.76087952]
[-150.82035828 -128.60777283]
[-165.82890320 -128.97497559]
[-180.72328186 -130.85868835]
[-195.35066223 -134.23960876]
[-209.56095886 -139.08302307]
[-223.20832825 -145.33924866]
[-236.15274048 -152.94406128]
[-248.26135254 -161.81944275]
[-259.40991211 -171.87431335]
[-269.48403931 -183.00549316]
[-278.38034058 -195.09875488]
[-286.00750732 -208.03001404]
[-292.28729248 -221.66654968]
[-297.15527344 -235.86845398]
[-300.56146240 -250.48997498]
[-302.47088623 -265.38107300]
[-302.86401367 -280.38894653]
[-301.73678589 -295.35961914]
[-299.10076904 -310.13940430]
[-294.98300171 -324.57669067]
[-289.42575073 -338.52328491]
[-282.48602295 -351.83612061]
[-274.23504639 -364.37854004]
[-264.75750732 -376.02188110]
[-254.15063477 -386.64660645]
[-242.52328491 -396.14376831]
[-229.99476624 -404.41583252]
[-216.69364929 -411.37796021]
[-202.75640869 -416.95870972]
[-188.32608032 -421.10076904]
[-173.55075073 -423.76168823]
[-158.58201599 -424.91412354]
[-143.57350159 -424.54626465]
[-128.67919922 -422.66189575]
[-114.05196381 -419.28033447]
[-99.84188843 -414.43627930]
[-86.19479370 -408.17947388]
[-73.25071716 -400.57406616]
[-61.14249039 -391.69815063]
[-49.99436569 -381.64279175]
[-39.92073441 -370.51116943]
[-31.02497673 -358.41751099]
[-23.39837074 -345.48593140]
[-17.11918068 -331.84912109]
[-12.25184250 -317.64700317]
[-8.84630013 -303.02532959]
[-6.93750238 -288.13415527]
[-6.54503632 -273.12625122]
[-7.67292833 -258.15563965]
[-10.30960560 -243.37597656]
[-14.42800999 -228.93887329]
[-19.98588181 -214.99250793]
[-26.92618561 -201.67999268]
[-35.17770386 -189.13792419]
[-44.65576553 -177.49501038]
[-55.26310349 -166.87072754]
[-45.77420807 -155.25346375]
[-36.28530884 -143.63619995]
[-26.79640961 -132.01893616]
[-20.13052177 -128.82711792]
[-17.25427055 -120.15734100]
[-7.93938828 -108.40009308]
[-1.32176054 -105.10937500]
[1.42509151 -96.39774323]
[10.56389427 -84.50310516]
[17.13179398 -81.11423492]
[19.74863815 -72.36266327]
[28.70933533 -60.33328629]
[37.67003250 -48.30390930]
[46.63072586 -36.27453232]
[55.59142303 -24.24515533]
[64.55211639 -12.21577644]
[73.51281738 -0.18639919]
[70.84953308 -14.94806957]
[71.89002228 -29.91193962]
[76.57066345 -44.16296005]
[84.60523224 -56.82967758]
[95.50240326 -67.13751984]
[108.59582520 -74.45615387]
[123.08481598 -78.33804321]
[138.08337402 -78.54580688]
[152.67433167 -75.06674957]
[165.96545410 -68.11360931]
[177.14396667 -58.11156845]
[185.52632141 -45.67226791]
[190.59991455 -31.55636597]
[192.05450439 -16.62705994]
[189.80113220 -1.79728198]
[183.97760010 12.02612209]
[174.94001770 23.99784660]
[163.24104309 33.38581467]
[149.59606934 39.61594772]
[134.83947754 42.30727005]
[119.87366486 41.29521179]
[105.61377716 36.64165497]
[92.93181610 28.63116837]
[82.60327911 17.75357246]
[93.73423767 27.65059090]
[90.38642120 43.11353683]
[94.78742218 57.45338440]
[99.18842316 71.79323578]
[103.58941650 86.13307953]
[113.69354248 95.79735565]
[110.75042725 109.46591949]
[115.15142822 123.80577087]
[119.55242157 138.14561462]
[125.06195831 145.43141174]
[123.91048431 152.73181152]
[128.09748840 167.13560486]
[132.28450012 181.53938293]
[138.61537170 167.94084167]
[151.67379761 160.55996704]
[166.58932495 162.14962769]
[177.79882812 172.11692810]
[181.12142944 186.74430847]
[175.31790161 200.57612610]
[162.55279541 208.45343018]
[147.58718872 207.43821716]
[136.00225830 197.90812683]
[138.44798279 212.70739746]
[140.89370728 227.50666809]
[143.33943176 242.30593872]
[145.78515625 257.10519409]
[148.23089600 271.90447998]
[158.11474609 284.25842285]
[152.55615234 298.07693481]
[155.00187683 312.87619019]
[157.44760132 327.67547607]
[159.89332581 342.47473145]
[172.45733643 351.68255615]
[174.72682190 366.72595215]
[165.87117004 378.64706421]
[168.31689453 393.44635010]
[170.76261902 408.24560547]
[180.64648438 420.59954834]
[175.08789062 434.41806030]
[177.53361511 449.21734619]
[179.97933960 464.01660156]
[182.42506409 478.81588745]
[184.87078857 493.61514282]
[199.77424622 496.38333130]
[212.83056641 504.08453369]
[222.46313477 515.78875732]
[227.50875854 530.08276367]
[227.35818481 545.24035645]
[222.02957153 559.43127441]
[212.16636658 570.94183350]
[198.95964050 578.38208008]
[184.00411987 580.85363770]
[169.10578918 578.05798340]
[156.06369019 570.33276367]
[146.45271301 558.61077881]
[141.43342590 544.30755615]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 197]
[4 196]
[5 195]
[6 194]
[7 193]
[9 191]
[10 190]
[11 189]
[14 186]
[15 185]
[16 184]
[17 183]
[19 181]
[20 180]
[21 179]
[22 178]
[23 177]
[24 176]
[25 167]
[26 166]
[27 165]
[28 163]
[29 162]
[30 161]
[32 159]
[33 158]
[34 157]
[35 156]
[37 154]
[38 130]
[39 129]
[40 128]
[41 127]
[42 126]
[43 125]
[44 124]
[45 122]
[46 121]
[47 119]
[48 118]
[49 116]
[50 115]
[51 114]
[52 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
