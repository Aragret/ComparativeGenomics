%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[94.13770294 720.35162354]
[79.37981415 717.63403320]
[64.84458160 713.90472412]
[50.60126877 709.18151855]
[36.71775818 703.48687744]
[23.26021004 696.84802246]
[10.29275608 689.29644775]
[-2.12280869 680.86828613]
[-13.92731667 671.60357666]
[-25.06451416 661.54656982]
[-35.48132706 650.74517822]
[-45.12811279 639.25079346]
[-53.95890427 627.11828613]
[-61.93161011 614.40545654]
[-69.00823975 601.17285156]
[-75.15507507 587.48352051]
[-80.34281921 573.40277100]
[-84.54674530 558.99761963]
[-87.74682617 544.33679199]
[-89.92781067 529.49011230]
[-91.07930756 514.52832031]
[-91.19581604 499.52276611]
[-90.27680206 484.54492188]
[-88.32662964 469.66613770]
[-85.35459137 454.95739746]
[-81.37486267 440.48870850]
[-76.40640259 426.32910156]
[-70.47288513 412.54598999]
[-63.60258865 399.20507812]
[-55.82825470 386.36996460]
[-47.18693542 374.10177612]
[-37.71980286 362.45901489]
[-27.47197533 351.49713135]
[-16.49229240 341.26837158]
[-4.83307409 331.82153320]
[7.45011568 323.20153809]
[20.29874229 315.44955444]
[33.65157700 308.60247803]
[47.44498062 302.69293213]
[61.61322784 297.74911499]
[76.08879852 293.79455566]
[90.80271149 290.84811401]
[105.68483734 288.92379761]
[104.79202271 273.95040894]
[103.89920807 258.97698975]
[103.00639343 244.00358582]
[94.52526855 231.75941467]
[101.42745209 217.52317810]
[100.53462982 202.54977417]
[99.64181519 187.57637024]
[98.74900055 172.60296631]
[97.63335419 157.64450073]
[96.29512024 142.70433044]
[94.95688629 127.76413727]
[93.61865234 112.82395172]
[85.73317719 101.27791595]
[91.44116211 88.51428223]
[90.10292816 73.57409668]
[88.76469421 58.63391113]
[87.42646027 43.69372559]
[75.58210754 33.57696152]
[74.43777466 18.40642548]
[84.15555573 7.17698622]
[80.94228363 -7.47480106]
[75.90536499 -21.60383034]
[70.86844635 -35.73286057]
[65.83153534 -49.86188889]
[60.79461670 -63.99092102]
[55.75770187 -78.11994934]
[50.72078323 -92.24897766]
[42.03120041 -80.02232361]
[27.06337166 -79.04045105]
[16.85102272 -90.02716827]
[18.92231750 -104.88346863]
[31.75037575 -112.65784454]
[45.87766266 -107.62048340]
[41.90556717 -122.08500671]
[37.93346786 -136.54953003]
[33.96137238 -151.01405334]
[29.98927689 -165.47857666]
[14.99787903 -164.22453308]
[0.03133142 -165.74671936]
[-14.40061188 -169.99333191]
[-27.80640411 -176.81970215]
[-39.72945023 -185.99333191]
[-49.76365280 -197.20179749]
[-57.56725311 -210.06330872]
[-62.87446594 -224.13981628]
[-65.50452423 -238.95188904]
[-65.36785126 -253.99502563]
[-62.46909714 -268.75686646]
[-56.90700150 -282.73461914]
[-48.87100601 -295.45220947]
[-38.63480759 -306.47650146]
[-26.54705048 -315.43200684]
[-13.01943970 -322.01367188]
[1.48727977 -325.99734497]
[16.47901535 -327.24737549]
[31.44515228 -325.72113037]
[45.87594986 -321.47064209]
[59.27990341 -314.64065552]
[71.20047760 -305.46380615]
[81.23165894 -294.25265503]
[89.03179169 -281.38903809]
[94.33520508 -267.31109619]
[96.96127319 -252.49830627]
[96.82054138 -237.45521545]
[93.91781616 -222.69415283]
[88.35195160 -208.71789551]
[80.31252289 -196.00245667]
[70.07335663 -184.98092651]
[57.98318481 -176.02870178]
[44.45380020 -169.45068359]
[48.42589569 -154.98616028]
[52.39799500 -140.52162170]
[56.37009048 -126.05710602]
[60.34218597 -111.59258270]
[64.84981537 -97.28589630]
[69.88673401 -83.15686798]
[74.92364502 -69.02783203]
[79.96056366 -54.89880753]
[84.99748230 -40.76977539]
[90.03439331 -26.64074707]
[95.07131195 -12.51171780]
[97.34435272 -27.33849335]
[104.25008392 -40.65430832]
[115.05971527 -51.05390930]
[128.63249207 -57.43980789]
[143.53605652 -59.13808060]
[158.19757080 -55.96950531]
[171.06979370 -48.26847076]
[180.79428101 -36.84768295]
[186.34477234 -22.91240692]
[187.13554382 -7.93326569]
[183.08311462 6.50895786]
[174.61515808 18.89014053]
[162.62530518 27.90366554]
[148.37889099 32.59831619]
[133.37937927 32.47865295]
[119.20967865 27.55730629]
[107.36516571 18.35363579]
[99.09574127 5.83875179]
[110.65451813 15.16238976]
[112.22451019 30.29479790]
[102.36664581 42.35549164]
[103.70487976 57.29567719]
[105.04311371 72.23586273]
[106.38134766 87.17604828]
[114.26682281 98.72208405]
[108.55883789 111.48571777]
[109.89707184 126.42590332]
[111.23530579 141.36608887]
[112.57353973 156.30627441]
[116.05825806 161.92483521]
[116.16619110 167.60685730]
[113.72240448 171.71014404]
[114.61522675 186.68354797]
[115.50804138 201.65695190]
[116.40085602 216.63035583]
[124.94583893 229.94554138]
[117.97979736 243.11077881]
[118.87261200 258.08416748]
[119.76542664 273.05758667]
[120.65824127 288.03100586]
[135.66358948 288.17318726]
[150.62336731 289.35028076]
[165.46630859 291.55667114]
[180.12164307 294.78186035]
[194.51954651 299.01043701]
[208.59141541 304.22225952]
[222.27018738 310.39251709]
[235.49066162 317.49179077]
[248.18984985 325.48623657]
[260.30722046 334.33779907]
[271.78506470 344.00424194]
[282.56863403 354.43951416]
[292.60656738 365.59390259]
[301.85101318 377.41424561]
[310.25796509 389.84423828]
[317.78729248 402.82458496]
[324.40313721 416.29348755]
[330.07400513 430.18670654]
[334.77285767 444.43807983]
[338.47726440 458.97967529]
[341.16958618 473.74221802]
[342.83703613 488.65530396]
[343.47161865 503.64788818]
[343.07034302 518.64855957]
[341.63510132 533.58575439]
[339.17272949 548.38836670]
[335.69497681 562.98583984]
[331.21841431 577.30859375]
[325.76437378 591.28839111]
[319.35882568 604.85858154]
[312.03234863 617.95446777]
[303.81979370 630.51373291]
[294.76031494 642.47644043]
[284.89712524 653.78564453]
[274.27719116 664.38745117]
[262.95114136 674.23126221]
[250.97291565 683.27020264]
[238.39962769 691.46124268]
[225.29118347 698.76531982]
[211.71006775 705.14764404]
[197.72097778 710.57775879]
[183.39059448 715.02978516]
[168.78720093 718.48254395]
[153.98039246 720.91955566]
[139.04072571 722.32922363]
[124.03940582 722.70483398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 164]
[44 163]
[45 162]
[46 161]
[48 159]
[49 158]
[50 157]
[51 156]
[52 153]
[53 152]
[54 151]
[55 150]
[57 148]
[58 147]
[59 146]
[60 145]
[63 142]
[64 124]
[65 123]
[66 122]
[67 121]
[68 120]
[69 119]
[70 118]
[76 117]
[77 116]
[78 115]
[79 114]
[80 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
