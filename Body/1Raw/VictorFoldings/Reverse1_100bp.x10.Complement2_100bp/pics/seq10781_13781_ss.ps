%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[58.47997665 685.39782715]
[45.08358765 692.18872070]
[30.95419502 697.28186035]
[16.30600357 700.60003662]
[1.36107099 702.09289551]
[-13.65403938 701.73779297]
[-28.51170349 699.54022217]
[-42.98668289 695.53338623]
[-56.85953903 689.77807617]
[-69.91996002 682.36157227]
[-81.96996307 673.39624023]
[-92.82686615 663.01800537]
[-102.32608032 651.38421631]
[-110.32360840 638.67126465]
[-116.69819641 625.07189941]
[-121.35321808 610.79217529]
[-124.21809387 596.04858398]
[-125.24941254 581.06475830]
[-124.43151855 566.06774902]
[-121.77681732 551.28491211]
[-117.32556152 536.94036865]
[-111.14521790 523.25158691]
[-103.32949066 510.42602539]
[-93.99686432 498.65820312]
[-83.28881073 488.12649536]
[-71.36766052 478.99053955]
[-58.41414261 471.38882446]
[-44.62462616 465.43661499]
[-30.20815849 461.22412109]
[-15.38328552 458.81521606]
[-0.37475118 458.24642944]
[14.58991909 459.52636719]
[17.69402885 444.85107422]
[20.79813957 430.17578125]
[19.19162178 427.03707886]
[19.02554703 422.96429443]
[20.72237396 418.64294434]
[24.38244438 414.92126465]
[28.13874435 400.39920044]
[31.89504433 385.87713623]
[35.65134430 371.35507202]
[39.40764618 356.83300781]
[42.94731903 342.25665283]
[46.26957703 327.62918091]
[49.48285294 312.97738647]
[52.58696365 298.30209351]
[55.69107437 283.62680054]
[58.79518127 268.95147705]
[61.89929199 254.27618408]
[55.56863022 237.90885925]
[67.99005127 224.31510925]
[70.87532043 209.59521484]
[58.39264679 201.40301514]
[49.97462845 189.02229309]
[46.92978668 174.32217407]
[49.75260544 159.53639221]
[58.04351807 146.92391968]
[70.56514740 138.42379761]
[85.42687225 135.35708618]
[88.31214905 120.63719940]
[91.19741821 105.91731262]
[93.53290558 91.10024261]
[95.31536865 76.20652771]
[85.82096863 63.85767365]
[87.84081268 48.77871704]
[99.67206573 39.80335999]
[92.32821655 29.20003128]
[94.11945343 16.83171463]
[103.54573822 9.25071144]
[105.54975128 -5.61481667]
[107.55376434 -20.48034477]
[109.55778503 -35.34587479]
[111.56179810 -50.21140289]
[113.56581116 -65.07692719]
[115.56982422 -79.94245911]
[109.74559784 -94.65262604]
[119.11391449 -106.23208618]
[120.00672913 -121.20549774]
[119.78340149 -136.20382690]
[119.56007385 -151.20216370]
[111.61816406 -164.88562012]
[119.16512299 -177.72666931]
[118.94179535 -192.72500610]
[118.71846771 -207.72334290]
[118.04867554 -222.70838928]
[116.93302917 -237.66683960]
[115.81738281 -252.62528992]
[114.70173645 -267.58374023]
[113.58608246 -282.54220581]
[98.67691803 -284.67077637]
[84.57405090 -289.95501709]
[71.93711090 -298.14779663]
[61.35714722 -308.86593628]
[53.32899857 -321.60812378]
[48.22815704 -335.77835083]
[46.29320526 -350.71386719]
[47.61463547 -365.71612549]
[52.13064957 -380.08343506]
[59.63002014 -393.14382935]
[69.76199341 -404.28640747]
[82.05267334 -412.99005127]
[95.92720032 -418.84765625]
[110.73664856 -421.58523560]
[125.78833771 -421.07479858]
[140.37829590 -417.34014893]
[153.82409668 -410.55603027]
[165.49687195 -401.03970337]
[174.85066223 -389.23629761]
[181.44798279 -375.69784546]
[184.98023987 -361.05758667]
[185.28225708 -346.00027466]
[182.33987427 -331.23016357]
[176.29074097 -317.43804932]
[167.41775513 -305.26904297]
[156.13595581 -295.29232788]
[142.97300720 -287.97451782]
[128.54454041 -283.65783691]
[129.66018677 -268.69940186]
[130.77583313 -253.74093628]
[131.89147949 -238.78248596]
[133.00712585 -223.82403564]
[135.04078674 -221.89469910]
[136.43275452 -219.04353333]
[136.82806396 -215.51095581]
[135.96531677 -211.66125488]
[133.71679688 -207.94667053]
[133.94012451 -192.94833374]
[134.16345215 -177.94999695]
[142.08938599 -165.33934021]
[134.55841064 -151.42549133]
[134.78173828 -136.42715454]
[135.00506592 -121.42882538]
[143.67311096 -133.67076111]
[157.25923157 -140.02821350]
[172.21205139 -138.83937073]
[184.62292480 -130.41499329]
[191.24769592 -116.95719910]
[190.35466003 -101.98380280]
[182.17724609 -89.40882874]
[168.85301208 -82.51934814]
[153.86489868 -83.11624146]
[141.13073730 -91.04349518]
[133.97944641 -104.22807312]
[139.94700623 -90.58119202]
[130.43534851 -77.93844604]
[128.43133545 -63.07291412]
[126.42732239 -48.20738602]
[124.42330933 -33.34185791]
[122.41929626 -18.47633171]
[120.41528320 -3.61080313]
[118.41127014 11.25472546]
[125.94174194 27.10587311]
[114.56578064 41.58582687]
[123.94491577 53.09962082]
[122.34941101 68.22936249]
[110.20909119 77.98899078]
[108.42662048 92.88270569]
[121.65200806 85.80534363]
[135.49085999 91.59208679]
[139.74166870 105.97716522]
[131.27091980 118.35643768]
[116.32292175 119.60436249]
[105.91731262 108.80258179]
[103.03203583 123.52247620]
[100.14676666 138.24237061]
[112.75100708 146.69273376]
[121.13710022 159.29100037]
[124.05305481 174.10015869]
[121.08507538 188.85748291]
[112.71596527 201.32034302]
[100.24690247 209.60694885]
[85.59521484 212.48049927]
[82.70993805 227.20037842]
[89.24481201 238.32055664]
[86.53862762 250.52139282]
[76.57459259 257.38031006]
[73.47048187 272.05560303]
[70.36637115 286.73089600]
[67.26226807 301.40621948]
[64.15815735 316.08151245]
[65.44393158 325.12500000]
[60.89703751 330.95144653]
[57.57477951 345.57891846]
[59.16227341 351.99694824]
[57.51717758 357.43667603]
[53.92970657 360.58932495]
[50.17340469 375.11138916]
[46.41710281 389.63345337]
[42.66080475 404.15548706]
[38.90450287 418.67755127]
[35.47344208 433.27987671]
[32.36933136 447.95516968]
[29.26522255 462.63049316]
[43.46646118 467.51968384]
[56.95921707 474.11706543]
[69.53894043 482.32254028]
[81.01493073 492.01177979]
[91.21320343 503.03790283]
[99.97916412 515.23370361]
[107.17992401 528.41430664]
[112.70631409 542.37994385]
[116.47456360 556.91882324]
[118.42754364 571.81060791]
[118.53564453 586.82952881]
[116.79723358 601.74792480]
[113.23866272 616.33953857]
[107.91387177 630.38330078]
[100.90359497 643.66619873]
[92.31410217 655.98693848]
[82.27559662 667.15869141]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 193]
[33 192]
[34 191]
[38 190]
[39 189]
[40 188]
[41 187]
[42 186]
[43 183]
[44 182]
[45 180]
[46 179]
[47 178]
[48 177]
[49 176]
[51 173]
[52 172]
[59 165]
[60 164]
[61 163]
[62 157]
[63 156]
[66 153]
[69 151]
[70 150]
[71 149]
[72 148]
[73 147]
[74 146]
[75 145]
[77 143]
[78 132]
[79 131]
[80 130]
[82 128]
[83 127]
[84 126]
[85 121]
[86 120]
[87 119]
[88 118]
[89 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
