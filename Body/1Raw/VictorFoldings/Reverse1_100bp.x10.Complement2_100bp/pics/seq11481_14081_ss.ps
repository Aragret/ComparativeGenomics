%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[17.51410103 632.75402832]
[4.33695698 624.86364746]
[-3.11555576 611.43402100]
[-2.83874846 596.07757568]
[5.09291887 582.92523193]
[18.54586792 575.51489258]
[18.76919556 560.51654053]
[18.99252319 545.51818848]
[19.21585083 530.51983643]
[17.03559875 527.74877930]
[16.08922195 523.78399658]
[16.92314529 519.21697998]
[19.79899406 514.86077881]
[20.69180870 499.88735962]
[21.58462524 484.91394043]
[22.47744179 469.94055176]
[23.37025642 454.96713257]
[23.81686211 439.97378540]
[23.81686211 424.97378540]
[23.81686211 409.97378540]
[20.67336273 403.28497314]
[23.93019295 394.75088501]
[24.15352058 379.75253296]
[24.37684822 364.75421143]
[17.17552376 377.91250610]
[6.30373287 388.24710083]
[-7.20229483 394.77301025]
[-22.05525017 396.86816406]
[-36.83944702 394.33288574]
[-50.14574432 387.40884399]
[-60.70587540 376.75598145]
[-67.51331329 363.38964844]
[-69.91921997 348.58386230]
[-67.69427490 333.74978638]
[-61.05055237 320.30133057]
[-50.62128067 309.52032471]
[-37.40052032 302.43432617]
[-22.64838219 299.71871948]
[-7.77095079 301.63235474]
[5.81375265 307.99285889]
[16.81092072 318.19393921]
[24.17237473 331.26333618]
[27.19651985 345.95648193]
[31.38353157 331.55270386]
[35.57054138 317.14889526]
[39.75755310 302.74511719]
[43.72964859 288.28060913]
[47.48595047 273.75854492]
[51.24225235 259.23648071]
[54.99855423 244.71441650]
[58.75485229 230.19236755]
[62.51115417 215.67030334]
[66.26745605 201.14823914]
[70.02375793 186.62619019]
[73.78005219 172.10412598]
[77.53635406 157.58206177]
[81.29265594 143.06001282]
[76.98905182 128.80068970]
[87.93566132 117.37779999]
[91.69196320 102.85574341]
[90.37331390 100.10789490]
[90.02535248 96.81951141]
[90.85020447 93.34919739]
[92.91469574 90.12520599]
[96.12829590 87.59425354]
[100.74230957 73.32151794]
[105.35631561 59.04878616]
[109.54332733 44.64500046]
[113.29962921 30.12294388]
[117.05593109 15.60088348]
[120.81223297 1.07882452]
[124.56853485 -13.44323444]
[123.68785095 -22.53511047]
[128.49037170 -28.15272331]
[132.46246338 -42.61724854]
[136.43457031 -57.08177185]
[140.40666199 -71.54629517]
[144.37875366 -86.01081848]
[148.35086060 -100.47534180]
[152.32295227 -114.93986511]
[156.29504395 -129.40438843]
[160.26713562 -143.86891174]
[164.23924255 -158.33343506]
[160.43252563 -173.68984985]
[171.26387024 -183.91389465]
[175.23597717 -198.37841797]
[177.90176392 -213.13963318]
[179.24000549 -228.07981873]
[171.10678101 -244.60047913]
[181.75450134 -258.55014038]
[182.87014771 -273.50860596]
[183.98579407 -288.46704102]
[184.20912170 -303.46539307]
[183.53933716 -318.45043945]
[182.86955261 -333.43545532]
[182.19976807 -348.42050171]
[181.52998352 -363.40554810]
[167.33959961 -368.93301392]
[156.62887573 -379.75891113]
[151.25349426 -394.00759888]
[152.14480591 -409.21041870]
[159.14834595 -422.73336792]
[171.05075073 -432.23352051]
[185.78982544 -436.06491089]
[200.81193542 -433.56375122]
[213.51443481 -425.16336060]
[221.69651794 -412.31915283]
[223.94058228 -397.25650024]
[219.85786438 -382.58505249]
[210.15568542 -370.84677124]
[196.51501465 -364.07531738]
[197.18479919 -349.09030151]
[197.85458374 -334.10525513]
[198.52436829 -319.12020874]
[199.19416809 -304.13516235]
[208.55519104 -315.85571289]
[222.98655701 -319.94665527]
[237.10571289 -314.88214111]
[245.64657593 -302.55114746]
[245.42359924 -287.55279541]
[236.51995850 -275.48110962]
[222.25650024 -270.83856201]
[207.95310974 -275.35665894]
[198.94424438 -287.35140991]
[197.82859802 -272.39294434]
[196.71295166 -257.43450928]
[204.36637878 -248.06690979]
[203.55932617 -235.59565735]
[194.18019104 -226.74159241]
[192.84194946 -211.80140686]
[202.06327820 -223.63217163]
[215.46594238 -230.36779785]
[230.46208191 -230.70774841]
[244.15620422 -224.58636475]
[253.90415955 -213.18560791]
[257.82379150 -198.70678711]
[255.15827942 -183.94552612]
[246.42227173 -171.75198364]
[233.30258179 -164.48056030]
[218.33239746 -163.53524780]
[204.40223694 -169.09857178]
[194.20178223 -180.09634399]
[189.70050049 -194.40632629]
[185.72839355 -179.94180298]
[189.81922913 -165.61997986]
[178.70376587 -154.36134338]
[174.73165894 -139.89682007]
[170.75956726 -125.43229675]
[166.78747559 -110.96777344]
[162.81538391 -96.50325012]
[158.84327698 -82.03871918]
[154.87118530 -67.57419586]
[150.89909363 -53.10967636]
[146.92698669 -38.64515305]
[142.95489502 -24.18062782]
[139.09059143 -9.68693447]
[135.33428955 4.83512497]
[131.57798767 19.35718536]
[127.82168579 33.87924194]
[124.06539154 48.40130234]
[125.37018585 50.88235855]
[125.77082062 54.02975464]
[125.00857544 57.50169754]
[122.95311737 60.86913300]
[119.62905121 63.66279221]
[115.01504517 77.93552399]
[110.40103149 92.20825958]
[106.21401978 106.61204529]
[102.45771790 121.13410187]
[106.49265289 136.43214417]
[95.81472015 146.81631470]
[92.05841827 161.33836365]
[88.30211639 175.86042786]
[84.54581451 190.38249207]
[80.78951263 204.90454102]
[77.03321075 219.42660522]
[73.27690887 233.94866943]
[69.52061462 248.47071838]
[65.76431274 262.99279785]
[62.00801086 277.51483154]
[58.25170898 292.03689575]
[59.64741135 298.49938965]
[57.84108353 303.88772583]
[54.16133499 306.93212891]
[49.97432327 321.33590698]
[45.78731537 335.73971558]
[41.60030365 350.14349365]
[39.37518692 364.97753906]
[39.15185928 379.97586060]
[38.92853165 394.97421265]
[38.81686401 409.97378540]
[38.81686401 424.97378540]
[38.81686401 439.97378540]
[41.12043381 443.65447998]
[42.04040909 447.49090576]
[41.69772720 451.02899170]
[40.34837341 453.90054321]
[38.34366226 455.85995483]
[37.45084763 470.83334351]
[36.55803299 485.80676270]
[35.66521454 500.78018188]
[34.77239990 515.75360107]
[34.21418762 530.74316406]
[33.99085999 545.74151611]
[33.76753235 560.73986816]
[33.54420471 575.73822021]
[46.77055359 583.54583740]
[54.30711365 596.92852783]
[54.12657928 612.28631592]
[46.27751923 625.48815918]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 206]
[7 205]
[8 204]
[9 203]
[13 202]
[14 201]
[15 200]
[16 199]
[17 198]
[18 193]
[19 192]
[20 191]
[22 190]
[23 189]
[24 188]
[43 187]
[44 186]
[45 185]
[46 184]
[47 181]
[48 180]
[49 179]
[50 178]
[51 177]
[52 176]
[53 175]
[54 174]
[55 173]
[56 172]
[57 171]
[59 169]
[60 168]
[65 167]
[66 166]
[67 165]
[68 160]
[69 159]
[70 158]
[71 157]
[72 156]
[74 155]
[75 154]
[76 153]
[77 152]
[78 151]
[79 150]
[80 149]
[81 148]
[82 147]
[83 146]
[85 144]
[86 143]
[87 130]
[88 129]
[90 126]
[91 125]
[92 124]
[93 115]
[94 114]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
