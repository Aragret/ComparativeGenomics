%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[93.62511444 452.43487549]
[93.40178680 437.43655396]
[85.47585297 424.82589722]
[93.00683594 410.91204834]
[92.78350830 395.91369629]
[92.56018066 380.91537476]
[92.33685303 365.91702271]
[92.11352539 350.91870117]
[84.18759155 338.30804443]
[91.71856689 324.39419556]
[91.49523926 309.39584351]
[90.93702698 294.40625000]
[90.04421234 279.43283081]
[89.15139771 264.45944214]
[88.25858307 249.48602295]
[87.36576843 234.51261902]
[78.52943420 226.25152588]
[77.66307068 213.78424072]
[85.77522278 203.75648499]
[85.10543823 188.77145386]
[82.24803162 184.94467163]
[81.76424408 179.28224182]
[84.64553070 173.33163452]
[84.42220306 158.33329773]
[84.19887543 143.33496094]
[77.27642822 156.64208984]
[66.45373535 167.02810669]
[52.87294388 173.39695740]
[37.96726990 175.07650757]
[23.30974388 171.88951111]
[10.44720745 164.17230225]
[0.73707706 152.73931885]
[-4.79591513 138.79707336]
[-5.56785917 123.81695557]
[-1.49728990 109.37982941]
[6.98621559 97.00930023]
[18.98737335 88.01084137]
[33.23966980 83.33409119]
[48.23903275 83.47259521]
[62.40253830 88.41174316]
[74.23547363 97.63028717]
[82.48908997 110.15537262]
[86.29238129 124.66539001]
[89.83205414 110.08901978]
[86.08058929 96.61986542]
[95.59156799 86.37131500]
[89.55976105 74.97043610]
[92.80804443 62.90260696]
[103.06840515 56.49545670]
[106.82469940 41.97339630]
[110.58100128 27.45133781]
[114.33730316 12.92927837]
[118.09360504 -1.59278119]
[121.84990692 -16.11483955]
[125.60620880 -30.63689995]
[129.36250305 -45.15895844]
[133.11880493 -59.68101883]
[136.87510681 -74.20307922]
[124.36669159 -84.60852814]
[117.67220306 -99.37428284]
[118.08567047 -115.52325439]
[125.47359467 -129.82368469]
[138.31178284 -139.43588257]
[153.99961853 -142.47608948]
[157.53927612 -157.05245972]
[161.07894897 -171.62884521]
[164.61862183 -186.20521545]
[168.15829468 -200.78158569]
[171.69796753 -215.35797119]
[175.23764038 -229.93434143]
[165.36416626 -241.75891113]
[164.35833740 -256.95239258]
[172.39675903 -269.67431641]
[186.21954346 -275.15783691]
[189.75921631 -289.73419189]
[193.19027710 -304.33651733]
[196.51254272 -318.96398926]
[199.83479309 -333.59143066]
[203.15705872 -348.21890259]
[206.47932434 -362.84637451]
[209.80157471 -377.47381592]
[213.12384033 -392.10128784]
[216.00910950 -406.82116699]
[218.45483398 -421.62045288]
[220.90055847 -436.41970825]
[223.34629822 -451.21899414]
[225.79202271 -466.01824951]
[228.23774719 -480.81753540]
[229.35339355 -495.77597046]
[229.13006592 -510.77432251]
[228.90673828 -525.77264404]
[228.68341064 -540.77099609]
[228.46008301 -555.76934814]
[228.23675537 -570.76763916]
[228.01342773 -585.76599121]
[220.07151794 -599.44946289]
[227.61846924 -612.29052734]
[213.37541199 -617.53448486]
[201.99108887 -627.57250977]
[195.00514221 -641.04699707]
[193.36235046 -656.13555908]
[197.28491211 -670.79766846]
[206.24232483 -683.05041504]
[219.02316284 -691.23663330]
[233.89892578 -694.24932861]
[248.85780334 -691.68090820]
[261.87670898 -683.87884521]
[271.19494629 -671.89825439]
[275.55230713 -657.35937500]
[274.35949707 -642.22857666]
[267.77783203 -628.55206299]
[256.69741821 -618.17956543]
[242.61680603 -612.51385498]
[250.54273987 -599.90319824]
[243.01176453 -585.98931885]
[243.23509216 -570.99096680]
[243.45841980 -555.99267578]
[243.68174744 -540.99432373]
[243.90507507 -525.99597168]
[244.12840271 -510.99765015]
[244.35173035 -495.99929810]
[252.29220581 -508.72521973]
[264.92141724 -516.81866455]
[279.80081177 -518.71685791]
[294.05746460 -514.05334473]
[304.93859863 -503.72860718]
[310.34326172 -489.73611450]
[309.22787476 -474.77764893]
[301.80786133 -461.74142456]
[289.51583862 -453.14456177]
[274.72521973 -450.64697266]
[260.29187012 -454.73086548]
[249.00262451 -464.60775757]
[243.03701782 -478.37179565]
[240.59129333 -463.57254028]
[238.14556885 -448.77325439]
[235.69982910 -433.97399902]
[233.25410461 -419.17471313]
[230.80838013 -404.37545776]
[232.32933044 -402.02069092]
[233.00915527 -398.92160034]
[232.55970764 -395.39547729]
[230.81286621 -391.85809326]
[227.75129700 -388.77902222]
[224.42903137 -374.15155029]
[221.10678101 -359.52410889]
[217.78451538 -344.89663696]
[214.46226501 -330.26919556]
[211.13999939 -315.64172363]
[207.81773376 -301.01425171]
[209.40170288 -293.79534912]
[204.33560181 -286.19451904]
[200.79592896 -271.61816406]
[210.56436157 -260.40585327]
[211.87290955 -245.41413879]
[204.01095581 -232.37406921]
[189.81402588 -226.39466858]
[186.27435303 -211.81829834]
[182.73468018 -197.24191284]
[179.19500732 -182.66554260]
[175.65533447 -168.08917236]
[172.11566162 -153.51278687]
[168.57598877 -138.93641663]
[179.72174072 -130.67564392]
[186.89981079 -118.75308990]
[188.99815369 -104.95177460]
[185.66731262 -91.35044861]
[177.37812805 -80.01047516]
[165.35542297 -72.66345215]
[151.39717102 -70.44677734]
[147.64086914 -55.92471695]
[143.88456726 -41.40265656]
[140.12826538 -26.88059998]
[136.37196350 -12.35853958]
[132.61566162 2.16351938]
[128.85935974 16.68557930]
[125.10306549 31.20763779]
[121.34676361 45.72969818]
[117.59046173 60.25175476]
[123.18396759 76.88544464]
[110.16794586 89.91098022]
[113.91941071 103.38013458]
[104.40843201 113.62868500]
[100.86875916 128.20506287]
[99.19721222 143.11163330]
[99.42053986 158.10997009]
[99.64386749 173.10830688]
[100.09047699 188.10166931]
[100.76026154 203.08670044]
[111.02774048 218.37265015]
[102.33917236 233.61981201]
[103.23198700 248.59321594]
[104.12480164 263.56661987]
[105.01761627 278.54003906]
[105.91043854 293.51342773]
[108.78628540 297.86962891]
[109.62020874 302.43667603]
[108.67382812 306.40145874]
[106.49357605 309.17251587]
[106.71690369 324.17086792]
[114.65881348 337.85430908]
[107.11186218 350.69537354]
[107.33518982 365.69369507]
[107.55851746 380.69204712]
[107.78184509 395.69036865]
[108.00517273 410.68872070]
[115.94707489 424.37216187]
[108.40012360 437.21322632]
[108.62345123 452.21154785]
[111.10076904 471.43426514]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 209]
[2 208]
[4 206]
[5 205]
[6 204]
[7 203]
[8 202]
[10 200]
[11 199]
[12 195]
[13 194]
[14 193]
[15 192]
[16 191]
[19 189]
[20 188]
[23 187]
[24 186]
[25 185]
[43 184]
[44 183]
[46 181]
[49 179]
[50 178]
[51 177]
[52 176]
[53 175]
[54 174]
[55 173]
[56 172]
[57 171]
[58 170]
[64 163]
[65 162]
[66 161]
[67 160]
[68 159]
[69 158]
[70 157]
[74 153]
[75 152]
[76 150]
[77 149]
[78 148]
[79 147]
[80 146]
[81 145]
[82 144]
[83 139]
[84 138]
[85 137]
[86 136]
[87 135]
[88 134]
[89 121]
[90 120]
[91 119]
[92 118]
[93 117]
[94 116]
[95 115]
[97 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
