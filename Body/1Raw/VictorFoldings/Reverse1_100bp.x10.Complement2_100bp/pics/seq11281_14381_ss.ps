%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[131.25997925 695.45532227]
[126.30952454 680.74914551]
[130.98072815 665.95184326]
[143.47741699 656.75335693]
[143.25408936 641.75500488]
[143.03076172 626.75671387]
[142.80743408 611.75836182]
[142.58410645 596.76000977]
[141.69129944 581.78662109]
[140.13076782 566.86798096]
[138.57025146 551.94940186]
[137.00971985 537.03082275]
[120.14428711 531.67608643]
[107.28299713 519.44573975]
[101.05033112 502.77145386]
[102.74605560 484.99807739]
[112.07451630 469.71270752]
[127.19493866 460.02059937]
[124.96981812 445.18655396]
[122.74470520 430.35250854]
[120.51958466 415.51846313]
[118.29447174 400.68441772]
[116.06935120 385.85037231]
[113.84423065 371.01635742]
[111.67270660 369.24359131]
[110.07254791 366.50387573]
[109.41558075 363.01046753]
[109.98961639 359.10726929]
[111.95562744 355.23574829]
[110.61739349 340.29556274]
[101.53901672 332.30120850]
[100.30183411 319.86523438]
[108.11183167 309.60040283]
[106.99617767 294.64196777]
[105.88053131 279.68350220]
[91.00992584 277.88375854]
[76.77165222 273.21585083]
[63.71352386 265.85736084]
[52.33834076 256.08950806]
[43.08450699 244.28628540]
[36.30915833 230.90016174]
[32.27436829 216.44476318]
[31.13700676 201.47518921]
[32.94266129 186.56661987]
[37.62378693 172.29225159]
[45.00225449 159.20132446]
[54.79611588 147.79785156]
[66.63037109 138.52136230]
[80.05135345 131.72982788]
[94.54407501 127.68597412]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[90.49746704 73.42967224]
[89.38182068 58.47121811]
[88.26617432 43.51276398]
[87.15052032 28.55431175]
[86.03487396 13.59585857]
[84.91922760 -1.36259449]
[83.80358124 -16.32104874]
[82.68792725 -31.27950096]
[78.92891693 -39.60462189]
[81.66871643 -46.46867752]
[80.77590179 -61.44208527]
[77.46000671 -67.16191101]
[77.52130127 -72.84462738]
[80.08617401 -76.87332916]
[71.94142151 -90.43701935]
[79.29634857 -103.38901520]
[78.84974670 -118.38237000]
[78.40313721 -133.37571716]
[77.95653534 -148.36906433]
[77.50992584 -163.36241150]
[77.06332397 -178.35577393]
[65.84212494 -189.15957642]
[65.60279083 -204.37133789]
[75.97172546 -215.00245667]
[75.52512360 -229.99580383]
[75.07851410 -244.98915100]
[74.63191223 -259.98251343]
[60.35721970 -272.43832397]
[59.73077774 -291.05337524]
[72.68388367 -303.98910522]
[71.79106903 -318.96249390]
[70.89825439 -333.93591309]
[70.00543976 -348.90930176]
[69.11261749 -363.88272095]
[68.21980286 -378.85614014]
[67.10415649 -393.81457520]
[65.76592255 -408.75476074]
[64.42768860 -423.69494629]
[49.56121445 -426.27377319]
[35.86916351 -432.61334229]
[24.28507805 -442.28140259]
[15.59878540 -454.61877441]
[10.40252781 -468.78427124]
[9.05059719 -483.81207275]
[11.63516903 -498.67755127]
[17.98002243 -512.36712646]
[27.65255737 -523.94750977]
[39.99328232 -532.62902832]
[54.16078186 -537.81982422]
[69.18910217 -539.16595459]
[84.05358124 -536.57562256]
[97.74073029 -530.22552490]
[109.31734467 -520.54852295]
[117.99411011 -508.20440674]
[123.17942810 -494.03491211]
[124.51975250 -479.00607300]
[121.92369843 -464.14260864]
[115.56827545 -450.45791626]
[105.88680267 -438.88500977]
[93.53938293 -430.21304321]
[79.36787415 -425.03317261]
[80.70610809 -410.09298706]
[82.04434204 -395.15280151]
[85.06977081 -391.45742798]
[85.80591583 -385.82226562]
[83.19321442 -379.74893188]
[84.08602905 -364.77554321]
[84.97884369 -349.80212402]
[85.87165833 -334.82873535]
[86.76447296 -319.85531616]
[87.65728760 -304.88192749]
[97.62911224 -299.33853149]
[103.75006104 -289.56869507]
[104.40147400 -277.93817139]
[99.30601501 -267.32980347]
[89.62525940 -260.42910767]
[90.07186890 -245.43576050]
[90.51847076 -230.44241333]
[90.96508026 -215.44905090]
[101.94841003 -205.45396423]
[102.61492157 -190.25492859]
[92.05667114 -178.80236816]
[92.50328064 -163.80902100]
[92.94988251 -148.81567383]
[93.39649200 -133.82232666]
[93.84309387 -118.82897186]
[94.28970337 -103.83562469]
[102.40251160 -91.34436035]
[95.07952118 -77.31993866]
[95.74930573 -62.33489990]
[96.64212036 -47.36149597]
[97.64638519 -32.39514923]
[98.76203156 -17.43669701]
[99.87767792 -2.47824311]
[100.99333191 12.48021030]
[102.10897827 27.43866348]
[103.22462463 42.39711761]
[104.34027100 57.35557175]
[105.45592499 72.31402588]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[109.50253296 126.57032776]
[124.43478394 128.41957092]
[138.71473694 133.14508057]
[151.79414368 140.56343079]
[163.17124939 150.38790894]
[172.41001892 162.23947144]
[179.15682983 175.66149902]
[183.15405273 190.13728333]
[184.24987793 205.10995483]
[182.40405273 220.00393677]
[177.68937683 234.24702454]
[170.28883362 247.29238892]
[160.48847961 258.63958740]
[148.66639709 267.85369873]
[135.27809143 274.58209229]
[120.83898926 278.56787109]
[121.95463562 293.52630615]
[123.07028198 308.48477173]
[133.78833008 323.45825195]
[125.55757904 338.95733643]
[126.89581299 353.89752197]
[128.67828369 368.79122925]
[130.90339661 383.62527466]
[133.12850952 398.45932007]
[135.35362244 413.29336548]
[137.57875061 428.12741089]
[139.80386353 442.96145630]
[142.02897644 457.79550171]
[154.20631409 460.28402710]
[165.01170349 466.37634277]
[173.41046143 475.47186279]
[178.60360718 486.68319702]
[180.10389709 498.92285156]
[177.78152466 511.00854492]
[171.87521362 521.77758789]
[162.96768188 530.19854736]
[151.92832947 535.47027588]
[153.48884583 550.38885498]
[155.04937744 565.30749512]
[156.60989380 580.22607422]
[166.87223816 569.28607178]
[181.85952759 568.66900635]
[192.98640442 578.72851562]
[193.87886047 593.70190430]
[184.02566528 605.01184082]
[169.07118225 606.17944336]
[157.58244324 596.53668213]
[157.80577087 611.53503418]
[158.02909851 626.53338623]
[158.25242615 641.53167725]
[158.47575378 656.53002930]
[171.24078369 665.35235596]
[176.35047913 680.00402832]
[171.84008789 694.85107422]
[159.44390869 704.18463135]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 206]
[5 205]
[6 204]
[7 203]
[8 202]
[9 195]
[10 194]
[11 193]
[12 192]
[18 183]
[19 182]
[20 181]
[21 180]
[22 179]
[23 178]
[24 177]
[29 176]
[30 175]
[33 173]
[34 172]
[35 171]
[50 156]
[51 155]
[53 153]
[54 152]
[55 151]
[56 150]
[57 149]
[58 148]
[59 147]
[60 146]
[61 145]
[63 144]
[64 143]
[67 142]
[69 140]
[70 139]
[71 138]
[72 137]
[73 136]
[74 135]
[77 132]
[78 131]
[79 130]
[80 129]
[83 124]
[84 123]
[85 122]
[86 121]
[87 120]
[88 119]
[89 116]
[90 115]
[91 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
