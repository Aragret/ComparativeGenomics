%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[112.84358978 598.86035156]
[107.26332855 584.90301514]
[103.93530273 570.24456787]
[102.94145966 555.24591064]
[104.30627441 540.27648926]
[107.99614716 525.70489502]
[113.92019653 511.88998413]
[121.93255615 499.17193604]
[131.83589172 487.86395264]
[143.38635254 478.24453735]
[156.29946899 470.55050659]
[170.25726318 464.97140503]
[166.93501282 450.34393311]
[163.61274719 435.71649170]
[160.29048157 421.08901978]
[157.51789856 418.91070557]
[155.66264343 415.28121948]
[155.39529419 410.64639282]
[157.16195679 405.73455811]
[154.49615479 390.97332764]
[151.83036804 376.21212769]
[149.16456604 361.45089722]
[146.49877930 346.68969727]
[143.83297729 331.92846680]
[141.16717529 317.16726685]
[138.28190613 302.44735718]
[135.17779541 287.77206421]
[132.07368469 273.09677124]
[128.75143433 258.46929932]
[125.21176147 243.89292908]
[115.04792786 237.33372498]
[111.97967529 225.21887207]
[118.18056488 213.90905762]
[114.85830688 199.28160095]
[111.53604126 184.65414429]
[108.21378326 170.02668762]
[104.89152527 155.39921570]
[101.56926727 140.77175903]
[98.24700928 126.14430237]
[94.92474365 111.51683807]
[91.27665710 96.96721649]
[87.30456543 82.50269318]
[83.33246613 68.03816986]
[79.36036682 53.57364655]
[73.80114746 39.64184952]
[66.72403717 26.41632271]
[51.86560440 21.74035263]
[44.87681580 8.22697067]
[49.42620468 -5.90945911]
[42.34910202 -19.13498688]
[35.27199554 -32.36051559]
[28.19489098 -45.58604050]
[21.11778450 -58.81156921]
[14.04067898 -72.03709412]
[6.86531305 -85.20957184]
[-0.40791661 -98.32826996]
[-7.68114614 -111.44696045]
[-14.95437527 -124.56565857]
[-22.22760582 -137.68434143]
[-38.22822189 -146.79817200]
[-37.23910141 -164.31925964]
[-44.70684052 -177.32821655]
[-52.17458344 -190.33715820]
[-59.64232635 -203.34611511]
[-73.51827240 -197.59402466]
[-88.01586914 -193.66363525]
[-102.89705658 -191.61947632]
[-117.91746521 -191.49511719]
[-132.83045959 -193.29260254]
[-147.39114380 -196.98242188]
[-161.36042786 -202.50396729]
[-174.50891113 -209.76658630]
[-186.62069702 -218.65101624]
[-197.49688721 -229.01136780]
[-206.95889282 -240.67750549]
[-214.85133362 -253.45787048]
[-221.04461670 -267.14257812]
[-225.43702698 -281.50695801]
[-227.95645142 -296.31509399]
[-228.56152344 -311.32382202]
[-227.24227905 -326.28671265]
[-224.02041626 -340.95803833]
[-218.94882202 -355.09689331]
[-212.11077881 -368.47109985]
[-203.61857605 -380.86105347]
[-193.61166382 -392.06329346]
[-182.25434875 -401.89385986]
[-169.73315430 -410.19131470]
[-156.25367737 -416.81942749]
[-142.03726196 -421.66937256]
[-127.31735992 -424.66149902]
[-112.33567810 -425.74664307]
[-97.33823395 -424.90701294]
[-82.57129669 -422.15637207]
[-68.27735901 -417.53994751]
[-54.69112778 -411.13348389]
[-42.03571320 -403.04220581]
[-30.51892281 -393.39898682]
[-20.32987595 -382.36215210]
[-11.63588238 -370.11294556]
[-4.57970762 -356.85253906]
[0.72277927 -342.79864502]
[4.18450737 -328.18203735]
[5.74863195 -313.24276733]
[5.38946867 -298.22613525]
[3.11291528 -283.37872314]
[-1.04364526 -268.94433594]
[-7.01195860 -255.16001892]
[-14.69401932 -242.25210571]
[-23.96368027 -230.43255615]
[-34.66872787 -219.89546204]
[-46.63337326 -210.81385803]
[-39.16563034 -197.80490112]
[-31.69788933 -184.79595947]
[-24.23014832 -171.78700256]
[-12.63941383 -168.32557678]
[-6.31144857 -157.54872131]
[-9.10891056 -144.95758057]
[-1.83568156 -131.83888245]
[5.43754816 -118.72019196]
[12.71077728 -105.60149384]
[19.98400688 -92.48280334]
[25.97653198 -88.15712738]
[27.26620674 -79.11420441]
[34.34331131 -65.88867188]
[41.42041779 -52.66314697]
[48.49752426 -39.43761826]
[55.57462692 -26.21209145]
[62.65173340 -12.98656464]
[76.93703461 -8.92875671]
[84.30262756 4.38299322]
[79.94956970 19.33921623]
[87.02667236 32.56474304]
[87.42172241 17.56994629]
[93.13953400 3.70247984]
[103.42782593 -7.21315384]
[116.93299866 -13.74081516]
[131.87820435 -15.02167702]
[146.29716492 -10.88722134]
[158.29280090 -1.88140535]
[166.28688049 10.81089973]
[169.22766113 25.51980400]
[166.72821045 40.31009674]
[159.11738586 53.23586273]
[147.39653015 62.59649277]
[133.10771179 67.16043854]
[118.13086700 66.32722473]
[104.43647003 60.20648956]
[93.82489777 49.60155106]
[97.79698944 64.06607819]
[101.76908875 78.53060150]
[105.74118042 92.99512482]
[108.78872681 95.35835266]
[110.77979279 99.05342102]
[111.14293671 103.57836914]
[109.55220795 108.19458008]
[112.87446594 122.82204437]
[116.19672394 137.44949341]
[119.51898193 152.07696533]
[122.84124756 166.70442200]
[126.16350555 181.33187866]
[129.48576355 195.95933533]
[132.80802917 210.58680725]
[145.62867737 223.80468750]
[139.78813171 240.35325623]
[143.32780457 254.92962646]
[147.60743713 259.96908569]
[148.55705261 265.57223511]
[146.74899292 269.99264526]
[149.85310364 284.66793823]
[152.95721436 299.34326172]
[157.08489990 304.50790405]
[157.86726379 310.13684082]
[155.92840576 314.50146484]
[158.59419250 329.26266479]
[161.25999451 344.02389526]
[163.92578125 358.78512573]
[166.59158325 373.54632568]
[169.25737000 388.30755615]
[171.92317200 403.06875610]
[174.91795349 417.76675415]
[178.24020386 432.39422607]
[181.56246948 447.02169800]
[184.88471985 461.64913940]
[199.88310242 460.65158081]
[214.85287476 462.01269531]
[229.42536926 465.69897461]
[243.24176025 471.61959839]
[255.96179199 479.62881470]
[267.27221680 489.52935791]
[276.89450073 501.07742310]
[284.59170532 513.98864746]
[290.17428589 527.94506836]
[293.50473022 542.60296631]
[294.50103760 557.60144043]
[293.13870239 572.57110596]
[289.45123291 587.14331055]
[283.52944946 600.95916748]
[275.51919556 613.67852783]
[265.61773682 624.98815918]
[254.06886292 634.60949707]
[241.15701294 642.30566406]
[227.20013428 647.88708496]
[212.54194641 651.21630859]
[197.54339600 652.21136475]
[182.57386780 650.84777832]
[168.00196838 647.15911865]
[154.18655396 641.23620605]
[141.46784973 633.22491455]
[130.15905762 623.32250977]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 184]
[13 183]
[14 182]
[15 181]
[19 180]
[20 179]
[21 178]
[22 177]
[23 176]
[24 175]
[25 174]
[26 171]
[27 170]
[28 169]
[29 166]
[30 165]
[33 163]
[34 162]
[35 161]
[36 160]
[37 159]
[38 158]
[39 157]
[40 156]
[41 152]
[42 151]
[43 150]
[44 149]
[45 133]
[46 132]
[49 129]
[50 128]
[51 127]
[52 126]
[53 125]
[54 124]
[55 122]
[56 121]
[57 120]
[58 119]
[59 118]
[61 115]
[62 114]
[63 113]
[64 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
