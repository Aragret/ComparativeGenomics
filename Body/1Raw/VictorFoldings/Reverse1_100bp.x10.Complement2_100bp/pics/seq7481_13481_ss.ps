%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[85.76227570 707.78857422]
[70.79055023 706.74566650]
[55.94901657 704.51654053]
[41.33150482 701.11529541]
[27.03042984 696.56347656]
[13.13621426 690.88977051]
[-0.26330081 684.13006592]
[-13.08339691 676.32720947]
[-25.24301910 667.53039551]
[-36.66529083 657.79528809]
[-47.27799606 647.18347168]
[-57.01403809 635.76202393]
[-65.81185913 623.60314941]
[-73.61582947 610.78369141]
[-80.37662506 597.38476562]
[-86.05149078 583.49102783]
[-90.60454559 569.19036865]
[-94.00701141 554.57312012]
[-96.23737335 539.73175049]
[-97.28153229 524.76013184]
[-97.13287354 509.75286865]
[-95.79235077 494.80484009]
[-93.26844025 480.01058960]
[-89.57709503 465.46365356]
[-84.74164581 451.25595093]
[-78.79267120 437.47735596]
[-71.76779175 424.21496582]
[-63.71140671 411.55261230]
[-54.67445755 399.57040405]
[-44.71408081 388.34405518]
[-33.89324951 377.94454956]
[-22.28037834 368.43762207]
[-9.94888592 359.88342285]
[3.02326107 352.33599854]
[16.55404854 345.84310913]
[30.55792809 340.44573975]
[44.94636154 336.17807007]
[59.62837982 333.06704712]
[74.51116180 331.13238525]
[89.50060272 330.38626099]
[89.94721222 315.39291382]
[90.39381409 300.39956665]
[90.84042358 285.40621948]
[91.28702545 270.41287231]
[83.93209839 257.46087646]
[92.07685089 243.89717102]
[92.52345276 228.90382385]
[92.97006226 213.91047668]
[85.61512756 200.95848083]
[93.75988007 187.39479065]
[94.20648956 172.40144348]
[94.20648956 157.40144348]
[93.75988007 142.40809631]
[93.31327820 127.41474152]
[92.86666870 112.42139435]
[85.68240356 100.42647552]
[92.13998413 88.02521515]
[83.17777252 100.05346680]
[69.17309570 105.42646790]
[54.46546555 102.47933960]
[43.61219406 92.12528992]
[39.97628403 77.57261658]
[44.68436432 63.33063889]
[56.27758408 53.81238174]
[71.16365814 51.96718216]
[84.72998047 58.36679077]
[92.77293396 71.02847290]
[94.33345795 56.10987091]
[95.89398193 41.19126511]
[83.57592773 32.12414169]
[77.49038696 18.20067024]
[79.17995453 3.20027876]
[88.09136963 -8.85968590]
[101.75079346 -14.79985714]
[103.31131744 -29.71846199]
[104.87184143 -44.63706589]
[96.98548889 -61.27698898]
[107.83971405 -75.06658173]
[109.17794800 -90.00675964]
[110.51618195 -104.94694519]
[111.85441589 -119.88713074]
[113.19264984 -134.82731628]
[98.49180603 -137.89352417]
[84.24633789 -142.64569092]
[70.64889526 -149.01956177]
[57.88338089 -156.92893982]
[46.12242889 -166.26684570]
[35.52508926 -176.90699768]
[26.23467827 -188.70550537]
[18.37684441 -201.50280762]
[12.05784988 -215.12583923]
[7.36315489 -229.39035034]
[4.35624886 -244.10343933]
[3.07779741 -259.06613159]
[3.54508948 -274.07604980]
[5.75180578 -288.93026733]
[9.66810322 -303.42779541]
[15.24101830 -317.37268066]
[22.39518356 -330.57623291]
[31.03384590 -342.85998535]
[41.04018021 -354.05773926]
[52.27885818 -364.01809692]
[64.59789276 -372.60632324]
[77.83068085 -379.70632935]
[91.79827118 -385.22201538]
[106.31175232 -389.07885742]
[121.17486572 -391.22467041]
[136.18658447 -391.63046265]
[151.14390564 -390.29067993]
[165.84455872 -387.22351074]
[180.08970642 -382.47036743]
[193.68672180 -376.09558105]
[206.45170593 -368.18536377]
[218.21203613 -358.84667969]
[228.80867004 -348.20581055]
[238.09828186 -336.40667725]
[245.95526123 -323.60885620]
[252.27334595 -309.98541260]
[256.96710205 -295.72058105]
[259.97302246 -281.00729370]
[261.25048828 -266.04452515]
[260.78216553 -251.03462219]
[258.57446289 -236.18057251]
[254.65721130 -221.68328857]
[249.08335876 -207.73880005]
[241.92831421 -194.53569031]
[233.28883362 -182.25253296]
[223.28175354 -171.05545044]
[212.04240417 -161.09584045]
[199.72279358 -152.50842285]
[186.48953247 -145.40931702]
[172.52157593 -139.89454651]
[158.00784302 -136.03866577]
[143.14459229 -133.89384460]
[128.13284302 -133.48908997]
[126.79460144 -118.54889679]
[125.45636749 -103.60871124]
[124.11813354 -88.66852570]
[122.77989960 -73.72834778]
[130.29301453 -64.24784851]
[129.30036926 -51.78998184]
[119.79044342 -43.07654190]
[118.22991943 -28.15793800]
[116.66939545 -13.23933411]
[128.80387878 -4.60105610]
[135.02670288 9.04198551]
[133.57550049 24.06731033]
[124.74035645 36.43004227]
[110.81259155 42.75178909]
[109.25206757 57.67039490]
[107.69154358 72.58899689]
[107.13333130 87.57860565]
[114.31759644 99.57352448]
[107.86001587 111.97478485]
[108.30662537 126.96813965]
[108.75322723 141.96148682]
[109.19983673 156.95483398]
[111.61197662 160.56530762]
[112.64576721 164.37265015]
[112.40857697 167.91935730]
[111.14531708 170.82981873]
[109.19983673 172.84805298]
[108.75322723 187.84140015]
[116.07621765 201.86581421]
[107.96340942 214.35708618]
[107.51679993 229.35043335]
[107.07019806 244.34378052]
[114.39318848 258.36819458]
[106.28038025 270.85946655]
[105.83377075 285.85281372]
[105.38716125 300.84616089]
[104.94055939 315.83950806]
[104.49394989 330.83285522]
[119.41240692 332.46984863]
[134.15365601 335.28692627]
[148.62446594 339.26632690]
[162.73336792 344.38284302]
[176.39117432 350.60415649]
[189.51150513 357.89093018]
[202.01141357 366.19708252]
[213.81188965 375.47009277]
[224.83831787 385.65136719]
[235.02096558 396.67648315]
[244.29548645 408.47579956]
[252.60321045 420.97467041]
[259.89163208 434.09408569]
[266.11468506 447.75106812]
[271.23300171 461.85934448]
[275.21420288 476.32965088]
[278.03317261 491.07052612]
[279.67202759 505.98880005]
[280.12045288 520.99011230]
[279.37557983 535.97961426]
[277.44216919 550.86254883]
[274.33236694 565.54479980]
[270.06591797 579.93359375]
[264.66973877 593.93792725]
[258.17797852 607.46929932]
[250.63163757 620.44207764]
[242.07847595 632.77429199]
[232.57254028 644.38793945]
[222.17395020 655.20965576]
[210.94842529 665.17095947]
[198.96696472 674.20892334]
[186.30531311 682.26635742]
[173.04350281 689.29235840]
[159.26539612 695.24249268]
[145.05812073 700.07916260]
[130.51145935 703.77172852]
[115.71742249 706.29687500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 173]
[41 172]
[42 171]
[43 170]
[44 169]
[46 167]
[47 166]
[48 165]
[50 163]
[51 162]
[52 157]
[53 156]
[54 155]
[55 154]
[57 152]
[67 151]
[68 150]
[69 149]
[74 144]
[75 143]
[76 142]
[78 139]
[79 138]
[80 137]
[81 136]
[82 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
