%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[37.26945114 426.12078857]
[35.97924042 441.24359131]
[29.30964661 454.87741089]
[18.16267967 465.17837524]
[4.04587221 470.75332642]
[-11.13159180 470.84832764]
[-25.31708527 465.45053101]
[-36.59213638 455.28994751]
[-43.43188858 441.74069214]
[-44.91131973 426.63522339]
[-40.83034897 412.01638794]
[-31.74089622 399.86129761]
[-18.87223244 391.81381226]
[-3.96474075 388.96228027]
[-1.29894531 374.20108032]
[1.36685014 359.43984985]
[4.03264570 344.67864990]
[-4.72308493 335.22525024]
[-6.46124983 322.26141357]
[-0.32520062 310.49029541]
[11.64363098 304.31277466]
[9.84543514 297.14422607]
[14.68299389 289.39593506]
[17.78710365 274.72064209]
[20.89121437 260.04534912]
[19.47693253 257.62503052]
[18.93615723 254.49864197]
[19.54261208 250.99613953]
[21.44565582 247.54026794]
[24.64166641 244.60096741]
[28.61376190 230.13644409]
[32.58585739 215.67192078]
[36.55795288 201.20739746]
[26.19618225 212.05331421]
[12.90457821 219.00552368]
[-1.91416550 221.33035278]
[-16.69618988 218.78245544]
[-29.88151360 211.63073730]
[-40.07865906 200.62989807]
[-46.21149063 186.94091797]
[-47.63280487 172.00840759]
[-44.19260406 157.40823364]
[-36.25393677 144.68119812]
[-24.65459633 135.17039490]
[-10.61868382 129.87954712]
[4.37255669 129.36698914]
[18.73706245 133.68681335]
[30.95891571 142.38316345]
[39.74831009 154.53825378]
[44.17768478 168.86936951]
[43.77956009 183.86427307]
[51.24729919 170.85531616]
[58.71504211 157.84637451]
[66.18278503 144.83741760]
[73.65052032 131.82846069]
[81.02120972 118.76427460]
[88.29444122 105.64558411]
[95.17385864 92.31615448]
[101.65335083 78.78781128]
[108.13285065 65.25946045]
[114.61234283 51.73111725]
[121.09184265 38.20277023]
[127.57133484 24.67442703]
[134.05082703 11.14608097]
[140.53031921 -2.38226485]
[129.10008240 -12.22019005]
[120.61253357 -24.67197418]
[115.64128113 -38.88543701]
[114.51953125 -53.88971710]
[117.31775665 -68.66156769]
[123.83931732 -82.19516754]
[133.63424683 -93.57057953]
[146.03028870 -102.01629639]
[160.17910767 -106.96157074]
[175.11419678 -108.07497406]
[189.81707764 -105.28658295]
[196.29656982 -118.81493378]
[202.77606201 -132.34327698]
[209.25555420 -145.87162781]
[215.73506165 -159.39996338]
[221.50108337 -173.24745178]
[218.84707642 -188.84446716]
[230.40885925 -198.23458862]
[235.44577026 -212.36361694]
[240.48268127 -226.49264526]
[245.51960754 -240.62167358]
[250.55651855 -254.75070190]
[255.59342957 -268.87973022]
[259.56552124 -283.34426880]
[262.45080566 -298.06414795]
[256.08044434 -315.34130859]
[268.12164307 -328.10754395]
[270.78741455 -342.86874390]
[273.45321655 -357.62997437]
[271.58071899 -363.97073364]
[272.98129272 -369.47851562]
[276.42440796 -372.78817749]
[279.52853394 -387.46347046]
[282.63262939 -402.13879395]
[285.73675537 -416.81408691]
[272.15930176 -423.36517334]
[260.54464722 -432.97573853]
[251.56797791 -445.08700562]
[245.75125122 -458.99490356]
[243.43260193 -473.89077759]
[244.74685669 -488.90863037]
[249.61758423 -503.17535400]
[257.76162720 -515.86151123]
[268.70547485 -526.22949219]
[281.81292725 -533.67657471]
[296.32186890 -537.76971436]
[311.38876343 -538.27105713]
[326.13769531 -535.15136719]
[339.71118164 -528.59204102]
[351.32000732 -518.97448730]
[360.28930664 -506.85772705]
[366.09762573 -492.94635010]
[368.40722656 -478.04904175]
[367.08389282 -463.03198242]
[362.20449829 -448.76821899]
[354.05276489 -436.08703613]
[343.10263062 -425.72567749]
[329.99069214 -418.28656006]
[315.47927856 -414.20217896]
[300.41204834 -413.70999146]
[297.30792236 -399.03466797]
[294.20382690 -384.35937500]
[291.09970093 -369.68408203]
[288.21444702 -354.96417236]
[285.54864502 -340.20297241]
[282.88284302 -325.44174194]
[289.52020264 -315.32876587]
[287.42007446 -303.00912476]
[277.17068481 -295.17889404]
[274.28543091 -280.45898438]
[285.29919434 -290.64215088]
[299.90682983 -294.05047607]
[314.28994751 -289.79302979]
[324.68884277 -278.98269653]
[328.38522339 -264.44528198]
[324.41293335 -249.98080444]
[313.81024170 -239.37026978]
[299.34872437 -235.38725281]
[284.80856323 -239.07287598]
[273.99053955 -249.46374512]
[269.72247314 -263.84283447]
[264.68554688 -249.71379089]
[259.64862061 -235.58476257]
[254.61172485 -221.45573425]
[249.57479858 -207.32670593]
[244.53788757 -193.19767761]
[247.55216980 -178.61126709]
[235.63011169 -168.21054077]
[249.14463806 -174.71882629]
[263.71133423 -171.13951111]
[272.67050171 -159.10899353]
[271.92611694 -144.12747192]
[261.81854248 -133.04429626]
[246.96879578 -130.92654419]
[234.16598511 -138.74241638]
[229.26339722 -152.92047119]
[222.78390503 -139.39212036]
[216.30441284 -125.86377716]
[209.82490540 -112.33543396]
[203.34541321 -98.80709076]
[214.73396301 -89.09880829]
[223.22789001 -76.76390839]
[228.24328613 -62.63980484]
[229.43258667 -47.68728256]
[226.70875549 -32.92512894]
[220.25152588 -19.36071777]
[210.49566650 -7.92127228]
[198.10162354 0.60952258]
[183.91085815 5.64520359]
[168.88870239 6.83684587]
[154.05867004 4.09723091]
[147.57917786 17.62557602]
[141.09968567 31.15392113]
[134.62017822 44.68226624]
[128.14068604 58.21061325]
[121.66119385 71.73896027]
[115.18169403 85.26730347]
[108.70220184 98.79564667]
[109.46767426 101.74582672]
[109.17660522 105.03973389]
[107.69963837 108.28658295]
[105.05355835 111.05326080]
[101.41313934 112.91881561]
[94.13990784 126.03750610]
[92.71573639 135.06022644]
[86.65947723 139.29620361]
[79.19173431 152.30516052]
[71.72399139 165.31410217]
[64.25625610 178.32305908]
[56.78851318 191.33201599]
[51.02247620 205.17950439]
[47.05038071 219.64402771]
[43.07828522 234.10855103]
[39.10618973 248.57307434]
[35.56651688 263.14944458]
[32.46240616 277.82473755]
[29.35829735 292.50006104]
[26.36352158 307.19805908]
[36.38712311 321.53494263]
[33.00710297 338.35430908]
[18.79386330 347.34445190]
[16.12806702 362.10565186]
[13.46227169 376.86688232]
[10.79647636 391.62808228]
[23.76487732 399.51382446]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 209]
[15 208]
[16 207]
[17 206]
[21 203]
[23 202]
[24 201]
[25 200]
[30 199]
[31 198]
[32 197]
[33 196]
[51 195]
[52 194]
[53 193]
[54 192]
[55 191]
[56 189]
[57 188]
[58 183]
[59 182]
[60 181]
[61 180]
[62 179]
[63 178]
[64 177]
[65 176]
[76 165]
[77 164]
[78 163]
[79 162]
[80 161]
[81 153]
[83 151]
[84 150]
[85 149]
[86 148]
[87 147]
[88 146]
[89 135]
[90 134]
[92 131]
[93 130]
[94 129]
[97 128]
[98 127]
[99 126]
[100 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
