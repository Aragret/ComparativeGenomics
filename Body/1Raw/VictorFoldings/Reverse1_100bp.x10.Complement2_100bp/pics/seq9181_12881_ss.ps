%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[12.13066387 664.24670410]
[15.16232586 679.14227295]
[12.25802803 694.06317139]
[3.86065531 706.73413086]
[-8.74925423 715.22283936]
[-23.64878082 718.23492432]
[-38.56585693 715.31097412]
[-51.22573090 706.89697266]
[-59.69787216 694.27587891]
[-62.69033432 679.37243652]
[-59.74679184 664.45922852]
[-51.31611252 651.81042480]
[-38.68391418 643.35485840]
[-23.77651215 640.38201904]
[-20.89123917 625.66210938]
[-18.00596809 610.94226074]
[-15.12069511 596.22235107]
[-21.60673332 586.01165771]
[-19.32343292 573.72467041]
[-8.95860577 566.04791260]
[-5.85449553 551.37255859]
[-15.62203217 537.68194580]
[-12.40231419 520.83117676]
[2.29201293 511.33926392]
[5.17728567 496.61938477]
[8.06255817 481.89947510]
[10.94783115 467.17959595]
[13.83310318 452.45971680]
[8.68839836 438.48181152]
[18.93569756 426.42764282]
[17.06202316 422.03463745]
[17.92811203 416.41796875]
[22.13223839 411.31533813]
[25.45449829 396.68786621]
[28.77675819 382.06042480]
[32.09901810 367.43295288]
[27.37276649 353.30810547]
[37.97442245 341.56436157]
[41.29668045 326.93688965]
[27.53816223 321.00869751]
[15.09996891 312.65100098]
[4.40652752 302.14721680]
[-4.17694998 289.85400391]
[-10.35693645 276.18923950]
[-13.92162323 261.61764526]
[-14.74818611 246.63517761]
[-12.80700970 231.75199890]
[-8.16275311 217.47515869]
[-0.97219050 204.29135132]
[8.52107620 192.65026855]
[19.99487114 182.94931030]
[33.05937958 175.51997375]
[47.27038956 170.61656189]
[62.14439392 168.40744019]
[77.17504883 168.96928406]
[80.49730682 154.34182739]
[83.81956482 139.71437073]
[87.03283691 125.06258392]
[90.13694763 110.38728333]
[85.98612213 97.03578949]
[95.18775177 86.50860596]
[98.29186249 71.83330536]
[97.00608063 62.78982162]
[101.55297852 56.96337128]
[104.87523651 42.33591080]
[108.19749451 27.70844841]
[107.04650116 18.64682388]
[111.67964172 12.88871384]
[115.21931458 -1.68766153]
[118.75898743 -16.26403618]
[122.29866028 -30.84041214]
[125.83833313 -45.41678619]
[129.37800598 -59.99316406]
[121.09288788 -70.61255646]
[120.44610596 -83.87121582]
[127.44998932 -94.91783142]
[139.35827637 -99.83941650]
[143.11457825 -114.36147308]
[146.87088013 -128.88352966]
[142.83595276 -144.18156433]
[153.51388550 -154.56573486]
[157.27018738 -169.08779907]
[161.02648926 -183.60986328]
[164.78279114 -198.13191223]
[157.02333069 -211.63853455]
[161.03962708 -226.31245422]
[173.96392822 -233.62667847]
[177.72023010 -248.14874268]
[181.47653198 -262.67080688]
[185.23283386 -277.19287109]
[188.98912048 -291.71490479]
[192.74542236 -306.23696899]
[196.50172424 -320.75903320]
[200.14981079 -335.30865479]
[203.68948364 -349.88504028]
[205.69349670 -364.75054932]
[206.14010620 -379.74389648]
[206.58671570 -394.73724365]
[207.03332520 -409.73062134]
[193.15460205 -415.93136597]
[182.70889282 -426.97473145]
[177.28910828 -441.17663574]
[177.72171021 -456.37142944]
[183.94073486 -470.24197388]
[194.99781799 -480.67315674]
[209.20684814 -486.07424927]
[224.40104675 -485.62167358]
[238.26341248 -479.38439941]
[248.68002319 -468.31359863]
[254.06242371 -454.09747314]
[253.58984375 -438.90386963]
[247.33435059 -425.04974365]
[236.24986267 -414.64770508]
[222.02667236 -409.28399658]
[221.58006287 -394.29064941]
[221.13345337 -379.29730225]
[220.68685913 -364.30395508]
[228.68750000 -376.99212646]
[240.89016724 -385.71536255]
[255.48463440 -389.17965698]
[270.30593872 -386.87109375]
[283.15536499 -379.13211060]
[292.12683105 -367.11077881]
[295.88946533 -352.59033203]
[293.88510132 -337.72485352]
[286.41104126 -324.71954346]
[274.57604980 -315.50360107]
[260.13580322 -311.44424438]
[245.23236084 -313.14358521]
[232.07659912 -320.34954834]
[222.62010193 -331.99319458]
[218.26586914 -346.34536743]
[214.72619629 -331.76898193]
[216.20249939 -324.52728271]
[211.02378845 -317.00274658]
[207.26748657 -302.48068237]
[203.51118469 -287.95861816]
[199.75488281 -273.43655396]
[195.99858093 -258.91448975]
[192.24227905 -244.39244080]
[188.48597717 -229.87037659]
[196.24278259 -217.20674133]
[192.64022827 -202.42579651]
[179.30485535 -194.37562561]
[175.54855347 -179.85356140]
[171.79225159 -165.33149719]
[168.03594971 -150.80944824]
[172.33955383 -136.55012512]
[161.39294434 -125.12723541]
[157.63664246 -110.60517120]
[153.88034058 -96.08311462]
[163.02680969 -81.96997070]
[159.05787659 -65.27978516]
[143.95437622 -56.45349121]
[140.41470337 -41.87711334]
[136.87503052 -27.30073929]
[133.33535767 -12.72436428]
[129.79568481 1.85201097]
[126.25601196 16.42838669]
[122.82495117 31.03070831]
[119.50269318 45.65816879]
[116.18043518 60.28562927]
[112.96716309 74.93741608]
[109.86305237 89.61271667]
[114.01387787 102.96421051]
[104.81224823 113.49139404]
[101.70813751 128.16668701]
[102.99391937 137.21017456]
[98.44702148 143.03663635]
[95.12476349 157.66409302]
[91.80250549 172.29154968]
[105.60119629 178.27755737]
[118.06164551 186.69500732]
[128.76029968 197.25602722]
[137.33381653 209.59989929]
[143.49142456 223.30538940]
[147.02474976 237.90513611]
[147.81488037 252.90155029]
[145.83638000 267.78384399]
[141.15806580 282.04534912]
[133.94067383 295.20086670]
[124.43128204 306.80297852]
[112.95489502 316.45758057]
[99.90329742 323.83691406]
[85.72170258 328.69094849]
[70.89358521 330.85580444]
[55.92414093 330.25915527]
[52.60187912 344.88659668]
[57.09049988 360.05773926]
[46.72647858 370.75521851]
[43.40421677 385.38269043]
[40.08195877 400.01013184]
[36.75969696 414.63760376]
[33.65559006 429.31289673]
[38.59391785 444.34365845]
[28.55299377 455.34497070]
[25.66772270 470.06488037]
[22.78244972 484.78475952]
[19.89717674 499.50463867]
[17.01190376 514.22454834]
[25.76293564 524.46337891]
[27.00110245 537.67993164]
[20.49746704 549.02825928]
[8.82080650 554.47668457]
[5.71669674 569.15197754]
[11.82911873 586.52209473]
[-0.40080339 599.10760498]
[-3.28607607 613.82751465]
[-6.17134857 628.54742432]
[-9.05662155 643.26727295]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 210]
[15 209]
[16 208]
[17 207]
[20 205]
[21 204]
[24 200]
[25 199]
[26 198]
[27 197]
[28 196]
[30 194]
[33 193]
[34 192]
[35 191]
[36 190]
[38 188]
[39 187]
[55 171]
[56 170]
[57 169]
[58 167]
[59 166]
[61 164]
[62 163]
[64 162]
[65 161]
[66 160]
[68 159]
[69 158]
[70 157]
[71 156]
[72 155]
[73 154]
[77 151]
[78 150]
[79 149]
[81 147]
[82 146]
[83 145]
[84 144]
[87 141]
[88 140]
[89 139]
[90 138]
[91 137]
[92 136]
[93 135]
[94 133]
[95 132]
[96 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
