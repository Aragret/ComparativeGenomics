%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[44.89015961 545.06152344]
[35.59602356 556.87969971]
[24.48333931 567.00677490]
[11.85526943 575.16656494]
[-1.94368291 581.13635254]
[-16.53707314 584.75341797]
[-31.52678108 585.91894531]
[-46.50387955 584.60119629]
[-61.05978012 580.83612061]
[-74.79738617 574.72650146]
[-87.34192657 566.43890381]
[-98.35118103 556.19946289]
[-107.52480316 544.28747559]
[-114.61253357 531.02801514]
[-119.42101288 516.78271484]
[-121.81906128 501.94024658]
[-121.74126434 486.90548706]
[-119.18973541 472.08862305]
[-114.23407745 457.89385986]
[-107.00950623 444.70843506]
[-97.71308899 432.89205933]
[-86.59845734 422.76708984]
[-73.96881866 414.60977173]
[-60.16871262 408.64260864]
[-45.57462692 405.02841187]
[-30.58469391 403.86575317]
[-15.60785103 405.18637085]
[-11.85155010 390.66430664]
[-8.09524918 376.14224243]
[-4.33894873 361.62017822]
[-0.69086093 347.07055664]
[2.84881163 332.49417114]
[6.38848400 317.91781616]
[9.92815685 303.34143066]
[13.46782875 288.76504517]
[3.31708956 299.80871582]
[-9.96663857 306.77597046]
[-24.82279778 308.84829712]
[-39.50609970 305.78225708]
[-52.29156494 297.93801880]
[-61.67717361 286.23715210]
[-66.56030273 272.05422974]
[-66.36730194 257.05548096]
[-61.12083817 243.00291443]
[-51.43725586 231.54742432]
[-38.45417786 224.03479004]
[-23.69684601 221.34757996]
[-8.89892960 223.80149841]
[4.20112228 231.10826111]
[14.06432915 242.40945435]
[19.53197289 256.37744141]
[19.96149254 271.37283325]
[26.84090614 258.04342651]
[33.72031784 244.71398926]
[40.59973145 231.38455200]
[46.87709045 217.76124573]
[52.53987885 203.87121582]
[58.20266342 189.98118591]
[63.86545181 176.09115601]
[69.52823639 162.20112610]
[75.19102478 148.31111145]
[80.43774414 134.25863647]
[77.20661926 119.71871948]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[101.65103912 71.82990265]
[106.47703552 57.62744522]
[111.30303955 43.42499161]
[116.12903595 29.22253418]
[119.34230804 14.57074738]
[120.90283203 -0.34785742]
[122.46335602 -15.26646233]
[124.02388000 -30.18506622]
[125.58439636 -45.10367203]
[117.69805145 -61.74359512]
[128.55227661 -75.53318024]
[129.89050293 -90.47336578]
[130.78332520 -105.44677734]
[131.22993469 -120.44012451]
[131.67652893 -135.43347168]
[132.12313843 -150.42681885]
[117.45384979 -161.08372498]
[112.16460419 -178.26229858]
[118.19281769 -195.02868652]
[132.94712830 -204.73341370]
[132.94712830 -219.73341370]
[132.94712830 -234.73341370]
[129.81771851 -243.31506348]
[133.06045532 -249.95632935]
[133.28378296 -264.95468140]
[133.50711060 -279.95300293]
[133.73043823 -294.95135498]
[133.95376587 -309.94967651]
[133.84210205 -324.94927979]
[133.39549255 -339.94262695]
[132.94889832 -354.93597412]
[132.50228882 -369.92932129]
[118.53873444 -376.09225464]
[108.63854218 -387.70901489]
[104.76741028 -402.47305298]
[107.69393921 -417.45300293]
[116.83708191 -429.67453003]
[130.38145447 -436.71105957]
[145.63780212 -437.16549683]
[159.57698059 -430.94760132]
[169.43133545 -419.29196167]
[173.24430847 -404.51278687]
[170.25880432 -389.54449463]
[161.06761169 -377.35906982]
[147.49563599 -370.37591553]
[147.94224548 -355.38256836]
[148.38885498 -340.38922119]
[148.83544922 -325.39587402]
[151.13726807 -322.72491455]
[152.25973511 -318.80636597]
[151.63056946 -314.20663452]
[148.95210266 -309.72634888]
[148.72877502 -294.72802734]
[148.50544739 -279.72967529]
[148.28211975 -264.73135376]
[148.05879211 -249.73300171]
[147.94712830 -234.73341370]
[147.94712830 -219.73341370]
[147.94712830 -204.73341370]
[158.71781921 -199.13273621]
[166.12904358 -189.42672729]
[168.72558594 -177.42010498]
[165.95471191 -165.37843323]
[158.28244019 -155.60066223]
[147.11648560 -149.98022461]
[146.66989136 -134.98686218]
[146.22328186 -119.99351501]
[145.77667236 -105.00016785]
[147.59858704 -102.86972046]
[148.68637085 -99.88922882]
[148.71203613 -96.33469391]
[147.45346069 -92.59564209]
[144.83068848 -89.13513184]
[143.49246216 -74.19494629]
[151.00556946 -64.71445465]
[150.01293945 -52.25658798]
[140.50300598 -43.54314804]
[138.94247437 -28.62454414]
[137.38195801 -13.70593929]
[135.82144165 1.21266556]
[134.26091003 16.13126945]
[142.99964905 3.93969655]
[155.51234436 -4.33270454]
[170.15272522 -7.59755707]
[184.99459839 -5.42531300]
[198.08526611 1.89823151]
[207.70243835 13.40953827]
[212.58078003 27.59409714]
[212.07849121 42.58568573]
[206.26164246 56.41189957]
[195.89553833 67.25366974]
[182.34402466 73.68456268]
[167.39002991 74.85849762]
[153.00100708 70.62101746]
[141.07009888 61.52963257]
[133.16700745 48.78047180]
[130.33148193 34.04853058]
[125.50549316 48.25098801]
[120.67949677 62.45344543]
[115.85349274 76.65589905]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[106.06089783 129.52340698]
[94.64019775 139.08462524]
[95.63708496 143.31076050]
[95.27384186 147.23919678]
[93.81106567 150.47889709]
[91.60958099 152.76364136]
[89.08105469 153.97389221]
[83.41826630 167.86392212]
[77.75547791 181.75395203]
[72.09268951 195.64396667]
[66.42990875 209.53399658]
[60.76711655 223.42402649]
[74.97702789 218.62001038]
[88.48247528 225.14709473]
[93.54692841 239.26628113]
[87.26924133 252.88945007]
[73.24555206 258.21261597]
[59.50927353 252.18646240]
[53.92916107 238.26397705]
[47.04974747 251.59339905]
[40.17033386 264.92282104]
[33.29092407 278.25225830]
[28.04420471 292.30471802]
[24.50453186 306.88110352]
[20.96485901 321.45748901]
[17.42518616 336.03384399]
[13.88551426 350.61022949]
[14.90146351 359.68798828]
[10.18311024 365.37646484]
[6.42681026 379.89852905]
[2.67050934 394.42059326]
[-1.08579135 408.94265747]
[12.65299225 415.04968262]
[25.19913101 423.33486938]
[36.21035767 433.57217407]
[45.38627625 445.48236084]
[52.47655869 458.74047852]
[57.28778458 472.98483276]
[59.68869019 487.82687378]
[59.61378479 502.86163330]
[57.06510925 517.67901611]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 201]
[28 200]
[29 199]
[30 198]
[31 196]
[32 195]
[33 194]
[34 193]
[35 192]
[52 191]
[53 190]
[54 189]
[55 188]
[56 181]
[57 180]
[58 179]
[59 178]
[60 177]
[61 176]
[62 171]
[64 169]
[66 167]
[67 166]
[68 165]
[69 164]
[70 163]
[71 147]
[72 146]
[73 145]
[74 144]
[75 143]
[77 140]
[78 139]
[79 134]
[80 133]
[81 132]
[82 131]
[86 125]
[87 124]
[88 123]
[90 122]
[91 121]
[92 120]
[93 119]
[94 118]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
