%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[105.70389557 560.14099121]
[101.76452637 575.05694580]
[90.37093353 585.45837402]
[75.15878296 588.02624512]
[60.98220825 581.94116211]
[52.36490631 569.14483643]
[52.05662155 553.72052002]
[60.15573120 540.59014893]
[74.07784271 533.94342041]
[75.86030579 519.04974365]
[77.64276886 504.15600586]
[79.42523956 489.26229858]
[81.20770264 474.36856079]
[82.99017334 459.47485352]
[80.79495239 455.23336792]
[81.24089050 449.56787109]
[85.05385590 444.16668701]
[87.27897644 429.33264160]
[89.50408936 414.49859619]
[91.72920990 399.66455078]
[89.66124725 395.35958862]
[90.27567291 389.70986938]
[94.24776459 384.42459106]
[96.91355896 369.66336060]
[99.57935333 354.90216064]
[101.80447388 340.06811523]
[103.58693695 325.17440796]
[105.36940002 310.28067017]
[107.15187073 295.38696289]
[107.59847260 280.39361572]
[106.70565796 265.42019653]
[105.81284332 250.44679260]
[104.92002869 235.47338867]
[104.02721405 220.49998474]
[93.58836365 206.39334106]
[101.96665192 189.99560547]
[100.85100555 175.03715515]
[99.73535156 160.07868958]
[98.61970520 145.12023926]
[96.94816589 130.21366882]
[94.72304535 115.37962341]
[85.79135132 107.90526581]
[84.14948273 96.37506866]
[90.63981628 86.70465851]
[88.63580322 71.83913422]
[86.63179016 56.97360229]
[82.38391876 48.88698578]
[84.71031189 41.87202072]
[82.92784119 26.97830391]
[67.40864563 24.43001747]
[53.24742126 17.62250519]
[41.58589935 7.11368513]
[33.36172485 -6.24047470]
[29.23305702 -21.35568047]
[29.52591324 -37.00734711]
[34.20843506 -51.92980957]
[42.89412689 -64.91867828]
[54.87374115 -74.92802429]
[69.17319489 -81.15463257]
[67.16918182 -96.02016449]
[64.50338745 -110.78137970]
[61.18112564 -125.40883636]
[57.85886383 -140.03630066]
[45.03821564 -153.25418091]
[50.87875366 -169.80274963]
[47.33908081 -184.37911987]
[43.79941177 -198.95550537]
[40.25973892 -213.53187561]
[36.72006607 -228.10824585]
[30.97868729 -214.25051880]
[19.13806534 -205.04185486]
[4.29330969 -202.88935852]
[-9.67519569 -208.35569763]
[-19.11611748 -220.01197815]
[-21.56162071 -234.81127930]
[-16.37245750 -248.88511658]
[-4.90506268 -258.55459595]
[9.84301472 -261.29214478]
[24.01666260 -256.38220215]
[33.91053009 -245.10896301]
[32.57229233 -260.04913330]
[31.23406029 -274.98931885]
[29.89582634 -289.92950439]
[28.55759239 -304.86968994]
[25.07287025 -310.48825073]
[24.96493721 -316.17028809]
[27.40872192 -320.27355957]
[26.51590538 -335.24697876]
[23.20001411 -340.96679688]
[23.26130676 -346.64950562]
[25.82617760 -350.67822266]
[25.37957191 -365.67156982]
[24.93296432 -380.66491699]
[24.48635864 -395.65826416]
[24.03975296 -410.65161133]
[9.51429176 -414.87844849]
[-2.99293852 -423.38870239]
[-12.25660610 -435.34863281]
[-17.36915207 -449.58651733]
[-17.82969856 -464.70745850]
[-13.59313011 -479.23007202]
[-5.07449961 -491.73159790]
[6.89162350 -500.98724365]
[21.13291931 -506.09027100]
[36.25417328 -506.54067993]
[50.77395630 -502.29437256]
[63.26977158 -493.76736450]
[72.51740265 -481.79504395]
[77.61086273 -467.55032349]
[78.05114746 -452.42877197]
[73.79512024 -437.91183472]
[65.25974274 -425.42175293]
[53.28122711 -416.18215942]
[39.03310394 -411.09823608]
[39.47970963 -396.10488892]
[39.92631531 -381.11154175]
[40.37292099 -366.11819458]
[40.81952667 -351.12481689]
[41.48931122 -336.13980103]
[42.38212967 -321.16638184]
[43.49777603 -306.20794678]
[44.83600998 -291.26776123]
[46.17424393 -276.32757568]
[47.51247787 -261.38739014]
[48.85071182 -246.44718933]
[51.29644012 -231.64791870]
[54.83611298 -217.07154846]
[58.37578583 -202.49517822]
[61.91545868 -187.91879272]
[65.45513153 -173.34242249]
[75.61895752 -166.78321838]
[78.68721008 -154.66836548]
[72.48632812 -143.35855103]
[75.80858612 -128.73109436]
[79.13084412 -114.10363770]
[88.02044678 -126.18564606]
[102.82823181 -128.57925415]
[115.07164001 -119.91328430]
[117.73708344 -105.15200043]
[109.29767609 -92.75134277]
[94.58789062 -89.81496429]
[82.03470612 -98.02417755]
[84.03871918 -83.15864563]
[98.24916077 -81.28501129]
[111.49992371 -75.78842163]
[122.88339233 -67.03857422]
[131.61811829 -55.62820053]
[137.10238647 -42.33295059]
[138.95574951 -28.05867386]
[137.04537964 -13.77966976]
[131.49551392 -0.47221756]
[122.67949677 10.95219326]
[111.19459534 19.70928574]
[97.82156372 25.19583702]
[99.60402679 40.08955383]
[101.49732208 54.96958923]
[103.50133514 69.83512115]
[105.50534821 84.70064545]
[116.09735107 97.70778656]
[109.55709076 113.15451050]
[111.78221130 127.98854828]
[122.66133881 117.66166687]
[137.53852844 119.57721710]
[145.44685364 132.32313538]
[140.55661011 146.50358582]
[126.47268677 151.66529846]
[113.57816315 144.00459290]
[114.69380951 158.96304321]
[115.80945587 173.92149353]
[116.92510223 188.87995911]
[126.17138672 197.87268066]
[126.79266357 210.35456848]
[119.00061798 219.60717773]
[119.89343262 234.58058167]
[120.78624725 249.55398560]
[121.67906189 264.52740479]
[122.57187653 279.50079346]
[129.93620300 266.43301392]
[142.19140625 257.78375244]
[156.97120667 255.22300720]
[171.42185974 259.24526978]
[182.75317383 269.07385254]
[188.77725220 282.81106567]
[188.33091736 297.80441284]
[181.50038147 311.15896606]
[169.60449219 320.29611206]
[154.94015503 323.45166016]
[140.33885193 320.01629639]
[128.61982727 310.65335083]
[122.04558563 297.16943359]
[120.26312256 312.06314087]
[118.48065186 326.95684814]
[116.69818878 341.85058594]
[118.54805756 345.77893066]
[119.00562286 349.69750977]
[118.24493408 353.16976929]
[116.56391144 355.86065674]
[114.34056854 357.56796265]
[111.67477417 372.32916260]
[109.00897980 387.09039307]
[106.56325531 401.88964844]
[104.33813477 416.72369385]
[102.11301422 431.55773926]
[99.88790131 446.39178467]
[97.88388824 461.25732422]
[96.10141754 476.15103149]
[94.31895447 491.04473877]
[92.53649139 505.93847656]
[90.75402069 520.83221436]
[88.97155762 535.72589111]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 210]
[10 209]
[11 208]
[12 207]
[13 206]
[14 205]
[17 204]
[18 203]
[19 202]
[20 201]
[23 200]
[24 199]
[25 198]
[26 193]
[27 192]
[28 191]
[29 190]
[30 177]
[31 176]
[32 175]
[33 174]
[34 173]
[36 170]
[37 169]
[38 168]
[39 167]
[40 161]
[41 160]
[44 158]
[45 157]
[46 156]
[48 155]
[49 154]
[59 143]
[60 142]
[61 135]
[62 134]
[63 133]
[65 130]
[66 129]
[67 128]
[68 127]
[69 126]
[80 125]
[81 124]
[82 123]
[83 122]
[84 121]
[87 120]
[88 119]
[91 118]
[92 117]
[93 116]
[94 115]
[95 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
