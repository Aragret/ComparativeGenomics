%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[157.69314575 432.04241943]
[163.31770325 418.10290527]
[171.05374146 405.21490479]
[180.71076965 393.69586182]
[192.05094910 383.82940674]
[204.79502869 375.85855103]
[198.92607117 362.05435181]
[193.05711365 348.25018311]
[187.18815613 334.44601440]
[172.65626526 331.28967285]
[162.65112305 320.04864502]
[161.16621399 304.89447021]
[168.97958374 291.61828613]
[163.11062622 277.81411743]
[157.24166870 264.00994873]
[144.73504639 260.90930176]
[136.16998291 251.02386475]
[134.84280396 237.81594849]
[141.46096802 226.08502197]
[135.79818726 212.19499207]
[130.13539124 198.30496216]
[124.47261047 184.41493225]
[119.03656769 179.40782166]
[118.83061218 170.27571106]
[113.37525177 156.30291748]
[107.91989899 142.33010864]
[102.55900574 137.24261475]
[102.48903656 128.10845947]
[97.24231720 114.05598450]
[86.58087921 105.01024628]
[88.70520782 91.19073486]
[83.45848846 77.13826752]
[78.21177673 63.08579636]
[60.60479736 58.75542068]
[49.22171021 44.84481812]
[48.47421646 27.04335403]
[58.47301102 12.48671722]
[52.81022644 -1.40331006]
[47.14743805 -15.29333687]
[41.48465347 -29.18336296]
[35.82186508 -43.07339096]
[20.95666313 -40.65850067]
[5.93402767 -41.61179733]
[-8.49282265 -45.88226700]
[-21.60125542 -53.25264359]
[-32.73542786 -63.35049057]
[-41.33909225 -75.66698456]
[-46.98339081 -89.58258820]
[-49.38822556 -104.39817810]
[-48.43616486 -119.37021637]
[-44.17816544 -133.74800110]
[-36.83086014 -146.81138611]
[-26.76553535 -157.90676880]
[-14.48937702 -166.47985840]
[-20.15216446 -180.36988831]
[-32.52674484 -190.22789001]
[-30.16678047 -204.93435669]
[-35.82956696 -218.82437134]
[-41.49235535 -232.71440125]
[-55.78369522 -238.91079712]
[-61.32869720 -253.07792664]
[-55.33331299 -266.66436768]
[-60.99610138 -280.55438232]
[-66.65888977 -294.44439697]
[-72.32167053 -308.33444214]
[-79.12236023 -294.96466064]
[-93.34172058 -290.18872070]
[-106.83425903 -296.74243164]
[-111.87083435 -310.87158203]
[-105.56627655 -324.48233032]
[-91.53211212 -329.77783203]
[-77.80841064 -323.72525024]
[-82.20941162 -338.06509399]
[-86.61040497 -352.40493774]
[-91.01140594 -366.74478149]
[-95.41239929 -381.08462524]
[-99.81340027 -395.42449951]
[-104.21440125 -409.76434326]
[-108.61539459 -424.10418701]
[-123.56281281 -422.40432739]
[-138.56803894 -423.48025513]
[-153.12002563 -427.29528809]
[-166.72312927 -433.71948242]
[-178.91401672 -442.53405762]
[-189.27748108 -453.43878174]
[-197.46057129 -466.06225586]
[-203.18452454 -479.97451782]
[-206.25444031 -494.70169067]
[-206.56570435 -509.74224854]
[-204.10775757 -524.58386230]
[-198.96429443 -538.72100830]
[-191.31051636 -551.67224121]
[-181.40708923 -562.99639893]
[-169.59133911 -572.30780029]
[-156.26568604 -579.28936768]
[-141.88400269 -583.70318604]
[-126.93612671 -585.39898682]
[-111.93118286 -584.31903076]
[-97.38023376 -580.50006104]
[-83.77886963 -574.07220459]
[-71.59034729 -565.25433350]
[-61.22981644 -554.34680176]
[-53.05014420 -541.72113037]
[-47.32992935 -527.80737305]
[-44.26399612 -513.07934570]
[-43.95677185 -498.03872681]
[-46.41872406 -483.19778442]
[-51.56599426 -469.06201172]
[-59.22327042 -456.11282349]
[-69.12974548 -444.79135132]
[-80.94801331 -435.48309326]
[-94.27555084 -428.50518799]
[-89.87454987 -414.16534424]
[-85.47355652 -399.82550049]
[-81.07255554 -385.48562622]
[-76.67155457 -371.14578247]
[-72.27056122 -356.80593872]
[-67.86956024 -342.46609497]
[-63.46856308 -328.12625122]
[-58.43164825 -313.99722290]
[-52.76885986 -300.10720825]
[-47.10607529 -286.21716309]
[-41.44328690 -272.32714844]
[-27.65765762 -266.80517578]
[-21.71691895 -252.79939270]
[-27.60232735 -238.37719727]
[-21.93954086 -224.48716736]
[-16.27675438 -210.59713745]
[-4.30721140 -201.73263550]
[-6.26213646 -186.03268433]
[-0.59935009 -172.14265442]
[14.17161369 -174.59632874]
[29.12542915 -173.70092773]
[43.51193237 -169.49813843]
[56.60869980 -162.19566345]
[67.75733185 -152.15692139]
[76.39654541 -139.88301086]
[82.09043121 -125.98762512]
[84.55045319 -111.16644287]
[83.65005493 -96.16226196]
[79.43119049 -81.72776031]
[72.10235596 -68.58778381]
[62.02830887 -57.40288544]
[49.71189117 -48.73617554]
[55.37467957 -34.84614944]
[61.03746414 -20.95612335]
[66.70024872 -7.06609678]
[72.36303711 6.82393026]
[84.45107269 7.94403791]
[94.97808838 14.13393974]
[101.91522217 24.27185059]
[103.89534760 36.46851349]
[100.48210907 48.41917419]
[92.26424408 57.83907700]
[97.51096344 71.89154816]
[102.75768280 85.94401550]
[113.41912079 94.98975372]
[111.29479218 108.80926514]
[116.54151154 122.86173248]
[121.89269257 136.87475586]
[127.34805298 150.84754944]
[132.80340576 164.82035828]
[138.36264038 178.75215149]
[144.02542114 192.64218140]
[149.68820190 206.53221130]
[155.35099792 220.42222595]
[171.59669495 226.91040039]
[177.99755859 242.82717896]
[171.04583740 258.14096069]
[176.91481018 271.94515991]
[182.78376770 285.74932861]
[197.76565552 289.33392334]
[207.64855957 300.91760254]
[208.80189514 315.92205811]
[200.99232483 328.57705688]
[206.86128235 342.38122559]
[212.73025513 356.18539429]
[218.59921265 369.98959351]
[233.18154907 366.34240723]
[248.15490723 365.02142334]
[263.15057373 366.05917358]
[277.79922485 369.43011475]
[291.74014282 375.05123901]
[304.63006592 382.78408813]
[316.15148926 392.43826294]
[326.02075195 403.77600098]
[333.99478149 416.51809692]
[339.87719727 430.35079956]
[343.52319336 444.93344116]
[344.84292603 459.90689087]
[343.80392456 474.90246582]
[340.43176270 489.55084229]
[334.80950928 503.49133301]
[327.07559204 516.38055420]
[317.42047119 527.90124512]
[306.08193970 537.76953125]
[293.33917236 545.74249268]
[279.50598145 551.62377930]
[264.92303467 555.26855469]
[249.94946289 556.58709717]
[234.95397949 555.54687500]
[220.30587769 552.17352295]
[206.36587524 546.55010986]
[193.47724915 538.81512451]
[181.95741272 529.15905762]
[172.09002686 517.81964111]
[164.11810303 505.07623291]
[158.23794556 491.24258423]
[154.59437561 476.65933228]
[153.27709961 461.68563843]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 178]
[7 177]
[8 176]
[9 175]
[13 171]
[14 170]
[15 169]
[19 166]
[20 165]
[21 164]
[22 163]
[24 162]
[25 161]
[26 160]
[28 159]
[29 158]
[31 156]
[32 155]
[33 154]
[37 148]
[38 147]
[39 146]
[40 145]
[41 144]
[54 131]
[55 130]
[57 128]
[58 127]
[59 126]
[62 123]
[63 122]
[64 121]
[65 120]
[72 119]
[73 118]
[74 117]
[75 116]
[76 115]
[77 114]
[78 113]
[79 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
