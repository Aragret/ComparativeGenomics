%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[203.37979126 509.59988403]
[216.20201111 501.67181396]
[211.58799744 487.39907837]
[206.97398376 473.12634277]
[202.35997009 458.85360718]
[197.74597168 444.58087158]
[192.70904541 430.45184326]
[187.25369263 416.47903442]
[181.79833984 402.50625610]
[176.34298706 388.53344727]
[170.68019104 374.64343262]
[164.81123352 360.83923340]
[158.94227600 347.03506470]
[154.96835327 361.49908447]
[143.87683105 371.59750366]
[129.10453796 374.20123291]
[115.22882843 368.50344849]
[106.54924011 356.26971436]
[105.75524139 341.29074097]
[113.09285736 328.20794678]
[126.28845215 321.07519531]
[141.25321960 322.10260010]
[153.35032654 330.97207642]
[149.37823486 316.50753784]
[145.40614319 302.04302979]
[141.43403625 287.57849121]
[137.46194458 273.11398315]
[133.48985291 258.64944458]
[129.51776123 244.18492126]
[125.88374329 241.08605957]
[124.15783691 235.67141724]
[125.64960480 229.23043823]
[122.10993195 214.65406799]
[118.57025909 200.07769775]
[101.95257568 197.02604675]
[88.29585266 186.98475647]
[80.37632751 171.93501282]
[79.83015442 154.88212585]
[86.81558228 139.25537109]
[99.97139740 128.21842957]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[78.42070770 78.95955658]
[82.51153564 64.63774109]
[78.53943634 50.17321396]
[74.56734467 35.70869064]
[70.59524536 21.24416542]
[66.62315369 6.77964211]
[62.65105438 -7.68488216]
[49.19729614 -15.53562450]
[45.37508011 -30.26129341]
[52.94247437 -43.03901291]
[48.97037506 -57.50353622]
[44.99827957 -71.96806335]
[39.43905640 -85.89985657]
[26.10604477 -94.41698456]
[26.92321968 -109.28915405]
[19.84611511 -122.51468658]
[12.76900959 -135.74020386]
[5.69190407 -148.96574402]
[-1.38520157 -162.19126892]
[-14.71821213 -170.70838928]
[-13.90103626 -185.58056641]
[-27.91361618 -180.17434692]
[-42.48436356 -176.53112793]
[-57.39238358 -174.70614624]
[-72.41167450 -174.72706604]
[-87.31455231 -176.59356689]
[-101.87509155 -180.27735901]
[-115.87255859 -185.72259521]
[-129.09475708 -192.84672546]
[-141.34123230 -201.54173279]
[-152.42634583 -211.67584229]
[-162.18203735 -223.09538269]
[-170.46041870 -235.62727356]
[-177.13598633 -249.08149719]
[-182.10755920 -263.25411987]
[-185.29974365 -277.93026733]
[-186.66415405 -292.88748169]
[-186.18011475 -307.89898682]
[-183.85496521 -322.73721313]
[-179.72395325 -337.17724609]
[-173.84968567 -351.00015259]
[-166.32122803 -363.99639893]
[-157.25271606 -375.96893311]
[-146.78163147 -386.73626709]
[-135.06669617 -396.13519287]
[-122.28549957 -404.02322388]
[-108.63182068 -410.28076172]
[-94.31263733 -414.81292725]
[-79.54502869 -417.55105591]
[-64.55286407 -418.45361328]
[-49.56342316 -417.50692749]
[-34.80393982 -414.72531128]
[-20.49816322 -410.15100098]
[-6.86296797 -403.85330200]
[5.89494085 -395.92767334]
[17.58215714 -386.49429321]
[28.02150345 -375.69616699]
[37.05472565 -363.69699097]
[44.54487991 -350.67864990]
[50.37841415 -336.83850098]
[54.46689987 -322.38638306]
[56.74835587 -307.54135132]
[57.18819046 -292.52850342]
[55.77974319 -277.57537842]
[52.54435730 -262.90869141]
[47.53108978 -248.75076294]
[40.81593323 -235.31623840]
[32.50069046 -222.80879211]
[22.71141624 -211.41801453]
[11.59651756 -201.31658936]
[-0.67550874 -192.65766907]
[12.15129948 -185.08651733]
[11.84032631 -169.26837158]
[18.91743088 -156.04284668]
[25.99453735 -142.81732178]
[33.07164383 -129.59178162]
[40.14874649 -116.36626434]
[52.97555542 -108.79511261]
[52.66458130 -92.97696686]
[53.05963516 -107.97176361]
[58.77744675 -121.83922577]
[69.06573486 -132.75486755]
[82.57090759 -139.28251648]
[97.51612091 -140.56338501]
[111.93507385 -136.42892456]
[123.93070984 -127.42311096]
[131.92478943 -114.73081207]
[134.86557007 -100.02190399]
[132.36611938 -85.23161316]
[124.75530243 -72.30584717]
[113.03443909 -62.94521713]
[98.74562073 -58.38127518]
[83.76877594 -59.21448135]
[70.07437897 -65.33522034]
[59.46280289 -75.94015503]
[63.43490219 -61.47563171]
[67.40699768 -47.01110840]
[80.43876648 -39.89011765]
[84.67308807 -25.27761650]
[77.11557770 -11.65697861]
[81.08767700 2.80754566]
[85.05976868 17.27206993]
[89.03186798 31.73659325]
[93.00395966 46.20111847]
[96.97605896 60.66564178]
[107.80741119 70.88968658]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[114.43592072 124.24633026]
[127.57104492 125.68514252]
[139.40682983 131.48796082]
[148.54408264 140.94462585]
[153.91082764 152.91445923]
[154.88810730 165.96386719]
[151.38124084 178.53800964]
[143.82853699 189.14607239]
[133.14663696 196.53802490]
[136.68630981 211.11439514]
[140.22598267 225.69076538]
[143.98228455 240.21282959]
[147.95437622 254.67735291]
[151.92646790 269.14187622]
[155.89855957 283.60641479]
[159.87066650 298.07092285]
[163.84275818 312.53546143]
[167.81484985 326.99996948]
[172.74644470 341.16610718]
[178.61541748 354.97027588]
[184.48437500 368.77447510]
[189.52841187 373.04870605]
[191.37890625 378.42202759]
[190.31578064 383.07809448]
[195.77113342 397.05090332]
[201.22648621 411.02368164]
[206.68185425 424.99649048]
[210.16630554 427.58734131]
[212.41854858 430.82647705]
[213.38609314 434.24688721]
[213.17350769 437.41253662]
[212.01870728 439.96685791]
[216.63270569 454.23959351]
[221.24671936 468.51232910]
[225.86073303 482.78506470]
[230.47473145 497.05780029]
[245.51139832 495.97979736]
[260.36898804 498.53231812]
[274.18371582 504.56698608]
[286.15237427 513.73291016]
[295.57916260 525.49725342]
[301.91601562 539.17596436]
[304.79446411 553.97387695]
[304.04724121 569.03057861]
[299.71771240 583.47076416]
[292.05764771 596.45489502]
[281.51235962 607.22802734]
[268.69494629 615.16381836]
[254.35060120 619.80102539]
[239.31327820 620.86987305]
[224.45724487 618.30834961]
[210.64619446 612.26531982]
[198.68307495 603.09210205]
[189.26342773 591.32208252]
[182.93489075 577.63952637]
[180.06538391 562.83990479]
[180.82176208 547.78363037]
[185.16003418 533.34606934]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 188]
[3 187]
[4 186]
[5 185]
[6 184]
[7 179]
[8 178]
[9 177]
[10 176]
[11 173]
[12 172]
[13 171]
[23 170]
[24 169]
[25 168]
[26 167]
[27 166]
[28 165]
[29 164]
[32 163]
[33 162]
[34 161]
[40 153]
[41 152]
[43 150]
[45 148]
[46 147]
[47 146]
[48 145]
[49 144]
[50 143]
[53 140]
[54 139]
[55 138]
[56 122]
[58 120]
[59 119]
[60 118]
[61 117]
[62 116]
[64 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
