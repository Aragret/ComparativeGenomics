%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[136.91497803 462.03967285]
[142.52400208 448.04675293]
[151.31933594 435.80316162]
[162.78962708 426.02072144]
[176.26802063 419.26821899]
[172.94577026 404.64077759]
[169.62350464 390.01330566]
[166.30125427 375.38583374]
[162.97898865 360.75839233]
[159.65672302 346.13092041]
[156.16471863 342.87289429]
[154.68231201 337.38656616]
[156.46018982 331.01864624]
[153.57492065 316.29873657]
[150.68963623 301.57885742]
[140.82882690 294.57235718]
[138.30459595 282.33258057]
[145.00430298 271.31094360]
[142.33851624 256.54971313]
[139.56289673 241.80876160]
[136.67762756 227.08886719]
[133.79235840 212.36897278]
[130.39889526 209.00840759]
[129.08049011 203.48039246]
[131.04718018 197.16821289]
[128.60145569 182.36894226]
[126.15573120 167.56967163]
[123.70999908 152.77040100]
[118.04721069 138.88037109]
[109.44864655 126.58953857]
[100.85008240 114.29869843]
[88.26311493 108.21102142]
[86.85907745 94.29986572]
[78.26051331 82.00902557]
[69.66194916 69.71819305]
[52.79999924 62.31844711]
[51.96094894 44.78952789]
[43.18034744 32.62807465]
[34.39974594 20.46661758]
[25.61914062 8.30516148]
[11.26776218 1.64569378]
[10.09067631 -13.20232773]
[1.31007349 -25.36378288]
[-14.03987217 -28.01273346]
[-22.77140808 -40.47126389]
[-20.15144157 -55.08876419]
[-28.93204498 -67.25022125]
[-37.71264648 -79.41167450]
[-46.49325180 -91.57313538]
[-60.84463120 -98.23259735]
[-62.02171707 -113.08061981]
[-76.37309265 -119.74008942]
[-77.55017853 -134.58810425]
[-86.33078003 -146.74957275]
[-95.11138916 -158.91102600]
[-103.89199066 -171.07247925]
[-112.67259216 -183.23393250]
[-121.45319366 -195.39538574]
[-134.56634521 -188.07678223]
[-148.44047546 -182.33004761]
[-162.88795471 -178.23289490]
[-177.71340942 -175.84072876]
[-192.71633911 -175.18591309]
[-207.69383240 -176.27728271]
[-222.44334412 -179.10009766]
[-236.76541138 -183.61616516]
[-250.46633911 -189.76443481]
[-263.36083984 -197.46174622]
[-275.27453613 -206.60398865]
[-286.04626465 -217.06753540]
[-295.53042603 -228.71087646]
[-303.59869385 -241.37657166]
[-310.14196777 -254.89329529]
[-315.07180786 -269.07827759]
[-318.32147217 -283.73965454]
[-319.84704590 -298.67916870]
[-319.62789917 -313.69476318]
[-317.66699219 -328.58340454]
[-313.99084473 -343.14370728]
[-308.64916992 -357.17877197]
[-301.71420288 -370.49877930]
[-293.27975464 -382.92361450]
[-283.45983887 -394.28521729]
[-272.38732910 -404.42996216]
[-260.21191406 -413.22064209]
[-247.09828186 -420.53836060]
[-233.22377014 -426.28417969]
[-218.77601624 -430.38037109]
[-203.95040894 -432.77154541]
[-188.94743347 -433.42538452]
[-173.97001648 -432.33300781]
[-159.22068787 -429.50921631]
[-144.89891052 -424.99218750]
[-131.19839478 -418.84298706]
[-118.30442047 -411.14483643]
[-106.39134216 -402.00180054]
[-95.62029266 -391.53750610]
[-86.13692474 -379.89352417]
[-78.06949615 -367.22732544]
[-71.52710724 -353.71014404]
[-66.59824371 -339.52484131]
[-63.34954834 -324.86325073]
[-61.82497025 -309.92364502]
[-62.04512024 -294.90805054]
[-64.00701904 -280.01953125]
[-67.68414307 -265.45947266]
[-73.02675629 -251.42477417]
[-79.96260071 -238.10522461]
[-88.39788818 -225.68095398]
[-98.21854401 -214.31999207]
[-109.29174042 -204.17599487]
[-100.51113892 -192.01454163]
[-91.73052979 -179.85308838]
[-82.94992828 -167.69161987]
[-74.16932678 -155.53016663]
[-65.38872528 -143.36871338]
[-51.66539383 -137.57911682]
[-49.86026001 -121.86122131]
[-36.13692856 -116.07162476]
[-34.33179474 -100.35373688]
[-25.55119133 -88.19227600]
[-16.77058983 -76.03082275]
[-7.98998594 -63.86936951]
[6.70937586 -61.75646591]
[15.78740120 -49.54810333]
[13.47152901 -34.14438629]
[22.25213242 -21.98293114]
[35.97546387 -16.19333076]
[37.78059769 -0.47544134]
[46.56119919 11.68601418]
[55.34180450 23.84746933]
[64.12240601 36.00892639]
[76.01035309 38.24571991]
[83.42514801 48.30576706]
[81.95278931 61.11962509]
[90.55135345 73.41046143]
[99.14991760 85.70130157]
[111.73688507 91.78897858]
[113.14092255 105.70013428]
[121.73948669 117.99097443]
[130.33805847 130.28181458]
[128.09159851 115.45098114]
[128.74130249 100.46505737]
[132.26287842 85.88430023]
[138.52465820 72.25381470]
[147.29255676 60.08319855]
[158.23876953 49.82744598]
[170.95405579 41.86998367]
[184.96307373 36.50830460]
[199.74206543 33.94285965]
[214.73851013 34.26955795]
[229.39173889 37.47619247]
[243.15396118 43.44287109]
[255.51065063 51.94653320]
[265.99984741 62.66925812]
[274.22940063 75.21016693]
[279.89163208 89.10041809]
[282.77487183 103.82070923]
[282.77133179 118.82070923]
[279.88113403 133.53962708]
[274.21234131 147.42720032]
[265.97683716 159.96421814]
[255.48258972 170.68199158]
[243.12188721 179.17980957]
[229.35684204 185.13998413]
[214.70208740 188.33969116]
[199.70549011 188.65930176]
[184.92771912 186.08686829]
[170.92123413 180.71856689]
[158.20970154 172.75509644]
[147.26834106 162.49417114]
[138.50927734 150.32467651]
[140.95500183 165.12394714]
[143.40072632 179.92321777]
[145.84645081 194.72248840]
[148.51225281 209.48370361]
[151.39752197 224.20359802]
[154.28279114 238.92349243]
[159.00445557 246.74293518]
[157.09973145 253.88392639]
[159.76553345 268.64514160]
[171.98318481 282.42230225]
[165.40953064 298.69357300]
[168.29479980 313.41348267]
[171.18008423 328.13336182]
[174.28419495 342.80865479]
[177.60644531 357.43612671]
[180.92871094 372.06359863]
[184.25096130 386.69104004]
[187.57322693 401.31851196]
[190.89549255 415.94595337]
[205.96836853 416.21377563]
[220.53898621 420.08163452]
[233.76022339 427.32473755]
[244.86343384 437.52191162]
[253.20306396 450.08032227]
[258.29428101 464.26986694]
[259.84106445 479.26556396]
[257.75350952 494.19558716]
[252.15295410 508.19192505]
[243.36503601 520.44085693]
[231.90068054 530.23022461]
[218.42637634 536.99090576]
[203.72552490 540.32983398]
[188.65281677 540.05285645]
[174.08454895 536.17614746]
[160.86769104 528.92504883]
[149.77067566 518.72119141]
[141.43865967 506.15768433]
[136.35606384 491.96505737]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 191]
[6 190]
[7 189]
[8 188]
[9 187]
[10 186]
[13 185]
[14 184]
[15 183]
[18 181]
[19 180]
[20 178]
[21 177]
[22 176]
[25 175]
[26 174]
[27 173]
[28 172]
[29 141]
[30 140]
[31 139]
[33 137]
[34 136]
[35 135]
[37 132]
[38 131]
[39 130]
[40 129]
[42 127]
[43 126]
[46 123]
[47 122]
[48 121]
[49 120]
[51 118]
[53 116]
[54 115]
[55 114]
[56 113]
[57 112]
[58 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
