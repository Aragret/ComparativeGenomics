%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[58.66024399 868.92968750]
[43.66830063 869.53765869]
[28.66636658 869.27294922]
[13.70520973 868.13635254]
[-1.16454840 866.13177490]
[-15.89259243 863.26599121]
[-30.42908669 859.54864502]
[-44.72484589 854.99243164]
[-58.73149490 849.61267090]
[-72.40164185 843.42755127]
[-85.68903351 836.45812988]
[-98.54869843 828.72784424]
[-110.93713379 820.26293945]
[-122.81241608 811.09204102]
[-134.13436890 801.24615479]
[-144.86466980 790.75860596]
[-154.96702576 779.66485596]
[-164.40724182 768.00250244]
[-173.15338135 755.81103516]
[-181.17585754 743.13159180]
[-188.44749451 730.00714111]
[-194.94372559 716.48205566]
[-200.64254761 702.60217285]
[-205.52467346 688.41442871]
[-209.57359314 673.96673584]
[-212.77561951 659.30816650]
[-215.11988831 644.48815918]
[-216.59849548 629.55688477]
[-217.20640564 614.56494141]
[-216.94160461 599.56304932]
[-215.80494690 584.60186768]
[-213.80030823 569.73211670]
[-210.93444824 555.00408936]
[-207.21707153 540.46759033]
[-202.66078186 526.17187500]
[-197.28096008 512.16522217]
[-191.09582520 498.49511719]
[-184.12631226 485.20776367]
[-176.39599609 472.34811401]
[-167.93103027 459.95971680]
[-158.76005554 448.08447266]
[-148.91412354 436.76257324]
[-138.42654419 426.03231812]
[-127.33277893 415.92999268]
[-115.67039490 406.48983765]
[-103.47883606 397.74374390]
[-90.79936981 389.72134399]
[-77.67488861 382.44973755]
[-64.14981079 375.95355225]
[-50.26988983 370.25479126]
[-36.08209610 365.37274170]
[-21.63444138 361.32385254]
[-6.97580814 358.12191772]
[7.84420300 355.77770996]
[22.77544594 354.29916382]
[37.76739502 353.69128418]
[52.76932526 353.95617676]
[67.73047638 355.09289551]
[69.73448944 340.22735596]
[71.73850250 325.36184692]
[73.74251556 310.49630737]
[75.74652863 295.63076782]
[77.75054169 280.76525879]
[79.75455475 265.89971924]
[81.42609406 250.99314880]
[82.76432800 236.05296326]
[84.10256195 221.11277771]
[77.53158569 207.74597168]
[86.46922302 194.69111633]
[87.80745697 179.75093079]
[89.03443909 164.80119324]
[90.15008545 149.84274292]
[91.04290009 134.86933899]
[91.71268463 119.88430023]
[92.38246918 104.89926147]
[90.20961761 101.71318054]
[89.45169067 97.58481598]
[90.49803162 93.16755676]
[93.43158722 89.26446533]
[94.76982117 74.32427979]
[96.10805511 59.38409424]
[97.44628906 44.44390869]
[98.67326355 29.49417496]
[99.78890991 14.53572273]
[100.90455627 -0.42273089]
[92.52627563 -16.82047081]
[102.96511841 -30.92711639]
[96.06293488 -45.16335297]
[104.54405975 -57.40752792]
[105.43687439 -72.38093567]
[106.32968903 -87.35433960]
[106.44136047 -102.35392761]
[105.77157593 -117.33896637]
[105.10179138 -132.32400513]
[104.43200684 -147.30903625]
[89.89926147 -151.56088257]
[77.53595734 -160.30316162]
[68.68316650 -172.58758545]
[64.30117798 -187.08160400]
[64.86531067 -202.21304321]
[70.31437683 -216.34056091]
[80.05730438 -227.93168640]
[93.03724670 -235.72911072]
[107.84623718 -238.88702393]
[122.87791443 -237.06289673]
[136.50173950 -230.45457458]
[147.23992920 -219.77888489]
[153.92765808 -206.19386292]
[155.83950806 -191.17309570]
[152.76808167 -176.34591675]
[145.04655457 -163.32067871]
[133.51249695 -153.51026917]
[119.41704559 -147.97882080]
[120.08683014 -132.99378967]
[120.75661469 -118.00875092]
[121.42639923 -103.02371216]
[131.48385620 -114.15238953]
[146.32389832 -116.33712769]
[159.16186523 -108.57910919]
[164.12838745 -94.42518616]
[158.95285034 -80.34633636]
[146.00144958 -72.77923584]
[131.19537354 -75.18344116]
[121.30310059 -86.46152496]
[120.41027832 -71.48812103]
[119.51746368 -56.51471329]
[126.48350525 -43.34947586]
[117.93852234 -30.03430176]
[125.73056793 -20.78170395]
[125.10929871 -8.29980564]
[115.86301422 0.69291776]
[114.74736786 15.65137100]
[113.63171387 30.60982513]
[116.26902008 37.51391220]
[112.38647461 45.78214264]
[111.04824066 60.72232819]
[109.71000671 75.66251373]
[108.37177277 90.60269928]
[107.36750793 105.56904602]
[106.69772339 120.55408478]
[106.02793884 135.53912354]
[108.73077393 141.57287598]
[108.07862091 147.21838379]
[105.10853577 150.95838928]
[103.99288940 165.91683960]
[106.47535706 174.70747375]
[102.74764252 181.08915710]
[101.40940857 196.02934265]
[107.88466644 210.46478271]
[99.04274750 222.45100403]
[97.70451355 237.39118958]
[96.36627960 252.33137512]
[98.56410980 257.06600952]
[98.71132660 261.70620728]
[97.18727875 265.48672485]
[94.62008667 267.90374756]
[92.61606598 282.76925659]
[90.61205292 297.63479614]
[88.60803986 312.50030518]
[86.60402679 327.36584473]
[84.60001373 342.23138428]
[82.59600067 357.09689331]
[97.32406616 359.96258545]
[111.86059570 363.67974854]
[126.15639496 368.23590088]
[140.16308594 373.61553955]
[153.83328247 379.80050659]
[167.12072754 386.76983643]
[179.98045349 394.50000000]
[192.36897278 402.96481323]
[204.24432373 412.13562012]
[215.56636047 421.98141479]
[226.29675293 432.46887207]
[236.39920044 443.56250000]
[245.83950806 455.22479248]
[254.58575439 467.41622925]
[262.60830688 480.09561157]
[269.88006592 493.22000122]
[276.37640381 506.74499512]
[282.07534790 520.62481689]
[286.95761108 534.81256104]
[291.00665283 549.26019287]
[294.20877075 563.91876221]
[296.55319214 578.73876953]
[298.03189087 593.66998291]
[298.63995361 608.66192627]
[298.37524414 623.66387939]
[297.23873901 638.62500000]
[295.23422241 653.49475098]
[292.36846924 668.22283936]
[288.65121460 682.75933838]
[284.09503174 697.05511475]
[278.71533203 711.06176758]
[272.53033447 724.73199463]
[265.56091309 738.01940918]
[257.83068848 750.87908936]
[249.36584473 763.26757812]
[240.19497681 775.14288330]
[230.34913635 786.46484375]
[219.86163330 797.19519043]
[208.76795959 807.29760742]
[197.10565186 816.73785400]
[184.91416931 825.48406982]
[172.23477173 833.50659180]
[159.11035156 840.77832031]
[145.58531189 847.27459717]
[131.70544434 852.97344971]
[117.51769257 857.85565186]
[103.07007599 861.90460205]
[88.41146851 865.10668945]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 162]
[59 161]
[60 160]
[61 159]
[62 158]
[63 157]
[64 156]
[65 152]
[66 151]
[67 150]
[69 148]
[70 147]
[71 145]
[72 144]
[73 141]
[74 140]
[75 139]
[79 138]
[80 137]
[81 136]
[82 135]
[83 133]
[84 132]
[85 131]
[87 128]
[89 126]
[90 125]
[91 124]
[92 116]
[93 115]
[94 114]
[95 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
