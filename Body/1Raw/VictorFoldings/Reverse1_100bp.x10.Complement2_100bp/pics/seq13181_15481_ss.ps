%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGAUAAUACUCAGGAUCAACUGAACUUCACCUCUUCCGAUGCUAAAAAAACUACAGUAAAACACAUUCCCGCGUCUGACGACGCUUGUCUCACCACUAUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[35.80277252 789.20861816]
[22.53315544 782.16973877]
[10.27262115 773.49176025]
[-0.77749991 763.31713867]
[-10.43575382 751.81292725]
[-18.54354477 739.16809082]
[-24.96773338 725.59020996]
[-29.60283089 711.30230713]
[-32.37272263 696.53900146]
[-33.23192596 681.54266357]
[-32.16633224 666.55957031]
[-29.19343948 651.83575439]
[-24.36206436 637.61303711]
[-17.75154305 624.12493896]
[-9.47042465 611.59289551]
[0.34530550 600.22277832]
[11.53446484 590.20123291]
[23.91331673 581.69287109]
[37.27859116 574.83740234]
[51.41081238 569.74731445]
[66.07792664 566.50634766]
[64.73969269 551.56616211]
[63.40145493 536.62597656]
[62.06322098 521.68579102]
[60.72498703 506.74557495]
[59.38675308 491.80538940]
[58.04851913 476.86520386]
[49.20660019 464.87899780]
[55.68185806 450.44354248]
[54.34362411 435.50335693]
[53.00539017 420.56317139]
[51.66715622 405.62298584]
[50.32892227 390.68280029]
[48.99068832 375.74261475]
[47.65245056 360.80242920]
[46.31421661 345.86227417]
[44.97598267 330.92208862]
[43.63774872 315.98190308]
[38.20793915 329.96463013]
[29.62998581 342.26986694]
[18.38901711 352.20166016]
[5.12076283 359.19833374]
[-9.42439175 362.86419678]
[-24.42384720 362.99191284]
[-39.02931595 359.57424927]
[-52.41477966 352.80450439]
[-63.82323456 343.06555176]
[-72.60946655 330.90817261]
[-78.27658844 317.01989746]
[-80.50407410 302.18621826]
[-79.16596985 287.24603271]
[-74.33794403 273.04425049]
[-66.29303741 260.38409424]
[-55.48623657 249.98155212]
[-42.52871704 242.42492676]
[-28.15329170 238.14157104]
[-13.17295647 237.37374878]
[1.56507695 240.16487122]
[15.22730064 246.35710144]
[27.04104996 255.60021973]
[36.33819962 267.37149048]
[42.59294891 281.00521851]
[45.45164490 295.73138428]
[49.42374039 281.26684570]
[53.39583588 266.80233765]
[57.36793518 252.33779907]
[61.12423325 237.81575012]
[64.66390991 223.23936462]
[68.20358276 208.66299438]
[71.74325562 194.08660889]
[75.28292084 179.51023865]
[73.80661774 172.26853943]
[78.98532867 164.74398804]
[82.74163055 150.22193909]
[85.95490265 135.57014465]
[88.62069702 120.80892944]
[91.28649139 106.04771423]
[93.29050446 91.18218231]
[94.62873840 76.24199677]
[95.96697235 61.30181122]
[97.19395447 46.35208130]
[98.30960083 31.39362526]
[99.42524719 16.43517303]
[92.73578644 2.09774971]
[101.39826965 -10.01879692]
[93.58827972 -20.28363037]
[94.82545471 -32.71959305]
[103.90383148 -40.71393967]
[105.24206543 -55.65412521]
[106.02339172 -70.63376617]
[106.24671936 -85.63210297]
[106.47004700 -100.63043976]
[106.35837555 -115.63002014]
[105.91177368 -130.62336731]
[105.46516418 -145.61672974]
[105.01856232 -160.61007690]
[104.57195282 -175.60342407]
[104.12534332 -190.59677124]
[90.16179657 -196.75971985]
[80.26160431 -208.37648010]
[76.39046478 -223.14051819]
[79.31700134 -238.12045288]
[88.46013641 -250.34197998]
[102.00450897 -257.37850952]
[117.26085663 -257.83294678]
[131.20002747 -251.61506653]
[141.05439758 -239.95941162]
[144.86737061 -225.18023682]
[141.88186646 -210.21195984]
[132.69067383 -198.02651978]
[119.11869812 -191.04338074]
[119.56529999 -176.05003357]
[120.01190948 -161.05667114]
[120.45851135 -146.06332397]
[120.90512085 -131.06997681]
[121.35172272 -116.07662964]
[123.65354156 -113.40567017]
[124.77600861 -109.48711395]
[124.14684296 -104.88739014]
[121.46838379 -100.40711212]
[121.24505615 -85.40877533]
[121.02172852 -70.41043854]
[133.43905640 -78.82530212]
[147.80482483 -74.50968170]
[153.52912903 -60.64488983]
[146.39222717 -47.45154190]
[131.65516663 -44.65527344]
[120.18225098 -54.31589127]
[118.84401703 -39.37570572]
[127.07476807 -23.87662315]
[116.35671997 -8.90314770]
[123.12598419 4.36434650]
[114.38370514 17.55082130]
[113.26805115 32.50927353]
[112.15240479 47.46772766]
[114.78970337 54.37181473]
[110.90715790 62.64004898]
[109.56892395 77.58023071]
[108.23069000 92.52041626]
[120.40572357 83.75864410]
[135.23184204 86.03598022]
[144.21597290 98.04785919]
[142.21159363 112.91333771]
[130.36692810 122.11679840]
[115.46710205 120.38607025]
[106.04771423 108.71350861]
[103.38191223 123.47472382]
[100.71611786 138.23594666]
[114.33930969 131.95831299]
[127.80918884 138.55850220]
[131.19625854 153.17108154]
[122.00369263 165.02421570]
[107.00791931 165.38021851]
[97.26368713 153.97824097]
[93.50738525 168.50028992]
[89.85929871 183.04991150]
[86.31962585 197.62628174]
[82.77995300 212.20266724]
[79.24028015 226.77903748]
[75.70060730 241.35540771]
[77.19237518 247.79638672]
[75.46646881 253.21102905]
[71.83245850 256.30990601]
[67.86035919 270.77441406]
[63.88826370 285.23895264]
[59.91616821 299.70346069]
[58.57793427 314.64364624]
[59.91616821 329.58383179]
[61.25440216 344.52401733]
[62.59263611 359.46420288]
[63.93087006 374.40438843]
[65.26910400 389.34457397]
[66.60733795 404.28475952]
[67.94557190 419.22494507]
[69.28380585 434.16513062]
[70.62203979 449.10531616]
[79.55967712 462.16018677]
[72.98870087 475.52697754]
[74.32694244 490.46716309]
[75.66517639 505.40734863]
[77.00341034 520.34753418]
[78.34164429 535.28771973]
[79.67987823 550.22790527]
[81.01811218 565.16809082]
[96.02773285 565.75085449]
[110.83958435 568.24835205]
[125.21045685 572.61938477]
[138.90435791 578.79235840]
[151.69642639 586.66583252]
[163.37658691 596.11053467]
[173.75306702 606.97131348]
[182.65545654 619.06988525]
[189.93759155 632.20758057]
[195.47985840 646.16864014]
[199.19128418 660.72387695]
[201.01091003 675.63415527]
[200.90884399 690.65472412]
[198.88676453 705.53894043]
[194.97790527 720.04235840]
[189.24641418 733.92681885]
[181.78642273 746.96435547]
[172.72044373 758.94085693]
[162.19734192 769.65966797]
[150.38989258 778.94470215]
[137.49201965 786.64361572]
[123.71549988 792.62994385]
[109.28656006 796.80529785]
[94.44213104 799.10125732]
[79.42597961 799.48004150]
[64.48467255 797.93542480]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 184]
[22 183]
[23 182]
[24 181]
[25 180]
[26 179]
[27 178]
[29 176]
[30 175]
[31 174]
[32 173]
[33 172]
[34 171]
[35 170]
[36 169]
[37 168]
[38 167]
[63 166]
[64 165]
[65 164]
[66 163]
[67 160]
[68 159]
[69 158]
[70 157]
[71 156]
[73 155]
[74 154]
[75 148]
[76 147]
[77 146]
[78 139]
[79 138]
[80 137]
[81 135]
[82 134]
[83 133]
[85 131]
[88 129]
[89 128]
[90 122]
[91 121]
[92 120]
[93 116]
[94 115]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
