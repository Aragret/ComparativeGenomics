%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[148.64262390 634.80944824]
[149.18991089 619.80285645]
[151.44427490 604.95648193]
[155.37634277 590.46380615]
[160.93486023 576.51391602]
[168.04733276 563.28851318]
[176.62106323 550.96014404]
[186.54425049 539.68945312]
[197.68754578 529.62347412]
[209.90567017 520.89331055]
[202.63244629 507.77462769]
[195.35920715 494.65594482]
[188.08598328 481.53723145]
[180.81275940 468.41854858]
[173.53952026 455.29983521]
[166.26629639 442.18115234]
[158.89559937 429.11697388]
[151.42787170 416.10803223]
[143.96012878 403.09906006]
[136.49238586 390.09011841]
[137.43200684 405.06066895]
[134.94073486 419.85232544]
[129.14926147 433.68917847]
[120.36138153 445.84539795]
[109.03809357 455.68322754]
[95.77339172 462.68664551]
[81.26313019 466.48825073]
[66.26847076 466.88861084]
[51.57601547 463.86672974]
[37.95649719 457.58114624]
[26.12436676 448.36157227]
[16.70031548 436.69165039]
[10.17870903 423.18353271]
[6.90165997 408.54589844]
[7.04107475 393.54653931]
[10.58963966 378.97232056]
[17.36120415 365.58776855]
[27.00054741 354.09503174]
[39.00200653 345.09698486]
[52.73600769 339.06564331]
[67.48209381 336.31738281]
[82.46672058 336.99639893]
[96.90381622 341.06704712]
[110.03604126 348.31582642]
[121.17450714 358.36245728]
[129.73570251 370.68136597]
[127.51058197 355.84732056]
[125.28546143 341.01327515]
[123.06034851 326.17922974]
[113.52223206 318.73941040]
[111.54704285 306.39913940]
[118.73221588 295.68762207]
[116.72820282 280.82211304]
[107.35989380 269.24264526]
[113.18411255 254.53247070]
[111.18009949 239.66694641]
[109.17608643 224.80142212]
[107.17207336 209.93588257]
[105.16806030 195.07035828]
[103.16404724 180.20483398]
[89.33380890 174.67398071]
[80.06728363 162.88468933]
[77.93184662 147.94125366]
[83.60013580 133.84277344]
[95.64276886 124.41291046]
[93.63875580 109.54738617]
[86.48684692 122.73261261]
[73.75244904 130.65946960]
[58.76431274 131.25592041]
[45.44029617 124.36603546]
[37.26326370 111.79080963]
[36.37067413 96.81739044]
[42.99584579 83.35978699]
[55.40697861 74.93579102]
[70.35983276 73.74740601]
[83.94576263 80.10527039]
[92.61312866 92.34663391]
[92.83645630 77.34829712]
[85.30548096 63.43445969]
[93.23140717 50.82379532]
[93.45473480 35.82545853]
[90.45344543 27.19817352]
[93.79470062 20.60592079]
[94.24131012 5.61257029]
[94.68791199 -9.38077927]
[94.91123962 -24.37911606]
[94.91123962 -39.37911606]
[84.01668549 -50.51224136]
[84.23036957 -65.72437286]
[94.91123962 -76.04205322]
[85.33655548 -91.77123260]
[94.69728088 -106.61521149]
[94.47395325 -121.61354828]
[94.25062561 -136.61187744]
[94.02729797 -151.61022949]
[93.80397034 -166.60856628]
[93.58064270 -181.60690308]
[93.35731506 -196.60523987]
[79.33779144 -202.55274963]
[68.95413971 -213.69274902]
[64.00539398 -228.09516907]
[65.34894562 -243.26470947]
[72.75202179 -256.57315063]
[84.93199158 -265.71469116]
[99.77860260 -269.10556030]
[114.71959686 -266.15823364]
[127.16634369 -257.38336182]
[134.96237183 -244.30125427]
[136.75698853 -229.17845154]
[132.23924255 -214.63507080]
[122.19187927 -203.19085693]
[108.35565186 -196.82856750]
[108.57897949 -181.83023071]
[108.80230713 -166.83189392]
[109.02563477 -151.83355713]
[109.24896240 -136.83520508]
[109.47229004 -121.83687592]
[109.69561768 -106.83853912]
[118.15425873 -98.19111633]
[118.46306610 -85.69757843]
[109.91123962 -76.04205322]
[120.59211731 -65.72437286]
[120.80579376 -50.51224136]
[109.91123962 -39.37911606]
[109.91123962 -24.37911606]
[112.59492493 -20.42856216]
[112.82538605 -14.75018883]
[109.68126678 -8.93417358]
[109.23465729 6.05917645]
[108.78805542 21.05252647]
[108.45307922 36.04878616]
[108.22975159 51.04712296]
[115.77670288 63.88817978]
[107.83479309 77.57162476]
[107.61146545 92.56996155]
[108.50428009 107.54337311]
[110.50829315 122.40889740]
[124.61811066 128.31315613]
[133.81741333 140.40734863]
[135.71533203 155.38281250]
[129.90148926 169.20507812]
[118.02957153 178.20082092]
[120.03358459 193.06634521]
[122.03759766 207.93186951]
[124.04161072 222.79740906]
[126.04563141 237.66293335]
[128.04963684 252.52845764]
[137.56129456 265.17120361]
[131.59373474 278.81808472]
[133.59774780 293.68362427]
[145.18803406 307.99258423]
[137.89439392 323.95410156]
[140.11950684 338.78814697]
[142.34461975 353.62219238]
[144.56974792 368.45623779]
[149.50132751 382.62237549]
[156.96907043 395.63131714]
[164.43681335 408.64028931]
[171.90455627 421.64923096]
[178.89094543 427.53381348]
[179.38499451 434.90792847]
[186.65821838 448.02661133]
[193.93144226 461.14532471]
[201.20468140 474.26400757]
[208.47790527 487.38269043]
[215.75112915 500.50140381]
[223.02436829 513.62011719]
[236.90161133 507.88250732]
[251.34243774 503.76425171]
[266.15859985 501.31900024]
[281.15692139 500.57861328]
[296.14187622 501.55279541]
[310.91809082 504.22882080]
[325.29293823 508.57177734]
[339.07904053 514.52508545]
[352.09661865 522.01110840]
[364.17596436 530.93225098]
[375.15963745 541.17218018]
[384.90441895 552.59747314]
[393.28326416 565.05914307]
[400.18695068 578.39465332]
[405.52545166 592.43029785]
[409.22918701 606.98297119]
[411.24987793 621.86297607]
[411.56118774 636.87628174]
[410.15899658 651.82727051]
[407.06167603 666.52093506]
[402.30950928 680.76580811]
[395.96453857 694.37603760]
[388.10943604 707.17425537]
[378.84661865 718.99365234]
[368.29681396 729.68011475]
[356.59762573 739.09423828]
[343.90155029 747.11346436]
[330.37408447 753.63305664]
[316.19158936 758.56811523]
[301.53900146 761.85430908]
[286.60729980 763.44879150]
[271.59118652 763.33074951]
[256.68640137 761.50170898]
[242.08728027 757.98559570]
[227.98413086 752.82818604]
[214.56083679 746.09667969]
[201.99238586 737.87890625]
[190.44264221 728.28198242]
[180.06216431 717.43096924]
[170.98631287 705.46746826]
[163.33337402 692.54730225]
[157.20314026 678.83898926]
[152.67553711 664.52117920]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 167]
[11 166]
[12 165]
[13 164]
[14 163]
[15 162]
[16 161]
[17 159]
[18 158]
[19 157]
[20 156]
[46 155]
[47 154]
[48 153]
[49 152]
[52 150]
[53 149]
[55 147]
[56 146]
[57 145]
[58 144]
[59 143]
[60 142]
[65 137]
[66 136]
[77 135]
[78 134]
[80 132]
[81 131]
[83 130]
[84 129]
[85 128]
[86 125]
[87 124]
[90 121]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
