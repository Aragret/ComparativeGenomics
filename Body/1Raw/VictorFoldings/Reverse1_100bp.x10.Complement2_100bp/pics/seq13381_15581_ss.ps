%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACGAUUACGAUCCGACGGUUACCACUCCCUCCAACUUCACUCUCCAUACCAAAACUCAUCAGGAGGAUAAAAAGCUUAUAGAACAAGUAACAAUUCCAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[95.44839478 615.86871338]
[82.10323334 622.80749512]
[67.73351288 627.25170898]
[52.80115128 629.05841064]
[37.78616333 628.16967773]
[23.17121887 624.61389160]
[9.42613125 618.50555420]
[-3.00725389 610.04083252]
[-13.72925472 599.49200439]
[-22.39520454 587.19805908]
[-28.72652626 573.55419922]
[-32.51969528 558.99908447]
[-33.65277863 544.00054932]
[-32.08934784 529.04077148]
[-27.87966537 514.60058594]
[-21.15905380 501.14425659]
[-12.14355278 489.10430908]
[-1.12297285 478.86776733]
[11.54841995 470.76373291]
[25.46329117 465.05267334]
[40.17433929 461.91821289]
[55.20866013 461.46109009]
[57.43377686 446.62704468]
[59.65889359 431.79299927]
[61.88401031 416.95895386]
[54.59037018 400.99743652]
[66.18065643 386.68847656]
[68.18466949 371.82293701]
[69.96713257 356.92922974]
[71.52765656 342.01062012]
[73.08818054 327.09201050]
[74.64870453 312.17340088]
[63.50986481 299.57321167]
[64.95904541 282.47891235]
[78.58614349 271.50979614]
[79.92437744 256.56961060]
[81.26261139 241.62944031]
[73.03186035 226.13035583]
[83.74990845 211.15687561]
[84.86555481 196.19842529]
[82.22825623 189.29434204]
[86.11080170 181.02610779]
[87.44903564 166.08592224]
[88.67601013 151.13618469]
[89.79165649 136.17773438]
[90.90731049 121.21928406]
[92.02295685 106.26082611]
[89.43434906 98.62724304]
[93.26820374 91.08850861]
[94.60643768 76.14832306]
[95.94467163 61.20813751]
[97.28290558 46.26795578]
[90.80764771 31.83252335]
[99.64956665 19.84629250]
[97.45173645 15.11167049]
[97.30451965 10.47145176]
[98.82856750 6.69093180]
[101.39575958 4.27393866]
[103.39977264 -10.59158993]
[105.40379333 -25.45711708]
[107.40780640 -40.32264709]
[107.96601105 -55.31225586]
[104.33136749 -63.69242096]
[107.17305756 -70.51492310]
[106.50327301 -85.49996185]
[105.83348846 -100.48500061]
[105.16370392 -115.47003937]
[104.49391937 -130.45507812]
[103.82413483 -145.44012451]
[103.15435028 -160.42515564]
[96.32080841 -147.07215881]
[85.17369080 -137.03512573]
[71.17960358 -131.63462830]
[56.17969513 -131.58117676]
[42.14747238 -136.88180542]
[30.92911148 -146.83914185]
[24.00058174 -160.14309692]
[22.27344704 -175.04333496]
[25.97494698 -189.57946777]
[34.61808014 -201.83900452]
[47.06569672 -210.20899963]
[61.68009949 -213.58822632]
[76.53851318 -211.53211975]
[89.68605042 -204.31115723]
[99.39293671 -192.87541199]
[104.38243103 -178.72708130]
[107.04822540 -193.48829651]
[109.71401978 -208.24951172]
[107.94736481 -213.16133118]
[108.21471405 -217.79618835]
[110.06996155 -221.42565918]
[112.84255219 -223.60398865]
[116.16481018 -238.23144531]
[119.48706818 -252.85890198]
[122.80933380 -267.48635864]
[126.13159180 -282.11383057]
[129.45385742 -296.74127197]
[132.77610779 -311.36874390]
[136.09837341 -325.99621582]
[122.46987915 -332.40542603]
[110.53808594 -341.59490967]
[100.86106110 -353.13479614]
[93.89141846 -366.48538208]
[89.95513916 -381.02224731]
[89.23633575 -396.06542969]
[91.76862335 -410.91134644]
[97.43355560 -424.86566162]
[105.96618652 -437.27566528]
[116.96742249 -447.56094360]
[129.92271423 -455.24041748]
[144.22613525 -459.95492554]
[159.20866394 -461.48394775]
[174.16954041 -459.75595093]
[188.40904236 -454.85180664]
[201.26115417 -447.00085449]
[212.12474060 -436.57028198]
[220.49171448 -424.04800415]
[225.97071838 -410.01965332]
[228.30549622 -395.14138794]
[227.38685608 -380.10906982]
[223.25776672 -365.62582397]
[216.11132812 -352.36904907]
[206.28181458 -340.95874023]
[194.22895813 -331.92864990]
[180.51651001 -325.70108032]
[165.78579712 -322.56732178]
[150.72583008 -322.67395020]
[147.40356445 -308.04647827]
[144.08131409 -293.41903687]
[140.75904846 -278.79156494]
[137.43679810 -264.16409302]
[134.11453247 -249.53665161]
[130.79226685 -234.90917969]
[127.47000885 -220.28172302]
[124.47523499 -205.58372498]
[121.80944061 -190.82250977]
[119.14364624 -176.06127930]
[118.13938904 -161.09494019]
[118.80917358 -146.10990906]
[119.47895813 -131.12486267]
[120.14874268 -116.13982391]
[120.81852722 -101.15478516]
[121.48831177 -86.16974640]
[122.15809631 -71.18470764]
[122.93942261 -56.20507050]
[130.01712036 -69.43027496]
[141.81195068 -78.69754028]
[156.33624268 -82.44516754]
[171.14242554 -80.04161835]
[183.73538208 -71.89192963]
[191.99298096 -59.36946869]
[194.52368164 -44.58449173]
[190.90100098 -30.02852440]
[181.73542786 -18.15450287]
[168.57153320 -10.96341133]
[153.62765503 -9.66707230]
[139.42210388 -14.48394299]
[128.34875488 -24.60229683]
[122.27333069 -38.31863403]
[120.26931763 -23.45310402]
[118.26530457 -8.58757591]
[116.26129150 6.27795219]
[114.58975220 21.18452644]
[121.16072845 34.55133438]
[112.22309113 47.60618973]
[110.88484955 62.54637146]
[109.54661560 77.48655701]
[108.20838165 92.42674255]
[106.98140717 107.37648010]
[105.86576080 122.33493042]
[104.75011444 137.29338074]
[103.63446045 152.25183105]
[106.11692810 161.04246521]
[102.38922119 167.42414856]
[101.05098724 182.36433411]
[99.82401276 197.31407166]
[98.70835876 212.27252197]
[106.51835632 222.53736877]
[105.28118134 234.97332764]
[96.20279694 242.96766663]
[94.86456299 257.90786743]
[93.52632904 272.84805298]
[103.29507446 282.12091064]
[105.90150452 295.13696289]
[100.61378479 307.10031128]
[89.56730652 313.73391724]
[88.00678253 328.65252686]
[86.44625854 343.57113647]
[84.88574219 358.48974609]
[87.22464752 364.67367554]
[86.23761749 370.27035522]
[83.05019379 373.82696533]
[81.04618073 388.69247437]
[88.23135376 399.40399170]
[86.25617218 411.74426270]
[76.71805573 419.18408203]
[74.49293518 434.01812744]
[72.26782227 448.85217285]
[70.04270172 463.68621826]
[84.28124237 468.53427124]
[97.42520142 475.84701538]
[109.05205536 485.38934326]
[118.78804779 496.85452271]
[126.32021332 509.87396240]
[131.40641785 524.02917480]
[133.88316345 538.86517334]
[133.67083740 553.90490723]
[130.77626038 568.66503906]
[125.29247284 582.67102051]
[117.39577484 595.47265625]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 199]
[23 198]
[24 197]
[25 196]
[27 193]
[28 192]
[29 189]
[30 188]
[31 187]
[32 186]
[35 182]
[36 181]
[37 180]
[39 177]
[40 176]
[42 175]
[43 174]
[44 172]
[45 171]
[46 170]
[47 169]
[49 168]
[50 167]
[51 166]
[52 165]
[54 163]
[58 162]
[59 161]
[60 160]
[61 159]
[62 145]
[64 144]
[65 143]
[66 142]
[67 141]
[68 140]
[69 139]
[70 138]
[86 137]
[87 136]
[88 135]
[92 134]
[93 133]
[94 132]
[95 131]
[96 130]
[97 129]
[98 128]
[99 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
