%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[178.83274841 302.67098999]
[187.86973572 290.64404297]
[198.96295166 280.48260498]
[211.73457336 272.53274536]
[206.27922058 258.55993652]
[200.82386780 244.58714294]
[195.36851501 230.61434937]
[189.91314697 216.64154053]
[184.45779419 202.66874695]
[179.00244141 188.69595337]
[170.58781433 176.27845764]
[159.63191223 166.03306580]
[148.67599487 155.78767395]
[137.72009277 145.54228210]
[126.76418304 135.29689026]
[115.77715302 141.39170837]
[103.52083588 144.15649414]
[90.98125458 143.36880493]
[79.16724396 139.09204102]
[69.02926636 131.67025757]
[61.38293457 121.70055389]
[56.84340668 109.98500061]
[55.77589798 97.46614075]
[58.26628876 85.15113068]
[64.11422729 74.03073883]
[53.62672424 63.30635452]
[43.13922119 52.58197403]
[32.65172195 41.85759735]
[17.47124863 37.40070724]
[14.10461330 22.89157104]
[3.61711264 12.16719055]
[-6.87038851 1.44281077]
[-17.35788918 -9.28156853]
[-27.84539032 -20.00594902]
[-38.33289337 -30.73032761]
[-48.82039261 -41.45470810]
[-44.83151627 -26.99480247]
[-45.95978165 -12.03729630]
[-52.07264709 1.66061962]
[-62.45197296 12.48972702]
[-75.87841034 19.17783165]
[-90.77463531 20.93922424]
[-105.39065552 17.56697655]
[-118.00938416 9.45725822]
[-127.14839935 -2.43721128]
[-131.73405457 -16.71907997]
[-131.22763062 -31.71052933]
[-125.68862152 -45.65037537]
[-115.76774597 -56.90098572]
[-102.63049316 -64.14064026]
[-87.82022095 -66.51884460]
[-73.07682037 -63.75619888]
[-60.13114166 -56.17624664]
[-67.79174042 -69.07257080]
[-75.45233917 -81.96889496]
[-83.11293793 -94.86522675]
[-96.70885468 -88.49987030]
[-110.86322784 -83.49781036]
[-125.43973541 -79.90723419]
[-140.29798889 -77.76271057]
[-155.29490662 -77.08489227]
[-170.28604126 -77.88031769]
[-185.12701416 -80.14131927]
[-199.67491150 -83.84611511]
[-213.78961182 -88.95903778]
[-227.33518982 -95.43083954]
[-240.18118286 -103.19918823]
[-252.20387268 -112.18927765]
[-263.28747559 -122.31451416]
[-273.32525635 -133.47740173]
[-282.22052002 -145.57041931]
[-289.88760376 -158.47709656]
[-296.25268555 -172.07313538]
[-301.25445557 -186.22761536]
[-304.84475708 -200.80418396]
[-306.98898315 -215.66249084]
[-307.66650391 -230.65940857]
[-306.87078857 -245.65052795]
[-304.60949707 -260.49145508]
[-300.90438843 -275.03927612]
[-295.79119873 -289.15390015]
[-289.31912231 -302.69934082]
[-281.55050659 -315.54516602]
[-272.56018066 -327.56768799]
[-262.43472290 -338.65109253]
[-251.27163696 -348.68862915]
[-239.17845154 -357.58364868]
[-226.27160645 -365.25048828]
[-212.67543030 -371.61532593]
[-198.52085876 -376.61679077]
[-183.94421387 -380.20678711]
[-169.08587646 -382.35073853]
[-154.08892822 -383.02795410]
[-139.09782410 -382.23193359]
[-124.25694275 -379.97033691]
[-109.70919800 -376.26495361]
[-95.59469604 -371.15145874]
[-82.04937744 -364.67910767]
[-69.20369720 -356.91024780]
[-57.18136597 -347.91967773]
[-46.09816742 -337.79400635]
[-36.06084061 -326.63070679]
[-27.16605759 -314.53735352]
[-19.49947548 -301.63037109]
[-13.13493443 -288.03405762]
[-8.13372898 -273.87939453]
[-4.54402399 -259.30267334]
[-2.40039134 -244.44427490]
[-1.72347617 -229.44732666]
[-2.51979780 -214.45623779]
[-4.78168678 -199.61540222]
[-8.48735905 -185.06773376]
[-13.60112667 -170.95332336]
[-20.07374001 -157.40814209]
[-27.84286308 -144.56262207]
[-36.83367157 -132.54046631]
[-46.95957565 -121.45746613]
[-58.12306213 -111.42036438]
[-70.21660614 -102.52582550]
[-62.55601120 -89.62949371]
[-54.89541245 -76.73316956]
[-47.23481369 -63.83684158]
[-38.09601212 -51.94221115]
[-27.60851288 -41.21783066]
[-17.12101173 -30.49345016]
[-6.63351011 -19.76906967]
[3.85399127 -9.04469013]
[14.34149265 1.67968941]
[24.82899284 12.40406895]
[39.25932693 16.09387970]
[43.37609863 31.37009430]
[53.86360168 42.09447479]
[64.35110474 52.81885529]
[74.83860016 63.54323578]
[90.75335693 56.67920303]
[108.08369446 56.44720840]
[124.17649078 62.88276672]
[136.56806946 75.00064850]
[143.36140442 90.94570923]
[143.51647949 108.27690887]
[137.00956726 124.34098053]
[147.96548462 134.58636475]
[158.92138672 144.83175659]
[169.87730408 155.07714844]
[180.83320618 165.32254028]
[175.56628418 151.27763367]
[173.10072327 136.48165894]
[173.52871704 121.48776245]
[176.83424377 106.85651398]
[182.89375305 93.13491058]
[191.48068237 80.83594513]
[202.27401733 70.41941833]
[214.87023926 62.27476883]
[228.79841614 56.70648575]
[243.53784180 53.92273712]
[258.53747559 54.02760696]
[273.23654175 57.01716614]
[287.08551025 62.77965164]
[299.56661987 71.09962463]
[310.21325684 81.66603851]
[318.62738037 94.08386993]
[324.49444580 107.88885498]
[327.59509277 122.56488800]
[327.81338501 137.56330872]
[325.14117432 152.32336426]
[319.67840576 166.29325867]
[311.62924194 178.95071411]
[301.29464722 189.82250977]
[289.06097412 198.50221252]
[275.38558960 204.66531372]
[260.77975464 208.08142090]
[245.78953552 208.62278748]
[230.97532654 206.26921082]
[216.89099121 201.10864258]
[204.06306458 193.33404541]
[192.97523499 183.24060059]
[198.43058777 197.21339417]
[203.88595581 211.18618774]
[209.34130859 225.15898132]
[214.79666138 239.13179016]
[220.25201416 253.10458374]
[225.70738220 267.07739258]
[240.48695374 264.27050781]
[255.53065491 264.22738647]
[270.32608032 266.94952393]
[284.36932373 272.34420776]
[297.18203735 280.22763062]
[308.32785034 290.33135986]
[317.42715454 302.31124878]
[324.17001343 315.75921631]
[328.32678223 330.21731567]
[329.75585938 345.19302368]
[328.40856934 360.17633057]
[324.33084106 374.65689087]
[317.66152954 388.14151001]
[308.62777710 400.17089844]
[297.53729248 410.33535767]
[284.76782227 418.28863525]
[270.75427246 423.75991821]
[255.97392273 426.56280518]
[240.93022156 426.60186768]
[226.13552856 423.87573242]
[212.09375000 418.47729492]
[199.28314209 410.59039307]
[188.14004517 400.48367310]
[179.04397583 388.50134277]
[172.30474854 375.05154419]
[168.15188599 360.59234619]
[166.72683716 345.61621094]
[168.07815552 330.63327026]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 182]
[5 181]
[6 180]
[7 179]
[8 178]
[9 177]
[10 176]
[11 145]
[12 144]
[13 143]
[14 142]
[15 141]
[25 134]
[26 133]
[27 132]
[28 131]
[30 129]
[31 128]
[32 127]
[33 126]
[34 125]
[35 124]
[36 123]
[53 122]
[54 121]
[55 120]
[56 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
