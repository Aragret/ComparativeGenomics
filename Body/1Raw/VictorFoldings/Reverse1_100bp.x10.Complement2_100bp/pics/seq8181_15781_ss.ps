%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[31.36270142 697.43255615]
[19.97295952 707.22082520]
[7.50544882 715.59326172]
[-5.86480474 722.43231201]
[-19.95010376 727.64196777]
[-34.55271530 731.14910889]
[-49.46763611 732.90454102]
[-64.48548889 732.88354492]
[-79.39544678 731.08642578]
[-93.98819733 727.53845215]
[-108.05887604 722.28942871]
[-121.40995026 715.41302490]
[-133.85400391 707.00579834]
[-145.21633911 697.18572998]
[-155.33743286 686.09069824]
[-164.07521057 673.87646484]
[-171.30702209 660.71447754]
[-176.93132019 646.78955078]
[-180.86915588 632.29711914]
[-183.06524658 617.44067383]
[-183.48876953 602.42883301]
[-182.13377380 587.47216797]
[-179.01928711 572.78082275]
[-174.18902588 558.56097412]
[-167.71080017 545.01220703]
[-159.67556763 532.32476807]
[-150.19610596 520.67669678]
[-139.40550232 510.23165894]
[-127.45524597 501.13616943]
[-114.51309967 493.51797485]
[-100.76074219 487.48397827]
[-86.39124298 483.11892700]
[-71.60632324 480.48403931]
[-56.61354065 479.61636353]
[-41.62337112 480.52807617]
[-26.84625435 483.20635986]
[-22.44525719 468.86651611]
[-18.04425812 454.52667236]
[-13.64326000 440.18682861]
[-9.24226189 425.84698486]
[-4.84126425 411.50711060]
[-18.56591225 417.55972290]
[-32.59982300 412.26354980]
[-38.90373230 398.65252686]
[-33.86647797 384.52359009]
[-20.37362671 377.97052002]
[-6.15449572 382.74716187]
[0.64547211 396.11630249]
[6.30825853 382.22628784]
[11.97104549 368.33624268]
[17.63383102 354.44622803]
[23.29661942 340.55621338]
[28.95940590 326.66616821]
[34.51863098 312.73437500]
[39.97398758 298.76156616]
[44.58799744 284.48883057]
[48.34429932 269.96679688]
[52.10059738 255.44471741]
[55.85689926 240.92266846]
[59.61320114 226.40060425]
[51.85640335 213.73696899]
[55.45895386 198.95602417]
[68.79433441 190.90585327]
[72.55063629 176.38378906]
[76.30693817 161.86172485]
[80.06324005 147.33967590]
[83.81953430 132.81761169]
[87.57583618 118.29554749]
[91.33213806 103.77349091]
[89.76241302 98.76850128]
[91.10863495 93.24029541]
[95.42251587 88.87825775]
[99.60951996 74.47447205]
[91.80685425 63.49572372]
[91.75274658 50.22140503]
[99.24289703 39.49854660]
[111.35907745 35.11360931]
[115.76007843 20.77375984]
[120.16107178 6.43391371]
[124.56207275 -7.90593386]
[128.96307373 -22.24578094]
[117.63946533 -36.40677261]
[117.08803558 -54.37272644]
[127.34089661 -68.94426727]
[144.13838196 -74.39552307]
[148.11047363 -88.86004639]
[151.86677551 -103.38210297]
[155.40644836 -117.95848083]
[149.37463379 -129.35935974]
[152.62292480 -141.42718506]
[162.88328552 -147.83433533]
[166.63958740 -162.35639954]
[170.39588928 -176.87844849]
[174.15217590 -191.40051270]
[177.25628662 -206.07582092]
[179.70202637 -220.87509155]
[182.14775085 -235.67436218]
[168.16192627 -241.26104736]
[155.70433044 -249.72402954]
[145.35758972 -260.66748047]
[137.60566711 -273.57955933]
[132.81112671 -287.85632324]
[131.19819641 -302.83007812]
[132.84236145 -317.80038452]
[137.66667175 -332.06713867]
[145.44552612 -344.96301270]
[155.81506348 -355.88485718]
[168.29029846 -364.32183838]
[182.28773499 -369.87933350]
[197.15269470 -372.29742432]
[212.18991089 -371.46301270]
[226.69606018 -367.41510010]
[239.99267578 -360.34301758]
[251.45783997 -350.57757568]
[260.55532837 -338.57550049]
[266.85958862 -324.89813232]
[270.07580566 -310.18521118]
[270.05352783 -295.12487793]
[266.79382324 -280.42153931]
[260.44909668 -266.76287842]
[251.31617737 -254.78776550]
[239.82217407 -245.05625916]
[226.50469971 -238.02355957]
[211.98663330 -234.01856995]
[196.94702148 -233.22862244]
[194.50129700 -218.42935181]
[192.05555725 -203.63008118]
[204.84854126 -211.46205139]
[219.46421814 -208.08831787]
[227.53005981 -195.44149780]
[224.42559814 -180.76626587]
[211.92919922 -172.46926880]
[197.19938660 -175.30340576]
[188.67424011 -187.64421082]
[184.91793823 -173.12214661]
[181.16163635 -158.60009766]
[177.40533447 -144.07803345]
[182.99885559 -127.44434357]
[169.98281860 -114.41880798]
[166.44314575 -99.84243011]
[168.11880493 -95.37015533]
[167.00277710 -89.79776764]
[162.57499695 -84.88794708]
[158.60290527 -70.42342377]
[167.50599670 -62.17052841]
[172.08244324 -50.84846497]
[171.40686035 -38.58287811]
[165.54618835 -27.70482635]
[155.55859375 -20.30777168]
[143.30291748 -17.84478188]
[138.90191650 -3.50493550]
[134.50091553 10.83491135]
[130.09992981 25.17475891]
[125.69892883 39.51460648]
[134.20608521 54.02208328]
[129.49586487 70.51840210]
[114.01330566 78.66148376]
[109.82629395 93.06526947]
[105.85419464 107.52979279]
[102.09790039 122.05184937]
[98.34159851 136.57391357]
[94.58529663 151.09596252]
[90.82899475 165.61802673]
[87.07269287 180.14009094]
[83.31639099 194.66213989]
[91.07585907 208.16874695]
[87.05956268 222.84268188]
[74.13526154 230.15690613]
[70.37895966 244.67897034]
[66.62265778 259.20101929]
[62.86635590 273.72308350]
[59.11005783 288.24514771]
[71.49790955 279.78695679]
[86.49442291 280.11022949]
[98.50627136 289.09439087]
[103.05333710 303.38861084]
[98.43966675 317.66143799]
[86.38604736 326.58950806]
[71.38819122 326.84286499]
[59.03991699 318.32696533]
[53.94678497 304.21691895]
[48.49142838 318.18972778]
[48.28547287 327.32183838]
[42.84943390 332.32894897]
[37.18664551 346.21899414]
[31.52385902 360.10900879]
[25.86107254 373.99905396]
[20.19828606 387.88906860]
[14.53549862 401.77908325]
[9.49858284 415.90811157]
[5.09758472 430.24795532]
[0.69658673 444.58782959]
[-3.70441127 458.92767334]
[-8.10540962 473.26751709]
[-12.50640774 487.60736084]
[1.22902393 493.67977905]
[14.14982319 501.33413696]
[26.07460213 510.46301270]
[36.83595657 520.93817139]
[46.28281021 532.61267090]
[54.28254700 545.32250977]
[60.72286606 558.88934326]
[65.51335144 573.12268066]
[68.58674622 587.82269287]
[69.89991760 602.78302002]
[69.43442535 617.79370117]
[67.19680023 632.64392090]
[63.21846008 647.12524414]
[57.55525208 661.03442383]
[50.28667831 674.17608643]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 195]
[37 194]
[38 193]
[39 192]
[40 191]
[41 190]
[48 189]
[49 188]
[50 187]
[51 186]
[52 185]
[53 184]
[54 182]
[55 181]
[56 172]
[57 171]
[58 170]
[59 169]
[60 168]
[63 165]
[64 164]
[65 163]
[66 162]
[67 161]
[68 160]
[69 159]
[72 158]
[73 157]
[77 154]
[78 153]
[79 152]
[80 151]
[81 150]
[85 144]
[86 143]
[87 140]
[88 139]
[91 137]
[92 136]
[93 135]
[94 134]
[95 127]
[96 126]
[97 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
