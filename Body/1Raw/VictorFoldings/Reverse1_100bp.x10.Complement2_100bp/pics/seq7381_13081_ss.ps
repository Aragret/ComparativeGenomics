%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[43.19747162 662.01153564]
[32.20230865 672.24316406]
[20.03310776 681.04602051]
[6.87435484 688.28662109]
[-7.07446909 693.85528564]
[-21.60190201 697.66754150]
[-36.48771286 699.66558838]
[-51.50623703 699.81921387]
[-66.42979431 698.12597656]
[-81.03215027 694.61157227]
[-95.09193420 689.32934570]
[-108.39601135 682.35931396]
[-120.74268341 673.80718994]
[-131.94479370 663.80255127]
[-141.83250427 652.49713135]
[-150.25592041 640.06225586]
[-157.08735657 626.68652344]
[-162.22325134 612.57263184]
[-165.58572388 597.93450928]
[-167.12384033 582.99420166]
[-166.81423950 567.97808838]
[-164.66163635 553.11383057]
[-160.69866943 538.62677002]
[-154.98539734 524.73657227]
[-147.60845947 511.65371704]
[-138.67965698 499.57662964]
[-128.33436584 488.68835449]
[-116.72941589 479.15396118]
[-104.04074097 471.11798096]
[-90.46068573 464.70223999]
[-76.19512177 460.00399780]
[-61.46032333 457.09448242]
[-46.47965622 456.01779175]
[-31.48022842 456.79028320]
[-16.68942261 459.40020752]
[-12.28842449 445.06036377]
[-7.88742590 430.72052002]
[-8.93008423 423.40377808]
[-3.31268382 416.20080566]
[1.30132556 401.92807007]
[5.91533470 387.65533447]
[10.52934456 373.38259888]
[7.08209896 358.89242554]
[18.68920326 348.14132690]
[23.30321121 333.86859131]
[27.91722107 319.59585571]
[32.53123093 305.32312012]
[21.11049080 295.70565796]
[14.22332954 282.41232300]
[12.94689560 267.45452881]
[17.50672340 253.10896301]
[27.23764420 241.57107544]
[40.68062592 234.61914062]
[55.80147171 233.34019470]
[60.41548157 219.06745911]
[65.02948761 204.79472351]
[69.64350128 190.52200317]
[73.72316742 176.08744812]
[77.26284027 161.51106262]
[80.80251312 146.93469238]
[84.34218597 132.35832214]
[79.82675171 118.16464996]
[90.60208130 106.58005524]
[79.14459229 116.26126862]
[64.39932251 119.01392365]
[50.22065735 114.11848450]
[40.31485748 102.85459900]
[37.27127838 88.16662598]
[41.88550186 73.89395905]
[52.95138550 63.76744843]
[67.57633209 60.43413162]
[81.93741608 64.76533508]
[92.28067780 75.62889099]
[95.90243530 90.18420410]
[101.56522369 76.29418182]
[107.22801208 62.40415192]
[112.89080048 48.51412582]
[118.55358124 34.62409592]
[118.89547729 25.49606705]
[124.40546417 20.57043839]
[130.27442932 6.76626062]
[136.04046631 -7.08122492]
[141.70324707 -20.97125244]
[138.77513123 -39.15112305]
[153.04707336 -49.36281967]
[158.50242615 -63.33561707]
[163.95777893 -77.30841827]
[167.17105103 -91.96020508]
[160.26887512 -106.19644165]
[168.75000000 -118.44061279]
[169.64282227 -133.41401672]
[170.31260681 -148.39906311]
[170.75920105 -163.39241028]
[171.20581055 -178.38575745]
[171.65242004 -193.37910461]
[172.09902954 -208.37246704]
[172.54562378 -223.36581421]
[158.29750061 -228.44972229]
[146.31898499 -237.68933105]
[137.78361511 -250.17942810]
[133.52758789 -264.69635010]
[133.96786499 -279.81790161]
[139.06132507 -294.06262207]
[148.30895996 -306.03494263]
[160.80477905 -314.56195068]
[175.32455444 -318.80825806]
[190.44581604 -318.35784912]
[204.68710327 -313.25482178]
[216.65322876 -303.99917603]
[225.17185974 -291.49765015]
[229.40843201 -276.97503662]
[228.94789124 -261.85409546]
[223.83534241 -247.61621094]
[214.57167053 -235.65629578]
[202.06443787 -227.14604187]
[187.53898621 -222.91920471]
[187.09237671 -207.92585754]
[186.64576721 -192.93251038]
[186.19915771 -177.93914795]
[185.75256348 -162.94580078]
[185.30595398 -147.95245361]
[187.87081909 -143.92375183]
[187.93211365 -138.24102783]
[184.61622620 -132.52120972]
[183.72340393 -117.54779816]
[190.68945312 -104.38256073]
[182.14447021 -91.06739044]
[189.69819641 -104.02659607]
[200.42964172 -114.50686646]
[213.56408691 -121.75161743]
[228.15333557 -125.23785400]
[243.14418030 -124.71389771]
[257.45443726 -120.21756744]
[270.05099487 -112.07345581]
[280.02453613 -100.86950684]
[286.65502930 -87.41453552]
[289.46386719 -72.67986298]
[288.24822998 -57.72920227]
[283.09588623 -43.64185715]
[274.37878418 -31.43480110]
[262.72622681 -21.98927307]
[248.97941589 -15.98715496]
[234.13076782 -13.86174393]
[219.25218201 -15.76647568]
[205.41778564 -21.56384468]
[193.62629700 -30.83533669]
[184.72892761 -42.91163254]
[179.36801147 -56.92093277]
[177.93058777 -71.85305786]
[172.47521973 -57.88026047]
[167.01986694 -43.90746307]
[171.58801270 -32.70663452]
[167.15742493 -21.02101898]
[155.59327698 -15.30846500]
[149.93049622 -1.41843820]
[150.31622314 5.96214437]
[144.07859802 12.63522148]
[138.20964050 26.43939781]
[132.44360352 40.28688431]
[126.78082275 54.17691040]
[121.11803436 68.06694031]
[115.45525360 81.95696259]
[109.79246521 95.84699249]
[105.17845917 110.11972809]
[109.44070435 125.35599518]
[98.91855621 135.89799500]
[95.37888336 150.47436523]
[91.83921051 165.05073547]
[88.29953766 179.62712097]
[102.27223206 174.17147827]
[115.32537842 181.56170654]
[117.83667755 196.34999084]
[107.95491028 207.63496399]
[92.96453094 207.09776306]
[83.91622925 195.13600159]
[79.30222321 209.40873718]
[74.68820953 223.68147278]
[70.07420349 237.95420837]
[81.58497620 247.84246826]
[88.41458130 261.34802246]
[89.55008698 276.39874268]
[84.84951019 290.69882202]
[75.05872345 302.07885742]
[61.69330597 308.82504272]
[46.80396271 309.93713379]
[42.18995285 324.20986938]
[37.57594681 338.48260498]
[32.96193695 352.75534058]
[36.07915497 368.26641846]
[24.80207825 377.99661255]
[20.18806839 392.26934814]
[15.57405853 406.54208374]
[10.96004963 420.81481934]
[6.45242119 435.12152100]
[2.05142307 449.46136475]
[-2.34957504 463.80120850]
[11.35884190 469.93789673]
[24.20920563 477.71270752]
[36.00670624 487.00778198]
[46.57249832 497.68222046]
[55.74640656 509.57418823]
[63.38935852 522.50341797]
[69.38548279 536.27392578]
[73.64389038 550.67687988]
[76.10001373 565.49401855]
[76.71662140 580.50067139]
[75.48437500 595.46929932]
[72.42194366 610.17309570]
[67.57575989 624.38909912]
[61.01928329 637.90173340]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 196]
[36 195]
[37 194]
[39 193]
[40 192]
[41 191]
[42 190]
[44 188]
[45 187]
[46 186]
[47 185]
[54 178]
[55 177]
[56 176]
[57 175]
[58 169]
[59 168]
[60 167]
[61 166]
[63 164]
[74 163]
[75 162]
[76 161]
[77 160]
[78 159]
[80 158]
[81 157]
[82 155]
[83 154]
[85 151]
[86 150]
[87 149]
[88 127]
[90 125]
[91 124]
[92 121]
[93 120]
[94 119]
[95 118]
[96 117]
[97 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
