%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[64.04486084 567.54284668]
[58.53243637 581.54022217]
[50.54164505 594.28631592]
[40.34465790 605.34686279]
[28.28877640 614.34521484]
[14.78462219 620.97491455]
[0.29213971 625.01007080]
[-14.69506168 626.31329346]
[-29.66652489 624.84020996]
[-44.11232376 620.64099121]
[-57.54044342 613.85864258]
[-69.49353027 604.72418213]
[-79.56445312 593.54870605]
[-87.41021729 580.71289062]
[-92.76358795 566.65386963]
[-95.44223785 551.85046387]
[-95.35491943 536.80700684]
[-92.50463104 522.03570557]
[-86.98842621 508.03979492]
[-78.99420166 495.29586792]
[-68.79423523 484.23806763]
[-56.73592758 475.24295044]
[-43.22998810 468.61694336]
[-28.73641777 464.58566284]
[-13.74886513 463.28646851]
[1.22219968 464.76358032]
[5.40921068 450.35980225]
[9.59622192 435.95602417]
[13.78323364 421.55224609]
[17.97024536 407.14846802]
[5.33605194 415.23406982]
[-9.64419079 414.46444702]
[-21.38322258 405.12661743]
[-25.50267601 390.70336914]
[-20.46609497 376.57421875]
[-8.15200233 368.00897217]
[6.84675217 368.20230103]
[18.93600273 377.08206177]
[23.60676575 391.33749390]
[29.47572708 377.53329468]
[27.33498001 362.79333496]
[39.85496140 353.12066650]
[45.72392273 339.31649780]
[51.59288406 325.51232910]
[57.46184540 311.70812988]
[63.33080673 297.90396118]
[69.19976807 284.09979248]
[73.27943420 269.66522217]
[75.50454712 254.83119202]
[77.72966766 239.99714661]
[79.95478058 225.16310120]
[81.84807587 210.28306580]
[83.40859985 195.36445618]
[84.96912384 180.44586182]
[73.83028412 167.84565735]
[75.27946472 150.75137329]
[88.90656281 139.78225708]
[90.24479675 124.84207153]
[91.58303070 109.90188599]
[92.47584534 94.92848206]
[92.92245483 79.93512726]
[93.36906433 64.94178009]
[93.81566620 49.94842911]
[93.81566620 34.94842911]
[93.36906433 19.95508003]
[92.92245483 4.96173048]
[92.47584534 -10.03162003]
[89.09232330 -18.51628494]
[92.13588715 -25.25115776]
[91.91255951 -40.24949265]
[91.68923187 -55.24783325]
[80.63012695 -66.21752167]
[80.61730194 -81.43114471]
[91.14337158 -91.90670776]
[90.92004395 -106.90504456]
[90.69671631 -121.90338135]
[90.47338867 -136.90171814]
[90.25006104 -151.90005493]
[77.20909119 -157.34797668]
[67.25966644 -167.32460022]
[61.88056946 -180.30038452]
[61.85342026 -194.30358887]
[67.14930725 -207.21997070]
[76.93811798 -217.11195374]
[89.71846008 -222.50926208]
[89.71846008 -237.50926208]
[89.71846008 -252.50926208]
[77.42779541 -243.91046143]
[62.99935913 -248.01171875]
[57.06926346 -261.78973389]
[64.00895691 -275.08789062]
[78.70274353 -278.10324097]
[90.31821442 -268.61453247]
[91.43386841 -283.57296753]
[92.54951477 -298.53143311]
[85.86005402 -312.86883545]
[94.52253723 -324.98538208]
[95.63818359 -339.94384766]
[96.75382996 -354.90231323]
[82.82931519 -360.85095215]
[71.59246826 -371.00042725]
[64.26217651 -384.24981689]
[61.63357544 -399.16186523]
[63.99179459 -414.11904907]
[71.08103943 -427.49893188]
[82.13231659 -437.85015869]
[95.94686127 -444.04992676]
[111.02618408 -445.42568970]
[125.73458862 -441.82824707]
[138.47662354 -433.64782715]
[147.87011719 -421.77175903]
[152.89613342 -407.48828125]
[153.00949097 -392.34674072]
[148.19790649 -377.98962402]
[138.98329163 -365.97421265]
[126.36517334 -357.60391235]
[111.71228790 -353.78665161]
[110.59664154 -338.82818604]
[109.48098755 -323.86975098]
[116.25025177 -310.60226440]
[107.50796509 -297.41577148]
[106.39231873 -282.45733643]
[105.27667236 -267.49887085]
[104.71846008 -252.50926208]
[104.71846008 -237.50926208]
[104.71846008 -222.50926208]
[119.24581146 -215.85293579]
[129.45317078 -203.48266602]
[133.25785828 -187.84271240]
[129.84884644 -172.05224609]
[119.85901642 -159.28324890]
[105.24839783 -152.12338257]
[105.47172546 -137.12504578]
[105.69505310 -122.12670898]
[105.91838074 -107.12837219]
[106.14170837 -92.13003540]
[116.97501373 -81.97251892]
[117.41515350 -66.76525116]
[106.68756866 -55.47116089]
[106.91089630 -40.47282028]
[107.13422394 -25.47448540]
[107.46920013 -10.47822571]
[107.91580200 4.51512432]
[108.36241150 19.50847435]
[108.80901337 34.50182343]
[110.75450134 36.52005005]
[112.01775360 39.43051147]
[112.25494385 42.97722244]
[111.22115326 46.78455734]
[108.80901337 50.39503479]
[108.36241150 65.38838959]
[107.91580200 80.38173676]
[107.46920013 95.37508392]
[109.36370087 97.76263428]
[110.43134308 100.89227295]
[110.39559174 104.45909119]
[109.09644318 108.06026459]
[106.52321625 111.24011993]
[105.18498230 126.18030548]
[103.84674835 141.12048340]
[113.61549377 150.39337158]
[116.22192383 163.40939331]
[110.93420410 175.37275696]
[99.88772583 182.00637817]
[98.32720184 196.92498779]
[96.76667786 211.84358215]
[98.89377594 216.61041260]
[98.97188568 221.25230408]
[97.39172363 225.00971985]
[94.78882599 227.38821411]
[92.56371307 242.22225952]
[90.33859253 257.05630493]
[88.11347961 271.89035034]
[97.11299896 259.88998413]
[109.48429108 251.40757751]
[123.92176819 247.33830261]
[138.90182495 248.11157227]
[152.84356689 253.64579773]
[164.27569580 263.35696411]
[171.99176025 276.22018433]
[175.17744446 290.87799072]
[173.49658203 305.78350830]
[167.12652588 319.36373901]
[156.73954773 330.18548584]
[143.43180847 337.10678101]
[128.60769653 339.39712524]
[113.83164215 336.81484985]
[100.66299438 329.63244629]
[90.49147034 318.60794067]
[84.39049530 304.90472412]
[83.00394440 289.96875000]
[77.13497925 303.77291870]
[71.26602173 317.57708740]
[65.39706421 331.38128662]
[59.52809906 345.18545532]
[53.65913773 358.98962402]
[55.38010025 374.71694946]
[43.27990341 383.40225220]
[37.41094208 397.20645142]
[32.37402725 411.33547974]
[28.18701553 425.73925781]
[24.00000381 440.14303589]
[19.81299210 454.54681396]
[15.62598133 468.95059204]
[29.05592918 475.72933960]
[41.01147461 484.86056519]
[51.08541489 496.03332520]
[58.93463516 508.86703491]
[64.29179382 522.92462158]
[66.97443390 537.72723389]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 204]
[27 203]
[28 202]
[29 201]
[30 200]
[39 199]
[40 198]
[42 196]
[43 195]
[44 194]
[45 193]
[46 192]
[47 191]
[48 173]
[49 172]
[50 171]
[51 170]
[52 166]
[53 165]
[54 164]
[57 160]
[58 159]
[59 158]
[60 153]
[61 152]
[62 151]
[63 150]
[64 145]
[65 144]
[66 143]
[67 142]
[69 141]
[70 140]
[71 139]
[74 136]
[75 135]
[76 134]
[77 133]
[78 132]
[85 126]
[86 125]
[87 124]
[93 123]
[94 122]
[95 121]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
