%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[142.63519287 494.00512695]
[141.91450500 479.00582886]
[142.90834045 464.02218628]
[145.60374451 449.24948120]
[149.96557617 434.88034058]
[155.93696594 421.10208130]
[163.44006348 408.09436035]
[172.37704468 396.02670288]
[182.63140869 385.05648804]
[194.06947327 375.32669067]
[206.54209900 366.96420288]
[199.66268921 353.63479614]
[192.78327942 340.30535889]
[181.35865784 336.32983398]
[175.51821899 325.28118896]
[178.87512207 312.82748413]
[172.19491577 299.39712524]
[165.51472473 285.96673584]
[158.83453369 272.53637695]
[146.23883057 264.58666992]
[147.02062988 248.78480530]
[144.49111938 263.56997681]
[134.98413086 275.17245483]
[120.98480988 280.55935669]
[106.15251923 278.32260132]
[94.36439514 269.04681396]
[88.70181274 255.15669250]
[90.64497375 240.28309631]
[99.68592834 228.31391907]
[113.46140289 222.37789917]
[128.37051392 224.02667236]
[140.51548767 232.82858276]
[135.90147400 218.55584717]
[130.96987915 204.38972473]
[125.72316742 190.33724976]
[120.47644806 176.28477478]
[115.22972870 162.23229980]
[109.98301697 148.17984009]
[92.91254425 148.69009399]
[76.69593048 143.33448792]
[63.28683853 132.75822449]
[54.30070877 118.23545837]
[50.82013321 101.51580048]
[53.26442719 84.61354065]
[61.33911896 69.56493378]
[74.07142639 58.18294525]
[68.20246124 44.37876892]
[62.33350372 30.57459259]
[56.46454239 16.77041626]
[50.59558105 2.96623921]
[44.62401962 -10.79386425]
[38.55018234 -24.50913048]
[32.47634888 -38.22439575]
[27.15501595 -24.20001030]
[14.12579250 -16.76769638]
[-0.65453672 -19.32540512]
[-10.42860317 -30.70378876]
[-10.72783470 -45.70080566]
[-1.41542780 -57.46001816]
[13.25111103 -60.60527420]
[26.56769753 -53.69724655]
[21.95368767 -67.96997833]
[17.33967972 -82.24271393]
[5.73257589 -92.99378967]
[9.17982101 -107.48398590]
[4.56581163 -121.75672150]
[-0.04819770 -136.02944946]
[-4.66220713 -150.30218506]
[-9.27621651 -164.57492065]
[-13.89022541 -178.84765625]
[-18.50423431 -193.12039185]
[-20.77308273 -178.29296875]
[-26.75353813 -164.53672791]
[-36.04893875 -152.76406860]
[-48.04275131 -143.75582886]
[-61.93947220 -138.10948181]
[-76.81737518 -136.19953918]
[-91.68967438 -138.15269470]
[-105.56993866 -143.83937073]
[-117.53752899 -152.88241577]
[-126.79869843 -164.68202209]
[-132.73916626 -178.45558167]
[-134.96493530 -193.28952026]
[-133.32838440 -208.19998169]
[-127.93804169 -222.19799805]
[-119.15144348 -234.35511780]
[-107.55136108 -243.86502075]
[-93.90719604 -250.09693909]
[-79.12391663 -252.63752747]
[-64.18204498 -251.31829834]
[-50.07261658 -246.22673035]
[-37.73146057 -237.70054626]
[-27.97712135 -226.30525208]
[-21.45495605 -212.79176331]
[-21.23162842 -227.79010010]
[-21.00830078 -242.78843689]
[-20.78497314 -257.78677368]
[-20.56164551 -272.78512573]
[-34.64226151 -278.45086670]
[-45.72267151 -288.82336426]
[-52.30434036 -302.49984741]
[-53.49715042 -317.63067627]
[-49.13978195 -332.16949463]
[-39.82153702 -344.15011597]
[-26.80262756 -351.95217896]
[-11.84375954 -354.52056885]
[3.03200746 -351.50793457]
[15.81284618 -343.32168579]
[24.77025414 -331.06896973]
[28.69281387 -316.40686035]
[27.05003357 -301.31823730]
[20.06408310 -287.84378052]
[8.67975807 -277.80578613]
[-5.56330776 -272.56179810]
[-5.78663540 -257.56344604]
[-6.00996304 -242.56510925]
[-6.23329067 -227.56677246]
[-6.45661879 -212.56843567]
[-4.23150158 -197.73439026]
[0.38250786 -183.46166992]
[4.99651718 -169.18893433]
[9.61052608 -154.91619873]
[14.22453594 -140.64346313]
[18.83854485 -126.37072754]
[23.45255470 -112.09799957]
[34.72963333 -102.36779785]
[31.61241341 -86.85671997]
[36.22642136 -72.58398438]
[40.84043121 -58.31125259]
[46.19161606 -44.29823303]
[52.26544952 -30.58296394]
[58.33928299 -16.86769867]
[63.92199707 -12.02464867]
[64.39975739 -2.90272164]
[70.26871490 10.90145493]
[76.13768005 24.70563126]
[82.00663757 38.50980759]
[87.87560272 52.31398773]
[100.63263702 50.80084610]
[113.34654999 52.64151001]
[125.15065002 57.71049881]
[135.24029541 65.66227722]
[142.92767334 75.95478821]
[147.68876648 87.88640594]
[149.19900513 100.64378357]
[147.35546875 113.35727692]
[142.28379822 125.16023254]
[134.32974243 135.24806213]
[124.03548431 142.93312073]
[129.28219604 156.98558044]
[134.52891541 171.03805542]
[139.77563477 185.09053040]
[145.02235413 199.14300537]
[149.04975891 202.46371460]
[151.18693542 206.58509827]
[151.44548035 210.65304565]
[150.17420959 213.94184875]
[154.78822327 228.21458435]
[160.45100403 242.10459900]
[173.52452087 251.01492310]
[172.26490784 265.85617065]
[178.94509888 279.28656006]
[185.62530518 292.71691895]
[192.30549622 306.14730835]
[207.88319397 315.96649170]
[206.11270142 333.42593384]
[212.99211121 346.75537109]
[219.87153625 360.08480835]
[233.91345215 354.76293945]
[248.47050476 351.07647705]
[263.35290527 349.07342529]
[278.36660767 348.77993774]
[293.31591797 350.19985962]
[308.00588989 353.31460571]
[322.24508667 358.08364868]
[335.84780884 364.44476318]
[348.63671875 372.31506348]
[360.44509888 381.59188843]
[371.11901855 392.15432739]
[380.51931763 403.86468506]
[388.52340698 416.57028198]
[395.02697754 430.10546875]
[399.94525146 444.29379272]
[403.21405029 458.95028687]
[404.79080200 473.88385010]
[404.65496826 488.89981079]
[402.80825806 503.80242920]
[399.27481079 518.39733887]
[394.10064697 532.49438477]
[387.35324097 545.90966797]
[379.12057495 558.46838379]
[369.50994873 570.00671387]
[358.64666748 580.37432861]
[346.67236328 589.43597412]
[333.74316406 597.07360840]
[320.02755737 603.18756104]
[305.70443726 607.69818115]
[290.96047974 610.54669189]
[275.98794556 611.69586182]
[260.98199463 611.13079834]
[246.13829041 608.85882568]
[231.65031433 604.90954590]
[217.70698547 599.33447266]
[204.49006653 592.20635986]
[192.17185974 583.61798096]
[180.91296387 573.68145752]
[170.86016846 562.52618408]
[162.14453125 550.29772949]
[154.87966919 537.15545654]
[149.16030884 523.27069092]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 168]
[12 167]
[13 166]
[16 164]
[17 163]
[18 162]
[19 161]
[21 159]
[32 158]
[33 157]
[34 153]
[35 152]
[36 151]
[37 150]
[38 149]
[46 138]
[47 137]
[48 136]
[49 135]
[50 134]
[51 132]
[52 131]
[53 130]
[61 129]
[62 128]
[63 127]
[65 125]
[66 124]
[67 123]
[68 122]
[69 121]
[70 120]
[71 119]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
