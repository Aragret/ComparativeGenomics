%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[69.52453613 689.02789307]
[56.87057114 680.95190430]
[45.04158783 671.70959473]
[34.14471436 661.38470459]
[24.27863693 650.07080078]
[15.53270626 637.87023926]
[7.98612738 624.89355469]
[1.70724618 611.25830078]
[-3.24707413 597.08795166]
[-6.83196497 582.51080322]
[-9.01496124 567.65887451]
[-9.77629185 552.66668701]
[-9.10906124 537.67004395]
[-7.01931429 522.80474854]
[-3.52597523 508.20535278]
[1.33931911 494.00418091]
[7.53250647 480.32977295]
[14.99749947 467.30599976]
[23.66669273 455.05081177]
[33.46157455 443.67517090]
[44.29343414 433.28213501]
[56.06418610 423.96578979]
[68.66722107 415.81051636]
[81.98839569 408.89019775]
[95.90708160 403.26748657]
[110.29722595 398.99328613]
[107.41194916 384.27340698]
[104.52667999 369.55349731]
[101.64140320 354.83361816]
[98.75613403 340.11373901]
[95.87085724 325.39382935]
[83.64093781 312.80828857]
[89.75335693 295.43820190]
[86.64924622 280.76290894]
[82.08434296 295.05142212]
[72.72291565 306.77163696]
[59.79663849 314.38159180]
[45.00617599 316.88003540]
[30.29747200 313.93826294]
[17.60570717 305.94332886]
[8.60070229 293.94708252]
[4.46721983 279.52786255]
[5.74909210 264.58273315]
[12.27766514 251.07800293]
[23.19399452 240.79043579]
[37.06184769 235.07356262]
[52.05667114 234.67953491]
[66.20563507 239.66017151]
[77.64720917 249.36019897]
[84.87679291 262.50564575]
[85.10012054 247.50732422]
[85.32344818 232.50898743]
[85.43511963 217.50939941]
[85.43511963 202.50939941]
[73.14444733 211.10820007]
[58.71601486 207.00694275]
[52.78591919 193.22892761]
[59.72560883 179.93077087]
[74.41940308 176.91540527]
[86.03487396 186.40414429]
[87.15052032 171.44569397]
[88.26617432 156.48722839]
[89.38182068 141.52877808]
[90.49746704 126.57032776]
[91.61312103 111.61187744]
[85.71572876 98.93463135]
[93.42842865 87.27247620]
[94.54407501 72.31402588]
[82.50084686 81.25609589]
[67.64247131 79.19975281]
[58.48049164 67.32295990]
[60.26331329 52.42928696]
[71.96965790 43.05050278]
[86.89359283 44.55920029]
[96.48572540 56.09022903]
[98.93144989 41.29095840]
[101.37718201 26.49168587]
[103.82290649 11.69241524]
[106.26863098 -3.10685563]
[100.88497162 -17.98390961]
[110.59389496 -29.27931023]
[113.03961945 -44.07858276]
[115.48535156 -58.87785339]
[117.93107605 -73.67712402]
[120.37680054 -88.47639465]
[122.82253265 -103.27566528]
[125.26825714 -118.07493591]
[116.33473206 -130.83541870]
[119.02587128 -145.80914307]
[131.24609375 -154.24725342]
[133.69181824 -169.04652405]
[136.13755798 -183.84579468]
[138.58328247 -198.64506531]
[140.03269958 -213.57487488]
[140.47930908 -228.56822205]
[140.92590332 -243.56156921]
[141.37251282 -258.55493164]
[141.81912231 -273.54827881]
[127.72643280 -279.13146973]
[116.39526367 -289.20025635]
[109.19390869 -302.53878784]
[106.99196625 -317.53634644]
[110.05532837 -332.38195801]
[118.01407623 -345.28286743]
[129.90716553 -354.68130493]
[144.29843140 -359.44232178]
[159.45005798 -358.99099731]
[173.53244019 -353.38183594]
[184.84503174 -343.29217529]
[192.02178955 -329.94039917]
[194.19609070 -314.93881226]
[191.10537720 -300.09887695]
[183.12286377 -287.21264648]
[171.21249390 -277.83615112]
[156.81246948 -273.10165405]
[156.36585999 -258.10830688]
[155.91926575 -243.11497498]
[155.47265625 -228.12161255]
[155.02604675 -213.12826538]
[164.68830872 -224.60174561]
[178.98794556 -229.13165283]
[193.49409485 -225.31434631]
[203.71183777 -214.33264160]
[206.47511292 -199.58937073]
[200.92768860 -185.65286255]
[188.78848267 -176.84152222]
[173.81896973 -175.88563538]
[160.65760803 -183.08137512]
[153.38255310 -196.19934082]
[150.93682861 -181.40007019]
[148.49108887 -166.60079956]
[146.04536438 -151.80152893]
[154.90103149 -139.88041687]
[152.63153076 -124.83701324]
[140.06753540 -115.62921143]
[137.62179565 -100.82994080]
[135.17607117 -86.03067017]
[132.73034668 -71.23139954]
[130.28462219 -56.43212509]
[127.83889008 -41.63285446]
[125.39316559 -26.83358383]
[130.95176697 -13.01507187]
[121.06790924 -0.66112816]
[118.62217712 14.13814259]
[116.17645264 28.93741417]
[113.73072052 43.73668289]
[111.28499603 58.53595352]
[109.50253296 73.42967224]
[108.38687897 88.38812256]
[114.28427124 101.06536865]
[106.57157135 112.72752380]
[105.45592499 127.68597412]
[104.34027100 142.64442444]
[103.22462463 157.60289001]
[102.10897827 172.56134033]
[100.99333191 187.51979065]
[100.43511963 202.50939941]
[100.43511963 217.50939941]
[103.56452942 226.09104919]
[100.32178497 232.73231506]
[100.09845734 247.73065186]
[99.87512970 262.72897339]
[101.32455444 277.65878296]
[104.42866516 292.33410645]
[114.79348755 300.01089478]
[117.07678986 312.29788208]
[110.59075165 322.50857544]
[113.47602081 337.22845459]
[116.36129761 351.94833374]
[119.24656677 366.66824341]
[122.13184357 381.38812256]
[125.01711273 396.10803223]
[139.95599365 394.63336182]
[154.96740723 394.58544922]
[169.91539001 395.96469116]
[184.66459656 398.75857544]
[199.08142090 402.94186401]
[213.03532410 408.47659302]
[226.39991760 415.31271362]
[239.05418396 423.38824463]
[250.88349915 432.63009644]
[261.78076172 442.95458984]
[271.64724731 454.26815796]
[280.39361572 466.46838379]
[287.94067383 479.44479370]
[294.22006226 493.07983398]
[299.17489624 507.25000000]
[302.76031494 521.82702637]
[304.94384766 536.67889404]
[305.70571899 551.67102051]
[305.03903198 566.66766357]
[302.94982910 581.53308105]
[299.45703125 596.13256836]
[294.59225464 610.33392334]
[288.39956665 624.00854492]
[280.93502808 637.03259277]
[272.26629639 649.28808594]
[262.47183228 660.66412354]
[251.64035034 671.05755615]
[239.86993408 680.37432861]
[227.26719666 688.53002930]
[213.94627380 695.45086670]
[200.02778625 701.07409668]
[185.63781738 705.34881592]
[170.90664673 708.23626709]
[155.96771240 709.71038818]
[140.95629883 709.75775146]
[126.00835419 708.37799072]
[111.25926208 705.58355713]
[96.84258270 701.39971924]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 172]
[27 171]
[28 170]
[29 169]
[30 168]
[31 167]
[33 164]
[34 163]
[50 162]
[51 161]
[52 160]
[53 158]
[54 157]
[60 156]
[61 155]
[62 154]
[63 153]
[64 152]
[65 151]
[67 149]
[68 148]
[75 147]
[76 146]
[77 145]
[78 144]
[79 143]
[81 141]
[82 140]
[83 139]
[84 138]
[85 137]
[86 136]
[87 135]
[90 132]
[91 131]
[92 130]
[93 129]
[94 119]
[95 118]
[96 117]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
