%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGAUAAUACUCAGGAUCAACUGAACUUCACCUCUUCCGAUGCUAAAAAAACUACAGUAAAACACAUUCCCGCGUCUGACGACGCUUGUCUCACCACUAUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[3.41491842 453.27465820]
[9.04785347 467.23016357]
[11.84966850 482.01651001]
[11.71267033 497.06533813]
[8.64212322 511.79821777]
[2.75605297 525.64886475]
[-5.71929741 538.08489990]
[-16.45815659 548.62829590]
[-29.04775238 556.87377930]
[-43.00417709 562.50445557]
[-57.79097748 565.30389404]
[-72.83979034 565.16442871]
[-87.57218170 562.09155273]
[-101.42187500 556.20318604]
[-113.85652161 547.72583008]
[-124.39817810 536.98529053]
[-132.64164734 524.39434814]
[-138.27006531 510.43701172]
[-141.06709290 495.64974976]
[-140.92521667 480.60098267]
[-137.84989929 465.86907959]
[-131.95935059 452.02035522]
[-123.47997284 439.58706665]
[-112.73770142 429.04714966]
[-100.14543152 420.80572510]
[-86.18719482 415.17956543]
[-71.39948273 412.38491821]
[-56.35071945 412.52923584]
[-41.61932373 415.60693359]
[-35.75036240 401.80276489]
[-29.88140106 387.99856567]
[-24.01243973 374.19439697]
[-18.14348030 360.39022827]
[-12.27451897 346.58605957]
[-6.71529293 332.65426636]
[-1.46857476 318.60177612]
[3.77814341 304.54931641]
[2.65499830 301.20703125]
[3.09492040 297.15466309]
[5.41400862 293.13284302]
[9.58566380 289.99526978]
[15.45462418 276.19110107]
[14.48184013 272.80197144]
[15.10227108 268.77331543]
[17.59862900 264.85906982]
[21.90622520 261.91088867]
[28.38571930 248.38253784]
[34.86521530 234.85420227]
[41.34471130 221.32585144]
[47.82420731 207.79750061]
[53.99997711 194.12783813]
[59.86893845 180.32365417]
[65.73789978 166.51948547]
[71.40068054 152.62945557]
[76.85604095 138.65666199]
[82.31140137 124.68386078]
[87.76675415 110.71105957]
[83.74172211 99.78218079]
[88.05809784 88.96505737]
[98.50133514 83.80947876]
[104.16412354 69.91944885]
[102.20919800 54.21948624]
[114.17873383 45.35498810]
[106.16856384 32.19659424]
[107.42768097 17.02200890]
[117.26436615 5.63325405]
[131.74763489 2.26091337]
[137.41043091 -11.62911320]
[143.07321167 -25.51914024]
[148.73600769 -39.40916824]
[148.02403259 -44.58026123]
[149.24473572 -49.05945587]
[151.81091309 -52.22643661]
[154.97427368 -53.78384399]
[159.37527466 -68.12369537]
[161.82099915 -82.92296600]
[164.26672363 -97.72223663]
[166.71244812 -112.52150726]
[169.15818787 -127.32077789]
[171.60391235 -142.12004089]
[166.22024536 -156.99710083]
[175.92916870 -168.29249573]
[178.37489319 -183.09176636]
[180.82061768 -197.89103699]
[181.37882996 -212.88064575]
[180.04060364 -227.82083130]
[178.70236206 -242.76101685]
[177.36413574 -257.70120239]
[176.02589417 -272.64138794]
[174.68766785 -287.58157349]
[159.78569031 -289.86071777]
[145.86244202 -295.64059448]
[133.72740173 -304.58508301]
[124.08609772 -316.17425537]
[117.49904633 -329.73428345]
[114.34921265 -344.47680664]
[114.81973267 -359.54470825]
[118.88323975 -374.06198120]
[126.30349731 -387.18460083]
[136.64909363 -398.14965820]
[149.31855774 -406.31961060]
[163.57528687 -411.21951294]
[178.59043884 -412.56445312]
[193.49102783 -410.27627563]
[207.41076660 -404.48797607]
[219.54037476 -395.53610229]
[229.17465210 -383.94110107]
[235.75347900 -370.37707520]
[238.89437866 -355.63265991]
[238.41471863 -340.56503296]
[234.34242249 -326.05023193]
[226.91419983 -312.93209839]
[216.56196594 -301.97332764]
[203.88755798 -293.81106567]
[189.62785339 -288.91979980]
[190.96607971 -273.97961426]
[192.30432129 -259.03942871]
[193.64254761 -244.09925842]
[194.98078918 -229.15907288]
[196.31901550 -214.21888733]
[202.23255920 -228.00402832]
[212.25279236 -239.16622925]
[225.32228088 -246.52752686]
[240.06175232 -249.31105042]
[254.91571045 -247.22306824]
[268.31661987 -240.48391724]
[278.85018921 -229.80479431]
[285.40481567 -216.31269836]
[287.28881836 -201.43147278]
[284.30328369 -186.73158264]
[276.76336670 -173.76434326]
[265.46472168 -163.89820862]
[251.59974670 -158.17437744]
[236.63162231 -157.19689941]
[222.13999939 -161.06892395]
[209.65419006 -169.38183594]
[200.49185181 -181.25836182]
[195.61988831 -195.44531250]
[193.17416382 -180.64604187]
[190.72843933 -165.84677124]
[196.28703308 -152.02825928]
[186.40318298 -139.67431641]
[183.95745850 -124.87504578]
[181.51171875 -110.07577515]
[179.06599426 -95.27650452]
[176.62026978 -80.47723389]
[174.17454529 -65.67796326]
[183.24810791 -77.62243652]
[195.53266907 -86.22997284]
[209.85733032 -90.68016052]
[224.85675049 -90.54883575]
[239.10128784 -85.84851074]
[251.23326111 -77.02720642]
[260.09628296 -64.92568970]
[264.84564209 -50.69742203]
[265.02862549 -35.69853592]
[260.62777710 -21.35863876]
[252.06260681 -9.04451370]
[240.14945984 0.07013480]
[226.02381897 5.11655569]
[211.03205872 5.61375713]
[196.60310364 1.51434815]
[184.11221313 -6.79094124]
[174.74995422 -18.51050377]
[169.40867615 -32.52730560]
[168.59759521 -47.50648499]
[162.62602234 -33.74637985]
[156.96324158 -19.85635376]
[151.30046082 -5.96632719]
[145.63766479 7.92369986]
[153.63478088 20.46100998]
[152.70497131 35.48097610]
[142.99562073 47.21051025]
[128.06877136 51.01777649]
[130.42872620 65.72422791]
[118.05414581 75.58223724]
[112.39135742 89.47225952]
[115.10182190 106.02610016]
[101.73955536 116.16641998]
[96.28419495 130.13922119]
[90.82884216 144.11201477]
[85.37348175 158.08480835]
[85.99134827 164.66734314]
[83.55751801 169.80285645]
[79.54207611 172.38844299]
[73.67311096 186.19261169]
[67.80415344 199.99679565]
[68.43904877 205.17791748]
[67.15178680 209.63844299]
[64.53874969 212.76686096]
[61.35255432 214.27699280]
[54.87305832 227.80534363]
[48.39356232 241.33369446]
[41.91406631 254.86203003]
[35.43457031 268.39038086]
[29.25880051 282.06005859]
[23.38984108 295.86422729]
[17.83061409 309.79602051]
[12.58389664 323.84851074]
[7.33717823 337.90097046]
[8.20278740 343.04858398]
[7.11598825 347.56213379]
[4.64524269 350.80410767]
[1.52965808 352.45501709]
[-4.33930254 366.25918579]
[-10.20826340 380.06335449]
[-16.07722473 393.86755371]
[-21.94618416 407.67172241]
[-27.81514549 421.47589111]
[-15.37775135 429.94921875]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 209]
[30 208]
[31 207]
[32 206]
[33 205]
[34 204]
[35 200]
[36 199]
[37 198]
[41 197]
[42 196]
[46 195]
[47 194]
[48 193]
[49 192]
[50 191]
[51 187]
[52 186]
[53 185]
[54 182]
[55 181]
[56 180]
[57 179]
[60 177]
[61 176]
[63 174]
[67 170]
[68 169]
[69 168]
[70 167]
[74 166]
[75 147]
[76 146]
[77 145]
[78 144]
[79 143]
[80 142]
[82 140]
[83 139]
[84 138]
[85 120]
[86 119]
[87 118]
[88 117]
[89 116]
[90 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
