%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[126.67603302 603.60986328]
[117.14753723 591.94702148]
[110.34938812 578.50830078]
[106.59954834 563.92224121]
[106.07339478 548.87109375]
[108.79553223 534.05877686]
[114.63865662 520.17816162]
[123.32946777 507.87841797]
[134.46148682 497.73483276]
[147.51403809 490.22183228]
[161.87663269 485.69085693]
[160.53839111 470.75067139]
[149.68417358 456.96105957]
[157.57052612 440.32113647]
[156.00999451 425.40255737]
[154.44947815 410.48394775]
[152.88894653 395.56533813]
[143.86955261 383.71206665]
[150.12916565 369.18182373]
[147.79368591 354.36477661]
[144.68957520 339.68945312]
[132.10475159 331.80541992]
[128.74769592 316.96679688]
[137.10252380 303.82015991]
[133.99841309 289.14483643]
[130.89430237 274.46954346]
[127.79019165 259.79425049]
[124.68608093 245.11894226]
[112.27013397 232.71687317]
[118.12326050 215.25772095]
[114.80100250 200.63024902]
[104.73596191 193.92045593]
[101.84841919 181.76126099]
[108.21700287 170.54502869]
[105.00373077 155.89324951]
[101.68147278 141.26577759]
[98.35920715 126.63832092]
[95.03694916 112.01086426]
[91.28064728 97.48880005]
[87.09364319 83.08502197]
[82.90663147 68.68123627]
[71.62477112 57.58934021]
[75.50191498 43.20820618]
[71.31490326 28.80442238]
[57.73023987 16.37307167]
[62.57543945 -0.49378964]
[58.17443848 -14.83363724]
[53.77344131 -29.17348480]
[49.37244415 -43.51333237]
[44.97144699 -57.85317993]
[40.57044601 -72.19302368]
[26.88890839 -79.63971710]
[22.62994766 -94.24505615]
[29.81354523 -107.24242401]
[25.41254807 -121.58226776]
[19.90301132 -128.86807251]
[21.05448914 -136.16847229]
[16.86747742 -150.57225037]
[12.68046665 -164.97602844]
[-5.38817787 -168.76431274]
[-18.96969604 -181.14306641]
[-24.36224174 -198.62135315]
[-20.15545654 -216.33477783]
[-7.59808111 -229.39935303]
[-12.42407894 -243.60180664]
[-17.25007629 -257.80426025]
[-22.07607460 -272.00671387]
[-26.90207100 -286.20916748]
[-38.10570145 -292.59991455]
[-41.83289719 -304.52850342]
[-36.60616302 -315.43759155]
[-41.22017288 -329.71032715]
[-45.83418274 -343.98306274]
[-50.44819260 -358.25579834]
[-54.32329178 -361.75302124]
[-56.27431870 -365.96572876]
[-56.35095596 -370.04116821]
[-54.93410492 -373.26992798]
[-58.90620041 -387.73443604]
[-62.87829590 -402.19897461]
[-66.85039520 -416.66348267]
[-81.86090851 -415.58151245]
[-96.79404449 -417.44900513]
[-111.07582092 -422.19424438]
[-124.15727234 -429.63479614]
[-135.53558350 -439.48468018]
[-144.77340698 -451.36529541]
[-151.51567078 -464.81997681]
[-155.50321960 -479.33154297]
[-156.58276367 -494.34222412]
[-154.71282959 -509.27505493]
[-149.96528625 -523.55609131]
[-142.52261353 -536.63629150]
[-132.67089844 -548.01306152]
[-120.78879547 -557.24896240]
[-107.33303833 -563.98901367]
[-92.82081604 -567.97424316]
[-77.80995178 -569.05133057]
[-62.87742233 -567.17901611]
[-48.59718704 -562.42913818]
[-35.51814651 -554.98431396]
[-24.14301872 -545.13079834]
[-14.90903664 -533.24719238]
[-8.17113018 -519.79034424]
[-4.18828583 -505.27746582]
[-3.11359334 -490.26641846]
[-4.98836136 -475.33419800]
[-9.74052811 -461.05474854]
[-17.18743324 -447.97689819]
[-27.04283905 -436.60336304]
[-38.92792892 -427.37130737]
[-52.38586807 -420.63558960]
[-48.41377258 -406.17105103]
[-44.44167709 -391.70654297]
[-40.46958160 -377.24200439]
[-36.17545700 -362.86978149]
[-31.56144714 -348.59707642]
[-26.94743919 -334.32434082]
[-22.33342934 -320.05160522]
[-8.69460869 -309.00851440]
[-12.69961643 -291.03515625]
[-7.87361860 -276.83270264]
[-3.04762077 -262.63024902]
[1.77837682 -248.42779541]
[6.60437441 -234.22534180]
[18.36233902 -233.56639099]
[29.24136543 -228.96778870]
[37.95808792 -220.94671631]
[43.47570038 -210.42550659]
[45.12724686 -198.62567139]
[42.69617462 -186.92613220]
[36.44438553 -176.70201111]
[27.08424950 -169.16304016]
[31.27126122 -154.75926208]
[35.45827103 -140.35548401]
[39.75239563 -125.98326874]
[44.15339279 -111.64341736]
[57.39140320 -104.91358948]
[62.05891800 -90.43363953]
[54.91029358 -76.59402466]
[59.31129456 -62.25417709]
[63.71229172 -47.91432953]
[68.11328888 -33.57448196]
[72.51428986 -19.23463440]
[76.91528320 -4.89478779]
[87.45150757 1.04782462]
[91.23540497 12.95856953]
[85.71868896 24.61741066]
[89.90569305 39.02119446]
[100.88806915 49.08283997]
[97.31040955 64.49422455]
[101.49742126 78.89801025]
[105.68443298 93.30179596]
[108.22148895 94.99082947]
[110.20005035 97.64032745]
[111.26319122 101.04520416]
[111.13474274 104.87139130]
[109.66441345 108.68860626]
[112.98667145 123.31606293]
[116.30892944 137.94352722]
[119.63118744 152.57098389]
[124.58357239 160.24638367]
[122.89230347 167.44091797]
[135.51473999 180.84822083]
[129.42846680 197.30799866]
[132.75071716 211.93545532]
[143.22869873 219.45707703]
[145.69468689 231.70872498]
[139.36138916 242.01483154]
[142.46549988 256.69012451]
[145.56959534 271.36544800]
[148.67370605 286.04074097]
[151.77781677 300.71603394]
[164.74044800 309.35363770]
[167.67939758 324.28070068]
[159.36488342 336.58535767]
[162.46899414 351.26065063]
[170.57734680 338.64105225]
[184.86257935 334.06588745]
[198.79367065 339.62689209]
[206.00151062 352.78161621]
[203.19078064 367.51593018]
[191.64649963 377.09347534]
[176.64654541 377.13555908]
[165.04777527 367.62130737]
[174.17878723 380.54165649]
[167.80755615 394.00482178]
[169.36807251 408.92340088]
[170.92860413 423.84201050]
[172.48912048 438.76062012]
[181.99905396 447.47406006]
[182.99168396 459.93194580]
[175.47857666 469.41241455]
[176.81681824 484.35260010]
[191.75601196 486.25897217]
[205.93598938 491.33267212]
[218.69351196 499.33639526]
[229.43188477 509.89581299]
[237.64884949 522.51702881]
[242.96009827 536.60974121]
[245.11720276 551.51483154]
[244.01928711 566.53509521]
[239.71768188 580.96807861]
[232.41358948 594.13867188]
[222.44863892 605.43084717]
[210.28890991 614.31652832]
[196.50312805 620.38006592]
[181.73608398 623.33782959]
[166.67845154 623.05151367]
[152.03451538 619.53454590]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 194]
[12 193]
[14 190]
[15 189]
[16 188]
[17 187]
[19 185]
[20 177]
[21 176]
[24 173]
[25 172]
[26 171]
[27 170]
[28 169]
[30 166]
[31 165]
[34 163]
[35 161]
[36 160]
[37 159]
[38 158]
[39 153]
[40 152]
[41 151]
[43 149]
[44 148]
[46 145]
[47 144]
[48 143]
[49 142]
[50 141]
[51 140]
[54 137]
[55 136]
[57 135]
[58 134]
[59 133]
[64 125]
[65 124]
[66 123]
[67 122]
[68 121]
[71 119]
[72 118]
[73 117]
[74 116]
[78 115]
[79 114]
[80 113]
[81 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
