%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[257.94058228 345.68411255]
[267.15020752 333.82601929]
[256.34805298 323.41864014]
[245.54591370 313.01126099]
[234.74375916 302.60388184]
[223.94158936 292.19650269]
[213.13943481 281.78915405]
[202.33728027 271.38177490]
[206.57379150 285.77105713]
[205.39884949 300.72497559]
[198.96704102 314.27606201]
[188.12457275 324.64141846]
[174.29795837 330.45733643]
[159.30633545 330.95861816]
[145.12211609 326.07931519]
[133.61145020 316.46136475]
[126.28879547 303.37020874]
[124.11755371 288.52819824]
[127.38339233 273.88803101]
[135.65664673 261.37588501]
[147.84880066 252.63798523]
[162.35578918 248.82391357]
[177.26896667 250.43548584]
[190.62814331 257.26211548]
[182.39932251 244.72071838]
[174.17051697 232.17932129]
[160.71939087 225.78271484]
[159.61790466 209.99989319]
[151.38909912 197.45849609]
[136.79873657 194.69134521]
[128.27490234 182.08979797]
[131.27627563 166.80485535]
[123.04747009 154.26345825]
[120.33336639 153.56217957]
[117.73352051 151.74354553]
[115.67489624 148.84571838]
[114.56278992 145.06051636]
[114.72816467 140.72154236]
[107.26042175 127.71259308]
[92.46553040 127.63934326]
[79.68020630 120.19424438]
[72.31449127 107.36302185]
[72.33293915 92.56796265]
[79.73062897 79.75514984]
[72.26288605 66.74619293]
[64.79514313 53.73724365]
[51.21445847 45.62086868]
[51.58847046 30.73095894]
[44.02409363 17.77795982]
[36.36349487 4.88163328]
[28.70289803 -8.01469421]
[21.04229927 -20.91102028]
[7.34227896 -28.82430077]
[7.49456215 -43.71812820]
[-6.20545912 -51.63140488]
[-6.05317593 -66.52523041]
[-13.71377373 -79.42156219]
[-21.37437057 -92.31788635]
[-37.63924789 -100.95127106]
[-37.17223358 -118.49404144]
[-45.02398682 -131.27488708]
[-52.87574387 -144.05572510]
[-60.72749710 -156.83656311]
[-74.42603302 -150.67388916]
[-88.80017853 -146.31359863]
[-103.61390686 -143.82727051]
[-118.62396240 -143.25575256]
[-133.58386230 -144.60842896]
[-148.24795532 -147.86308289]
[-162.37544250 -152.96626282]
[-175.73432922 -159.83418274]
[-188.10527039 -168.35406494]
[-199.28509521 -178.38598633]
[-209.09025574 -189.76524353]
[-217.35971069 -202.30494690]
[-223.95768738 -215.79920959]
[-228.77583313 -230.02642822]
[-231.73504639 -244.75299072]
[-232.78669739 -259.73706055]
[-231.91355896 -274.73257446]
[-229.12994385 -289.49334717]
[-224.48155212 -303.77691650]
[-218.04473877 -317.34878540]
[-209.92520142 -329.98608398]
[-200.25625610 -341.48129272]
[-189.19667053 -351.64566040]
[-176.92808533 -360.31225586]
[-163.65191650 -367.33877563]
[-149.58621216 -372.60983276]
[-134.96191406 -376.03887939]
[-120.01918793 -377.56961060]
[-105.00339508 -377.17687988]
[-90.16110229 -374.86715698]
[-75.73605347 -370.67834473]
[-61.96510315 -364.67922974]
[-49.07439041 -356.96835327]
[-37.27559280 -347.67227173]
[-26.76245308 -336.94372559]
[-17.70760918 -324.95880127]
[-10.25975132 -311.91433716]
[-4.54117870 -298.02456665]
[-0.64579451 -283.51751709]
[1.36243451 -268.63143921]
[1.45053160 -253.61076355]
[-0.38294980 -238.70214844]
[-4.10790205 -224.15042114]
[-9.66315842 -210.19450378]
[-16.95749664 -197.06358337]
[-25.87113762 -184.97328186]
[-36.25770950 -174.12213135]
[-47.94665527 -164.68832397]
[-40.09490204 -151.90748596]
[-32.24314499 -139.12663269]
[-24.39138985 -126.34579468]
[-12.70273399 -123.23101044]
[-6.05670738 -112.64733887]
[-8.47804451 -99.97848511]
[-0.81744671 -87.08216095]
[6.84315062 -74.18582916]
[19.99523544 -67.19498444]
[20.39088821 -51.37872314]
[33.54297256 -44.38787842]
[33.93862534 -28.57161903]
[41.59922409 -15.67529106]
[49.25982285 -2.77896428]
[56.92041779 10.11736298]
[63.03907776 14.26269627]
[64.59741974 23.26321793]
[77.64396667 30.44910431]
[77.80409241 46.26950073]
[85.27183533 59.27845383]
[92.73957825 72.28740692]
[107.53446960 72.36065674]
[120.31979370 79.80575562]
[127.68550873 92.63697815]
[127.66706085 107.43203735]
[120.26937103 120.24485016]
[127.73711395 133.25379944]
[135.58886719 146.03465271]
[143.81767273 158.57604980]
[159.03402710 161.90776062]
[167.20056152 174.74375916]
[163.93049622 189.22969055]
[172.15930176 201.77108765]
[186.19900513 209.06474304]
[186.71191406 223.95051575]
[194.94073486 236.49191284]
[203.16954041 249.03330994]
[212.74465942 260.57962036]
[223.54681396 270.98696899]
[234.34896851 281.39434814]
[245.15112305 291.80172729]
[255.95327759 302.20910645]
[266.75543213 312.61648560]
[277.55758667 323.02386475]
[289.06475830 313.37930298]
[301.53192139 305.01257324]
[314.81777954 298.01843262]
[328.77178955 292.47613525]
[343.23590088 288.44848633]
[358.04617310 285.98110962]
[373.03482056 285.10198975]
[388.03198242 285.82104492]
[402.86773682 288.13018799]
[417.37402344 292.00320435]
[431.38641357 297.39620972]
[444.74618530 304.24813843]
[457.30194092 312.48132324]
[468.91140747 322.00247192]
[479.44305420 332.70370483]
[488.77752686 344.46377563]
[496.80911255 357.14944458]
[503.44674683 370.61697388]
[508.61523438 384.71371460]
[512.25604248 399.27999878]
[514.32788086 414.15075684]
[514.80731201 429.15750122]
[513.68890381 444.13018799]
[510.98526001 458.89916992]
[506.72708130 473.29708862]
[500.96258545 487.16079712]
[493.75711060 500.33325195]
[485.19229126 512.66516113]
[475.36517334 524.01678467]
[464.38708496 534.25952148]
[452.38244629 543.27734375]
[439.48727417 550.96801758]
[425.84768677 557.24444580]
[411.61819458 562.03552246]
[396.96008301 565.28686523]
[382.03939819 566.96173096]
[367.02520752 567.04107666]
[352.08764648 565.52410889]
[337.39596558 562.42785645]
[323.11660767 557.78753662]
[309.41143799 551.65570068]
[296.43566895 544.10174561]
[284.33636475 535.21136475]
[273.25061035 525.08526611]
[263.30401611 513.83819580]
[254.60928345 501.59750366]
[247.26493835 488.50198364]
[241.35420227 474.69998169]
[236.94403076 460.34790039]
[234.08439636 445.60833740]
[232.80772400 430.64831543]
[233.12844849 415.63732910]
[235.04295349 400.74551392]
[238.52955627 386.14154053]
[243.54872131 371.99093628]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 155]
[3 154]
[4 153]
[5 152]
[6 151]
[7 150]
[8 149]
[24 148]
[25 147]
[26 146]
[28 144]
[29 143]
[32 140]
[33 139]
[38 138]
[39 137]
[44 132]
[45 131]
[46 130]
[48 128]
[49 126]
[50 125]
[51 124]
[52 123]
[54 121]
[56 119]
[57 118]
[58 117]
[60 114]
[61 113]
[62 112]
[63 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
