%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[26.51403809 424.77017212]
[24.95028496 409.72323608]
[28.11480522 394.92996216]
[35.69757080 381.83963013]
[46.95569611 371.73468018]
[60.78623199 365.60513306]
[59.22570801 350.68652344]
[57.66518784 335.76791382]
[56.10466385 320.84930420]
[54.54413986 305.93072510]
[52.98361588 291.01211548]
[43.78722000 283.15380859]
[42.36502838 270.73764038]
[50.02132797 260.35766602]
[48.68309402 245.41748047]
[47.34486008 230.47729492]
[46.00662613 215.53710938]
[44.66838837 200.59692383]
[39.26612473 214.59034729]
[30.92356491 227.05636597]
[20.04776192 237.38674927]
[7.16937065 245.07746887]
[-7.08324337 249.75325012]
[-22.01466370 251.18597412]
[-36.89635086 249.30572510]
[-51.00220108 244.20425415]
[-63.64395142 236.13046265]
[-74.20478821 225.47828674]
[-82.16941833 212.76747131]
[-87.14923096 198.61822510]
[-88.90126038 183.72090149]
[-87.34001160 168.80236816]
[-82.54166412 154.59054565]
[-74.74033356 141.77885437]
[-64.31667328 130.99241638]
[-51.77927399 122.75751495]
[-37.73986435 117.47595215]
[-22.88345337 115.40542603]
[-7.93492270 116.64696503]
[6.37635756 121.13998413]
[19.35210800 128.66526794]
[30.35921288 138.85563660]
[38.86061096 151.21388245]
[44.44150162 165.13702393]
[46.82925034 179.93908691]
[51.23024750 165.59924316]
[40.71857452 176.29992676]
[27.54845428 183.47962952]
[12.85923576 186.51719666]
[-2.07831573 185.14988708]
[-15.97195339 179.49595642]
[-27.61973763 170.04455566]
[-36.01401901 157.61329651]
[-40.42861176 143.27763367]
[-40.48160172 128.27772522]
[-36.16841125 113.91122437]
[-27.86217499 101.42097473]
[-16.28145981 91.88750458]
[-2.42811775 86.13555145]
[12.49940014 84.66272736]
[27.20971298 87.59644318]
[40.43023300 94.68289948]
[51.01725388 105.30904388]
[58.05488968 118.55561829]
[60.93431473 133.27665710]
[59.40729904 148.19523621]
[67.63610840 135.65382385]
[75.86491394 123.11242676]
[84.09372711 110.57102966]
[81.25088501 96.36312866]
[89.19964600 84.24853516]
[103.36487579 81.20016479]
[111.59368134 68.65876007]
[119.82249451 56.11736298]
[128.05130005 43.57596207]
[129.15278625 27.79314613]
[142.60391235 21.39654160]
[150.83271790 8.85514164]
[159.06152344 -3.68625832]
[167.29034424 -16.22765923]
[175.51914978 -28.76905823]
[183.74795532 -41.31045914]
[191.97676086 -53.85186005]
[200.20556641 -66.39325714]
[207.86616516 -79.28958893]
[214.94326782 -92.51511383]
[222.02037048 -105.74063873]
[229.09748840 -118.96617126]
[236.17459106 -132.19169617]
[243.25169373 -145.41722107]
[248.81091309 -159.34902954]
[252.78302002 -173.81355286]
[256.75512695 -188.27807617]
[260.72720337 -202.74259949]
[264.69931030 -217.20712280]
[268.67138672 -231.67164612]
[272.64349365 -246.13616943]
[276.61560059 -260.60067749]
[263.08621216 -267.17871094]
[250.99603271 -276.13095093]
[240.75686646 -287.15246582]
[232.71743774 -299.86791992]
[227.15158081 -313.84417725]
[224.24885559 -328.60522461]
[224.10812378 -343.64831543]
[226.73419189 -358.46109009]
[232.03759766 -372.53903198]
[239.83773804 -385.40264893]
[249.86892700 -396.61380005]
[261.78948975 -405.79067993]
[275.19345093 -412.62066650]
[289.62423706 -416.87115479]
[304.59039307 -418.39736938]
[319.58212280 -417.14736938]
[334.08883667 -413.16366577]
[347.61645508 -406.58200073]
[359.70419312 -397.62652588]
[369.94039917 -386.60223389]
[377.97640991 -373.88464355]
[383.53848267 -359.90686035]
[386.43725586 -345.14501953]
[386.57391357 -330.10189819]
[383.94384766 -315.28982544]
[378.63665771 -301.21331787]
[370.83303833 -288.35180664]
[360.79885864 -277.14334106]
[348.87579346 -267.96972656]
[335.47000122 -261.14334106]
[321.03805542 -256.89672852]
[306.07150269 -255.37454224]
[291.08010864 -256.62860107]
[287.10803223 -242.16406250]
[283.13592529 -227.69953918]
[279.16381836 -213.23501587]
[275.19174194 -198.77049255]
[271.21963501 -184.30596924]
[267.24752808 -169.84144592]
[263.27545166 -155.37692261]
[273.88507080 -165.98051453]
[287.57910156 -172.10203552]
[302.55590820 -172.93611145]
[316.84497070 -168.37298584]
[328.56637573 -159.01303101]
[336.17794800 -146.08770752]
[338.67825317 -131.29756165]
[335.73831177 -116.58848572]
[327.74496460 -103.89572144]
[315.74984741 -94.88921356]
[301.33111572 -90.75392914]
[286.38583374 -92.03392792]
[272.88031006 -98.56081390]
[262.59136963 -109.47585297]
[256.87277222 -123.34299469]
[256.47723389 -138.34011841]
[249.40011597 -125.11459351]
[242.32301331 -111.88906097]
[235.24591064 -98.66353607]
[228.16879272 -85.43801117]
[221.09169006 -72.21247864]
[235.72427368 -75.51210022]
[248.47740173 -67.61539459]
[252.04548645 -53.04594803]
[244.38456726 -40.14980698]
[229.88319397 -36.31446075]
[216.84837341 -43.73697662]
[212.74696350 -58.16445160]
[204.51815796 -45.62305069]
[196.28935242 -33.08164978]
[188.06054688 -20.54025078]
[179.83174133 -7.99885082]
[171.60293579 4.54254961]
[163.37413025 17.08395004]
[155.14530945 29.62535095]
[154.63240051 44.51111984]
[140.59269714 51.80477142]
[132.36389160 64.34616852]
[124.13508606 76.88757324]
[115.90627289 89.42897034]
[118.74911499 103.63687134]
[110.80035400 115.75146484]
[96.63512421 118.79983521]
[88.40631866 131.34123230]
[80.17750549 143.88264465]
[71.94869995 156.42404175]
[65.57009888 170.00024414]
[61.16909790 184.34008789]
[59.60857391 199.25869751]
[60.94680786 214.19888306]
[62.28504181 229.13906860]
[63.62327576 244.07925415]
[64.96150970 259.01943970]
[75.90130615 273.83166504]
[67.90222168 289.45159912]
[69.46274567 304.37017822]
[71.02326965 319.28878784]
[72.58379364 334.20739746]
[74.14431000 349.12600708]
[75.70483398 364.04461670]
[90.50444031 367.17938232]
[103.60999298 374.73580933]
[113.73754120 385.97360229]
[119.89488983 399.79180908]
[121.47880554 414.83660889]
[118.33411407 429.63412476]
[110.76889801 442.73458862]
[99.52432251 452.85461426]
[85.70201874 459.00271606]
[70.65614319 460.57653809]
[55.86075592 457.42193604]
[42.76534271 449.84793091]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 198]
[7 197]
[8 196]
[9 195]
[10 194]
[11 193]
[14 191]
[15 190]
[16 189]
[17 188]
[18 187]
[45 186]
[46 185]
[66 184]
[67 183]
[68 182]
[69 181]
[72 178]
[73 177]
[74 176]
[75 175]
[77 173]
[78 172]
[79 171]
[80 170]
[81 169]
[82 168]
[83 167]
[84 166]
[85 159]
[86 158]
[87 157]
[88 156]
[89 155]
[90 154]
[91 138]
[92 137]
[93 136]
[94 135]
[95 134]
[96 133]
[97 132]
[98 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
