%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[33.66001892 321.85290527]
[32.86879730 336.84252930]
[30.71776199 351.69812012]
[27.22473526 366.29653931]
[22.41866112 380.51684570]
[16.33936501 394.24118042]
[9.03722477 407.35583496]
[0.57274747 419.75210571]
[-8.98392487 431.32730103]
[-19.55360222 441.98550415]
[-31.04869652 451.63839722]
[-43.37395859 460.20596313]
[-56.42724991 467.61721802]
[-70.10041046 473.81076050]
[-84.28012848 478.73526001]
[-98.84891510 482.34991455]
[-113.68604279 484.62478638]
[-128.66856384 485.54098511]
[-143.67231750 485.09094238]
[-158.57298279 483.27838135]
[-173.24708557 480.11834717]
[-187.57302856 475.63699341]
[-201.43209839 469.87145996]
[-214.70945740 462.86953735]
[-227.29508972 454.68923950]
[-239.08468628 445.39834595]
[-249.98056030 435.07385254]
[-259.89242554 423.80130005]
[-268.73812866 411.67413330]
[-276.44439697 398.79278564]
[-282.94738770 385.26406860]
[-288.19317627 371.20001221]
[-292.13827515 356.71722412]
[-294.75006104 341.93569946]
[-296.00683594 326.97790527]
[-295.89822388 311.96777344]
[-294.42507935 297.02975464]
[-291.59967041 282.28756714]
[-287.44534302 267.86337280]
[-281.99658203 253.87673950]
[-275.29849243 240.44354248]
[-267.40658569 227.67509460]
[-258.38629150 215.67720032]
[-248.31231689 204.54928589]
[-237.26815796 194.38357544]
[-225.34533691 185.26428223]
[-212.64263916 177.26698303]
[-199.26533508 170.45794678]
[-185.32426453 164.89360046]
[-170.93496704 160.62005615]
[-156.21665955 157.67271423]
[-141.29132080 156.07600403]
[-126.28262329 155.84315491]
[-111.31493378 156.97610474]
[-96.51229095 159.46545410]
[-81.99734497 163.29057312]
[-67.89037323 168.41978455]
[-54.30828857 174.81056213]
[-41.36362457 182.40997314]
[-29.16364861 191.15501404]
[-17.80946159 200.97325134]
[-7.00730467 190.56587219]
[3.79485202 180.15850830]
[14.59700871 169.75112915]
[17.23287582 162.84649658]
[25.63832474 159.27070618]
[36.59423447 149.02531433]
[47.55014420 138.77992249]
[58.50605392 128.53453064]
[69.46195984 118.28913879]
[80.41786957 108.04374695]
[79.33256531 95.41538239]
[85.65596008 84.43047333]
[97.12130737 79.02680969]
[109.61857605 81.14145660]
[120.72581482 71.06031799]
[131.13317871 60.25816345]
[140.79399109 48.78346252]
[150.45480347 37.30876160]
[160.11561584 25.83406258]
[169.77642822 14.35936260]
[179.43724060 2.88466287]
[189.09805298 -8.59003735]
[178.29743958 -19.00732613]
[168.22474670 -30.12999725]
[158.92593384 -41.90730286]
[150.44342041 -54.28549957]
[142.81590271 -67.20811462]
[136.07818604 -80.61618042]
[130.26103210 -94.44852448]
[125.39096832 -108.64202118]
[121.49021912 -123.13191223]
[118.57658386 -137.85209656]
[116.66335297 -152.73539734]
[115.75925446 -167.71389771]
[115.86842346 -182.71925354]
[116.99035645 -197.68302917]
[119.11992645 -212.53691101]
[122.24742889 -227.21313477]
[126.35858917 -241.64474487]
[131.43464661 -255.76588440]
[137.45245361 -269.51211548]
[144.38452148 -282.82073975]
[152.19924927 -295.63101196]
[160.86097717 -307.88446045]
[170.33016968 -319.52523804]
[180.56361389 -330.50018311]
[191.51464844 -340.75921631]
[203.13328552 -350.25555420]
[215.36650085 -358.94583130]
[228.15850830 -366.79043579]
[241.45089722 -373.75357056]
[255.18305969 -379.80340576]
[269.29232788 -384.91241455]
[283.71429443 -389.05725098]
[298.38317871 -392.21899414]
[313.23205566 -394.38323975]
[328.19314575 -395.54006958]
[343.19824219 -395.68426514]
[358.17880249 -394.81512451]
[373.06652832 -392.93664551]
[387.79345703 -390.05734253]
[402.29241943 -386.19042969]
[416.49725342 -381.35351562]
[430.34310913 -375.56863403]
[443.76687622 -368.86224365]
[456.70724487 -361.26489258]
[469.10522461 -352.81130981]
[480.90417480 -343.53997803]
[492.05032349 -333.49328613]
[502.49279785 -322.71701050]
[512.18395996 -311.26037598]
[521.07952881 -299.17559814]
[529.13897705 -286.51788330]
[536.32550049 -273.34490967]
[542.60638428 -259.71685791]
[547.95281982 -245.69587708]
[552.34057617 -231.34593201]
[555.74951172 -216.73251343]
[558.16412354 -201.92230225]
[559.57342529 -186.98284912]
[559.97088623 -171.98236084]
[559.35479736 -156.98924255]
[557.72790527 -142.07192993]
[555.09771729 -127.29848480]
[551.47613525 -112.73630524]
[546.87969971 -98.45184326]
[541.32940674 -84.51026917]
[534.85058594 -70.97520447]
[527.47283936 -57.90840530]
[519.22973633 -45.36948776]
[510.15896606 -33.41566849]
[500.30184937 -22.10149002]
[489.70343018 -11.47857666]
[478.41201782 -1.59539866]
[466.47918701 7.50294924]
[453.95932007 15.77495289]
[440.90957642 23.18286896]
[427.38949585 29.69289589]
[413.46078491 35.27532959]
[399.18695068 39.90470123]
[384.63317871 43.55988312]
[369.86584473 46.22420120]
[354.95230103 47.88549805]
[339.96066284 48.53619003]
[324.95928955 48.17331314]
[310.01663208 46.79851913]
[295.20089722 44.41808319]
[280.57965088 41.04286575]
[266.21960449 36.68827057]
[252.18632507 31.37416267]
[238.54380798 25.12479019]
[225.35430908 17.96866798]
[212.67800903 9.93844891]
[200.57275391 1.07077312]
[190.91194153 12.54547310]
[181.25112915 24.02017403]
[171.59031677 35.49487305]
[161.92950439 46.96957397]
[152.26869202 58.44427490]
[142.60787964 69.91897583]
[157.30627441 66.92604828]
[171.32760620 72.25540161]
[180.32723999 84.25567627]
[181.51654053 99.20845795]
[174.52697754 112.48046112]
[161.52435303 119.95920563]
[146.53765869 119.32733917]
[134.21070862 110.78063202]
[128.36311340 96.96738434]
[130.80694580 82.16755676]
[119.69971466 92.24869537]
[119.27832031 108.74687958]
[107.14063263 119.92919922]
[90.66326141 118.99965668]
[79.70735168 129.24505615]
[68.75144196 139.49044800]
[57.79553604 149.73583984]
[46.83962631 159.98123169]
[35.88371658 170.22660828]
[25.00438118 180.55328369]
[14.20222473 190.96066284]
[3.40006876 201.36802673]
[-7.40208769 211.77540588]
[1.98680639 223.48710632]
[10.27178764 236.00405884]
[17.38420105 249.22256470]
[23.26511383 263.03308105]
[27.86578941 277.32113647]
[31.14810562 291.96838379]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 204]
[62 203]
[63 202]
[64 201]
[66 200]
[67 199]
[68 198]
[69 197]
[70 196]
[71 195]
[75 192]
[76 191]
[77 181]
[78 180]
[79 179]
[80 178]
[81 177]
[82 176]
[83 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
