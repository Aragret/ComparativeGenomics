%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[75.13007355 631.10443115]
[72.53714752 615.89654541]
[78.59886932 601.70996094]
[91.38096619 593.07159424]
[90.93436432 578.07824707]
[90.48775482 563.08489990]
[90.04115295 548.09155273]
[89.25982666 533.11187744]
[88.14418030 518.15344238]
[87.02853394 503.19497681]
[85.91288757 488.23651123]
[71.51239014 484.24765015]
[59.32265854 475.55630493]
[50.82611847 463.19577026]
[47.06414795 448.64691162]
[48.50948715 433.66088867]
[55.00690460 420.04824829]
[65.78961182 409.46026611]
[79.56974030 403.18862915]
[78.45409393 388.23019409]
[77.33844757 373.27172852]
[76.22280121 358.31326294]
[66.50113678 369.73645020]
[51.73271942 372.36209106]
[38.66946793 364.98974609]
[33.28372955 350.98995972]
[38.03778458 336.76324463]
[50.75814819 328.81390381]
[65.62924194 330.77621460]
[75.85292816 341.75476074]
[76.29953003 326.76141357]
[76.74613953 311.76806641]
[77.19274139 296.77471924]
[77.63935089 281.78137207]
[75.81744385 279.65090942]
[74.72966003 276.67041016]
[74.70399475 273.11587524]
[75.96257019 269.37683105]
[78.58532715 265.91632080]
[79.92356110 250.97613525]
[81.26179504 236.03594971]
[82.60002899 221.09576416]
[76.02906036 207.72895813]
[84.96669769 194.67410278]
[76.73593903 179.17501831]
[87.45398712 164.20155334]
[88.56963348 149.24310303]
[89.68528748 134.28463745]
[87.04798126 127.38055420]
[90.93052673 119.11232758]
[92.26876068 104.17214203]
[90.51972961 101.67606354]
[89.64025879 98.48842621]
[89.88824463 94.93006134]
[91.39944458 91.41259766]
[94.15737152 88.39154053]
[96.38248444 73.55749512]
[98.60760498 58.72345352]
[100.83272552 43.88940811]
[102.50426483 28.98283386]
[103.61991119 14.02438068]
[104.73555756 -0.93407291]
[104.84722900 -15.93365765]
[103.95441437 -30.90706253]
[103.06159210 -45.88047028]
[102.16877747 -60.85387421]
[91.67485046 -75.98526764]
[100.13545227 -91.36008453]
[99.01980591 -106.31854248]
[97.90415192 -121.27699280]
[96.67717743 -136.22673035]
[95.33894348 -151.16691589]
[86.40130615 -164.22177124]
[92.97228241 -177.58857727]
[91.63404846 -192.52876282]
[89.74075317 -207.40879822]
[87.29502869 -222.20806885]
[84.84930420 -237.00733948]
[82.40357208 -251.80661011]
[79.95784760 -266.60586548]
[77.51212311 -281.40515137]
[74.84632111 -296.16638184]
[71.96105194 -310.88626099]
[61.71375275 -322.94046021]
[66.85845947 -336.91833496]
[63.97318649 -351.63821411]
[48.91471100 -352.22055054]
[34.39659882 -356.26049805]
[21.20178604 -363.54016113]
[10.04185772 -373.66699219]
[1.51865208 -386.09484863]
[-3.90818477 -400.15353394]
[-5.94599009 -415.08483887]
[-4.48486757 -430.08355713]
[0.39638576 -444.34085083]
[8.43453026 -457.08779907]
[19.19607925 -467.63699341]
[32.10067749 -475.41955566]
[46.45239258 -480.01574707]
[61.47725677 -481.17770386]
[76.36499786 -478.84280396]
[90.31273651 -473.13690186]
[102.56829834 -464.36773682]
[112.47074127 -453.00823975]
[119.48605347 -439.67098999]
[123.23589325 -425.07525635]
[123.51805115 -410.00817871]
[120.31729889 -395.28228760]
[113.80625916 -381.69174194]
[104.33605957 -369.96945190]
[92.41741180 -360.74758911]
[78.69307709 -354.52349854]
[81.57834625 -339.80358887]
[91.61927032 -328.80227661]
[86.68094635 -313.77154541]
[89.56621552 -299.05163574]
[92.95967865 -295.69107056]
[94.27807617 -290.16305542]
[92.31139374 -283.85089111]
[94.75711823 -269.05160522]
[97.20284271 -254.25233459]
[99.64857483 -239.45306396]
[102.09429932 -224.65379333]
[104.54003143 -209.85452271]
[115.26419830 -220.34223938]
[130.16825867 -218.64839172]
[138.26548767 -206.02163696]
[133.58689880 -191.76994324]
[119.58139038 -186.39912415]
[106.57423401 -193.86698914]
[107.91246796 -178.92680359]
[116.75438690 -166.94058228]
[110.27912903 -152.50514221]
[111.61736298 -137.56495667]
[115.34507751 -131.18327332]
[112.86260986 -122.39264679]
[113.97825623 -107.43418884]
[115.09390259 -92.47573853]
[124.05225372 -84.34711456]
[125.10414124 -71.89410400]
[117.14218903 -61.74668884]
[118.03500366 -46.77328491]
[118.92781830 -31.79987907]
[119.82063293 -16.82647324]
[128.42074585 -29.11622810]
[142.25923157 -34.90382004]
[157.04809570 -32.39590454]
[168.20483398 -22.36958313]
[172.27241516 -7.93162012]
[167.99046326 6.44422245]
[156.68577576 16.30343437]
[141.86123657 18.59103012]
[128.11039734 12.59817600]
[119.69401550 0.18157576]
[118.57836914 15.14002895]
[117.46271515 30.09848213]
[130.35888672 22.43763161]
[144.44232178 27.60066414]
[149.33123779 41.78158951]
[141.42169189 54.52675247]
[126.54432678 56.44089508]
[115.66676331 46.11452484]
[113.44165039 60.94857025]
[111.21652985 75.78261566]
[108.99141693 90.61665344]
[107.20894623 105.51037598]
[105.87071228 120.45056152]
[104.64373779 135.40029907]
[103.52809143 150.35874939]
[102.41244507 165.31719971]
[110.22243500 175.58203125]
[108.98526001 188.01799011]
[99.90687561 196.01234436]
[106.38213348 210.44776917]
[97.54021454 222.43400574]
[96.20198059 237.37419128]
[94.86374664 252.31437683]
[93.52551270 267.25454712]
[92.63269806 282.22796631]
[92.18609619 297.22131348]
[91.73948669 312.21466064]
[91.29287720 327.20800781]
[90.84627533 342.20135498]
[91.18125153 357.19763184]
[92.29689789 372.15606689]
[93.41255188 387.11453247]
[94.52819824 402.07299805]
[109.08620453 406.23107910]
[121.32025146 415.10238647]
[129.76509094 427.60058594]
[133.41749573 442.20639038]
[131.85533142 457.15234375]
[125.28637695 470.63653564]
[114.52079773 481.03994751]
[100.87133789 487.12088013]
[101.98698425 502.07931519]
[103.10263824 517.03778076]
[104.21828461 531.99621582]
[107.15866852 536.30914307]
[108.06050110 540.86328125]
[107.17325592 544.84167480]
[105.03450012 547.64489746]
[105.48110962 562.63824463]
[105.92771149 577.63159180]
[106.37432098 592.62493896]
[119.64791870 600.48724365]
[126.54329681 614.28784180]
[124.86016083 629.62310791]
[115.13558197 641.59960938]
[100.47265625 646.39562988]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 205]
[5 204]
[6 203]
[7 202]
[8 198]
[9 197]
[10 196]
[11 195]
[19 187]
[20 186]
[21 185]
[22 184]
[30 183]
[31 182]
[32 181]
[33 180]
[34 179]
[39 178]
[40 177]
[41 176]
[42 175]
[44 173]
[46 170]
[47 169]
[48 168]
[50 167]
[51 166]
[56 165]
[57 164]
[58 163]
[59 162]
[60 156]
[61 155]
[62 154]
[63 144]
[64 143]
[65 142]
[66 141]
[68 138]
[69 137]
[70 136]
[71 134]
[72 133]
[74 131]
[75 130]
[76 124]
[77 123]
[78 122]
[79 121]
[80 120]
[81 119]
[82 116]
[83 115]
[85 113]
[86 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
