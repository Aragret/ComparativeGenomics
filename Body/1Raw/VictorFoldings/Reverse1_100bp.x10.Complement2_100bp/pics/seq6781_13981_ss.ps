%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[5.88244677 556.35882568]
[2.96322012 571.10260010]
[-2.17252469 585.22790527]
[-9.40439892 598.40368652]
[-18.56287575 610.32098389]
[-29.43326950 620.70056152]
[-41.76076126 629.29901123]
[-55.25637817 635.91479492]
[-69.60375977 640.39288330]
[-84.46659088 642.62823486]
[-99.49645233 642.56842041]
[-114.34103394 640.21496582]
[-128.65235901 635.62298584]
[-142.09494019 628.90008545]
[-154.35366821 620.20385742]
[-165.14117432 609.73822021]
[-174.20460510 597.74841309]
[-181.33148193 584.51556396]
[-186.35473633 570.34985352]
[-189.15663147 555.58337402]
[-189.67147827 540.56219482]
[-187.88720703 525.63848877]
[-183.84565735 511.16210938]
[-177.64155579 497.47235107]
[-169.42033386 484.89013672]
[-159.37471008 473.71041870]
[-147.74017334 464.19528198]
[-134.78944397 456.56774902]
[-120.82612610 451.00662231]
[-106.17752075 447.64230347]
[-91.18701935 446.55358887]
[-76.20601654 447.76605225]
[-61.58569336 451.25125122]
[-55.92290497 437.36120605]
[-50.26012039 423.47119141]
[-44.59733200 409.58117676]
[-51.19626236 400.27416992]
[-52.49644852 388.81878662]
[-48.05994415 378.04794312]
[-38.88195038 370.68142700]
[-27.17010880 368.63952637]
[-29.09116173 353.86932373]
[-16.42855453 344.38412476]
[-10.35472107 330.66888428]
[-4.28088713 316.95361328]
[1.79294682 303.23834229]
[7.86678076 289.52307129]
[13.94061470 275.80780029]
[12.01956177 261.03759766]
[24.68216705 251.55241394]
[30.75600243 237.83714294]
[36.82983398 224.12187195]
[42.90367126 210.40660095]
[40.98261642 195.63641357]
[53.64522171 186.15121460]
[59.71905518 172.43594360]
[65.79289246 158.72067261]
[71.86672211 145.00540161]
[77.94055939 131.29014587]
[84.01438904 117.57487488]
[90.08822632 103.85961151]
[95.12514496 89.73057556]
[99.09723663 75.26605225]
[103.06933594 60.80153275]
[107.04142761 46.33700943]
[111.01352692 31.87248421]
[114.98562622 17.40795898]
[118.95771790 2.94343591]
[121.73332977 -11.79752731]
[123.29385376 -26.71613121]
[124.74327087 -41.64593887]
[126.08150482 -56.58612442]
[127.41973877 -71.52631378]
[113.38211823 -79.75303650]
[104.36967468 -93.22966766]
[102.14455414 -109.22994995]
[107.10194397 -124.54360199]
[118.20108795 -136.12042236]
[133.18327332 -141.67782593]
[134.29891968 -156.63627625]
[135.41456604 -171.59472656]
[136.08435059 -186.57975769]
[136.30767822 -201.57809448]
[128.77670288 -215.49194336]
[136.70263672 -228.10260010]
[136.92596436 -243.10093689]
[137.14929199 -258.09927368]
[137.37261963 -273.09762573]
[137.59594727 -288.09594727]
[122.83734894 -290.99829102]
[108.83423615 -296.48941040]
[96.03675079 -304.39285278]
[84.85627747 -314.45449829]
[75.65222931 -326.35095215]
[68.72046661 -339.69973755]
[64.28382874 -354.07180786]
[62.48492432 -369.00509644]
[63.38158798 -384.01962280]
[66.94499207 -398.63269043]
[73.06059265 -412.37457275]
[81.53179932 -424.80349731]
[92.08628845 -435.51995850]
[104.38478851 -444.17947388]
[118.03194427 -450.50363159]
[132.58905029 -454.28915405]
[147.58818054 -455.41433716]
[162.54714966 -453.84304810]
[176.98510742 -449.62579346]
[190.43791199 -442.89810181]
[202.47312927 -433.87628174]
[212.70387268 -422.85034180]
[220.80126953 -410.17468262]
[226.50500488 -396.25680542]
[229.63174438 -381.54412842]
[230.08097839 -366.50958252]
[227.83825684 -351.63644409]
[222.97567749 -337.40286255]
[215.64953613 -324.26635742]
[206.09536743 -312.64923096]
[194.62028503 -302.92492676]
[181.59315491 -295.40603638]
[167.43275452 -290.33425903]
[152.59428406 -287.87261963]
[152.37095642 -272.87429810]
[152.14762878 -257.87594604]
[151.92430115 -242.87760925]
[151.70097351 -227.87927246]
[159.24792480 -215.03822327]
[151.30601501 -201.35476685]
[151.08268738 -186.35643005]
[152.93611145 -184.25335693]
[154.06816101 -181.28938293]
[154.14674377 -177.73562622]
[152.94396973 -173.97824097]
[150.37301636 -170.47908020]
[149.25737000 -155.52062988]
[148.14172363 -140.56216431]
[160.48524475 -134.22924805]
[169.51119995 -123.63661194]
[173.83174133 -110.36211395]
[172.76316833 -96.39971161]
[166.43386841 -83.85995483]
[155.76997375 -74.65095520]
[142.35992432 -70.18807983]
[141.02169800 -55.24789047]
[139.68345642 -40.30770493]
[142.21768188 -33.36511993]
[138.21246338 -25.15560913]
[136.65193176 -10.23700428]
[146.35273743 -21.67790985]
[160.22438049 -27.38560104]
[175.16787720 -26.08496284]
[187.84483337 -18.06656075]
[195.42318726 -5.12172890]
[196.20989990 9.85762596]
[190.02922058 23.52507782]
[178.26193237 32.82728195]
[163.53688049 35.68610382]
[149.14367676 31.46287537]
[138.29780579 21.10107422]
[133.42224121 6.91553211]
[129.45014954 21.38005638]
[125.47805023 35.84458160]
[121.50595856 50.30910492]
[117.53385925 64.77362823]
[113.56175995 79.23815155]
[109.58966827 93.70267487]
[121.33032227 84.36688232]
[136.15100098 82.05446625]
[150.17762756 87.36989594]
[159.74366760 98.92371368]
[162.34858704 113.69580078]
[157.31146240 127.82475281]
[145.94897461 137.61730957]
[131.23127747 140.51370239]
[117.00551605 135.75683594]
[106.99028015 124.59013367]
[103.80348969 109.93344116]
[97.72966003 123.64871216]
[91.65582275 137.36398315]
[85.58199310 151.07923889]
[79.50815582 164.79450989]
[73.43432617 178.50978088]
[67.36048889 192.22503662]
[68.84709930 207.97625732]
[56.61893463 216.48043823]
[50.54510117 230.19570923]
[44.47126770 243.91098022]
[38.39743423 257.62625122]
[39.88404465 273.37744141]
[27.65588188 281.88165283]
[21.58204842 295.59689331]
[15.50821400 309.31216431]
[9.43437958 323.02743530]
[3.36054564 336.74270630]
[-2.71328831 350.45797729]
[-1.22667623 366.20916748]
[-13.45484161 374.71337891]
[-5.96114063 392.11334229]
[-13.43723774 409.17266846]
[-30.70730591 415.24395752]
[-36.37009430 429.13397217]
[-42.03287888 443.02401733]
[-47.69566727 456.91403198]
[-34.80600739 464.64428711]
[-23.24749947 474.25164795]
[-13.29109383 485.51089478]
[-5.17018270 498.15808105]
[0.92486876 511.89672852]
[4.85118389 526.40484619]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 204]
[34 203]
[35 202]
[36 201]
[41 198]
[43 196]
[44 195]
[45 194]
[46 193]
[47 192]
[48 191]
[50 189]
[51 188]
[52 187]
[53 186]
[55 184]
[56 183]
[57 182]
[58 181]
[59 180]
[60 179]
[61 178]
[62 167]
[63 166]
[64 165]
[65 164]
[66 163]
[67 162]
[68 161]
[69 149]
[70 148]
[71 146]
[72 145]
[73 144]
[79 137]
[80 136]
[81 135]
[82 130]
[83 129]
[85 127]
[86 126]
[87 125]
[88 124]
[89 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
