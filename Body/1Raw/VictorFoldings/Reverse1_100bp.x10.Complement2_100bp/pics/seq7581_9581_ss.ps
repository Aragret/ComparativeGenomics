%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[52.49309158 658.76440430]
[37.64815903 656.52685547]
[23.09978485 652.82232666]
[8.99256611 647.68762207]
[-4.53329372 641.17382812]
[-17.34336472 633.34564209]
[-29.31032944 624.28082275]
[-40.31525421 614.06958008]
[-50.24876022 602.81329346]
[-59.01212311 590.62384033]
[-66.51824951 577.62243652]
[-72.69253540 563.93829346]
[-77.47361755 549.70733643]
[-80.81397247 535.07104492]
[-82.68041229 520.17492676]
[-83.05437469 505.16693115]
[-81.93215179 490.19631958]
[-79.32489777 475.41186523]
[-75.25851440 460.96044922]
[-69.77342987 446.98574829]
[-62.92414856 433.62661743]
[-54.77875137 421.01586914]
[-45.41818619 409.27880859]
[-34.93548965 398.53210449]
[-23.43484497 388.88256836]
[-11.03055286 380.42608643]
[2.15410280 373.24670410]
[15.98808384 367.41577148]
[30.33389854 362.99127197]
[45.04896927 360.01715088]
[59.98704147 358.52301025]
[59.98704147 343.52301025]
[59.98704147 328.52301025]
[59.98704147 313.52301025]
[59.98704147 298.52301025]
[57.76577377 295.78469849]
[56.76047516 291.83444214]
[57.52630615 287.25549316]
[60.33697891 282.85696411]
[61.00676346 267.87191772]
[61.67655182 252.88687134]
[62.34633636 237.90184021]
[52.51432800 249.23019409]
[38.14881897 253.54669189]
[23.70112228 249.51382446]
[13.64800835 238.38122559]
[11.10454655 223.59843445]
[16.85885620 209.74607849]
[29.12790298 201.11643982]
[44.10998535 200.38352966]
[57.16274643 207.77442932]
[64.24169922 220.99925232]
[66.90749359 206.23803711]
[69.57328796 191.47682190]
[64.22104645 177.57707214]
[74.28773499 165.37165833]
[76.95353699 150.61044312]
[65.69618988 160.52368164]
[50.88277817 162.88223267]
[37.10339355 156.95530701]
[28.62772942 144.57939148]
[28.08206367 129.58932495]
[35.63547516 116.62992096]
[48.94746017 109.71681213]
[63.89315033 110.99208832]
[75.84146118 120.06059265]
[81.09010315 134.11260986]
[85.70411682 119.83987427]
[90.31812286 105.56713867]
[94.82575226 91.26045227]
[99.22675323 76.92060852]
[92.07812500 63.08099365]
[96.74564362 48.60104370]
[109.98365021 41.87121201]
[114.38465118 27.53136444]
[118.78564453 13.19151688]
[123.18664551 -1.14833009]
[117.84411621 -12.88801479]
[121.80493164 -24.74110413]
[132.42846680 -30.52618790]
[137.04246521 -44.79892349]
[141.65647888 -59.07165527]
[146.27049255 -73.34439087]
[150.13479614 -87.83808136]
[148.84901428 -96.88156891]
[153.39591980 -102.70801544]
[148.90728760 -117.87913513]
[159.27131653 -128.57662964]
[162.59358215 -143.20408630]
[165.91583252 -157.83154297]
[169.23809814 -172.45901489]
[172.56034851 -187.08647156]
[175.88261414 -201.71392822]
[161.90502930 -207.23912048]
[148.93473816 -214.83331299]
[137.27577209 -224.31849670]
[127.20142365 -235.47233582]
[118.94786835 -248.03335571]
[112.70857239 -261.70712280]
[108.62979889 -276.17306519]
[106.80715179 -291.09213257]
[107.28337097 -306.11456299]
[110.04727173 -320.88824463]
[115.03408813 -335.06683350]
[122.12689972 -348.31796265]
[131.15945435 -360.33099365]
[141.92001343 -370.82437134]
[154.15634155 -379.55206299]
[167.58158875 -386.30953979]
[181.88105774 -390.93832397]
[196.71952820 -393.32995605]
[211.74919128 -393.42837524]
[226.61772156 -391.23126221]
[240.97657776 -386.79013062]
[254.48916626 -380.20904541]
[266.83871460 -371.64233398]
[277.73577881 -361.29077148]
[286.92486572 -349.39703369]
[294.19061279 -336.23992920]
[299.36267090 -322.12786865]
[302.31979370 -307.39166260]
[302.99270630 -292.37677002]
[301.36560059 -277.43511963]
[297.47659302 -262.91696167]
[291.41690063 -249.16267395]
[283.32855225 -236.49465942]
[273.40112305 -225.20983887]
[261.86737061 -215.57278442]
[248.99763489 -207.80938721]
[235.09361267 -202.10163879]
[220.48121643 -198.58332825]
[205.50300598 -197.33692932]
[190.51007080 -198.39166260]
[187.18782043 -183.76420593]
[183.86555481 -169.13674927]
[180.54328918 -154.50929260]
[177.22103882 -139.88182068]
[173.89877319 -125.25436401]
[178.62503052 -111.12950134]
[168.02337646 -99.38575745]
[164.81010437 -84.73397064]
[177.33395386 -92.98946381]
[192.24824524 -91.38835907]
[202.73439026 -80.66264343]
[203.99824524 -65.71598053]
[195.46199036 -53.38178635]
[181.02830505 -49.29907990]
[167.29605103 -55.33442307]
[160.54322815 -68.73037720]
[155.92921448 -54.45764542]
[151.31520081 -40.18491364]
[146.70120239 -25.91217804]
[151.29473877 -8.97504997]
[137.52648926 3.25266790]
[133.12548828 17.59251595]
[128.72450256 31.93236160]
[124.32350159 46.27220917]
[131.50709534 59.26957321]
[127.24813843 73.87491608]
[113.56659698 81.32160950]
[109.16559601 95.66145325]
[109.99919891 103.67878723]
[104.59085846 110.18115234]
[99.97684479 124.45388794]
[95.36283875 138.72662354]
[91.71475220 153.27624512]
[89.04895782 168.03746033]
[94.21052551 182.99301147]
[84.33450317 194.14260864]
[81.66870880 208.90382385]
[79.00291443 223.66505432]
[77.33137512 238.57162476]
[76.66159058 253.55665588]
[75.99180603 268.54168701]
[75.32202148 283.52673340]
[74.98704529 298.52301025]
[74.98704529 313.52301025]
[74.98704529 328.52301025]
[74.98704529 343.52301025]
[74.98704529 358.52301025]
[89.92511749 360.01715088]
[104.64018250 362.99127197]
[118.98600006 367.41577148]
[132.81997681 373.24670410]
[146.00463867 380.42608643]
[158.40893555 388.88256836]
[169.90957642 398.53210449]
[180.39227295 409.27880859]
[189.75283813 421.01586914]
[197.89823914 433.62661743]
[204.74751282 446.98574829]
[210.23260498 460.96044922]
[214.29898071 475.41186523]
[216.90623474 490.19631958]
[218.02845764 505.16693115]
[217.65449524 520.17492676]
[215.78805542 535.07104492]
[212.44770813 549.70733643]
[207.66662598 563.93829346]
[201.49234009 577.62243652]
[193.98620605 590.62384033]
[185.22283936 602.81329346]
[175.28933716 614.06958008]
[164.28440857 624.28082275]
[152.31744385 633.34564209]
[139.50738525 641.17382812]
[125.98152161 647.68762207]
[111.87429810 652.82232666]
[97.32592773 656.52685547]
[82.48099518 658.76440430]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 180]
[32 179]
[33 178]
[34 177]
[35 176]
[39 175]
[40 174]
[41 173]
[42 172]
[52 171]
[53 170]
[54 169]
[56 167]
[57 166]
[67 165]
[68 164]
[69 163]
[70 161]
[71 160]
[74 157]
[75 156]
[76 155]
[77 154]
[80 152]
[81 151]
[82 150]
[83 149]
[84 141]
[86 140]
[88 138]
[89 137]
[90 136]
[91 135]
[92 134]
[93 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
