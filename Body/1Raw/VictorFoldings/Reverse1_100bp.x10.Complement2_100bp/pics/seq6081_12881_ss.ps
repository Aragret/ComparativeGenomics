%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[126.11971283 499.91357422]
[126.11971283 484.91357422]
[126.11971283 469.91357422]
[122.97621155 463.22476196]
[126.23304749 454.69064331]
[126.45637512 439.69232178]
[126.23304749 424.69396973]
[117.93515778 412.32489014]
[125.04853058 398.19299316]
[124.37874603 383.20794678]
[123.70896149 368.22290039]
[122.70470428 353.25656128]
[121.36647034 338.31637573]
[120.02823639 323.37619019]
[111.18631744 311.38995361]
[117.66156769 296.95452881]
[108.81965637 284.96829224]
[115.29490662 270.53286743]
[113.95667267 255.59269714]
[112.61843872 240.65251160]
[111.28020477 225.71232605]
[109.94197083 210.77214050]
[108.15950775 195.87841797]
[105.93438721 181.04437256]
[103.70927429 166.21032715]
[101.48415375 151.37628174]
[99.03842926 136.57701111]
[96.37263489 121.81580353]
[93.70683289 107.05458069]
[90.18663788 103.16586304]
[89.09580231 97.58164978]
[91.18828583 91.81463623]
[88.96316528 76.98059082]
[86.73804474 62.14654541]
[74.06914520 56.71609879]
[65.80344391 45.82130051]
[64.01473999 32.37250137]
[69.06422424 19.89665222]
[79.53382874 11.61235619]
[77.52981567 -3.25317192]
[75.52579498 -18.11870003]
[73.52178192 -32.98423004]
[71.51776886 -47.84975815]
[67.78564453 -53.30711365]
[67.42410278 -58.97864914]
[69.68222809 -63.18696594]
[68.12170410 -78.10556793]
[66.56118011 -93.02417755]
[65.00065613 -107.94277954]
[63.44013596 -122.86138153]
[61.87961197 -137.77998352]
[60.31909180 -152.69859314]
[48.98969269 -142.86778259]
[34.21287918 -145.44572449]
[26.88156700 -158.53205872]
[32.40012741 -172.48001099]
[46.70048523 -177.00769043]
[59.24008560 -168.77885437]
[58.79347992 -183.77220154]
[58.34687424 -198.76554871]
[57.90026855 -213.75891113]
[57.23048401 -228.74394226]
[56.33766556 -243.71734619]
[55.44485092 -258.69076538]
[54.44058990 -273.65710449]
[53.32494354 -288.61553955]
[52.20929337 -303.57400513]
[49.63834381 -307.07318115]
[48.43557739 -310.83056641]
[48.51416016 -314.38430786]
[49.64620209 -317.34826660]
[51.49962234 -319.45135498]
[51.27629471 -334.44970703]
[43.33438873 -348.13314819]
[50.88134384 -360.97421265]
[50.65801239 -375.97253418]
[42.71753693 -363.24664307]
[30.08834457 -355.15319824]
[15.20893764 -353.25497437]
[0.95229614 -357.91848755]
[-9.92884541 -368.24325562]
[-15.33351040 -382.23571777]
[-14.21814060 -397.19421387]
[-6.79809809 -410.23040771]
[5.49392319 -418.82730103]
[20.28452682 -421.32489014]
[34.71788025 -417.24099731]
[46.00712585 -407.36410522]
[51.97272873 -393.60006714]
[54.41845703 -408.39932251]
[56.86418533 -423.19860840]
[59.30990982 -437.99786377]
[61.75563812 -452.79714966]
[60.06733322 -461.77420044]
[64.34952545 -467.79785156]
[67.01531982 -482.55908203]
[69.68111420 -497.32028198]
[72.34690857 -512.08148193]
[58.48673248 -517.98431396]
[46.28786469 -526.82373047]
[36.36219406 -538.15637207]
[29.20759201 -551.41381836]
[25.18292809 -565.93103027]
[24.49007797 -580.97985840]
[27.16379356 -595.80548096]
[33.06996536 -609.66424561]
[41.91234207 -621.86096191]
[53.24739075 -631.78387451]
[66.50655365 -638.93530273]
[81.02474976 -642.95642090]
[96.07376099 -643.64562988]
[110.89873505 -640.96832275]
[124.75605011 -635.05877686]
[136.95063782 -626.21350098]
[146.87080383 -614.87603760]
[154.01898193 -601.61511230]
[158.03662109 -587.09594727]
[158.72216797 -572.04675293]
[156.04127502 -557.22247314]
[150.12838745 -543.36657715]
[141.28010559 -531.17413330]
[129.94024658 -521.25671387]
[116.67761993 -514.11175537]
[102.15747070 -510.09762573]
[87.10813141 -509.41571045]
[84.44233704 -494.65451050]
[81.77653503 -479.89328003]
[79.11074066 -465.13204956]
[76.55490875 -450.35140991]
[74.10918427 -435.55212402]
[71.66345215 -420.75286865]
[69.21772766 -405.95358276]
[66.77200317 -391.15432739]
[65.65634918 -376.19586182]
[65.87967682 -361.19754028]
[73.80561066 -348.58688354]
[66.27463531 -334.67303467]
[66.49796295 -319.67468262]
[67.16774750 -304.68966675]
[68.28339386 -289.73120117]
[69.39904022 -274.77273560]
[73.03132629 -268.33627319]
[70.41825867 -259.58355713]
[71.31107330 -244.61016846]
[72.20388794 -229.63676453]
[75.11795807 -225.85295105]
[75.68598938 -220.19834900]
[72.89361572 -214.20550537]
[73.34022522 -199.21215820]
[73.78682709 -184.21881104]
[74.23343658 -169.22546387]
[75.23769379 -154.25910950]
[76.79821777 -139.34051514]
[78.35874176 -124.42190552]
[79.91926575 -109.50330353]
[81.47978973 -94.58469391]
[83.04031372 -79.66609192]
[84.60083008 -64.74748993]
[86.38330078 -49.85377121]
[88.38731384 -34.98824310]
[90.39132690 -20.12271309]
[92.39533997 -5.25718546]
[94.39935303 9.60834217]
[109.09207916 16.92963409]
[116.60098267 31.71402359]
[113.79016113 48.22464371]
[101.57209015 59.92142868]
[103.79721069 74.75547028]
[106.02232361 89.58951569]
[108.46805573 104.38878632]
[111.13385010 119.15000153]
[113.79964447 133.91122437]
[117.77173615 139.19648743]
[118.38616180 144.84622192]
[116.31819916 149.15116882]
[118.54331970 163.98521423]
[120.76843262 178.81925964]
[122.99355316 193.65330505]
[125.81763458 196.95156860]
[127.29653168 200.60906982]
[127.48248291 204.15884399]
[126.57402802 207.19879150]
[124.88215637 209.43389893]
[126.22039032 224.37408447]
[127.55862427 239.31427002]
[128.89686584 254.25445557]
[130.23509216 269.19464111]
[139.17272949 282.24951172]
[132.60176086 295.61630249]
[141.53939819 308.67117310]
[134.96841431 322.03796387]
[136.30665588 336.97814941]
[137.64488220 351.91833496]
[140.64915466 356.18698120]
[141.61869812 360.72717285]
[140.79078674 364.71838379]
[138.69400024 367.55313110]
[139.36378479 382.53817749]
[140.03356934 397.52319336]
[148.37936401 410.96414185]
[141.21807861 424.02420044]
[143.68371582 427.59835815]
[144.77407837 431.38989258]
[144.58970642 434.93972778]
[143.36993408 437.86868286]
[141.45471191 439.91564941]
[141.23138428 454.91397095]
[141.11972046 469.91357422]
[141.11972046 484.91357422]
[141.11972046 499.91357422]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 210]
[2 209]
[3 208]
[5 207]
[6 206]
[7 201]
[9 199]
[10 198]
[11 197]
[12 193]
[13 192]
[14 191]
[16 189]
[18 187]
[19 186]
[20 185]
[21 184]
[22 183]
[23 178]
[24 177]
[25 176]
[26 175]
[27 172]
[28 171]
[29 170]
[32 169]
[33 168]
[34 167]
[39 163]
[40 162]
[41 161]
[42 160]
[43 159]
[46 158]
[47 157]
[48 156]
[49 155]
[50 154]
[51 153]
[52 152]
[58 151]
[59 150]
[60 149]
[61 148]
[62 145]
[63 144]
[64 143]
[65 141]
[66 140]
[67 139]
[72 138]
[73 137]
[75 135]
[76 134]
[89 133]
[90 132]
[91 131]
[92 130]
[93 129]
[95 128]
[96 127]
[97 126]
[98 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
