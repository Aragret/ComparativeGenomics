%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[174.60925293 253.53196716]
[183.68426514 241.56616211]
[194.11083984 230.75770569]
[184.62194824 219.14044189]
[175.13304138 207.52317810]
[165.64414978 195.90591431]
[156.15524292 184.28865051]
[146.66635132 172.67138672]
[142.08879089 171.30941772]
[138.31819153 167.05740356]
[137.07409668 160.56404114]
[127.93529510 148.66940308]
[118.79649353 136.77478027]
[109.65769196 124.88014221]
[100.51889038 112.98551178]
[91.02999115 101.36824799]
[81.19940948 90.03865051]
[71.36882782 78.70906067]
[53.82854843 73.10369873]
[51.17043304 55.75719070]
[41.17226028 44.57521439]
[31.17408943 33.39324188]
[19.55682564 23.90434265]
[6.60382700 16.33996391]
[-6.34917164 8.77558517]
[-19.30216980 1.21120596]
[-32.25516891 -6.35317278]
[-45.20816803 -13.91755199]
[-58.16116714 -21.48193169]
[-66.67617035 -9.12446785]
[-76.09085083 2.56210923]
[-86.35253906 13.51244450]
[-97.40386963 23.66529846]
[-109.18301392 32.96389389]
[-121.62411499 41.35622406]
[-134.65759277 48.79535675]
[-148.21055603 55.23968887]
[-162.20721436 60.65318298]
[-176.56927490 65.00556183]
[-191.21644592 68.27248383]
[-206.06678772 70.43568420]
[-221.03726196 71.48306274]
[-236.04415894 71.40876007]
[-251.00352478 70.21318817]
[-265.83172607 67.90304565]
[-280.44583130 64.49124146]
[-294.76409912 59.99685287]
[-308.70645142 54.44502640]
[-322.19491577 47.86680222]
[-335.15411377 40.29896927]
[-347.51147461 31.78385544]
[-359.19796753 22.36907578]
[-370.14822388 12.10728550]
[-380.30099487 1.05587161]
[-389.59948730 -10.72336006]
[-397.99169922 -23.16453552]
[-405.43072510 -36.19807816]
[-411.87493896 -49.75109482]
[-417.28829956 -63.74779892]
[-421.64056396 -78.10990143]
[-424.90734863 -92.75709534]
[-427.07040405 -107.60746002]
[-428.11764526 -122.57794952]
[-428.04321289 -137.58483887]
[-426.84753418 -152.54420471]
[-424.53723145 -167.37237549]
[-421.12530518 -181.98643494]
[-416.63079834 -196.30467224]
[-411.07885742 -210.24697876]
[-404.50051880 -223.73539734]
[-396.93255615 -236.69450378]
[-388.41732788 -249.05181885]
[-379.00244141 -260.73822021]
[-368.74057007 -271.68838501]
[-357.68905640 -281.84103394]
[-345.90975952 -291.13943481]
[-333.46850586 -299.53155518]
[-320.43490601 -306.97045898]
[-306.88180542 -313.41455078]
[-292.88507080 -318.82778931]
[-278.52291870 -323.17990112]
[-263.87570190 -326.44659424]
[-249.02531433 -328.60952759]
[-234.05482483 -329.65661621]
[-219.04792786 -329.58206177]
[-204.08857727 -328.38623047]
[-189.26042175 -326.07583618]
[-174.64639282 -322.66375732]
[-160.32820129 -318.16912842]
[-146.38594055 -312.61703491]
[-132.89756775 -306.03857422]
[-119.93853760 -298.47052002]
[-107.58129883 -289.95520020]
[-95.89496613 -280.54022217]
[-84.94490814 -270.27822876]
[-74.79234314 -259.22662354]
[-65.49406433 -247.44723511]
[-57.10206223 -235.00590515]
[-49.66327286 -221.97224426]
[-43.21929550 -208.41911316]
[-37.80617142 -194.42231750]
[-33.45417404 -180.06011963]
[-30.18763542 -165.41287231]
[-28.02482986 -150.56246948]
[-26.97784996 -135.59196472]
[-27.05254936 -120.58508301]
[-28.24851418 -105.62574005]
[-30.55905342 -90.79760742]
[-33.97124481 -76.18360138]
[-38.46600723 -61.86545181]
[-44.01820755 -47.92323685]
[-50.59678650 -34.43492889]
[-37.64378738 -26.87055016]
[-24.69079018 -19.30617142]
[-11.73779106 -11.74179268]
[1.21520734 -4.17741394]
[14.16820621 3.38696527]
[27.12120438 10.95134449]
[18.97564125 -1.64428234]
[14.47765636 -15.95400429]
[13.95196247 -30.94478989]
[17.43651009 -45.53443909]
[24.67974472 -58.66971970]
[35.15877533 -69.40237427]
[48.11710739 -76.95761108]
[62.61927032 -80.79001617]
[77.61833954 -80.62290955]
[92.03151703 -76.46836090]
[104.81831360 -68.62629700]
[115.05561829 -57.66283798]
[122.00441742 -44.36944580]
[125.16304779 -29.70578194]
[124.30350494 -14.73042965]
[119.48782349 -0.52447253]
[111.06365967 11.88654995]
[99.63916016 21.60667610]
[86.03907013 27.93419838]
[71.24519348 30.41233063]
[56.32550812 28.86217308]
[42.35606384 23.39506912]
[52.35423660 34.57704544]
[62.35240936 45.75901794]
[74.40855408 46.74691391]
[82.82971191 55.98097610]
[82.69842529 68.87847900]
[92.52899933 80.20806885]
[102.35958099 91.53766632]
[105.37063599 92.00994873]
[108.27639771 93.58826447]
[110.66687012 96.23573303]
[112.15144348 99.76451874]
[112.41352081 103.84670258]
[121.55232239 115.74134064]
[130.69113159 127.63597107]
[139.82992554 139.53060913]
[148.96873474 151.42523193]
[158.28361511 163.18249512]
[167.77250671 174.79975891]
[177.26141357 186.41702271]
[186.75030518 198.03428650]
[196.23921204 209.65153503]
[205.72810364 221.26879883]
[218.40063477 213.21006775]
[231.93737793 206.70675659]
[246.14828491 201.85015869]
[260.83386230 198.70846558]
[275.78793335 197.32575989]
[290.80059814 197.72146606]
[305.66107178 199.89004517]
[320.16073608 203.80102539]
[334.09606934 209.39950562]
[347.27142334 216.60691833]
[359.50180054 225.32205200]
[370.61557007 235.42257690]
[380.45666504 246.76669312]
[388.88696289 259.19515991]
[395.78811646 272.53347778]
[401.06320190 286.59439087]
[404.63821411 301.18054199]
[406.46292114 316.08715820]
[406.51171875 331.10491943]
[404.78396606 346.02307129]
[401.30386353 360.63217163]
[396.12030029 374.72708130]
[389.30603027 388.10998535]
[380.95672607 400.59298706]
[371.18957520 412.00085449]
[360.14169312 422.17343140]
[347.96823120 430.96789551]
[334.83999634 438.26080322]
[320.94137573 443.94976807]
[306.46743774 447.95492554]
[291.62136841 450.22006226]
[276.61160278 450.71334839]
[261.64886475 449.42791748]
[246.94317627 446.38174438]
[232.70098877 441.61764526]
[219.12225342 435.20245361]
[206.39759827 427.22628784]
[194.70564270 417.80108643]
[184.21054077 407.05914307]
[175.05960083 395.15130615]
[167.38131714 382.24472046]
[161.28346252 368.52053833]
[156.85163879 354.17150879]
[154.14807129 339.39898682]
[153.21072388 324.41040039]
[154.05273438 309.41616821]
[156.66227722 294.62673950]
[161.00274658 280.24978638]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 162]
[4 161]
[5 160]
[6 159]
[7 158]
[8 157]
[11 156]
[12 155]
[13 154]
[14 153]
[15 152]
[16 147]
[17 146]
[18 145]
[20 142]
[21 141]
[22 140]
[23 118]
[24 117]
[25 116]
[26 115]
[27 114]
[28 113]
[29 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
