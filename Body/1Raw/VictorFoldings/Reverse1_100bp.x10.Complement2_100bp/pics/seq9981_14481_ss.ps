%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[90.34910583 494.07049561]
[80.73280334 482.49411011]
[73.55999756 469.26394653]
[69.10637665 454.88858032]
[67.54312897 439.92053223]
[68.93034363 424.93511963]
[73.21469879 410.50839233]
[80.23152161 397.19485474]
[89.71109772 385.50622559]
[101.28905487 375.89181519]
[114.52037048 368.72113037]
[128.89646912 364.26983643]
[127.33594513 349.35125732]
[125.66440582 334.44467163]
[123.88193512 319.55096436]
[122.09947205 304.65722656]
[110.83949280 291.19692993]
[118.22691345 274.32958984]
[116.22290039 259.46405029]
[114.10827637 244.61386108]
[111.88315582 229.77981567]
[109.65804291 214.94577026]
[107.43292236 200.11172485]
[105.20780945 185.27767944]
[102.98268890 170.44363403]
[100.75756836 155.60958862]
[98.53245544 140.77554321]
[96.30733490 125.94150543]
[94.08222198 111.10746002]
[91.52639008 96.32680511]
[88.64111328 81.60691833]
[85.75584412 66.88702393]
[82.87056732 52.16713333]
[72.62326813 40.11294556]
[77.76797485 26.13505936]
[74.88270569 11.41516876]
[70.86797333 25.86791801]
[63.29522324 38.81602478]
[52.66672897 49.40068817]
[39.68743896 56.91986465]
[25.21822548 60.87483978]
[10.21877480 61.00328445]
[-4.31605053 57.29668808]
[-17.42220688 50.00089264]
[-28.23041344 39.59980011]
[-36.02379608 26.78328323]
[-40.28545380 12.40140820]
[-40.73271942 -2.59192157]
[-37.33592987 -17.20225525]
[-30.32038498 -30.46053886]
[-20.15139771 -41.48740387]
[-7.50344086 -49.55146790]
[6.78459167 -54.11788177]
[21.76502609 -54.88376617]
[36.44426346 -51.79832077]
[49.84868622 -45.06619644]
[61.08922195 -35.13390732]
[69.42032623 -22.66023064]
[74.29045868 -8.46746731]
[76.29447174 -23.33299637]
[78.29848480 -38.19852448]
[80.30250549 -53.06405258]
[82.30651855 -67.92958069]
[84.31053162 -82.79510498]
[86.31454468 -97.66063690]
[88.31855774 -112.52616882]
[90.21184540 -127.40619659]
[91.99431610 -142.29991150]
[93.77677917 -157.19363403]
[95.55924988 -172.08735657]
[80.84358215 -175.03410339]
[66.40448761 -179.12637329]
[52.33097839 -184.33889771]
[38.70983124 -190.63955688]
[25.62501717 -197.98950195]
[13.15721416 -206.34342957]
[1.38329136 -215.64981079]
[-9.62415981 -225.85128784]
[-19.79727554 -236.88496399]
[-29.07333183 -248.68280029]
[-37.39514160 -261.17205811]
[-44.71139145 -274.27572632]
[-50.97698212 -287.91305542]
[-56.15327835 -301.99993896]
[-60.20836258 -316.44952393]
[-63.11724091 -331.17269897]
[-64.86197662 -346.07873535]
[-65.43180847 -361.07571411]
[-64.82323456 -376.07119751]
[-63.03999329 -390.97265625]
[-60.09308243 -405.68829346]
[-56.00067902 -420.12734985]
[-50.78800583 -434.20080566]
[-44.48720169 -447.82189941]
[-37.13711929 -460.90661621]
[-28.78307152 -473.37435913]
[-19.47656441 -485.14816284]
[-9.27497673 -496.15551758]
[1.75879490 -506.32852173]
[13.55672264 -515.60443115]
[26.04606628 -523.92614746]
[39.14982605 -531.24224854]
[52.78720856 -537.50769043]
[66.87413788 -542.68383789]
[81.32376099 -546.73883057]
[96.04698181 -549.64752197]
[110.95304108 -551.39208984]
[125.95002747 -551.96179199]
[140.94548035 -551.35308838]
[155.84693909 -549.56964111]
[170.56254578 -546.62261963]
[185.00155640 -542.53002930]
[199.07495117 -537.31726074]
[212.69598389 -531.01629639]
[225.78063965 -523.66607666]
[238.24827576 -515.31188965]
[250.02200317 -506.00527954]
[261.02923584 -495.80358887]
[271.20214844 -484.76971436]
[280.47796631 -472.97167969]
[288.79949951 -460.48223877]
[296.11547852 -447.37841797]
[302.38079834 -433.74096680]
[307.55682373 -419.65399170]
[311.61160278 -405.20431519]
[314.52017212 -390.48107910]
[316.26461792 -375.57498169]
[316.83413696 -360.57800293]
[316.22525024 -345.58255005]
[314.44171143 -330.68112183]
[311.49450684 -315.96554565]
[307.40179443 -301.52658081]
[302.18884277 -287.45321655]
[295.88775635 -273.83227539]
[288.53741455 -260.74768066]
[280.18310547 -248.28013611]
[270.87634277 -236.50650024]
[260.67453003 -225.49935913]
[249.64056396 -215.32658386]
[237.84245300 -206.05088806]
[225.35293579 -197.72946167]
[212.24902344 -190.41360474]
[198.61151123 -184.14843750]
[184.52447510 -178.97257996]
[170.07478333 -174.91792297]
[155.35148621 -172.00950623]
[140.44540405 -170.26522827]
[125.44840240 -169.69584656]
[110.45296478 -170.30488586]
[108.67050171 -155.41116333]
[106.88803101 -140.51745605]
[105.10556793 -125.62373352]
[107.43195343 -118.60877228]
[103.18408203 -110.52214813]
[101.18006897 -95.65662384]
[99.17605591 -80.79109192]
[97.17204285 -65.92556763]
[95.16802979 -51.06003952]
[93.16401672 -36.19451141]
[91.16000366 -21.32898140]
[89.15599060 -6.46345377]
[89.60259247 8.52989578]
[92.48786926 23.24978828]
[102.52879333 34.25111008]
[97.59046173 49.28186035]
[100.47573090 64.00175476]
[103.36100769 78.72164154]
[106.24627686 93.44153595]
[109.10961151 96.02488708]
[110.82034302 99.85780334]
[110.84592438 104.39723206]
[108.91626740 108.88234711]
[111.14138031 123.71638489]
[113.36650085 138.55043030]
[115.59161377 153.38447571]
[117.81673431 168.21852112]
[120.04184723 183.05256653]
[122.26696777 197.88661194]
[124.49208832 212.72065735]
[126.71720123 227.55468750]
[128.94232178 242.38873291]
[133.31011963 250.41120911]
[131.08842468 257.46005249]
[133.09243774 272.32556152]
[142.85758972 280.75198364]
[144.22070312 293.17477417]
[136.99319458 302.87478638]
[138.77565002 317.76849365]
[140.55812073 332.66220093]
[144.68511963 340.81118774]
[142.25454712 347.79071045]
[143.81507874 362.70932007]
[158.80113220 364.08926392]
[173.22993469 368.36660767]
[186.54689026 375.37698364]
[198.24011230 384.85086060]
[207.86015320 396.42416382]
[215.03724670 409.65197754]
[219.49552917 424.02593994]
[221.06361389 438.99346924]
[219.68125916 453.97930908]
[215.40156555 468.40740967]
[208.38905334 481.72323608]
[198.91326904 493.41491699]
[187.33842468 503.03311157]
[174.10942078 510.20803833]
[159.73477173 514.66400146]
[144.76696777 516.22967529]
[129.78135681 514.84484863]
[115.35394287 510.56286621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 192]
[13 191]
[14 189]
[15 188]
[16 187]
[18 184]
[19 183]
[20 181]
[21 180]
[22 179]
[23 178]
[24 177]
[25 176]
[26 175]
[27 174]
[28 173]
[29 172]
[30 168]
[31 167]
[32 166]
[33 165]
[35 163]
[36 162]
[59 161]
[60 160]
[61 159]
[62 158]
[63 157]
[64 156]
[65 155]
[66 154]
[67 152]
[68 151]
[69 150]
[70 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
