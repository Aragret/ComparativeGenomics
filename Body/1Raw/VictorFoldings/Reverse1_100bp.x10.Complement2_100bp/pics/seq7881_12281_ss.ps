%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[43.88484573 447.19488525]
[46.28742218 462.06234741]
[45.43731308 477.09869385]
[41.37427521 491.60061646]
[34.28834152 504.88983154]
[24.51093864 516.34478760]
[12.49937248 525.42974854]
[-1.18455565 531.71978760]
[-15.90082264 534.92065430]
[-30.96112251 534.88262939]
[-45.66105652 531.60760498]
[-59.31308365 525.24865723]
[-71.27867126 516.10321045]
[-80.99817657 504.59909058]
[-88.01698303 491.27429199]
[-92.00682831 476.75204468]
[-92.78108215 461.71160889]
[-90.30354309 446.85644531]
[-84.69008636 432.88137817]
[-76.20326233 420.43997192]
[-65.24002075 410.11422729]
[-52.31312561 402.38702393]
[-38.02719116 397.61984253]
[-23.05040169 396.03558350]
[-8.08324528 397.70840454]
[-3.25724745 383.50595093]
[1.56875014 369.30349731]
[6.39474773 355.10104370]
[11.22074509 340.89859009]
[16.04674339 326.69613647]
[20.87274170 312.49368286]
[14.07930660 299.28817749]
[18.77123451 284.81613159]
[32.66842651 277.78009033]
[37.17605209 263.47338867]
[41.36306381 249.06962585]
[45.55007553 234.66583252]
[49.73708725 220.26205444]
[48.58560944 212.96165466]
[54.09514618 205.67585754]
[58.49614334 191.33601379]
[54.83354187 176.89874268]
[66.27928925 165.97604370]
[65.08657837 163.43919373]
[64.82688141 160.27705383]
[65.74340057 156.84260559]
[67.94716644 153.57031250]
[71.39266205 150.92787170]
[76.63938141 136.87539673]
[81.88610077 122.82292175]
[67.36412048 126.57951355]
[55.28165054 117.69052887]
[54.54544449 102.70861053]
[65.69820404 92.67785645]
[80.51853180 94.99257660]
[88.08129120 107.94479370]
[86.99069214 94.00556183]
[98.29539490 85.77784729]
[104.57275391 72.15452576]
[110.85011292 58.53121185]
[117.12747192 44.90789413]
[123.40483856 31.28458023]
[129.17086792 17.43709373]
[134.41758728 3.38462281]
[139.66430664 -10.66784859]
[144.91102600 -24.72031975]
[140.68099976 -44.42994690]
[156.11595154 -56.07680130]
[160.94194031 -70.27925873]
[165.76794434 -84.48171234]
[170.59393311 -98.68416595]
[158.27041626 -107.40259552]
[148.91236877 -119.22837830]
[143.27146912 -133.19781494]
[141.79696655 -148.17561340]
[144.59983826 -162.94706726]
[151.44451904 -176.31666565]
[161.76872253 -187.20480347]
[174.72953796 -194.73495483]
[189.27227783 -198.30426025]
[204.21633911 -197.63172913]
[209.04234314 -211.83419800]
[213.86834717 -226.03665161]
[218.37597656 -240.34333801]
[222.56297302 -254.74711609]
[226.74998474 -269.15090942]
[230.93699646 -283.55468750]
[234.47666931 -298.13104248]
[237.36195374 -312.85095215]
[240.24722290 -327.57083130]
[243.13249207 -342.29074097]
[241.71221924 -351.31405640]
[246.17185974 -357.20758057]
[249.27597046 -371.88287354]
[252.38008118 -386.55816650]
[255.48419189 -401.23348999]
[241.58726501 -406.99456787]
[228.98567200 -415.21130371]
[218.10864258 -425.60385132]
[209.32664490 -437.81820679]
[202.93876648 -451.43841553]
[199.16258240 -466.00051880]
[198.12672424 -481.00857544]
[199.86647034 -495.95138550]
[204.32254028 -510.32003784]
[211.34318542 -523.62512207]
[220.68928528 -535.41345215]
[232.04251099 -545.28356934]
[245.01617432 -552.89929199]
[259.16839600 -558.00115967]
[274.01715088 -560.41546631]
[289.05670166 -560.05999756]
[303.77481079 -556.94683838]
[317.67019653 -551.18200684]
[330.26956177 -542.96191406]
[341.14379883 -532.56640625]
[349.92251587 -520.34967041]
[356.30670166 -506.72775269]
[360.07894897 -492.16464233]
[361.11077881 -477.15631104]
[359.36700439 -462.21395874]
[354.90704346 -447.84649658]
[347.88281250 -434.54330444]
[338.53353882 -422.75747681]
[327.17767334 -412.89044189]
[314.20196533 -405.27825928]
[300.04837036 -400.18017578]
[285.19894409 -397.76983643]
[270.15948486 -398.12936401]
[267.05538940 -383.45407104]
[263.95126343 -368.77877808]
[260.84716797 -354.10345459]
[257.85238647 -339.40545654]
[254.96711731 -324.68557739]
[252.08183289 -309.96566772]
[249.19656372 -295.24578857]
[262.21707153 -302.69338989]
[276.72579956 -298.88598633]
[284.41152954 -286.00460815]
[280.87152100 -271.42831421]
[268.13363647 -263.50708008]
[253.49470520 -266.77850342]
[245.34078979 -279.36767578]
[241.15377808 -264.96389771]
[236.96676636 -250.56010437]
[232.77975464 -236.15632629]
[234.14837646 -232.90682983]
[234.01106262 -228.83299255]
[231.99752808 -224.64981079]
[228.07080078 -221.21064758]
[223.24479675 -207.00819397]
[218.41880798 -192.80574036]
[230.67881775 -184.23431396]
[240.03623962 -172.54373169]
[245.72607422 -158.67607117]
[247.27928162 -143.75199890]
[244.56147766 -128.98007202]
[237.78451538 -115.55901337]
[227.49000549 -104.58034515]
[214.50598145 -96.93965149]
[199.88037109 -93.26352692]
[184.79640198 -93.85816956]
[179.97039795 -79.65571594]
[175.14439392 -65.45326233]
[170.31840515 -51.25080490]
[175.64112854 -42.52833176]
[175.27644348 -32.09687042]
[169.10348511 -23.40924835]
[158.96350098 -19.47360229]
[153.71678162 -5.42113018]
[148.47006226 8.63134098]
[143.22334290 22.68381310]
[157.74533081 18.92722511]
[169.82778931 27.81620598]
[170.56399536 42.79813004]
[159.41123962 52.82887650]
[144.59091187 50.51415634]
[137.02815247 37.56193924]
[130.75079346 51.18525696]
[124.47342682 64.80857086]
[118.19606781 78.43189240]
[111.91870880 92.05520630]
[113.00930786 105.99443817]
[101.70460510 114.22215271]
[95.93857574 128.06964111]
[90.69185638 142.12211609]
[85.44513702 156.17459106]
[80.61914062 170.37704468]
[83.96694946 185.83998108]
[72.83599091 195.73699951]
[68.43498993 210.07685852]
[64.14086914 224.44906616]
[59.95385742 238.85284424]
[55.76684570 253.25662231]
[51.57983398 267.66040039]
[52.82590866 272.72937012]
[52.07781982 277.31124878]
[49.85504532 280.72802734]
[46.87088013 282.60607910]
[53.60427856 296.65240479]
[48.50770950 310.98696899]
[35.07519531 317.31967163]
[30.24919891 331.52212524]
[25.42320061 345.72457886]
[20.59720421 359.92703247]
[15.77120590 374.12948608]
[10.94520855 388.33193970]
[6.11921072 402.53439331]
[19.00696564 410.32669067]
[29.91798782 420.70761108]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 208]
[26 207]
[27 206]
[28 205]
[29 204]
[30 203]
[31 202]
[34 199]
[35 195]
[36 194]
[37 193]
[38 192]
[40 191]
[41 190]
[43 188]
[48 187]
[49 186]
[50 185]
[56 184]
[58 182]
[59 181]
[60 180]
[61 179]
[62 178]
[63 172]
[64 171]
[65 170]
[66 169]
[68 165]
[69 164]
[70 163]
[71 162]
[81 152]
[82 151]
[83 150]
[84 146]
[85 145]
[86 144]
[87 143]
[88 136]
[89 135]
[90 134]
[91 133]
[93 132]
[94 131]
[95 130]
[96 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
