%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[-15.22489834 613.64514160]
[-30.20430756 618.13415527]
[-44.54414749 611.89697266]
[-51.47357941 597.87847900]
[-47.72074127 582.69793701]
[-35.05760956 573.52301025]
[-34.16479111 558.54956055]
[-33.27197647 543.57617188]
[-32.37916183 528.60278320]
[-31.48634529 513.62939453]
[-39.86122513 526.07373047]
[-52.31819916 534.42974854]
[-67.00934601 537.45800781]
[-81.75532532 534.70916748]
[-94.36865997 526.59106445]
[-102.97823334 514.30792236]
[-106.30686188 499.68188477]
[-103.86077118 484.88269043]
[-96.00282288 472.10565186]
[-83.89869690 463.24618530]
[-69.34396362 459.61853027]
[-54.49773407 461.76086426]
[-41.56235886 469.35534668]
[-32.45672607 481.27539062]
[-28.53173637 495.75082397]
[-24.55963898 481.28628540]
[-20.58754349 466.82177734]
[-16.61544609 452.35723877]
[-12.75114155 437.86355591]
[-17.05474663 423.60424805]
[-6.10813761 412.18133545]
[-2.35183692 397.65930176]
[-15.79253292 404.31869507]
[-30.04893112 399.65444946]
[-36.95431900 386.33847046]
[-32.55297852 371.99871826]
[-19.36619568 364.84970093]
[-4.94795799 368.98663330]
[2.44219089 382.03881836]
[7.47910738 367.90979004]
[12.51602364 353.78076172]
[17.55294037 339.65173340]
[22.58985519 325.52270508]
[27.30998993 311.28472900]
[31.71098900 296.94488525]
[28.04838753 282.50759888]
[39.49413681 271.58489990]
[43.89513397 257.24505615]
[48.29613113 242.90521240]
[44.63353348 228.46794128]
[56.07928085 217.54524231]
[60.48027802 203.20539856]
[64.88127899 188.86555481]
[69.28227234 174.52569580]
[65.61967468 160.08843994]
[77.06542206 149.16574097]
[73.40282440 134.72846985]
[84.84857178 123.80577087]
[89.24957275 109.46591949]
[86.30645752 95.79735565]
[96.41058350 86.13307953]
[100.81157684 71.79323578]
[97.46376801 56.33028412]
[108.59472656 46.43326569]
[98.25077820 35.16606140]
[94.95707703 20.33203506]
[99.50044250 5.93675137]
[110.56519318 -4.18388367]
[125.11214447 -7.38571644]
[129.51313782 -21.72556305]
[133.91413879 -36.06541061]
[138.20826721 -50.43762207]
[142.39527893 -64.84140778]
[145.71752930 -79.46886444]
[148.16326904 -94.26813507]
[142.77960205 -109.14518738]
[152.48852539 -120.44058990]
[154.93424988 -135.23986816]
[157.37997437 -150.03913879]
[155.41328430 -156.35131836]
[156.73168945 -161.87931824]
[160.12515259 -165.23989868]
[163.01042175 -179.95979309]
[165.89569092 -194.67967224]
[168.78097534 -209.39956665]
[171.66624451 -224.11946106]
[174.55151367 -238.83935547]
[177.43678284 -253.55924988]
[180.32206726 -268.27914429]
[183.20733643 -282.99902344]
[185.87312317 -297.76025391]
[188.31886292 -312.55950928]
[190.76458740 -327.35879517]
[193.21031189 -342.15805054]
[195.65603638 -356.95733643]
[193.96772766 -365.93438721]
[198.24992371 -371.95803833]
[193.08836365 -386.91360474]
[202.96437073 -398.06320190]
[205.63017273 -412.82443237]
[191.97729492 -419.24792480]
[180.45278931 -428.98693848]
[171.84240723 -441.37741089]
[166.73321533 -455.57452393]
[165.47357178 -470.61035156]
[168.14935303 -485.45968628]
[174.57814026 -499.11007690]
[184.32157898 -510.63082886]
[196.71537781 -519.23638916]
[210.91447449 -524.34014893]
[225.95077515 -525.59399414]
[240.79907227 -522.91241455]
[254.44697571 -516.47839355]
[265.96395874 -506.73049927]
[274.56478882 -494.33337402]
[279.66299438 -480.13232422]
[280.91104126 -465.09552002]
[278.22378540 -450.24826050]
[271.78445435 -436.60284424]
[262.03213501 -425.08963013]
[249.63169861 -416.49359131]
[235.42864990 -411.40084839]
[220.39138794 -410.15863037]
[217.72558594 -395.39739990]
[223.07783508 -381.49768066]
[213.01113892 -369.29226685]
[210.45530701 -354.51159668]
[208.00958252 -339.71234131]
[205.56385803 -324.91305542]
[203.11813354 -310.11380005]
[200.67239380 -295.31451416]
[202.67604065 -290.97924805]
[201.97756958 -285.33929443]
[197.92723083 -280.11376953]
[195.04194641 -265.39385986]
[192.15667725 -250.67396545]
[189.27140808 -235.95408630]
[186.38613892 -221.23419189]
[183.50086975 -206.51429749]
[180.61558533 -191.79440308]
[177.73031616 -177.07450867]
[174.84504700 -162.35462952]
[172.17924500 -147.59339905]
[169.73352051 -132.79412842]
[167.28779602 -117.99486542]
[172.84638977 -104.17635345]
[162.96253967 -91.82241058]
[160.51679993 -77.02313995]
[172.10066223 -86.55279541]
[187.06620789 -87.56873322]
[199.83169556 -79.69202423]
[205.63589478 -65.86048889]
[202.31398010 -51.23295212]
[191.10494995 -41.26511765]
[176.18949890 -39.67474365]
[163.13072205 -47.05500031]
[156.79905701 -60.65439606]
[152.61204529 -46.25061417]
[153.76351929 -38.95021057]
[148.25398254 -31.66441345]
[143.85299683 -17.32456589]
[139.45199585 -2.98471856]
[149.69828796 7.82633543]
[153.18064880 22.41157532]
[148.86639404 36.87717819]
[137.81825256 47.30959702]
[122.93457794 50.83426285]
[126.59717560 65.27153015]
[115.15142822 76.19422913]
[110.75042725 90.53408051]
[113.69354248 104.20264435]
[103.58941650 113.86692047]
[99.18842316 128.20677185]
[102.53623199 143.66970825]
[91.40527344 153.56672668]
[94.75308228 169.02967834]
[83.62212372 178.92669678]
[79.22112274 193.26654053]
[74.82012939 207.60639954]
[70.41912842 221.94624329]
[73.76693726 237.40919495]
[62.63597870 247.30621338]
[58.23498154 261.64605713]
[53.83398438 275.98590088]
[57.18179703 291.44885254]
[46.05083466 301.34585571]
[41.64983749 315.68572998]
[42.82030106 320.77267456]
[42.00408173 325.34289551]
[39.73068237 328.72619629]
[36.71888351 330.55963135]
[31.68196869 344.68865967]
[26.64505386 358.81768799]
[21.60813713 372.94671631]
[16.57122040 387.07574463]
[12.17022228 401.41558838]
[8.41392136 415.93765259]
[12.44885063 431.23568726]
[1.77091801 441.61984253]
[2.65159965 450.71173096]
[-2.15092301 456.32934570]
[-6.12301922 470.79385376]
[-10.09511566 485.25839233]
[-14.06721115 499.72290039]
[-16.51293945 514.52221680]
[-17.40575409 529.49560547]
[-18.29857063 544.46899414]
[-19.19138718 559.44238281]
[-20.08420181 574.41583252]
[-8.60105801 585.03051758]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 209]
[7 208]
[8 207]
[9 206]
[10 205]
[25 204]
[26 203]
[27 202]
[28 201]
[29 199]
[31 197]
[32 196]
[39 195]
[40 194]
[41 193]
[42 192]
[43 191]
[44 187]
[45 186]
[47 184]
[48 183]
[49 182]
[51 180]
[52 179]
[53 178]
[54 177]
[56 175]
[58 173]
[59 172]
[61 170]
[62 169]
[64 167]
[69 162]
[70 161]
[71 160]
[72 158]
[73 157]
[74 148]
[75 147]
[77 145]
[78 144]
[79 143]
[82 142]
[83 141]
[84 140]
[85 139]
[86 138]
[87 137]
[88 136]
[89 135]
[90 134]
[91 131]
[92 130]
[93 129]
[94 128]
[95 127]
[97 126]
[99 124]
[100 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
