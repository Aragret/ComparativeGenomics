%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[18.25463867 307.25036621]
[22.64550591 321.61273193]
[25.27312279 336.39962769]
[26.09917259 351.39547729]
[25.11160851 366.38153076]
[22.32483101 381.13928223]
[17.77948189 395.45352173]
[11.54184437 409.11547852]
[3.70288157 421.92593384]
[-5.62309122 433.69808960]
[-16.30007362 444.26025391]
[-28.17236519 453.45843506]
[-41.06682968 461.15844727]
[-54.79542923 467.24801636]
[-69.15796661 471.63833618]
[-83.94498444 474.26541138]
[-98.94084930 475.09088135]
[-113.92687225 474.10275269]
[-128.68452454 471.31542969]
[-142.99858093 466.76956177]
[-156.66030884 460.53140259]
[-169.47047424 452.69195557]
[-181.24227905 443.36553955]
[-191.80406189 432.68817139]
[-201.00177002 420.81552124]
[-208.70129395 407.92077637]
[-214.79034424 394.19195557]
[-219.18014526 379.82925415]
[-221.80665588 365.04214478]
[-222.63157654 350.04623413]
[-221.64289856 335.06024170]
[-218.85501099 320.30270386]
[-214.30859375 305.98883057]
[-208.06993103 292.32733154]
[-200.23001099 279.51745605]
[-190.90316772 267.74600220]
[-180.22538757 257.18463135]
[-168.35241699 247.98735046]
[-155.45736694 240.28831482]
[-141.72831726 234.19976807]
[-127.36545563 229.81051636]
[-112.57823944 227.18455505]
[-97.58231354 226.36018372]
[-82.59635925 227.34942627]
[-67.83892059 230.13786316]
[-53.52520370 234.68481445]
[-39.86394119 240.92398071]
[-27.05435371 248.76438904]
[-17.73947144 237.00714111]
[-8.42458820 225.24987793]
[-6.58567715 210.46923828]
[8.04874706 204.45722961]
[17.36363029 192.69998169]
[26.67851257 180.94271851]
[35.99339676 169.18547058]
[45.30827713 157.42822266]
[43.34363174 142.70831299]
[52.62276077 130.65209961]
[68.07567596 128.69119263]
[77.39056396 116.93394470]
[86.61766052 105.10767365]
[88.64146423 91.27308655]
[101.48770905 85.75352478]
[110.62651062 73.85888672]
[119.76531219 61.96425629]
[128.90411377 50.06962204]
[138.04292297 38.17499161]
[147.18171692 26.28035736]
[156.32052612 14.38572502]
[165.45932007 2.49109221]
[167.73164368 -13.16608429]
[181.62126160 -18.54452133]
[190.76007080 -30.43915558]
[199.89886475 -42.33378601]
[209.03767395 -54.22842026]
[218.17646790 -66.12305450]
[208.62190247 -81.62320709]
[205.75125122 -99.56946564]
[209.97821045 -117.21055603]
[220.63038635 -131.85211182]
[236.05610657 -141.26820374]
[253.88046265 -144.03967285]
[271.37097168 -139.76803589]
[279.78558350 -152.18553162]
[288.20019531 -164.60302734]
[296.61480713 -177.02052307]
[305.02941895 -189.43801880]
[313.44406128 -201.85551453]
[311.78106689 -214.64602661]
[319.04525757 -224.81535339]
[330.89859009 -227.22889709]
[339.49716187 -239.51972961]
[348.09573364 -251.81056213]
[356.69427490 -264.10140991]
[358.26519775 -279.84442139]
[371.90081787 -285.83770752]
[360.54861450 -295.66275024]
[350.26681519 -306.60299683]
[341.16442871 -318.54244995]
[333.33792114 -331.35455322]
[326.87026978 -344.90347290]
[321.83001709 -359.04559326]
[318.27062988 -373.63104248]
[316.22982788 -388.50515747]
[315.72921753 -403.51025391]
[316.77413940 -418.48730469]
[319.35348511 -433.27755737]
[323.43994141 -447.72418213]
[328.99017334 -461.67404175]
[335.94534302 -474.97927856]
[344.23171997 -487.49887085]
[353.76147461 -499.10006714]
[364.43359375 -509.65988159]
[376.13491821 -519.06640625]
[388.74145508 -527.21990967]
[402.11950684 -534.03399658]
[416.12731934 -539.43634033]
[430.61633301 -543.36981201]
[445.43304443 -545.79260254]
[460.42028809 -546.67901611]
[475.41928101 -546.01971436]
[490.27096558 -543.82171631]
[504.81793213 -540.10827637]
[518.90600586 -534.91876221]
[532.38574219 -528.30816650]
[545.11437988 -520.34655762]
[556.95684814 -511.11840820]
[567.78771973 -500.72149658]
[577.49218750 -489.26602173]
[585.96728516 -476.87341309]
[593.12322998 -463.67507935]
[598.88421631 -449.81088257]
[603.18902588 -435.42782593]
[605.99218750 -420.67837524]
[607.26391602 -405.71887207]
[606.99066162 -390.70788574]
[605.17547607 -375.80456543]
[601.83746338 -361.16690063]
[597.01208496 -346.95001221]
[590.75042725 -333.30465698]
[583.11895752 -320.37545776]
[574.19848633 -308.29946899]
[564.08361816 -297.20471191]
[552.88159180 -287.20877075]
[540.71112061 -278.41766357]
[527.70123291 -270.92456055]
[513.98980713 -264.80886841]
[499.72225952 -260.13540649]
[485.04980469 -256.95376587]
[470.12796021 -255.29765320]
[455.11492920 -255.18461609]
[440.16983032 -256.61584473]
[425.45114136 -259.57617188]
[411.11483765 -264.03424072]
[397.31289673 -269.94277954]
[384.19165039 -277.23913574]
[383.23574829 -262.37524414]
[368.98510742 -255.50283813]
[360.38656616 -243.21200562]
[351.78799438 -230.92117310]
[343.18942261 -218.63032532]
[342.61145020 -201.09086609]
[325.86154175 -193.44088745]
[317.44692993 -181.02339172]
[309.03231812 -168.60589600]
[300.61767578 -156.18840027]
[292.20306396 -143.77090454]
[283.78845215 -131.35340881]
[291.37747192 -122.06848907]
[296.31481934 -111.12450409]
[298.25820923 -99.26206207]
[297.06826782 -87.28604889]
[292.81845093 -76.01100922]
[285.79052734 -66.20574188]
[276.45605469 -58.54087448]
[265.44461060 -53.54301071]
[253.50135803 -51.55855179]
[241.43667603 -52.72969055]
[230.07110596 -56.98424911]
[220.93229675 -45.08961868]
[211.79350281 -33.19498444]
[202.65469360 -21.30035210]
[193.51589966 -9.40571976]
[191.89724731 5.40067291]
[177.35395813 11.62989426]
[168.21514893 23.52452660]
[159.07635498 35.41915894]
[149.93754578 47.31379318]
[140.79875183 59.20842743]
[131.65994263 71.10305786]
[122.52114105 82.99768829]
[113.38233948 94.89232635]
[111.35853577 108.72691345]
[98.51229095 114.24647522]
[95.76544189 122.95811462]
[89.14781189 126.24882507]
[79.83293152 138.00607300]
[81.45867920 153.49784851]
[71.84457397 165.28866577]
[57.06552887 166.74310303]
[47.75064850 178.50035095]
[38.43576431 190.25761414]
[29.12088203 202.01486206]
[19.80599976 213.77210999]
[17.30082512 229.39372253]
[3.33266306 234.56475830]
[-5.98221970 246.32202148]
[-15.29710293 258.07925415]
[-4.73453474 268.75585938]
[4.46406555 280.62780762]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 208]
[49 207]
[50 206]
[52 204]
[53 203]
[54 202]
[55 201]
[56 200]
[59 197]
[60 196]
[61 194]
[63 192]
[64 191]
[65 190]
[66 189]
[67 188]
[68 187]
[69 186]
[70 185]
[72 183]
[73 182]
[74 181]
[75 180]
[76 179]
[83 168]
[84 167]
[85 166]
[86 165]
[87 164]
[88 163]
[91 161]
[92 160]
[93 159]
[94 158]
[96 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
