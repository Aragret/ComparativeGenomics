%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[5.87861204 655.85369873]
[-4.27426481 666.90808105]
[-15.33985806 677.04882812]
[-27.23623848 686.20074463]
[-39.87533188 694.29608154]
[-53.16355515 701.27496338]
[-67.00253296 707.08563232]
[-81.28979492 711.68518066]
[-95.91957092 715.03942871]
[-110.78353882 717.12365723]
[-125.77165222 717.92236328]
[-140.77293396 717.42962646]
[-155.67633057 715.64910889]
[-170.37150574 712.59405518]
[-184.74963379 708.28698730]
[-198.70428467 702.75988770]
[-212.13214111 696.05358887]
[-224.93377686 688.21777344]
[-237.01440430 679.31054688]
[-248.28460693 669.39770508]
[-258.66091919 658.55273438]
[-268.06652832 646.85589600]
[-276.43179321 634.39379883]
[-283.69476318 621.25866699]
[-289.80169678 607.54785156]
[-294.70736694 593.36279297]
[-298.37545776 578.80853271]
[-300.77877808 563.99279785]
[-301.89956665 549.02532959]
[-301.72955322 534.01690674]
[-300.26992798 519.07867432]
[-297.53155518 504.32122803]
[-293.53466797 489.85382080]
[-288.30886841 475.78353882]
[-281.89288330 462.21456909]
[-274.33416748 449.24740601]
[-265.68872070 436.97805786]
[-256.02050781 425.49731445]
[-245.40116882 414.89019775]
[-233.90928650 405.23526001]
[-221.62994385 396.60394287]
[-208.65406799 389.06021118]
[-195.07772827 382.65985107]
[-181.00143433 377.45031738]
[-166.52940369 373.47012329]
[-151.76879883 370.74874878]
[-136.82888794 369.30636597]
[-121.82028198 369.15365601]
[-106.85411835 370.29171753]
[-92.04118347 372.71212769]
[-77.49115753 376.39700317]
[-63.31176758 381.31903076]
[-49.60799026 387.44177246]
[-42.33476257 374.32308960]
[-35.06153107 361.20437622]
[-27.78830338 348.08569336]
[-20.51507378 334.96701050]
[-21.76494980 317.46258545]
[-5.90179586 308.11154175]
[1.17530954 294.88601685]
[8.25241470 281.66049194]
[6.74206352 264.17660522]
[22.46423531 254.59043884]
[29.34364700 241.26100159]
[36.22306061 227.93157959]
[43.10247421 214.60214233]
[42.06396484 199.74378967]
[55.26868820 191.02909851]
[62.14810181 177.69967651]
[69.02751160 164.37023926]
[74.89647675 150.56607056]
[79.72247314 136.36360168]
[76.49134827 121.82369232]
[88.25723267 111.24662018]
[84.56626892 94.88345337]
[97.30129242 83.96578979]
[101.91529846 69.69305420]
[106.52930450 55.42031860]
[111.03693390 41.11363220]
[115.43793488 26.77378464]
[119.83892822 12.43393803]
[124.23992920 -1.90590882]
[123.76609802 -11.02804184]
[128.81466675 -16.42560768]
[133.42868042 -30.69833946]
[135.65379333 -45.53238297]
[135.43046570 -60.53071976]
[135.20713806 -75.52906036]
[134.98381042 -90.52739716]
[134.64883423 -105.52365875]
[134.20223999 -120.51700592]
[133.75563049 -135.51036072]
[125.61087799 -149.07403564]
[132.96580505 -162.02603149]
[132.51919556 -177.01939392]
[117.99373627 -181.24623108]
[105.48651123 -189.75648499]
[96.22283936 -201.71640015]
[91.11029816 -215.95426941]
[90.64974976 -231.07522583]
[94.88631439 -245.59783936]
[103.40494537 -258.09936523]
[115.37107086 -267.35501099]
[129.61236572 -272.45803833]
[144.73362732 -272.90844727]
[159.25340271 -268.66213989]
[171.74922180 -260.13513184]
[180.99685669 -248.16281128]
[186.09031677 -233.91810608]
[186.53059387 -218.79655457]
[182.27456665 -204.27961731]
[173.73919678 -191.78952026]
[161.76066589 -182.54991150]
[147.51255798 -177.46598816]
[147.95915222 -162.47264099]
[156.07196045 -149.98138428]
[148.74897766 -135.95695496]
[149.19558716 -120.96360779]
[149.64219666 -105.97026062]
[152.98344421 -99.37800598]
[149.98214722 -90.75072479]
[150.20547485 -75.75238800]
[150.42880249 -60.75404739]
[150.65213013 -45.75571060]
[157.17149353 -59.26489258]
[166.92483521 -70.66105652]
[179.26522827 -79.18833160]
[193.37420654 -84.28113556]
[208.31597900 -85.60168457]
[223.09947205 -83.06238556]
[236.74418640 -76.83167267]
[248.34510803 -67.32279205]
[257.13278198 -55.16644669]
[262.52435303 -41.16891098]
[264.16223145 -26.25860214]
[261.93774414 -11.42445946]
[255.99850464 2.34961724]
[246.73837280 14.15004444]
[234.77157593 23.19414330]
[220.89181519 28.88204956]
[206.01968384 30.83650398]
[191.14161682 28.92787743]
[177.24440002 23.28276062]
[165.24978638 14.27557373]
[155.95335388 2.50373149]
[149.97167969 -11.25198174]
[147.70141602 -26.08433151]
[143.08740234 -11.81159782]
[138.57977295 2.49508929]
[134.17877197 16.83493614]
[129.77778625 31.17478371]
[125.37678528 45.51462936]
[126.41944122 52.83136749]
[120.80204010 60.03432846]
[116.18803406 74.30706024]
[111.57402039 88.57979584]
[116.24241638 99.24972534]
[112.57754517 110.30458069]
[102.45968628 116.07261658]
[105.34562683 131.62838745]
[93.92492676 141.18960571]
[89.09893036 155.39205933]
[101.37444305 146.77163696]
[116.30649567 145.34545898]
[129.99186707 151.48634338]
[138.85325623 163.58906555]
[140.57429504 178.49000549]
[134.70513916 192.29409790]
[122.77993011 201.39297485]
[107.91592407 203.40821838]
[93.99851990 197.81306458]
[84.66569519 186.07003784]
[82.35694122 171.24964905]
[75.47753143 184.57908630]
[68.59811401 197.90850830]
[69.14456940 213.72027588]
[56.43190384 221.48155212]
[49.55249023 234.81098938]
[42.67307663 248.14041138]
[35.79366302 261.46984863]
[38.96477127 273.97210693]
[32.96047974 284.93261719]
[21.47794342 288.73757935]
[14.40083694 301.96310425]
[7.32373142 315.18865967]
[10.30834770 327.73675537]
[4.14153528 338.60662842]
[-7.39637995 342.24023438]
[-14.66960907 355.35891724]
[-21.94283867 368.47760010]
[-29.21606827 381.59631348]
[-36.48929596 394.71499634]
[-24.03640747 403.09396362]
[-12.34992027 412.51242065]
[-1.51635671 422.90066528]
[8.38407230 434.18173218]
[17.27806473 446.27215576]
[25.09977531 459.08239746]
[31.79129028 472.51763916]
[37.30306625 486.47836304]
[41.59430313 500.86120605]
[44.63321686 515.55975342]
[46.39731979 530.46508789]
[46.87354660 545.46691895]
[46.05836868 560.45410156]
[43.95782089 575.31579590]
[40.58746338 589.94189453]
[35.97224045 604.22406006]
[30.14632607 618.05664062]
[23.15285492 631.33715820]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 192]
[54 191]
[55 190]
[56 189]
[57 188]
[59 185]
[60 184]
[61 183]
[63 180]
[64 179]
[65 178]
[66 177]
[68 175]
[69 174]
[70 173]
[71 162]
[72 161]
[74 159]
[76 156]
[77 155]
[78 154]
[79 152]
[80 151]
[81 150]
[82 149]
[84 148]
[85 147]
[86 124]
[87 123]
[88 122]
[89 121]
[90 119]
[91 118]
[92 117]
[94 115]
[95 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
