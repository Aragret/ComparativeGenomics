%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[76.66499329 551.93426514]
[78.14836121 536.91888428]
[83.46835327 522.79937744]
[92.26226044 510.53848267]
[103.93049622 500.97213745]
[117.67749023 494.75262451]
[115.23176575 479.95333862]
[112.78603363 465.15408325]
[103.13821411 457.85708618]
[100.97951508 445.54757690]
[108.00441742 434.73028564]
[105.77929688 419.89624023]
[103.55417633 405.06222534]
[101.32906342 390.22817993]
[99.10394287 375.39413452]
[96.87882996 360.56008911]
[87.33914948 349.12136841]
[92.94371796 334.32614136]
[90.71859741 319.49209595]
[88.49348450 304.65805054]
[86.26836395 289.82400513]
[82.16741943 283.67550659]
[84.12225342 274.75268555]
[82.11824036 259.88717651]
[72.69195557 252.30616760]
[70.90071869 239.93785095]
[78.24456787 229.33451843]
[76.46210480 214.44079590]
[71.18368530 228.48139954]
[62.04878998 240.37902832]
[49.84766769 249.10443115]
[35.63584518 253.90277100]
[20.64278412 254.35894775]
[6.16553354 250.43348694]
[-6.54347897 242.46598816]
[-16.38479614 231.14572144]
[-22.50704575 217.45199585]
[-24.38059235 202.56945801]
[-21.84335518 187.78561401]
[-15.11483002 174.37937927]
[-4.77710247 163.51055908]
[8.27551079 156.11938477]
[22.91382790 152.84530640]
[37.87149048 153.97152710]
[51.85450745 159.40063477]
[63.65320969 168.66296387]
[72.24688721 180.95721436]
[76.89152527 195.21635437]
[79.33724976 180.41708374]
[81.78298187 165.61781311]
[84.22870636 150.81854248]
[86.67443848 136.01927185]
[89.12016296 121.21999359]
[91.45565033 106.40292358]
[92.12543488 91.41788483]
[91.23262024 76.44448090]
[90.33980560 61.47107697]
[89.44699097 46.49766922]
[88.55416870 31.52426529]
[87.66135406 16.55085945]
[86.76853943 1.57745385]
[78.22355652 -11.73771954]
[85.18959808 -24.90295792]
[83.85136414 -39.84314346]
[82.06890106 -54.73686218]
[80.28643036 -69.63057709]
[70.64782715 -78.20146179]
[69.46982574 -90.64317322]
[76.84095001 -100.23447418]
[75.28042603 -115.15307617]
[73.71990204 -130.07168579]
[71.04591370 -133.49275208]
[69.73180389 -137.21266174]
[69.70454407 -140.76718140]
[70.74783325 -143.76353455]
[72.53781891 -145.92086792]
[71.86803436 -160.90591431]
[57.92100906 -164.47959900]
[45.56036758 -171.83126831]
[35.78377914 -182.35710144]
[29.37740707 -195.19752502]
[26.85267830 -209.30734253]
[28.40547943 -223.54089355]
[33.90098190 -236.74502563]
[42.88529968 -247.85252380]
[54.62295914 -255.96839905]
[68.15711975 -260.44192505]
[60.01236343 -274.00561523]
[67.36729431 -286.95761108]
[66.92069244 -301.95095825]
[66.47408295 -316.94430542]
[66.02748108 -331.93765259]
[65.58087158 -346.93099976]
[65.13426208 -361.92437744]
[50.51686096 -365.73330688]
[37.56537628 -373.50735474]
[27.32973480 -384.61630249]
[20.63969421 -398.15954590]
[18.03758430 -413.03927612]
[19.73434639 -428.04919434]
[25.59243202 -441.97253418]
[35.13695526 -453.68060303]
[47.59417725 -462.22424316]
[61.95425415 -466.91091919]
[77.05307770 -467.36068726]
[91.66664886 -463.53704834]
[104.61031342 -455.75000000]
[114.83479309 -444.63076782]
[121.51122284 -431.08081055]
[124.09838104 -416.19848633]
[122.38654327 -401.19027710]
[116.51447296 -387.27282715]
[106.95819092 -375.57437134]
[94.49239349 -367.04321289]
[80.12761688 -362.37097168]
[80.57421875 -347.37762451]
[81.02082825 -332.38427734]
[81.46743011 -317.39093018]
[81.91403961 -302.39758301]
[82.36064148 -287.40420532]
[90.47345734 -274.91296387]
[83.15046692 -260.88854980]
[98.22967529 -256.65252686]
[111.27798462 -247.95326233]
[121.01144409 -235.63233948]
[126.46781921 -220.88839722]
[127.10171509 -205.16052246]
[122.83909607 -189.98786926]
[114.08565521 -176.85890198]
[101.68827057 -167.06547546]
[86.85307312 -161.57569885]
[87.52285767 -146.59065247]
[88.63851166 -131.63220215]
[90.19902802 -116.71360016]
[91.75955200 -101.79499817]
[102.81787872 -88.16854095]
[95.18015289 -71.41304779]
[96.96261597 -56.51932526]
[98.74507904 -41.62561035]
[100.86286163 -39.78899765]
[102.38074493 -37.00284576]
[102.93341064 -33.49143982]
[102.24341583 -29.60705566]
[100.16300201 -25.79577446]
[108.64412689 -13.55159950]
[101.74194336 0.68463802]
[102.63475800 15.65804386]
[103.52758026 30.63144875]
[104.42039490 45.60485458]
[105.31320953 60.57826233]
[106.20602417 75.55166626]
[107.09883881 90.52507019]
[113.93560791 77.17372131]
[125.31135559 67.39659119]
[139.53855896 62.64405441]
[154.50671387 63.62113190]
[167.99536133 70.18287659]
[178.00354004 81.35588837]
[183.04661560 95.48272705]
[182.37644958 110.46774292]
[176.09249878 124.08802032]
[165.12690735 134.32305908]
[151.10638428 139.65454102]
[136.11077881 139.29159546]
[122.36459351 133.28805542]
[111.90700531 122.53450012]
[106.28969574 108.62804413]
[108.11146545 117.57896423]
[103.91943359 123.66572571]
[101.47370911 138.46499634]
[99.02797699 153.26426697]
[96.58225250 168.06353760]
[94.13652039 182.86280823]
[91.69079590 197.66207886]
[91.35581970 212.65834045]
[93.13828278 227.55204773]
[104.51424408 242.03201294]
[96.98377228 257.88314819]
[98.98778534 272.74868774]
[101.10240936 287.59887695]
[103.32752228 302.43292236]
[105.55264282 317.26696777]
[107.77776337 332.10101318]
[117.47659302 344.60073853]
[111.71287537 358.33496094]
[113.93798828 373.16900635]
[116.16310883 388.00305176]
[118.38822174 402.83709717]
[120.61334229 417.67114258]
[122.83845520 432.50518799]
[134.64050293 446.64001465]
[127.58530426 462.70834351]
[130.03103638 477.50759888]
[132.47676086 492.30688477]
[147.49386597 493.77285767]
[161.61950684 499.07650757]
[173.89057922 507.85620117]
[183.47042847 519.51336670]
[189.70587158 533.25311279]
[192.17178345 548.13873291]
[190.70001221 563.15527344]
[185.39091492 577.27886963]
[176.60647583 589.54656982]
[164.94563293 599.12188721]
[151.20344543 605.35205078]
[136.31687927 607.81219482]
[121.30091095 606.33465576]
[107.17936707 601.02008057]
[94.91506958 592.23089600]
[85.34423065 580.56634521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 194]
[7 193]
[8 192]
[11 190]
[12 189]
[13 188]
[14 187]
[15 186]
[16 185]
[18 183]
[19 182]
[20 181]
[21 180]
[23 179]
[24 178]
[27 176]
[28 175]
[48 174]
[49 173]
[50 172]
[51 171]
[52 170]
[53 169]
[54 167]
[55 152]
[56 151]
[57 150]
[58 149]
[59 148]
[60 147]
[61 146]
[63 144]
[64 139]
[65 138]
[66 137]
[69 135]
[70 134]
[71 133]
[76 132]
[77 131]
[87 122]
[89 120]
[90 119]
[91 118]
[92 117]
[93 116]
[94 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
