%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[5.96556854 542.52239990]
[-3.60527253 554.18688965]
[-15.86956501 562.97607422]
[-29.99110794 568.29064941]
[-45.00707245 569.76818848]
[-59.89364624 567.30804443]
[-73.63583374 561.07788086]
[-85.29667664 551.50256348]
[-94.08111572 539.23486328]
[-99.39020538 525.11126709]
[-100.86197662 510.09475708]
[-98.39607239 495.20910645]
[-92.16062927 481.46932983]
[-82.58078003 469.81219482]
[-70.30970764 461.03250122]
[-56.18406296 455.72885132]
[-41.16696167 454.26287842]
[-38.72123337 439.46362305]
[-36.27550507 424.66433716]
[-46.98120499 435.17092896]
[-61.48089600 439.01263428]
[-75.98439789 435.18533325]
[-86.70053101 424.68939209]
[-90.82812500 410.26846313]
[-87.28823090 395.69216919]
[-77.00617218 384.77066040]
[-62.66965485 380.35882568]
[-48.02621078 383.60989380]
[-36.90359879 393.67407227]
[-32.20929718 407.91967773]
[-27.59528732 393.64694214]
[-22.98127747 379.37420654]
[-18.36726952 365.10147095]
[-13.75325966 350.82876587]
[-9.13925076 336.55603027]
[-4.52524090 322.28329468]
[-5.86361456 317.69876099]
[-4.33622980 312.22482300]
[0.44446039 307.65792847]
[5.48137665 293.52890015]
[4.76646805 286.17288208]
[10.69989491 279.22793579]
[-3.82209063 282.98452759]
[-15.90455818 274.09555054]
[-16.64076233 259.11364746]
[-5.48800182 249.08288574]
[9.33232403 251.39759827]
[16.89508247 264.34982300]
[23.17244339 250.72650146]
[21.47150993 235.92933655]
[34.27393341 226.63372803]
[40.55129242 213.01040649]
[46.82865524 199.38708496]
[53.10601425 185.76377869]
[59.38337708 172.14045715]
[65.66073608 158.51713562]
[63.11240387 141.15415955]
[78.23612213 130.64918518]
[84.30995941 116.93391418]
[90.38378906 103.21865082]
[90.50880432 95.15906525]
[96.65151215 89.34545135]
[102.92887115 75.72213745]
[99.20266724 63.37392807]
[104.71156311 52.15626907]
[116.01274109 47.84235764]
[122.49224091 34.31401443]
[108.02159119 38.26372147]
[94.92858124 30.94434738]
[90.71349335 16.54875565]
[97.79091644 3.32339835]
[112.10658264 -1.15564084]
[125.45982361 5.67743540]
[130.20137024 19.90738297]
[137.86196899 7.01105690]
[145.52255249 -5.88527012]
[153.18315125 -18.78159714]
[153.57881165 -34.59785461]
[166.73089600 -41.58870316]
[174.39149475 -54.48503113]
[182.05209351 -67.38135529]
[182.44773865 -83.19761658]
[195.59982300 -90.18846130]
[191.91894531 -105.32414246]
[199.87158203 -118.29372406]
[214.32382202 -121.70960999]
[221.98442078 -134.60594177]
[229.64501953 -147.50227356]
[230.04067993 -163.31852722]
[243.19276428 -170.30937195]
[243.58840942 -186.12562561]
[256.74050903 -193.11648560]
[264.40109253 -206.01280212]
[252.33509827 -214.94604492]
[241.23477173 -225.05415344]
[231.21405029 -236.23341370]
[222.37573242 -248.36911011]
[214.81053162 -261.33673096]
[208.59606934 -275.00314331]
[203.79614258 -289.22817993]
[200.45996094 -303.86584473]
[198.62179565 -318.76593018]
[198.30050659 -333.77551270]
[199.49937439 -348.74060059]
[202.20610046 -363.50759888]
[206.39292908 -377.92501831]
[212.01686096 -391.84484863]
[219.02021790 -405.12432861]
[227.33111572 -417.62713623]
[236.86427307 -429.22494507]
[247.52188110 -439.79882812]
[259.19454956 -449.24020386]
[271.76251221 -457.45223999]
[285.09680176 -464.35061646]
[299.06057739 -469.86459351]
[313.51055908 -473.93756104]
[328.29846191 -476.52770996]
[343.27255249 -477.60848999]
[358.27911377 -477.16882324]
[373.16424561 -475.21319580]
[387.77511597 -471.76165771]
[401.96185303 -466.84967041]
[415.57885742 -460.52761841]
[428.48638916 -452.86035156]
[440.55197144 -443.92660522]
[451.65185547 -433.81799316]
[461.67208862 -422.63827515]
[470.50988770 -410.50219727]
[478.07449341 -397.53427124]
[484.28836060 -383.86755371]
[489.08767700 -369.64230347]
[492.42318726 -355.00448608]
[494.26071167 -340.10433960]
[494.58135986 -325.09475708]
[493.38180542 -310.12969971]
[490.67443848 -295.36282349]
[486.48699951 -280.94558716]
[480.86242676 -267.02600098]
[473.85848999 -253.74684143]
[465.54705811 -241.24441528]
[456.01336670 -229.64698792]
[445.35531616 -219.07359314]
[433.68222046 -209.63272095]
[421.11389160 -201.42126465]
[407.77929688 -194.52345276]
[393.81527710 -189.01010132]
[379.36511230 -184.93777466]
[364.57711792 -182.34826660]
[349.60299683 -181.26812744]
[334.59640503 -181.70846558]
[319.71139526 -183.66476440]
[305.10064697 -187.11692810]
[290.91415405 -192.02955627]
[277.29742432 -198.35220337]
[269.63684082 -185.45588684]
[269.78912354 -170.56205750]
[256.08908081 -162.64877319]
[256.24136353 -147.75494385]
[242.54135132 -139.84167480]
[234.88075256 -126.94534302]
[227.22015381 -114.04901886]
[231.13378906 -99.72354889]
[223.54856873 -86.53570557]
[208.49615479 -82.52786255]
[208.64843750 -67.63404083]
[194.94841003 -59.72076035]
[187.28781128 -46.82443237]
[179.62722778 -33.92810440]
[179.77951050 -19.03427887]
[166.07948303 -11.12099934]
[158.41888428 1.77532732]
[150.75828552 14.67165375]
[143.09768677 27.56798172]
[136.02058411 40.79351044]
[129.54109192 54.32185364]
[131.83062744 71.72084808]
[116.55218506 81.99949646]
[110.27482605 95.62281036]
[104.09906006 109.29248047]
[98.02522278 123.00775146]
[91.95138550 136.72302246]
[95.86102295 149.01437378]
[90.51975250 160.31280518]
[79.28404999 164.79449463]
[73.00669098 178.41781616]
[66.72933197 192.04113770]
[60.45196915 205.66444397]
[54.17461014 219.28776550]
[47.89724731 232.91108704]
[49.14918518 248.68267822]
[36.79576111 257.00387573]
[30.51840019 270.62719727]
[24.75236511 284.47467041]
[19.61040688 298.56579590]
[14.57349014 312.69482422]
[9.74749184 326.89730835]
[5.13348293 341.17001343]
[0.51947373 355.44274902]
[-4.09453535 369.71548462]
[-8.70854473 383.98822021]
[-13.32255363 398.26095581]
[-17.93656349 412.53369141]
[-21.47623634 427.11007690]
[-23.92196274 441.90933228]
[-26.36769104 456.70861816]
[-12.62069416 462.92813110]
[-0.95246297 472.49447632]
[7.84144402 484.75537109]
[13.16144371 498.87484741]
[14.64480877 513.89025879]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 205]
[18 204]
[19 203]
[30 202]
[31 201]
[32 200]
[33 199]
[34 198]
[35 197]
[36 196]
[39 195]
[40 194]
[42 193]
[48 192]
[49 191]
[51 189]
[52 188]
[53 187]
[54 186]
[55 185]
[56 184]
[58 181]
[59 180]
[60 179]
[62 178]
[63 177]
[66 175]
[67 174]
[74 173]
[75 172]
[76 171]
[77 170]
[79 168]
[80 167]
[81 166]
[83 164]
[86 161]
[87 160]
[88 159]
[90 157]
[92 155]
[93 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
