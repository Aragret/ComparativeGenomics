%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[130.98342896 534.72583008]
[141.86933899 524.32958984]
[154.62535095 516.33776855]
[149.37863159 502.28530884]
[144.13191223 488.23281860]
[138.88519287 474.18035889]
[125.74553680 471.81570435]
[115.40720367 463.19812012]
[110.63907623 450.49636841]
[112.78671265 436.99057007]
[121.39478302 426.22528076]
[116.35787201 412.09625244]
[111.32095337 397.96719360]
[106.28403473 383.83816528]
[98.89314270 396.89093018]
[84.47470856 401.02722168]
[71.28826904 393.87753296]
[66.88761139 379.53759766]
[73.79364014 366.22192383]
[88.05026245 361.55838013]
[101.49000549 368.21771240]
[97.73371124 353.69564819]
[93.97740936 339.17358398]
[90.22110748 324.65155029]
[86.46480560 310.12948608]
[82.70850372 295.60742188]
[79.50726318 310.26184082]
[72.51986694 323.53497314]
[62.25073242 334.46862793]
[49.44120407 342.27349854]
[35.01601028 346.38613892]
[20.01651955 346.50964355]
[5.52555609 342.63513184]
[-7.41076326 335.04226685]
[-17.85855484 324.27917480]
[-25.06358337 311.12292480]
[-28.50571251 296.52319336]
[-27.93645287 281.53399658]
[-23.39689636 267.23742676]
[-15.21475983 254.66551208]
[-3.98071885 244.72587585]
[9.49423218 238.13606262]
[24.23732376 235.37178040]
[39.18424225 236.63261414]
[53.25595474 241.82749939]
[65.43660736 250.58145142]
[74.84687805 262.26248169]
[80.80773926 276.02850342]
[81.70055389 261.05508423]
[82.59336853 246.08168030]
[83.48619080 231.10827637]
[84.37900543 216.13487244]
[85.27182007 201.16146851]
[86.16463470 186.18806458]
[83.42483521 179.32400513]
[87.18384552 170.99888611]
[88.29949951 156.04043579]
[89.41514587 141.08197021]
[90.53079224 126.12351990]
[80.35551453 119.65193176]
[73.88006592 109.47910309]
[72.32404327 97.52098846]
[75.98049164 86.02976227]
[84.16076660 77.16969299]
[95.32419586 72.60946655]
[96.88471985 57.69086456]
[94.75762939 52.92404556]
[94.67951965 48.28215027]
[96.25968170 44.52473831]
[98.86257172 42.14623642]
[101.08769226 27.31219101]
[103.31280518 12.47814751]
[105.53792572 -2.35589600]
[107.76304626 -17.18993950]
[109.98815918 -32.02398300]
[104.38359833 -46.81923294]
[113.92327118 -58.25793457]
[116.14839172 -73.09197998]
[118.37350464 -87.92602539]
[120.48812866 -102.77622223]
[122.49214172 -117.64174652]
[124.49615479 -132.50727844]
[126.27862549 -147.40098572]
[127.83914948 -162.31959534]
[129.39967346 -177.23820496]
[129.06469727 -192.23446655]
[126.83957672 -207.06851196]
[124.61445618 -221.90254211]
[122.38934326 -236.73658752]
[120.16422272 -251.57063293]
[105.19776917 -253.61560059]
[91.41425323 -259.79553223]
[79.93105316 -269.60943604]
[71.67905426 -282.26174927]
[67.32720947 -296.72680664]
[67.22830200 -311.83200073]
[71.39035797 -326.35281372]
[79.47596741 -339.11212158]
[90.82967377 -349.07556152]
[104.53108215 -355.43542480]
[119.46947479 -357.67620850]
[134.43386841 -355.61621094]
[148.21116638 -349.42245483]
[159.68450928 -339.59701538]
[167.92378235 -326.93640137]
[172.26109314 -312.46697998]
[172.34483337 -297.36169434]
[168.16819763 -282.84506226]
[160.06976318 -270.09390259]
[148.70605469 -260.14187622]
[134.99826050 -253.79576111]
[137.22338867 -238.96171570]
[139.44850159 -224.12767029]
[141.67361450 -209.29362488]
[143.89874268 -194.45957947]
[148.98127747 -208.57225037]
[158.31936646 -220.31108093]
[170.92753601 -228.43724060]
[185.47518921 -232.09313965]
[200.42709351 -230.89297485]
[214.20535278 -224.96340942]
[225.35589600 -214.93019104]
[232.70198059 -201.85215759]
[235.46835327 -187.10946655]
[233.36309814 -172.25793457]
[226.60835266 -158.86489868]
[215.91699219 -148.34373474]
[202.41728210 -141.80479431]
[187.53387451 -139.93812561]
[172.83747864 -142.94073486]
[159.87899780 -150.49574280]
[150.02601624 -161.80586243]
[144.31826782 -175.67767334]
[142.75775146 -160.75907898]
[141.19723511 -145.84046936]
[143.45535278 -141.63215637]
[143.09381104 -135.96061707]
[139.36167908 -130.50326538]
[137.35766602 -115.63773346]
[135.35365295 -100.77220917]
[137.57534790 -93.72338104]
[133.20755005 -85.70090485]
[130.98243713 -70.86685944]
[128.75730896 -56.03281784]
[134.52102661 -42.29859543]
[124.82220459 -29.79886627]
[122.59708405 -14.96482277]
[120.37197113 -0.13077872]
[118.14685059 14.70326519]
[115.92173767 29.53730965]
[113.69661713 44.37135315]
[111.80332184 59.25138855]
[110.24280548 74.16999054]
[123.66027069 85.42961884]
[127.67595673 102.47901154]
[120.69418335 118.54333496]
[105.48925018 127.23917389]
[104.37359619 142.19763184]
[103.25794983 157.15608215]
[102.14230347 172.11453247]
[101.13803864 187.08087158]
[100.24522400 202.05427551]
[99.35240936 217.02769470]
[98.45959473 232.00109863]
[97.56678009 246.97450256]
[96.67396545 261.94790649]
[95.78114319 276.92129517]
[97.23056793 291.85110474]
[100.98686218 306.37316895]
[104.74316406 320.89523315]
[108.49946594 335.41729736]
[112.25576782 349.93936157]
[116.01206970 364.46142578]
[120.41306305 378.80126953]
[125.44998169 392.93029785]
[130.48689270 407.05932617]
[135.52381897 421.18835449]
[151.81513977 425.73684692]
[162.08326721 438.96813965]
[162.43803406 455.54632568]
[152.93766785 468.93365479]
[158.18438721 482.98611450]
[163.43110657 497.03857422]
[168.67782593 511.09106445]
[183.55012512 508.76739502]
[198.58572388 509.48541260]
[213.16893005 513.21575928]
[226.70254517 519.80554199]
[238.63240051 528.98510742]
[248.46997070 540.37835693]
[255.81239319 553.51892090]
[260.35903931 567.86859131]
[261.92367554 582.83978271]
[260.44229126 597.81945801]
[255.97549438 612.19415283]
[248.70622253 625.37530518]
[238.93214417 636.82312012]
[227.05349731 646.06878662]
[213.55671692 652.73376465]
[198.99449158 656.54510498]
[183.96310425 657.34667969]
[169.07810974 655.10577393]
[154.94903564 649.91406250]
[142.15444946 641.98413086]
[131.21827698 631.64074707]
[122.58837128 619.30749512]
[116.61809540 605.48937988]
[113.55194092 590.75219727]
[113.51546478 575.69952393]
[116.51016235 560.94769287]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 184]
[4 183]
[5 182]
[6 181]
[11 177]
[12 176]
[13 175]
[14 174]
[21 173]
[22 172]
[23 171]
[24 170]
[25 169]
[26 168]
[48 167]
[49 166]
[50 165]
[51 164]
[52 163]
[53 162]
[54 161]
[56 160]
[57 159]
[58 158]
[59 157]
[65 153]
[66 152]
[70 151]
[71 150]
[72 149]
[73 148]
[74 147]
[75 146]
[77 144]
[78 143]
[79 142]
[80 140]
[81 139]
[82 138]
[83 135]
[84 134]
[85 133]
[86 115]
[87 114]
[88 113]
[89 112]
[90 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
