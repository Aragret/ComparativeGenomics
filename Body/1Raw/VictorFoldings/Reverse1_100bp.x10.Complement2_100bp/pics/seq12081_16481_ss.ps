%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGUCUAAGUGUUAGACUACAAAACCAAUUUGAUAUAAAUGUUCUCCUUUUGGGCCAUUACUACAGCCCCAACUCCCUAUCCUCCUCUUACCCCCUAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[75.13034058 478.94049072]
[60.20683670 476.97225952]
[45.98513412 472.03991699]
[33.04760361 464.34542847]
[21.92402649 454.20388794]
[13.06990719 442.03057861]
[6.84781647 428.32397461]
[3.51254463 413.64538574]
[3.20066953 398.59588623]
[5.92496204 383.79171753]
[11.57386398 369.83914185]
[19.91605568 357.30947876]
[30.60993195 346.71578979]
[43.21758270 338.49191284]
[57.22273636 332.97460938]
[72.05188751 330.38983154]
[72.49848938 315.39645386]
[72.94509888 300.40310669]
[73.28007507 285.40686035]
[73.50340271 270.40850830]
[73.72673035 255.41018677]
[73.95005798 240.41184998]
[74.17338562 225.41351318]
[74.39671326 210.41517639]
[65.36801910 222.39360046]
[51.59863281 228.34373474]
[36.68784332 226.71022034]
[24.53329277 217.92005920]
[18.31215096 204.27098083]
[19.65061188 189.33081055]
[28.19880295 177.00488281]
[41.72224808 170.51516724]
[56.68594742 171.55804443]
[69.17843628 179.86093140]
[75.93401337 193.25257874]
[78.37973785 178.45330811]
[76.36890411 171.34147644]
[80.97362518 163.45259094]
[83.63941956 148.69137573]
[86.30521393 133.93016052]
[88.97100830 119.16894531]
[91.63680267 104.40772247]
[89.69918060 99.53334808]
[90.63050079 93.92032623]
[94.60799408 89.24951935]
[97.71210480 74.57421875]
[100.81621552 59.89891434]
[103.92032623 45.22360992]
[107.02443695 30.54830933]
[110.12854767 15.87300682]
[113.23265076 1.19770432]
[116.33676147 -13.47759819]
[116.89497375 -28.46720695]
[114.89096069 -43.33273697]
[112.88694763 -58.19826508]
[110.88293457 -73.06378937]
[108.87892151 -87.92932129]
[106.10330963 -102.67028046]
[102.56363678 -117.24665833]
[86.65065002 -121.73762512]
[75.23922729 -133.57295227]
[71.37577820 -149.45660400]
[76.02277374 -165.03099060]
[87.82113647 -176.07232666]
[84.06483459 -190.59439087]
[80.30853271 -205.11643982]
[76.55223083 -219.63850403]
[72.79593658 -234.16056824]
[69.03963470 -248.68261719]
[65.28333282 -263.20468140]
[61.52703094 -277.72674561]
[46.64506149 -275.71096802]
[31.62913513 -275.46951294]
[16.69005013 -277.00579834]
[2.03753018 -280.29821777]
[-12.12272739 -285.30053711]
[-25.59193420 -291.94259644]
[-38.18100357 -300.13110352]
[-49.71320724 -309.75112915]
[-60.02664566 -320.66760254]
[-68.97653961 -332.72726440]
[-76.43724060 -345.76086426]
[-82.30402374 -359.58535767]
[-86.49451447 -374.00674438]
[-88.94989014 -388.82254028]
[-89.63568878 -403.82473755]
[-88.54226685 -418.80273438]
[-85.68498993 -433.54629517]
[-81.10395813 -447.84841919]
[-74.86349487 -461.50830078]
[-67.05119324 -474.33422852]
[-57.77672958 -486.14611816]
[-47.17030716 -496.77816772]
[-35.38082123 -506.08108521]
[-22.57377625 -513.92431641]
[-8.92896557 -520.19769287]
[5.36206055 -524.81317139]
[20.09867859 -527.70605469]
[35.07400894 -528.83557129]
[50.07781982 -528.18597412]
[64.89948273 -525.76629639]
[79.33092499 -521.61059570]
[93.16955566 -515.77722168]
[106.22109222 -508.34796143]
[118.30231476 -499.42718506]
[129.24362183 -489.14010620]
[138.89143372 -477.63113403]
[147.11027527 -465.06185913]
[153.78479004 -451.60870361]
[158.82127380 -437.46054077]
[162.14901733 -422.81600952]
[163.72131348 -407.88067627]
[163.51608276 -392.86419678]
[161.53620911 -377.97741699]
[157.80949402 -363.42929077]
[152.38822937 -349.42407227]
[145.34854126 -336.15835571]
[136.78926086 -323.81838989]
[126.83053589 -312.57736206]
[115.61217499 -302.59313965]
[103.29166412 -294.00585938]
[90.04196930 -286.93609619]
[76.04908752 -281.48303223]
[79.80538940 -266.96096802]
[83.56169128 -252.43891907]
[87.31799316 -237.91687012]
[91.07429504 -223.39480591]
[94.83059692 -208.87274170]
[98.58689117 -194.35069275]
[102.34319305 -179.82862854]
[115.71569824 -177.05494690]
[126.64098358 -168.75032043]
[132.95246887 -156.49005127]
[133.36773682 -142.64064026]
[127.74879456 -129.90315247]
[117.14001465 -120.78633118]
[120.67968750 -106.20995331]
[128.40872192 -119.06538391]
[142.55140686 -124.06383514]
[156.64189148 -118.92008972]
[164.23820496 -105.98578644]
[161.86740112 -91.17433167]
[150.61340332 -81.25730896]
[135.62135315 -80.76865387]
[123.74444580 -89.93333435]
[125.74846649 -75.06780243]
[127.75247955 -60.20227814]
[129.75648499 -45.33675003]
[131.76049805 -30.47122192]
[136.58891296 -44.67285538]
[144.75462341 -57.25543594]
[155.75827026 -67.44953156]
[168.92700195 -74.63176727]
[183.45553589 -78.36294556]
[198.45544434 -78.41491699]
[213.00949097 -74.78448486]
[226.22766113 -67.69366455]
[237.30168152 -57.57605362]
[245.55438232 -45.05035400]
[250.48107910 -30.88251495]
[251.78050232 -15.93890476]
[249.37322998 -1.13333213]
[243.40641785 12.62883663]
[234.24497986 24.50604057]
[222.44912720 33.77198410]
[208.74017334 39.86005020]
[193.95642090 42.39795303]
[179.00192261 41.23049545]
[164.79113770 36.42907333]
[152.19306946 28.28728867]
[141.97808838 17.30302048]
[134.77084351 4.14795876]
[131.01206970 -10.37348843]
[127.90795898 4.30181456]
[124.80384827 18.97711754]
[121.69973755 33.65242004]
[118.59562683 48.32772064]
[115.49151611 63.00302505]
[112.38740540 77.67832947]
[109.28329468 92.35363007]
[106.39802551 107.07351685]
[103.73223114 121.83473969]
[101.06642914 136.59594727]
[98.40063477 151.35717773]
[95.73484039 166.11839294]
[93.17900848 180.89904785]
[90.73328400 195.69831848]
[89.39505005 210.63850403]
[89.17172241 225.63684082]
[88.94839478 240.63517761]
[88.72506714 255.63351440]
[88.50173950 270.63183594]
[88.27841187 285.63018799]
[91.27970123 294.25747681]
[87.93844604 300.84973145]
[87.49183655 315.84307861]
[87.04523468 330.83642578]
[101.69424438 334.29928589]
[115.34616852 340.64041138]
[127.44197083 349.60012817]
[137.48634338 360.81152344]
[145.06796265 373.81552124]
[149.87637329 388.07958984]
[151.71467590 403.01965332]
[150.50759888 418.02392578]
[146.30455017 432.47796631]
[139.27766418 445.78991699]
[129.71467590 457.41464233]
[118.00717926 466.87609863]
[104.63460541 473.78689575]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 197]
[17 196]
[18 195]
[19 193]
[20 192]
[21 191]
[22 190]
[23 189]
[24 188]
[35 187]
[36 186]
[38 185]
[39 184]
[40 183]
[41 182]
[42 181]
[45 180]
[46 179]
[47 178]
[48 177]
[49 176]
[50 175]
[51 174]
[52 173]
[53 149]
[54 148]
[55 147]
[56 146]
[57 145]
[58 137]
[59 136]
[64 130]
[65 129]
[66 128]
[67 127]
[68 126]
[69 125]
[70 124]
[71 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
