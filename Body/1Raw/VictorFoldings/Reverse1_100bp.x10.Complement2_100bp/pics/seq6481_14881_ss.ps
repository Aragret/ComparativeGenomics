%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[180.34432983 565.45458984]
[182.61196899 550.59808350]
[187.06863403 536.24554443]
[193.61473083 522.71752930]
[202.10404968 510.31637573]
[212.34692383 499.31906128]
[224.11451721 489.97125244]
[237.14395142 482.48181152]
[225.30770874 473.44009399]
[227.49617004 457.77099609]
[222.04081726 443.79818726]
[216.58544922 429.82537842]
[211.13009644 415.85260010]
[195.10110474 413.80712891]
[182.21665955 403.90020752]
[176.05113220 388.76074219]
[178.37501526 372.48516846]
[188.64779663 359.52899170]
[182.98501587 345.63897705]
[177.32221985 331.74896240]
[171.65943909 317.85891724]
[166.22338867 312.85180664]
[166.01744080 303.71969604]
[160.56208801 289.74688721]
[155.10671997 275.77410889]
[149.65136719 261.80130005]
[137.81512451 252.75958252]
[140.00358582 237.09045410]
[134.54823303 223.11766052]
[129.09288025 209.14486694]
[125.15618896 206.44087219]
[122.87634277 201.23516846]
[123.68992615 194.67395020]
[118.65300751 180.54492188]
[113.61609650 166.41589355]
[108.57917786 152.28686523]
[105.56738281 150.45344543]
[103.29398346 147.07014465]
[102.47776031 142.49990845]
[103.64822388 137.41294861]
[99.24723053 123.07310486]
[94.84622955 108.73326111]
[89.65863037 102.56387329]
[90.48816681 94.14706421]
[86.30116272 79.74327850]
[82.11415100 65.33950043]
[77.92713928 50.93571472]
[73.63301086 36.56350327]
[62.18726349 25.64080048]
[65.84986115 11.20353508]
[61.44886780 -3.13631177]
[57.04786682 -17.47615814]
[52.64686966 -31.81600571]
[48.24587250 -46.15585327]
[43.84487534 -60.49570084]
[39.77224731 -46.05915833]
[29.90419006 -34.76219177]
[16.14606667 -28.78606987]
[1.15435672 -29.28468704]
[-12.17627621 -36.16176605]
[-21.27189636 -48.08945084]
[-24.37627983 -62.76469803]
[-20.89002228 -77.35393524]
[-11.48626137 -89.04022217]
[2.01928163 -95.56711578]
[17.01889801 -95.67436981]
[30.61639786 -89.34128571]
[40.18689346 -77.78953552]
[38.40442657 -92.68325043]
[36.62196350 -107.57697296]
[34.61794662 -122.44249725]
[32.39282990 -137.27653503]
[30.16771317 -152.11058044]
[27.94259644 -166.94462585]
[25.71747971 -181.77867126]
[23.49236298 -196.61271667]
[21.26724434 -211.44676208]
[18.38197327 -226.16665649]
[14.84230042 -240.74302673]
[11.30262756 -255.31939697]
[7.65454006 -269.86901855]
[3.89823937 -284.39108276]
[-11.13510609 -283.62725830]
[-26.01441956 -285.90563965]
[-40.13040161 -291.13287354]
[-52.90501404 -299.09490967]
[-63.81514359 -309.46572876]
[-72.41402435 -321.82064819]
[-78.34954071 -335.65374756]
[-81.37863159 -350.39855957]
[-81.37726593 -365.45129395]
[-78.34549713 -380.19555664]
[-72.40747070 -394.02758789]
[-63.80634689 -406.38095093]
[-52.89434052 -416.74978638]
[-40.11828232 -424.70950317]
[-26.00135231 -429.93417358]
[-11.12162590 -432.20983887]
[3.91158128 -431.44329834]
[18.48266792 -427.66595459]
[31.99495697 -421.03250122]
[43.89513016 -411.81454468]
[53.69588089 -400.38955688]
[60.99587631 -387.22540283]
[65.49618530 -372.86114502]
[67.01251984 -357.88494873]
[65.48279572 -342.91015625]
[60.96964645 -328.54992676]
[53.65788269 -315.39230347]
[43.84692383 -303.97607422]
[31.93851280 -294.76876831]
[18.42029953 -288.14736938]
[22.17659950 -273.62533569]
[26.89495087 -267.93682861]
[25.87900352 -258.85906982]
[29.41867638 -244.28269958]
[32.95834732 -229.70632935]
[41.66707993 -241.91934204]
[56.43759155 -244.53315735]
[68.80866241 -236.05043030]
[71.69358063 -221.33047485]
[63.43973923 -208.80552673]
[48.77530670 -205.65046692]
[36.10128784 -213.67187500]
[38.32640457 -198.83782959]
[40.55152512 -184.00378418]
[42.77664185 -169.16973877]
[45.00175858 -154.33570862]
[47.22687531 -139.50166321]
[49.45199203 -124.66761780]
[52.69201279 -121.15886688]
[53.76226044 -115.57750702]
[51.51567841 -109.35943604]
[53.29814529 -94.46572113]
[55.08061218 -79.57199860]
[58.18472290 -64.89669800]
[62.58572006 -50.55685043]
[66.98671722 -36.21700287]
[71.38771820 -21.87715721]
[75.78871155 -7.53730965]
[80.18971252 6.80253744]
[91.32067108 16.69955635]
[87.97286224 32.16250229]
[92.94051361 37.63463593]
[92.33091736 46.74870300]
[96.51792908 61.15248489]
[100.70494080 75.55626678]
[104.89195251 89.96005249]
[109.18607330 104.33226013]
[113.58707428 118.67211151]
[117.98807526 133.01196289]
[122.70820618 147.24993896]
[127.74512482 161.37898254]
[132.78204346 175.50801086]
[137.81895447 189.63703918]
[143.06567383 203.68949890]
[148.52102661 217.66230774]
[153.97639465 231.63510132]
[166.20281982 241.67625427]
[163.62416077 256.34594727]
[169.07952881 270.31872559]
[174.53488159 284.29153442]
[179.99023438 298.26434326]
[185.54946899 312.19613647]
[191.21224976 326.08615112]
[196.87503052 339.97619629]
[202.53782654 353.86621094]
[216.47578430 355.04769897]
[228.48760986 362.08563232]
[236.25799561 373.55731201]
[238.31771851 387.19204712]
[234.32119751 400.32052612]
[225.10289001 410.39721680]
[230.55825806 424.37002563]
[236.01361084 438.34283447]
[241.46896362 452.31561279]
[253.69540405 462.35678101]
[251.11674500 477.02645874]
[265.77395630 473.70629883]
[280.76232910 472.60781860]
[295.74700928 473.75564575]
[310.39318848 477.12408447]
[324.37374878 482.63790894]
[337.37628174 490.17391968]
[349.11035156 499.56378174]
[359.31378174 510.59771729]
[367.75866699 523.02917480]
[374.25631714 536.58050537]
[378.66159058 550.94891357]
[380.87603760 565.81341553]
[380.85021973 580.84197998]
[378.58468628 595.69879150]
[374.13006592 610.05200195]
[367.58590698 623.58087158]
[359.09835815 635.98327637]
[348.85705566 646.98205566]
[337.09078979 656.33154297]
[324.06240845 663.82281494]
[310.06301880 669.28857422]
[295.40530396 672.60668945]
[280.41680908 673.70300293]
[265.43228149 672.55303955]
[250.78657532 669.18249512]
[236.80682373 663.66668701]
[223.80535889 656.12884521]
[212.07261658 646.73730469]
[201.87074280 635.70190430]
[193.42764282 623.26922607]
[186.93191528 609.71697998]
[182.52870178 595.34796143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 178]
[10 176]
[11 175]
[12 174]
[13 173]
[18 167]
[19 166]
[20 165]
[21 164]
[23 163]
[24 162]
[25 161]
[26 160]
[28 158]
[29 157]
[30 156]
[33 155]
[34 154]
[35 153]
[36 152]
[40 151]
[41 150]
[42 149]
[44 148]
[45 147]
[46 146]
[47 145]
[48 143]
[50 141]
[51 140]
[52 139]
[53 138]
[54 137]
[55 136]
[68 135]
[69 134]
[70 133]
[71 130]
[72 129]
[73 128]
[74 127]
[75 126]
[76 125]
[77 124]
[78 117]
[79 116]
[80 115]
[81 113]
[82 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
