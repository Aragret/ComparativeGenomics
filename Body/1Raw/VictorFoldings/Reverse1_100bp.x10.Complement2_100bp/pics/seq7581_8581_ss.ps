%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[176.72602844 622.26239014]
[163.54888916 614.37200928]
[156.09637451 600.94232178]
[156.37318420 585.58593750]
[164.30484009 572.43359375]
[177.75779724 565.02319336]
[177.98112488 550.02484131]
[178.20445251 535.02655029]
[178.42778015 520.02819824]
[178.65110779 505.02984619]
[178.87443542 490.03152466]
[178.53945923 475.03524780]
[177.64663696 460.06185913]
[167.20779419 445.95520020]
[175.58607483 429.55746460]
[174.47042847 414.59899902]
[173.35478210 399.64056396]
[162.70707703 385.69088745]
[170.84028625 369.17022705]
[169.50205994 354.23004150]
[168.16381836 339.28985596]
[166.82559204 324.34967041]
[164.15979004 309.58847046]
[153.32843018 299.36441040]
[157.13514709 284.00799561]
[153.16305542 269.54348755]
[149.19096375 255.07894897]
[145.21887207 240.61442566]
[141.24676514 226.14990234]
[136.42077637 211.94744873]
[130.75798035 198.05741882]
[125.09519958 184.16740417]
[119.43241119 170.27737427]
[113.76962280 156.38734436]
[108.10684204 142.49731445]
[104.13033295 139.85223389]
[101.77323151 134.68106079]
[102.48903656 128.10845947]
[97.24231720 114.05598450]
[86.58087921 105.01024628]
[88.70520782 91.19073486]
[83.45848846 77.13826752]
[70.64259338 72.99491882]
[62.66939163 62.38179016]
[62.27056122 49.30803680]
[69.36775970 38.55353928]
[64.33084869 24.42450905]
[58.50147629 17.39199448]
[59.32582855 10.04745579]
[54.49982834 -4.15500021]
[43.29619980 -10.54573631]
[39.56900406 -22.47434807]
[44.79573822 -33.38341522]
[40.18172836 -47.65615082]
[35.56771851 -61.92888260]
[30.95371056 -76.20161438]
[26.33970070 -90.47434998]
[21.72569275 -104.74708557]
[10.11858845 -115.49816132]
[13.56583309 -129.98835754]
[8.95182419 -144.26109314]
[4.33781481 -158.53382874]
[-9.98926449 -158.72470093]
[-23.53670883 -163.32406616]
[-34.98425293 -171.86970520]
[-43.22060776 -183.51547241]
[-47.45132828 -197.11515808]
[-47.27542877 -211.33515930]
[-42.72335815 -224.78538513]
[-34.25271988 -236.15505981]
[-22.70230293 -244.34049988]
[-27.10330009 -258.68032837]
[-30.92590141 -262.23489380]
[-32.81399536 -266.47616577]
[-32.82994461 -270.55227661]
[-31.36517906 -273.75958252]
[-35.12147903 -288.28164673]
[-38.87778091 -302.80371094]
[-42.63408279 -317.32577515]
[-47.81279373 -324.85031128]
[-46.33648682 -332.09201050]
[-49.87615967 -346.66839600]
[-53.41582870 -361.24478149]
[-68.46578217 -360.80590820]
[-83.27803040 -363.50607300]
[-97.20505524 -369.22723389]
[-109.63801575 -377.71929932]
[-120.03340149 -388.61102295]
[-127.93677521 -401.42626953]
[-133.00262451 -415.60479736]
[-135.00950623 -430.52679443]
[-133.86967468 -445.53994751]
[-129.63296509 -459.98791504]
[-122.48458099 -473.23913574]
[-112.73703003 -484.71426392]
[-100.81642914 -493.91171265]
[-87.24389648 -500.42938232]
[-72.61276245 -503.98236084]
[-57.56263733 -504.41531372]
[-42.75144958 -501.70932007]
[-28.82667923 -495.98266602]
[-16.39706039 -487.48568726]
[-6.00595903 -476.58990479]
[1.89236844 -463.77154541]
[6.95264149 -449.59100342]
[8.95364666 -434.66821289]
[7.80790901 -419.65551758]
[3.56551504 -405.20922852]
[-3.58807588 -391.96084595]
[-13.34013939 -380.48953247]
[-25.26435852 -371.29678345]
[-38.83945465 -364.78445435]
[-35.29978180 -350.20806885]
[-31.76011086 -335.63168335]
[-28.11202240 -321.08206177]
[-24.35572243 -306.55999756]
[-20.59942055 -292.03796387]
[-16.84312057 -277.51589966]
[-12.76345348 -263.08132935]
[-8.36245537 -248.74150085]
[7.37026501 -248.13265991]
[21.96825218 -242.16326904]
[33.65955353 -231.53804016]
[41.01824951 -217.52803040]
[43.13835144 -201.81860352]
[39.74531555 -186.30667114]
[31.23142624 -172.87168884]
[18.61054802 -163.14784241]
[23.22455788 -148.87510681]
[27.83856773 -134.60237122]
[39.11564636 -124.87216949]
[35.99842453 -109.36109161]
[40.61243439 -95.08835602]
[45.22644424 -80.81562805]
[49.84045410 -66.54289246]
[54.45446396 -52.27016068]
[59.06847000 -37.99742508]
[72.70729065 -26.95435143]
[68.70228577 -8.98099804]
[73.52828217 5.22145796]
[78.45987701 19.38759232]
[83.49679565 33.51662064]
[98.98565674 40.06900787]
[105.06282043 56.11216736]
[97.51096344 71.89154816]
[102.75768280 85.94401550]
[113.41912079 94.98975372]
[111.29479218 108.80926514]
[116.54151154 122.86173248]
[121.99686432 136.83453369]
[127.65965271 150.72456360]
[133.32243347 164.61457825]
[138.98522949 178.50460815]
[144.64801025 192.39463806]
[150.31079102 206.28466797]
[155.19258118 192.10128784]
[167.41229248 183.40193176]
[182.41226196 183.43122864]
[194.59788513 192.17826843]
[199.42422485 206.38061523]
[195.09117126 220.74113464]
[183.21484375 229.90371704]
[168.22482300 230.45095825]
[155.71128845 222.17781067]
[159.68339539 236.64233398]
[163.65548706 251.10685730]
[167.62757874 265.57138062]
[171.59968567 280.03591919]
[182.71514893 291.29455566]
[178.62431335 305.61636353]
[183.12496948 291.30749512]
[193.32499695 280.30932617]
[207.25495911 274.74548340]
[222.22517395 275.69024658]
[235.34513855 282.96118164]
[244.08160400 295.15438843]
[246.74766541 309.91555786]
[242.82858276 324.39453125]
[233.08103943 335.79565430]
[219.38716125 341.91754150]
[204.39099121 341.57815552]
[190.98808289 334.84301758]
[181.76577759 323.01144409]
[183.10400391 337.95162964]
[184.44224548 352.89181519]
[185.78047180 367.83200073]
[195.15962219 376.68606567]
[195.96665955 389.15731812]
[188.31323242 398.52490234]
[189.42889404 413.48336792]
[190.54454041 428.44180298]
[199.79081726 437.43453979]
[200.41209412 449.91644287]
[192.62004089 459.16903687]
[193.51286316 474.14245605]
[205.26992798 464.82733154]
[219.91690063 468.06253052]
[226.65655518 481.46313477]
[220.52069092 495.15078735]
[206.03242493 499.03540039]
[193.87277222 490.25485229]
[193.64944458 505.25317383]
[193.42611694 520.25152588]
[193.20278931 535.24987793]
[192.97946167 550.24816895]
[192.75613403 565.24652100]
[205.98248291 573.05419922]
[213.51904297 586.43682861]
[213.33850098 601.79467773]
[205.48944092 614.99645996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 206]
[7 205]
[8 204]
[9 203]
[10 202]
[11 201]
[12 195]
[13 194]
[15 191]
[16 190]
[17 189]
[19 186]
[20 185]
[21 184]
[22 183]
[23 170]
[25 168]
[26 167]
[27 166]
[28 165]
[29 164]
[30 155]
[31 154]
[32 153]
[33 152]
[34 151]
[35 150]
[38 149]
[39 148]
[41 146]
[42 145]
[46 142]
[47 141]
[49 140]
[50 139]
[53 137]
[54 136]
[55 135]
[56 134]
[57 133]
[58 132]
[60 130]
[61 129]
[62 128]
[71 120]
[72 119]
[76 118]
[77 117]
[78 116]
[79 115]
[81 114]
[82 113]
[83 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
