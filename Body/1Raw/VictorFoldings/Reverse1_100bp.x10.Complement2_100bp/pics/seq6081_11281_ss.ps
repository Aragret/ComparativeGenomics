%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[98.27682495 741.65789795]
[83.36509705 739.91687012]
[68.70602417 736.67608643]
[54.45002365 731.96893311]
[40.74339676 725.84362793]
[27.72678757 718.36303711]
[15.53377438 709.60394287]
[4.28947496 699.65625000]
[-5.89072561 688.62200928]
[-14.90236282 676.61444092]
[-22.65296173 663.75683594]
[-29.06298637 650.18096924]
[-34.06666183 636.02636719]
[-37.61264420 621.43811035]
[-39.66454315 606.56597900]
[-40.20130157 591.56250000]
[-39.21741104 576.58178711]
[-36.72297287 561.77740479]
[-32.74357986 547.30139160]
[-27.32007027 533.30224609]
[-20.50809479 519.92358398]
[-12.37755680 507.30276489]
[-3.01188898 495.56924438]
[7.49280119 484.84344482]
[19.02871895 475.23544312]
[31.47748566 466.84384155]
[44.71135712 459.75473022]
[58.59453583 454.04083252]
[72.98455048 449.76083374]
[87.73374176 446.95861816]
[102.69075775 445.66296387]
[102.91408539 430.66461182]
[103.13741302 415.66629028]
[103.36074066 400.66793823]
[103.58406830 385.66961670]
[103.80739594 370.67126465]
[104.03072357 355.67294312]
[104.25405121 340.67459106]
[103.80744171 325.68124390]
[102.69179535 310.72280884]
[101.57614899 295.76434326]
[100.46049500 280.80587769]
[99.34484863 265.84744263]
[98.22920227 250.88897705]
[95.81041718 248.32347107]
[94.51409912 244.45893860]
[94.93724060 239.83570862]
[97.41297913 235.24031067]
[89.30017090 222.74903870]
[96.62316132 208.72462463]
[96.17655182 193.73126221]
[95.72994995 178.73791504]
[87.61714172 166.24665833]
[94.94012451 152.22222900]
[94.49352264 137.22888184]
[93.82373810 122.24385071]
[92.93092346 107.27043915]
[89.34566498 100.05112457]
[92.13796234 92.06777191]
[91.46817780 77.08273315]
[90.79839325 62.09769440]
[89.34897614 47.16788864]
[87.12386322 32.33384323]
[84.89874268 17.49979973]
[82.67362213 2.66575575]
[67.05949402 0.13206743]
[53.00983810 -7.09381771]
[41.89448166 -18.29388046]
[34.79297256 -32.36328888]
[32.38975906 -47.91938019]
[34.90821838 -63.43754578]
[42.08996582 -77.40063477]
[53.22129822 -88.44730377]
[67.20411682 -95.50472260]
[64.75839233 -110.30399323]
[62.31266403 -125.10326385]
[59.64686584 -139.86448669]
[56.76159286 -154.58438110]
[46.51429749 -166.63856506]
[51.65900040 -180.61645508]
[48.77372742 -195.33633423]
[45.88845444 -210.05622864]
[39.00736237 -196.72766113]
[26.06616211 -189.14312744]
[11.07482243 -189.65275574]
[-1.32142639 -198.09864807]
[-7.28147125 -211.86373901]
[-4.95852757 -226.68276978]
[4.92761564 -237.96391296]
[19.31362915 -242.21157837]
[33.74184799 -238.10957336]
[43.74164963 -226.92872620]
[42.84883118 -241.90213013]
[41.95601654 -256.87554932]
[27.31114578 -260.66802979]
[14.55607891 -268.80212402]
[4.94042683 -280.48092651]
[-0.59376633 -294.56027222]
[-1.50431716 -309.66079712]
[2.29798102 -324.30310059]
[10.44061756 -337.05273438]
[22.12586021 -346.66055298]
[36.20890808 -352.18530273]
[51.31004715 -353.08575439]
[65.94982147 -349.27362061]
[78.69397736 -341.12246704]
[88.29396820 -329.43078613]
[93.80928802 -315.34402466]
[94.69960022 -300.24227905]
[90.87768555 -285.60507202]
[82.71797180 -272.86639404]
[71.01985931 -263.27423096]
[56.92942429 -257.76834106]
[57.82223892 -242.79493713]
[58.71505356 -227.82153320]
[60.60834503 -212.94149780]
[63.49361801 -198.22161865]
[66.37889099 -183.50172424]
[76.41981506 -172.50039673]
[71.48148346 -157.46965027]
[74.36676025 -142.74975586]
[77.76022339 -139.38919067]
[79.07862091 -133.86117554]
[77.11193085 -127.54899597]
[79.55766296 -112.74972534]
[82.00338745 -97.95045471]
[96.14530182 -96.16377258]
[109.22486877 -90.45721436]
[120.17796326 -81.28528595]
[128.11067200 -69.38479614]
[132.37232971 -55.71572113]
[132.60879517 -41.38375092]
[128.79191589 -27.55084038]
[121.22255707 -15.34101772]
[110.50684357 -5.74904108]
[97.50766754 0.44063869]
[99.73278809 15.27468204]
[101.95790100 30.10872650]
[104.18302155 44.94276810]
[113.02813721 32.82815552]
[127.56036377 29.11138344]
[141.13575745 35.49171448]
[147.54783630 49.05214310]
[143.86508179 63.59302521]
[131.77119446 72.46646881]
[116.79534912 71.61565399]
[105.78343201 61.42790985]
[106.45321655 76.41294861]
[107.12300110 91.39798737]
[107.90432739 106.37762451]
[108.79714203 121.35102844]
[112.11303711 127.07085419]
[112.05174255 132.75357056]
[109.48686981 136.78228760]
[109.93347931 151.77563477]
[118.07823181 165.33930969]
[110.72329712 178.29132080]
[111.16990662 193.28466797]
[111.61650848 208.27801514]
[119.76126099 221.84170532]
[112.40633392 234.79370117]
[113.18765259 249.77333069]
[114.30329895 264.73178101]
[115.41895294 279.69024658]
[116.53459930 294.64868164]
[117.65024567 309.60714722]
[118.76589966 324.56561279]
[129.34941101 313.93594360]
[144.34843445 313.76544189]
[155.17086792 324.15173340]
[155.61711121 339.14508057]
[145.43154907 350.15664673]
[130.44892883 350.87847900]
[119.25238800 340.89791870]
[119.02906036 355.89627075]
[118.80573273 370.89459229]
[118.58240509 385.89294434]
[118.35907745 400.89126587]
[118.13574982 415.88961792]
[117.91242218 430.88793945]
[117.68909454 445.88629150]
[132.60090637 447.62670898]
[147.26011658 450.86682129]
[161.51632690 455.57336426]
[175.22322083 461.69805908]
[188.24015808 469.17807007]
[200.43356323 477.93661499]
[211.67829895 487.88381958]
[221.85897827 498.91760254]
[230.87113953 510.92477417]
[238.62231445 523.78210449]
[245.03292847 537.35760498]
[250.03723145 551.51202393]
[253.58386230 566.10015869]
[255.63641357 580.97216797]
[256.17382812 595.97558594]
[255.19059753 610.95635986]
[252.69680786 625.76086426]
[248.71804810 640.23706055]
[243.29516602 654.23645020]
[236.48377991 667.61541748]
[228.35379028 680.23657227]
[218.98863220 691.97052002]
[208.48442078 702.69677734]
[196.94892883 712.30523682]
[184.50053406 720.69744873]
[171.26696777 727.78710938]
[157.38404846 733.50164795]
[142.99421692 737.78222656]
[128.24514771 740.58514404]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 181]
[32 180]
[33 179]
[34 178]
[35 177]
[36 176]
[37 175]
[38 174]
[39 167]
[40 166]
[41 165]
[42 164]
[43 163]
[44 162]
[48 161]
[50 159]
[51 158]
[52 157]
[54 155]
[55 154]
[56 151]
[57 150]
[59 149]
[60 148]
[61 147]
[62 139]
[63 138]
[64 137]
[65 136]
[74 126]
[75 125]
[76 124]
[77 121]
[78 120]
[80 118]
[81 117]
[82 116]
[92 115]
[93 114]
[94 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
