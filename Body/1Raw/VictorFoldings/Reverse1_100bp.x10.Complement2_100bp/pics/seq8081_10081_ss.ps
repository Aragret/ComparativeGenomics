%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[53.02129745 498.33602905]
[51.67808151 513.32244873]
[47.52268600 527.78375244]
[40.70532227 541.19714355]
[31.47243881 553.07781982]
[20.15779686 562.99627686]
[7.17041206 570.59393311]
[-7.02022791 575.59613037]
[-21.90114212 577.82208252]
[-36.93439102 577.19134521]
[-51.57653809 573.72662354]
[-65.29827881 567.55328369]
[-77.60356903 558.89440918]
[-88.04759216 548.06298828]
[-96.25279999 535.45068359]
[-101.92258453 521.51330566]
[-104.85197449 506.75476074]
[-104.93508911 491.70849609]
[-102.16890717 476.91848755]
[-96.65344238 462.91934204]
[-88.58805847 450.21713257]
[-78.26432800 439.27102661]
[-66.05543518 430.47674561]
[-52.40273666 424.15216064]
[-37.79975891 420.52593994]
[-22.77439117 419.72915649]
[-7.86979580 421.79058838]
[-3.04379821 407.58813477]
[-6.27492332 393.04821777]
[5.49096060 382.47113037]
[-1.30247319 369.26565552]
[3.38945532 354.79360962]
[17.28664398 347.75756836]
[22.11264229 333.55508423]
[26.93864059 319.35263062]
[31.76463699 305.15017700]
[26.70090103 294.16452026]
[30.60528564 282.29272461]
[41.90282059 276.06948853]
[46.93973541 261.94046021]
[43.92544937 247.35404968]
[55.84750366 236.95332336]
[60.88442230 222.82429504]
[65.92134094 208.69526672]
[70.95825195 194.56623840]
[75.99517059 180.43721008]
[81.03208923 166.30818176]
[84.89639282 151.81448364]
[87.56218719 137.05326843]
[89.78730774 122.21922302]
[91.56977081 107.32550812]
[93.24131012 92.41893005]
[94.80183411 77.50032806]
[96.36235809 62.58172226]
[97.81177521 47.65191269]
[99.15000916 32.71172714]
[100.48824310 17.77154350]
[101.82647705 2.83135772]
[101.04515839 -12.14828014]
[98.15988159 -26.86817169]
[95.27461243 -41.58806229]
[92.38933563 -56.30795288]
[79.55675507 -65.13759613]
[76.84037018 -80.10675812]
[85.33716583 -92.28625488]
[82.45189667 -107.00614166]
[78.38408661 -92.56824493]
[70.61904144 -79.73453522]
[59.71733093 -69.43148804]
[46.46595764 -62.40289688]
[31.82155228 -59.15615463]
[16.84130096 -59.92564774]
[2.60664654 -64.65582275]
[-9.85480213 -73.00521851]
[-19.64344025 -84.37106323]
[-26.05261993 -97.93286896]
[-28.61965561 -112.71157837]
[-27.15923119 -127.64031219]
[-21.77677536 -141.64135742]
[-12.86085320 -153.70394897]
[-1.05511236 -162.95730591]
[12.78818130 -168.73339844]
[27.66966820 -170.61524963]
[42.51503754 -168.46701050]
[56.25259781 -162.44375610]
[67.89060974 -152.98033142]
[76.58892822 -140.75988770]
[81.71985626 -126.66349030]
[83.50231934 -141.55720520]
[85.28479004 -156.45092773]
[79.24220276 -171.07275391]
[88.43707275 -182.79040527]
[90.21953583 -197.68412781]
[92.00200653 -212.57785034]
[93.45142365 -227.50765991]
[86.76196289 -241.84507751]
[95.42444611 -253.96162415]
[96.54009247 -268.92007446]
[97.65573883 -283.87854004]
[83.73122406 -289.82717896]
[72.49437714 -299.97668457]
[65.16408539 -313.22604370]
[62.53548050 -328.13809204]
[64.89370728 -343.09527588]
[71.98294830 -356.47515869]
[83.03422546 -366.82638550]
[96.84877014 -373.02615356]
[111.92809296 -374.40191650]
[126.63649750 -370.80447388]
[139.37852478 -362.62405396]
[148.77201843 -350.74798584]
[153.79803467 -336.46450806]
[153.91140747 -321.32296753]
[149.09982300 -306.96585083]
[139.88519287 -294.95043945]
[127.26708221 -286.58013916]
[112.61419678 -282.76287842]
[111.49854279 -267.80441284]
[110.38289642 -252.84597778]
[117.15215302 -239.57847595]
[108.40987396 -226.39199829]
[110.42132568 -223.49607849]
[111.13003540 -219.48200989]
[110.02575684 -214.97268677]
[106.89572144 -210.79537964]
[105.11325836 -195.90165710]
[103.33078766 -181.00794983]
[109.50086975 -167.45141602]
[100.17850494 -154.66845703]
[98.39604187 -139.77474976]
[96.61357117 -124.88102722]
[97.17178345 -109.89141846]
[100.05706024 -95.17152405]
[112.52310181 -87.10099792]
[115.65886688 -72.21403503]
[107.10923004 -59.19322586]
[109.99449921 -44.47333527]
[112.87977600 -29.75344276]
[115.76504517 -15.03355217]
[119.98455048 -29.42784882]
[128.20924377 -41.97195053]
[139.72760010 -51.58066177]
[153.54318237 -57.42274094]
[168.46078491 -58.99278259]
[183.18989563 -56.15496445]
[196.45629883 -49.15478897]
[207.11231995 -38.59783936]
[214.23611450 -25.39739609]
[217.21138000 -10.69543171]
[215.78074646 4.23618841]
[210.06796265 18.10572815]
[200.56726074 29.71333694]
[188.10052490 38.05483627]
[173.74626160 42.40860367]
[158.74627686 42.39799881]
[144.39819336 38.02393341]
[131.94326782 29.66481400]
[122.45897675 18.04378128]
[116.76666260 4.16959190]
[115.42842865 19.10977745]
[114.09019470 34.04996109]
[112.75196075 48.99014664]
[115.28617859 55.93273544]
[111.28096008 64.14224243]
[109.72043610 79.06085205]
[108.15991211 93.97945404]
[110.52009583 101.68672943]
[106.46348572 109.10797119]
[104.68102264 124.00168610]
[106.53089142 127.93003845]
[106.98845673 131.84860229]
[106.22776794 135.32089233]
[104.54674530 138.01176453]
[102.32340240 139.71905518]
[99.65760803 154.48028564]
[110.18247986 143.79257202]
[124.44021606 139.13241577]
[139.24559021 141.54089355]
[151.29106140 150.47996521]
[157.88562012 163.95259094]
[157.55603027 178.94897461]
[150.37594604 192.11886597]
[137.94938660 200.52009583]
[123.05249023 202.27580261]
[109.01325989 196.99374390]
[98.96809387 185.85397339]
[95.16111755 171.34509277]
[90.12419891 185.47412109]
[85.08728027 199.60314941]
[80.05036926 213.73217773]
[75.01345062 227.86120605]
[69.97653198 241.99023438]
[72.63054657 257.58724976]
[61.06876755 266.97738647]
[56.03184891 281.10641479]
[59.76881790 299.13739014]
[45.96709442 309.97619629]
[41.14109421 324.17864990]
[36.31509781 338.38110352]
[31.48910141 352.58355713]
[38.22249985 366.62988281]
[33.12593079 380.96444702]
[19.69341660 387.29714966]
[22.57935333 402.85290527]
[11.15865803 412.41412354]
[6.33265972 426.61657715]
[19.40757751 434.06259155]
[30.83687401 443.84869385]
[40.20738602 455.62112427]
[47.18037796 468.95428467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 206]
[28 205]
[30 203]
[33 200]
[34 199]
[35 198]
[36 197]
[39 195]
[40 194]
[42 192]
[43 191]
[44 190]
[45 189]
[46 188]
[47 187]
[48 175]
[49 174]
[50 169]
[51 168]
[52 166]
[53 165]
[54 164]
[55 162]
[56 161]
[57 160]
[58 159]
[59 139]
[60 138]
[61 137]
[62 136]
[65 133]
[66 132]
[88 131]
[89 130]
[90 129]
[92 127]
[93 126]
[94 125]
[95 121]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
