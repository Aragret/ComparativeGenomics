%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCUUAUUACUACAUACGAAACAAAGACAACUCACACCCAAAUCAUUACCCCAAACACCCCAAAAGAAGAUUCGGAAGAGGAUAAAUACCCCCAAAUCAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[94.85059357 518.06164551]
[84.00721741 528.45764160]
[71.89963531 537.34930420]
[58.73501205 544.58447266]
[44.73861313 550.03936768]
[30.14993286 553.62060547]
[15.21860600 555.26696777]
[0.20012718 554.95025635]
[-14.64851856 552.67590332]
[-29.07325172 548.48278809]
[-42.82724380 542.44268799]
[-55.67515182 534.65899658]
[-67.39712524 525.26483154]
[-77.79258728 514.42095947]
[-86.68365479 502.31295776]
[-93.91819763 489.14797974]
[-99.37242126 475.15133667]
[-102.95299530 460.56246948]
[-104.59864807 445.63107300]
[-104.28121948 430.61260986]
[-102.00614929 415.76406860]
[-97.81236267 401.33953857]
[-91.77162170 387.58581543]
[-83.98728180 374.73828125]
[-74.59255981 363.01675415]
[-63.74819946 352.62182617]
[-51.63977051 343.73132324]
[-38.47445679 336.49740601]
[-24.47753716 331.04385376]
[-9.88851738 327.46398926]
[5.04296589 325.81903076]
[20.06141472 326.13717651]
[34.90984344 328.41296387]
[39.09685516 314.00918579]
[43.28386688 299.60537720]
[47.47087860 285.20159912]
[51.65789032 270.79782104]
[55.52219391 256.30413818]
[59.06186676 241.72775269]
[62.60153961 227.15138245]
[49.02746582 219.47091675]
[38.15417862 208.26959229]
[30.86691284 194.44758606]
[27.76225662 179.11895752]
[29.09930801 163.52175903]
[34.77807999 148.91809082]
[44.34692764 136.49200439]
[57.03845215 127.25341034]
[71.83105469 121.95610046]
[87.53115082 121.03617859]
[90.85340881 106.40871429]
[94.06668091 91.75692749]
[97.06145477 77.05892181]
[99.94673157 62.33903503]
[102.06135559 47.48883438]
[103.39958954 32.54865265]
[104.73782349 17.60846519]
[106.07605743 2.66828084]
[107.41429138 -12.27190399]
[108.64126587 -27.22163773]
[109.75691223 -42.18009186]
[110.87255859 -57.13854599]
[96.01782227 -59.26211548]
[81.34032440 -62.38368607]
[66.90705872 -66.48901367]
[52.78387070 -71.55936432]
[39.03520203 -77.57160950]
[25.72378540 -84.49830627]
[12.91035938 -92.30785370]
[0.65338892 -100.96462250]
[-10.99119949 -110.42910767]
[-21.97027588 -120.65812683]
[-32.23374176 -131.60501099]
[-41.73476791 -143.21980286]
[-50.43000412 -155.44950867]
[-58.27977371 -168.23834229]
[-65.24826050 -181.52792358]
[-71.30367279 -195.25764465]
[-76.41837311 -209.36482239]
[-80.56903076 -223.78512573]
[-83.73670197 -238.45272827]
[-85.90693665 -253.30073547]
[-87.06983185 -268.26135254]
[-87.22008514 -283.26638794]
[-86.35700226 -298.24731445]
[-84.48451996 -313.13577271]
[-81.61119843 -327.86389160]
[-77.75012970 -342.36441040]
[-72.91894531 -356.57116699]
[-67.13967896 -370.41940308]
[-60.43870926 -383.84585571]
[-52.84660339 -396.78930664]
[-44.39800262 -409.19067383]
[-35.13146210 -420.99340820]
[-25.08926201 -432.14361572]
[-14.31721973 -442.59042358]
[-2.86448717 -452.28619385]
[9.21667767 -461.18667603]
[21.87115288 -469.25122070]
[35.04119492 -476.44308472]
[48.66671371 -482.72943115]
[62.68554306 -488.08157349]
[77.03370667 -492.47509766]
[91.64575195 -495.88995361]
[106.45498657 -498.31057739]
[121.39385986 -499.72589111]
[136.39419556 -500.12945557]
[151.38755798 -499.51940918]
[166.30552673 -497.89855957]
[181.08003235 -495.27429199]
[195.64367676 -491.65859985]
[209.92999268 -487.06796265]
[223.87380981 -481.52331543]
[237.41148376 -475.04998779]
[250.48127747 -467.67749023]
[263.02352905 -459.43945312]
[274.98101807 -450.37350464]
[286.29916382 -440.52096558]
[296.92636108 -429.92684937]
[306.81408691 -418.63943481]
[315.91726685 -406.71026611]
[324.19433594 -394.19375610]
[331.60751343 -381.14700317]
[338.12301636 -367.62954712]
[343.71109009 -353.70309448]
[348.34622192 -339.43115234]
[352.00729370 -324.87884521]
[354.67755127 -310.11257935]
[356.34487915 -295.19973755]
[357.00164795 -280.20834351]
[356.64483643 -265.20681763]
[355.27606201 -250.26362610]
[352.90161133 -235.44689941]
[349.53231812 -220.82429504]
[345.18353271 -206.46250916]
[339.87509155 -192.42707825]
[333.63122559 -178.78202820]
[326.48043823 -165.58964539]
[318.45535278 -152.91009521]
[309.59255981 -140.80125427]
[299.93252563 -129.31837463]
[289.51931763 -118.51382446]
[278.40045166 -108.43692780]
[266.62667847 -99.13365936]
[254.25169373 -90.64645386]
[241.33195496 -83.01405334]
[227.92643738 -76.27127838]
[214.09629822 -70.44889069]
[199.90464783 -65.57345581]
[185.41622925 -61.66722870]
[170.69715881 -58.74802399]
[155.81457520 -56.82916260]
[140.83642578 -55.91940308]
[125.83101654 -56.02289581]
[124.71537018 -41.06444168]
[123.59971619 -26.10598946]
[126.23702240 -19.20190048]
[122.35447693 -10.93367004]
[121.01624298 4.00651503]
[119.67800903 18.94670105]
[118.33977509 33.88688660]
[117.00153351 48.82707214]
[128.45564270 39.14184570]
[143.45452881 38.95933151]
[155.14091492 48.36296844]
[158.17193604 63.05353928]
[151.16186523 76.31471252]
[137.31559753 82.08366394]
[122.96345520 77.72290039]
[114.66661835 65.22430420]
[111.78134918 79.94419861]
[113.57954407 87.11276245]
[108.74198151 94.86103821]
[110.28752899 102.77203369]
[105.48086548 109.73097229]
[102.15860748 124.35843658]
[114.88828278 131.20648193]
[125.39981842 141.11088562]
[132.97946167 153.39047241]
[137.11476135 167.20309448]
[137.52926636 181.60336304]
[134.20092773 195.60736084]
[127.36325073 208.25991821]
[117.48885345 218.69966125]
[105.25685883 226.21774292]
[91.50616455 230.30596924]
[77.17791748 230.69105530]
[73.63824463 245.26742554]
[70.09857178 259.84381104]
[71.56974030 264.85208130]
[71.02699280 269.46279907]
[68.95899963 272.97540283]
[66.06166840 274.98483276]
[61.87466049 289.38861084]
[57.68764877 303.79238892]
[53.50063705 318.19619751]
[49.31362534 332.59997559]
[63.06819534 338.63873291]
[75.91683960 346.42123413]
[87.63970947 355.81430054]
[98.03620148 366.65716553]
[106.92842865 378.76434326]
[114.16422272 391.92861938]
[119.61977386 405.92474365]
[123.20173645 420.51324463]
[124.84880829 435.44451904]
[124.53281403 450.46301270]
[122.25915527 465.31176758]
[118.06674194 479.73669434]
[112.02730560 493.49096680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 197]
[34 196]
[35 195]
[36 194]
[37 193]
[38 189]
[39 188]
[40 187]
[50 176]
[51 175]
[52 173]
[53 171]
[54 170]
[55 162]
[56 161]
[57 160]
[58 159]
[59 158]
[60 156]
[61 155]
[62 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
