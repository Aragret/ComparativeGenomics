%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[81.53662109 646.87194824]
[66.90203094 643.44714355]
[52.96179199 637.82843018]
[40.04267502 630.14752197]
[28.44752502 620.58441162]
[18.44815063 609.36328125]
[10.27895164 596.74725342]
[4.13142538 583.03198242]
[0.14967775 568.53906250]
[-1.57295251 553.60809326]
[-0.99608475 538.58917236]
[1.86675847 523.83435059]
[6.94846821 509.68951416]
[14.12992096 496.48623657]
[23.24277496 484.53396606]
[34.07341003 474.11294556]
[46.36794281 465.46743774]
[59.83816910 458.80007935]
[74.16832733 454.26721191]
[89.02249908 451.97506714]
[89.02249908 436.97506714]
[89.02249908 421.97506714]
[81.28520203 409.24780273]
[89.02249908 395.44760132]
[89.02249908 380.44760132]
[89.02249908 365.44760132]
[81.28520203 352.72033691]
[89.02249908 338.92016602]
[86.80123138 336.18185425]
[85.79592896 332.23162842]
[86.56176758 327.65267944]
[89.37243652 323.25411987]
[90.04222107 308.26910400]
[90.71200562 293.28405762]
[91.38179779 278.29901123]
[92.05158234 263.31396484]
[92.27490997 248.31562805]
[92.05158234 233.31729126]
[91.82825470 218.31895447]
[83.36961365 209.67153931]
[83.06080627 197.17800903]
[91.61262512 187.52247620]
[91.61262512 172.52247620]
[91.61262512 157.52247620]
[91.61262512 142.52247620]
[91.61262512 127.52247620]
[89.39136505 124.78417206]
[88.38606262 120.83393097]
[89.15189362 116.25498199]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[93.72218323 72.48873901]
[94.39196777 57.50370407]
[95.06175232 42.51866531]
[95.73153687 27.53362465]
[95.28492737 12.54027462]
[86.15391541 -0.38006392]
[92.52515411 -13.84322262]
[90.96463013 -28.76182747]
[89.40410614 -43.68043137]
[74.24253082 -55.04005051]
[72.23329926 -73.55696106]
[84.18841553 -87.42024994]
[82.18440247 -102.28578186]
[80.18038940 -117.15130615]
[78.17637634 -132.01683044]
[76.17236328 -146.88237000]
[74.16834259 -161.74789429]
[72.16432953 -176.61341858]
[68.97245026 -180.74366760]
[67.80115509 -185.23603821]
[68.45002747 -189.26022339]
[70.41813660 -192.18577576]
[69.07990265 -207.12596130]
[67.74166870 -222.06614685]
[52.30522537 -225.07536316]
[38.35295868 -232.30149841]
[27.00949478 -243.15286255]
[19.18656731 -256.74597168]
[15.50976658 -271.97738647]
[16.26850319 -287.61340332]
[21.39324570 -302.38983154]
[30.46181297 -315.11434937]
[42.73413086 -324.76257324]
[57.21263504 -330.56066895]
[55.65211105 -345.47927856]
[54.09158707 -360.39788818]
[52.53106689 -375.31649780]
[43.02113342 -384.02993774]
[42.02850342 -396.48779297]
[49.54161072 -405.96829224]
[48.20337677 -420.90847778]
[46.86514282 -435.84866333]
[32.20885468 -439.71762085]
[19.76148796 -448.36859131]
[11.02612591 -460.75686646]
[7.05760479 -475.38650513]
[8.33514214 -490.49093628]
[14.70446873 -504.24621582]
[25.39645958 -514.99127197]
[39.12000275 -521.42871094]
[54.21791458 -522.78106689]
[68.86704254 -518.88507080]
[81.29844666 -510.21121216]
[90.01096344 -497.80685425]
[93.95252228 -483.16992188]
[92.64714813 -468.06787109]
[86.25247955 -454.32437134]
[75.54071045 -443.59899902]
[61.80532837 -437.18688965]
[63.14356232 -422.24670410]
[64.48179626 -407.30651855]
[75.33602142 -393.51693726]
[67.44966888 -376.87701416]
[69.01019287 -361.95840454]
[70.57071686 -347.03979492]
[72.13124084 -332.12118530]
[86.27959442 -329.82528687]
[99.36082458 -323.93661499]
[110.47873688 -314.85171509]
[118.86985016 -303.18634033]
[123.95584106 -289.73370361]
[125.38339233 -275.41055298]
[123.04872131 -261.19476318]
[117.10511017 -248.05845642]
[107.95285034 -236.90159607]
[96.21231079 -228.49032593]
[82.68185425 -223.40437317]
[84.02008820 -208.46418762]
[85.35832214 -193.52400208]
[87.02986145 -178.61743164]
[89.03387451 -163.75190735]
[91.03788757 -148.88638306]
[93.04190063 -134.02084351]
[95.04591370 -119.15531921]
[97.04992676 -104.28979492]
[99.05393982 -89.42426300]
[109.41043854 -84.63790894]
[116.24108887 -75.35039520]
[117.75573730 -63.80051422]
[113.46340179 -52.84255600]
[104.32270813 -45.24095535]
[105.88323212 -30.32234955]
[107.44375610 -15.40374565]
[116.46315002 -3.55048490]
[110.20353699 10.97975159]
[117.74485016 -1.98668945]
[130.70960999 -9.53089142]
[145.70886230 -9.68081856]
[158.82183838 -2.39727926]
[166.62083435 10.41582584]
[167.06719971 25.40918350]
[160.04428101 38.66356277]
[147.38784790 46.71430588]
[132.40623474 47.45696259]
[119.01563263 40.69740677]
[110.71657562 28.20340919]
[110.04679108 43.18844986]
[109.37700653 58.17348862]
[108.70722198 73.15852356]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.61262512 127.52247620]
[106.61262512 142.52247620]
[106.61262512 157.52247620]
[106.61262512 172.52247620]
[106.61262512 187.52247620]
[116.18731689 203.25164795]
[106.82659149 218.09562683]
[107.04991913 233.09396362]
[107.27324677 248.09230042]
[109.63136292 251.73829651]
[110.60835266 255.56060791]
[110.31838226 259.10339355]
[109.01193237 261.99472046]
[107.03662109 263.98376465]
[106.36683655 278.96881104]
[105.69704437 293.95382690]
[105.02725983 308.93887329]
[104.35747528 323.92391968]
[104.02249908 338.92016602]
[111.75980377 352.72033691]
[104.02249908 365.44760132]
[104.02249908 380.44760132]
[104.02249908 395.44760132]
[111.75980377 409.24780273]
[104.02249908 421.97506714]
[104.02249908 436.97506714]
[104.02249908 451.97506714]
[118.87667847 454.26721191]
[133.20683289 458.80007935]
[146.67706299 465.46743774]
[158.97158813 474.11294556]
[169.80223083 484.53396606]
[178.91508484 496.48623657]
[186.09654236 509.68951416]
[191.17823792 523.83435059]
[194.04109192 538.58917236]
[194.61795044 553.60809326]
[192.89532471 568.53906250]
[188.91357422 583.03198242]
[182.76605225 596.74725342]
[174.59684753 609.36328125]
[164.59747314 620.58441162]
[153.00233459 630.14752197]
[140.08320618 637.82843018]
[126.14296722 643.44714355]
[111.50837708 646.87194824]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 191]
[21 190]
[22 189]
[24 187]
[25 186]
[26 185]
[28 183]
[32 182]
[33 181]
[34 180]
[35 179]
[36 178]
[37 173]
[38 172]
[39 171]
[42 169]
[43 168]
[44 167]
[45 166]
[46 165]
[50 164]
[52 162]
[53 161]
[54 160]
[55 159]
[56 158]
[57 147]
[59 145]
[60 144]
[61 143]
[64 138]
[65 137]
[66 136]
[67 135]
[68 134]
[69 133]
[70 132]
[74 131]
[75 130]
[76 129]
[86 118]
[87 117]
[88 116]
[89 115]
[92 113]
[93 112]
[94 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
