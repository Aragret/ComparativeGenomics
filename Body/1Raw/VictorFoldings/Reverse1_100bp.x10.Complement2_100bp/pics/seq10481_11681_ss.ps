%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[139.90736389 550.84692383]
[135.53361511 536.47686768]
[133.03343201 521.66546631]
[132.44787598 506.65594482]
[133.78654480 491.69479370]
[137.02748108 477.02764893]
[142.11744690 462.89541626]
[148.97285461 449.53009033]
[157.48115540 437.15118408]
[167.50262451 425.96197510]
[178.87268066 416.14617920]
[191.40464783 407.86499023]
[204.89273071 401.25439453]
[200.06674194 387.05194092]
[195.24073792 372.84948730]
[190.41473389 358.64703369]
[185.58874512 344.44458008]
[180.76274109 330.24209595]
[175.93675232 316.03964233]
[170.79478455 301.94851685]
[165.33943176 287.97570801]
[159.88407898 274.00292969]
[154.42871094 260.03012085]
[148.97335815 246.05732727]
[135.27146912 240.33073425]
[129.53991699 226.23803711]
[135.63940430 211.90505981]
[130.18403625 197.93226624]
[124.72868347 183.95947266]
[119.27332306 169.98667908]
[113.81797028 156.01387024]
[108.36260986 142.04107666]
[102.90725708 128.06828308]
[97.45189667 114.09548187]
[86.65695953 105.20948029]
[88.57530212 91.35987854]
[83.11994934 77.38707733]
[66.97264099 70.65775299]
[60.80946350 54.64744186]
[67.98841095 39.43884277]
[62.32562637 25.54881668]
[56.66284180 11.65878963]
[51.00005341 -2.23123717]
[45.33726883 -16.12126350]
[39.67448044 -30.01129150]
[34.01169205 -43.90131760]
[28.34890747 -57.79134369]
[22.68612099 -71.68137360]
[16.54854774 -78.44657898]
[17.04412460 -85.82060242]
[11.58876705 -99.79339600]
[9.60200405 -84.92555237]
[2.71134901 -71.60193634]
[-8.27369022 -61.38777924]
[-22.06260109 -55.48304367]
[-37.03548050 -54.58140564]
[-51.43332291 -58.78879166]
[-63.56468964 -67.61092377]
[-72.00439453 -80.01137543]
[-75.76095581 -94.53337097]
[-74.39305115 -109.47087097]
[-68.06138611 -123.06903076]
[-57.50979233 -133.73036194]
[-43.97786713 -140.20236206]
[-29.05531883 -141.72473145]
[-14.49524021 -138.11860657]
[-2.00813293 -129.80764771]
[6.93973589 -117.76679993]
[4.93572235 -132.63232422]
[2.93170857 -147.49786377]
[0.92769486 -162.36338806]
[-1.07631886 -177.22891235]
[-16.08501434 -176.81523132]
[-31.05265427 -177.99923706]
[-45.80964279 -180.76751709]
[-60.18877029 -185.08871460]
[-74.02710724 -190.91387939]
[-87.16786957 -198.17697144]
[-99.46214294 -206.79573059]
[-110.77063751 -216.67247009]
[-120.96520996 -227.69529724]
[-129.93035889 -239.73931885]
[-137.56448364 -252.66804504]
[-143.78111267 -266.33499146]
[-148.50978088 -280.58532715]
[-151.69691467 -295.25756836]
[-153.30639648 -310.18542480]
[-153.32002258 -325.19982910]
[-151.73759460 -340.13061523]
[-148.57707214 -354.80859375]
[-143.87425232 -369.06747437]
[-137.68241882 -382.74566650]
[-130.07174683 -395.68823242]
[-121.12844849 -407.74847412]
[-110.95388031 -418.78976440]
[-99.66331482 -428.68701172]
[-87.38468933 -437.32803345]
[-74.25712585 -444.61495972]
[-60.42937088 -450.46517944]
[-46.05810165 -454.81246948]
[-31.30615807 -457.60751343]
[-16.34068871 -458.81863403]
[-1.33126795 -458.43215942]
[13.55203915 -456.45245361]
[28.14059258 -452.90194702]
[42.26909256 -447.82083130]
[55.77745438 -441.26672363]
[68.51261139 -433.31387329]
[80.33027649 -424.05239868]
[91.09653473 -413.58724976]
[100.68939972 -402.03695679]
[109.00018311 -389.53244019]
[115.93470764 -376.21536255]
[121.41439819 -362.23663330]
[125.37718201 -347.75460815]
[127.77814484 -332.93344116]
[128.59008789 -317.94100952]
[127.80379486 -302.94720459]
[125.42819977 -288.12194824]
[121.49020386 -273.63317871]
[116.03443146 -259.64508057]
[109.12270355 -246.31617737]
[100.83333588 -233.79745483]
[91.26024628 -222.23077393]
[80.51190948 -211.74719238]
[68.71011353 -202.46551514]
[55.98857880 -194.49087524]
[42.49145126 -187.91366577]
[28.37166595 -182.80841064]
[13.78920937 -179.23292542]
[15.79322338 -164.36740112]
[17.79723740 -149.50187683]
[19.80125046 -134.63633728]
[21.80526352 -119.77081299]
[25.56156540 -105.24875641]
[31.01692200 -91.27595520]
[36.57614899 -77.34416199]
[42.23893356 -63.45413208]
[47.90172195 -49.56410599]
[53.56450653 -35.67407608]
[59.22729492 -21.78404999]
[64.89008331 -7.89402390]
[70.55286407 5.99600315]
[76.21565247 19.88603020]
[81.87844086 33.77605820]
[94.33750916 37.06255722]
[102.75444031 47.07442093]
[103.88482666 60.30063248]
[97.09274292 71.93172455]
[102.54810333 85.90451813]
[113.34304047 94.79051971]
[111.42469788 108.64012146]
[116.88005066 122.61292267]
[122.33541107 136.58572388]
[127.79076385 150.55851746]
[133.24612427 164.53131104]
[138.70147705 178.50411987]
[144.15684509 192.47691345]
[149.61219788 206.44970703]
[163.80969238 212.85818481]
[169.14315796 227.10630798]
[162.94615173 240.60195923]
[168.40151978 254.57476807]
[173.85687256 268.54754639]
[179.31222534 282.52035522]
[184.76757812 296.49316406]
[188.84397888 299.75354004]
[191.04228210 303.84265137]
[191.36135864 307.90628052]
[190.13920593 311.21365356]
[194.96519470 325.41610718]
[199.79119873 339.61856079]
[204.61720276 353.82101440]
[209.44319153 368.02346802]
[214.26919556 382.22592163]
[219.09518433 396.42837524]
[233.81843567 393.45278931]
[248.80133057 392.38439941]
[263.79782104 393.24084473]
[278.56167603 396.00799561]
[292.85043335 400.64047241]
[306.42947388 407.06213379]
[319.07580566 415.16760254]
[330.58178711 424.82373047]
[340.75845337 435.87197876]
[349.43872070 448.13088989]
[356.48004150 461.39923096]
[361.76678467 475.45904541]
[365.21212769 490.07949829]
[366.75949097 505.02050781]
[366.38351440 520.03674316]
[364.09033203 534.88159180]
[359.91760254 549.31127930]
[353.93383789 563.08892822]
[346.23730469 575.98822021]
[336.95440674 587.79736328]
[326.23757935 598.32250977]
[314.26275635 607.39068604]
[301.22662354 614.85308838]
[287.34320068 620.58709717]
[272.84051514 624.49865723]
[257.95669556 626.52349854]
[242.93612671 626.62835693]
[228.02548218 624.81146240]
[213.46960449 621.10272217]
[199.50750732 615.56304932]
[186.36846924 608.28332520]
[174.26823425 599.38317871]
[163.40551758 589.00872803]
[153.95867920 577.33026123]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 176]
[14 175]
[15 174]
[16 173]
[17 172]
[18 171]
[19 170]
[20 166]
[21 165]
[22 164]
[23 163]
[24 162]
[27 159]
[28 158]
[29 157]
[30 156]
[31 155]
[32 154]
[33 153]
[34 152]
[36 150]
[37 149]
[40 145]
[41 144]
[42 143]
[43 142]
[44 141]
[45 140]
[46 139]
[47 138]
[48 137]
[50 136]
[51 135]
[68 134]
[69 133]
[70 132]
[71 131]
[72 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
