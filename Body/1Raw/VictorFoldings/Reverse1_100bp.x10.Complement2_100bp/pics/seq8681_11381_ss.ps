%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[60.09896469 657.02825928]
[53.57705307 643.45776367]
[50.01950836 628.82775879]
[49.58185196 613.77777100]
[52.28321457 598.96569824]
[58.00550842 585.03918457]
[66.49857330 572.60687256]
[77.39113617 562.21240234]
[90.20701599 554.31005859]
[104.38596344 549.24536133]
[102.38195038 534.37982178]
[100.37793732 519.51428223]
[98.15281677 504.68023682]
[95.70709229 489.88098145]
[85.99816895 478.58557129]
[91.38182831 463.70852661]
[88.93610382 448.90924072]
[86.49037170 434.10998535]
[84.04464722 419.31069946]
[81.59892273 404.51144409]
[76.40055084 418.58184814]
[66.52513123 429.87237549]
[53.27193832 436.89755249]
[38.38467026 438.73309326]
[23.82199097 435.13748169]
[11.49987793 426.58377075]
[3.03951478 414.19741821]
[-0.44599172 399.60800171]
[1.50193655 384.73501587]
[8.62701607 371.53527832]
[19.99182129 361.74542236]
[34.10111237 356.65347290]
[49.09857559 356.92938232]
[63.01103210 362.53683472]
[74.00806427 372.73806763]
[80.64346313 386.19323730]
[81.53627777 371.21984863]
[82.42909241 356.24642944]
[83.32190704 341.27304077]
[84.21472931 326.29962158]
[85.10754395 311.32623291]
[70.11655426 303.53326416]
[60.00698090 289.92700195]
[56.85159302 273.21600342]
[61.33277512 256.75338745]
[72.59565735 243.86387634]
[88.41072083 237.17259216]
[88.85733032 222.17924500]
[81.50239563 209.22724915]
[89.64714813 195.66355896]
[90.09375763 180.67021179]
[90.54035950 165.67686462]
[83.18543243 152.72485352]
[91.33018494 139.16117859]
[91.77678680 124.16782379]
[92.22339630 109.17447662]
[92.44672394 94.17613983]
[92.44672394 79.17613983]
[92.44672394 64.17613983]
[92.44672394 49.17613602]
[84.70941925 35.37596512]
[92.44672394 22.64869308]
[91.88851166 7.65908289]
[90.77286530 -7.29937029]
[89.65721130 -22.25782394]
[88.54156494 -37.21627808]
[87.42591858 -52.17473221]
[86.31026459 -67.13318634]
[77.56798553 -80.31965637]
[84.33724976 -93.58715057]
[75.09096527 -102.57987976]
[74.46968842 -115.06177521]
[82.26173401 -124.31436920]
[81.36891937 -139.28778076]
[70.87499237 -154.41917419]
[79.33559418 -169.79399109]
[78.21994019 -184.75244141]
[76.88170624 -199.69262695]
[75.32118988 -214.61123657]
[73.76066589 -229.52984619]
[58.74517059 -230.05999756]
[43.94960022 -232.67481995]
[29.66195869 -237.32341003]
[16.16035652 -243.91528320]
[3.70760584 -252.32214355]
[-7.45389605 -262.38031006]
[-17.10688782 -273.89404297]
[-25.06347084 -286.63919067]
[-31.16876793 -300.36767578]
[-35.30393600 -314.81228638]
[-37.38848877 -329.69183350]
[-37.38184357 -344.71667480]
[-35.28413010 -359.59436035]
[-31.13618279 -374.03530884]
[-25.01874352 -387.75839233]
[-17.05088806 -400.49649048]
[-7.38771439 -412.00167847]
[3.78268099 -422.04998779]
[16.24286461 -430.44583130]
[29.75029373 -437.02575684]
[44.04204178 -441.66171265]
[58.83991623 -444.26342773]
[73.85587311 -444.78030396]
[88.79762268 -443.20223999]
[103.37432098 -439.55999756]
[117.30222321 -433.92440796]
[130.31022644 -426.40524292]
[142.14511108 -417.14880371]
[152.57652283 -406.33529663]
[161.40139771 -394.17523193]
[168.44798279 -380.90524292]
[173.57908630 -366.78372192]
[176.69483948 -352.08547974]
[177.73458862 -337.09664917]
[176.67811584 -322.10897827]
[173.54595947 -307.41424561]
[168.39909363 -293.29843140]
[161.33772278 -280.03634644]
[152.49926758 -267.88610840]
[142.05580139 -257.08425903]
[130.21058655 -247.84104919]
[117.19419861 -240.33638000]
[103.26001740 -234.71635437]
[88.67926788 -231.09036255]
[90.23979187 -216.17175293]
[91.80031586 -201.25315857]
[94.88043213 -197.60322571]
[95.70038605 -191.97964478]
[93.17839813 -185.86808777]
[94.29404449 -170.90963745]
[103.25239563 -162.78102112]
[104.30428314 -150.32801819]
[96.34232330 -140.18058777]
[97.23513794 -125.20719147]
[107.67398834 -111.10054016]
[99.29570007 -94.70280457]
[107.95818329 -82.58625793]
[101.26872253 -68.24883270]
[102.38436890 -53.29037857]
[103.50001526 -38.33192444]
[104.61566925 -23.37347221]
[105.73131561 -8.41501904]
[106.84696198 6.54343414]
[118.46404266 -2.94569325]
[133.15754700 0.07106572]
[140.09597778 13.36986828]
[134.16458130 27.14733315]
[119.73576355 31.24722481]
[107.44672394 22.64869308]
[115.18402100 35.37596512]
[107.44672394 49.17613602]
[107.44672394 64.17613983]
[107.44672394 79.17613983]
[107.44672394 94.17613983]
[110.21977997 98.62856293]
[110.30082703 104.31774139]
[107.21674347 109.62107849]
[106.77014160 124.61443329]
[106.32353210 139.60777283]
[113.64652252 153.63220215]
[105.53371429 166.12345886]
[105.08710480 181.11682129]
[104.64050293 196.11016846]
[111.96348572 210.13458252]
[103.85067749 222.62585449]
[103.40407562 237.61920166]
[115.53896332 242.84852600]
[125.15130615 251.86859131]
[131.11184692 263.58993530]
[132.73045349 276.60757446]
[129.83602905 289.36938477]
[122.79425049 300.36123657]
[112.46153259 308.28646851]
[100.08094788 312.21902466]
[99.18813324 327.19244385]
[98.29531860 342.16583252]
[97.40250397 357.13925171]
[96.50968170 372.11267090]
[95.61686707 387.08605957]
[96.39819336 402.06570435]
[98.84391785 416.86495972]
[101.28964233 431.66424561]
[103.73537445 446.46350098]
[106.18109894 461.26278687]
[116.06495667 473.61672974]
[110.50636292 487.43524170]
[112.95208740 502.23449707]
[116.84504700 507.57833862]
[117.37528992 513.23657227]
[115.24346161 517.51025391]
[117.24747467 532.37579346]
[119.25148773 547.24133301]
[134.26542664 548.37054443]
[148.71640015 552.59704590]
[161.97264099 559.73608398]
[173.45466614 569.47552490]
[182.66052246 581.38964844]
[189.18777466 594.95758057]
[192.75108337 609.58618164]
[193.19465637 624.63598633]
[190.49911499 639.44909668]
[184.78230286 653.37792969]
[176.29412842 665.81353760]
[165.40565491 676.21228027]
[152.59288025 684.11968994]
[138.41593933 689.18994141]
[123.49456787 691.20153809]
[108.48106384 690.06634521]
[94.03176880 685.83416748]
[80.77832794 678.68994141]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 192]
[11 191]
[12 190]
[13 187]
[14 186]
[16 184]
[17 183]
[18 182]
[19 181]
[20 180]
[36 179]
[37 178]
[38 177]
[39 176]
[40 175]
[41 174]
[47 166]
[48 165]
[50 163]
[51 162]
[52 161]
[54 159]
[55 158]
[56 157]
[57 154]
[58 153]
[59 152]
[60 151]
[62 149]
[63 143]
[64 142]
[65 141]
[66 140]
[67 139]
[68 138]
[70 136]
[73 134]
[74 133]
[76 130]
[77 129]
[78 126]
[79 125]
[80 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
