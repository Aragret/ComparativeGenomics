%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGAAACCUAUAUGAUGUCGCUACCGAUAACUCCUCAUAGGACUCCGUACCCCCAGUCCCCAACUCCAGAACCACUCACAAAAUCACCCCAAUCGCUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[137.11041260 629.60833740]
[127.68555450 617.77502441]
[122.38057709 603.60772705]
[121.71520233 588.49438477]
[125.75462341 573.91571045]
[134.10308838 561.29992676]
[145.94271851 551.88299561]
[160.11357117 546.58752441]
[159.44378662 531.60247803]
[158.77400208 516.61743164]
[158.10421753 501.63238525]
[156.76597595 486.69219971]
[154.76196289 471.82666016]
[152.75794983 456.96115112]
[150.75393677 442.09561157]
[148.74992371 427.23010254]
[146.74591064 412.36456299]
[144.74189758 397.49902344]
[142.73788452 382.63351440]
[140.73387146 367.76797485]
[138.72985840 352.90243530]
[136.72584534 338.03692627]
[132.71688843 331.82803345]
[134.80436707 322.93533325]
[130.88829041 316.66748047]
[133.10794067 307.80682373]
[131.54740906 292.88821411]
[129.98689270 277.96960449]
[128.42636108 263.05099487]
[125.98063660 248.25173950]
[122.65837860 233.62428284]
[119.33612061 218.99681091]
[108.97209167 208.29933167]
[113.46071625 193.12820435]
[99.19219208 188.85328674]
[88.91082764 177.93772888]
[85.45072174 163.24440002]
[89.83860016 148.69642639]
[100.99192047 138.22978210]
[97.66966248 123.60231781]
[94.34739685 108.97486115]
[90.37530518 94.51033783]
[85.76129150 80.23760223]
[74.15419006 69.48651886]
[77.60143280 54.99632645]
[72.98742676 40.72359467]
[59.03866196 28.70221901]
[63.37952042 11.69857693]
[58.55352020 -2.50387859]
[53.72752380 -16.70633507]
[48.00350571 -23.82486153]
[48.93711090 -31.15631104]
[44.32310104 -45.42904663]
[39.70909500 -59.70177841]
[25.91819954 -66.94394684]
[21.44225883 -81.48426056]
[28.43155098 -94.58713531]
[23.81754112 -108.85987091]
[12.21043777 -119.61094666]
[15.65768337 -134.10115051]
[13.26505089 -119.29319763]
[6.84948301 -105.73442078]
[-3.08306289 -94.49411011]
[-15.74926472 -86.45873260]
[-30.15021324 -82.26197815]
[-45.15018845 -82.23484039]
[-59.56623077 -86.37944031]
[-72.26142883 -94.36892700]
[-82.23458862 -105.57321167]
[-88.69918823 -119.10868835]
[-91.14539337 -133.90788269]
[-89.38029480 -148.80366516]
[-83.54309082 -162.62129211]
[-74.09413147 -174.27107239]
[-61.77859879 -182.83422852]
[-47.56774521 -187.63543701]
[-32.58229828 -188.29606628]
[-18.00407791 -184.76400757]
[-4.98277712 -177.31781006]
[5.45468664 -166.54472351]
[12.48635197 -153.29109192]
[12.26302338 -168.28942871]
[12.03969574 -183.28776550]
[-2.06782818 -186.65078735]
[-14.94929123 -193.29350281]
[-25.85546303 -202.82446289]
[-34.15322495 -214.68435669]
[-39.36233139 -228.17883301]
[-41.18318939 -242.51924133]
[-39.51409912 -256.86856079]
[-34.45691299 -270.39041138]
[-26.31084061 -282.29776001]
[-15.55474281 -291.89859009]
[-2.81898999 -298.63638306]
[11.15148640 -302.12216187]
[11.15148640 -317.12216187]
[11.15148640 -332.12216187]
[11.15148640 -347.12216187]
[11.15148640 -362.12216187]
[-2.62238240 -368.69812012]
[-12.17230892 -380.60449219]
[-15.60214901 -395.47726440]
[-12.23090363 -410.36340332]
[-2.72793841 -422.30728149]
[11.01992798 -428.93743896]
[26.28304482 -428.93743896]
[40.03091049 -422.30728149]
[49.53387833 -410.36340332]
[52.90512085 -395.47726440]
[49.47528076 -380.60449219]
[39.92535400 -368.69812012]
[26.15148544 -362.12216187]
[26.15148544 -347.12216187]
[26.15148544 -332.12216187]
[26.15148544 -317.12216187]
[26.15148544 -302.12216187]
[41.19321442 -298.21493530]
[54.72391510 -290.54769897]
[65.82145691 -279.63635254]
[73.72784424 -266.21813965]
[77.90093231 -251.20173645]
[78.05166626 -235.60586548]
[74.16404724 -220.49005127]
[66.49662018 -206.88270569]
[55.56530762 -195.71115112]
[42.10867310 -187.73840332]
[27.03803253 -183.51109314]
[27.26136208 -168.51275635]
[27.48468971 -153.51441956]
[29.93041611 -138.71514893]
[41.20749283 -128.98495483]
[38.09027481 -113.47387695]
[42.70428467 -99.20114899]
[56.04102707 -92.66915131]
[60.92360687 -78.26029968]
[53.98182678 -64.31578827]
[58.59583664 -50.04305267]
[63.20984650 -35.77032089]
[67.92997742 -21.53233147]
[72.75597382 -7.32987642]
[77.58197784 6.87257910]
[88.29045868 12.49885464]
[92.42730713 24.29165840]
[87.26016235 36.10958481]
[91.87416840 50.38231659]
[103.15124512 60.11251831]
[100.03402710 75.62359619]
[104.64803314 89.89632416]
[112.42428589 77.06940460]
[126.95948029 73.36425781]
[139.92720032 80.90336609]
[143.89895630 95.36798859]
[136.59953308 108.47212219]
[122.21038055 112.70913696]
[108.97486115 105.65260315]
[112.29711914 120.28005981]
[115.61937714 134.90751648]
[130.19967651 139.52941895]
[140.44129944 150.75466919]
[143.66769409 165.50108337]
[139.11018372 179.78692627]
[128.08818054 189.80595398]
[138.68983459 201.54968262]
[133.96357727 215.67456055]
[137.28584290 230.30201721]
[140.60809326 244.92947388]
[147.73713684 231.73187256]
[161.21173096 225.14132690]
[176.00619507 227.61596680]
[186.60255432 238.23278809]
[189.04864502 253.03201294]
[182.43211365 266.49386597]
[169.22076416 273.59741211]
[154.34213257 271.69323730]
[143.34497070 261.49047852]
[144.90548706 276.40908813]
[146.46601868 291.32769775]
[148.02653503 306.24630737]
[149.69807434 321.15286255]
[151.59136963 336.03289795]
[153.59538269 350.89843750]
[155.59939575 365.76397705]
[157.60340881 380.62948608]
[159.60742188 395.49502563]
[161.61143494 410.36053467]
[163.61544800 425.22607422]
[165.61946106 440.09161377]
[167.62347412 454.95712280]
[169.62748718 469.82266235]
[171.63151550 484.68820190]
[181.56356812 473.44744873]
[196.52584839 472.38446045]
[207.94729614 482.10818481]
[209.28517151 497.04840088]
[199.77308655 508.64669800]
[184.85998535 510.25903320]
[173.08924866 500.96261597]
[173.75903320 515.94763184]
[174.42881775 530.93267822]
[175.09860229 545.91772461]
[189.68539429 549.92779541]
[202.31794739 558.25091553]
[211.75865173 570.07159424]
[217.08261108 584.23175049]
[217.76823425 599.34417725]
[213.74835205 613.92828369]
[205.41679382 626.55523682]
[193.58979797 635.98803711]
[179.42605591 641.30249023]
[164.31318665 641.97802734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 200]
[9 199]
[10 198]
[11 197]
[12 190]
[13 189]
[14 188]
[15 187]
[16 186]
[17 185]
[18 184]
[19 183]
[20 182]
[21 181]
[22 180]
[24 179]
[26 178]
[27 177]
[28 176]
[29 175]
[30 166]
[31 165]
[32 164]
[34 162]
[39 157]
[40 156]
[41 155]
[42 148]
[43 147]
[45 145]
[46 144]
[48 141]
[49 140]
[50 139]
[52 138]
[53 137]
[54 136]
[57 133]
[58 132]
[60 130]
[81 129]
[82 128]
[83 127]
[95 116]
[96 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
