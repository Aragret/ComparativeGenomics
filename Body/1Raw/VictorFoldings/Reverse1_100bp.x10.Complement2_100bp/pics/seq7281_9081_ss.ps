%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[89.17282104 789.78814697]
[75.42524719 795.81713867]
[61.16682434 800.51208496]
[46.52668381 803.83032227]
[31.63740730 805.74194336]
[16.63384056 806.22955322]
[1.65186322 805.28875732]
[-13.17284489 802.92810059]
[-27.70602608 799.16894531]
[-41.81605911 794.04528809]
[-55.37516403 787.60357666]
[-68.26054382 779.90216064]
[-80.35549927 771.01080322]
[-91.55049133 761.00994873]
[-101.74414062 749.99023438]
[-110.84413147 738.05139160]
[-118.76805115 725.30163574]
[-125.44412994 711.85638428]
[-130.81190491 697.83740234]
[-134.82278442 683.37170410]
[-137.44041443 668.59020996]
[-138.64111328 653.62677002]
[-138.41400146 638.61700439]
[-136.76112366 623.69683838]
[-133.69746399 609.00128174]
[-129.25076294 594.66351318]
[-123.46128082 580.81335449]
[-116.38146210 567.57623291]
[-108.07542419 555.07208252]
[-98.61838531 543.41406250]
[-88.09599304 532.70782471]
[-76.60353851 523.05029297]
[-64.24510193 514.52886963]
[-51.13261795 507.22085571]
[-37.38482285 501.19235229]
[-23.12622833 496.49795532]
[-8.48596478 493.18020630]
[6.40338087 491.26913452]
[21.40696526 490.78207397]
[36.38890839 491.72341919]
[51.21353149 494.08462524]
[54.96982956 479.56256104]
[58.72613144 465.04049683]
[62.48243332 450.51846313]
[58.17882919 436.25912476]
[69.12543488 424.83624268]
[72.88173676 410.31417847]
[75.54753113 395.55297852]
[77.10805511 380.63436890]
[78.66857910 365.71575928]
[80.22910309 350.79714966]
[81.78962708 335.87854004]
[82.79388428 320.91220093]
[83.24049377 305.91885376]
[83.68709564 290.92550659]
[76.33216858 277.97351074]
[84.47692108 264.40982056]
[74.10797882 253.77870178]
[74.34731293 238.56695557]
[85.56851196 227.76313782]
[86.01511383 212.76977539]
[86.46172333 197.77642822]
[76.50588226 192.74334717]
[69.11352539 184.32009888]
[65.38140869 173.69831848]
[65.88483429 162.39985657]
[70.58932495 152.05868530]
[78.85008240 144.18464661]
[89.50009155 139.94300842]
[90.61574554 124.98455811]
[91.73139191 110.02610779]
[92.40117645 95.04106903]
[92.62450409 80.04272461]
[92.84783173 65.04438782]
[93.07115936 50.04605484]
[93.29448700 35.04771805]
[93.51781464 20.04937935]
[85.98683929 6.13553905]
[93.91276550 -6.47512531]
[94.13609314 -21.47346306]
[86.60511780 -35.38730240]
[94.53105164 -47.99796677]
[94.75437927 -62.99630356]
[87.22339630 -76.91014099]
[95.14933014 -89.52080536]
[95.37265778 -104.51914215]
[86.03321838 -120.38912964]
[95.61391449 -135.09210205]
[92.48450470 -143.67373657]
[95.72724152 -150.31500244]
[95.95056915 -165.31333923]
[96.17389679 -180.31167603]
[86.83445740 -196.18167114]
[96.41514587 -210.88462830]
[96.41514587 -225.88462830]
[96.41514587 -240.88462830]
[96.41514587 -255.88462830]
[96.41514587 -270.88464355]
[96.41514587 -285.88464355]
[82.64128113 -292.46060181]
[73.09135437 -304.36697388]
[69.66151428 -319.23971558]
[73.03276062 -334.12588501]
[82.53572083 -346.06976318]
[96.28359222 -352.69992065]
[111.54670715 -352.69992065]
[125.29457092 -346.06976318]
[134.79754639 -334.12588501]
[138.16877747 -319.23971558]
[134.73893738 -304.36697388]
[125.18901825 -292.46060181]
[111.41514587 -285.88464355]
[111.41514587 -270.88464355]
[111.41514587 -255.88462830]
[111.41514587 -240.88462830]
[111.41514587 -225.88462830]
[111.41514587 -210.88462830]
[119.74410248 -202.11222839]
[119.86686707 -189.61547852]
[111.17223358 -180.08834839]
[110.94890594 -165.09001160]
[110.72557831 -150.09167480]
[110.61391449 -135.09210205]
[118.94287109 -126.31969452]
[119.06562805 -113.82294464]
[110.37099457 -104.29581451]
[110.14766693 -89.29747772]
[117.69462585 -76.45642090]
[109.75271606 -62.77297592]
[109.52938843 -47.77463913]
[117.07633972 -34.93358231]
[109.13442993 -21.25013542]
[108.91110229 -6.25179768]
[116.45806122 6.58926058]
[108.51615143 20.27270699]
[108.29282379 35.27104568]
[108.06949615 50.26938248]
[107.84616852 65.26771545]
[107.62284088 80.26605988]
[107.39951324 95.26439667]
[109.32935333 97.62346649]
[110.44347382 100.73686981]
[110.46083069 104.30381775]
[109.21543884 107.92393494]
[106.68984222 111.14175415]
[105.57419586 126.10020447]
[104.45854950 141.05865479]
[119.57573700 152.79774475]
[124.52419281 171.13137817]
[117.47907257 188.60408020]
[101.45507050 198.22303772]
[101.00846863 213.21638489]
[100.56185913 228.20973206]
[111.12010956 239.66229248]
[110.45359802 254.86132812]
[99.47026825 264.85641479]
[106.79325867 278.88085938]
[98.68044281 291.37210083]
[98.23384094 306.36544800]
[97.78723145 321.35879517]
[110.32847595 313.12976074]
[124.62840271 317.65878296]
[130.14564514 331.60726929]
[122.81309509 344.69290161]
[108.03603363 347.26943970]
[96.70822906 337.43905640]
[95.14770508 352.35766602]
[93.58718109 367.27627563]
[92.02665710 382.19488525]
[90.46614075 397.11349487]
[100.52748871 385.98834229]
[114.77281189 381.29037476]
[129.47840881 384.24765015]
[140.80026245 394.08712769]
[145.77888489 408.23681641]
[143.11286926 422.99798584]
[133.49909973 434.51211548]
[119.45059967 439.76947021]
[104.63961029 437.39572144]
[92.93769073 428.01144409]
[87.40379333 414.07049561]
[83.64749908 428.59252930]
[87.68242645 443.89056396]
[77.00449371 454.27474976]
[73.24819183 468.79681396]
[69.49188995 483.31887817]
[65.73558807 497.84094238]
[79.84580994 502.96405029]
[93.40515137 509.40524292]
[106.29080963 517.10620117]
[118.38608551 525.99713135]
[129.58145142 535.99755859]
[139.77549744 547.01690674]
[148.87593079 558.95538330]
[156.80030823 571.70489502]
[163.47686768 585.14990234]
[168.84516907 599.16864014]
[172.85656738 613.63427734]
[175.47474670 628.41564941]
[176.67597961 643.37902832]
[176.44941711 658.38879395]
[174.79708862 673.30902100]
[171.73396301 688.00469971]
[167.28778076 702.34265137]
[161.49880981 716.19299316]
[154.41946411 729.43035889]
[146.11389160 741.93481445]
[136.65727234 753.59320068]
[126.13526917 764.29980469]
[114.64316559 773.95782471]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 187]
[42 186]
[43 185]
[44 184]
[46 182]
[47 181]
[48 170]
[49 169]
[50 168]
[51 167]
[52 166]
[53 160]
[54 159]
[55 158]
[57 156]
[60 153]
[61 152]
[62 151]
[69 147]
[70 146]
[71 145]
[72 140]
[73 139]
[74 138]
[75 137]
[76 136]
[77 135]
[79 133]
[80 132]
[82 130]
[83 129]
[85 127]
[86 126]
[88 123]
[90 122]
[91 121]
[92 120]
[94 117]
[95 116]
[96 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
