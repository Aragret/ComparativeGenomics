%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[-2.76696539 601.94683838]
[-16.67874718 607.65942383]
[-31.37119484 610.86926270]
[-46.39782333 611.47882080]
[-61.30198669 609.46960449]
[-75.63076782 604.90264893]
[-88.94873047 597.91674805]
[-100.85115814 588.72418213]
[-110.97634888 577.60430908]
[-119.01660919 564.89501953]
[-124.72760010 550.98260498]
[-127.93578339 536.28979492]
[-128.54365540 521.26312256]
[-126.53273773 506.35916138]
[-121.96414948 492.03091431]
[-114.97673035 478.71374512]
[-105.78280640 466.81234741]
[-94.66178131 456.68841553]
[-81.95160675 448.64959717]
[-68.03853607 442.94018555]
[-53.34535599 439.73367310]
[-38.31859207 439.12750244]
[-36.31457901 424.26199341]
[-34.31056595 409.39645386]
[-32.30654907 394.53091431]
[-34.52824020 387.48211670]
[-30.16044235 379.45962524]
[-27.93532562 364.62557983]
[-25.71020699 349.79153442]
[-23.48509026 334.95748901]
[-32.16487122 347.19110107]
[-43.78852844 356.67218018]
[-57.51693726 362.71624756]
[-72.35903168 364.88699341]
[-87.24335480 363.02770996]
[-101.09539032 357.27261353]
[-112.91514587 348.03717041]
[-121.84934998 335.98809814]
[-127.25302124 321.99523926]
[-128.73608398 307.06872559]
[-126.19145203 292.28613281]
[-119.80284119 278.71463013]
[-110.03144073 267.33395386]
[-97.58266449 258.96569824]
[-83.35520172 254.21394348]
[-68.37613678 253.42173767]
[-53.72682190 256.64627075]
[-40.46480942 263.65475464]
[-29.54749298 273.94128418]
[-21.76300240 286.76318359]
[-17.67330742 301.19491577]
[-17.57379341 316.19573975]
[-10.89359951 302.76535034]
[-4.21340513 289.33499146]
[2.46678948 275.90460205]
[9.14698410 262.47424316]
[15.82717896 249.04385376]
[14.56756592 234.20260620]
[27.64107895 225.29228210]
[34.32127380 211.86190796]
[41.00146866 198.43153381]
[37.45082474 186.86781311]
[42.90628815 175.62408447]
[54.93397141 170.96600342]
[53.89546204 156.10765076]
[67.10018921 147.39295959]
[73.97959900 134.06353760]
[80.85900879 120.73410034]
[87.73842621 107.40467072]
[87.27133179 93.43064117]
[98.93214417 85.71591187]
[104.17886353 71.66344452]
[107.71853638 57.08706665]
[111.25820923 42.51069260]
[113.59369659 27.69362450]
[114.70934296 12.73517132]
[115.82499695 -2.22328162]
[116.94064331 -17.18173599]
[118.05628967 -32.14019012]
[119.17193604 -47.09864044]
[120.28759003 -62.05709457]
[108.61825562 -72.11357880]
[105.14861298 -86.93973541]
[111.00518036 -100.80208588]
[123.74890900 -108.46598053]
[124.86455536 -123.42443848]
[125.98020935 -138.38288879]
[127.09585571 -153.34133911]
[128.21150208 -168.29980469]
[129.32714844 -183.25825500]
[127.05908203 -187.95962524]
[126.84279633 -192.59713745]
[128.31037903 -196.39993286]
[130.84130859 -198.85487366]
[132.62377930 -213.74859619]
[134.40623474 -228.64231873]
[136.18870544 -243.53602600]
[137.30435181 -258.49447632]
[137.75096130 -273.48782349]
[138.19757080 -288.48117065]
[124.62559509 -295.46432495]
[115.43440247 -307.64974976]
[112.44889832 -322.61804199]
[116.26186371 -337.39721680]
[126.11623383 -349.05285645]
[140.05540466 -355.27075195]
[155.31175232 -354.81631470]
[168.85612488 -347.77978516]
[177.99926758 -335.55825806]
[180.92579651 -320.57833862]
[177.05465698 -305.81427002]
[167.15446472 -294.19750977]
[153.19091797 -288.03457642]
[152.74430847 -273.04122925]
[152.29769897 -258.04788208]
[163.92964172 -267.51879883]
[178.86502075 -266.12796021]
[188.54818726 -254.67211914]
[187.43217468 -239.71368408]
[176.15629578 -229.82154846]
[161.17987061 -230.66235352]
[151.08242798 -241.75355530]
[149.29995728 -226.85984802]
[147.51748657 -211.96612549]
[145.73503113 -197.07241821]
[144.28559875 -182.14260864]
[143.16995239 -167.18414307]
[142.05430603 -152.22569275]
[140.93865967 -137.26724243]
[139.82301331 -122.30879211]
[138.70736694 -107.35033417]
[150.17323303 -97.88080597]
[153.90864563 -83.30306244]
[148.27806091 -69.15562439]
[135.24604797 -60.94144821]
[134.13038635 -45.98299408]
[133.01473999 -31.02453995]
[131.89909363 -16.06608582]
[130.78344727 -1.10763299]
[129.66780090 13.85082054]
[128.55215454 28.80927467]
[137.90802002 17.08460999]
[151.60356140 10.96644020]
[166.57916260 11.82157803]
[179.48924255 19.45898438]
[187.44964600 32.17244339]
[188.68199158 47.12173080]
[182.91099548 60.96714783]
[171.42588806 70.61558533]
[156.79248047 73.91156006]
[142.27992249 70.11873627]
[131.13034058 60.08445358]
[125.83458710 46.05036545]
[122.29491425 60.62673950]
[118.75524139 75.20311737]
[128.90597534 64.15945435]
[142.18971252 57.19220352]
[157.04586792 55.11987686]
[171.72917175 58.18592072]
[184.51463318 66.03014374]
[193.90023804 77.73101807]
[198.78337097 91.91393280]
[198.59037781 106.91268921]
[193.34390259 120.96525574]
[183.66032410 132.42074585]
[170.67724609 139.93338013]
[155.91990662 142.62059021]
[141.12199402 140.16667175]
[128.02194214 132.85992432]
[118.15873718 121.55871582]
[112.69109344 107.59072113]
[112.26157379 92.59532928]
[112.72866821 106.56935883]
[101.06785583 114.28408813]
[94.18843842 127.61351776]
[87.30902863 140.94294739]
[80.42961884 154.27236938]
[80.97606659 170.08413696]
[68.26339722 177.84541321]
[69.55790710 196.21401978]
[54.43184280 205.11172485]
[47.75164795 218.54209900]
[41.07145309 231.97247314]
[41.85325623 247.77435303]
[29.25755501 255.72404480]
[22.57736015 269.15441895]
[15.89716530 282.58480835]
[9.21697140 296.01516724]
[2.53677630 309.44555664]
[-4.14341831 322.87591553]
[-8.65104675 337.18261719]
[-10.87616444 352.01666260]
[-13.10128117 366.85070801]
[-15.32639885 381.68475342]
[-17.44102287 396.53494263]
[-19.44503593 411.40048218]
[-21.44904900 426.26599121]
[-23.45306396 441.13153076]
[-9.12324524 445.69525146]
[4.19630241 452.67813110]
[16.10081482 461.86801147]
[26.22852516 472.98556519]
[34.27166748 485.69302368]
[39.98581696 499.60415649]
[43.19732666 514.29620361]
[43.80860138 529.32281494]
[41.80107117 544.22717285]
[37.23573685 558.55645752]
[30.25133514 571.87524414]
[21.06011391 583.77868652]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 198]
[23 197]
[24 196]
[25 195]
[27 194]
[28 193]
[29 192]
[30 191]
[52 190]
[53 189]
[54 188]
[55 187]
[56 186]
[57 185]
[59 183]
[60 182]
[61 181]
[64 179]
[66 177]
[67 176]
[68 175]
[69 174]
[71 172]
[72 155]
[73 154]
[74 153]
[75 141]
[76 140]
[77 139]
[78 138]
[79 137]
[80 136]
[81 135]
[85 131]
[86 130]
[87 129]
[88 128]
[89 127]
[90 126]
[94 125]
[95 124]
[96 123]
[97 122]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
