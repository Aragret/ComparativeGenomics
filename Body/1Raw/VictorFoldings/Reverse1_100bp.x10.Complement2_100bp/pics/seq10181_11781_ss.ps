%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[189.24961853 530.83502197]
[186.80389404 516.03576660]
[184.35816956 501.23648071]
[181.91244507 486.43722534]
[179.46670532 471.63793945]
[177.02098083 456.83868408]
[174.57525635 442.03939819]
[161.19860840 435.54299927]
[154.12866211 422.25842285]
[156.26173401 407.18185425]
[166.98733521 396.12438965]
[164.54161072 381.32510376]
[162.09588623 366.52584839]
[159.65016174 351.72656250]
[156.87454224 336.98559570]
[153.77043152 322.31030273]
[150.66632080 307.63500977]
[147.56222534 292.95968628]
[144.13114929 278.35736084]
[140.37486267 263.83532715]
[129.69692993 253.45114136]
[133.73185730 238.15310669]
[129.97555542 223.63104248]
[126.21925354 209.10899353]
[122.46295166 194.58692932]
[118.70664978 180.06486511]
[114.41252899 165.69265747]
[109.58652496 151.49020386]
[104.76052856 137.28775024]
[99.93453217 123.08528900]
[95.10853577 108.88283539]
[89.73954773 102.87063599]
[90.31812286 94.43286133]
[86.77778625 109.00907135]
[77.67948914 120.93471527]
[64.55645752 128.20010376]
[49.62014389 129.58090210]
[35.38758850 124.84442139]
[24.25722122 114.78882599]
[18.10470772 101.10867310]
[17.96685219 86.10930634]
[23.86688805 72.31838226]
[34.81055450 62.05991745]
[48.95365143 57.06263351]
[63.91281891 58.16867065]
[77.16717529 65.19164276]
[86.48386383 76.94952393]
[84.70140076 62.05580902]
[82.91893005 47.16209412]
[81.13646698 32.26837540]
[79.35400391 17.37465858]
[77.57153320 2.48094106]
[75.78907013 -12.41277599]
[74.00660706 -27.30649376]
[71.67111969 -42.12356186]
[68.78584290 -56.84345245]
[58.53854752 -68.89764404]
[63.68325043 -82.87552643]
[60.79797745 -97.59542084]
[57.91270447 -112.31530762]
[55.02743149 -127.03520203]
[52.14215851 -141.75509644]
[49.25688934 -156.47497559]
[46.37161636 -171.19487000]
[36.12431717 -183.24906921]
[41.26902008 -197.22694397]
[31.02172279 -209.28112793]
[36.16642761 -223.25901794]
[32.73536682 -237.86134338]
[28.76326942 -252.32586670]
[24.79117393 -266.79040527]
[20.81907845 -281.25491333]
[16.84698105 -295.71945190]
[12.87488556 -310.18395996]
[8.90278912 -324.64849854]
[4.93069267 -339.11300659]
[-9.99240494 -337.33569336]
[-25.01371384 -337.80252075]
[-39.79765320 -340.50305176]
[-54.01394272 -345.37692261]
[-67.34498596 -352.31530762]
[-79.49296570 -361.16314697]
[-90.18649292 -371.72277832]
[-99.18666077 -383.75833130]
[-106.29240417 -397.00091553]
[-111.34498596 -411.15469360]
[-114.23152161 -425.90344238]
[-114.88753510 -440.91766357]
[-113.29835510 -455.86196899]
[-109.49950409 -470.40249634]
[-103.57582855 -484.21435547]
[-95.65968323 -496.98904419]
[-85.92790985 -508.44110107]
[-74.59792328 -518.31475830]
[-61.92283249 -526.38940430]
[-48.18581009 -532.48461914]
[-33.69374466 -536.46429443]
[-18.77039337 -538.23950195]
[-3.74915051 -537.77050781]
[11.03440380 -535.06787109]
[25.25000000 -530.19195557]
[38.58005524 -523.25170898]
[50.72677612 -514.40216064]
[61.41879272 -503.84097290]
[70.41724396 -491.80413818]
[77.52111053 -478.56054688]
[82.57167053 -464.40606689]
[85.45610809 -449.65689087]
[86.10997772 -434.64257812]
[84.51867676 -419.69848633]
[80.71775055 -405.15853882]
[74.79211426 -391.34750366]
[66.87414551 -378.57394409]
[57.14074326 -367.12326050]
[45.80934525 -357.25122070]
[33.13310623 -349.17837524]
[19.39521599 -343.08511353]
[23.36731339 -328.62057495]
[27.33940887 -314.15606689]
[31.31150436 -299.69152832]
[35.28359985 -285.22702026]
[39.25569916 -270.76248169]
[43.22779465 -256.29797363]
[47.19989014 -241.83343506]
[56.77478027 -253.37992859]
[71.77418518 -253.24581909]
[81.14109039 -241.52998352]
[77.97057343 -226.86888123]
[64.59981537 -220.07014465]
[50.88631821 -226.14428711]
[60.92724228 -215.14297485]
[55.98891068 -200.11221313]
[66.02983856 -189.11090088]
[61.09150696 -174.08015442]
[63.97677994 -159.36026001]
[66.86205292 -144.64036560]
[69.74732208 -129.92047119]
[72.63259888 -115.20058441]
[75.51786804 -100.48069000]
[78.40314484 -85.76079559]
[88.44406891 -74.75947571]
[83.50573730 -59.72872543]
[86.39100647 -45.00883484]
[96.79817200 -55.81119537]
[111.74604797 -54.56185532]
[120.21562958 -42.18178558]
[115.96344757 -27.79710579]
[102.12406158 -22.01167107]
[88.90032196 -29.08895874]
[90.68278503 -14.19524193]
[92.46525574 0.69847512]
[94.24771881 15.59219265]
[96.03018188 30.48591042]
[97.81265259 45.37962723]
[99.59511566 60.27334595]
[101.37758636 75.16706085]
[104.59085846 89.81884766]
[109.31098938 104.05683899]
[114.13698578 118.25929260]
[118.96298981 132.46174622]
[123.78898621 146.66419983]
[128.61497498 160.86665344]
[137.48564148 148.77073669]
[152.46643066 148.01182556]
[162.51406860 159.14936829]
[160.22181702 173.97319031]
[147.27943420 181.55570984]
[133.22871399 176.30856323]
[136.98501587 190.83062744]
[140.74131775 205.35269165]
[144.49760437 219.87475586]
[148.25390625 234.39680481]
[159.20051575 245.81968689]
[154.89691162 260.07901001]
[158.65321350 274.60107422]
[162.31327820 278.32275391]
[164.01011658 282.64410400]
[163.84403992 286.71688843]
[162.23751831 289.85559082]
[165.34162903 304.53088379]
[168.44573975 319.20620728]
[171.54985046 333.88150024]
[175.04008484 337.76290894]
[176.54226685 342.15570068]
[176.19448853 346.21701050]
[174.44943237 349.28085327]
[176.89515686 364.08010864]
[179.34088135 378.87939453]
[181.78660583 393.67864990]
[195.49949646 400.69741821]
[202.36979675 414.28610229]
[199.94984436 429.13897705]
[189.37452698 439.59368896]
[191.82025146 454.39294434]
[194.26597595 469.19223022]
[196.71171570 483.99148560]
[199.15744019 498.79077148]
[201.60316467 513.59002686]
[204.04888916 528.38928223]
[218.71064758 532.63146973]
[230.07408142 542.82141113]
[235.88301086 556.93591309]
[234.98403931 572.17254639]
[227.55567932 585.50604248]
[215.07281494 594.28900146]
[200.01396179 596.77764893]
[185.36901855 592.47778320]
[174.04579163 582.24316406]
[168.29249573 568.10589600]
[169.25146484 552.87292480]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 199]
[2 198]
[3 197]
[4 196]
[5 195]
[6 194]
[7 193]
[11 189]
[12 188]
[13 187]
[14 186]
[15 182]
[16 181]
[17 180]
[18 179]
[19 175]
[20 174]
[22 172]
[23 171]
[24 170]
[25 169]
[26 168]
[27 162]
[28 161]
[29 160]
[30 159]
[31 158]
[33 157]
[47 156]
[48 155]
[49 154]
[50 153]
[51 152]
[52 151]
[53 150]
[54 149]
[55 143]
[56 142]
[58 140]
[59 139]
[60 138]
[61 137]
[62 136]
[63 135]
[64 134]
[66 132]
[68 130]
[69 124]
[70 123]
[71 122]
[72 121]
[73 120]
[74 119]
[75 118]
[76 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
