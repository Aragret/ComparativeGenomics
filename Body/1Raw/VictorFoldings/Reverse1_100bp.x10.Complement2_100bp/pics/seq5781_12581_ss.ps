%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[200.95332336 387.82876587]
[197.84921265 373.15347290]
[194.74510193 358.47817993]
[191.64099121 343.80288696]
[188.53688049 329.12756348]
[185.43276978 314.45227051]
[179.66673279 300.60476685]
[171.43792725 288.06338501]
[165.87896729 301.99530029]
[151.56556702 306.48150635]
[139.04899597 298.21496582]
[137.55603027 283.28945923]
[148.18722534 272.70748901]
[163.10423279 274.26885986]
[155.83100891 261.15017700]
[148.55778503 248.03147888]
[141.28454590 234.91278076]
[134.01132202 221.79408264]
[126.54357910 208.78514099]
[118.88298035 195.88880920]
[111.22238922 182.99247742]
[103.56179047 170.09616089]
[104.69895935 185.05299377]
[102.93644714 199.94908142]
[98.34016418 214.22752380]
[91.08193207 227.35452271]
[81.43311310 238.83930969]
[69.75443268 248.25251770]
[56.48250580 255.24221802]
[42.11351395 259.54711914]
[27.18465042 261.00622559]
[12.25404453 259.56506348]
[-2.12011313 255.27745056]
[-15.40043449 248.30371094]
[-27.09042549 238.90455627]
[-36.75304413 227.43138123]
[-44.02705002 214.31311035]
[-48.64049911 200.04019165]
[-50.42091370 185.14624023]
[-49.30172729 170.18804932]
[-45.32478714 155.72485352]
[-38.63877106 142.29737854]
[-29.49364281 130.40760803]
[-18.23129845 120.50005341]
[-5.27278900 112.94511414]
[8.89742279 108.02524567]
[23.74957275 105.92437744]
[38.72840118 106.72104645]
[53.27391434 110.38547516]
[66.84231567 116.78066254]
[78.92634583 125.66751862]
[89.07423401 136.71380615]
[96.90392303 149.50105286]
[95.56568909 134.56086731]
[86.72377014 122.57463837]
[93.19902802 108.13921356]
[91.30573273 93.25917816]
[88.86000824 78.45990753]
[86.41427612 63.66063309]
[76.53041840 51.30669022]
[82.08901978 37.48817825]
[77.60226440 29.53161812]
[79.71875763 22.45050049]
[77.49363708 7.61645603]
[75.26852417 -7.21758795]
[70.90072632 -15.24006653]
[73.12241364 -22.28888893]
[71.11840057 -37.15441895]
[63.45618057 -24.25905418]
[50.08648300 -17.45823288]
[35.15205383 -18.85925865]
[23.28049278 -28.02800941]
[18.15032768 -42.12344742]
[21.35119820 -56.77795029]
[31.89127922 -67.45066071]
[46.50461197 -70.83451843]
[60.66309738 -65.88100433]
[69.97966766 -54.12477493]
[69.97966766 -69.12477875]
[69.97966766 -84.12477875]
[69.97966766 -99.12477875]
[69.97966766 -114.12477875]
[57.68899918 -105.52597046]
[43.26056671 -109.62722778]
[37.33047104 -123.40525055]
[44.27016068 -136.70339966]
[58.96395493 -139.71876526]
[70.57942963 -130.23002625]
[71.69507599 -145.18849182]
[72.81072235 -160.14694214]
[64.43244171 -176.54467773]
[74.87128448 -190.65132141]
[75.76409912 -205.62472534]
[76.65691376 -220.59814453]
[77.54972839 -235.57154846]
[78.44254303 -250.54495239]
[79.33536530 -265.51834106]
[80.22817993 -280.49176025]
[81.12099457 -295.46517944]
[67.20079041 -301.46548462]
[56.17443085 -311.86715698]
[49.37340164 -325.41418457]
[47.61896896 -340.47067261]
[51.12297821 -355.21847534]
[59.46231079 -367.87673950]
[71.62994385 -376.91690063]
[86.15658569 -381.24731445]
[101.28807068 -380.34506226]
[115.19719696 -374.31912231]
[126.20436859 -363.89712524]
[132.98040771 -350.33758545]
[134.70709229 -335.27789307]
[131.17591858 -320.53656006]
[122.81327057 -307.89370728]
[110.62899780 -298.87597656]
[96.09439850 -294.57235718]
[95.20158386 -279.59893799]
[94.30876923 -264.62554932]
[93.41595459 -249.65213013]
[92.52313995 -234.67872620]
[91.63031769 -219.70532227]
[90.73750305 -204.73191833]
[89.84468842 -189.75851440]
[97.63673401 -180.50592041]
[97.01545715 -168.02401733]
[87.76918030 -159.03129578]
[86.65352631 -144.07284546]
[85.53787994 -129.11437988]
[84.97966766 -114.12477875]
[84.97966766 -99.12477875]
[84.97966766 -84.12477875]
[84.97966766 -69.12477875]
[84.97966766 -54.12477493]
[85.98393250 -39.15843201]
[87.98794556 -24.29290199]
[90.10256958 -9.44270515]
[92.32768250 5.39133883]
[94.55280304 20.22538185]
[96.88829041 35.04244995]
[106.59721375 46.33785248]
[101.21354675 61.21490479]
[103.65927887 76.01417542]
[106.10500336 90.81344604]
[116.82917786 80.32573700]
[131.73323059 82.01957703]
[139.83045959 94.64633179]
[135.15187073 108.89802551]
[121.14636993 114.26884460]
[108.13920593 106.80097961]
[117.07684326 119.85582733]
[110.50587463 133.22264099]
[111.84410858 148.16282654]
[116.45811462 162.43556213]
[124.11871338 175.33187866]
[131.77931213 188.22821045]
[139.43991089 201.12454224]
[145.00976562 204.68658447]
[147.56155396 209.76451111]
[147.13002014 214.52085876]
[154.40324402 227.63955688]
[161.67646790 240.75823975]
[168.94970703 253.87693787]
[176.22293091 266.99563599]
[183.97932434 279.83456421]
[192.20812988 292.37597656]
[190.37910461 277.48791504]
[191.98554993 262.57415771]
[196.94317627 248.41712952]
[204.99192810 235.75941467]
[215.70957947 225.26504517]
[228.53390503 217.48451233]
[242.79217529 212.82598877]
[257.73641968 211.53382874]
[272.58267212 213.67584229]
[286.55218506 219.13963318]
[298.91207886 227.63861084]
[309.01403809 238.72691345]
[316.32809448 251.82289124]
[320.47058105 266.23953247]
[321.22421265 281.22061157]
[318.54940796 295.98019409]
[312.58648682 309.74404907]
[303.64831543 321.79016113]
[292.20370483 331.48660278]
[278.85302734 338.32470703]
[264.29669189 341.94580078]
[249.29820251 342.15988159]
[234.64440918 338.95574951]
[221.10401917 332.50149536]
[209.38731384 323.13565063]
[200.10806274 311.34814453]
[203.21217346 326.02346802]
[206.31628418 340.69876099]
[209.42039490 355.37405396]
[212.52450562 370.04937744]
[215.62861633 384.72467041]
[230.61439514 387.13107300]
[243.71696472 394.79183960]
[253.16429138 406.67089844]
[257.67871094 421.16174316]
[256.64968872 436.30459595]
[250.21636963 450.05148315]
[239.24884033 460.54327393]
[225.23034668 466.36102295]
[210.05677795 466.71795654]
[195.78024292 461.56576538]
[184.33152771 451.60128784]
[177.25895691 438.17208862]
[175.51905823 423.09439087]
[179.34712219 408.40728760]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 196]
[2 195]
[3 194]
[4 193]
[5 192]
[6 191]
[7 165]
[8 164]
[14 163]
[15 162]
[16 161]
[17 160]
[18 159]
[19 156]
[20 155]
[21 154]
[22 153]
[53 152]
[54 151]
[56 149]
[57 143]
[58 142]
[59 141]
[61 139]
[63 138]
[64 137]
[65 136]
[67 135]
[68 134]
[78 133]
[79 132]
[80 131]
[81 130]
[82 129]
[88 128]
[89 127]
[90 126]
[92 123]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
