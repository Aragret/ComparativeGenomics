%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCACCUCAUCCCGACUCUGACCCCACCCCGGAAGAUACCGACUCCCCUCAGUCCCCACCUCUGGAUUAACCCGACUAAACGGACGACGACGAUCCUCCUCxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[24.38531494 367.45675659]
[28.88769722 381.79364014]
[31.25453949 396.63330078]
[31.43539429 411.65945435]
[29.42640305 426.55178833]
[25.27039146 440.99288940]
[19.05594254 454.67495728]
[10.91551685 467.30630493]
[1.02263129 478.61776733]
[-10.41184902 488.36816406]
[-23.14419556 496.34973145]
[-36.90301895 502.39227295]
[-51.39505005 506.36706543]
[-66.31139374 508.18933105]
[-81.33409119 507.82028198]
[-96.14295197 505.26773071]
[-110.42231750 500.58609009]
[-123.86782074 493.87518311]
[-136.19287109 485.27801514]
[-147.13475037 474.97787476]
[-156.46025085 463.19430542]
[-163.97058105 450.17843628]
[-169.50567627 436.20773315]
[-172.94752502 421.57995605]
[-174.22279358 406.60693359]
[-173.30429077 391.60778809]
[-170.21159363 376.90225220]
[-165.01062012 362.80374146]
[-157.81224060 349.61279297]
[-148.76986694 337.61056519]
[-138.07626343 327.05288696]
[-125.95934296 318.16479492]
[-112.67739105 311.13574219]
[-98.51351166 306.11553955]
[-83.76960754 303.21121216]
[-68.75994110 302.48468018]
[-53.80445480 303.95138550]
[-39.22192001 307.58007812]
[-25.32316017 313.29342651]
[-17.66256332 300.39709473]
[-10.00196552 287.50076294]
[-2.34136844 274.60443115]
[5.31922913 261.70812988]
[12.88360786 248.75511169]
[20.35134888 235.74617004]
[27.81908989 222.73721313]
[35.18978119 209.67303467]
[42.46300888 196.55433655]
[49.73624039 183.43563843]
[57.00946808 170.31694031]
[64.28269958 157.19825745]
[71.55592346 144.07955933]
[78.23612213 130.64918518]
[84.30995941 116.93391418]
[90.38378906 103.21865082]
[90.50880432 95.15906525]
[96.65151215 89.34545135]
[102.92887115 75.72213745]
[109.20623016 62.09881973]
[105.48002625 49.75061035]
[110.98892212 38.53295135]
[122.29010773 34.21904373]
[128.76960754 20.69069672]
[135.24909973 7.16235113]
[133.40826416 -11.15957165]
[148.26269531 -20.50368500]
[154.54006958 -34.12700272]
[160.81742859 -47.75031662]
[148.33724976 -39.42893982]
[133.56536865 -36.82285690]
[118.99111938 -40.37123108]
[107.07049561 -49.47610855]
[99.81233978 -62.60314941]
[98.43978119 -77.54022217]
[103.18412018 -91.77016449]
[113.24585724 -102.89498138]
[126.92939758 -109.03994751]
[141.92883301 -109.16952515]
[155.71650696 -103.26187897]
[165.96893311 -92.31256104]
[170.95841980 -78.16670227]
[169.84365845 -63.20655823]
[178.62426758 -75.36801147]
[187.40487671 -87.52947235]
[196.18547058 -99.69092560]
[204.96607971 -111.85237885]
[193.50660706 -121.54275513]
[182.82255554 -132.08190918]
[172.97662354 -143.40800476]
[164.02659607 -155.45455933]
[156.02497864 -168.15089417]
[149.01875305 -181.42250061]
[143.04901123 -195.19149780]
[138.15081787 -209.37705994]
[134.35287476 -223.89596558]
[131.67750549 -238.66299438]
[130.14039612 -253.59149170]
[129.75057983 -268.59384155]
[130.51031494 -283.58203125]
[132.41517639 -298.46807861]
[135.45396423 -313.16461182]
[139.60885620 -327.58541870]
[144.85545349 -341.64587402]
[151.16299438 -355.26342773]
[158.49443054 -368.35818481]
[166.80676270 -380.85327148]
[176.05120850 -392.67541504]
[186.17350769 -403.75521851]
[197.11425781 -414.02764893]
[208.80924988 -423.43243408]
[221.18986511 -431.91433716]
[234.18344116 -439.42364502]
[247.71372986 -445.91629028]
[261.70132446 -451.35409546]
[276.06414795 -455.70523071]
[290.71789551 -458.94412231]
[305.57656860 -461.05175781]
[320.55300903 -462.01580811]
[335.55929565 -461.83056641]
[350.50735474 -460.49713135]
[365.30947876 -458.02337646]
[379.87881470 -454.42373657]
[394.12985229 -449.71942139]
[407.97894287 -443.93795776]
[421.34484863 -437.11334229]
[434.14910889 -429.28558350]
[446.31658936 -420.50064087]
[457.77587891 -410.81005859]
[468.45971680 -400.27069092]
[478.30545044 -388.94442749]
[487.25524902 -376.89767456]
[495.25662231 -364.20120239]
[502.26260376 -350.92944336]
[508.23205566 -337.16036987]
[513.13000488 -322.97470093]
[516.92767334 -308.45571899]
[519.60278320 -293.68862915]
[521.13958740 -278.76013184]
[521.52911377 -263.75775146]
[520.76910400 -248.76957703]
[518.86395264 -233.88357544]
[515.82489014 -219.18708801]
[511.66973877 -204.76635742]
[506.42285156 -190.70602417]
[500.11505127 -177.08859253]
[492.78335571 -163.99397278]
[484.47079468 -151.49900818]
[475.22613525 -139.67704773]
[465.10363770 -128.59744263]
[454.16268921 -118.32522583]
[442.46749878 -108.92067719]
[430.08673096 -100.43898010]
[417.09301758 -92.92991638]
[403.56259155 -86.43756104]
[389.57489014 -80.99999237]
[375.21200562 -76.64913940]
[360.55819702 -73.41053009]
[345.69946289 -71.30316162]
[330.72302246 -70.33941650]
[315.71673584 -70.52494049]
[300.76870728 -71.85864258]
[285.96661377 -74.33269501]
[271.39733887 -77.93259430]
[257.14639282 -82.63719940]
[243.29740906 -88.41889954]
[229.93164062 -95.24378204]
[217.12753296 -103.07177734]
[208.34692383 -90.91032410]
[199.56632996 -78.74886322]
[190.78572083 -66.58740997]
[182.00511169 -54.42595673]
[174.44073486 -41.47295761]
[168.16337585 -27.84963989]
[161.88601685 -14.22632408]
[165.77938843 -2.77345252]
[160.66110229 8.62773132]
[148.77743530 13.64184666]
[142.29794312 27.17019272]
[135.81845093 40.69853973]
[138.10798645 58.09753036]
[122.82954407 68.37618256]
[116.55218506 81.99949646]
[110.27482605 95.62281036]
[104.09906006 109.29248047]
[98.02522278 123.00775146]
[91.95138550 136.72302246]
[106.29802704 132.34420776]
[119.60314941 139.27050781]
[124.24497986 153.53422546]
[117.56446838 166.96444702]
[103.38850403 171.86772156]
[89.83773804 165.43525696]
[84.67462158 151.35278320]
[77.40139008 164.47148132]
[70.12815857 177.59017944]
[62.85493469 190.70886230]
[55.58170319 203.82756042]
[48.30847549 216.94625854]
[46.88430786 225.96897888]
[40.82804108 230.20495605]
[33.36030197 243.21391296]
[25.89256096 256.22286987]
[24.33421516 265.22338867]
[18.21555519 269.36871338]
[10.55495834 282.26504517]
[2.89436102 295.16137695]
[-4.76623631 308.05770874]
[-12.42683411 320.95401001]
[-0.76098955 330.42639160]
[9.40127850 341.49645996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 208]
[40 207]
[41 206]
[42 205]
[43 204]
[44 202]
[45 201]
[46 200]
[47 198]
[48 197]
[49 196]
[50 195]
[51 194]
[52 193]
[53 186]
[54 185]
[55 184]
[57 183]
[58 182]
[59 181]
[62 179]
[63 178]
[64 177]
[66 174]
[67 173]
[68 172]
[82 171]
[83 170]
[84 169]
[85 168]
[86 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
