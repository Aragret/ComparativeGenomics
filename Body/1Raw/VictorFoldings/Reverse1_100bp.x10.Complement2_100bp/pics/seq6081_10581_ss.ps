%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[231.35726929 484.42459106]
[225.48829651 470.62042236]
[213.38810730 461.93511963]
[215.10906982 446.20779419]
[209.24011230 432.40362549]
[203.37113953 418.59942627]
[195.42471313 431.32162476]
[180.54185486 433.19265747]
[169.69367981 422.83328247]
[170.87704468 407.88003540]
[183.21961975 399.35589600]
[197.62168884 403.54345703]
[192.79568481 389.34100342]
[187.96968079 375.13854980]
[183.14369202 360.93609619]
[178.31768799 346.73361206]
[167.23393250 344.02874756]
[158.74436951 336.22854614]
[155.03636169 325.18569946]
[157.14076233 313.60671997]
[164.64859009 304.38885498]
[160.24758911 290.04901123]
[155.84658813 275.70916748]
[151.44558716 261.36929321]
[146.30363464 247.27816772]
[140.43467712 233.47398376]
[134.56570435 219.66981506]
[128.69674683 205.86563110]
[120.75031281 218.58782959]
[105.86746216 220.45886230]
[95.01927948 210.09947205]
[96.20264435 195.14622498]
[108.54521942 186.62208557]
[122.94728851 190.80964661]
[118.12128448 176.60719299]
[113.29528809 162.40473938]
[101.87459564 152.84352112]
[104.76052856 137.28775024]
[99.93453217 123.08528900]
[95.10853577 108.88283539]
[89.73954773 102.87063599]
[90.31812286 94.43286133]
[85.70411682 80.16012573]
[82.65048218 94.84601593]
[74.55916595 107.47656250]
[62.49473190 116.38999939]
[48.04445267 120.41361237]
[33.10951614 119.01802063]
[19.65486908 112.38684845]
[9.45069981 101.39253235]
[3.83954501 87.48157501]
[3.55964684 72.48418427]
[8.64783096 58.37353516]
[18.43465996 47.00612640]
[31.63250732 39.87753296]
[46.50497055 37.92564774]
[61.09531784 41.40727234]
[73.48394775 49.86434174]
[82.04188538 62.18634415]
[80.70365143 47.24616241]
[79.36541748 32.30597687]
[75.48287201 24.03774452]
[78.12017822 17.13365555]
[77.00452423 2.17520308]
[75.88887787 -12.78324986]
[74.77323151 -27.74170303]
[63.15615463 -18.25257683]
[48.46264648 -21.26933479]
[41.52421570 -34.56813812]
[47.45561218 -48.34560394]
[61.88443375 -52.44549561]
[74.17346954 -43.84696198]
[74.17346954 -58.84696198]
[74.17346954 -73.84696198]
[74.17346954 -88.84696198]
[74.17346954 -103.84696198]
[74.06180573 -118.84654999]
[73.83847809 -133.84487915]
[65.89656830 -147.52833557]
[73.44352722 -160.36938477]
[73.22019196 -175.36772156]
[64.52556610 -184.89485168]
[64.64832306 -197.39160156]
[72.97727966 -206.16400146]
[72.97727966 -221.16400146]
[72.97727966 -236.16400146]
[70.67370605 -239.84469604]
[69.75373840 -243.68112183]
[70.09642029 -247.21920776]
[71.44577026 -250.09075928]
[73.45047760 -252.05017090]
[74.34329987 -267.02355957]
[75.23611450 -281.99697876]
[76.12892914 -296.97039795]
[61.66551971 -301.18435669]
[48.50268936 -308.51153564]
[37.30067825 -318.58441162]
[28.62137413 -330.89770508]
[22.90012932 -344.83383179]
[20.42391777 -359.69369507]
[21.31694603 -374.73199463]
[25.53442001 -389.19436646]
[32.86479187 -402.35543823]
[42.94037628 -413.55499268]
[55.25577927 -422.23132324]
[69.19327545 -427.94918823]
[84.05375671 -430.42181396]
[99.09183502 -429.52514648]
[113.55319977 -425.30416870]
[126.71247864 -417.97058105]
[137.90960693 -407.89230347]
[146.58294678 -395.57479858]
[152.29742432 -381.63592529]
[154.76643372 -366.77484131]
[153.86611938 -351.73696899]
[149.64164734 -337.27664185]
[142.30490112 -324.11914062]
[132.22389221 -312.92443848]
[119.90427399 -304.25408936]
[105.96401215 -298.54296875]
[91.10233307 -296.07757568]
[90.20951843 -281.10415649]
[89.31670380 -266.13076782]
[88.42388916 -251.15734863]
[87.97727966 -236.16400146]
[87.97727966 -221.16400146]
[87.97727966 -206.16400146]
[97.55797577 -191.46102905]
[88.21853638 -175.59104919]
[88.44186401 -160.59271240]
[96.36779022 -147.98205566]
[88.83681488 -134.06820679]
[89.06014252 -119.06987762]
[92.30287933 -112.42860413]
[89.17346954 -103.84696198]
[89.17346954 -88.84696198]
[89.17346954 -73.84696198]
[89.17346954 -58.84696198]
[89.17346954 -43.84696198]
[89.73168182 -28.85735321]
[90.84733582 -13.89889908]
[91.96298218 1.05955446]
[93.07862854 16.01800728]
[94.30560303 30.96774101]
[95.64383698 45.90792465]
[96.98207092 60.84811020]
[99.97684479 75.54611206]
[104.59085846 89.81884766]
[109.31098938 104.05683899]
[114.13698578 118.25929260]
[118.96298981 132.46174622]
[130.72886658 143.03881836]
[127.49774170 157.57873535]
[132.32374573 171.78118896]
[137.14973450 185.98365784]
[142.50093079 199.99667358]
[148.36988831 213.80085754]
[154.23884583 227.60502625]
[160.10780334 241.40921021]
[165.63735962 227.46560669]
[178.77578735 220.22808838]
[193.51640320 223.00556946]
[203.11997986 234.52821350]
[203.19589233 249.52803040]
[193.70944214 261.14727783]
[178.99769592 264.07382202]
[165.78544617 256.96832275]
[170.18643188 271.30816650]
[174.58743286 285.64801025]
[178.98843384 299.98785400]
[196.05192566 308.21899414]
[201.58538818 326.00363159]
[192.52014160 341.90762329]
[197.34614563 356.11007690]
[202.17213440 370.31253052]
[206.99813843 384.51498413]
[211.82414246 398.71743774]
[217.17532349 412.73046875]
[223.04428101 426.53463745]
[228.91323853 440.33883667]
[241.43322754 450.01150513]
[239.29248047 464.75146484]
[245.16143799 478.55563354]
[259.93844604 475.66876221]
[274.99273682 475.91769409]
[289.66619873 479.29153442]
[303.31741333 485.64276123]
[315.34957886 494.69378662]
[325.23669434 506.04888916]
[332.54653931 519.21173096]
[336.95956421 533.60681152]
[338.28283691 548.60491943]
[336.45855713 563.55035400]
[331.56643677 577.78973389]
[323.82031250 590.70062256]
[313.55886841 601.71862793]
[301.23065186 610.36206055]
[287.37463379 616.25311279]
[272.59649658 619.13415527]
[257.54229736 618.87927246]
[242.87014771 615.49969482]
[229.22145081 609.14306641]
[217.19285583 600.08734131]
[207.31021118 588.72833252]
[200.00553894 575.56262207]
[195.59817505 561.16577148]
[194.28077698 546.16717529]
[196.11094666 531.22247314]
[201.00868225 516.98498535]
[208.75987244 504.07714844]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 183]
[2 182]
[4 180]
[5 179]
[6 178]
[12 177]
[13 176]
[14 175]
[15 174]
[16 173]
[21 170]
[22 169]
[23 168]
[24 167]
[25 159]
[26 158]
[27 157]
[28 156]
[34 155]
[35 154]
[36 153]
[38 151]
[39 150]
[40 149]
[42 148]
[43 147]
[59 146]
[60 145]
[61 144]
[63 143]
[64 142]
[65 141]
[66 140]
[72 139]
[73 138]
[74 137]
[75 136]
[76 135]
[77 133]
[78 132]
[80 130]
[81 129]
[84 127]
[85 126]
[86 125]
[91 124]
[92 123]
[93 122]
[94 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
