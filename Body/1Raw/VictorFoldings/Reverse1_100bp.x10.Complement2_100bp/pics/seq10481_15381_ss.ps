%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[101.40519714 406.63955688]
[96.27867126 392.53057861]
[92.51652527 377.99816895]
[90.15281677 363.17391968]
[89.20896149 348.19213867]
[89.69351196 333.18847656]
[91.60206604 318.29879761]
[94.91735077 303.65798950]
[99.60933685 289.39862061]
[105.63553619 275.64981079]
[112.94136047 262.53607178]
[121.46066284 250.17622375]
[131.11628723 238.68214417]
[141.82077026 228.15794373]
[153.47718811 218.69894409]
[165.97996521 210.39080811]
[158.90286255 197.16528320]
[151.82575989 183.93974304]
[144.74865723 170.71421814]
[136.51985168 158.17282104]
[127.20496368 146.41557312]
[117.89008331 134.65832520]
[108.57520294 122.90106964]
[99.26031494 111.14381409]
[89.85816193 99.45623779]
[80.36927032 87.83897400]
[70.88037109 76.22171021]
[56.15805435 70.42826080]
[54.09928894 55.67662430]
[44.61038971 44.05936050]
[35.12149048 32.44209671]
[31.00902748 31.04867744]
[27.86962318 28.65939522]
[25.89686394 25.70243454]
[25.12538719 22.62486458]
[25.43849564 19.83916855]
[16.65789223 7.67771196]
[7.87728930 -4.48374367]
[-0.90331411 -16.64519882]
[-9.68391705 -28.80665588]
[-22.43337250 -20.89235687]
[-35.70384598 -13.88669682]
[-49.43068314 -7.82380867]
[-63.54701233 -2.73323035]
[-77.98405457 1.36023808]
[-92.67147827 4.43665314]
[-107.53772736 6.48102617]
[-122.51036835 7.48339796]
[-137.51646423 7.43888426]
[-152.48289490 6.34770250]
[-167.33674622 4.21516895]
[-182.00566101 1.05167246]
[-196.41816711 -3.12737393]
[-210.50404358 -8.30161095]
[-224.19467163 -14.44582844]
[-237.42335510 -21.53009415]
[-250.12562561 -29.51989174]
[-262.23962402 -38.37629700]
[-273.70629883 -48.05616379]
[-284.46981812 -58.51232529]
[-294.47775269 -69.69384766]
[-303.68127441 -81.54624939]
[-312.03561401 -94.01179504]
[-319.50006104 -107.02973938]
[-326.03820801 -120.53667450]
[-331.61825562 -134.46678162]
[-336.21298218 -148.75219727]
[-339.79998779 -163.32333374]
[-342.36184692 -178.10920715]
[-343.88604736 -193.03775024]
[-344.36514282 -208.03625488]
[-343.79684448 -223.03164673]
[-342.18389893 -237.95086670]
[-339.53417969 -252.72122192]
[-335.86056519 -267.27078247]
[-331.18096924 -281.52862549]
[-325.51818848 -295.42529297]
[-318.89981079 -308.89309692]
[-311.35809326 -321.86642456]
[-302.92977905 -334.28207397]
[-293.65588379 -346.07952881]
[-283.58166504 -357.20135498]
[-272.75616455 -367.59332275]
[-261.23211670 -377.20480347]
[-249.06565857 -385.98901367]
[-236.31608582 -393.90313721]
[-223.04551697 -400.90859985]
[-209.31858826 -406.97128296]
[-195.20217896 -412.06167603]
[-180.76509094 -416.15493774]
[-166.07762146 -419.23114014]
[-151.21133423 -421.27529907]
[-136.23869324 -422.27746582]
[-121.23259735 -422.23272705]
[-106.26618195 -421.14132690]
[-91.41235352 -419.00857544]
[-76.74349213 -415.84487915]
[-62.33104324 -411.66561890]
[-48.24523926 -406.49118042]
[-34.55469894 -400.34677124]
[-21.32612038 -393.26232910]
[-8.62395859 -385.27233887]
[3.48990726 -376.41577148]
[14.95645714 -366.73571777]
[25.71982765 -356.27941895]
[35.72757721 -345.09774780]
[44.93095398 -333.24520874]
[53.28511429 -320.77954102]
[60.74936295 -307.76150513]
[67.28733063 -294.25445557]
[72.86716461 -280.32427979]
[77.46167755 -266.03878784]
[81.04849243 -251.46760559]
[83.61013031 -236.68170166]
[85.13410950 -221.75314331]
[85.61300659 -206.75462341]
[85.04449463 -191.75924683]
[83.43132782 -176.84004211]
[80.78138733 -162.06971741]
[77.10755920 -147.52021790]
[72.42776489 -133.26245117]
[66.76478577 -119.36585236]
[60.14622498 -105.89813232]
[52.60432053 -92.92491913]
[44.17581558 -80.50939941]
[34.90177917 -68.71207428]
[24.82738876 -57.59040833]
[14.00172806 -47.19859314]
[2.47753835 -37.58725739]
[11.25814152 -25.42580223]
[20.03874397 -13.26434708]
[28.81934738 -1.10289109]
[37.59995270 11.05856514]
[46.73875427 22.95319748]
[56.22765350 34.57046127]
[65.71655273 46.18772507]
[79.76015472 51.15023041]
[82.49763489 66.73281097]
[91.98653412 78.35007477]
[101.47542572 89.96733856]
[108.60821533 93.72178650]
[111.01757050 101.82893372]
[120.33245087 113.58618927]
[129.64733887 125.34343719]
[138.96221924 137.10069275]
[148.27709961 148.85794067]
[146.82040405 133.92883301]
[151.90409851 119.81657410]
[162.54660034 109.24599457]
[176.69300842 104.25812531]
[191.61189270 105.81604004]
[204.42262268 113.61892700]
[212.65167236 126.16017151]
[214.71011353 141.01826477]
[210.20051575 155.32432556]
[199.99360657 166.31608582]
[186.06018066 171.87121582]
[171.09054565 170.91709900]
[157.97418213 163.63711548]
[165.05128479 176.86264038]
[172.12838745 190.08816528]
[179.20550537 203.31370544]
[193.05426025 197.52088928]
[207.39094543 193.07072449]
[222.08573914 190.00352478]
[237.00555420 188.34704590]
[252.01527405 188.11631775]
[266.97894287 189.31340027]
[281.76107788 191.92747498]
[296.22778320 195.93486023]
[310.24804688 201.29925537]
[323.69491577 207.97210693]
[336.44659424 215.89294434]
[348.38757324 224.99005127]
[359.40975952 235.18104553]
[369.41329956 246.37364197]
[378.30758667 258.46643066]
[386.01211548 271.34997559]
[392.45709229 284.90750122]
[397.58413696 299.01632690]
[401.34680176 313.54858398]
[403.71105957 328.37274170]
[404.65545654 343.35449219]
[404.17144775 358.35815430]
[402.26342773 373.24789429]
[398.94869995 387.88885498]
[394.25723267 402.14840698]
[388.23153687 415.89743042]
[380.92617798 429.01141357]
[372.40731812 441.37158203]
[362.75213623 452.86599731]
[352.04800415 463.39059448]
[340.39193726 472.85000610]
[327.88946533 481.15863037]
[314.65380859 488.24114990]
[300.80484009 494.03344727]
[286.46798706 498.48309326]
[271.77307129 501.54977417]
[256.85321045 503.20568848]
[241.84349060 503.43588257]
[226.87985229 502.23825073]
[212.09780884 499.62362671]
[197.63125610 495.61572266]
[183.61117554 490.25079346]
[170.16456604 483.57748413]
[157.41317749 475.65615845]
[145.47251892 466.55862427]
[134.45071411 456.36721802]
[124.44758606 445.17428589]
[115.55371857 433.08114624]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 162]
[17 161]
[18 160]
[19 159]
[20 146]
[21 145]
[22 144]
[23 143]
[24 142]
[25 140]
[26 139]
[27 138]
[29 136]
[30 135]
[31 134]
[36 133]
[37 132]
[38 131]
[39 130]
[40 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
