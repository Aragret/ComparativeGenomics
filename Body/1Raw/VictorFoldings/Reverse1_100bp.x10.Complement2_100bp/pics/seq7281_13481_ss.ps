%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[152.92585754 683.37219238]
[138.76004028 688.36547852]
[124.08008575 691.54388428]
[109.11752319 692.85723877]
[94.10833740 692.28491211]
[79.28924561 689.83593750]
[64.89395142 685.54888916]
[51.14950943 679.49133301]
[38.27267838 671.75891113]
[26.46654892 662.47351074]
[15.91731548 651.78161621]
[6.79135895 639.85180664]
[-0.76739281 626.87225342]
[-6.63972712 613.04772949]
[-10.73302841 598.59613037]
[-12.98274040 583.74548340]
[-13.35338116 568.72991943]
[-11.83910465 553.78637695]
[-8.46379375 539.15045166]
[-3.28068256 525.05297852]
[3.62848473 511.71630859]
[12.15474033 499.35079956]
[22.16361237 488.15142822]
[33.49724579 478.29486084]
[45.97689819 469.93652344]
[59.40573883 463.20828247]
[73.57198334 458.21621704]
[88.25220490 455.03903198]
[103.21487427 453.72689819]
[118.22401428 454.30047607]
[120.66973877 439.50122070]
[123.11547089 424.70193481]
[125.56119537 409.90267944]
[128.00692749 395.10339355]
[130.45265198 380.30413818]
[132.89837646 365.50485229]
[132.89837646 350.50485229]
[130.45265198 335.70559692]
[120.74372864 324.41018677]
[126.12738800 309.53314209]
[123.68166351 294.73385620]
[111.83187866 281.78976440]
[118.45876312 264.60937500]
[115.79296875 249.84815979]
[113.12717438 235.08694458]
[110.46138000 220.32572937]
[107.79558563 205.56451416]
[104.45252991 202.15377808]
[103.21658325 196.60676575]
[105.27703094 190.32455444]
[103.05191040 175.49050903]
[100.82679749 160.65647888]
[91.28868103 153.21664429]
[89.31349182 140.87637329]
[96.49866486 130.16488647]
[94.49465179 115.29935455]
[83.90264893 102.29221344]
[90.44290924 86.84548950]
[88.21778870 72.01145172]
[85.99267578 57.17740631]
[71.09137726 54.64586258]
[57.72024155 47.64191437]
[47.18291092 36.86262512]
[40.50234222 23.37244034]
[38.32150650 8.49808216]
[40.84152603 -6.30193233]
[47.80320358 -19.58030510]
[58.51361465 -30.04248428]
[71.91506195 -36.67287827]
[69.68994904 -51.50692368]
[67.46482849 -66.34096527]
[61.59524155 -52.53705597]
[50.67423630 -42.25446701]
[36.54220200 -37.22598648]
[21.58063126 -38.29901123]
[8.31081104 -45.29271317]
[-1.03105998 -57.02853012]
[-4.87071323 -71.52877808]
[-2.56109881 -86.34989929]
[5.50857210 -98.99427795]
[17.97841835 -107.33112335]
[32.74705124 -109.95552063]
[47.32569885 -106.42521667]
[59.25760269 -97.33512115]
[66.53250885 -84.21550751]
[67.20230103 -99.20054626]
[64.49945831 -105.23429871]
[65.15161896 -110.87980652]
[68.12169647 -114.61981201]
[69.23735046 -129.57826233]
[70.35299683 -144.53672791]
[71.46864319 -159.49517822]
[64.77918243 -173.83259583]
[73.44166565 -185.94914246]
[74.55731201 -200.90759277]
[72.07484436 -209.69822693]
[75.80255890 -216.07991028]
[77.14079285 -231.02009583]
[78.47902679 -245.96028137]
[79.81726074 -260.90048218]
[66.08187866 -267.31256104]
[55.37010574 -278.03796387]
[48.97543716 -291.78146362]
[47.67006683 -306.88351440]
[51.61162186 -321.52044678]
[60.32413864 -333.92480469]
[72.75553894 -342.59866333]
[87.40467072 -346.49465942]
[102.50258636 -345.14230347]
[116.22612762 -338.70489502]
[126.91812134 -327.95977783]
[133.28744507 -314.20452881]
[134.56498718 -299.10009766]
[130.59646606 -284.47042847]
[121.86109924 -272.08215332]
[109.41373444 -263.43121338]
[94.75744629 -259.56222534]
[93.41921234 -244.62205505]
[92.08097839 -229.68186951]
[90.74274445 -214.74168396]
[89.51576996 -199.79194641]
[88.40011597 -184.83349609]
[95.16938019 -171.56599426]
[86.42710114 -158.37953186]
[85.31144714 -143.42106628]
[84.19580078 -128.46261597]
[83.08015442 -113.50416565]
[82.18733978 -98.53076172]
[81.51754761 -83.54572296]
[82.29887390 -68.56608582]
[84.52398682 -53.73204041]
[86.74910736 -38.89799881]
[101.50611115 -36.49139023]
[114.81475830 -29.63208580]
[125.36592865 -18.98065376]
[132.11735535 -5.57136297]
[134.39663696 9.28822899]
[131.96809387 24.14478493]
[125.05715942 37.54132843]
[114.32945251 48.16011810]
[100.82672119 54.95228958]
[103.05183411 69.78633118]
[105.27695465 84.62037659]
[114.20864868 92.09473419]
[115.85051727 103.62493134]
[109.36018372 113.29534149]
[111.36419678 128.16087341]
[122.95447540 142.46984863]
[115.66083527 158.43135071]
[117.88595581 173.26539612]
[120.11107635 188.09944153]
[122.55680084 202.89871216]
[125.22259521 217.65992737]
[127.88838959 232.42114258]
[130.55418396 247.18235779]
[133.21998596 261.94357300]
[143.35165405 269.92556763]
[145.26811218 282.27511597]
[138.48092651 292.28814697]
[140.92666626 307.08740234]
[150.81051636 319.44134521]
[145.25192261 333.25985718]
[147.69764709 348.05914307]
[152.14091492 333.73233032]
[160.09580994 321.01544189]
[171.03474426 310.75192261]
[184.23214722 303.62249756]
[198.81271362 300.10009766]
[213.80932617 300.41827393]
[228.22735596 304.55599976]
[241.11047363 312.23876953]
[251.60421753 322.95706177]
[259.01254272 335.99993896]
[262.84411621 350.50231934]
[262.84475708 365.50231934]
[259.01449585 380.00503540]
[251.60729980 393.04855347]
[241.11451721 403.76776123]
[228.23207092 411.45169067]
[213.81440735 415.59066772]
[198.81781006 415.91018677]
[184.23693848 412.38906860]
[171.03890991 405.26080322]
[160.09907532 394.99826050]
[152.14305115 382.28207397]
[147.69764709 367.95059204]
[145.25192261 382.74984741]
[142.80619812 397.54913330]
[140.36045837 412.34838867]
[137.91473389 427.14767456]
[135.46900940 441.94692993]
[133.02328491 456.74621582]
[147.41893005 461.03207397]
[161.16387939 467.08843994]
[174.04136658 474.81976318]
[185.84828186 484.10418701]
[196.39840698 494.79519653]
[205.52537537 506.72421265]
[213.08522034 519.70312500]
[218.95870972 533.52722168]
[223.05323792 547.97845459]
[225.30419922 562.82891846]
[225.67610168 577.84442139]
[224.16308594 592.78808594]
[220.78900146 607.42431641]
[215.60707092 621.52221680]
[208.69903564 634.85949707]
[200.17381287 647.22570801]
[190.16589355 658.42590332]
[178.83308411 668.28344727]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 192]
[31 191]
[32 190]
[33 189]
[34 188]
[35 187]
[36 186]
[37 163]
[38 162]
[40 160]
[41 159]
[43 156]
[44 155]
[45 154]
[46 153]
[47 152]
[50 151]
[51 150]
[52 149]
[55 147]
[56 146]
[58 143]
[59 142]
[60 141]
[69 132]
[70 131]
[71 130]
[85 129]
[86 128]
[89 127]
[90 126]
[91 125]
[92 124]
[94 122]
[95 121]
[97 120]
[98 119]
[99 118]
[100 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
