%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUACAAACCCAGACUCAAAUAUAUAGUGUCACUCUUAAGAUACUACCUGGUACAUUGCUUGUUACGAUGUCCCUACUUAUAAUACCUCUUCAUCAGAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[88.98271942 572.58685303]
[76.58654785 563.25335693]
[72.07614136 548.40625000]
[77.18584442 533.75463867]
[89.95087433 524.93231201]
[90.17420197 509.93395996]
[90.39752960 494.93560791]
[90.62085724 479.93728638]
[90.50918579 464.93768311]
[90.06258392 449.94433594]
[89.61597443 434.95098877]
[89.16937256 419.95764160]
[88.72276306 404.96429443]
[88.27616119 389.97094727]
[87.82955170 374.97760010]
[85.88407135 372.95935059]
[84.62081146 370.04888916]
[84.38362122 366.50219727]
[85.41741180 362.69485474]
[87.82955170 359.08438110]
[88.27616119 344.09103394]
[88.72276306 329.09768677]
[89.16937256 314.10433960]
[89.61597443 299.11099243]
[90.06258392 284.11761475]
[90.50918579 269.12426758]
[90.95579529 254.13093567]
[80.58685303 243.49981689]
[80.82618713 228.28805542]
[92.04738617 217.48423767]
[92.49399567 202.49089050]
[92.94059753 187.49754333]
[93.38720703 172.50419617]
[93.72218323 157.50793457]
[93.94551086 142.50959778]
[93.72218323 127.51126099]
[93.05239868 112.52622223]
[85.69034576 100.63959503]
[91.96256256 88.14356232]
[91.29277802 73.15852356]
[90.62299347 58.17348862]
[89.95320892 43.18844986]
[87.48758698 39.61428452]
[86.39722443 35.82276154]
[86.58158112 32.27291489]
[87.80136871 29.34396744]
[89.71658325 27.29699898]
[89.93991089 12.29866123]
[90.16323853 -2.69967628]
[90.38656616 -17.69801331]
[90.49823761 -32.69759750]
[90.49823761 -47.69759750]
[90.49823761 -62.69759750]
[90.49823761 -77.69760132]
[87.50345612 -92.39559937]
[81.63449860 -106.19977570]
[75.76554108 -120.00395966]
[69.89657593 -133.80813599]
[63.65896225 -140.48121643]
[64.04469299 -147.86178589]
[58.38190842 -161.75181580]
[52.71912003 -175.64184570]
[46.74755859 -189.40194702]
[40.47019577 -203.02526855]
[34.19283676 -216.64857483]
[19.63906479 -222.20065308]
[13.46699715 -236.10604858]
[18.84973717 -249.94664001]
[12.57237625 -263.56994629]
[-1.81531775 -259.24093628]
[-16.66548538 -256.95651245]
[-31.68906593 -256.76110840]
[-46.59362030 -258.65859985]
[-61.08902359 -262.61199951]
[-74.89312744 -268.54437256]
[-87.73722076 -276.34020996]
[-99.37129211 -285.84780884]
[-109.56888580 -296.88211060]
[-118.13149261 -309.22827148]
[-124.89245605 -322.64599609]
[-129.72015381 -336.87411499]
[-132.52061462 -351.63568115]
[-133.23934937 -366.64334106]
[-131.86233521 -381.60494995]
[-128.41641235 -396.22930908]
[-122.96862030 -410.23171997]
[-115.62502289 -423.33963013]
[-106.52855682 -435.29791260]
[-95.85630035 -445.87377930]
[-83.81597900 -454.86138916]
[-70.64196014 -462.08575439]
[-56.59069061 -467.40625000]
[-41.93567657 -470.71936035]
[-26.96218109 -471.96057129]
[-11.96166992 -471.10571289]
[2.77386904 -468.17141724]
[16.95760345 -463.21484375]
[30.31344223 -456.33239746]
[42.58140945 -447.65814209]
[53.52270889 -437.36083984]
[62.92436218 -425.64099121]
[70.60336304 -412.72668457]
[76.41024017 -398.86932373]
[80.23195648 -384.33865356]
[81.99412537 -369.41751099]
[81.66244507 -354.39630127]
[79.24337769 -339.56747437]
[74.78399658 -325.21966553]
[68.37110901 -311.63211060]
[60.12955475 -299.06936646]
[50.21974564 -287.77590942]
[38.83458710 -277.97161865]
[26.19569206 -269.84732056]
[32.47305298 -256.22399902]
[46.49150085 -251.32310486]
[53.05170441 -237.59655762]
[47.81615448 -222.92594910]
[54.09351349 -209.30262756]
[60.37087250 -195.67930603]
[63.53422928 -194.12190247]
[66.10041046 -190.95492554]
[67.32110596 -186.47572327]
[66.60914612 -181.30462646]
[72.27193451 -167.41461182]
[77.93472290 -153.52458191]
[83.70075226 -139.67709351]
[89.56971741 -125.87291718]
[95.43867493 -112.06874084]
[101.30764008 -98.26456451]
[102.14174652 -113.24135590]
[106.13308716 -127.70057678]
[113.10009003 -140.98443604]
[122.72578430 -152.48860168]
[134.57228088 -161.68972778]
[148.10064697 -168.16918945]
[162.69540405 -171.63224792]
[177.69262695 -171.92134094]
[192.41000366 -169.02331543]
[206.17802429 -163.07002258]
[218.37031555 -154.33229065]
[228.43222046 -143.20764160]
[235.90599060 -130.20214844]
[240.45159912 -115.90747833]
[241.86227417 -100.97396088]
[240.07383728 -86.08095551]
[235.16763306 -71.90600586]
[227.36688232 -59.09397507]
[217.02644348 -48.22771835]
[204.61676025 -39.80158615]
[190.70237732 -34.19890213]
[175.91632080 -31.67456055]
[160.93124390 -32.34339523]
[146.42886353 -36.17498398]
[133.06895447 -42.99500656]
[121.45928955 -52.49320984]
[112.12804413 -64.23748016]
[105.49823761 -77.69760132]
[105.49823761 -62.69759750]
[105.49823761 -47.69759750]
[105.49823761 -32.69759750]
[108.64173126 -26.00878716]
[105.38490295 -17.47468567]
[105.16157532 -2.47634864]
[104.93824768 12.52198887]
[104.71492004 27.52032661]
[104.93824768 42.51866531]
[105.60803223 57.50370407]
[106.27781677 72.48873901]
[106.94760132 87.47377777]
[114.30965424 99.36040497]
[108.03743744 111.85643768]
[108.70722198 126.84147644]
[111.17284393 130.41563416]
[112.26320648 134.20715332]
[112.07884979 137.75700378]
[110.85906219 140.68595886]
[108.94384766 142.73292542]
[108.72052002 157.73126221]
[111.72180939 166.35855103]
[108.38055420 172.95080566]
[107.93394470 187.94415283]
[107.48734283 202.93750000]
[107.04073334 217.93084717]
[117.59898376 229.38340759]
[116.93247986 244.58244324]
[105.94914246 254.57752991]
[105.50254059 269.57089233]
[105.05593109 284.56423950]
[104.60932922 299.55758667]
[104.16271973 314.55093384]
[103.71611786 329.54428101]
[103.26950836 344.53762817]
[102.82290649 359.53097534]
[102.82290649 374.53097534]
[103.26950836 389.52432251]
[103.71611786 404.51766968]
[104.16271973 419.51104736]
[104.60932922 434.50439453]
[105.05593109 449.49774170]
[105.50254059 464.49108887]
[108.24741364 468.93099976]
[108.94498444 473.52084351]
[107.88098145 477.45565796]
[105.61919403 480.16061401]
[105.39586639 495.15893555]
[105.17253876 510.15728760]
[104.94921112 525.15563965]
[117.44589996 534.35412598]
[122.11710358 549.15136719]
[117.16664886 563.85760498]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 207]
[6 206]
[7 205]
[8 204]
[9 200]
[10 199]
[11 198]
[12 197]
[13 196]
[14 195]
[15 194]
[20 193]
[21 192]
[22 191]
[23 190]
[24 189]
[25 188]
[26 187]
[27 186]
[30 183]
[31 182]
[32 181]
[33 180]
[34 178]
[35 177]
[36 172]
[37 171]
[39 169]
[40 168]
[41 167]
[42 166]
[47 165]
[48 164]
[49 163]
[50 162]
[51 160]
[52 159]
[53 158]
[54 157]
[55 129]
[56 128]
[57 127]
[58 126]
[60 125]
[61 124]
[62 123]
[63 119]
[64 118]
[65 117]
[68 114]
[69 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
