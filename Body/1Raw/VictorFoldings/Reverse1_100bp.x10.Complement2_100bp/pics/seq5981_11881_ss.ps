%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[62.58530807 180.59709167]
[65.31658936 195.35513306]
[66.81982422 210.28831482]
[67.08473969 225.29463196]
[66.10952759 240.27156067]
[63.90085602 255.11680603]
[60.47380829 269.72894287]
[55.85179520 284.00817871]
[50.06638718 297.85696411]
[43.15711212 311.18066406]
[35.17116165 323.88830566]
[26.16308975 335.89306641]
[16.19443512 347.11294556]
[5.33329201 357.47128296]
[-6.34614515 366.89730835]
[-18.76409340 375.32669067]
[-31.83572388 382.70178223]
[-45.47174072 388.97222900]
[-59.57899857 394.09518433]
[-74.06112671 398.03570557]
[-88.81919861 400.76678467]
[-103.75238800 402.26986694]
[-118.75870514 402.53457642]
[-133.73562622 401.55920410]
[-148.58084106 399.35034180]
[-163.19294739 395.92312622]
[-177.47213745 391.30093384]
[-191.32083130 385.51538086]
[-204.64447021 378.60592651]
[-217.35202026 370.61984253]
[-229.35667419 361.61163330]
[-240.57641602 351.64282227]
[-250.93463135 340.78155518]
[-260.36053467 329.10202026]
[-268.78973389 316.68395996]
[-276.16467285 303.61224365]
[-282.43496704 289.97616577]
[-287.55776978 275.86883545]
[-291.49810791 261.38665771]
[-294.22903442 246.62857056]
[-295.73190308 231.69535828]
[-295.99645996 216.68904114]
[-295.02090454 201.71212769]
[-292.81185913 186.86692810]
[-289.38446045 172.25486755]
[-284.76211548 157.97573853]
[-278.97637939 144.12710571]
[-272.06677246 130.80355835]
[-264.08053589 118.09609985]
[-255.07217407 106.09156036]
[-245.10325623 94.87193298]
[-234.24186707 84.51385498]
[-222.56219482 75.08808899]
[-210.14404297 66.65902710]
[-197.07225037 59.28424072]
[-183.43608093 53.01411438]
[-169.32870483 47.89147949]
[-154.84648132 43.95132828]
[-140.08834839 41.22057724]
[-125.15511322 39.71788025]
[-110.14878845 39.45349884]
[-95.17189026 40.42924118]
[-80.32672882 42.63844681]
[-65.71469879 46.06601715]
[-51.43563080 50.68854141]
[-37.58706284 56.47444153]
[-24.26359177 63.38419724]
[-11.55623722 71.37059784]
[0.44819841 80.37909698]
[11.66771030 90.34815979]
[22.02565765 101.20967102]
[31.45128250 112.88944244]
[39.88019943 125.30769348]
[52.94438171 117.93700409]
[66.00856781 110.56631470]
[79.07275391 103.19562531]
[80.99811554 90.66779327]
[89.73513031 81.48529816]
[102.15181732 78.93981934]
[113.79714203 83.94383240]
[126.96961212 76.76846313]
[140.14208984 69.59309387]
[153.31455994 62.41772842]
[166.48704529 55.24236298]
[179.65951538 48.06699753]
[192.83200073 40.89163208]
[206.00447083 33.71626663]
[219.17694092 26.54089928]
[232.34942627 19.36553192]
[240.76705933 5.96948624]
[255.64489746 6.67592382]
[268.81738281 -0.49944231]
[281.98983765 -7.67480850]
[295.16232300 -14.85017490]
[288.86141968 -28.46857452]
[283.46469116 -42.46991348]
[278.99523926 -56.79424286]
[275.47222900 -71.38021851]
[272.91073608 -86.16537476]
[271.32171631 -101.08641052]
[270.71200562 -116.07942963]
[271.08416748 -131.08021545]
[272.43664551 -146.02455139]
[274.76364136 -160.84843445]
[278.05520630 -175.48837280]
[282.29718018 -189.88169861]
[287.47146606 -203.96675110]
[293.55590820 -217.68324280]
[300.52438354 -230.97242737]
[308.34713745 -243.77738953]
[316.99060059 -256.04330444]
[326.41778564 -267.71765137]
[336.58834839 -278.75042725]
[347.45870972 -289.09439087]
[358.98233032 -298.70523071]
[371.10986328 -307.54183960]
[383.78936768 -315.56631470]
[396.96652222 -322.74435425]
[410.58496094 -329.04519653]
[424.58633423 -334.44183350]
[438.91070557 -338.91119385]
[453.49670410 -342.43411255]
[468.28186035 -344.99551392]
[483.20291138 -346.58444214]
[498.19592285 -347.19409180]
[513.19671631 -346.82180786]
[528.14105225 -345.46923828]
[542.96490479 -343.14218140]
[557.60485840 -339.85052490]
[571.99810791 -335.60845947]
[586.08319092 -330.43408203]
[599.79962158 -324.34957886]
[613.08874512 -317.38101196]
[625.89367676 -309.55819702]
[638.15954590 -300.91464233]
[649.83380127 -291.48739624]
[660.86651611 -281.31677246]
[671.21044922 -270.44635010]
[680.82122803 -258.92266846]
[689.65771484 -246.79510498]
[697.68218994 -234.11555481]
[704.86010742 -220.93832397]
[711.16088867 -207.31985474]
[716.55743408 -193.31845093]
[721.02667236 -178.99406433]
[724.54956055 -164.40805054]
[727.11083984 -149.62286377]
[728.69970703 -134.70181274]
[729.30926514 -119.70878601]
[728.93688965 -104.70799255]
[727.58422852 -89.76367950]
[725.25708008 -74.93982697]
[721.96533203 -60.29992294]
[717.72320557 -45.90665436]
[712.54870605 -31.82164955]
[706.46417236 -18.10523224]
[699.49548340 -4.81613445]
[691.67260742 7.98873663]
[683.02899170 20.25454903]
[673.60168457 31.92877579]
[663.43096924 42.96142960]
[652.56048584 53.30526352]
[641.03674316 62.91598129]
[628.90911865 71.75243378]
[616.22955322 79.77677917]
[603.05224609 86.95465088]
[589.43377686 93.25532532]
[575.43231201 98.65180206]
[561.10791016 103.12099457]
[546.52185059 106.64374542]
[531.73669434 109.20497894]
[516.81561279 110.79372406]
[501.82257080 111.40318298]
[486.82180786 111.03074646]
[471.87750244 109.67800140]
[457.05364990 107.35074615]
[442.41375732 104.05893707]
[428.02050781 99.81668854]
[413.93554688 94.64215088]
[400.21917725 88.55748749]
[386.93011475 81.58876038]
[374.12527466 73.76579285]
[361.85952759 65.12210846]
[350.18536377 55.69470215]
[339.15277100 45.52395248]
[328.80899048 34.65340805]
[319.19833374 23.12962532]
[310.36196899 11.00194359]
[302.33767700 -1.67769909]
[289.16522217 5.49766731]
[275.99273682 12.67303371]
[262.82025146 19.84840012]
[255.34481812 32.73121643]
[239.52478027 32.53800964]
[226.35231018 39.71337509]
[213.17984009 46.88874054]
[200.00735474 54.06410599]
[186.83488464 61.23947525]
[173.66241455 68.41484070]
[160.48992920 75.59020233]
[147.31745911 82.76557159]
[134.14497375 89.94094086]
[120.97250366 97.11630249]
[116.66979980 113.04911804]
[102.23611450 121.05139923]
[86.44344330 116.25981140]
[73.37925720 123.63050079]
[60.31507111 131.00119019]
[47.25088882 138.37187195]
[53.52149963 152.00782776]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 209]
[74 208]
[75 207]
[76 206]
[80 203]
[81 202]
[82 201]
[83 200]
[84 199]
[85 198]
[86 197]
[87 196]
[88 195]
[89 194]
[91 192]
[92 191]
[93 190]
[94 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
