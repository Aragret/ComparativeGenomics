%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[128.53138733 641.67321777]
[127.88903046 626.61163330]
[130.87049866 611.83416748]
[137.30245972 598.19989014]
[146.81094360 586.50146484]
[158.84317017 577.41912842]
[172.69958496 571.48083496]
[170.25386047 556.68157959]
[167.80813599 541.88232422]
[165.36241150 527.08306885]
[162.47712708 512.36315918]
[159.15487671 497.73568726]
[155.83261108 483.10821533]
[152.51036072 468.48077393]
[147.96345520 462.65432739]
[149.24923706 453.61083984]
[146.14512634 438.93551636]
[143.04101562 424.26022339]
[139.93690491 409.58493042]
[136.83279419 394.90963745]
[133.72868347 380.23431396]
[130.62457275 365.55902100]
[127.41130066 350.90722656]
[124.08904266 336.27978516]
[120.76678467 321.65231323]
[117.44452667 307.02484131]
[114.12226105 292.39739990]
[109.57537079 286.57092285]
[110.86114502 277.52746582]
[107.75704193 262.85214233]
[101.07514954 276.28167725]
[88.24830627 284.05807495]
[73.25104523 283.77169800]
[60.73041916 275.51129150]
[54.56609344 261.83645630]
[56.66814804 246.98448181]
[66.38523865 235.55740356]
[80.70641327 231.09602356]
[95.19410706 234.98275757]
[105.35926056 246.01348877]
[104.24361420 231.05503845]
[103.12796783 216.09658813]
[102.01231384 201.13813782]
[100.89666748 186.17967224]
[99.78102112 171.22122192]
[98.66537476 156.26277161]
[97.54972076 141.30432129]
[95.98919678 126.38571167]
[93.98518372 111.52018738]
[91.53945923 96.72091675]
[88.65418243 82.00102234]
[85.76891327 67.28113556]
[82.88364410 52.56124115]
[79.56137848 37.93378067]
[75.80507660 23.41172218]
[72.04878235 8.88966274]
[66.87006378 1.36511946]
[68.34637451 -5.87658644]
[64.80670166 -20.45296097]
[61.26703262 -35.02933884]
[57.72735977 -49.60571289]
[52.43161774 -35.57164383]
[41.28204727 -25.53734970]
[26.76948357 -21.74452019]
[12.13607597 -25.04048347]
[0.65096313 -34.68891144]
[-5.12005186 -48.53432465]
[-3.88770866 -63.48361588]
[4.07268381 -76.19708252]
[16.98275375 -83.83449554]
[31.95835686 -84.68964386]
[45.65390778 -78.57147980]
[55.00979233 -66.84680176]
[53.89414597 -81.80525970]
[52.33362198 -96.72386169]
[50.32960892 -111.58939362]
[48.32559586 -126.45491791]
[36.73530960 -140.76390076]
[44.02894974 -156.72540283]
[41.80383301 -171.55944824]
[39.57871628 -186.39349365]
[35.76575089 -191.79467773]
[35.31980896 -197.46020508]
[37.51502991 -201.70167542]
[35.73256302 -216.59538269]
[33.95009613 -231.48910522]
[18.94515419 -232.64576721]
[4.45426130 -236.70782471]
[-8.96558666 -243.51913452]
[-20.79856873 -252.81788635]
[-30.58985519 -264.24667358]
[-37.96309662 -277.36618042]
[-42.63488007 -291.67214966]
[-44.42564392 -306.61468506]
[-43.26654816 -321.61944580]
[-39.20214844 -336.10968018]
[-32.38866806 -349.52841187]
[-23.08800316 -361.35989380]
[-11.65764141 -371.14932251]
[1.46306241 -378.52044678]
[15.76978397 -383.18991089]
[30.71261024 -384.97824097]
[45.71717834 -383.81674194]
[60.20675659 -379.75000000]
[73.62439728 -372.93432617]
[85.45436859 -363.63174438]
[95.24195099 -352.19979858]
[102.61094666 -339.07791138]
[107.27809906 -324.77044678]
[109.06402588 -309.82733154]
[107.90007782 -294.82293701]
[103.83098602 -280.33401489]
[97.01316071 -266.91748047]
[87.70866394 -255.08901978]
[76.27513885 -245.30328369]
[63.15204620 -237.93641663]
[48.84381485 -233.27157593]
[50.62628174 -218.37785339]
[52.40874863 -203.48413086]
[54.41276169 -188.61860657]
[56.63787842 -173.78456116]
[58.86299515 -158.95051575]
[68.40110779 -151.51069641]
[70.37629700 -139.17042542]
[63.19112396 -128.45893860]
[65.19513702 -113.59340668]
[67.19915009 -98.72787476]
[69.34403992 -96.92299652]
[70.90323639 -94.15975189]
[71.50811768 -90.65696716]
[70.87602997 -86.76274109]
[68.85260010 -82.92090607]
[69.96824646 -67.96245575]
[72.30373383 -53.14538574]
[75.84340668 -38.56900787]
[79.38307953 -23.99263382]
[82.92275238 -9.41625881]
[86.57083893 5.13336182]
[90.32714081 19.65542030]
[94.08344269 34.17747879]
[96.42761230 35.71468735]
[98.30411530 38.27307510]
[99.32095337 41.67916489]
[99.15609741 45.62091064]
[97.60353088 49.67596817]
[100.48880768 64.39585876]
[103.37407684 79.11575317]
[106.25934601 93.83563995]
[108.63560486 95.74428558]
[110.36989594 98.55973816]
[111.12502289 102.04588318]
[110.65573883 105.84535980]
[108.85071564 109.51617432]
[110.85472870 124.38169861]
[113.62939453 127.72164154]
[115.05367279 131.40077209]
[115.18675232 134.95291138]
[114.23313904 137.97900391]
[112.50817871 140.18867493]
[113.62382507 155.14712524]
[114.73947144 170.10557556]
[115.85512543 185.06402588]
[116.97077179 200.02249146]
[118.08641815 214.98094177]
[119.20206451 229.93939209]
[120.31771851 244.89784241]
[122.43234253 259.74804688]
[125.53645325 274.42333984]
[128.74972534 289.07513428]
[132.07199097 303.70260620]
[135.39424133 318.33004761]
[138.71650696 332.95751953]
[142.03875732 347.58496094]
[146.99114990 355.26037598]
[145.29988098 362.45489502]
[148.40399170 377.13021851]
[151.50810242 391.80551147]
[154.61221313 406.48080444]
[157.71632385 421.15612793]
[160.82043457 435.83142090]
[163.92454529 450.50671387]
[167.13781738 465.15850830]
[170.46006775 479.78598022]
[173.78233337 494.41342163]
[177.10459900 509.04089355]
[180.16616821 512.11999512]
[181.91299438 515.65734863]
[182.36245728 519.18347168]
[181.68261719 522.28253174]
[180.16168213 524.63732910]
[182.60740662 539.43658447]
[185.05313110 554.23583984]
[187.49885559 569.03515625]
[202.52906799 570.19958496]
[216.84364319 574.92791748]
[229.61032104 582.94506836]
[240.08689880 593.78503418]
[247.66424561 606.81756592]
[251.90185547 621.28497314]
[252.55334473 636.34619141]
[249.58082581 651.12548828]
[243.15715027 664.76361084]
[233.65574646 676.46777344]
[221.62902832 685.55743408]
[207.77621460 691.50408936]
[192.90269470 693.96209717]
[177.87318420 692.78851318]
[163.56149292 688.05157471]
[150.79966736 680.02661133]
[140.32968140 669.18029785]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 193]
[8 192]
[9 191]
[10 190]
[11 185]
[12 184]
[13 183]
[14 182]
[16 181]
[17 180]
[18 179]
[19 178]
[20 177]
[21 176]
[22 175]
[23 173]
[24 172]
[25 171]
[26 170]
[27 169]
[29 168]
[30 167]
[40 166]
[41 165]
[42 164]
[43 163]
[44 162]
[45 161]
[46 160]
[47 159]
[48 154]
[49 153]
[50 148]
[51 147]
[52 146]
[53 145]
[54 140]
[55 139]
[56 138]
[58 137]
[59 136]
[60 135]
[61 134]
[73 133]
[74 132]
[75 127]
[76 126]
[77 125]
[79 122]
[80 121]
[81 120]
[84 119]
[85 118]
[86 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
