%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACAACAAACCUUCCCCCUACGCCCCCUUUACAACAAUCAUUACUCUUUAGGACGCUUAUCCGAAGGCCGACGGUCCGCAAAUUACCCCAAAUCAUCCCxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[76.31616211 623.20330811]
[64.68003082 613.70440674]
[54.35416031 602.79547119]
[45.50811005 590.65563965]
[38.28713989 577.48425293]
[32.80982971 563.49755859]
[29.16612053 548.92523193]
[27.41584206 534.00665283]
[27.58773613 518.98669434]
[29.67898369 504.11206055]
[33.65524292 489.62695312]
[39.45121765 475.76928711]
[46.97173309 462.76660156]
[56.09329987 450.83239746]
[66.66613007 440.16262817]
[78.51660156 430.93255615]
[91.45013428 423.29370117]
[105.25434113 417.37152100]
[119.70253754 413.26324463]
[117.47741699 398.42919922]
[115.25230408 383.59515381]
[113.02718353 368.76110840]
[110.80207062 353.92706299]
[108.57695007 339.09301758]
[106.35183716 324.25897217]
[104.12671661 309.42492676]
[94.58704376 297.98623657]
[100.19160461 283.19097900]
[97.96649170 268.35693359]
[95.79496002 266.58419800]
[94.19480133 263.84448242]
[93.53783417 260.35107422]
[94.11186981 256.44787598]
[96.07788086 252.57633972]
[94.73964691 237.63615417]
[93.40141296 222.69596863]
[82.97734070 233.48200989]
[67.98250580 233.87582397]
[57.00664520 223.65180969]
[56.33721924 208.66674805]
[66.35771179 197.50477600]
[81.32792664 196.55995178]
[92.67181396 206.37269592]
[92.67181396 191.37269592]
[92.67181396 176.37269592]
[92.67181396 161.37269592]
[84.93450928 148.64541626]
[92.67181396 134.84524536]
[92.67181396 119.84525299]
[92.67181396 104.84525299]
[90.70706177 102.51516724]
[89.54671478 99.41870117]
[89.47624969 95.85240173]
[90.66761017 92.21414948]
[93.14501190 88.95908356]
[94.03782654 73.98567963]
[94.93064880 59.01227188]
[95.82346344 44.03886795]
[83.97429657 31.16965485]
[85.07693481 14.04951859]
[97.96166992 3.24107289]
[98.63145447 -11.74396610]
[99.30123901 -26.72900391]
[99.97102356 -41.71404266]
[92.85765076 -55.84593964]
[101.15553284 -68.21502686]
[101.82531738 -83.20006561]
[102.49510193 -98.18510437]
[103.16488647 -113.17014313]
[103.83467865 -128.15518188]
[104.50446320 -143.14022827]
[104.50446320 -158.14022827]
[103.83467865 -173.12525940]
[103.16488647 -188.11030579]
[91.78408051 -198.74584961]
[91.31829071 -213.95236206]
[101.52780151 -224.73667908]
[100.85801697 -239.72171021]
[100.18823242 -254.70675659]
[93.52362823 -241.26863098]
[82.71269226 -230.87037659]
[69.02549744 -224.73355103]
[54.06998444 -223.57911682]
[39.60312271 -227.54269409]
[27.32446289 -236.15864563]
[18.67648888 -248.41476440]
[14.67515564 -262.87121582]
[15.79053593 -277.82971191]
[21.89159775 -291.53286743]
[32.26159286 -302.37091064]
[45.68226242 -309.07058716]
[60.57696533 -310.84481812]
[75.19587708 -307.48516846]
[87.82159424 -299.38632202]
[96.97085571 -287.49972534]
[101.56903076 -273.22027588]
[104.45429993 -287.94015503]
[107.33957672 -302.66003418]
[110.22484589 -317.37994385]
[96.50051117 -323.60403442]
[84.58187103 -332.82589722]
[75.11166382 -344.54818726]
[68.60062408 -358.13873291]
[65.39987183 -372.86462402]
[65.68202972 -387.93170166]
[69.43187714 -402.52743530]
[76.44718170 -415.86468506]
[86.34962463 -427.22418213]
[98.60518646 -435.99334717]
[112.55292511 -441.69921875]
[127.44066620 -444.03414917]
[142.46553040 -442.87219238]
[156.81724548 -438.27600098]
[169.72184753 -430.49343872]
[180.48339844 -419.94424438]
[188.52154541 -407.19729614]
[193.40278625 -392.94000244]
[194.86390686 -377.94128418]
[192.82611084 -363.00994873]
[187.39927673 -348.95129395]
[178.87606812 -336.52343750]
[167.71614075 -326.39660645]
[154.52133179 -319.11691284]
[140.00321960 -315.07699585]
[124.94474030 -314.49465942]
[122.05946350 -299.77478027]
[119.17419434 -285.05487061]
[116.28891754 -270.33499146]
[115.17327118 -255.37654114]
[115.84305573 -240.39149475]
[116.51284027 -225.40646362]
[127.64376831 -215.57598877]
[128.53649902 -200.38858032]
[118.14992523 -188.78009033]
[118.81971741 -173.79504395]
[119.48950195 -158.81001282]
[130.38479614 -169.11982727]
[145.38226318 -168.84368896]
[155.89065552 -158.13978577]
[155.89028931 -143.13978577]
[145.38137817 -132.43637085]
[130.38391113 -132.16096497]
[119.48950195 -142.47044373]
[118.81971741 -127.48539734]
[118.14992523 -112.50035858]
[117.48014069 -97.51531982]
[116.81035614 -82.53028107]
[116.14057159 -67.54524231]
[123.30185699 -54.48517609]
[114.95606232 -41.04425812]
[114.28627777 -26.05921936]
[113.61649323 -11.07418060]
[112.94670868 3.91085792]
[122.88692474 12.10973167]
[126.34148407 24.72512245]
[121.83307648 37.21050262]
[110.79686737 44.93168259]
[109.90405273 59.90508652]
[109.01123810 74.87849426]
[108.11841583 89.85189819]
[107.67181396 104.84525299]
[107.67181396 119.84525299]
[107.67181396 134.84524536]
[115.40911102 148.64541626]
[107.67181396 161.37269592]
[107.67181396 176.37269592]
[107.67181396 191.37269592]
[107.67181396 206.37269592]
[108.34159851 221.35772705]
[109.67983246 236.29791260]
[111.01806641 251.23809814]
[112.80052948 266.13180542]
[115.02565002 280.96585083]
[124.72447968 293.46560669]
[118.96076202 307.19982910]
[121.18587494 322.03384399]
[123.41099548 336.86788940]
[125.63611603 351.70193481]
[127.86122894 366.53598022]
[130.08634949 381.37002563]
[132.31146240 396.20407104]
[134.53657532 411.03811646]
[149.55427551 410.72650146]
[164.48852539 412.33789062]
[179.09408569 415.84585571]
[193.13113403 421.19281006]
[206.36915588 428.29089355]
[218.59077454 437.02362061]
[229.59529114 447.24755859]
[239.20202637 458.79479980]
[247.25321960 471.47576904]
[253.61663818 485.08221436]
[258.18783569 499.39068604]
[260.89169312 514.16625977]
[261.68383789 529.16625977]
[260.55130005 544.14447021]
[257.51260376 558.85479736]
[252.61770630 573.05578613]
[245.94694519 586.51422119]
[237.60989380 599.00909424]
[227.74343872 610.33526611]
[216.50958252 620.30664062]
[204.09281921 628.75958252]
[190.69703674 635.55529785]
[176.54220581 640.58209229]
[161.86074829 643.75750732]
[146.89376831 645.02941895]
[131.88702393 644.37683105]
[117.08692932 641.81054688]
[102.73654175 637.37268066]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 182]
[20 181]
[21 180]
[22 179]
[23 178]
[24 177]
[25 176]
[26 175]
[28 173]
[29 172]
[34 171]
[35 170]
[36 169]
[43 168]
[44 167]
[45 166]
[46 165]
[48 163]
[49 162]
[50 161]
[55 160]
[56 159]
[57 158]
[58 157]
[61 153]
[62 152]
[63 151]
[64 150]
[66 148]
[67 147]
[68 146]
[69 145]
[70 144]
[71 143]
[72 136]
[73 135]
[74 134]
[77 131]
[78 130]
[79 129]
[96 128]
[97 127]
[98 126]
[99 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
