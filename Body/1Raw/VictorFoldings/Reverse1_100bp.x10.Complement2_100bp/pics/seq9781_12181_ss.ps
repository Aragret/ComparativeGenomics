%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[200.62089539 557.25830078]
[199.58175659 542.27575684]
[200.35618591 527.27716064]
[202.93289185 512.48126221]
[207.27430725 498.10388184]
[213.31710815 484.35461426]
[220.97317505 471.43402100]
[230.13085938 459.53048706]
[240.65661621 448.81759644]
[252.39695740 439.45159912]
[265.18066406 431.56909180]
[258.90328979 417.94577026]
[252.62594604 404.32244873]
[240.27252197 396.00125122]
[241.52444458 380.22967529]
[235.24708557 366.60635376]
[228.86848450 353.03015137]
[222.38899231 339.50180054]
[215.90950012 325.97344971]
[209.42999268 312.44509888]
[202.65000916 299.06484985]
[195.57290649 285.83929443]
[188.49578857 272.61376953]
[181.41868591 259.38824463]
[174.34158325 246.16271973]
[156.75392151 244.56723022]
[143.52833557 232.62843323]
[140.08689880 214.98655701]
[147.99284363 198.66926575]
[140.52510071 185.66030884]
[133.05735779 172.65135193]
[125.58961487 159.64241028]
[118.12187195 146.63345337]
[104.25194550 149.84979248]
[90.03766632 149.02890015]
[76.63021088 144.23724365]
[65.11543274 135.86291504]
[56.42588806 124.58409882]
[51.26532745 111.31427765]
[50.05168915 97.12812805]
[52.88327026 83.17456818]
[59.53074646 70.58366394]
[69.45574951 60.37513733]
[62.18251801 47.25644302]
[48.72417831 38.93877029]
[49.31983566 24.05608177]
[42.04660797 10.93738747]
[34.77337646 -2.18130708]
[27.50014877 -15.30000114]
[20.22691917 -28.41869545]
[13.32891750 -34.40663147]
[12.94471931 -41.78729630]
[5.86761427 -55.01282120]
[-7.46539593 -63.52994537]
[-6.64822054 -78.40212250]
[-13.72532558 -91.62764740]
[-19.09818840 -77.62291718]
[-32.74352264 -71.39356995]
[-46.84466171 -76.50804138]
[-53.32383347 -90.03654480]
[-48.46947479 -104.22933197]
[-35.06237793 -110.95613098]
[-20.78347206 -106.36413574]
[-26.65243149 -120.16831207]
[-32.52139282 -133.97248840]
[-37.56543350 -138.24673462]
[-39.41592407 -143.62007141]
[-38.35279846 -148.27612305]
[-43.80815887 -162.24891663]
[-49.26351547 -176.22171021]
[-54.71887207 -190.19451904]
[-60.17422867 -204.16731262]
[-65.62958527 -218.14010620]
[-80.30017853 -214.87297058]
[-95.29756927 -213.88369751]
[-110.27020264 -215.19546509]
[-124.86709595 -218.77752686]
[-138.74607849 -224.54591370]
[-151.58180237 -232.36541748]
[-163.07337952 -242.05273438]
[-172.95143127 -253.38076782]
[-180.98442078 -266.08398438]
[-186.98400879 -279.86459351]
[-190.80958557 -294.39956665]
[-192.37147522 -309.34817505]
[-191.63304138 -324.36001587]
[-188.61160278 -339.08316040]
[-183.37799072 -353.17251587]
[-176.05488586 -366.29779053]
[-166.81396484 -378.15130615]
[-155.87182617 -388.45516968]
[-143.48498535 -396.96789551]
[-129.94380188 -403.48992920]
[-115.56568909 -407.86834717]
[-100.68771362 -410.00054932]
[-85.65862274 -409.83651733]
[-70.83072662 -407.38012695]
[-56.55160522 -402.68896484]
[-43.15598297 -395.87295532]
[-30.95787811 -387.09191895]
[-20.24322510 -376.55169678]
[-11.26319408 -364.49932861]
[-4.22828913 -351.21734619]
[0.69658154 -337.01715088]
[3.39597178 -322.23156738]
[3.80660415 -307.20718384]
[1.91885257 -292.29620361]
[-2.22303128 -277.84820557]
[-8.52195549 -264.20181274]
[-16.83026505 -251.67692566]
[-26.95319939 -240.56718445]
[-38.65346527 -231.13298035]
[-51.65678787 -223.59547424]
[-46.20143127 -209.62266541]
[-40.74607468 -195.64987183]
[-35.29071808 -181.67707825]
[-29.83535957 -167.70426941]
[-24.38000298 -153.73147583]
[-18.71721649 -139.84144592]
[-12.84825516 -126.03727722]
[-6.97929430 -112.23310089]
[-0.49979845 -98.70475006]
[6.57730722 -85.47922516]
[19.40411568 -77.90808105]
[19.09314156 -62.08992767]
[26.17024803 -48.86439896]
[33.34561157 -35.69192505]
[40.61884308 -22.57323074]
[47.89207077 -9.45453644]
[55.16530228 3.66415763]
[62.43852997 16.78285217]
[75.37664032 24.16218758]
[75.30120850 39.98321152]
[82.57444000 53.10190582]
[97.91028595 50.01285934]
[113.45044708 51.81113434]
[127.67553711 58.32091904]
[139.19474792 68.90573120]
[146.88180542 82.53068542]
[149.98516846 97.86364746]
[148.20140076 113.40547943]
[141.70487976 127.63663483]
[131.13082886 139.16571045]
[138.59857178 152.17466736]
[146.06629944 165.18362427]
[153.53404236 178.19256592]
[161.00178528 191.20152283]
[173.49859619 190.88890076]
[184.87646484 195.89015198]
[193.00090027 205.19999695]
[196.37632751 217.01132202]
[194.42120361 229.06579590]
[187.56710815 239.08561707]
[194.64421082 252.31114197]
[201.72132874 265.53668213]
[208.79843140 278.76220703]
[215.87553406 291.98773193]
[220.31047058 294.74063110]
[222.97912598 298.53952026]
[223.77882385 302.53643799]
[222.95834351 305.96560669]
[229.43783569 319.49395752]
[235.91732788 333.02230835]
[242.39683533 346.55065918]
[248.92619324 352.93853760]
[248.87040710 360.32897949]
[255.14776611 373.95230103]
[267.95019531 383.24792480]
[266.24926758 398.04510498]
[272.52661133 411.66839600]
[278.80398560 425.29171753]
[293.10195923 420.69552612]
[307.84973145 417.85632324]
[322.83218384 416.81552124]
[337.83084106 417.58825684]
[352.62701416 420.16329956]
[367.00488281 424.50311279]
[380.75482178 430.54437256]
[393.67630005 438.19897461]
[405.58084106 447.35534668]
[416.29492188 457.87988281]
[425.66223145 469.61917114]
[433.54617310 482.40200806]
[439.83181763 496.04193115]
[444.42749023 510.34008789]
[447.26614380 525.08795166]
[448.30639648 540.07043457]
[447.53308105 555.06909180]
[444.95748901 569.86517334]
[440.61712646 584.24291992]
[434.57537842 597.99261475]
[426.92025757 610.91375732]
[417.76348877 622.81799316]
[407.23852539 633.53167725]
[395.49887085 642.89849854]
[382.71575928 650.78198242]
[369.07559204 657.06713867]
[354.77725220 661.66229248]
[340.02929688 664.50036621]
[325.04675293 665.54003906]
[310.04812622 664.76617432]
[295.25216675 662.19006348]
[280.87460327 657.84918213]
[267.12512207 651.80688477]
[254.20423889 644.15130615]
[242.30035400 634.99407959]
[231.58709717 624.46868896]
[222.22065735 612.72869873]
[214.33764648 599.94531250]
[208.05302429 586.30487061]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 171]
[12 170]
[13 169]
[15 167]
[16 166]
[17 164]
[18 163]
[19 162]
[20 161]
[21 157]
[22 156]
[23 155]
[24 154]
[25 153]
[29 147]
[30 146]
[31 145]
[32 144]
[33 143]
[43 134]
[44 133]
[46 131]
[47 130]
[48 129]
[49 128]
[50 127]
[52 126]
[53 125]
[55 123]
[56 122]
[63 121]
[64 120]
[65 119]
[68 118]
[69 117]
[70 116]
[71 115]
[72 114]
[73 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
