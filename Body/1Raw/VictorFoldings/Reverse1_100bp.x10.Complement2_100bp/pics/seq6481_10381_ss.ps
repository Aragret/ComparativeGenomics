%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[112.65683746 215.55154419]
[116.74291992 230.02261353]
[118.32443237 244.97610474]
[117.35588074 259.98178101]
[113.86511993 274.60784912]
[107.95259857 288.43356323]
[99.78842163 301.06109619]
[89.60749054 312.12710571]
[77.70274353 321.31323242]
[64.41668701 328.35516357]
[50.13159180 333.05026245]
[35.25847244 335.26348877]
[20.22525787 334.93115234]
[5.46448231 332.06277466]
[-8.59915733 326.74093628]
[-21.56102180 319.11871338]
[-33.04817200 309.41546631]
[-42.73010254 297.91030884]
[-50.32824326 284.93432617]
[-55.62397766 270.86083984]
[-58.46493912 256.09475708]
[-58.76938629 241.06095886]
[-56.52856445 226.19197083]
[-51.80694199 211.91561890]
[-44.74036789 198.64265442]
[-35.53216553 186.75497437]
[-24.44727325 176.59460449]
[-11.80462265 168.45387268]
[2.03202987 162.56701660]
[16.66457748 159.10340881]
[31.67201233 158.16270447]
[46.62253952 159.77197266]
[61.08600235 163.88490295]
[67.56549835 150.35656738]
[74.04499817 136.82821655]
[80.52449036 123.29987335]
[87.00399017 109.77152252]
[83.80295563 98.57354736]
[88.91191101 88.10742188]
[99.70967865 83.74285126]
[106.38987732 70.31247711]
[112.66723633 56.68916321]
[118.53619385 42.88498688]
[124.40515900 29.08080864]
[110.85507965 22.64179993]
[97.58458710 15.64470291]
[84.61665344 8.10162926]
[71.97372437 0.02563678]
[59.67768478 -8.56929207]
[47.74982452 -17.66827774]
[36.21079636 -27.25556946]
[25.08057404 -37.31457138]
[14.37842369 -47.82786179]
[4.12287569 -58.77724838]
[-5.66831732 -70.14377594]
[-14.97820377 -81.90776062]
[-23.79066849 -94.04884338]
[-32.09045410 -106.54599762]
[-39.86318970 -119.37759399]
[-47.09542465 -132.52142334]
[-53.77463150 -145.95472717]
[-59.88925552 -159.65423584]
[-65.42870331 -173.59625244]
[-70.38339233 -187.75663757]
[-74.74473572 -202.11087036]
[-78.50519562 -216.63409424]
[-81.65825653 -231.30119324]
[-84.19845581 -246.08674622]
[-86.12139130 -260.96517944]
[-87.42375183 -275.91073608]
[-88.10327148 -290.89749146]
[-88.15876770 -305.89956665]
[-87.59015656 -320.89099121]
[-86.39841461 -335.84573364]
[-84.58560944 -350.73800659]
[-82.15488434 -365.54193115]
[-79.11043549 -380.23196411]
[-75.45753479 -394.78262329]
[-71.20251465 -409.16873169]
[-66.35272980 -423.36538696]
[-60.91659164 -437.34802246]
[-54.90349960 -451.09237671]
[-48.32386398 -464.57473755]
[-41.18907928 -477.77172852]
[-33.51149750 -490.66046143]
[-25.30440521 -503.21868896]
[-16.58201408 -515.42462158]
[-7.35942316 -527.25720215]
[2.34740090 -538.69586182]
[12.52165413 -549.72082520]
[23.14572334 -560.31298828]
[34.20121765 -570.45410156]
[45.66899490 -580.12652588]
[57.52920151 -589.31347656]
[69.76130676 -597.99914551]
[82.34413910 -606.16845703]
[95.25591278 -613.80731201]
[108.47426605 -620.90240479]
[121.97633362 -627.44146729]
[135.73872375 -633.41320801]
[149.73760986 -638.80731201]
[163.94877625 -643.61444092]
[178.34761047 -647.82617188]
[192.90917969 -651.43536377]
[207.60829163 -654.43566895]
[222.41947937 -656.82189941]
[237.31710815 -658.58990479]
[252.27539062 -659.73669434]
[267.26843262 -660.26025391]
[282.27026367 -660.15966797]
[297.25494385 -659.43511963]
[312.19650269 -658.08789062]
[327.06909180 -656.12023926]
[341.84692383 -653.53558350]
[356.50448608 -650.33850098]
[371.01635742 -646.53442383]
[385.35742188 -642.12994385]
[399.50283813 -637.13275146]
[413.42816162 -631.55139160]
[427.10922241 -625.39562988]
[440.52239990 -618.67608643]
[453.64443970 -611.40441895]
[466.45260620 -603.59313965]
[478.92477417 -595.25585938]
[491.03930664 -586.40692139]
[502.77526855 -577.06170654]
[514.11230469 -567.23638916]
[525.03082275 -556.94799805]
[535.51190186 -546.21429443]
[545.53741455 -535.05389404]
[555.09002686 -523.48614502]
[564.15307617 -511.53097534]
[572.71105957 -499.20916748]
[580.74902344 -486.54202271]
[588.25305176 -473.55148315]
[595.21026611 -460.26000977]
[601.60852051 -446.69064331]
[607.43676758 -432.86688232]
[612.68493652 -418.81262207]
[617.34393311 -404.55221558]
[621.40563965 -390.11035156]
[624.86309814 -375.51202393]
[627.71032715 -360.78250122]
[629.94232178 -345.94726562]
[631.55529785 -331.03207397]
[632.54638672 -316.06265259]
[632.91394043 -301.06497192]
[632.65728760 -286.06500244]
[631.77685547 -271.08868408]
[630.27423096 -256.16195679]
[628.15197754 -241.31063843]
[625.41369629 -226.56047058]
[622.06427002 -211.93696594]
[618.10943604 -197.46546936]
[613.55596924 -183.17100525]
[608.41186523 -169.07833862]
[602.68597412 -155.21185303]
[596.38818359 -141.59555054]
[589.52947998 -128.25302124]
[582.12164307 -115.20735931]
[574.17755127 -102.48113251]
[565.71093750 -90.09638977]
[556.73645020 -78.07456970]
[547.26965332 -66.43647766]
[537.32696533 -55.20226288]
[526.92553711 -44.39137268]
[516.08337402 -34.02252960]
[504.81924438 -24.11367607]
[493.15270996 -14.68197250]
[481.10391235 -5.74374342]
[468.69372559 2.68553710]
[455.94363403 10.59127617]
[442.87573242 17.95978737]
[429.51260376 24.77831268]
[415.87741089 31.03505135]
[401.99374390 36.71916962]
[387.88565063 41.82082748]
[373.57754517 46.33119202]
[359.09420776 50.24245834]
[344.46069336 53.54785156]
[329.70233154 56.24165344]
[314.84469604 58.31919479]
[299.91351318 59.77688599]
[284.93460083 60.61219788]
[269.93392944 60.82368469]
[254.93742371 60.41098404]
[239.97106934 59.37480545]
[225.06077576 57.71694946]
[210.23234558 55.44027710]
[195.51147461 52.54874039]
[180.92361450 49.04733658]
[166.49403381 44.94212723]
[152.24772644 40.24022675]
[138.20933533 34.94976807]
[132.34037781 48.75394821]
[126.47141266 62.55812454]
[127.39373016 65.20528412]
[127.32304382 68.37728882]
[126.05419922 71.69774628]
[123.52195740 74.72301483]
[119.82025146 76.99267578]
[113.14005280 90.42304993]
[114.61179352 107.13263702]
[100.53233337 116.25102234]
[94.05283356 129.77937317]
[87.57334137 143.30770874]
[81.09384155 156.83605957]
[74.61434937 170.36441040]
[86.88487244 179.05590820]
[97.50991058 189.69622803]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 208]
[34 207]
[35 206]
[36 205]
[37 204]
[40 202]
[41 201]
[42 196]
[43 195]
[44 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
