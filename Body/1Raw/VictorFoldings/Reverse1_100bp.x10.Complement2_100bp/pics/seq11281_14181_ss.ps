%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[1.04183936 417.81628418]
[8.97991657 430.58963013]
[14.57915401 444.54739380]
[17.66939735 459.26547241]
[18.15673828 474.29656982]
[16.02636719 489.18389893]
[11.34302235 503.47506714]
[4.24902678 516.73577881]
[-5.04004192 528.56304932]
[-16.24189949 538.59747314]
[-29.01613235 546.53405762]
[-42.97454834 552.13171387]
[-57.69296646 555.22027588]
[-72.72411346 555.70593262]
[-87.61119843 553.57385254]
[-101.90183258 548.88891602]
[-115.16173553 541.79339600]
[-126.98795319 532.50299072]
[-137.02110291 521.29998779]
[-144.95628357 508.52487183]
[-150.55235291 494.56582642]
[-153.63925171 479.84704590]
[-154.12318420 464.81585693]
[-151.98944092 449.92901611]
[-147.30285645 435.63891602]
[-140.20585632 422.37982178]
[-130.91409302 410.55465698]
[-119.70996857 400.52276611]
[-106.93392944 392.58905029]
[-92.97425079 386.99453735]
[-78.25512695 383.90930176]
[-63.22387695 383.42709351]
[-48.33726883 385.56253052]
[-34.04769897 390.25073242]
[-26.97059250 377.02520752]
[-19.89348793 363.79968262]
[-12.81638241 350.57415771]
[-13.49885559 347.85525513]
[-13.14546108 344.70220947]
[-11.58543968 341.50817871]
[-8.79339027 338.72091675]
[-4.90395641 336.79055786]
[2.94779921 324.00970459]
[10.79955482 311.22885132]
[18.65130997 298.44802856]
[26.50306511 285.66717529]
[34.35482025 272.88632202]
[40.63218307 259.26303101]
[45.24618912 244.99028015]
[49.86019897 230.71754456]
[54.47420883 216.44482422]
[59.08821869 202.17208862]
[55.64097214 187.68188477]
[67.24807739 176.93080139]
[71.86208344 162.65808105]
[76.47609711 148.38534546]
[81.09010315 134.11260986]
[85.70411682 119.83987427]
[90.31812286 105.56713867]
[94.82575226 91.26045227]
[99.22675323 76.92060852]
[103.62774658 62.58076096]
[108.02874756 48.24091339]
[95.68296051 39.52088165]
[86.64913940 27.42821121]
[81.80192566 13.15470886]
[81.60409546 -1.89772987]
[86.06243896 -16.25480843]
[94.72833252 -28.51422691]
[106.74280548 -37.48264313]
[120.92173004 -42.29183578]
[135.87246704 -42.48274612]
[140.27346802 -56.82259369]
[144.67445374 -71.16244507]
[149.07545471 -85.50228882]
[153.47645569 -99.84213257]
[153.00262451 -108.96427155]
[158.05119324 -114.36183167]
[162.66520691 -128.63456726]
[157.49806213 -140.45249939]
[161.63491821 -152.24530029]
[172.34339905 -157.87156677]
[177.16938782 -172.07402039]
[169.86473083 -183.39022827]
[170.40341187 -196.65373230]
[178.36488342 -207.03143311]
[190.66477966 -210.87098694]
[195.70169067 -225.00001526]
[200.73861694 -239.12904358]
[205.77552795 -253.25807190]
[210.81243896 -267.38711548]
[215.84936523 -281.51614380]
[220.88627625 -295.64517212]
[225.92318726 -309.77420044]
[212.57067871 -316.65850830]
[200.25494385 -325.26119995]
[189.19575500 -335.42868042]
[179.59048462 -346.97952271]
[171.61054993 -359.70761108]
[165.39837646 -373.38577271]
[161.06478882 -387.76992798]
[158.68716431 -402.60333252]
[158.30792236 -417.62133789]
[159.93383789 -432.55584717]
[163.53587341 -447.14038086]
[169.04975891 -461.11465454]
[176.37709045 -474.22930908]
[185.38711548 -486.25024414]
[195.91902161 -496.96295166]
[207.78486633 -506.17626953]
[220.77287292 -513.72576904]
[234.65127563 -519.47668457]
[249.17239380 -523.32647705]
[264.07708740 -525.20635986]
[279.09933472 -525.08276367]
[293.97106934 -522.95794678]
[308.42691040 -518.86981201]
[322.20880127 -512.89135742]
[335.07089233 -505.12924194]
[346.78353882 -495.72195435]
[357.13778687 -484.83743286]
[365.94885254 -472.66989136]
[373.05944824 -459.43649292]
[378.34271240 -445.37341309]
[381.70431519 -430.73156738]
[383.08432007 -415.77233887]
[382.45806885 -400.76263428]
[379.83676147 -385.97033691]
[375.26715088 -371.65942383]
[368.83078003 -358.08529663]
[360.64254761 -345.49023438]
[350.84854126 -334.09893799]
[339.62359619 -324.11474609]
[327.16799927 -315.71585083]
[313.70404053 -309.05212402]
[299.47201538 -304.24246216]
[284.72589111 -301.37274170]
[269.72885132 -300.49414062]
[254.74850464 -301.62237549]
[240.05223083 -304.73727417]
[235.01530457 -290.60824585]
[229.97839355 -276.47921753]
[224.94148254 -262.35018921]
[219.90455627 -248.22116089]
[214.86764526 -234.09213257]
[209.83071899 -219.96310425]
[204.79380798 -205.83407593]
[212.64469910 -190.96119690]
[207.20256042 -174.69165039]
[191.37184143 -167.24803162]
[186.54585266 -153.04557800]
[190.88670349 -136.04193115]
[176.93794250 -124.02056122]
[172.32392883 -109.74782562]
[167.81629944 -95.44113922]
[163.41529846 -81.10128784]
[159.01431274 -66.76144409]
[154.61331177 -52.42159653]
[150.21231079 -38.08174896]
[162.48193359 -29.53672409]
[171.52186584 -17.60150146]
[176.43679810 -3.43733382]
[176.73348999 11.57275963]
[172.37030029 25.95904350]
[163.76249695 38.30897141]
[151.74273682 47.40588379]
[137.48056030 52.34885406]
[122.36859131 52.64191055]
[117.96759796 66.98175812]
[113.56659698 81.32160950]
[109.16559601 95.66145325]
[109.99919891 103.67878723]
[104.59085846 110.18115234]
[99.97684479 124.45388794]
[95.36283875 138.72662354]
[90.74883270 152.99934387]
[86.13481903 167.27207947]
[81.52081299 181.54481506]
[84.63803101 197.05589294]
[73.36095428 206.78608704]
[68.74694061 221.05882263]
[64.13293457 235.33155823]
[59.51892471 249.60429382]
[54.90491486 263.87701416]
[65.84893036 253.61892700]
[79.61406708 247.65898132]
[94.58320618 246.69734192]
[108.99779510 250.84698486]
[121.16442871 259.62042236]
[129.65376282 271.98696899]
[133.46849060 286.49377441]
[132.16047668 301.43664551]
[125.88335419 315.06005859]
[115.37458038 325.76358032]
[101.86869812 332.28979492]
[86.95236969 333.87194824]
[72.37795258 330.32421875]
[59.85763931 322.06335449]
[50.86229706 310.05987549]
[46.44868851 295.72390747]
[47.13566208 280.73809814]
[39.28390884 293.51892090]
[31.43215179 306.29977417]
[23.58039665 319.08062744]
[15.72864151 331.86145020]
[7.87688637 344.64230347]
[0.40914500 357.65124512]
[-6.66796064 370.87677002]
[-13.74506569 384.10229492]
[-20.82217216 397.32785034]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 210]
[35 209]
[36 208]
[37 207]
[42 206]
[43 205]
[44 204]
[45 203]
[46 202]
[47 201]
[48 184]
[49 183]
[50 182]
[51 181]
[52 180]
[54 178]
[55 177]
[56 176]
[57 175]
[58 174]
[59 173]
[60 171]
[61 170]
[62 169]
[63 168]
[72 159]
[73 158]
[74 157]
[75 156]
[76 155]
[78 154]
[79 153]
[82 151]
[83 150]
[87 147]
[88 146]
[89 145]
[90 144]
[91 143]
[92 142]
[93 141]
[94 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
