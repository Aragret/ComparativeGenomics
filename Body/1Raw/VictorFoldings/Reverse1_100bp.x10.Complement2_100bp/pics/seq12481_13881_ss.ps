%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUUCGAAUCCCUCUCGACCCAACAAACCCAACACCGAGUCACAGUCAAGCUCUAUUAUUGAAGAACCAGAUCCGUGUACUUAUAACAACACCCCUxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[139.08181763 608.65142822]
[141.62197876 593.79168701]
[147.64514160 579.97198486]
[156.80111694 567.99566650]
[168.55758667 558.55908203]
[182.23104858 552.21087646]
[179.34577942 537.49102783]
[176.46051025 522.77111816]
[173.57522583 508.05123901]
[170.47111511 493.37591553]
[167.14886475 478.74847412]
[163.50077820 464.19885254]
[159.52868652 449.73431396]
[155.55657959 435.26980591]
[151.58448792 420.80526733]
[147.61239624 406.34075928]
[142.80987549 400.72314453]
[143.69055176 391.63125610]
[139.93424988 377.10919189]
[131.40830994 389.45053101]
[116.67835999 392.28396606]
[104.18235779 383.98635864]
[101.07860565 369.31097412]
[109.14505768 356.66455078]
[123.76088715 353.29150391]
[136.55293274 361.12332153]
[134.10719299 346.32406616]
[131.66146851 331.52478027]
[129.21574402 316.72552490]
[117.79401398 310.76113892]
[111.80359650 299.13372803]
[113.63067627 285.98562622]
[122.83016968 276.14776611]
[120.60505676 261.31372070]
[118.37993622 246.47967529]
[116.04444885 231.66259766]
[113.59872437 216.86332703]
[111.15299225 202.06405640]
[108.70726776 187.26478577]
[106.04147339 172.50357056]
[103.15619659 157.78367615]
[100.27092743 143.06378174]
[95.89952087 137.10453796]
[97.45398712 128.10334778]
[94.78819275 113.34213257]
[85.90407562 102.54564667]
[90.45059204 89.32366180]
[87.78479004 74.56244659]
[77.71810150 62.35702896]
[83.07034302 48.45729065]
[79.20603943 33.96359634]
[74.16912079 19.83456612]
[69.13220978 5.70553684]
[57.21014786 -4.69519043]
[60.22443771 -19.28159904]
[55.18752289 -33.41062927]
[50.15060806 -47.53965759]
[45.11368942 -61.66868973]
[39.28432083 -68.70120239]
[40.10866928 -76.04573822]
[35.28267288 -90.24819946]
[30.45667458 -104.45065308]
[25.63067818 -118.65310669]
[20.80467987 -132.85556030]
[6.90749025 -139.89160156]
[2.21556187 -154.36366272]
[9.00899601 -167.56915283]
[-2.75688863 -178.14622498]
[0.47423682 -192.68614197]
[-5.24310541 -178.81848145]
[-17.95893860 -170.86187744]
[-32.93057251 -171.78393555]
[-44.57395554 -181.24076843]
[-48.54639435 -195.70520020]
[-43.36627197 -209.78234863]
[-30.96563911 -218.22180176]
[-15.96962833 -217.87583923]
[-3.97070622 -208.87254333]
[-7.07481623 -223.54785156]
[-10.17892647 -238.22315979]
[-13.28303623 -252.89845276]
[-16.38714600 -267.57376099]
[-22.09838486 -253.70358276]
[-33.54177475 -244.00570679]
[-48.16082764 -240.64665222]
[-62.68961716 -244.37684631]
[-73.88237000 -254.36294556]
[-79.23859406 -268.37405396]
[-77.56169891 -283.28002930]
[-69.22631073 -295.75082397]
[-56.09457016 -303.00048828]
[-41.10014343 -303.40936279]
[-27.59282494 -296.88616943]
[-18.59017563 -284.88812256]
[-19.25996017 -299.87316895]
[-19.92974472 -314.85818481]
[-20.59953117 -329.84323120]
[-34.78991699 -335.37069702]
[-45.50064468 -346.19659424]
[-50.87601471 -360.44531250]
[-49.98471069 -375.64810181]
[-42.98115921 -389.17105103]
[-31.07876587 -398.67120361]
[-16.33969307 -402.50262451]
[-1.31757450 -400.00143433]
[11.38491726 -391.60104370]
[19.56699944 -378.75686646]
[21.81107712 -363.69418335]
[17.72834778 -349.02273560]
[8.02617168 -337.28445435]
[-5.61449194 -330.51303101]
[-4.94470692 -315.52798462]
[-4.27492142 -300.54293823]
[-3.60513639 -285.55789185]
[-1.71184421 -270.67785645]
[1.39226592 -256.00256348]
[4.49637604 -241.32727051]
[7.60048628 -226.65196228]
[10.70459652 -211.97665405]
[14.67669201 -197.51213074]
[26.09738922 -187.95091248]
[23.21145058 -172.39514160]
[36.64396667 -166.06243896]
[41.74053192 -151.72787476]
[35.00713348 -137.68156433]
[39.83313370 -123.47910309]
[44.65913010 -109.27664948]
[49.48512650 -95.07419586]
[54.31112671 -80.87174225]
[59.24271774 -66.70560455]
[64.27963257 -52.57657623]
[69.31655121 -38.44754410]
[74.35346985 -24.31851578]
[85.91525269 -14.92839146]
[83.26123810 0.66862053]
[88.29814911 14.79765034]
[93.33506775 28.92667961]
[97.14203644 14.41782093]
[107.18719482 3.27803373]
[121.22641754 -2.00402594]
[136.12332153 -0.24833222]
[148.54988098 8.15288830]
[155.72998047 21.32278252]
[156.05957031 36.31916046]
[149.46502686 49.79179382]
[137.41957092 58.73086548]
[122.61418915 61.13935852]
[108.35645294 56.47920990]
[97.83155823 45.79149246]
[107.70758057 56.94108963]
[102.54601288 71.89665222]
[105.21180725 86.65786743]
[114.09592438 97.45435333]
[109.54940796 110.67633820]
[112.21520996 125.43755341]
[114.99081421 140.17851257]
[117.87609100 154.89840698]
[120.76136017 169.61830139]
[124.81169891 174.84384155]
[125.51017761 180.48379517]
[123.50653839 184.81906128]
[125.95226288 199.61833191]
[128.39799500 214.41760254]
[130.84371948 229.21687317]
[135.33047485 237.17343140]
[133.21397400 244.25454712]
[135.43910217 259.08859253]
[137.66421509 273.92263794]
[151.92004395 284.06121826]
[154.38412476 301.03894043]
[144.01501465 314.27978516]
[146.46073914 329.07904053]
[148.90646362 343.87832642]
[151.35220337 358.67761230]
[154.45631409 373.35290527]
[158.21261597 387.87496948]
[162.07691956 402.36865234]
[166.04901123 416.83319092]
[170.02110291 431.29769897]
[173.99320984 445.76223755]
[177.96530151 460.22674561]
[181.68037415 463.89352417]
[183.44134521 468.18914795]
[183.33593750 472.26394653]
[181.77632141 475.42620850]
[185.09858704 490.05364990]
[189.30270386 495.15631104]
[190.16879272 500.77294922]
[188.29512024 505.16595459]
[191.18038940 519.88586426]
[194.06567383 534.60571289]
[196.95094299 549.32562256]
[212.00917053 550.04211426]
[226.45816040 554.34210205]
[239.45788574 561.97558594]
[250.25256348 572.49884033]
[258.21459961 585.29998779]
[262.88107300 599.63482666]
[263.98068237 614.66992188]
[261.44952393 629.53118896]
[255.43475342 643.35455322]
[246.28604126 655.33636475]
[234.53529358 664.78009033]
[220.86567688 671.13659668]
[206.07192993 674.03631592]
[191.01414490 673.31072998]
[176.56774902 669.00201416]
[163.57264709 661.36059570]
[152.78436279 650.83081055]
[144.83010864 638.02484131]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 192]
[7 191]
[8 190]
[9 189]
[10 186]
[11 185]
[12 181]
[13 180]
[14 179]
[15 178]
[16 177]
[18 176]
[19 175]
[26 174]
[27 173]
[28 172]
[29 171]
[33 168]
[34 167]
[35 166]
[36 164]
[37 163]
[38 162]
[39 161]
[40 158]
[41 157]
[42 156]
[44 155]
[45 154]
[47 152]
[48 151]
[50 149]
[51 137]
[52 136]
[53 135]
[55 133]
[56 132]
[57 131]
[58 130]
[60 129]
[61 128]
[62 127]
[63 126]
[64 125]
[67 122]
[69 120]
[78 119]
[79 118]
[80 117]
[81 116]
[82 115]
[94 114]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
