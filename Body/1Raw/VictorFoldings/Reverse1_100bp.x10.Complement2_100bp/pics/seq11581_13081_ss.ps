%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[109.60791779 552.40936279]
[106.71552277 537.64044189]
[106.76027679 522.59106445]
[109.74045563 507.83963013]
[115.54151917 493.95315552]
[123.94048309 481.46542358]
[134.61451721 470.85641479]
[147.15333557 462.53390503]
[161.07498169 456.81777954]
[158.18971252 442.09786987]
[155.30444336 427.37799072]
[152.41915894 412.65811157]
[149.53388977 397.93820190]
[146.64862061 383.21832275]
[143.76335144 368.49841309]
[140.87808228 353.77853394]
[130.83714294 342.77722168]
[135.77548218 327.74645996]
[132.89021301 313.02658081]
[121.29595947 307.40490723]
[114.96200562 295.96099854]
[116.39681244 282.76434326]
[125.29931641 272.65692139]
[122.63351440 257.89572144]
[119.96772003 243.13449097]
[117.30192566 228.37327576]
[105.26074219 215.60704041]
[111.63110352 198.32987976]
[108.74582672 183.61000061]
[98.70490265 172.60867310]
[103.64323425 157.57792664]
[100.75795746 142.85803223]
[97.87268829 128.13813782]
[94.98741913 113.41825104]
[85.94354248 102.75523376]
[90.29269409 89.46702576]
[87.40741730 74.74713135]
[84.52214813 60.02724075]
[81.63687134 45.30735016]
[71.38748932 37.47708893]
[69.28738403 25.15745926]
[75.92472076 15.04448414]
[73.25892639 0.28326690]
[70.59313202 -14.47795010]
[56.04175186 -24.18757057]
[53.07327652 -41.08440399]
[63.04356384 -54.62811661]
[60.15829086 -69.34800720]
[49.91099167 -81.40219879]
[55.05569458 -95.38008118]
[52.17042160 -110.09997559]
[49.28514862 -124.81986237]
[46.31660843 -127.98873138]
[44.67586899 -131.57655334]
[44.33160019 -135.11448669]
[45.10340500 -138.19197083]
[46.69378662 -140.50039673]
[44.68977356 -155.36592102]
[42.68576050 -170.23144531]
[40.68174362 -185.09698486]
[38.67773056 -199.96250916]
[35.57361984 -214.63780212]
[31.38661003 -229.04159546]
[27.19959831 -243.44537354]
[12.44741535 -240.66532898]
[-2.50421262 -239.32208252]
[-17.51568413 -239.42816162]
[-32.44683456 -240.98257446]
[-47.15825653 -243.97080994]
[-61.51258850 -248.36497498]
[-75.37580872 -254.12403870]
[-88.61846161 -261.19421387]
[-101.11692047 -269.50952148]
[-112.75447845 -278.99227905]
[-123.42247772 -289.55395508]
[-133.02130127 -301.09597778]
[-141.46134949 -313.51052856]
[-148.66380310 -326.68173218]
[-154.56140137 -340.48657227]
[-159.09910583 -354.79617310]
[-162.23451233 -369.47692871]
[-163.93838501 -384.39178467]
[-164.19479370 -399.40142822]
[-163.00134277 -414.36575317]
[-160.36917114 -429.14505005]
[-156.32287598 -443.60128784]
[-150.90022278 -457.59951782]
[-144.15184021 -471.00903320]
[-136.14074707 -483.70462036]
[-126.94174194 -495.56771851]
[-116.64070892 -506.48764038]
[-105.33383179 -516.36236572]
[-93.12667847 -525.09967041]
[-80.13322449 -532.61804199]
[-66.47480774 -538.84722900]
[-52.27893066 -543.72912598]
[-37.67815781 -547.21807861]
[-22.80880928 -549.28155518]
[-7.80971956 -549.90032959]
[7.17906427 -549.06854248]
[22.01759338 -546.79400635]
[36.56732178 -543.09790039]
[50.69239426 -538.01483154]
[64.26093292 -531.59216309]
[77.14624786 -523.88995361]
[89.22801971 -514.98004150]
[100.39345551 -504.94570923]
[110.53829956 -493.88052368]
[119.56781769 -481.88790894]
[127.39772034 -469.07977295]
[133.95489502 -455.57574463]
[139.17810059 -441.50186157]
[143.01858521 -426.98959351]
[145.44049072 -412.17440796]
[146.42120361 -397.19464111]
[145.95156860 -382.19012451]
[144.03594971 -367.30102539]
[140.69226074 -352.66629028]
[135.95170593 -338.42260742]
[129.85855103 -324.70294189]
[122.46968842 -311.63540649]
[113.85410309 -299.34204102]
[104.09224701 -287.93756104]
[93.27526093 -277.52853394]
[81.50414276 -268.21206665]
[68.88880157 -260.07519531]
[55.54702377 -253.19389343]
[41.60338211 -247.63238525]
[45.79039383 -233.22860718]
[49.97740173 -218.82481384]
[55.09427643 -232.92509460]
[66.51190186 -242.65328979]
[81.24573517 -245.46649170]
[95.44438934 -240.62933350]
[105.39637756 -229.40623474]
[108.50026703 -214.73088074]
[103.94470978 -200.43939209]
[92.92051697 -190.26750183]
[78.30938721 -186.87414551]
[63.93063354 -191.14631653]
[53.54325867 -201.96652222]
[55.54727173 -187.10099792]
[57.55128860 -172.23545837]
[59.55530167 -157.36993408]
[61.55931473 -142.50440979]
[64.00504303 -127.70513916]
[66.89031219 -112.98524475]
[69.77558899 -98.26535797]
[79.81651306 -87.26403046]
[74.87818146 -72.23328400]
[77.76345062 -57.51338959]
[89.35769653 -51.89173889]
[95.69165802 -40.44783020]
[94.25685120 -27.25117111]
[85.35434723 -17.14374542]
[88.02014160 -2.38252854]
[90.68593597 12.37868881]
[102.72712708 25.14492416]
[96.35676575 42.42207718]
[99.24204254 57.14196777]
[102.12731171 71.86186218]
[105.01258087 86.58174896]
[114.05645752 97.24476624]
[109.70730591 110.53297424]
[112.59258270 125.25286865]
[115.47785187 139.97276306]
[118.36312866 154.69265747]
[128.61042786 166.74684143]
[123.46572113 180.72471619]
[126.35099030 195.44461060]
[136.60037231 203.27487183]
[138.70048523 215.59449768]
[132.06314087 225.70747375]
[134.72894287 240.46870422]
[137.39472961 255.22991943]
[140.06053162 269.99111938]
[154.61190796 279.70074463]
[157.58038330 296.59759521]
[147.61010742 310.14129639]
[150.49537659 324.86117554]
[160.74267578 336.91537476]
[155.59796143 350.89324951]
[158.48324585 365.61315918]
[161.36851501 380.33303833]
[164.25378418 395.05294800]
[167.13905334 409.77282715]
[170.02432251 424.49270630]
[172.90960693 439.21261597]
[175.79487610 453.93249512]
[190.84428406 453.96994019]
[205.59716797 456.94296265]
[219.48645020 462.73727417]
[231.97825623 471.13018799]
[242.59246826 481.79907227]
[250.92106628 494.33383179]
[256.64395142 508.25271606]
[259.54110718 523.02069092]
[259.50122070 538.07006836]
[256.52581787 552.82244873]
[250.72926331 566.71081543]
[242.33433533 579.20129395]
[231.66374207 589.81372070]
[219.12760925 598.14031982]
[205.20782471 603.86096191]
[190.43939209 606.75573730]
[175.38999939 606.71343994]
[160.63807678 603.73559570]
[146.75067139 597.93682861]
[134.26158142 589.53985596]
[123.65083313 578.86755371]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 189]
[10 188]
[11 187]
[12 186]
[13 185]
[14 184]
[15 183]
[16 182]
[18 180]
[19 179]
[23 176]
[24 175]
[25 174]
[26 173]
[28 170]
[29 169]
[31 167]
[32 166]
[33 165]
[34 164]
[36 162]
[37 161]
[38 160]
[39 159]
[42 157]
[43 156]
[44 155]
[47 151]
[48 150]
[50 148]
[51 147]
[52 146]
[57 145]
[58 144]
[59 143]
[60 142]
[61 141]
[62 130]
[63 129]
[64 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
