%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[86.88748932 519.87292480]
[75.44196320 510.15283203]
[65.15673828 499.21234131]
[56.16115189 487.18905640]
[48.56833649 474.23419189]
[42.47377777 460.51062012]
[37.95412827 446.19094849]
[35.06621933 431.45526123]
[33.84637451 416.48892212]
[34.30993271 401.48007202]
[36.45106125 386.61752319]
[40.24283981 372.08816528]
[45.63757706 358.07470703]
[52.56742859 344.75338745]
[60.94525146 332.29177856]
[70.66567993 320.84652710]
[81.60646057 310.56164551]
[93.63002014 301.56640625]
[106.58513641 293.97399902]
[120.30889130 287.87985229]
[134.62869263 283.36062622]
[131.74342346 268.64071655]
[128.85813904 253.92083740]
[125.97286987 239.20094299]
[115.93194580 228.19961548]
[120.87027740 213.16886902]
[117.98500824 198.44897461]
[108.12419891 191.44247437]
[105.59996033 179.20271301]
[112.29967499 168.18106079]
[109.63388062 153.41984558]
[106.96807861 138.65863037]
[102.56708527 124.31877899]
[96.49324799 110.60351562]
[90.31748199 96.93384552]
[84.04012299 83.31052399]
[77.76275635 69.68721008]
[62.48431396 59.40856171]
[64.77385712 42.00957108]
[58.29436111 28.48122406]
[51.81486511 14.95287800]
[45.33536911 1.42453289]
[38.25826263 -11.80099487]
[30.59766579 -24.69732094]
[22.93706703 -37.59364700]
[15.27647018 -50.48997498]
[7.61587286 -63.38630295]
[-0.04472456 -76.28263092]
[-18.56166077 -74.00313568]
[-36.16171646 -80.03733063]
[-49.31241989 -93.12693787]
[-55.39498138 -110.60241699]
[-53.22570419 -128.92726135]
[-43.28605270 -144.41371155]
[-51.70067215 -156.83120728]
[-60.11529160 -169.24870300]
[-68.52990723 -181.66619873]
[-81.79719543 -174.63581848]
[-95.74683380 -169.08111572]
[-110.21527863 -165.06721497]
[-125.03289032 -162.64118958]
[-140.02593994 -161.83148193]
[-155.01864624 -162.64758301]
[-169.83523560 -165.07992554]
[-184.30195618 -169.09997559]
[-198.24923706 -174.66062927]
[-211.51351929 -181.69667053]
[-223.93930054 -190.12562561]
[-235.38090515 -199.84863281]
[-245.70416260 -210.75172424]
[-254.78807068 -222.70706177]
[-262.52609253 -235.57447815]
[-268.82751465 -249.20309448]
[-273.61843872 -263.43313599]
[-276.84274292 -278.09777832]
[-278.46258545 -293.02502441]
[-278.45898438 -308.03994751]
[-276.83197021 -322.96643066]
[-273.60064697 -337.62948608]
[-268.80285645 -351.85723877]
[-262.49490356 -365.48281860]
[-254.75070190 -378.34652710]
[-245.66107178 -390.29751587]
[-235.33258057 -401.19564819]
[-223.88632202 -410.91317749]
[-211.45648193 -419.33615112]
[-198.18882751 -426.36581421]
[-184.23887634 -431.91976929]
[-169.77021790 -435.93289185]
[-154.95248413 -438.35812378]
[-139.95938110 -439.16702271]
[-124.96672058 -438.35009766]
[-110.15027618 -435.91696167]
[-95.68376160 -431.89614868]
[-81.73678589 -426.33474731]
[-68.47287750 -419.29797363]
[-56.04754257 -410.86837769]
[-44.60646820 -401.14474487]
[-34.28379059 -390.24108887]
[-25.20053864 -378.28524780]
[-17.46321106 -365.41741943]
[-11.16252041 -351.78848267]
[-6.37234116 -337.55816650]
[-3.14883590 -322.89337158]
[-1.52979767 -307.96600342]
[-1.53420925 -292.95111084]
[-3.16201901 -278.02471924]
[-6.39414167 -263.36181641]
[-11.19268227 -249.13433838]
[-17.50137901 -235.50907898]
[-25.24626923 -222.64579773]
[-34.33654404 -210.69531250]
[-44.66562653 -199.79772949]
[-56.11241531 -190.08082581]
[-47.69779587 -177.66333008]
[-39.28317642 -165.24583435]
[-30.86855888 -152.82833862]
[-19.72582436 -155.97640991]
[-8.12806034 -155.88095093]
[2.99822593 -152.53878784]
[12.76117706 -146.20657349]
[20.37507439 -137.38108826]
[25.22356606 -126.76025391]
[26.90955925 -115.18798065]
[25.28771400 -103.58710480]
[20.47691154 -92.88577271]
[12.85160255 -83.94322968]
[20.51219940 -71.04689789]
[28.17279625 -58.15057373]
[35.83339310 -45.25424576]
[43.49399185 -32.35791779]
[51.15459061 -19.46159172]
[55.89674759 -33.69226074]
[69.25032043 -40.52469635]
[83.56576538 -36.04497147]
[90.64255524 -22.81927490]
[86.42678070 -8.42388535]
[73.33341980 -1.10513735]
[58.86371231 -5.05496311]
[65.34320831 8.47338295]
[71.82270813 22.00172806]
[78.30220032 35.53007507]
[89.60338593 39.84398270]
[95.11227417 51.06164169]
[91.38607788 63.40985107]
[97.66343689 77.03316498]
[103.94079590 90.65648651]
[109.90612793 96.07749176]
[110.20851898 104.52967834]
[116.28234863 118.24494934]
[117.60324860 103.30321503]
[123.89209747 89.68520355]
[134.41009521 78.99073029]
[147.92160034 72.47617340]
[162.83927917 70.90686798]
[177.41062927 74.46715546]
[189.92382812 82.73879242]
[198.90882874 94.75003052]
[203.31007385 109.08979797]
[202.61053467 124.07347870]
[196.89236450 137.94079590]
[186.82736206 149.06263733]
[173.59791565 156.13243103]
[158.75822449 158.31961060]
[144.05165100 155.36721802]
[131.20590210 147.62213135]
[121.72930145 135.99282837]
[124.39509583 150.75404358]
[127.06089020 165.51527405]
[139.27854919 179.29243469]
[132.70489502 195.56370544]
[135.59016418 210.28359985]
[145.83746338 222.33778381]
[140.69276428 236.31567383]
[143.57803345 251.03556824]
[146.46330261 265.75546265]
[149.34858704 280.47534180]
[164.31483459 279.25415039]
[179.32371521 279.71636963]
[194.18646240 281.85617065]
[208.71615601 285.64663696]
[222.73010254 291.04013062]
[236.05201721 297.96878052]
[248.51440430 306.34548950]
[259.96051025 316.06488037]
[270.24639893 327.00473022]
[279.24270630 339.02749634]
[286.83627319 351.98193359]
[292.93167114 365.70513916]
[297.45217896 380.02453613]
[300.34094238 394.76000977]
[301.56170654 409.72631836]
[301.09902954 424.73516846]
[298.95880127 439.59786987]
[295.16787720 454.12744141]
[289.77398682 468.14123535]
[282.84494019 481.46295166]
[274.46786499 493.92507935]
[264.74810791 505.37088013]
[253.80793762 515.65643311]
[241.78492737 524.65240479]
[228.83026123 532.24560547]
[215.10687256 538.34057617]
[200.78733826 542.86065674]
[186.05175781 545.74896240]
[171.08543396 546.96929932]
[156.07658386 546.50616455]
[141.21395874 544.36547852]
[126.68448639 540.57415771]
[112.67087555 535.17980957]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 177]
[22 176]
[23 175]
[24 174]
[26 172]
[27 171]
[30 169]
[31 168]
[32 167]
[33 150]
[34 149]
[35 147]
[36 146]
[37 145]
[39 142]
[40 141]
[41 140]
[42 139]
[43 132]
[44 131]
[45 130]
[46 129]
[47 128]
[48 127]
[54 117]
[55 116]
[56 115]
[57 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
