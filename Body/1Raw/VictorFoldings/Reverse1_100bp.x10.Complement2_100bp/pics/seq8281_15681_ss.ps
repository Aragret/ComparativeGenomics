%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[79.30386353 486.30554199]
[67.28379059 477.28469849]
[56.74252701 466.57305908]
[47.91557312 454.40991211]
[41.00012589 441.06695557]
[36.15067673 426.84231567]
[33.47556305 412.05374146]
[33.03455353 397.03164673]
[34.83749771 382.11163330]
[38.84411621 367.62701416]
[44.96489716 353.90133667]
[53.06310654 341.24130249]
[62.95782089 329.92968750]
[74.42799377 320.21926880]
[87.21737671 312.32690430]
[101.04024506 306.42892456]
[115.58779144 302.65713501]
[114.02727509 287.73852539]
[112.46675110 272.81991577]
[110.90622711 257.90130615]
[101.70983124 250.04302979]
[100.28763580 237.62686157]
[107.94393158 227.24688721]
[106.60569763 212.30670166]
[104.93415833 197.40013123]
[102.93014526 182.53459167]
[93.56183624 170.95512390]
[99.38605499 156.24496460]
[97.38204193 141.37944031]
[95.37802887 126.51390839]
[93.37401581 111.64837646]
[88.59821320 125.86779022]
[81.00745392 138.80534363]
[70.92450714 149.91093445]
[58.77809906 158.71235657]
[45.08470535 164.83534241]
[30.42657661 168.01954651]
[15.42698002 168.12959290]
[0.72370803 165.16079712]
[-13.05804920 159.23937988]
[-25.33228302 150.61712646]
[-35.57708740 139.66067505]
[-43.35684967 126.83587646]
[-48.34077072 112.68806458]
[-50.31692886 97.81880951]
[-49.20129776 82.86035919]
[-45.04131699 68.44874573]
[-38.01386642 55.19676590]
[-28.41776085 43.66790009]
[-16.66102982 34.35235977]
[-3.24357629 27.64624596]
[11.26408291 23.83470917]
[26.24507523 23.07981682]
[41.06240082 25.41366386]
[55.08602142 30.73701859]
[67.71964264 38.82352829]
[78.42607880 49.32934570]
[86.75008392 61.80776596]
[92.33772278 75.72819519]
[94.95140839 90.49890137]
[99.13842010 76.09511566]
[103.32543182 61.69133759]
[107.51244354 47.28755569]
[95.94751740 35.47043228]
[91.94301605 19.52491570]
[96.50005341 3.82618237]
[108.28392029 -7.36740255]
[124.01313019 -11.06934357]
[127.98522949 -25.53386688]
[131.95732117 -39.99839020]
[135.92942810 -54.46291351]
[139.68572998 -68.98497772]
[143.22538757 -83.56134796]
[146.76506042 -98.13772583]
[148.99018860 -112.97177124]
[149.88299561 -127.94517517]
[150.77581787 -142.91857910]
[151.66862488 -157.89198303]
[152.56144714 -172.86538696]
[153.45426941 -187.83879089]
[151.11643982 -192.50588989]
[150.83113098 -197.13966370]
[152.24194336 -200.96388245]
[154.73603821 -203.45623779]
[156.29656982 -218.37484741]
[157.85708618 -233.29344177]
[159.41760254 -248.21205139]
[160.97813416 -263.13064575]
[162.53865051 -278.04925537]
[164.09918213 -292.96786499]
[149.59141541 -296.90753174]
[135.90354919 -303.12353516]
[123.39012909 -311.45483398]
[112.37528229 -321.68563843]
[103.14432526 -333.55093384]
[95.93634796 -346.74340820]
[90.93806458 -360.92132568]
[88.27893829 -375.71743774]
[88.02785492 -390.74850464]
[90.19130707 -405.62518311]
[94.71326447 -419.96215820]
[101.47659302 -433.38800049]
[110.30610657 -445.55499268]
[120.97310638 -456.14797974]
[133.20127869 -464.89257812]
[146.67390442 -471.56225586]
[161.04197693 -475.98428345]
[175.93336487 -478.04412842]
[190.96232605 -477.68838501]
[205.73957825 -474.92633057]
[219.88235474 -469.82943726]
[233.02430725 -462.52978516]
[244.82505798 -453.21646118]
[254.97892761 -442.13064575]
[263.22290039 -429.55950928]
[269.34344482 -415.82870483]
[273.18200684 -401.29388428]
[274.63919067 -386.33148193]
[273.67721558 -371.32913208]
[270.32104492 -356.67538452]
[264.65756226 -342.74984741]
[256.83346558 -329.91317749]
[247.05146790 -318.49789429]
[235.56491089 -308.79968262]
[222.67132568 -301.06976318]
[208.70469666 -295.50836182]
[194.02677917 -292.25949097]
[179.01777649 -291.40734863]
[177.45726013 -276.48873901]
[175.89674377 -261.57012939]
[174.33621216 -246.65153503]
[172.77569580 -231.73292542]
[171.21516418 -216.81431580]
[169.65464783 -201.89572144]
[168.42767334 -186.94598389]
[167.53485107 -171.97257996]
[166.64204407 -156.99917603]
[165.74922180 -142.02577209]
[164.85639954 -127.05236053]
[163.96359253 -112.07895660]
[172.82858276 -124.17903137]
[186.02476501 -131.31071472]
[201.00413513 -132.09701538]
[214.87443542 -126.38607025]
[224.95751953 -115.28060150]
[229.30650330 -100.92489624]
[227.08166504 -86.09080505]
[218.71258545 -73.64257812]
[205.81520081 -65.98375702]
[190.87979126 -64.59313965]
[176.79016113 -69.73924255]
[166.26679993 -80.42842865]
[161.34144592 -94.59805298]
[157.80177307 -80.02167511]
[154.26210022 -65.44530487]
[155.93774414 -60.97302628]
[154.82173157 -55.40063858]
[150.39395142 -50.49081802]
[146.42184448 -36.02629471]
[142.44975281 -21.56177139]
[138.47766113 -7.09724760]
[148.69425964 1.96575880]
[154.03491211 14.60720444]
[153.40486145 28.38225937]
[146.87010193 40.60008240]
[135.65563965 48.84945297]
[121.91622925 51.47456741]
[117.72921753 65.87834930]
[113.54220581 80.28212738]
[109.35519409 94.68591309]
[108.23954010 109.64436340]
[110.24355316 124.50989532]
[112.24757385 139.37542725]
[114.25158691 154.24095154]
[123.76323700 166.88369751]
[117.79567719 180.53057861]
[119.79969025 195.39610291]
[122.99156952 199.52636719]
[124.16286469 204.01872253]
[123.51399231 208.04290771]
[121.54588318 210.96846008]
[122.88411713 225.90864563]
[133.82391357 240.72088623]
[125.82482910 256.34078979]
[127.38535309 271.25939941]
[128.94587708 286.17800903]
[130.50639343 301.09661865]
[145.51957703 301.77627563]
[160.26376343 304.68606567]
[174.40954590 309.76092529]
[187.64091492 316.88754272]
[199.66227722 325.90667725]
[210.20506287 336.61682129]
[219.03375244 348.77871704]
[225.95109558 362.12066650]
[230.80258179 376.34463501]
[233.47979736 391.13281250]
[233.92294312 406.15484619]
[232.12213135 421.07510376]
[228.11756897 435.56033325]
[221.99874878 449.28686523]
[213.90234375 461.94805908]
[204.00923157 473.26104736]
[192.54045105 482.97314453]
[179.75218201 490.86730957]
[165.93016052 496.76724243]
[151.38314819 500.54110718]
[136.43614197 502.10461426]
[121.42304993 501.42279053]
[106.67928314 498.51092529]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 187]
[18 186]
[19 185]
[20 184]
[23 182]
[24 181]
[25 177]
[26 176]
[28 174]
[29 173]
[30 172]
[31 171]
[60 170]
[61 169]
[62 168]
[63 167]
[68 161]
[69 160]
[70 159]
[71 158]
[72 155]
[73 154]
[74 153]
[75 140]
[76 139]
[77 138]
[78 137]
[79 136]
[80 135]
[84 134]
[85 133]
[86 132]
[87 131]
[88 130]
[89 129]
[90 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
