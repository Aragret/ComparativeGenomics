%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[-14.22578430 376.67523193]
[-12.53665352 391.59481812]
[-12.47054291 406.60955811]
[-14.02822876 421.54345703]
[-17.19144630 436.22137451]
[-21.92311096 450.47125244]
[-28.16774368 464.12597656]
[-35.85213089 477.02548218]
[-44.88617706 489.01852417]
[-55.16396332 499.96450806]
[-66.56498718 509.73507690]
[-78.95557404 518.21569824]
[-92.19045258 525.30688477]
[-106.11445618 530.92553711]
[-120.56433105 535.00579834]
[-135.37065125 537.49981689]
[-150.35983276 538.37829590]
[-165.35612488 537.63098145]
[-180.18370056 535.26666260]
[-194.66873169 531.31304932]
[-208.64138794 525.81646729]
[-221.93782043 518.84136963]
[-234.40216064 510.46954346]
[-245.88825989 500.79913330]
[-256.26144409 489.94354248]
[-265.40011597 478.03002930]
[-273.19711304 465.19824219]
[-279.56100464 451.59869385]
[-284.41720581 437.39077759]
[-287.70877075 422.74111938]
[-289.39709473 407.82144165]
[-289.46240234 392.80667114]
[-287.90390015 377.87289429]
[-284.73989868 363.19512939]
[-280.00747681 348.94552612]
[-273.76208496 335.29113770]
[-266.07702637 322.39202881]
[-257.04232788 310.39947510]
[-246.76394653 299.45404053]
[-235.36239624 289.68408203]
[-222.97135925 281.20416260]
[-209.73609924 274.11367798]
[-195.81178284 268.49575806]
[-181.36169434 264.41629028]
[-166.55523682 261.92306519]
[-151.56600952 261.04537964]
[-136.56976318 261.79345703]
[-121.74230194 264.15859985]
[-107.25748444 268.11300659]
[-93.28514099 273.61032104]
[-79.98907471 280.58615112]
[-67.52519226 288.95864868]
[-57.86437988 277.48394775]
[-48.20357132 266.00924683]
[-38.54275894 254.53454590]
[-28.88194847 243.05984497]
[-19.22113800 231.58514404]
[-21.37384605 214.90567017]
[-10.58470535 201.56741333]
[6.84965277 200.13127136]
[16.33855057 188.51400757]
[25.82744980 176.89674377]
[27.62415504 169.72781372]
[35.54513168 165.17854309]
[45.20594406 153.70384216]
[54.86675262 142.22914124]
[64.52756500 130.75444031]
[66.80573273 116.03508759]
[81.61267090 110.46147156]
[91.27348328 98.98677063]
[91.27118683 95.93890381]
[92.37783051 92.82283783]
[94.62081909 90.04930878]
[97.87541962 88.03340912]
[101.86701965 87.13893890]
[112.19368744 76.25960541]
[116.08256531 60.92378998]
[130.45635986 57.01954269]
[140.78303528 46.14020538]
[151.10969543 35.26087189]
[150.33378601 17.78468132]
[162.20358276 5.39827824]
[179.02136230 5.42849636]
[189.18492126 -5.60338116]
[199.34846497 -16.63525772]
[209.51200867 -27.66713524]
[209.76478577 -40.56282806]
[218.45713806 -49.54206848]
[230.53735352 -50.17057037]
[240.86402893 -61.04990387]
[251.19068909 -71.92923737]
[260.24069214 -83.89157104]
[267.90127563 -96.78790283]
[275.56188965 -109.68422699]
[283.22247314 -122.58055878]
[290.88308716 -135.47688293]
[298.54367065 -148.37321472]
[306.20428467 -161.26953125]
[294.30999756 -170.43923950]
[283.60775757 -180.97581482]
[274.25363159 -192.72560120]
[266.38400269 -205.51727295]
[260.11367798 -219.16426086]
[255.53408813 -233.46755981]
[252.71197510 -248.21859741]
[251.68853760 -263.20227051]
[252.47868347 -278.20001221]
[255.07089233 -292.99319458]
[259.42736816 -307.36602783]
[265.48455811 -321.10894775]
[273.15414429 -334.02151489]
[282.32431030 -345.91546631]
[292.86126709 -356.61730957]
[304.61141968 -365.97100830]
[317.40338135 -373.84011841]
[331.05059814 -380.10995483]
[345.35406494 -384.68902588]
[360.10522461 -387.51055908]
[375.08892822 -388.53344727]
[390.08663940 -387.74273682]
[404.87973022 -385.14999390]
[419.25241089 -380.79296875]
[432.99508667 -374.73526001]
[445.90737915 -367.06518555]
[457.80096436 -357.89459229]
[468.50241089 -347.35720825]
[477.85568237 -335.60671997]
[485.72433472 -322.81448364]
[491.99365234 -309.16702271]
[496.57217407 -294.86337280]
[499.39318848 -280.11212158]
[500.41549683 -265.12838745]
[499.62423706 -250.13067627]
[497.03091431 -235.33770752]
[492.67337036 -220.96519470]
[486.61514282 -207.22273254]
[478.94458008 -194.31072998]
[469.77352905 -182.41748047]
[459.23577881 -171.71641541]
[447.48492432 -162.36360168]
[434.69238281 -154.49543762]
[421.04467773 -148.22663879]
[406.74087524 -143.64863586]
[391.98950195 -140.82818604]
[377.00573730 -139.80642700]
[362.00805664 -140.59825134]
[347.21517944 -143.19212341]
[332.84283447 -147.55020142]
[319.10061646 -153.60893250]
[311.44000244 -140.71261597]
[303.77941895 -127.81628418]
[296.11880493 -114.91996002]
[288.45822144 -102.02362823]
[280.79760742 -89.12730408]
[273.13702393 -76.23097992]
[286.17578125 -83.64653778]
[301.00198364 -85.92326355]
[315.66500854 -82.76161194]
[328.23565674 -74.57754517]
[337.06002808 -62.44782257]
[340.97717285 -47.96831894]
[339.47167969 -33.04405975]
[332.74166870 -19.63858795]
[321.67251587 -9.51562500]
[307.72064209 -4.00702143]
[292.72158813 -3.83752728]
[278.64877319 -9.02944279]
[267.35372925 -18.89968300]
[260.32247925 -32.14964676]
[258.48010254 -47.03607559]
[262.07003784 -61.60256958]
[251.74336243 -50.72323608]
[241.41668701 -39.84389877]
[238.24328613 -22.58422470]
[220.54388428 -17.50358963]
[210.38034058 -6.47171164]
[200.21679688 4.56016588]
[190.05323792 15.59204292]
[192.37680054 28.26605606]
[186.89447021 40.14150238]
[175.40437317 46.78890991]
[161.98902893 45.58753967]
[151.66236877 56.46687698]
[141.33569336 67.34620667]
[138.18545532 81.90386200]
[123.07302094 86.58627319]
[112.74635315 97.46560669]
[102.74818420 108.64758301]
[93.08737183 120.12228394]
[90.11819458 135.66238403]
[76.00226593 140.41525269]
[66.34145355 151.88993835]
[56.68064117 163.36463928]
[47.01983261 174.83934021]
[37.44471359 186.38565063]
[27.95581436 198.00291443]
[18.46691513 209.62017822]
[21.35195351 222.77658081]
[16.20798492 235.01382446]
[5.11949015 241.95121765]
[-7.74643803 241.24595642]
[-17.40724945 252.72065735]
[-27.06805801 264.19534302]
[-36.72887039 275.67004395]
[-46.38967896 287.14474487]
[-56.05049133 298.61944580]
[-45.67671585 309.47448730]
[-36.53741074 321.38754272]
[-28.73972893 334.21887207]
[-22.37509537 347.81808472]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 206]
[53 205]
[54 204]
[55 203]
[56 202]
[57 201]
[60 197]
[61 196]
[62 195]
[64 194]
[65 193]
[66 192]
[67 191]
[69 189]
[70 188]
[75 187]
[76 186]
[78 184]
[79 183]
[80 182]
[83 178]
[84 177]
[85 176]
[86 175]
[89 173]
[90 172]
[91 171]
[92 155]
[93 154]
[94 153]
[95 152]
[96 151]
[97 150]
[98 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
