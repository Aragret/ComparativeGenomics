%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[-69.97190857 515.82147217]
[-65.44539642 530.14947510]
[-63.00412750 544.97583008]
[-62.69780350 559.99871826]
[-64.53266144 574.91223145]
[-68.47134399 589.41284180]
[-74.43366241 603.20532227]
[-82.29824066 616.00878906]
[-91.90495300 627.56262207]
[-103.05822754 637.63165283]
[-115.53099823 646.01086426]
[-129.06933594 652.52960205]
[-143.39761353 657.05523682]
[-158.22412109 659.49560547]
[-173.24702454 659.80096436]
[-188.16046143 657.96520996]
[-202.66082764 654.02563477]
[-216.45289612 648.06243896]
[-229.25588989 640.19708252]
[-240.80915833 630.58966064]
[-250.87750244 619.43579102]
[-259.25592041 606.96246338]
[-265.77383423 593.42370605]
[-270.29858398 579.09515381]
[-272.73800659 564.26849365]
[-273.04248047 549.24560547]
[-271.20578003 534.33227539]
[-267.26528931 519.83215332]
[-261.30126953 506.04046631]
[-253.43510437 493.23794556]
[-243.82696533 481.68527222]
[-232.67243958 471.61761475]
[-220.19862366 463.23999023]
[-206.65948486 456.72290039]
[-192.33065796 452.19903564]
[-177.50384521 449.76052856]
[-162.48089600 449.45700073]
[-147.56768799 451.29461670]
[-133.06781006 455.23599243]
[-119.27648163 461.20086670]
[-111.42472839 448.42004395]
[-103.57296753 435.63919067]
[-103.50348663 420.74475098]
[-89.68717194 413.03631592]
[-81.83541107 400.25546265]
[-73.98365784 387.47463989]
[-66.13190460 374.69378662]
[-58.28014755 361.91293335]
[-50.42839050 349.13211060]
[-58.46797943 335.11505127]
[-58.34093857 318.86267090]
[-49.98725891 304.81161499]
[-35.60556793 296.84527588]
[-19.07526779 297.22082520]
[-11.41466999 284.32449341]
[-3.75407290 271.42816162]
[3.90652442 258.53182983]
[11.27721405 245.46765137]
[18.35431862 232.24212646]
[17.53714371 217.36994934]
[30.87015343 208.85282898]
[37.94725800 195.62728882]
[45.02436447 182.40176392]
[52.10147095 169.17623901]
[59.17857742 155.95071411]
[66.25568390 142.72518921]
[65.58913422 139.26280212]
[66.56651306 135.30555725]
[69.40213013 131.62962341]
[73.95557404 129.07751465]
[81.61616516 116.18118286]
[89.27676392 103.28485870]
[74.76274109 107.07207489]
[61.15655518 100.75766754]
[54.67877579 87.22849274]
[58.29095840 72.66992188]
[70.34165955 63.73791885]
[85.32146454 64.51609039]
[96.38179779 74.64865875]
[98.46566010 89.50495911]
[107.42635345 77.47558594]
[116.38705444 65.44620514]
[125.34774780 53.41682816]
[131.72634888 39.84062195]
[135.26602173 25.26424789]
[138.80569458 10.68787193]
[134.54345703 -4.54839468]
[145.06559753 -15.09039402]
[148.60527039 -29.66676903]
[150.16578674 -44.58537292]
[142.02104187 -58.14905930]
[149.37597656 -71.10105896]
[148.92936707 -86.09440613]
[148.48275757 -101.08776093]
[140.33799744 -114.65144348]
[147.69293213 -127.60343933]
[147.24633789 -142.59678650]
[133.02314758 -147.96049500]
[121.93864441 -158.36253357]
[115.68315125 -172.21667480]
[115.21057892 -187.41026306]
[120.59298706 -201.62638855]
[131.00959778 -212.69718933]
[144.87194824 -218.93444824]
[160.06614685 -219.38703918]
[174.27517700 -213.98593140]
[185.33227539 -203.55476379]
[191.55128479 -189.68421936]
[191.98388672 -174.48944092]
[186.56410217 -160.28752136]
[176.11840820 -149.24417114]
[162.23968506 -143.04339600]
[162.68627930 -128.05004883]
[170.79908752 -115.55878448]
[163.47610474 -101.53436279]
[163.92271423 -86.54101562]
[164.36932373 -71.54766083]
[172.48213196 -59.05640411]
[165.15913391 -45.03197861]
[171.76573181 -58.49871445]
[182.16522217 -69.30846405]
[195.36637878 -76.43092346]
[210.11096191 -79.18721008]
[224.99362183 -77.31462097]
[238.59582520 -70.99164581]
[249.62109375 -60.82093430]
[257.01858521 -47.77190399]
[260.08319092 -33.08830261]
[258.52285767 -18.16968155]
[252.48625183 -4.43798304]
[242.54878235 6.79797173]
[229.65762329 14.46724415]
[215.04145813 17.83884811]
[200.09341431 16.59142303]
[186.23825073 10.84386539]
[174.79653931 1.14399743]
[166.85885620 -11.58365250]
[163.18164062 -26.12709618]
[159.64196777 -11.55072117]
[164.15739441 2.64294553]
[153.38208008 14.22754478]
[149.84240723 28.80392075]
[146.30273438 43.38029480]
[155.91848755 31.86781120]
[167.75701904 22.65645981]
[181.27976990 16.16529655]
[195.87153625 12.68962860]
[210.86849976 12.38757324]
[225.58837891 15.27287197]
[239.36154175 21.21426392]
[251.56138611 29.94145393]
[261.63290405 41.05741501]
[269.11788940 54.05644608]
[273.67587280 68.34717560]
[275.09945679 83.27946472]
[273.32388306 98.17401123]
[268.42993164 112.35319519]
[260.64025879 125.17196655]
[250.30921936 136.04714966]
[237.90682983 144.48400879]
[223.99729919 150.09872437]
[209.21340942 152.63583374]
[194.22776794 151.97994995]
[179.72207642 148.16090393]
[166.35627747 141.35243225]
[154.73841858 131.86427307]
[145.39701843 120.12806702]
[138.75706482 106.67774963]
[135.12063599 92.12521362]
[134.65315247 77.13249969]
[137.37712097 62.37752533]
[128.41642761 74.40690613]
[119.45573425 86.43627930]
[110.49503326 98.46566010]
[102.17309570 110.94544983]
[94.51249695 123.84178162]
[86.85189819 136.73811340]
[79.48120880 149.80229187]
[72.40410614 163.02781677]
[65.32699585 176.25334167]
[58.24989319 189.47886658]
[51.17278671 202.70440674]
[44.09568024 215.92993164]
[44.40665436 231.74807739]
[31.57984734 239.31922913]
[24.50274086 252.54475403]
[24.67286682 257.76184082]
[22.99279594 262.08975220]
[20.11106682 264.97256470]
[16.80285072 266.19244385]
[9.14225388 279.08874512]
[1.48165655 291.98507690]
[-6.17894077 304.88140869]
[1.28807175 316.70962524]
[2.92254972 330.53512573]
[-1.53786361 343.65316772]
[-11.16873550 353.52206421]
[-24.04977608 358.25573730]
[-37.64754868 356.98385620]
[-45.49930573 369.76470947]
[-53.35105896 382.54553223]
[-61.20281601 395.32638550]
[-69.05457306 408.10723877]
[-76.90632629 420.88806152]
[-77.53741455 436.69668579]
[-90.79212952 443.49093628]
[-98.64388275 456.27178955]
[-106.49563599 469.05264282]
[-94.94117737 478.65863037]
[-84.87146759 489.81127930]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 208]
[41 207]
[42 206]
[44 204]
[45 203]
[46 202]
[47 201]
[48 200]
[49 199]
[54 193]
[55 192]
[56 191]
[57 190]
[58 186]
[59 185]
[61 183]
[62 182]
[63 181]
[64 180]
[65 179]
[66 178]
[70 177]
[71 176]
[72 175]
[80 174]
[81 173]
[82 172]
[83 171]
[84 143]
[85 142]
[86 141]
[88 139]
[89 138]
[90 119]
[92 117]
[93 116]
[94 115]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
