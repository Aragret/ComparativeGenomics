%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUA\
) } def
/len { sequence length } bind def

/coor [
[98.00058746 650.04260254]
[84.64314270 643.18914795]
[72.04759216 635.01947021]
[60.34319305 625.61749268]
[49.65004349 615.07958984]
[40.07787704 603.51391602]
[31.72491837 591.03918457]
[24.67688370 577.78338623]
[19.00609779 563.88250732]
[14.77075005 549.47930908]
[12.01430416 534.72149658]
[10.76504421 519.76055908]
[11.03579140 504.74993896]
[12.82376575 489.84378052]
[16.11062050 475.19494629]
[20.86262703 460.95382690]
[27.03102303 447.26654053]
[34.55250931 434.27352905]
[43.34990311 422.10815430]
[53.33292770 410.89520264]
[64.39914703 400.74975586]
[76.43498993 391.77593994]
[89.31696320 384.06582642]
[102.91287231 377.69854736]
[117.08319855 372.73944092]
[131.68252563 369.23934937]
[129.67851257 354.37384033]
[127.67450714 339.50830078]
[125.67048645 324.64276123]
[123.66647339 309.77725220]
[112.20734406 296.48608398]
[119.34281158 279.51062012]
[117.11769867 264.67657471]
[107.57801819 253.23786926]
[113.18258667 238.44261169]
[110.95746613 223.60856628]
[108.73235321 208.77452087]
[96.63911438 200.15541077]
[94.17121124 185.14328003]
[103.29373169 172.51721191]
[101.06861115 157.68316650]
[98.84349060 142.84913635]
[96.61837769 128.01509094]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[88.54757690 74.21002960]
[86.32246399 59.37598801]
[84.09734344 44.54194260]
[81.87223053 29.70790100]
[79.42649841 14.90863037]
[76.76070404 0.14741266]
[74.09490967 -14.61380482]
[63.52807236 -3.96758747]
[48.60044861 -5.43933916]
[40.31612778 -17.94413948]
[44.78200150 -32.26391602]
[58.70599747 -37.84265900]
[71.82289886 -30.56927490]
[70.26237488 -45.48788071]
[68.70185089 -60.40648270]
[64.69663239 -68.61599731]
[67.23085022 -75.55857849]
[65.89261627 -90.49876404]
[64.55438232 -105.43894958]
[49.54607010 -105.33863068]
[34.58073425 -106.47804260]
[19.76060677 -108.84939575]
[5.18692398 -112.43650055]
[-9.04075909 -117.21484375]
[-22.82525063 -123.15178680]
[-36.07238770 -130.20677185]
[-48.69167709 -138.33161926]
[-60.59691620 -147.47080994]
[-71.70677948 -157.56192017]
[-81.94537354 -168.53601074]
[-91.24275208 -180.31813049]
[-99.53540802 -192.82778931]
[-106.76670074 -205.97950745]
[-112.88722229 -219.68348694]
[-117.85516357 -233.84606934]
[-121.63658905 -248.37054443]
[-124.20566559 -263.15768433]
[-125.54485321 -278.10647583]
[-125.64498901 -293.11477661]
[-124.50540161 -308.08010864]
[-122.13387299 -322.90020752]
[-118.54659271 -337.47384644]
[-113.76808167 -351.70147705]
[-107.83097076 -365.48590088]
[-100.77582550 -378.73294067]
[-92.65083313 -391.35214233]
[-83.51149750 -403.25726318]
[-73.42025757 -414.36700439]
[-62.44604111 -424.60546875]
[-50.66381454 -433.90270996]
[-38.15406418 -442.19522095]
[-25.00224876 -449.42636108]
[-11.29820538 -455.54672241]
[2.86444831 -460.51449585]
[17.38896751 -464.29574585]
[32.17613220 -466.86465454]
[47.12493134 -468.20364380]
[62.13324738 -468.30361938]
[77.09855652 -467.16384888]
[91.91863251 -464.79214478]
[106.49222565 -461.20468140]
[120.71979523 -456.42599487]
[134.50415039 -450.48873901]
[147.75111389 -443.43341064]
[160.37020874 -435.30828857]
[172.27523804 -426.16879272]
[183.38485718 -416.07742310]
[193.62318420 -405.10308838]
[202.92028809 -393.32073975]
[211.21264648 -380.81091309]
[218.44361877 -367.65899658]
[224.56381226 -353.95489502]
[229.53141785 -339.79217529]
[233.31250000 -325.26760864]
[235.88122559 -310.48040771]
[237.22004700 -295.53158569]
[237.31983948 -280.52328491]
[236.17988586 -265.55798340]
[233.80799866 -250.73794556]
[230.22038269 -236.16438293]
[225.44152832 -221.93687439]
[219.50408936 -208.15260315]
[212.44862366 -194.90571594]
[204.32333374 -182.28671265]
[195.18371582 -170.38180542]
[185.09220886 -159.27229309]
[174.11775208 -149.03410339]
[162.33529663 -139.73713684]
[149.82536316 -131.44493103]
[136.67337036 -124.21411133]
[122.96917725 -118.09407806]
[108.80640411 -113.12664032]
[94.28179932 -109.34573364]
[79.49456787 -106.77718353]
[80.83280182 -91.83699799]
[82.17103577 -76.89681244]
[83.62046051 -61.96700668]
[85.18097687 -47.04840088]
[86.74150085 -32.12979889]
[88.85612488 -17.27960014]
[91.52191925 -2.51838279]
[94.18772125 12.24283409]
[97.53076935 15.65355778]
[98.76672363 21.20058060]
[96.70626831 27.48278427]
[98.93138885 42.31682587]
[101.15650940 57.15087128]
[103.38162231 71.98491669]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[111.45242310 125.78997040]
[113.67753601 140.62400818]
[115.90265656 155.45805359]
[118.12776947 170.29209900]
[130.55328369 179.68594360]
[132.59855652 194.76145935]
[123.56639099 206.54940796]
[125.79151154 221.38345337]
[128.01663208 236.21749878]
[137.71545410 248.71722412]
[131.95173645 262.45144653]
[134.17684937 277.28549194]
[144.06637573 285.56561279]
[145.61428833 297.96670532]
[138.53199768 307.77322388]
[140.53601074 322.63876343]
[142.54003906 337.50430298]
[144.54405212 352.36981201]
[146.54806519 367.23535156]
[161.55305481 366.74447632]
[176.53073120 367.77416992]
[191.32739258 370.31387329]
[205.79118347 374.33749390]
[219.77369690 379.80380249]
[233.13143921 386.65664673]
[245.72734070 394.82574463]
[257.43215942 404.22726440]
[268.12576294 414.76470947]
[277.69845581 426.32995605]
[286.05197144 438.80432129]
[293.10058594 452.05981445]
[298.77197266 465.96038818]
[303.00796509 480.36343384]
[305.76504517 495.12112427]
[307.01498413 510.08203125]
[306.74487305 525.09259033]
[304.95755005 539.99890137]
[301.67135620 554.64782715]
[296.91998291 568.88916016]
[290.75216675 582.57672119]
[283.23126221 595.57006836]
[274.43441772 607.73583984]
[264.45187378 618.94921875]
[253.38610840 629.09515381]
[241.35066223 638.06951904]
[228.46902466 645.78015137]
[214.87339783 652.14807129]
[200.70329285 657.10778809]
[186.10411072 660.60852051]
[171.22566223 662.61425781]
[156.22064209 663.10449219]
[141.24301147 662.07415771]
[126.44647217 659.53375244]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 176]
[27 175]
[28 174]
[29 173]
[30 172]
[32 169]
[33 168]
[35 166]
[36 165]
[37 164]
[40 161]
[41 160]
[42 159]
[43 158]
[44 157]
[46 155]
[47 154]
[48 153]
[49 152]
[50 151]
[51 148]
[52 147]
[53 146]
[59 145]
[60 144]
[61 143]
[63 142]
[64 141]
[65 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
