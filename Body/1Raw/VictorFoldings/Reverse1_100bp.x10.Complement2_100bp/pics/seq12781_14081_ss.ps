%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGGCUAUAGCGGCUAUGCCAACAUAUCCUAACGAACUUACCGACGACACAACCGUAGACGAGCCCGCAUAGUAGUUGACUACUCGUUCUUCCUAUAUUxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[-5.36292458 418.40301514]
[-4.88874197 433.41210938]
[-6.12859249 448.37744141]
[-9.06631184 463.10385132]
[-13.66360092 477.39941406]
[-19.86052513 491.07769775]
[-27.57629395 503.96041870]
[-36.71031570 515.87963867]
[-47.14351273 526.67993164]
[-58.73986816 536.22045898]
[-71.34819031 544.37695312]
[-84.80411530 551.04296875]
[-98.93221283 556.13165283]
[-113.54828644 559.57666016]
[-128.46179199 561.33306885]
[-143.47831726 561.37799072]
[-158.40206909 559.71081543]
[-173.03848267 556.35327148]
[-187.19676208 551.34918213]
[-200.69230652 544.76373291]
[-213.34919739 536.68286133]
[-225.00239563 527.21179199]
[-235.50000000 516.47412109]
[-244.70515442 504.60974121]
[-252.49783325 491.77340698]
[-258.77645874 478.13241577]
[-263.45916748 463.86459351]
[-266.48489380 449.15600586]
[-267.81423950 434.19839478]
[-267.42984009 419.18673706]
[-265.33670044 404.31674194]
[-261.56210327 389.78228760]
[-256.15530396 375.77285767]
[-249.18675232 362.47106934]
[-240.74731445 350.05038452]
[-230.94700623 338.67269897]
[-219.91358948 328.48635864]
[-207.79092407 319.62414551]
[-194.73704529 312.20162964]
[-180.92213440 306.31555176]
[-166.52629089 302.04263306]
[-151.73721313 299.43862915]
[-136.74769592 298.53744507]
[-121.75315857 299.35086060]
[-106.94908905 301.86825562]
[-92.52848053 306.05679321]
[-78.67935181 311.86190796]
[-65.58223724 319.20788574]
[-56.80163193 307.04641724]
[-48.02102661 294.88494873]
[-47.18198013 277.35604858]
[-30.32003021 269.95629883]
[-21.72146606 257.66546631]
[-13.12290192 245.37461853]
[-15.96021080 230.79774475]
[-7.41513157 218.21060181]
[7.89367342 215.33340454]
[16.49223709 203.04257202]
[17.75076485 195.75985718]
[25.31144333 190.63404846]
[34.09204865 178.47259521]
[42.87265015 166.31112671]
[51.65325165 154.14967346]
[60.43385696 141.98822021]
[69.21446228 129.82676697]
[77.99506378 117.66530609]
[86.77566528 105.50385284]
[88.38666534 91.61514282]
[101.06288147 85.71554565]
[107.84287262 72.33527374]
[112.45687866 58.06253815]
[101.34803009 50.18298340]
[92.91842651 39.50693512]
[87.84307098 26.90455437]
[86.52407074 13.39963245]
[89.05877686 0.08640490]
[95.23268127 -11.95910168]
[104.53755188 -21.76603889]
[116.21321869 -28.54698563]
[129.30969238 -31.76116371]
[142.76448059 -31.15756035]
[147.80139160 -45.28659058]
[152.83831787 -59.41561890]
[157.87522888 -73.54464722]
[162.91213989 -87.67367554]
[167.94906616 -101.80270386]
[172.98597717 -115.93173981]
[177.70611572 -130.16972351]
[182.10711670 -144.50956726]
[186.50810242 -158.84942627]
[190.90910339 -173.18927002]
[195.31010437 -187.52911377]
[199.71110535 -201.86895752]
[186.08186340 -208.19017029]
[173.44035339 -216.30841064]
[162.02204895 -226.07244873]
[152.03970337 -237.30036926]
[143.67926025 -249.78302002]
[137.09645081 -263.28787231]
[132.41395569 -277.56329346]
[129.71896362 -292.34338379]
[129.06170654 -307.35275269]
[130.45440674 -322.31182861]
[133.87113953 -336.94192505]
[139.24824524 -350.97048950]
[146.48556519 -364.13616943]
[155.44824219 -376.19369507]
[165.96932983 -386.91845703]
[177.85282898 -396.11065674]
[190.87733459 -403.59902954]
[204.80023193 -409.24411011]
[219.36213684 -412.94067383]
[234.29177856 -414.61990356]
[249.31100464 -414.25051880]
[264.14004517 -411.83935547]
[278.50259399 -407.43139648]
[292.13116455 -401.10870361]
[304.77178955 -392.98910522]
[316.18902588 -383.22384644]
[326.17016602 -371.99481201]
[334.52926636 -359.51126099]
[341.11059570 -346.00570679]
[345.79156494 -331.72979736]
[348.48495483 -316.94940186]
[349.14059448 -301.93994141]
[347.74624634 -286.98101807]
[344.32794189 -272.35128784]
[338.94931030 -258.32330322]
[331.71057129 -245.15841675]
[322.74658203 -233.10185242]
[312.22433472 -222.37823486]
[300.33987427 -213.18733215]
[287.31454468 -205.70036316]
[273.39102173 -200.05680847]
[258.82873535 -196.36181641]
[243.89891052 -194.68418884]
[228.87971497 -195.05522156]
[214.05094910 -197.46795654]
[209.64994812 -183.12811279]
[205.24894714 -168.78826904]
[200.84796143 -154.44842529]
[196.44696045 -140.10858154]
[192.04595947 -125.76873016]
[193.36604309 -122.49921417]
[193.16810608 -118.42787170]
[191.09251404 -114.27513123]
[187.11500549 -110.89482117]
[182.07809448 -96.76579285]
[177.04116821 -82.63676453]
[172.00425720 -68.50772858]
[166.96734619 -54.37870407]
[161.93041992 -40.24967194]
[156.89350891 -26.12064362]
[169.77433777 -15.87474155]
[178.38238525 -1.81622958]
[181.66224670 14.36492443]
[179.20030212 30.71651649]
[171.27670288 45.25963211]
[158.83370972 56.22814560]
[143.36355591 62.28318024]
[126.72961426 62.67654800]
[122.11560059 76.94927979]
[132.67390442 66.29459381]
[145.68788147 58.83562469]
[160.21806335 55.11083221]
[175.21548462 55.38912201]
[189.59745789 59.65039444]
[202.32577515 67.58702850]
[212.48153687 78.62607574]
[219.33158875 91.97061157]
[222.38143921 106.65728760]
[221.41090393 121.62585449]
[216.49005127 135.79573059]
[207.97412109 148.14396667]
[196.47787476 157.77912903]
[182.83126831 164.00566101]
[168.01942444 166.37406921]
[153.11163330 164.71334839]
[139.18411255 159.14341736]
[127.24229431 150.06636047]
[118.14827728 138.13745117]
[112.55854797 124.21786499]
[110.87665558 109.31245422]
[113.22433472 94.49614716]
[111.61333466 108.38485718]
[98.93711853 114.28445435]
[90.15651703 126.44591522]
[81.37591553 138.60736084]
[72.59531403 150.76882935]
[63.81470871 162.93028259]
[55.03410721 175.09173584]
[46.25350189 187.25318909]
[37.47290039 199.41464233]
[28.78307533 211.64112854]
[20.18451118 223.93197632]
[22.72946548 239.29949951]
[13.83421040 251.64166260]
[-0.83206415 253.97319031]
[-9.43062782 266.26403809]
[-18.02919197 278.55487061]
[-16.55682755 291.36871338]
[-23.97162437 301.42877197]
[-35.85957336 303.66555786]
[-44.64017487 315.82702637]
[-53.42078018 327.98846436]
[-42.32664108 338.10864258]
[-32.45845795 349.42752075]
[-23.94487762 361.79751587]
[-16.89689636 375.05737305]
[-11.40639591 389.03421021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 205]
[49 204]
[50 203]
[52 200]
[53 199]
[54 198]
[57 195]
[58 194]
[60 193]
[61 192]
[62 191]
[63 190]
[64 189]
[65 188]
[66 187]
[67 186]
[69 184]
[70 162]
[71 161]
[81 153]
[82 152]
[83 151]
[84 150]
[85 149]
[86 148]
[87 147]
[88 143]
[89 142]
[90 141]
[91 140]
[92 139]
[93 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
