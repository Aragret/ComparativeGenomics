%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCAAUAAAAGCAAUUACAAUCAUUCCCACCCCUUCGCUCCAACUGGACAAUCCCACUCUUCUUAAUAAGCUCACGAUAUCCGCGAACAGUCCCUCCAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[145.08021545 548.32196045]
[157.94239807 540.16821289]
[155.71726990 525.33416748]
[153.49215698 510.50012207]
[151.26704407 495.66607666]
[149.04193115 480.83203125]
[146.81680298 465.99798584]
[144.59169006 451.16394043]
[142.36657715 436.32989502]
[140.14144897 421.49584961]
[137.91633606 406.66180420]
[134.70306396 392.01000977]
[130.51605225 377.60623169]
[126.32904053 363.20245361]
[122.14202881 348.79867554]
[108.83805084 337.35443115]
[113.37641907 319.50827026]
[108.97541809 305.16842651]
[105.88833618 319.84732056]
[98.02580261 332.62155151]
[86.31149292 341.99035645]
[72.12160492 346.85317993]
[57.12313461 346.63867188]
[43.07810211 341.37210083]
[31.63649750 331.67211914]
[24.14246941 318.67828369]
[21.47640991 303.91711426]
[23.95152283 289.12274170]
[31.27703857 276.03317261]
[42.59235764 266.18615723]
[56.56817245 260.73852539]
[71.56261444 260.33026123]
[85.81415558 265.00933838]
[97.64853668 274.22601318]
[105.67606354 286.89901733]
[104.78324890 271.92562866]
[103.89043427 256.95220947]
[90.84620667 246.33680725]
[89.48880005 229.23498535]
[101.14504242 216.19078064]
[100.02939606 201.23233032]
[98.91374969 186.27388000]
[97.79809570 171.31541443]
[96.68244934 156.35696411]
[88.01996613 144.24041748]
[94.70942688 129.90299988]
[93.59378052 114.94454193]
[85.24273682 106.82658386]
[84.46299744 95.20619965]
[91.65460968 86.04530334]
[90.76178741 71.07189941]
[89.86897278 56.09849548]
[83.99766541 69.90167236]
[74.91873169 81.84206390]
[63.18735123 91.18950653]
[49.52090454 97.37240601]
[34.75509644 100.01267242]
[19.79286957 98.94885254]
[5.54916334 94.24600220]
[-7.10501242 86.19169617]
[-17.39584923 75.27845764]
[-24.69406128 62.17364883]
[-28.55335617 47.67861938]
[-28.73773956 32.67975235]
[-25.23593330 18.09423447]
[-18.26207733 4.81397247]
[-8.24262428 -6.34893751]
[4.20973206 -14.71187973]
[18.33352661 -19.76345825]
[33.26508331 -21.19476700]
[48.09132767 -18.91827965]
[61.90563583 -13.07320499]
[73.86325836 -4.01697159]
[83.23297119 7.69662809]
[89.44182587 21.35130310]
[92.11013794 36.11209488]
[96.29714966 21.70831299]
[100.48416138 7.30453014]
[104.67117310 -7.09925175]
[108.85818481 -21.50303459]
[103.34146118 -33.16187668]
[107.12536621 -45.07262039]
[117.66158295 -51.01523209]
[122.06258392 -65.35507965]
[126.46357727 -79.69492340]
[130.75770569 -94.06713867]
[134.94471741 -108.47092438]
[121.25472260 -120.09623718]
[114.05202484 -136.49087524]
[114.74604034 -154.33145142]
[123.15053558 -170.02357483]
[137.53050232 -180.42601013]
[154.96014404 -183.47946167]
[158.49981689 -198.05584717]
[162.03948975 -212.63221741]
[165.57916260 -227.20858765]
[167.58317566 -242.07412720]
[168.02978516 -257.06747437]
[168.47639465 -272.06082153]
[168.92298889 -287.05416870]
[155.35102844 -294.03732300]
[146.15983582 -306.22274780]
[143.17433167 -321.19104004]
[146.98728943 -335.97021484]
[156.84165955 -347.62585449]
[170.78083801 -353.84375000]
[186.03718567 -353.38931274]
[199.58155823 -346.35278320]
[208.72468567 -334.13122559]
[211.65122986 -319.15130615]
[207.78009033 -304.38726807]
[197.87989807 -292.77050781]
[183.91635132 -286.60757446]
[183.46974182 -271.61422729]
[183.02313232 -256.62084961]
[182.57652283 -241.62751770]
[190.57717896 -254.31567383]
[202.77984619 -263.03894043]
[217.37431335 -266.50323486]
[232.19560242 -264.19464111]
[245.04504395 -256.45568848]
[254.01651001 -244.43432617]
[257.77914429 -229.91390991]
[255.77476501 -215.04843140]
[248.30072021 -202.04309082]
[236.46572876 -192.82717896]
[222.02546692 -188.76779175]
[207.12203979 -190.46713257]
[193.96627808 -197.67311096]
[184.50978088 -209.31677246]
[180.15553284 -223.66891479]
[176.61585999 -209.09254456]
[173.07620239 -194.51617432]
[169.53652954 -179.93978882]
[179.77261353 -173.24047852]
[187.47521973 -163.70492554]
[191.88984680 -152.24334717]
[192.57672119 -139.95571899]
[189.45465088 -128.02624512]
[182.81022644 -117.60922241]
[173.27160645 -109.71732330]
[161.74913025 -105.12322235]
[149.34849548 -104.28391266]
[145.16148376 -89.88012695]
[146.31295776 -82.57972717]
[140.80342102 -75.29393005]
[136.40243530 -60.95408249]
[132.00143433 -46.61423492]
[136.84663391 -29.74737358]
[123.26196289 -17.31602287]
[119.07495117 -2.91224074]
[114.88793945 11.49154186]
[110.70093536 25.89532280]
[106.51392365 40.29910660]
[104.84237671 55.20568085]
[105.73519897 70.17908478]
[106.62801361 85.15248871]
[116.22325897 98.91139984]
[108.55223083 113.82889557]
[109.66788483 128.78735352]
[118.41016388 141.97383118]
[111.64089966 155.24131775]
[112.75655365 170.19976807]
[113.87220001 185.15821838]
[114.98784637 200.11668396]
[116.10350037 215.07513428]
[127.25344086 222.63114929]
[131.94723511 235.04801941]
[128.68089294 247.71343994]
[118.86383820 256.05938721]
[119.75665283 271.03280640]
[120.64946747 286.00622559]
[123.31526184 300.76742554]
[127.71626282 315.10726929]
[138.72465515 321.82876587]
[142.09503174 333.86303711]
[136.54580688 344.61166382]
[140.73281860 359.01544189]
[144.91983032 373.41921997]
[149.10684204 387.82299805]
[154.77137756 373.93368530]
[166.98431396 365.22485352]
[181.96134949 364.39498901]
[195.06166077 371.70123291]
[202.22601318 384.87973022]
[201.23442078 399.84692383]
[192.39414978 411.96505737]
[178.44445801 417.47924805]
[163.70780945 414.68081665]
[152.75038147 404.43667603]
[154.97549438 419.27072144]
[157.20062256 434.10476685]
[159.42573547 448.93881226]
[161.65084839 463.77285767]
[163.87596130 478.60690308]
[166.10108948 493.44094849]
[168.32620239 508.27499390]
[170.55131531 523.10906982]
[172.77644348 537.94305420]
[187.46487427 541.96423340]
[199.24374390 551.61712646]
[206.07231140 565.22930908]
[206.76747131 580.44232178]
[201.20877075 594.62048340]
[190.35931396 605.30737305]
[176.09881592 610.65136719]
[160.89801025 609.72656250]
[147.39051819 602.69329834]
[137.91658020 590.77001953]
[134.11764526 576.02252197]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 199]
[3 198]
[4 197]
[5 196]
[6 195]
[7 194]
[8 193]
[9 192]
[10 191]
[11 190]
[12 180]
[13 179]
[14 178]
[15 177]
[17 174]
[18 173]
[35 172]
[36 171]
[37 170]
[40 166]
[41 165]
[42 164]
[43 163]
[44 162]
[46 160]
[47 159]
[50 157]
[51 156]
[52 155]
[76 154]
[77 153]
[78 152]
[79 151]
[80 150]
[83 148]
[84 147]
[85 146]
[86 144]
[87 143]
[93 134]
[94 133]
[95 132]
[96 131]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
