%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[112.09517670 424.46316528]
[109.60860443 409.65747070]
[108.63268280 394.67620850]
[109.17741394 379.67306519]
[111.23721313 364.80200195]
[114.79094696 350.21563721]
[119.80213928 336.06365967]
[126.21938324 322.49124146]
[133.97680664 309.63772583]
[142.99482727 297.63494873]
[153.18089294 286.60610962]
[164.43048096 276.66439819]
[176.62814331 267.91180420]
[169.16040039 254.90284729]
[163.10414124 250.66688538]
[161.67996216 241.64414978]
[154.40673828 228.52545166]
[150.14408875 226.37165833]
[147.18919373 221.51721191]
[147.11889648 214.90611267]
[140.23948669 201.57669067]
[133.36007690 188.24725342]
[126.48065948 174.91783142]
[119.60124969 161.58839417]
[116.97483063 160.60856628]
[114.57829285 158.52932739]
[112.83231354 155.43304443]
[112.12004089 151.55268860]
[112.73591614 147.25447083]
[100.50775146 138.75028992]
[101.99436188 122.99907684]
[95.92053223 109.28380585]
[90.03656769 103.77458191]
[89.86005402 95.31883240]
[83.99109650 81.51465607]
[80.43104553 79.02869415]
[78.08335114 75.85807037]
[77.01439667 72.46797180]
[77.13263702 69.29738617]
[78.21088409 66.70981598]
[73.17396545 52.58078384]
[68.13705444 38.45175552]
[63.10013580 24.32272530]
[57.95817566 10.23158360]
[52.50281906 -3.74121380]
[46.84003448 -17.63124084]
[41.17724609 -31.52126694]
[35.00147629 -45.19093704]
[28.32128334 -58.62131500]
[21.64108849 -72.05168915]
[14.96089363 -85.48206329]
[8.08148193 -98.81149292]
[1.00437605 -112.03702545]
[-6.07272911 -125.26255035]
[-13.14983463 -138.48808289]
[-20.22694016 -151.71360779]
[-27.30404472 -164.93913269]
[-41.16159058 -159.16644287]
[-55.51159668 -154.75817871]
[-70.22007751 -151.75546265]
[-85.14968872 -150.18637085]
[-100.16104889 -150.06553650]
[-115.11399078 -151.39408875]
[-129.86889648 -154.15962219]
[-144.28800964 -158.33631897]
[-158.23669434 -163.88516235]
[-171.58470154 -170.75437927]
[-184.20742798 -178.87980652]
[-195.98698425 -188.18557739]
[-206.81340027 -198.58482361]
[-216.58560181 -209.98042297]
[-225.21232605 -222.26597595]
[-232.61303711 -235.32679749]
[-238.71862793 -249.04092407]
[-243.47210693 -263.28030396]
[-246.82907104 -277.91198730]
[-248.75817871 -292.79937744]
[-249.24142456 -307.80343628]
[-248.27430725 -322.78411865]
[-245.86582947 -337.60150146]
[-242.03849792 -352.11724854]
[-236.82806396 -366.19583130]
[-230.28314209 -379.70581055]
[-222.46485901 -392.52102661]
[-213.44621277 -404.52185059]
[-203.31140137 -415.59619141]
[-192.15507507 -425.64068604]
[-180.08139038 -434.56155396]
[-167.20306396 -442.27545166]
[-153.64035034 -448.71038818]
[-139.51989746 -453.80627441]
[-124.97352600 -457.51553345]
[-110.13706970 -459.80355835]
[-95.14904785 -460.64892578]
[-80.14939880 -460.04379272]
[-65.27818298 -457.99380493]
[-50.67425537 -454.51806641]
[-36.47396088 -449.64907837]
[-22.80989265 -443.43225098]
[-9.80963230 -435.92565918]
[2.40543842 -427.19940186]
[13.72126865 -417.33496094]
[24.03220177 -406.42440796]
[33.24196625 -394.56964111]
[41.26456833 -381.88131714]
[48.02510452 -368.47793579]
[53.46044922 -354.48461914]
[57.51985550 -340.03204346]
[60.16542053 -325.25515747]
[61.37244034 -310.29193115]
[61.12964630 -295.28204346]
[59.43930817 -280.36566162]
[56.31720352 -265.68206787]
[51.79248428 -251.36834717]
[45.90740204 -237.55816650]
[38.71690369 -224.38044739]
[30.28812218 -211.95823669]
[20.69976044 -200.40753174]
[10.04134560 -189.83616638]
[-1.58760691 -180.34286499]
[-14.07851791 -172.01623535]
[-7.00141287 -158.79071045]
[0.07569278 -145.56518555]
[7.15279818 -132.33966064]
[14.22990322 -119.11412811]
[21.30700874 -105.88860321]
[25.53711700 -103.67156982]
[28.41941071 -98.77367401]
[28.39126968 -92.16226196]
[35.07146454 -78.73188782]
[41.75165939 -65.30150604]
[48.43185425 -51.87113190]
[55.60696030 -65.04374695]
[70.35205841 -67.79730225]
[81.79761505 -58.10198212]
[81.50638580 -43.10480881]
[69.69305420 -33.86114502]
[55.06727219 -37.18405533]
[60.73006058 -23.29402733]
[66.39284515 -9.40400028]
[70.36935425 -6.75892115]
[72.72645569 -1.58774090]
[72.01065063 4.98486567]
[77.29519653 10.15161705]
[77.22916412 19.28580856]
[82.26608276 33.41483688]
[87.30300140 47.54386902]
[92.33991241 61.67289734]
[97.79527283 75.64569855]
[103.66423035 89.44987488]
[109.63579559 103.20997620]
[115.70963287 116.92523956]
[128.37223816 126.41043854]
[126.45117950 141.18063354]
[132.93067932 154.70898438]
[139.81008911 168.03842163]
[146.68949890 181.36784363]
[153.56890869 194.69726562]
[160.44833374 208.02670288]
[167.52543640 221.25222778]
[174.79866028 234.37092590]
[182.16935730 247.43510437]
[189.63710022 260.44406128]
[203.34643555 254.32482910]
[217.60452271 249.62397766]
[232.26502991 246.38972473]
[247.17753601 244.65525818]
[262.18899536 244.43840027]
[277.14538574 245.74134827]
[291.89318848 248.55075073]
[306.28112793 252.83776855]
[320.16152954 258.55841064]
[333.39193726 265.65399170]
[345.83660889 274.05166626]
[357.36782837 283.66528320]
[367.86730957 294.39617920]
[377.22726440 306.13427734]
[385.35162354 318.75906372]
[392.15710449 332.14102173]
[397.57379150 346.14282227]
[401.54611206 360.62078857]
[404.03332520 375.42636108]
[405.00991821 390.40759277]
[404.46585083 405.41073608]
[402.40670776 420.28189087]
[398.85360718 434.86840820]
[393.84304810 449.02062988]
[387.42639160 462.59332275]
[379.66952515 475.44717407]
[370.65203857 487.45034790]
[360.46646118 498.47961426]
[349.21731567 508.42184448]
[337.02005005 517.17498779]
[323.99978638 524.64923096]
[310.29019165 530.76782227]
[296.03189087 535.46807861]
[281.37124634 538.70166016]
[266.45864868 540.43548584]
[251.44718933 540.65167236]
[236.49085999 539.34808350]
[221.74316406 536.53802490]
[207.35542297 532.25036621]
[193.47528076 526.52911377]
[180.24517822 519.43298340]
[167.80087280 511.03472900]
[156.27006531 501.42059326]
[145.77107239 490.68923950]
[136.41165161 478.95074463]
[128.28781128 466.32559204]
[121.48294830 452.94332886]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 163]
[14 162]
[16 161]
[17 160]
[20 159]
[21 158]
[22 157]
[23 156]
[24 155]
[29 154]
[31 152]
[32 151]
[34 150]
[35 149]
[40 148]
[41 147]
[42 146]
[43 145]
[44 143]
[45 140]
[46 139]
[47 138]
[48 132]
[49 131]
[50 130]
[51 129]
[52 126]
[53 125]
[54 124]
[55 123]
[56 122]
[57 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
