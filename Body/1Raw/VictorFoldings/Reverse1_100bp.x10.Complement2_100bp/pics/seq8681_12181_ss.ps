%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[-107.76917267 374.27462769]
[-101.55149841 387.94168091]
[-96.84797668 402.20083618]
[-93.71373749 416.88497925]
[-92.18553162 431.82189941]
[-92.28128052 446.83651733]
[-93.99985504 461.75271606]
[-97.32111359 476.39569092]
[-102.20610809 490.59371948]
[-108.59757233 504.18035889]
[-116.42057037 516.99627686]
[-125.58337402 528.89123535]
[-135.97854614 539.72576904]
[-147.48423767 549.37292480]
[-159.96553040 557.71942139]
[-173.27607727 564.66754150]
[-187.25984192 570.13580322]
[-201.75285339 574.06005859]
[-216.58520508 576.39428711]
[-231.58297729 577.11114502]
[-246.57034302 576.20227051]
[-261.37158203 573.67828369]
[-275.81314087 569.56872559]
[-289.72573853 563.92181396]
[-302.94619751 556.80383301]
[-315.31958008 548.29809570]
[-326.70077515 538.50445557]
[-336.95632935 527.53765869]
[-345.96603394 515.52630615]
[-353.62426758 502.61123657]
[-359.84118652 488.94387817]
[-364.54394531 474.68444824]
[-367.67739868 460.00012207]
[-369.20480347 445.06311035]
[-369.10824585 430.04852295]
[-367.38885498 415.13241577]
[-364.06680298 400.48962402]
[-359.18106079 386.29183960]
[-352.78884888 372.70556641]
[-344.96517944 359.89004517]
[-335.80172729 347.99557495]
[-325.40597534 337.16159058]
[-313.89978027 327.51510620]
[-301.41802979 319.16925049]
[-288.10711670 312.22183228]
[-274.12304688 306.75436401]
[-259.62982178 302.83087158]
[-244.79734802 300.49743652]
[-229.79953003 299.78137207]
[-214.81221008 300.69107056]
[-200.01110840 303.21588135]
[-185.56976318 307.32620239]
[-171.65748596 312.97384644]
[-158.43739319 320.09255981]
[-146.06448364 328.59893799]
[-134.68382263 338.39321899]
[-123.72792053 328.14782715]
[-112.77201080 317.90243530]
[-112.05359650 305.82723999]
[-103.00989532 297.20196533]
[-90.11267853 297.04519653]
[-79.00543976 286.96405029]
[-67.89820862 276.88290405]
[-56.79097366 266.80178833]
[-45.68374252 256.72064209]
[-34.57650757 246.63949585]
[-23.46927452 236.55836487]
[-23.37429237 219.74081421]
[-10.89986897 207.96356201]
[6.57006311 208.86955261]
[17.52597237 198.62416077]
[28.48188210 188.37876892]
[39.43778992 178.13337708]
[49.68318176 167.17747498]
[59.17208099 155.56021118]
[68.66098022 143.94294739]
[76.70215607 131.28041077]
[83.18164825 117.75207520]
[89.66114044 104.22372437]
[96.03974915 90.64752197]
[102.31710815 77.02420044]
[108.59446716 63.40088654]
[114.87183380 49.77756882]
[113.61989594 34.00597382]
[125.97332001 25.68478584]
[132.25068665 12.06147003]
[130.99874878 -3.71012521]
[143.35217285 -12.03131390]
[149.62953186 -25.65462875]
[148.37759399 -41.42622375]
[160.73101807 -49.74741364]
[167.00837708 -63.37073135]
[165.75643921 -79.14232635]
[178.10986328 -87.46351624]
[184.38723755 -101.08683014]
[190.66459656 -114.71014404]
[196.94195557 -128.33346558]
[184.25688171 -136.38159180]
[172.75773621 -146.04870605]
[162.64974976 -157.16230774]
[154.11329651 -169.52403259]
[147.30073547 -182.91329956]
[142.33361816 -197.09114075]
[139.30062866 -211.80455017]
[138.25585938 -226.79093933]
[139.21795654 -241.78286743]
[142.16976929 -256.51278687]
[147.05860901 -270.71780396]
[153.79724121 -284.14443970]
[162.26538086 -296.55307007]
[172.31193542 -307.72222900]
[183.75758362 -317.45260620]
[196.39807129 -325.57058716]
[210.00784302 -331.93124390]
[224.34397888 -336.42108154]
[239.15063477 -338.95996094]
[254.16360474 -339.50259399]
[269.11492920 -338.03930664]
[283.73779297 -334.59619141]
[297.77124023 -329.23468018]
[310.96484375 -322.05047607]
[323.08309937 -313.17181396]
[333.90979004 -302.75711060]
[343.25167847 -290.99221802]
[350.94207764 -278.08712769]
[356.84368896 -264.27212524]
[360.85122681 -249.79374695]
[362.89315796 -234.91040039]
[362.93307495 -219.88769531]
[360.97021484 -204.99371338]
[357.03964233 -190.49426270]
[351.21148682 -176.64810181]
[343.58978271 -163.70233154]
[334.31051636 -151.88798523]
[323.53930664 -141.41590881]
[311.46835327 -132.47299194]
[298.31311035 -125.21881104]
[284.30834961 -119.78284454]
[269.70397949 -116.26209259]
[254.76063538 -114.71939087]
[239.74499512 -115.18227386]
[224.92504883 -117.64247894]
[210.56526184 -122.05609894]
[204.28790283 -108.43278503]
[198.01054382 -94.80947113]
[191.73318481 -81.18614960]
[193.43411255 -66.38898468]
[180.63169861 -57.09336853]
[174.35433960 -43.47005463]
[176.05526733 -28.67288780]
[163.25285339 -19.37726974]
[156.97547913 -5.75395298]
[158.67642212 9.04321194]
[145.87399292 18.33883095]
[139.59663391 31.96214676]
[141.29757690 46.75931168]
[128.49514771 56.05493164]
[122.21778870 69.67824554]
[115.94042969 83.30156708]
[109.66306305 96.92488098]
[109.41806793 104.98171234]
[103.18949127 110.70322418]
[96.70999146 124.23156738]
[90.23049927 137.75991821]
[102.44689178 129.05590820]
[116.88488007 124.98841858]
[131.84831238 126.03529358]
[145.57926941 132.07354736]
[156.46469116 142.39379883]
[163.22575378 155.78364563]
[165.06816101 170.67007446]
[161.77548218 185.30421448]
[153.73452759 197.96688843]
[141.88995361 207.17048645]
[127.63325500 211.83377075]
[112.63926697 211.40892029]
[98.66949463 205.94583130]
[87.36507416 196.08630371]
[80.05404663 182.98863220]
[77.59530640 168.19152832]
[80.27824402 153.43183899]
[70.78934479 165.04910278]
[61.30044556 176.66636658]
[75.95263672 173.45494080]
[90.05177307 178.57495117]
[99.22907257 190.43989563]
[100.64086151 205.37330627]
[93.84967041 218.74790955]
[80.95983124 226.41941833]
[65.96540070 226.01074219]
[53.51256561 217.64851379]
[47.45996857 203.92387390]
[49.68318176 189.08929443]
[38.72727203 199.33468628]
[27.77136421 209.58007812]
[16.81545448 219.82546997]
[17.91691971 233.24937439]
[11.18415928 244.68966675]
[-0.73177093 250.08343506]
[-13.38813496 247.66558838]
[-24.49536896 257.74673462]
[-35.60260391 267.82788086]
[-46.70983505 277.90899658]
[-57.81707001 287.99014282]
[-68.92430115 298.07128906]
[-80.03153992 308.15243530]
[-85.24379730 325.81350708]
[-102.52661896 328.85833740]
[-113.48252869 339.10372925]
[-124.43843842 349.34912109]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 210]
[57 209]
[58 208]
[61 206]
[62 205]
[63 204]
[64 203]
[65 202]
[66 201]
[67 200]
[70 196]
[71 195]
[72 194]
[73 193]
[74 183]
[75 182]
[76 181]
[77 164]
[78 163]
[79 162]
[80 160]
[81 159]
[82 158]
[83 157]
[85 155]
[86 154]
[88 152]
[89 151]
[91 149]
[92 148]
[94 146]
[95 145]
[96 144]
[97 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
