%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[111.33554077 491.48037720]
[113.81285858 472.25765991]
[114.03618622 457.25930786]
[114.25951385 442.26098633]
[114.48284149 427.26263428]
[114.70616913 412.26431274]
[114.92949677 397.26596069]
[112.30493164 393.27587891]
[112.15903473 387.59472656]
[115.38940430 381.82614136]
[116.05918884 366.84112549]
[116.72897339 351.85607910]
[115.83615875 336.88265991]
[113.39042664 322.08340454]
[110.94470215 307.28411865]
[108.49897766 292.48486328]
[106.05324554 277.68557739]
[103.60752106 262.88632202]
[100.31562042 259.42620850]
[99.16239166 253.86138916]
[101.31614685 247.61056519]
[99.31213379 232.74502563]
[89.94381714 221.16557312]
[95.76804352 206.45539856]
[93.76403046 191.58987427]
[91.76001740 176.72434998]
[89.75599670 161.85881042]
[83.93119812 175.68168640]
[73.31414795 186.27781677]
[59.47982025 192.07536316]
[44.48046494 192.21427917]
[30.54113960 186.67393494]
[19.72966385 176.27624512]
[13.64985657 162.56362915]
[13.20361805 147.57026672]
[18.45714760 133.52033997]
[28.63111305 122.49807739]
[42.21627045 116.13854980]
[57.19733810 115.38516998]
[71.35196686 120.34969330]
[82.58039856 130.29565430]
[89.21646881 143.74580383]
[90.33211517 128.78735352]
[91.44776917 113.82889557]
[83.77674103 98.91139984]
[93.37198639 85.15248871]
[94.26480103 70.17908478]
[95.15762329 55.20568085]
[96.05043793 40.23227310]
[96.94325256 25.25886726]
[94.60543060 20.59178352]
[94.32012177 15.95800495]
[95.73093414 12.13378429]
[98.22502899 9.64142704]
[99.78555298 -5.27717733]
[101.34607697 -20.19578171]
[102.90660095 -35.11438751]
[93.22939301 -47.32051468]
[95.02450562 -62.42786789]
[106.72081757 -71.57837677]
[108.28134155 -86.49698639]
[108.05801392 -101.49532318]
[106.05400085 -116.36084747]
[104.04998779 -131.22637939]
[94.28484344 -139.65281677]
[92.92173004 -152.07559204]
[100.14923859 -161.77558899]
[98.36677551 -176.66929626]
[84.92893219 -178.09405518]
[72.09300232 -182.29718018]
[60.42649460 -189.08993530]
[50.44459152 -198.16915894]
[42.58742142 -209.13078308]
[37.20063782 -221.48783875]
[34.52023315 -234.69207764]
[34.66218185 -248.15827942]
[37.61743164 -261.29019165]
[43.25243759 -273.50695801]
[51.31517410 -284.26882935]
[61.44642258 -293.10089111]
[73.19577789 -299.61419678]
[86.04164124 -303.52273560]
[84.92598724 -318.48120117]
[83.81034088 -333.43963623]
[82.69469452 -348.39810181]
[81.57904053 -363.35656738]
[80.46339417 -378.31500244]
[79.34774780 -393.27346802]
[66.44898224 -398.68499756]
[57.18440628 -409.07650757]
[53.31946945 -422.38217163]
[55.55366898 -435.98944092]
[63.39474487 -447.25204468]
[75.26570129 -454.00463867]
[74.37288666 -468.97802734]
[73.48007202 -483.95144653]
[59.10348892 -488.88928223]
[47.71419907 -498.95669556]
[41.04898834 -512.61846924]
[40.12425613 -527.79119873]
[45.08100891 -542.16131592]
[55.16338348 -553.53735352]
[68.83388519 -560.18457031]
[84.00787354 -561.08935547]
[98.37141418 -556.11370850]
[109.73417664 -546.01635742]
[116.36341858 -532.33709717]
[117.24823761 -517.16198730]
[112.25369263 -502.80496216]
[102.14142609 -491.45550537]
[88.45347595 -484.84426880]
[89.34629059 -469.87084961]
[90.23910522 -454.89746094]
[104.86175537 -448.02062988]
[114.07413483 -434.63079834]
[115.28382874 -418.32882690]
[108.06622314 -403.55718994]
[94.30619812 -394.38909912]
[95.42184448 -379.43066406]
[96.53749847 -364.47219849]
[97.65314484 -349.51376343]
[98.76879120 -334.55529785]
[99.88444519 -319.59683228]
[101.00009155 -304.63839722]
[117.31543732 -301.81939697]
[132.36582947 -294.89358521]
[145.13586426 -284.32238770]
[154.76252747 -270.81332397]
[160.59341431 -255.27264404]
[162.23101807 -238.74465942]
[159.55979919 -222.34146118]
[152.75431824 -207.16812134]
[142.26782227 -194.24826050]
[128.80209351 -184.45495605]
[113.26049042 -178.45176697]
[115.04296112 -163.55804443]
[126.30294037 -150.09774780]
[118.91551971 -133.23039246]
[120.91953278 -118.36486816]
[122.92354584 -103.49933624]
[128.36268616 -117.47845459]
[138.20281982 -128.79974365]
[151.28793335 -136.13320923]
[166.08082581 -138.61730957]
[180.84359741 -135.96020508]
[193.84197998 -128.47406006]
[203.54890442 -117.03835297]
[208.82402039 -102.99652100]
[209.04762268 -87.99818420]
[204.19342041 -73.80534363]
[194.83171082 -62.08535004]
[182.06227112 -54.21506119]
[167.38525391 -51.11907196]
[152.52490234 -53.16109467]
[139.22698975 -60.10123062]
[129.05374146 -71.12416840]
[123.19995117 -84.93646240]
[121.63942719 -70.01786041]
[131.18893433 -58.64498138]
[129.81887817 -43.49316406]
[117.82520294 -33.55386353]
[116.26467896 -18.63525963]
[114.70415497 -3.71665430]
[113.14363098 11.20195007]
[111.91665649 26.15168381]
[111.02384186 41.12509155]
[110.13102722 56.09849548]
[109.23821259 71.07189941]
[108.34539032 86.04530334]
[115.53700256 95.20619965]
[114.75726318 106.82658386]
[106.40621948 114.94454193]
[105.29057312 129.90299988]
[104.17491913 144.86145020]
[104.62152863 159.85479736]
[106.62554169 174.72033691]
[108.62955475 189.58586121]
[110.63356781 204.45138550]
[120.14522552 217.09413147]
[114.17765808 230.74101257]
[116.18167114 245.60655212]
[118.40679169 260.44058228]
[120.85251617 275.23986816]
[123.29824829 290.03912354]
[125.74397278 304.83840942]
[128.18969727 319.63766479]
[130.63542175 334.43695068]
[136.04609680 320.44677734]
[146.34295654 309.53921509]
[159.99851990 303.33236694]
[174.98709106 302.74691772]
[189.08520508 307.86978149]
[200.20146179 317.94094849]
[206.68684387 331.46649170]
[207.57929993 346.43991089]
[202.74641418 360.64001465]
[192.90513611 371.96032715]
[179.51535034 378.72149658]
[164.56335449 379.92059326]
[150.26718140 375.37969971]
[138.74760437 365.77246094]
[131.71400452 352.52584839]
[131.04421997 367.51089478]
[130.37443542 382.49594116]
[129.92784119 397.48928833]
[129.70451355 412.48764038]
[129.48118591 427.48596191]
[129.25785828 442.48431396]
[129.03453064 457.48263550]
[128.81120300 472.48098755]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 210]
[3 209]
[4 208]
[5 207]
[6 206]
[7 205]
[10 204]
[11 203]
[12 202]
[13 187]
[14 186]
[15 185]
[16 184]
[17 183]
[18 182]
[21 181]
[22 180]
[24 178]
[25 177]
[26 176]
[27 175]
[42 174]
[43 173]
[44 172]
[46 169]
[47 168]
[48 167]
[49 166]
[50 165]
[54 164]
[55 163]
[56 162]
[57 161]
[60 158]
[61 157]
[62 140]
[63 139]
[64 138]
[67 136]
[68 135]
[82 124]
[83 123]
[84 122]
[85 121]
[86 120]
[87 119]
[88 118]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
