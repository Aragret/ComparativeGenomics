%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[172.45140076 516.65045166]
[185.16366577 508.56671143]
[180.12673950 494.43768311]
[175.08982849 480.30865479]
[170.05291748 466.17962646]
[165.01599121 452.05059814]
[159.97908020 437.92156982]
[154.94216919 423.79254150]
[149.73512268 418.54769897]
[149.93714905 409.41549683]
[145.11114502 395.21304321]
[140.28515625 381.01058960]
[136.26258850 395.46115112]
[126.05268860 406.45013428]
[111.93637848 411.52258301]
[97.06726837 409.54531860]
[84.76716614 400.95999146]
[77.78393555 387.68466187]
[77.67765808 372.68502808]
[84.47206879 359.31207275]
[96.64927673 350.55334473]
[111.48887634 348.36553955]
[125.67564392 353.23745728]
[136.04025269 364.08068848]
[133.59451294 349.28140259]
[131.14878845 334.48214722]
[128.70306396 319.68286133]
[118.99414062 308.38748169]
[124.37780762 293.51040649]
[121.93207550 278.71115112]
[119.48635101 263.91186523]
[109.77742767 252.61647034]
[115.16108704 237.73942566]
[112.71536255 222.94015503]
[110.26963806 208.14088440]
[107.82390594 193.34161377]
[105.37818146 178.54234314]
[90.81116486 178.18817139]
[76.55893707 175.15544128]
[63.10974503 169.54806519]
[50.92433167 161.55812073]
[40.42013931 151.45935059]
[31.95701981 139.59768677]
[25.82489586 126.37950134]
[22.23384476 112.25761414]
[21.30688477 97.71580505]
[23.07577324 83.25225067]
[27.47990990 69.36243439]
[34.36842346 56.52219009]
[43.50532150 45.17139816]
[54.57760239 35.69891357]
[67.20595551 28.42923546]
[80.95774841 23.61141014]
[78.73263550 8.77736568]
[76.50751495 -6.05667782]
[66.80868530 -18.55640793]
[72.57240295 -32.29063034]
[70.34729004 -47.12467194]
[67.57167816 -61.86563492]
[64.24942017 -76.49309540]
[60.92715836 -91.12055206]
[57.60489655 -105.74801636]
[53.41788483 -120.15179443]
[48.38097000 -134.28082275]
[36.45891190 -144.68154907]
[39.47320175 -159.26795959]
[34.43628693 -173.39698792]
[29.39937019 -187.52601624]
[24.36245346 -201.65505981]
[19.32553864 -215.78408813]
[14.28862190 -229.91311646]
[9.50793171 -234.48001099]
[7.98054695 -239.95394897]
[9.31892014 -244.53846741]
[4.70491123 -258.81121826]
[0.09090176 -273.08395386]
[-4.52310753 -287.35665894]
[-9.13711643 -301.62939453]
[-24.04478264 -299.62908936]
[-39.07003784 -300.32299805]
[-53.72988129 -303.68884277]
[-67.55305481 -309.61837769]
[-80.09521484 -317.92102051]
[-90.95316315 -328.32989502]
[-99.77787781 -340.51040649]
[-106.28567505 -354.07092285]
[-110.26735687 -368.57562256]
[-111.59492493 -383.55819702]
[-110.22570038 -398.53701782]
[-106.20371246 -413.03057861]
[-99.65824127 -426.57296753]
[-90.79969788 -438.72888184]
[-79.91284943 -449.10751343]
[-67.34765625 -457.37527466]
[-53.50804901 -463.26638794]
[-38.83890533 -466.59143066]
[-23.81177902 -467.24356079]
[-8.90973091 -465.20181274]
[5.38819933 -460.53179932]
[18.62239265 -453.38366699]
[30.36742592 -443.98718262]
[40.24574280 -432.64440918]
[47.93979645 -419.71994019]
[53.20225906 -405.62930298]
[55.86395645 -390.82540894]
[55.83933258 -375.78417969]
[53.12917709 -360.98907471]
[47.82061005 -346.91574097]
[40.08428192 -334.01654053]
[30.16887856 -322.70617676]
[18.39314270 -313.34817505]
[5.13561678 -306.24340820]
[9.74962616 -291.97067261]
[14.36363506 -277.69793701]
[18.97764397 -263.42520142]
[23.59165382 -249.15248108]
[28.41765213 -234.95002747]
[33.45456696 -220.82099915]
[38.49148560 -206.69197083]
[43.52840042 -192.56294250]
[48.56531525 -178.43391418]
[53.60223389 -164.30488586]
[65.16401672 -154.91474915]
[62.50999832 -139.31774902]
[67.54691315 -125.18871307]
[73.05715942 -139.13995361]
[85.65311432 -147.28500366]
[100.63681793 -146.58595276]
[112.41970825 -137.30351257]
[116.60706329 -122.89983368]
[111.63710022 -108.74711609]
[99.36349487 -100.12397766]
[84.36399841 -100.24662781]
[72.23236084 -109.07027435]
[75.55461884 -94.44281769]
[78.87687683 -79.81535339]
[82.19913483 -65.18789673]
[92.28005981 -76.29532623]
[107.25850677 -75.49160004]
[116.09293365 -63.36918259]
[112.27092743 -48.86428070]
[98.60992432 -42.66936111]
[85.18132782 -49.34978867]
[87.40644836 -34.51574707]
[96.94612122 -23.07704544]
[91.34156036 -8.28179455]
[93.56667328 6.55224895]
[95.79179382 21.38629341]
[111.16078949 22.06887054]
[126.10359192 25.72735023]
[140.04959106 32.22202682]
[152.46626282 41.30488968]
[162.87942505 52.62910080]
[170.89146423 65.76222992]
[176.19641113 80.20277405]
[178.59172058 95.39929962]
[177.98588562 110.77151489]
[174.40206909 125.73239899]
[167.97711182 139.71066284]
[158.95635986 152.17251587]
[147.68428040 162.64210510]
[134.59132385 170.71961975]
[120.17745209 176.09661865]
[122.62317657 190.89588928]
[125.06890869 205.69515991]
[127.51463318 220.49443054]
[129.96035767 235.29370117]
[139.84422302 247.64764404]
[134.28561401 261.46615601]
[136.73135376 276.26541138]
[139.17707825 291.06469727]
[149.06092834 303.41864014]
[143.50233459 317.23715210]
[145.94805908 332.03640747]
[148.39378357 346.83569336]
[150.83952332 361.63494873]
[154.48760986 376.18457031]
[159.31359863 390.38702393]
[164.13960266 404.58947754]
[169.07119751 418.75561523]
[174.10810852 432.88464355]
[179.14501953 447.01367188]
[184.18194580 461.14273071]
[189.21885681 475.27175903]
[194.25578308 489.40078735]
[199.29269409 503.52981567]
[214.25183105 501.74880981]
[229.23216248 503.34173584]
[243.48228455 508.22863770]
[256.28741455 516.16436768]
[267.00524902 526.75097656]
[275.09820557 539.45733643]
[280.16030884 553.64617920]
[281.93765259 568.60577393]
[280.34112549 583.58569336]
[275.45077515 597.83465576]
[267.51190186 610.63781738]
[256.92272949 621.35308838]
[244.21438599 629.44299316]
[230.02433777 634.50164795]
[215.06433105 636.27539062]
[200.08477783 634.67523193]
[185.83702087 629.78143311]
[173.03573608 621.83941650]
[162.32304382 611.24768066]
[154.23625183 598.53735352]
[149.18101501 584.34606934]
[147.41090393 569.38568115]
[149.01470947 554.40649414]
[153.91195679 540.15991211]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 186]
[3 185]
[4 184]
[5 183]
[6 182]
[7 181]
[8 180]
[10 179]
[11 178]
[12 177]
[24 176]
[25 175]
[26 174]
[27 173]
[29 171]
[30 170]
[31 169]
[33 167]
[34 166]
[35 165]
[36 164]
[37 163]
[53 148]
[54 147]
[55 146]
[57 144]
[58 143]
[59 137]
[60 136]
[61 135]
[62 134]
[63 125]
[64 124]
[66 122]
[67 121]
[68 120]
[69 119]
[70 118]
[71 117]
[74 116]
[75 115]
[76 114]
[77 113]
[78 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
