%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[23.73858261 344.06832886]
[26.78731918 358.77349854]
[28.07538986 373.73602295]
[27.58471489 388.74588013]
[25.32218170 403.59231567]
[21.31955338 418.06698608]
[15.63302040 431.96661377]
[8.34241104 445.09609985]
[-0.44992363 457.27111816]
[-10.62055397 468.32077026]
[-22.02670097 478.08990479]
[-34.50823975 486.44140625]
[-47.88994598 493.25802612]
[-61.98396301 498.44406128]
[-76.59243774 501.92669678]
[-91.51028442 503.65707397]
[-106.52808380 503.61090088]
[-121.43500519 501.78878784]
[-136.02177429 498.21633911]
[-150.08363342 492.94372559]
[-163.42315674 486.04492188]
[-175.85308838 477.61679077]
[-187.19892883 467.77767944]
[-197.30139160 456.66567993]
[-206.01867676 444.43679810]
[-213.22839355 431.26272583]
[-218.82931519 417.32839966]
[-222.74284363 402.82940674]
[-224.91400146 387.96929932]
[-225.31234741 372.95672607]
[-223.93226624 358.00241089]
[-220.79313660 343.31628418]
[-215.93902588 329.10452271]
[-209.43807983 315.56665039]
[-201.38157654 302.89270020]
[-191.88258362 291.26058960]
[-181.07447815 280.83364868]
[-169.10897827 271.75823975]
[-156.15406799 264.16174316]
[-142.39161682 258.15081787]
[-128.01480103 253.80987549]
[-113.22548676 251.19981384]
[-98.23126984 250.35729980]
[-83.24265289 251.29414368]
[-68.47004700 253.99720764]
[-54.12084579 258.42855835]
[-40.39648056 264.52593994]
[-27.48962593 272.20379639]
[-18.35082245 260.30914307]
[-9.21202087 248.41452026]
[-0.07321851 236.51989746]
[9.06558418 224.62525940]
[18.02627945 212.59588623]
[26.80688286 200.43441772]
[35.22150040 188.01692200]
[43.26267624 175.35440063]
[51.30384827 162.69187927]
[59.34502029 150.02935791]
[59.63624954 135.13760376]
[73.56580353 127.63572693]
[81.60697937 114.97319794]
[89.64814758 102.31067657]
[97.01883698 89.24649048]
[103.69903564 75.81611633]
[110.37922668 62.38573837]
[117.05942535 48.95536423]
[123.73961639 35.52498627]
[130.41981506 22.09461021]
[135.24580383 7.89215565]
[138.13108826 -6.82773590]
[141.01635742 -21.54762650]
[143.90162659 -36.26751709]
[146.78689575 -50.98741150]
[149.67218018 -65.70729828]
[148.25189209 -74.73063660]
[152.71153259 -80.62414551]
[155.81564331 -95.29944611]
[158.91975403 -109.97474670]
[162.02386475 -124.65004730]
[165.12797546 -139.32534790]
[152.71617126 -150.24958801]
[147.53677368 -165.85308838]
[150.91358948 -181.84729004]
[161.83227539 -193.88630676]
[177.24258423 -198.74787903]
[180.12785339 -213.46777344]
[173.59297180 -224.58795166]
[176.29916382 -236.78877258]
[186.26319885 -243.64768982]
[189.36730957 -258.32299805]
[192.47142029 -272.99829102]
[195.57553101 -287.67358398]
[181.49931335 -292.93838501]
[168.36505127 -300.24240112]
[156.46614075 -309.42245483]
[146.06843567 -320.27352905]
[137.40422058 -332.55313110]
[130.66703796 -345.98696899]
[126.00741577 -360.27493286]
[123.52944946 -375.09780884]
[123.28849030 -390.12442017]
[125.28993225 -405.01910400]
[129.48904419 -419.44912720]
[135.79203796 -433.09207153]
[144.05809021 -445.64315796]
[154.10255432 -456.82202148]
[165.70098877 -466.37887573]
[178.59432983 -474.10025024]
[192.49449158 -479.81365967]
[207.09097290 -483.39141846]
[222.05767822 -484.75363159]
[237.06022644 -483.86984253]
[251.76347351 -480.75982666]
[265.83892822 -475.49304199]
[278.97216797 -468.18716431]
[290.86975098 -459.00537109]
[301.26593018 -448.15283203]
[309.92840576 -435.87200928]
[316.66366577 -422.43719482]
[321.32125854 -408.14859009]
[323.79708862 -393.32537842]
[324.03591919 -378.29870605]
[322.03234863 -363.40429688]
[317.83117676 -348.97488403]
[311.52624512 -335.33282471]
[303.25839233 -322.78292847]
[293.21237183 -311.60549927]
[281.61254883 -302.05029297]
[268.71813965 -294.33074951]
[254.81713867 -288.61932373]
[240.22015381 -285.04364014]
[225.25325012 -283.68356323]
[210.25082397 -284.56948853]
[207.14671326 -269.89419556]
[204.04260254 -255.21887207]
[200.93850708 -240.54357910]
[207.26916504 -224.17623901]
[194.84774780 -210.58250427]
[191.96246338 -195.86260986]
[202.82485962 -187.58457947]
[209.09094238 -175.37536621]
[209.48716736 -161.59159851]
[203.87922668 -148.92158508]
[193.30940247 -139.86097717]
[179.80328369 -136.22123718]
[176.69917297 -121.54593658]
[173.59506226 -106.87063599]
[170.49095154 -92.19533539]
[167.38684082 -77.52003479]
[164.39205933 -62.82202911]
[161.50679016 -48.10213852]
[158.62152100 -33.38224792]
[155.73625183 -18.66235542]
[152.85098267 -3.94246340]
[149.96569824 10.77742767]
[159.39088440 -0.89159250]
[171.92626953 -9.12955570]
[186.37707520 -13.15127277]
[201.36593628 -12.57341671]
[215.46421814 -7.45106792]
[227.32815552 1.72754586]
[235.82696533 14.08757687]
[240.15057373 28.45094681]
[239.88690186 43.44862747]
[235.06106567 57.65114212]
[226.13304138 69.70478821]
[213.95379639 78.46070099]
[199.68417358 83.08431244]
[184.68426514 83.13492584]
[170.38375854 78.60773468]
[158.14569092 69.93422699]
[149.13652039 57.94110870]
[144.21493530 43.77149200]
[143.85018921 28.77480507]
[137.16999817 42.20518112]
[130.48980713 55.63555908]
[123.80960846 69.06593323]
[117.12940979 82.49630737]
[110.44921875 95.92668915]
[124.64136505 91.07045746]
[138.67950439 96.35539246]
[146.14559937 109.36529541]
[143.62623596 124.15220642]
[132.27323914 133.95574951]
[117.27705383 134.29388428]
[105.49372101 125.01201630]
[102.31067657 110.35185242]
[94.26950073 123.01437378]
[86.22833252 135.67689514]
[85.36193848 151.47436523]
[72.00754547 158.07052612]
[63.96637344 170.73304749]
[55.92520142 183.39558411]
[47.88402557 196.05810547]
[47.85548782 200.40013123]
[46.57547760 204.13189697]
[44.38950729 206.93492126]
[41.71104813 208.63563538]
[38.96833801 209.21502686]
[30.18773651 221.37648010]
[29.13751793 227.90400696]
[25.49520111 232.26640320]
[20.96021652 233.76405334]
[11.82141399 245.65869141]
[2.68261194 257.55331421]
[-6.45619011 269.44796753]
[-15.59499264 281.34259033]
[-4.85122728 291.83581543]
[4.57602978 303.52612305]
[12.55443478 316.24938965]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 207]
[49 206]
[50 205]
[51 204]
[52 203]
[53 200]
[54 199]
[55 194]
[56 193]
[57 192]
[58 191]
[60 189]
[61 188]
[62 187]
[63 179]
[64 178]
[65 177]
[66 176]
[67 175]
[68 174]
[69 155]
[70 154]
[71 153]
[72 152]
[73 151]
[74 150]
[76 149]
[77 148]
[78 147]
[79 146]
[80 145]
[85 139]
[86 138]
[89 136]
[90 135]
[91 134]
[92 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
