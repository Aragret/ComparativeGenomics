%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGACUCAUCUCUUUACUAGGCAUUAUAUCCGGAGCGGGCUACACAUCCUUCUCCGUCUAUUUCUUAUAACUCCGCGGUAACCGCACUUCCAUCGCCUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[73.50701904 753.78448486]
[59.53553391 759.29602051]
[44.99263000 763.04882812]
[30.09877014 764.98602295]
[15.07974529 765.07812500]
[0.16323753 763.32391357]
[-14.42462158 759.74981689]
[-28.46268463 754.41009521]
[-41.73813629 747.38574219]
[-54.04972839 738.78314209]
[-65.21081543 728.73278809]
[-75.05220032 717.38702393]
[-83.42469025 704.91778564]
[-90.20135498 691.51422119]
[-95.27947235 677.37945557]
[-98.58205414 662.72772217]
[-100.05903625 647.78118896]
[-99.68802643 632.76647949]
[-97.47463989 617.91113281]
[-93.45244598 603.44042969]
[-87.68241882 589.57373047]
[-80.25201416 576.52117920]
[-71.27389526 564.48071289]
[-60.88415527 553.63482666]
[-49.24030685 544.14794922]
[-36.51886368 536.16394043]
[-22.91267967 529.80383301]
[-8.62802315 525.16400146]
[6.11855507 522.31475830]
[21.10350037 521.29937744]
[36.09964371 522.13317871]
[38.76544189 507.37197876]
[41.43123627 492.61074829]
[32.75404739 480.55911255]
[35.24726105 465.55114746]
[47.94696426 456.53143311]
[42.59471893 442.63171387]
[52.66141129 430.42626953]
[55.32720947 415.66506958]
[57.99300385 400.90383911]
[59.21997833 385.95410156]
[58.99665070 370.95578003]
[58.77332306 355.95742798]
[58.54999542 340.95910645]
[58.32666779 325.96075439]
[58.10334015 310.96243286]
[57.88001251 295.96408081]
[57.65668488 280.96575928]
[49.38414764 293.47836304]
[36.28905106 300.79397583]
[21.29687119 301.27832031]
[7.75690222 294.82315063]
[-1.30599427 282.87057495]
[-3.86714387 268.09085083]
[0.64562130 253.78576660]
[11.22413731 243.15115356]
[25.50513840 238.56280518]
[40.29821014 241.04574585]
[52.29854202 250.04530334]
[58.82523727 263.55096436]
[61.05035400 248.71691895]
[63.27547455 233.88287354]
[65.50058746 219.04882812]
[67.72570801 204.21478271]
[55.05075455 212.23635864]
[40.38647461 209.08059692]
[32.13322830 196.55526733]
[35.01885223 181.83543396]
[47.39033127 173.35331726]
[62.16071701 175.96781921]
[70.86864471 188.18034363]
[74.40831757 173.60395813]
[77.94799042 159.02758789]
[81.48766327 144.45121765]
[85.02733612 129.87483215]
[88.56700897 115.29846191]
[81.11830139 102.87014771]
[84.53751373 88.78983307]
[96.85661316 81.16186523]
[92.59436798 65.92559814]
[103.11650848 55.38359833]
[106.65618134 40.80722427]
[110.19585419 26.23084641]
[113.73552704 11.65447140]
[115.51799774 -3.23924565]
[115.51799774 -18.23924637]
[107.78069305 -32.03941727]
[115.51799774 -44.76668930]
[115.51799774 -59.76668930]
[112.54843140 -65.67373657]
[112.94785309 -71.34273529]
[115.74797058 -75.21163177]
[116.19458008 -90.20498657]
[108.87158966 -104.22940826]
[116.98439789 -116.72066498]
[117.43100739 -131.71401978]
[110.10801697 -145.73843384]
[118.22082520 -158.22970581]
[118.66743469 -173.22305298]
[104.78871155 -179.42382812]
[94.34300995 -190.46717834]
[88.92321777 -204.66909790]
[89.35581970 -219.86387634]
[95.57484436 -233.73442078]
[106.63193512 -244.16558838]
[120.84096527 -249.56669617]
[136.03515625 -249.11410522]
[149.89752197 -242.87683105]
[160.31413269 -231.80603027]
[165.69653320 -217.58992004]
[165.22396851 -202.39633179]
[158.96846008 -188.54219055]
[147.88397217 -178.14015198]
[133.66078186 -172.77644348]
[133.21417236 -157.78309631]
[140.56910706 -144.83110046]
[132.42436218 -131.26741028]
[131.97775269 -116.27406311]
[139.33268738 -103.32205963]
[131.18792725 -89.75837708]
[130.74131775 -74.76502991]
[130.51799011 -59.76668930]
[130.51799011 -44.76668930]
[138.25529480 -32.03941727]
[130.51799011 -18.23924637]
[130.51799011 -3.23924565]
[137.77600098 -16.36637115]
[149.04045105 -26.27152252]
[162.98802185 -31.79105377]
[177.98016357 -32.27653885]
[192.25561523 -27.67093849]
[204.13731384 -18.51531601]
[212.22938538 -5.88526535]
[215.58122253 8.73544788]
[213.79902649 23.62919617]
[207.09216309 37.04627991]
[196.24856567 47.41046906]
[182.54212952 53.50419235]
[167.58305359 54.61156464]
[153.12873840 50.60249329]
[140.87724304 41.94795609]
[132.26788330 29.66468620]
[128.31190491 15.19414425]
[124.77223206 29.77051926]
[121.23255920 44.34689331]
[117.69288635 58.92327118]
[122.20831299 73.11693573]
[111.43299103 84.70153809]
[118.88169861 97.12985229]
[115.46248627 111.21016693]
[103.14338684 118.83813477]
[99.60371399 133.41450500]
[96.06404114 147.99089050]
[92.52436829 162.56726074]
[88.98469543 177.14363098]
[85.44502258 191.72001648]
[82.55975342 206.43991089]
[80.33463287 221.27394104]
[78.10951996 236.10798645]
[75.88439941 250.94203186]
[73.65927887 265.77609253]
[72.65502167 280.74243164]
[72.87834930 295.74075317]
[73.10167694 310.73910522]
[73.32500458 325.73742676]
[73.54833221 340.73577881]
[73.77165985 355.73410034]
[73.99498749 370.73245239]
[74.21831512 385.73077393]
[81.87950134 372.83480835]
[94.07636261 364.10345459]
[108.75351715 361.00811768]
[123.43759918 364.07040405]
[135.65409851 372.77426147]
[143.34429932 385.65295410]
[145.21229553 400.53619385]
[140.94326782 414.91586304]
[131.25663757 426.36877441]
[117.78476715 432.96490479]
[102.79791260 433.59268188]
[88.82160950 428.14630127]
[78.21112061 417.54357910]
[72.75421906 403.56964111]
[70.08842468 418.33087158]
[67.42263031 433.09207153]
[72.58419800 448.04763794]
[62.70817947 459.19723511]
[71.45072937 472.08932495]
[68.53695679 487.02130127]
[56.19245529 495.27655029]
[53.52665710 510.03775024]
[50.86086273 524.79895020]
[65.20137787 529.26318359]
[78.88458252 535.45587158]
[91.70303345 543.28320312]
[103.46241760 552.62646484]
[113.98445892 563.34405518]
[123.10964966 575.27343750]
[130.69964600 588.23382568]
[136.63940430 602.02868652]
[140.83885193 616.44897461]
[143.23435974 631.27600098]
[143.78958130 646.28509521]
[142.49610901 661.24859619]
[139.37356567 675.93969727]
[134.46926880 690.13574219]
[127.85758209 703.62145996]
[119.63873291 716.19250488]
[109.93730927 727.65820312]
[98.90038300 737.84472656]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 192]
[32 191]
[33 190]
[36 187]
[38 185]
[39 184]
[40 183]
[41 169]
[42 168]
[43 167]
[44 166]
[45 165]
[46 164]
[47 163]
[48 162]
[60 161]
[61 160]
[62 159]
[63 158]
[64 157]
[71 156]
[72 155]
[73 154]
[74 153]
[75 152]
[76 151]
[79 148]
[81 146]
[82 145]
[83 144]
[84 143]
[85 126]
[86 125]
[88 123]
[89 122]
[92 121]
[93 120]
[95 118]
[96 117]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
