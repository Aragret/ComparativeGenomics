%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[229.70866394 423.47329712]
[238.57212830 411.33673096]
[249.14553833 400.65679932]
[261.19268799 391.67214966]
[254.11557007 378.44662476]
[247.03846741 365.22106934]
[239.96134949 351.99554443]
[232.78599548 338.82308960]
[225.51275635 325.70437622]
[210.00447083 317.49096680]
[210.47749329 299.08288574]
[203.00975037 286.07394409]
[195.54200745 273.06497192]
[179.13522339 269.36956787]
[170.30361938 254.66183472]
[174.93095398 237.79153442]
[167.27035522 224.89520264]
[159.60975647 211.99888611]
[151.94915771 199.10255432]
[144.19276428 186.26361084]
[136.34101868 173.48277283]
[123.08630371 166.68850708]
[122.45521545 150.87989807]
[114.60345459 138.09906006]
[106.75170135 125.31821442]
[98.89994812 112.53736877]
[90.76473236 99.93505859]
[82.35011292 87.51756287]
[73.66028595 75.29107666]
[64.69959259 63.26169968]
[55.73889542 51.23232269]
[57.76015472 66.09551239]
[54.64366531 80.76819611]
[46.75555038 93.52662659]
[35.02249146 102.87196350]
[20.82288170 107.70632935]
[5.82487535 107.46178436]
[-8.20957661 102.16705322]
[-19.63172150 92.44416046]
[-27.09969521 79.43534088]
[-29.73616982 64.66886139]
[-27.23141289 49.87946701]
[-19.87968254 36.80460358]
[-8.54465199 26.98029137]
[5.44205093 21.56068420]
[20.43728256 21.18247032]
[34.67941666 25.89008141]
[46.49635315 35.13163376]
[40.62739182 21.32745934]
[34.75843430 7.52328157]
[28.88947105 -6.28089523]
[27.82748032 8.68146324]
[22.64715004 22.75854301]
[13.75702381 34.84016800]
[1.85821187 43.97352982]
[-12.11089420 49.43833160]
[-27.04863358 50.80359650]
[-41.77695084 47.96165848]
[-55.13431549 41.13664246]
[-66.06730652 30.86679459]
[-73.71369934 17.96204185]
[-77.47046661 3.44010425]
[-77.04134369 -11.55375576]
[-72.46016693 -25.83706093]
[-64.08822632 -38.28337097]
[-52.58576965 -47.91111755]
[-38.85992813 -53.96101379]
[-23.99317932 -55.95594025]
[-9.15797424 -53.73857498]
[4.47571707 -47.48377991]
[15.83268738 -37.68483734]
[24.01874352 -25.11139297]
[22.45821953 -40.02999878]
[20.89769745 -54.94860077]
[19.33717346 -69.86720276]
[17.77665138 -84.78581238]
[14.20866299 -90.35186768]
[14.01614666 -96.03165436]
[16.39856911 -100.17086792]
[15.28291988 -115.12932587]
[14.16727066 -130.08778381]
[13.05162239 -145.04623413]
[1.09311187 -148.43357849]
[-9.22923565 -155.31269836]
[-16.92823410 -165.00769043]
[-21.27312469 -176.57423401]
[-21.85891724 -188.89155579]
[-18.64409256 -200.77105713]
[-11.95316792 -211.07095337]
[-2.44399834 -218.80610657]
[8.95687580 -223.24215698]
[8.51027012 -238.23550415]
[8.06366444 -253.22885132]
[7.61705828 -268.22219849]
[-7.00034809 -272.03115845]
[-19.95183182 -279.80520630]
[-30.18747139 -290.91412354]
[-36.87751389 -304.45739746]
[-39.47962189 -319.33709717]
[-37.78285980 -334.34701538]
[-31.92477417 -348.27035522]
[-22.38025284 -359.97842407]
[-9.92302895 -368.52209473]
[4.43704796 -373.20877075]
[19.53586960 -373.65850830]
[34.14944077 -369.83486938]
[47.09310913 -362.04782104]
[57.31758499 -350.92861938]
[63.99401474 -337.37863159]
[66.58117676 -322.49633789]
[64.86933899 -307.48812866]
[58.99726486 -293.57067871]
[49.44098663 -281.87219238]
[36.97518539 -273.34106445]
[22.61040878 -268.66882324]
[23.05701447 -253.67546082]
[23.50362015 -238.68211365]
[23.95022583 -223.68875122]
[40.37068939 -217.09449768]
[52.28670120 -203.94143677]
[57.26193237 -186.84976196]
[54.24898148 -169.25175476]
[43.80947876 -154.70252991]
[28.01007652 -146.16188049]
[29.12572479 -131.20343018]
[30.24137306 -116.24497223]
[31.35702133 -101.28652191]
[32.69525528 -86.34633636]
[34.25577927 -71.42772675]
[35.81630325 -56.50912476]
[37.37682343 -41.59051895]
[38.93734741 -26.67191505]
[42.69364929 -12.14985561]
[48.56261063 1.65432096]
[54.43157196 15.45849800]
[60.30052948 29.26267433]
[67.76827240 42.27162552]
[76.72896576 54.30100632]
[85.68966675 66.33038330]
[89.10683441 67.19944763]
[92.27284241 69.76683044]
[94.39405060 73.89645386]
[94.76760864 79.10294342]
[103.18222809 91.52043915]
[106.82806396 92.77752686]
[109.90209198 95.63552856]
[111.70175171 99.80305481]
[111.68078613 104.68561554]
[119.53254700 117.46646118]
[127.38430023 130.24729919]
[135.23605347 143.02813721]
[149.05236816 150.73657227]
[149.12185669 165.63101196]
[156.97361755 178.41186523]
[164.13211060 184.08581543]
[164.84548950 191.44195557]
[172.50608826 204.33828735]
[180.16668701 217.23460388]
[187.82727051 230.13093567]
[201.17552185 231.93069458]
[210.90795898 240.95787048]
[213.62390137 253.75262451]
[208.55096436 265.59722900]
[216.01870728 278.60620117]
[223.48645020 291.61514282]
[235.71012878 295.73150635]
[241.66221619 306.72042847]
[238.63145447 318.43115234]
[245.90467834 331.54986572]
[252.80268860 337.53778076]
[253.18688965 344.91845703]
[260.26397705 358.14398193]
[267.34109497 371.36950684]
[274.41821289 384.59503174]
[288.57702637 379.55664062]
[303.32864380 376.68490601]
[318.34353638 376.04394531]
[333.28625488 377.64810181]
[347.82293701 381.46151733]
[361.62887573 387.39904785]
[374.39559937 395.32797241]
[385.83792114 405.07122803]
[395.70019531 416.41110229]
[403.76214600 429.09429932]
[409.84359741 442.83740234]
[413.80871582 457.33346558]
[415.56893921 472.25857544]
[415.08493042 487.27935791]
[412.36749268 502.06018066]
[407.47732544 516.27087402]
[400.52371216 529.59399414]
[391.66195679 541.73181152]
[381.09005737 552.41326904]
[369.04421997 561.39965820]
[355.79351807 568.49023438]
[341.63397217 573.52661133]
[326.88192749 576.39624023]
[311.86694336 577.03503418]
[296.92446899 575.42877197]
[282.38833618 571.61328125]
[268.58325195 565.67376709]
[255.81764221 557.74304199]
[244.37670898 547.99816895]
[234.51603699 536.65686035]
[226.45591736 523.97253418]
[220.37640381 510.22854614]
[216.41334534 495.73193359]
[214.65525818 480.80654907]
[215.14141846 465.78585815]
[217.86096191 451.00540161]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 174]
[5 173]
[6 172]
[7 171]
[8 169]
[9 168]
[11 165]
[12 164]
[13 163]
[16 159]
[17 158]
[18 157]
[19 156]
[20 154]
[21 153]
[23 151]
[24 150]
[25 149]
[26 148]
[27 144]
[28 143]
[29 139]
[30 138]
[31 137]
[48 136]
[49 135]
[50 134]
[51 133]
[72 132]
[73 131]
[74 130]
[75 129]
[76 128]
[79 127]
[80 126]
[81 125]
[82 124]
[91 118]
[92 117]
[93 116]
[94 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
