%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[121.65988159 402.55838013]
[134.60525513 394.79180908]
[130.63316345 380.32727051]
[126.66106415 365.86276245]
[113.52894592 354.22167969]
[118.33251190 336.44509888]
[114.14550018 322.04132080]
[109.95848846 307.63754272]
[105.77147675 293.23376465]
[101.58446503 278.82995605]
[98.68713379 276.82052612]
[96.61914062 273.30792236]
[96.07639313 268.69720459]
[97.54756927 263.68893433]
[94.00789642 249.11256409]
[90.46822357 234.53617859]
[86.92855072 219.95980835]
[83.44117737 234.54878235]
[76.03492737 247.59284973]
[65.29387665 258.06326294]
[52.06511307 265.13433838]
[37.39191055 268.24835205]
[22.43146324 267.15979004]
[8.36361217 261.95443726]
[-3.70219398 253.04286194]
[-12.81439495 241.12783813]
[-18.25436401 227.14903259]
[-19.59308434 212.20889282]
[-16.72497559 197.48565674]
[-9.87623215 184.14044189]
[0.41302705 173.22572327]
[13.33134842 165.60226440]
[27.85993958 161.87130737]
[42.85301208 162.32707214]
[57.12815475 166.93362427]
[69.55957031 175.32768250]
[79.16685486 186.84722900]
[85.19328308 200.58714294]
[77.40123749 191.33453369]
[78.02251434 178.85264587]
[87.26879883 169.85992432]
[88.38444519 154.90145874]
[89.50009155 139.94300842]
[90.61574554 124.98455811]
[91.73139191 110.02610779]
[92.40117645 95.04106903]
[92.62450409 80.04272461]
[92.84783173 65.04438782]
[93.07115936 50.04605484]
[93.29448700 35.04771805]
[93.51781464 20.04937935]
[93.74114227 5.05104160]
[91.18531036 -9.72961235]
[85.93859100 -23.78208351]
[74.54965210 -29.83641243]
[70.46894836 -41.64876175]
[75.36856079 -52.70861435]
[70.33164978 -66.83764648]
[65.29473114 -80.96667480]
[53.37267303 -91.36740112]
[56.38696289 -105.95381165]
[51.35004807 -120.08283997]
[46.31312943 -134.21186829]
[40.54709625 -148.05935669]
[34.06760025 -161.58770752]
[27.58810616 -175.11604309]
[21.10861015 -188.64439392]
[14.62911415 -202.17274475]
[8.14961815 -215.70108032]
[-6.18743658 -211.20335388]
[-21.01866913 -208.79185486]
[-36.04213333 -208.51570129]
[-50.95197296 -210.38049316]
[-65.44464111 -214.34828186]
[-79.22508240 -220.33828735]
[-92.01275635 -228.22854614]
[-103.54730988 -237.85844421]
[-113.59391022 -249.03190613]
[-121.94804382 -261.52148438]
[-128.43960571 -275.07287598]
[-132.93644714 -289.41021729]
[-135.34703064 -304.24157715]
[-135.62226868 -319.26507568]
[-133.75654602 -334.17480469]
[-129.78785706 -348.66720581]
[-123.79700470 -362.44729614]
[-115.90594482 -375.23446655]
[-106.27533722 -386.76843262]
[-95.10124207 -396.81433105]
[-82.61116028 -405.16769409]
[-69.05936432 -411.65841675]
[-54.72175217 -416.15438843]
[-39.89022064 -418.56405640]
[-24.86672020 -418.83834839]
[-9.95711327 -416.97171021]
[4.53506327 -413.00210571]
[18.31476593 -407.01040649]
[31.10145760 -399.11856079]
[42.63481903 -389.48724365]
[52.68004227 -378.31253052]
[61.03262329 -365.82192993]
[67.52251434 -352.26971436]
[72.01758575 -337.93185425]
[74.42633057 -323.10015869]
[74.69969940 -308.07662964]
[72.83213043 -293.16714478]
[68.86165619 -278.67523193]
[62.86909485 -264.89587402]
[54.97645187 -252.10968018]
[45.34441757 -240.57691956]
[34.16908264 -230.53239441]
[21.67796326 -222.18057251]
[28.15745926 -208.65223694]
[34.63695526 -195.12388611]
[41.11645126 -181.59553528]
[47.59594727 -168.06719971]
[54.07544327 -154.53884888]
[58.97686005 -168.71545410]
[71.77902222 -176.53240967]
[86.62895203 -174.41589355]
[96.73745728 -163.33357239]
[97.48307800 -148.35211182]
[88.52490997 -136.32084656]
[73.95851898 -132.74031067]
[60.44216156 -139.24877930]
[65.47908020 -125.11975861]
[70.51599121 -110.99073029]
[82.07777405 -101.60060120]
[79.42375946 -86.00359344]
[84.46067810 -71.87455750]
[89.49759674 -57.74553299]
[103.45915985 -47.11343002]
[99.99106598 -29.02880096]
[105.23777771 -14.97633076]
[106.75165558 -29.89974213]
[111.62134552 -44.08727646]
[119.59140015 -56.79468155]
[130.24372864 -67.35535431]
[143.01954651 -75.21530151]
[157.24862671 -79.96221161]
[172.18455505 -81.34706116]
[187.04383850 -79.29721832]
[201.04696655 -73.92019653]
[213.45938110 -65.49807739]
[223.62992859 -54.47266006]
[231.02510071 -41.42232132]
[235.25695801 -27.03165054]
[236.10351562 -12.05555725]
[233.52033997 2.72034287]
[227.64295959 16.52093697]
[218.77967834 28.62227249]
[207.39546204 38.38953781]
[194.08747864 45.31035995]
[179.55386353 49.02169037]
[164.55700684 49.32883835]
[149.88362122 46.21569061]
[136.30343628 39.84555435]
[124.52885437 30.55260086]
[115.17752838 18.82431412]
[108.73947906 5.27436924]
[108.51615143 20.27270699]
[108.29282379 35.27104568]
[108.06949615 50.26938248]
[107.84616852 65.26771545]
[107.62284088 80.26605988]
[107.39951324 95.26439667]
[109.32935333 97.62346649]
[110.44347382 100.73686981]
[110.46083069 104.30381775]
[109.21543884 107.92393494]
[106.68984222 111.14175415]
[105.57419586 126.10020447]
[104.45854950 141.05865479]
[103.34289551 156.01712036]
[102.22724915 170.97557068]
[110.60553741 187.37330627]
[100.16668701 201.47994995]
[101.50492096 216.42013550]
[105.04459381 230.99652100]
[108.58426666 245.57289124]
[112.12393951 260.14926147]
[115.98825073 274.64294434]
[120.17526245 289.04675293]
[124.36226654 303.45053101]
[128.54928589 317.85430908]
[132.73629761 332.25808716]
[143.64338684 339.14273071]
[146.83422852 351.22586060]
[141.12557983 361.89065552]
[145.09768677 376.35519409]
[149.06977844 390.81970215]
[164.16607666 390.88577271]
[178.68441772 395.02343750]
[191.54745483 402.92565918]
[201.80064392 414.00604248]
[208.68315125 427.44232178]
[211.68424988 442.23745728]
[210.58122253 457.29354858]
[205.45591736 471.49331665]
[196.68869019 483.78308105]
[184.93011475 493.25085449]
[171.05274963 499.19403076]
[156.08639526 501.17160034]
[141.14164734 499.03683472]
[127.32752228 492.94812012]
[115.66909790 483.35729980]
[107.03152466 470.97607422]
[102.05575562 456.72320557]
[101.11103058 441.65637207]
[104.26744843 426.89358521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 191]
[3 190]
[4 189]
[6 186]
[7 185]
[8 184]
[9 183]
[10 182]
[14 181]
[15 180]
[16 179]
[17 178]
[38 177]
[41 175]
[42 174]
[43 173]
[44 172]
[45 171]
[46 166]
[47 165]
[48 164]
[49 163]
[50 162]
[51 161]
[52 160]
[53 134]
[54 133]
[57 131]
[58 130]
[59 129]
[61 127]
[62 126]
[63 125]
[64 117]
[65 116]
[66 115]
[67 114]
[68 113]
[69 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
