%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[104.91582489 521.42529297]
[92.69426727 530.32049561]
[78.39322662 535.21655273]
[63.28434753 535.67816162]
[48.71109009 531.66424561]
[35.96930695 523.53167725]
[26.19198608 512.00366211]
[20.24851990 498.10522461]
[18.66739845 483.07220459]
[21.58921242 468.24136353]
[28.75415802 454.93139648]
[39.52513123 444.32586670]
[52.94438553 437.36776733]
[67.81868744 434.67584229]
[61.64860535 421.11932373]
[70.97097015 408.33636475]
[72.75344086 393.44262695]
[74.53590393 378.54891968]
[76.31837463 363.65521240]
[77.65660858 348.71502686]
[78.54942322 333.74160767]
[79.44223785 318.76821899]
[80.33505249 303.79479980]
[81.22786713 288.82138062]
[74.26182556 275.65615845]
[82.80680847 262.34097290]
[83.69962311 247.36756897]
[84.59244537 232.39416504]
[85.48526001 217.42076111]
[86.37807465 202.44735718]
[87.27088928 187.47395325]
[88.16370392 172.50054932]
[74.93572998 169.05221558]
[62.57568741 163.21272278]
[51.51159668 155.18424988]
[42.12659073 145.24484253]
[34.74565125 133.73866272]
[29.62437820 121.06416321]
[26.94010925 107.66024017]
[26.78579521 93.99105835]
[29.16678429 80.52996063]
[34.00062180 67.74308014]
[41.11992264 56.07320404]
[50.27815247 45.92445374]
[61.15817642 37.64825821]
[73.38323975 31.53121185]
[86.52999878 27.78513908]
[100.14320374 26.53976250]
[101.70372772 11.62115765]
[103.26425171 -3.29744720]
[104.26850891 -18.26379204]
[104.71511841 -33.25714111]
[105.16172028 -48.25049210]
[105.60832977 -63.24384308]
[102.81595612 -69.23668671]
[103.38398743 -74.89127350]
[106.29805756 -78.67508698]
[107.19087219 -93.64849854]
[108.08368683 -108.62190247]
[108.97650146 -123.59530640]
[109.86931610 -138.56871033]
[102.44229126 -125.53647614]
[92.24483490 -114.53593445]
[79.81188965 -106.14415741]
[65.79566956 -100.80136108]
[50.93142700 -98.78781891]
[35.99891663 -100.20915222]
[21.78146935 -104.99079895]
[9.02490234 -112.88193512]
[-1.60160160 -123.46859741]
[-9.54059601 -136.19543457]
[-14.37561798 -150.39482117]
[-15.85303116 -165.32188416]
[-13.89533329 -180.19358826]
[-8.60522270 -194.22976685]
[-0.26020640 -206.69415283]
[10.70195198 -216.93286133]
[23.70619965 -224.40878296]
[38.07035828 -228.72976685]
[53.04091644 -229.66914368]
[67.83254242 -227.17761230]
[81.66931152 -221.38589478]
[93.82535553 -212.59779358]
[103.66300201 -201.27433777]
[110.66618347 -188.00952148]
[114.46753693 -173.49919128]
[114.86750031 -158.50288391]
[121.14485931 -172.12619019]
[127.42221832 -185.74951172]
[133.69958496 -199.37283325]
[139.97694397 -212.99613953]
[146.25430298 -226.61946106]
[152.53166199 -240.24278259]
[139.69805908 -248.03999329]
[127.83695984 -257.24932861]
[117.10297394 -267.75073242]
[107.63605499 -279.40728760]
[99.55961609 -292.06701660]
[92.97895050 -305.56488037]
[87.97985840 -319.72494507]
[84.62751007 -334.36254883]
[82.96560669 -349.28686523]
[83.01581573 -364.30337524]
[84.77748871 -379.21627808]
[88.22765350 -393.83111572]
[93.32131958 -407.95742798]
[99.99210358 -421.41098022]
[108.15302277 -434.01641846]
[117.69767761 -445.60940552]
[128.50164795 -456.03878784]
[140.42407227 -465.16860962]
[153.30952454 -472.87982178]
[166.99002075 -479.07192993]
[181.28718567 -483.66415405]
[196.01464844 -486.59667969]
[210.98039246 -487.83123779]
[225.98931885 -487.35174561]
[240.84576416 -485.16445923]
[255.35601807 -481.29791260]
[269.33090210 -475.80245972]
[282.58828735 -468.74981689]
[294.95526123 -460.23184204]
[306.27062988 -450.35968018]
[316.38690186 -439.26196289]
[325.17211914 -427.08340454]
[332.51184082 -413.98275757]
[338.31030273 -400.13085938]
[342.49191284 -385.70825195]
[345.00219727 -370.90295410]
[345.80841064 -355.90802002]
[344.90005493 -340.91894531]
[342.28894043 -326.13113403]
[338.00915527 -311.73733521]
[332.11642456 -297.92526245]
[324.68765259 -284.87493896]
[315.81964111 -272.75650024]
[305.62799072 -261.72799683]
[294.24560547 -251.93313599]
[281.82089233 -243.49964905]
[268.51577759 -236.53747559]
[254.50375366 -231.13739014]
[239.96748352 -227.36978149]
[225.09649658 -225.28376770]
[210.08465576 -224.90657043]
[195.12767029 -226.24307251]
[180.42053223 -229.27586365]
[166.15498352 -233.96540833]
[159.87760925 -220.34210205]
[153.60025024 -206.71878052]
[147.32289124 -193.09545898]
[141.04553223 -179.47215271]
[134.76817322 -165.84883118]
[128.49081421 -152.22552490]
[124.84272766 -137.67590332]
[123.94991302 -122.70249176]
[123.05709076 -107.72908783]
[122.16427612 -92.75567627]
[121.27146149 -77.78227234]
[120.60167694 -62.79723358]
[120.15506744 -47.80388641]
[119.70846558 -32.81053543]
[119.26185608 -17.81718636]
[131.80310059 -26.04623985]
[146.10302734 -21.51721382]
[151.62026978 -7.56873703]
[144.28771973 5.51689386]
[129.51066589 8.09343815]
[118.18285370 -1.73692417]
[116.62232971 13.18168068]
[115.06180573 28.10028458]
[130.55590820 33.19607925]
[144.54364014 41.58518219]
[156.33546448 52.85403442]
[165.35005188 66.44709015]
[171.14300537 81.69425201]
[173.42872620 97.84384918]
[172.09455872 114.09973907]
[167.20623779 129.66053772]
[159.00479126 143.75912476]
[147.89451599 155.70046997]
[134.42311096 164.89588928]
[119.25472260 170.89204407]
[103.13710785 173.39335632]
[102.24429321 188.36676025]
[101.35147858 203.34017944]
[100.45866394 218.31358337]
[99.56584930 233.28698730]
[98.67303467 248.26039124]
[97.78021240 263.23379517]
[104.68239594 277.47003174]
[96.20127106 289.71420288]
[95.30845642 304.68762207]
[94.41564178 319.66101074]
[93.52282715 334.63442993]
[92.63001251 349.60781860]
[94.71041870 353.41912842]
[95.40041351 357.30349731]
[94.84774780 360.81491089]
[93.32987213 363.60104370]
[91.21208954 365.43765259]
[89.42962646 380.33139038]
[87.64715576 395.22509766]
[85.86469269 410.11880493]
[91.90727997 424.74063110]
[82.71240997 436.45831299]
[96.53140259 442.58422852]
[107.92971802 452.51245117]
[115.89382172 465.36019897]
[119.71555328 479.98501587]
[119.05509186 495.08651733]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 205]
[16 203]
[17 202]
[18 201]
[19 200]
[20 195]
[21 194]
[22 193]
[23 192]
[24 191]
[26 189]
[27 188]
[28 187]
[29 186]
[30 185]
[31 184]
[32 183]
[48 170]
[49 169]
[50 168]
[51 162]
[52 161]
[53 160]
[54 159]
[57 158]
[58 157]
[59 156]
[60 155]
[61 154]
[87 153]
[88 152]
[89 151]
[90 150]
[91 149]
[92 148]
[93 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
