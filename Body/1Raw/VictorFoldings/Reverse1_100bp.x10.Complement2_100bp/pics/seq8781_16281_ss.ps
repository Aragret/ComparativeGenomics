%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[185.11563110 331.66946411]
[184.61117554 316.67071533]
[185.24250793 301.67672729]
[187.00601196 286.77346802]
[189.89158630 272.04626465]
[193.88270569 257.57946777]
[198.95651245 243.45593262]
[205.08392334 229.75659180]
[212.22987366 216.55989075]
[220.35339355 203.94142151]
[208.39106750 194.89141846]
[196.42872620 185.84141541]
[184.46638489 176.79141235]
[172.50404358 167.74142456]
[167.73437500 167.49812317]
[163.06687927 164.25596619]
[160.32562256 158.23956299]
[148.63804626 148.83741760]
[136.95046997 139.43525696]
[125.26288605 130.03311157]
[113.57530212 120.63095856]
[101.88772583 111.22881317]
[105.20814514 125.85668945]
[100.19323730 139.99354553]
[88.39693451 149.25892639]
[73.47444153 150.78184509]
[60.04966354 144.09040833]
[52.28240585 131.25804138]
[52.57944107 116.26097870]
[60.84873199 103.74623871]
[74.52794647 97.59163666]
[89.37866211 99.70435333]
[79.05199432 88.82501984]
[68.72532654 77.94567871]
[58.39865875 67.06634521]
[48.07199097 56.18701172]
[37.74531937 45.30767822]
[38.35619736 60.29523468]
[30.13717461 72.84304810]
[16.15374756 78.27110291]
[1.62138498 74.55485535]
[-8.03969860 63.08038712]
[-9.22615814 48.12738419]
[-1.49547446 35.27294922]
[12.26899910 29.31146622]
[26.93446732 32.46700668]
[17.97377014 20.43762970]
[9.01307487 8.40825081]
[-5.43586206 1.96319187]
[-6.83388281 -12.86565876]
[-15.79457855 -24.89503670]
[-24.75527382 -36.92441559]
[-33.71596909 -48.95379257]
[-42.67666626 -60.98316956]
[-51.63736343 -73.01255035]
[-60.59805679 -85.04192352]
[-73.55307770 -77.45043182]
[-87.26460266 -71.33020782]
[-101.56619263 -66.75553131]
[-116.28424072 -63.78194427]
[-131.24008179 -62.44553757]
[-146.25216675 -62.76254272]
[-161.13825989 -64.72910309]
[-175.71766663 -68.32135010]
[-189.81340027 -73.49568176]
[-203.25433350 -80.18927002]
[-215.87733459 -88.32088470]
[-227.52915955 -97.79179382]
[-238.06837463 -108.48704529]
[-247.36701965 -120.27679443]
[-255.31224060 -133.01792908]
[-261.80758667 -146.55580139]
[-266.77420044 -160.72604370]
[-270.15179443 -175.35667419]
[-271.89938354 -190.27005005]
[-271.99572754 -205.28517151]
[-270.43966675 -220.21977234]
[-267.25009155 -234.89253235]
[-262.46572876 -249.12533569]
[-256.14465332 -262.74545288]
[-248.36360168 -275.58749390]
[-239.21701050 -287.49560547]
[-228.81591797 -298.32522583]
[-217.28659058 -307.94488525]
[-204.76898193 -316.23779297]
[-191.41505432 -323.10333252]
[-177.38688660 -328.45812988]
[-162.85478210 -332.23718262]
[-147.99514771 -334.39459229]
[-132.98837280 -334.90423584]
[-118.01660919 -333.75985718]
[-103.26161194 -330.97540283]
[-88.90248871 -326.58462524]
[-75.11354828 -320.64086914]
[-62.06217957 -313.21624756]
[-49.90681076 -304.40090942]
[-38.79499435 -294.30184937]
[-28.86161804 -283.04168701]
[-20.22726631 -270.75711060]
[-12.99675083 -257.59722900]
[-7.25784397 -243.72175598]
[-3.08021116 -229.29919434]
[-0.51456469 -214.50457764]
[0.40795091 -199.51750183]
[-0.32386288 -184.51992798]
[-2.70112252 -169.69386292]
[-6.69497013 -155.21932983]
[-12.25692463 -141.27200317]
[-19.31946754 -128.02120972]
[-27.79686737 -115.62778473]
[-37.58621597 -104.24218750]
[-48.56867981 -94.00261688]
[-39.60798645 -81.97324371]
[-30.64728928 -69.94386292]
[-21.68659210 -57.91448593]
[-12.72589684 -45.88510895]
[-3.76520085 -33.85573196]
[5.19549513 -21.82635498]
[19.00350380 -16.24171638]
[21.04245186 -0.55244493]
[30.00314903 11.47693253]
[38.96384430 23.50630951]
[48.62465668 34.98101044]
[58.95132446 45.86034393]
[69.27799225 56.73967743]
[79.60466003 67.61901093]
[89.93132782 78.49834442]
[100.25799561 89.37768555]
[111.28987885 99.54122925]
[122.97745514 108.94338226]
[134.66503906 118.34552765]
[146.35261536 127.74768066]
[158.04020691 137.14984131]
[169.72778320 146.55198669]
[181.55404663 155.77908325]
[193.51638794 164.82908630]
[205.47872925 173.87908936]
[217.44105530 182.92907715]
[229.40339661 191.97908020]
[239.33677673 180.72984314]
[250.09246826 170.26406860]
[261.60888672 160.64170837]
[273.82003784 151.91789246]
[286.65597534 144.14257812]
[300.04321289 137.36029053]
[313.90505981 131.60990906]
[328.16207886 126.92435455]
[342.73266602 123.33046722]
[357.53329468 120.84883118]
[372.47921753 119.49365997]
[387.48483276 119.27272797]
[402.46420288 120.18727875]
[417.33148193 122.23209381]
[432.00152588 125.39545441]
[446.39035034 129.65924072]
[460.41546631 134.99902344]
[473.99658203 141.38421631]
[487.05587769 148.77825928]
[499.51858521 157.13879395]
[511.31329346 166.41792297]
[522.37243652 176.56250000]
[532.63269043 187.51441956]
[542.03527832 199.21093750]
[550.52636719 211.58508301]
[558.05725098 224.56594849]
[564.58483887 238.07920837]
[570.07171631 252.04742432]
[574.48651123 266.39062500]
[577.80389404 281.02661133]
[580.00488281 295.87158203]
[581.07678223 310.84048462]
[581.01361084 325.84759521]
[579.81561279 340.80694580]
[577.48968506 355.63287354]
[574.04913330 370.24038696]
[569.51367188 384.54589844]
[563.90930176 398.46740723]
[557.26812744 411.92517090]
[549.62811279 424.84216309]
[541.03314209 437.14431763]
[531.53234863 448.76123047]
[521.18023682 459.62634277]
[510.03601074 469.67739868]
[498.16354370 478.85684204]
[485.63085938 487.11209106]
[472.50973511 494.39587402]
[458.87530518 500.66644287]
[444.80572510 505.88790894]
[430.38150024 510.03033447]
[415.68533325 513.07000732]
[400.80133057 514.98950195]
[385.81481934 515.77783203]
[370.81158447 515.43048096]
[355.87762451 513.94946289]
[341.09838867 511.34326172]
[326.55862427 507.62677002]
[312.34158325 502.82128906]
[298.52865601 496.95434570]
[285.19903564 490.05953979]
[272.42901611 482.17636108]
[260.29177856 473.35000610]
[248.85684204 463.63098145]
[238.18969727 453.07498169]
[228.35142517 441.74246216]
[219.39842224 429.69833374]
[211.38192749 417.01159668]
[204.34788513 403.75491333]
[198.33659363 390.00421143]
[193.38246155 375.83825684]
[189.51387024 361.33822632]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 139]
[11 138]
[12 137]
[13 136]
[14 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 129]
[32 128]
[33 127]
[34 126]
[35 125]
[36 124]
[37 123]
[46 122]
[47 121]
[48 120]
[50 118]
[51 117]
[52 116]
[53 115]
[54 114]
[55 113]
[56 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
