%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[137.26741028 661.98754883]
[123.06010437 654.53558350]
[120.16978455 638.75500488]
[130.81367493 626.75140381]
[131.26026917 611.75805664]
[131.70687866 596.76470947]
[132.15348816 581.77136230]
[132.60009766 566.77801514]
[129.65713501 559.99853516]
[133.16661072 551.56518555]
[133.83639526 536.58013916]
[133.72473145 521.58056641]
[132.83190918 506.60717773]
[131.93910217 491.63375854]
[131.04627991 476.66036987]
[130.04202271 461.69400024]
[128.92637634 446.73556519]
[120.26389313 434.61901855]
[126.95335388 420.28158569]
[125.83770752 405.32315063]
[124.72206116 390.36468506]
[123.60640717 375.40621948]
[122.49076080 360.44778442]
[121.37511444 345.48931885]
[120.25946045 330.53088379]
[105.27727509 324.97348022]
[94.17813110 313.39666748]
[89.22074127 298.08300781]
[91.44586945 282.08273315]
[100.45830536 268.60607910]
[114.49593353 260.37936401]
[113.15769958 245.43917847]
[111.37522888 230.54545593]
[109.15011597 215.71141052]
[106.92499542 200.87736511]
[104.69988251 186.04333496]
[102.47476196 171.20928955]
[100.24964142 156.37524414]
[90.71153259 148.93542480]
[88.73634338 136.59513855]
[95.92151642 125.88365173]
[93.91750336 111.01811981]
[91.58201599 96.20105743]
[88.91622162 81.43983459]
[86.25042725 66.67861938]
[83.58463287 51.91740417]
[74.16440582 63.59042358]
[59.26450348 65.32043457]
[47.42026520 56.11641312]
[45.41660690 41.25083923]
[54.40131760 29.23938370]
[69.22754669 26.96276093]
[81.40164948 35.72431183]
[80.06341553 20.78412819]
[78.72518158 5.84394360]
[77.38694763 -9.09624100]
[76.04871368 -24.03642654]
[65.62463379 -13.25038624]
[50.62980652 -12.85657501]
[39.65394211 -23.08058548]
[38.98451614 -38.06563950]
[49.00500488 -49.22761917]
[63.97521973 -50.17243576]
[75.31911469 -40.35969925]
[75.31911469 -55.35969925]
[75.31911469 -70.35970306]
[75.31911469 -85.35970306]
[66.00274658 -73.60362244]
[51.84431076 -68.64997101]
[37.23094559 -72.03369141]
[26.69076157 -82.70629883]
[23.48975182 -97.36077118]
[28.61978149 -111.45625305]
[40.49125671 -120.62512207]
[55.42567062 -122.02629089]
[68.79543304 -115.22559357]
[76.45783997 -102.33005524]
[70.63362122 -117.04022217]
[80.00193024 -128.61968994]
[82.00595093 -143.48521423]
[84.00996399 -158.35073853]
[86.01397705 -173.21627808]
[86.46057892 -188.20962524]
[85.34493256 -203.16807556]
[84.22928619 -218.12652588]
[83.11363220 -233.08497620]
[79.71295166 -238.75480652]
[79.68962860 -244.43780518]
[82.19423676 -248.50425720]
[81.52444458 -263.48928833]
[80.85466003 -278.47433472]
[78.38903809 -282.04849243]
[77.29867554 -285.84002686]
[77.48303223 -289.38986206]
[78.70281982 -292.31881714]
[80.61803436 -294.36578369]
[80.84136200 -309.36410522]
[81.06468964 -324.36245728]
[81.28801727 -339.36077881]
[81.51134491 -354.35913086]
[68.03603363 -361.61685181]
[59.48668289 -374.31201172]
[57.82786942 -389.52737427]
[63.44078445 -403.76654053]
[75.03561401 -413.75744629]
[89.94795227 -417.20428467]
[104.75106049 -413.31497192]
[116.04328156 -402.98327637]
[121.22975159 -388.58331299]
[119.11865997 -373.42407227]
[110.19511414 -360.98910522]
[96.50968170 -354.13580322]
[96.28635406 -339.13745117]
[96.06302643 -324.13912964]
[95.83969879 -309.14077759]
[95.61637115 -294.14245605]
[95.83969879 -279.14410400]
[96.50948334 -264.15908813]
[97.17927551 -249.17404175]
[98.07209015 -234.20063782]
[99.18773651 -219.24217224]
[100.30338287 -204.28372192]
[101.41903687 -189.32527161]
[108.05625916 -202.77693176]
[119.28518677 -212.72235107]
[133.44006348 -217.68617249]
[148.42108154 -216.93206787]
[162.00593567 -210.57186890]
[172.17935181 -199.54910278]
[177.43218994 -185.49891663]
[176.98522949 -170.50558472]
[170.90473938 -156.79325867]
[160.09275818 -146.39610291]
[146.15316772 -140.85644531]
[131.15380859 -140.99609375]
[117.31977081 -146.79431152]
[106.70323944 -157.39097595]
[100.87950134 -171.21226501]
[98.87548828 -156.34672546]
[96.87147522 -141.48120117]
[94.86746216 -126.61567688]
[100.83502197 -112.96878815]
[91.32337189 -100.32604218]
[90.31911469 -85.35970306]
[90.31911469 -70.35970306]
[90.31911469 -55.35969925]
[90.31911469 -40.35969925]
[90.98889923 -25.37466049]
[92.32713318 -10.43447590]
[93.66536713 4.50570965]
[95.00360107 19.44589424]
[96.34183502 34.38607788]
[98.34584808 49.25160599]
[101.01164246 64.01282501]
[103.67743683 78.77404022]
[106.34323120 93.53526306]
[109.16778564 96.16095734]
[110.82125854 100.01892090]
[110.77925873 104.55821991]
[108.78302765 109.01410675]
[110.78704834 123.87963867]
[122.37732697 138.18861389]
[115.08368683 154.15011597]
[117.30880737 168.98416138]
[119.53392029 183.81820679]
[121.75904083 198.65225220]
[123.98415375 213.48629761]
[126.20927429 228.32034302]
[129.03335571 231.61860657]
[130.51225281 235.27610779]
[130.69821167 238.82588196]
[129.78974915 241.86582947]
[128.09788513 244.10093689]
[129.43611145 259.04113770]
[142.84616089 263.50399780]
[153.51005554 272.71301270]
[159.83935547 285.25277710]
[160.90792847 299.21517944]
[156.58738708 312.48965454]
[147.56143188 323.08230591]
[135.21791077 329.41522217]
[136.33357239 344.37368774]
[137.44921875 359.33212280]
[138.56486511 374.29058838]
[139.68051147 389.24902344]
[140.79615784 404.20748901]
[141.91180420 419.16595459]
[150.65408325 432.35241699]
[143.88482666 445.61990356]
[145.00047302 460.57836914]
[148.75949097 468.90347290]
[146.01968384 475.76754761]
[146.91250610 490.74093628]
[147.80532837 505.71435547]
[148.69813538 520.68774414]
[158.58879089 509.41058350]
[173.39466858 507.00512695]
[186.34671021 514.57116699]
[191.52340698 528.64953613]
[186.55807495 542.80389404]
[173.72076416 550.56298828]
[158.88053894 548.37951660]
[148.82144165 537.24993896]
[148.15165710 552.23498535]
[147.59344482 567.22460938]
[147.14683533 582.21795654]
[146.70022583 597.21130371]
[146.25361633 612.20465088]
[145.80702209 627.19799805]
[155.71755981 639.81390381]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 209]
[5 208]
[6 207]
[7 206]
[8 205]
[10 204]
[11 203]
[12 195]
[13 194]
[14 193]
[15 192]
[16 190]
[17 189]
[19 187]
[20 186]
[21 185]
[22 184]
[23 183]
[24 182]
[25 181]
[31 174]
[32 173]
[33 168]
[34 167]
[35 166]
[36 165]
[37 164]
[38 163]
[41 161]
[42 160]
[43 156]
[44 155]
[45 154]
[46 153]
[53 152]
[54 151]
[55 150]
[56 149]
[57 148]
[64 147]
[65 146]
[66 145]
[67 144]
[77 143]
[79 141]
[80 140]
[81 139]
[82 138]
[83 123]
[84 122]
[85 121]
[86 120]
[89 119]
[90 118]
[91 117]
[96 116]
[97 115]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
