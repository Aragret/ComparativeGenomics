%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGUCUAAGUGUUAGACUACAAAACCAAUUUGAUAUAAAUGUUCUCCUUUUGGGCCAUUACUACAGCCCCAACUCCCUAUCCUCCUCUUACCCCCUAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[105.22893524 615.03338623]
[91.84742737 608.20336914]
[79.52060699 599.61480713]
[68.47812653 589.42767334]
[58.92569351 577.83178711]
[51.04127121 565.04315186]
[44.97173309 551.29998779]
[40.83015823 536.85833740]
[38.69369507 521.98724365]
[38.60214996 506.96377563]
[40.55722809 492.06774902]
[44.52250671 477.57669067]
[50.42411041 463.76058960]
[58.15210342 450.87680054]
[67.56251526 439.16537476]
[78.48002625 428.84442139]
[90.70126343 420.10629272]
[103.99855042 413.11373901]
[118.12416077 407.99700928]
[132.81495667 404.85144043]
[131.69929504 389.89300537]
[123.03681946 377.77645874]
[129.72628784 363.43902588]
[128.61062622 348.48056030]
[126.93909454 333.57400513]
[124.71397400 318.73995972]
[122.48886108 303.90591431]
[120.26374054 289.07186890]
[118.03862000 274.23782349]
[115.81350708 259.40377808]
[113.21060944 257.02526855]
[111.63044739 253.26786804]
[111.70856476 248.62596130]
[113.83565521 243.85914612]
[112.27513123 228.94053650]
[110.71460724 214.02194214]
[109.15408325 199.10333252]
[107.59355927 184.18472290]
[106.03303528 169.26612854]
[103.69754791 154.44905090]
[100.59343719 139.77375793]
[97.48933411 125.09844971]
[94.38522339 110.42314911]
[89.60464478 124.64096069]
[79.80510712 135.99740601]
[66.44029999 142.80784607]
[51.49282074 144.06196594]
[37.18003464 139.57374573]
[25.62516212 130.00897217]
[18.54229546 116.78652954]
[16.98213768 101.86788177]
[21.17613029 87.46613312]
[30.50211906 75.71768951]
[43.57664871 68.36536407]
[58.46018600 66.49982452]
[72.94485474 70.39782715]
[84.88193512 79.48111725]
[92.50000000 92.40043640]
[92.50000000 77.40043640]
[92.50000000 62.40043640]
[92.50000000 47.40043640]
[92.50000000 32.40043640]
[92.50000000 17.40043449]
[73.81259155 5.89065838]
[65.92032623 -14.44800854]
[71.88076782 -35.29775238]
[89.12062836 -48.23413467]
[87.56010437 -63.15274048]
[85.99958038 -78.07134247]
[76.48965454 -86.78478241]
[75.49701691 -99.24265289]
[83.01012421 -108.72314453]
[81.67189026 -123.66333008]
[80.33365631 -138.60351562]
[78.99542236 -153.54370117]
[75.11287689 -161.81193542]
[77.75018311 -168.71601868]
[76.63452911 -183.67446899]
[75.51888275 -198.63291931]
[63.82646179 -208.92491150]
[62.90812302 -224.11080933]
[72.79202271 -235.19432068]
[71.67636871 -250.15277100]
[70.56072235 -265.11123657]
[69.44507599 -280.06967163]
[68.32942200 -295.02813721]
[67.21377563 -309.98657227]
[66.09812927 -324.94503784]
[64.98247528 -339.90350342]
[63.86682892 -354.86193848]
[52.71688461 -362.41796875]
[48.02308655 -374.83483887]
[51.28944016 -387.50024414]
[61.10649109 -395.84622192]
[60.21367264 -410.81961060]
[59.32085800 -425.79302979]
[44.94427490 -430.73086548]
[33.55498886 -440.79827881]
[26.88977814 -454.46002197]
[25.96504211 -469.63281250]
[30.92179680 -484.00286865]
[41.00416946 -495.37890625]
[54.67467880 -502.02615356]
[69.84866333 -502.93090820]
[84.21220398 -497.95526123]
[95.57496643 -487.85794067]
[102.20420837 -474.17871094]
[103.08901978 -459.00354004]
[98.09448242 -444.64654541]
[87.98220825 -433.29708862]
[74.29426575 -426.68585205]
[75.18708038 -411.71243286]
[76.07989502 -396.73904419]
[89.12412262 -386.12362671]
[90.48152924 -369.02178955]
[78.82528687 -355.97760010]
[79.94093323 -341.01913452]
[81.05657959 -326.06069946]
[82.17222595 -311.10223389]
[83.28787994 -296.14376831]
[84.40352631 -281.18533325]
[85.51917267 -266.22686768]
[86.63482666 -251.26841736]
[87.75047302 -236.30996704]
[99.16915894 -226.81526184]
[100.51367188 -211.66116333]
[90.47733307 -199.74858093]
[91.59298706 -184.79011536]
[92.70863342 -169.83166504]
[93.93560791 -154.88192749]
[95.27384186 -139.94174194]
[96.61207581 -125.00156403]
[97.95030975 -110.06137848]
[108.80453491 -96.27178955]
[100.91819000 -79.63186646]
[102.47870636 -64.71326447]
[104.03923035 -49.79465866]
[112.37354279 -47.76562119]
[119.94409180 -43.69235611]
[126.25744629 -37.82944489]
[130.89941406 -30.54845428]
[133.56213379 -22.31440163]
[134.06452942 -13.65604782]
[132.36459351 -5.13195038]
[128.56266785 2.70556855]
[122.89565277 9.34621334]
[115.72218323 14.35493755]
[107.50000000 17.40043449]
[107.50000000 32.40043640]
[107.50000000 47.40043640]
[107.50000000 62.40043640]
[107.50000000 77.40043640]
[107.50000000 92.40043640]
[109.06052399 107.31903839]
[112.16463470 121.99433899]
[115.26874542 136.66964722]
[118.37285614 151.34494019]
[126.48121643 138.72534180]
[140.76644897 134.15017700]
[154.69754028 139.71118164]
[161.90538025 152.86592102]
[159.09465027 167.60021973]
[147.55035400 177.17776489]
[132.55041504 177.21983337]
[120.95164490 167.70559692]
[122.51216888 182.62420654]
[124.07268524 197.54281616]
[125.63320923 212.46141052]
[127.19373322 227.38002014]
[128.75425720 242.29862976]
[130.64755249 257.17864990]
[132.87266541 272.01269531]
[135.09777832 286.84674072]
[137.32290649 301.68078613]
[139.54801941 316.51483154]
[141.77313232 331.34887695]
[152.65226746 321.02200317]
[167.52944946 322.93756104]
[175.43778992 335.68347168]
[170.54753113 349.86392212]
[156.46362305 355.02563477]
[143.56909180 347.36492920]
[144.68473816 362.32336426]
[153.42701721 375.50985718]
[146.65776062 388.77734375]
[147.77340698 403.73580933]
[162.76826477 404.66729736]
[177.49662781 407.63201904]
[191.68406677 412.57467651]
[205.06632996 419.40322876]
[217.39407349 427.99044800]
[228.43765259 438.17636108]
[237.99134827 449.77124023]
[245.87715149 462.55902100]
[251.94818115 476.30154419]
[256.09130859 490.74273682]
[258.22937012 505.61358643]
[258.32257080 520.63708496]
[256.36907959 535.53332520]
[252.40538025 550.02478027]
[246.50527954 563.84155273]
[238.77867126 576.72613525]
[229.36953735 588.43859863]
[218.45314026 598.76074219]
[206.23284912 607.50018311]
[192.93630981 614.49420166]
[178.81124878 619.61242676]
[164.12080383 622.75958252]
[149.13864136 623.87701416]
[134.14387512 622.94384766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 186]
[21 185]
[23 183]
[24 182]
[25 176]
[26 175]
[27 174]
[28 173]
[29 172]
[30 171]
[34 170]
[35 169]
[36 168]
[37 167]
[38 166]
[39 165]
[40 157]
[41 156]
[42 155]
[43 154]
[58 153]
[59 152]
[60 151]
[61 150]
[62 149]
[63 148]
[67 137]
[68 136]
[69 135]
[72 133]
[73 132]
[74 131]
[75 130]
[77 129]
[78 128]
[79 127]
[82 124]
[83 123]
[84 122]
[85 121]
[86 120]
[87 119]
[88 118]
[89 117]
[90 116]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
