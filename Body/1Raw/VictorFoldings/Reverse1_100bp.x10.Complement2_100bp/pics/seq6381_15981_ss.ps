%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[142.07414246 282.28652954]
[135.98480225 296.02615356]
[127.91560364 308.70471191]
[118.04681396 320.03894043]
[106.59890747 329.77563477]
[93.82762909 337.69726562]
[80.01830292 343.62686157]
[65.47942352 347.43194580]
[50.53580856 349.02752686]
[35.52128983 348.37796021]
[20.77130699 345.49774170]
[6.61537361 340.45123291]
[-6.63025808 333.35119629]
[-18.66967583 324.35617065]
[-29.23391533 313.66720581]
[-38.08696747 301.52301025]
[-45.03105164 288.19494629]
[-49.91103363 273.98074341]
[-52.61789703 259.19796753]
[-53.09116364 244.17686462]
[-51.32026291 229.25300598]
[-47.34475708 214.75979614]
[-41.25346375 201.02102661]
[-33.18246078 188.34362793]
[-23.31205750 177.01080322]
[-11.86276340 167.27574158]
[0.90964013 159.35594177]
[14.71981239 153.42831421]
[29.25922966 149.62528992]
[44.20307541 148.03182983]
[59.21750259 148.68353271]
[73.96707916 151.56584167]
[79.00399017 137.43681335]
[84.04090881 123.30777740]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[101.65103912 71.82990265]
[90.28876495 61.77135086]
[83.66099548 48.16563034]
[82.74970245 33.09967041]
[87.66266632 18.87116241]
[97.62179565 7.63814926]
[111.08617401 1.09170580]
[125.99041748 0.20140250]
[130.81642151 -14.00105286]
[135.64241028 -28.20350838]
[140.46841431 -42.40596390]
[145.29441833 -56.60842133]
[150.12040710 -70.81087494]
[136.15716553 -76.29822540]
[122.46648407 -82.43402863]
[109.07843781 -89.20480347]
[96.02247620 -96.59566498]
[83.32729340 -104.59037018]
[71.02079010 -113.17134094]
[59.13002014 -122.31970978]
[47.68112564 -132.01538086]
[36.69927597 -142.23701477]
[26.20861053 -152.96217346]
[16.23218536 -164.16726685]
[6.79193497 -175.82765198]
[-2.09139013 -187.91772461]
[-10.39826202 -200.41087341]
[-18.11042023 -213.27966309]
[-25.21091270 -226.49578857]
[-31.68412971 -240.03021240]
[-37.51584244 -253.85316467]
[-42.69322968 -267.93426514]
[-47.20491409 -282.24258423]
[-51.04097366 -296.74664307]
[-54.19298172 -311.41458130]
[-56.65400314 -326.21411133]
[-58.41862869 -341.11273193]
[-59.48298645 -356.07769775]
[-59.84472656 -371.07611084]
[-59.50306320 -386.07498169]
[-58.45874023 -401.04135132]
[-56.71405792 -415.94235229]
[-54.27284622 -430.74514771]
[-51.14048004 -445.41729736]
[-47.32383728 -459.92648315]
[-42.83131027 -474.24081421]
[-37.67277527 -488.32882690]
[-31.85956955 -502.15957642]
[-25.40447617 -515.70263672]
[-18.32168007 -528.92828369]
[-10.62675476 -541.80737305]
[-2.33661389 -554.31164551]
[6.53051949 -566.41357422]
[15.95515347 -578.08660889]
[25.91657066 -589.30505371]
[36.39287186 -600.04425049]
[47.36103058 -610.28057861]
[58.79693222 -619.99151611]
[70.67544556 -629.15582275]
[82.97045135 -637.75323486]
[95.65492249 -645.76495361]
[108.70098114 -653.17327881]
[122.07994843 -659.96197510]
[135.76240540 -666.11608887]
[149.71829224 -671.62213135]
[163.91691589 -676.46795654]
[178.32707214 -680.64294434]
[192.91706848 -684.13793945]
[207.65486145 -686.94519043]
[222.50804138 -689.05853271]
[237.44393921 -690.47338867]
[252.42974854 -691.18658447]
[267.43249512 -691.19659424]
[282.41925049 -690.50341797]
[297.35702515 -689.10845947]
[312.21301270 -687.01489258]
[326.95452881 -684.22735596]
[341.54919434 -680.75183105]
[355.96490479 -676.59606934]
[370.16998291 -671.76922607]
[384.13317871 -666.28179932]
[397.82385254 -660.14593506]
[411.21185303 -653.37506104]
[424.26779175 -645.98419189]
[436.96295166 -637.98944092]
[449.26940918 -629.40838623]
[461.16015625 -620.25994873]
[472.60897827 -610.56427002]
[483.59078979 -600.34252930]
[494.08142090 -589.61737061]
[504.05780029 -578.41223145]
[513.49798584 -566.75177002]
[522.38128662 -554.66168213]
[530.68811035 -542.16851807]
[538.40020752 -529.29968262]
[545.50061035 -516.08349609]
[551.97375488 -502.54907227]
[557.80541992 -488.72610474]
[562.98278809 -474.64495850]
[567.49438477 -460.33663940]
[571.33038330 -445.83255005]
[574.48229980 -431.16461182]
[576.94329834 -416.36508179]
[578.70782471 -401.46643066]
[579.77215576 -386.50146484]
[580.13378906 -371.50305176]
[579.79205322 -356.50418091]
[578.74768066 -341.53781128]
[577.00292969 -326.63684082]
[574.56164551 -311.83401489]
[571.42926025 -297.16192627]
[567.61254883 -282.65274048]
[563.11993408 -268.33843994]
[557.96136475 -254.25042725]
[552.14807129 -240.41969299]
[545.69293213 -226.87664795]
[538.61010742 -213.65106201]
[530.91510010 -200.77200317]
[522.62487793 -188.26777649]
[513.75769043 -176.16586304]
[504.33303833 -164.49288940]
[494.37158203 -153.27450562]
[483.89523315 -142.53535461]
[472.92703247 -132.29907227]
[461.49108887 -122.58813477]
[449.61251831 -113.42391205]
[437.31747437 -104.82653046]
[424.63296509 -96.81489563]
[411.58688354 -89.40661621]
[398.20788574 -82.61798096]
[384.52539062 -76.46391296]
[370.56948853 -70.95794678]
[356.37084961 -66.11216736]
[341.96066284 -61.93724060]
[327.37066650 -58.44234085]
[312.63284302 -55.63515091]
[297.77966309 -53.52184296]
[282.84375000 -52.10705948]
[267.85794067 -51.39391327]
[252.85519409 -51.38396835]
[237.86845398 -52.07725143]
[222.93067932 -53.47223282]
[208.07470703 -55.56585312]
[193.33320618 -58.35350418]
[178.73855591 -61.82905960]
[164.32286072 -65.98487854]
[159.49687195 -51.78242111]
[154.67086792 -37.57996750]
[149.84487915 -23.37751198]
[145.01887512 -9.17505550]
[140.19287109 5.02740002]
[151.46916199 14.81385422]
[158.15763855 28.20824432]
[159.21122742 43.18338394]
[154.43832397 57.45948029]
[144.53669739 68.85121155]
[130.99171448 75.60221863]
[115.85349274 76.65589905]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[103.37697601 123.09983826]
[98.16993713 128.34469604]
[93.13301849 142.47372437]
[88.09610748 156.60275269]
[101.34275055 163.70092773]
[113.38344574 172.69421387]
[123.94921112 183.38169861]
[132.80398560 195.52462769]
[139.74996948 208.85169983]
[144.63197327 223.06520081]
[147.34094238 237.84759521]
[147.81636047 252.86863708]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 202]
[33 201]
[34 200]
[35 198]
[37 196]
[38 195]
[45 188]
[46 187]
[47 186]
[48 185]
[49 184]
[50 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
