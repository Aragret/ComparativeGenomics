%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[23.73945999 542.39642334]
[16.13531113 555.34069824]
[7.28009319 567.46356201]
[-2.73818278 578.64447021]
[-13.81994820 588.77233887]
[-25.85506439 597.74645996]
[-38.72391891 605.47760010]
[-52.29861069 611.88903809]
[-66.44422913 616.91699219]
[-81.02017212 620.51147461]
[-95.88159180 622.63677979]
[-110.88076782 623.27178955]
[-125.86863708 622.41021729]
[-140.69624329 620.06054688]
[-155.21620178 616.24621582]
[-169.28422546 611.00506592]
[-182.76048279 604.38928223]
[-195.51103210 596.46447754]
[-207.40916443 587.30950928]
[-218.33662415 577.01538086]
[-228.18478394 565.68438721]
[-236.85580444 553.42907715]
[-244.26347351 540.37133789]
[-250.33418274 526.64086914]
[-255.00759888 512.37420654]
[-258.23727417 497.71310425]
[-259.99108887 482.80328369]
[-260.25164795 467.79293823]
[-259.01635742 452.83123779]
[-256.29745483 438.06686401]
[-252.12199402 423.64660645]
[-246.53147888 409.71374512]
[-239.58145142 396.40676880]
[-231.34098816 383.85791016]
[-221.89201355 372.19192505]
[-211.32841492 361.52474976]
[-199.75518799 351.96237183]
[-187.28735352 343.59985352]
[-174.04882812 336.52029419]
[-160.17117310 330.79406738]
[-145.79234314 326.47808838]
[-131.05522156 323.61526489]
[-116.10628510 322.23400879]
[-101.09410095 322.34805298]
[-86.16787720 323.95629883]
[-71.47595978 327.04275513]
[-57.16436768 331.57672119]
[-43.37533569 337.51315308]
[-36.10210800 324.39447021]
[-28.82887840 311.27578735]
[-21.55564880 298.15707397]
[-22.15130997 283.27438354]
[-8.69296932 274.95672607]
[-1.41973996 261.83804321]
[-0.92569727 254.46389771]
[6.06069136 248.57933044]
[13.52843285 235.57037354]
[20.99617386 222.56143188]
[28.46391487 209.55247498]
[28.08990097 194.66256714]
[41.67058563 186.54618835]
[49.13832855 173.53723145]
[48.76431656 158.64732361]
[62.34500122 150.53096008]
[69.81274414 137.52200317]
[77.28048706 124.51304626]
[68.90247345 112.24784851]
[66.66638184 97.56362915]
[71.01385498 83.36061096]
[81.08623505 72.44395447]
[94.89418793 66.96975708]
[109.71056366 68.01921082]
[117.17830658 55.01025772]
[124.64604950 42.00130463]
[117.05449677 28.72291374]
[117.12810516 13.52780247]
[124.74695587 0.49632147]
[137.77845764 -6.92229271]
[152.67327881 -6.82268810]
[160.14102173 -19.83164024]
[167.60876465 -32.84059143]
[175.07650757 -45.84954453]
[182.54425049 -58.85849762]
[182.52952576 -64.07835388]
[184.33770752 -68.35430145]
[187.30400085 -71.15005493]
[190.64706421 -72.27086639]
[198.68823242 -84.93339539]
[206.72941589 -97.59591675]
[214.67608643 -110.31795502]
[222.43247986 -123.15689850]
[230.09307861 -136.05322266]
[237.75367737 -148.94955444]
[244.92904663 -162.12202454]
[251.60923767 -175.55239868]
[258.28942871 -188.98277283]
[264.96963501 -202.41314697]
[252.48565674 -210.76651001]
[241.17240906 -220.64775085]
[231.21566772 -231.89459229]
[222.77893066 -244.32238770]
[216.00074768 -257.72702026]
[210.99240112 -271.88842773]
[207.83615112 -286.57400513]
[206.58381653 -301.54263306]
[207.25596619 -316.54852295]
[209.84156799 -331.34524536]
[214.29814148 -345.68981934]
[220.55253601 -359.34674072]
[228.50202942 -372.09167480]
[238.01609802 -383.71539307]
[248.93849182 -394.02703857]
[261.08987427 -402.85723877]
[274.27069092 -410.06100464]
[288.26449585 -415.52005005]
[302.84155273 -419.14474487]
[317.76242065 -420.87554932]
[332.78213501 -420.68405151]
[347.65402222 -418.57336426]
[362.13391113 -414.57821655]
[375.98400879 -408.76416016]
[388.97686768 -401.22668457]
[400.89916992 -392.08953857]
[411.55511475 -381.50277710]
[420.76971436 -369.64028931]
[428.39169312 -356.69677734]
[434.29586792 -342.88485718]
[438.38525391 -328.43130493]
[440.59277344 -313.57348633]
[440.88211060 -298.55532837]
[439.24853516 -283.62350464]
[435.71890259 -269.02316284]
[430.35113525 -254.99406433]
[423.23339844 -241.76660156]
[414.48254395 -229.55795288]
[404.24227905 -218.56860352]
[392.68078613 -208.97903442]
[379.98788452 -200.94667053]
[366.37203979 -194.60345459]
[352.05679321 -190.05351257]
[337.27722168 -187.37156677]
[322.27603149 -186.60168457]
[307.29956055 -187.75646973]
[292.59371948 -190.81698608]
[278.39999390 -195.73295593]
[271.71981812 -182.30258179]
[265.03961182 -168.87220764]
[258.35943604 -155.44183350]
[273.19342041 -157.66723633]
[284.28555298 -147.56950378]
[283.45913696 -132.59228516]
[271.32333374 -123.77623749]
[256.82424927 -127.62023163]
[250.65000916 -141.28895569]
[242.98941040 -128.39262390]
[235.32881165 -115.49629974]
[234.61543274 -108.14015198]
[227.45693970 -102.46620178]
[226.63410950 -95.12149048]
[219.39193726 -89.55474854]
[211.35075378 -76.89221954]
[203.30958557 -64.22969818]
[195.55319214 -51.39075470]
[188.08544922 -38.38180542]
[180.61772156 -25.37285233]
[173.14997864 -12.36389923]
[165.68223572 0.64505321]
[173.27958679 13.45699501]
[173.44503784 28.45128059]
[166.03405762 41.60208130]
[152.94969177 49.32841110]
[137.65499878 49.46904373]
[130.18725586 62.47799683]
[122.71951294 75.48695374]
[131.09753418 87.75215149]
[133.33361816 102.43637085]
[128.98614502 116.63938904]
[118.91376495 127.55604553]
[105.10581207 133.03024292]
[90.28943634 131.98078918]
[82.82169342 144.98974609]
[75.35395050 157.99870300]
[75.19382477 173.81909180]
[62.14728165 181.00497437]
[54.67953873 194.01393127]
[54.51940918 209.83433533]
[41.47286606 217.02021790]
[34.00512695 230.02917480]
[26.53738403 243.03811646]
[19.06964302 256.04705811]
[11.69895363 269.11126709]
[4.42572451 282.22994995]
[4.50115490 298.05096436]
[-8.43695450 305.43032837]
[-15.71018410 318.54901123]
[-22.98341370 331.66769409]
[-30.25664330 344.78640747]
[-17.91660309 353.33636475]
[-6.48919725 363.07254028]
[3.91199851 373.89813232]
[13.18360996 385.70559692]
[21.23348999 398.37753296]
[27.98163414 411.78802490]
[33.36097336 425.80377197]
[37.31803894 440.28549194]
[39.81351471 455.08923340]
[40.82258606 470.06790161]
[40.33523178 485.07260132]
[38.35629272 499.95422363]
[34.90544128 514.56481934]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 197]
[49 196]
[50 195]
[51 194]
[53 192]
[54 191]
[56 190]
[57 189]
[58 188]
[59 187]
[61 185]
[62 184]
[64 182]
[65 181]
[66 180]
[72 174]
[73 173]
[74 172]
[79 167]
[80 166]
[81 165]
[82 164]
[83 163]
[87 162]
[88 161]
[89 160]
[90 158]
[91 156]
[92 155]
[93 154]
[94 148]
[95 147]
[96 146]
[97 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
