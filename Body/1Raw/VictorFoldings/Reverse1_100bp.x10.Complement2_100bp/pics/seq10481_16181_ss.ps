%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[63.25591660 500.96145630]
[60.35597992 515.80889893]
[53.00810242 529.03247070]
[41.93215179 539.33679199]
[28.21324158 545.71228027]
[13.19540787 547.53430176]
[-1.65005422 544.62438965]
[-14.86873817 537.26770020]
[-25.16561127 526.18481445]
[-31.53189087 512.46166992]
[-33.34387207 497.44259644]
[-30.42404175 482.59909058]
[-23.05844688 469.38534546]
[-11.96869946 459.09588623]
[1.75874341 452.73880005]
[16.77900505 450.93688965]
[19.66427803 436.21701050]
[22.54955101 421.49710083]
[25.43482399 406.77722168]
[27.99065590 391.99655151]
[30.21577263 377.16250610]
[32.44089127 362.32849121]
[34.66600800 347.49444580]
[32.54951096 340.41333008]
[37.03626633 332.45675659]
[39.48199463 317.65747070]
[41.92772293 302.85821533]
[29.13474464 310.69018555]
[14.51907349 307.31643677]
[6.45322704 294.66961670]
[9.55768871 279.99438477]
[22.05408287 271.69738770]
[36.78390503 274.53152466]
[45.30904388 286.87234497]
[49.06534576 272.35028076]
[52.82164383 257.82821655]
[56.57794571 243.30616760]
[60.33424759 228.78410339]
[56.03063965 214.52478027]
[66.97724915 203.10189819]
[70.73355103 188.57983398]
[74.48985291 174.05776978]
[73.12152100 166.79489136]
[78.41168976 159.34828186]
[82.38378906 144.88375854]
[85.92346191 130.30738831]
[89.02757263 115.63208771]
[81.21212769 103.43105316]
[84.21060181 89.25518036]
[96.29712677 81.26380157]
[99.40123749 66.58850098]
[102.50534821 51.91320038]
[101.21956635 42.86971664]
[105.76646423 37.04326248]
[109.08872223 22.41580391]
[112.41098022 7.78834343]
[98.97291565 -0.77074856]
[89.29436493 -13.39259624]
[84.53095245 -28.53994942]
[85.24107361 -44.37587738]
[91.32051086 -58.98653030]
[102.01725769 -70.61244202]
[116.02446747 -77.86040497]
[131.64013672 -79.87040710]
[134.74424744 -94.54570770]
[137.73901367 -109.24371338]
[140.62429810 -123.96360779]
[143.50956726 -138.68350220]
[136.97468567 -149.80366516]
[139.68087769 -162.00450134]
[149.64491272 -168.86341858]
[152.74902344 -183.53871155]
[148.03501892 -198.64132690]
[158.23863220 -209.49192810]
[161.34274292 -224.16723633]
[164.44685364 -238.84254456]
[152.94664001 -251.24581909]
[151.12353516 -267.89447021]
[159.49911499 -282.20571899]
[174.60156250 -288.63949585]
[177.48683167 -303.35937500]
[180.37210083 -318.07928467]
[183.25737000 -332.79916382]
[181.83709717 -341.82250977]
[186.29673767 -347.71600342]
[189.40084839 -362.39129639]
[192.50495911 -377.06661987]
[178.29289246 -381.92199707]
[164.76972961 -388.45507812]
[152.13265991 -396.57058716]
[140.56596375 -406.15020752]
[130.23834229 -417.05422974]
[121.30037689 -429.12362671]
[113.88243103 -442.18237305]
[108.09266663 -456.04010010]
[104.01551819 -470.49465942]
[101.71044922 -485.33526611]
[101.21106720 -500.34552002]
[102.52465057 -515.30651855]
[105.63205719 -530.00012207]
[110.48796082 -544.21203613]
[117.02154541 -557.73492432]
[125.13754272 -570.37170410]
[134.71759033 -581.93804932]
[145.62199402 -592.26525879]
[157.69172668 -601.20275879]
[170.75076294 -608.62023926]
[184.60868835 -614.40948486]
[199.06340027 -618.48608398]
[213.90409851 -620.79058838]
[228.91438293 -621.28942871]
[243.87535095 -619.97528076]
[258.56881714 -616.86730957]
[272.78051758 -612.01086426]
[286.30319214 -605.47680664]
[298.93966675 -597.36029053]
[310.50564575 -587.77984619]
[320.83245850 -576.87506104]
[329.76950073 -564.80499268]
[337.18646240 -551.74566650]
[342.97518921 -537.88751221]
[347.05126953 -523.43267822]
[349.35522461 -508.59185791]
[349.85348511 -493.58157349]
[348.53878784 -478.62066650]
[345.43029785 -463.92730713]
[340.57330322 -449.71578979]
[334.03872681 -436.19335938]
[325.92178345 -423.55718994]
[316.34085083 -411.99157715]
[305.43569946 -401.66516113]
[293.36529541 -392.72857666]
[280.30569458 -385.31207275]
[266.44732666 -379.52386475]
[251.99232483 -375.44833374]
[237.15144348 -373.14492798]
[222.14112854 -372.64724731]
[207.18026733 -373.96249390]
[204.07615662 -359.28720093]
[200.97204590 -344.61190796]
[197.97726440 -329.91387939]
[195.09199524 -315.19400024]
[192.20672607 -300.47412109]
[189.32145691 -285.75421143]
[199.27940369 -276.86145020]
[203.57736206 -264.10717773]
[200.99133301 -250.78868103]
[192.09181213 -240.40518188]
[179.12214661 -235.73843384]
[176.01803589 -221.06312561]
[172.91392517 -206.38781738]
[177.84996033 -192.33488464]
[167.42433167 -180.43460083]
[164.32022095 -165.75930786]
[170.65087891 -149.39196777]
[158.22946167 -135.79821777]
[155.34417725 -121.07833099]
[152.45890808 -106.35844421]
[154.25711060 -99.18988037]
[149.41955566 -91.44159698]
[146.31544495 -76.76629639]
[158.55006409 -69.64398193]
[168.00128174 -59.07536316]
[173.73516846 -46.08488846]
[175.17901611 -31.93727493]
[172.17846680 -18.01438332]
[165.01394653 -5.68023491]
[154.37445068 3.85261750]
[141.29136658 9.64228535]
[127.03844452 11.11060333]
[123.71617889 25.73806381]
[120.39392090 40.36552429]
[117.18064880 55.01731110]
[114.07653809 69.69261169]
[110.97242737 84.36791229]
[118.78787231 96.56894684]
[115.78939819 110.74481964]
[103.70287323 118.73619843]
[100.59876251 133.41149902]
[102.09078217 137.48922729]
[102.19692993 141.43298340]
[101.12949371 144.82356262]
[99.21511078 147.35371399]
[96.84831238 148.85586548]
[92.87621307 163.32038879]
[89.01190948 177.81407166]
[85.25560760 192.33613586]
[81.49930573 206.85820007]
[85.53424072 222.15623474]
[74.85630798 232.54040527]
[71.10000610 247.06245422]
[67.34370422 261.58453369]
[63.58740234 276.10656738]
[59.83110428 290.62863159]
[56.72699356 305.30395508]
[54.28126526 320.10321045]
[51.83553696 334.90249634]
[49.50004959 349.71954346]
[47.27493286 364.55358887]
[45.04981613 379.38763428]
[42.82469940 394.22167969]
[44.73682022 399.07873535]
[44.60758209 403.71948242]
[42.86121750 407.40258789]
[40.15471649 409.66250610]
[37.26944351 424.38238525]
[34.38417053 439.10226440]
[31.49889755 453.82217407]
[44.72742844 461.16119385]
[55.03914261 472.23022461]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 208]
[17 207]
[18 206]
[19 205]
[20 201]
[21 200]
[22 199]
[23 198]
[25 197]
[26 196]
[27 195]
[34 194]
[35 193]
[36 192]
[37 191]
[38 190]
[40 188]
[41 187]
[42 186]
[44 185]
[45 184]
[46 179]
[47 178]
[50 175]
[51 174]
[52 173]
[54 172]
[55 171]
[56 170]
[64 161]
[65 160]
[66 158]
[67 157]
[68 156]
[71 154]
[72 153]
[74 151]
[75 150]
[76 149]
[80 144]
[81 143]
[82 142]
[83 141]
[85 140]
[86 139]
[87 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
