%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[31.76340103 608.77862549]
[19.84253883 619.15496826]
[4.08202457 617.97949219]
[-6.16770840 605.94958496]
[-4.82567549 590.20239258]
[7.31191921 580.08038330]
[8.42756748 565.12194824]
[9.54321671 550.16351318]
[10.65886497 535.20507812]
[11.77451420 520.24658203]
[12.77877426 505.28024292]
[13.67158985 490.30685425]
[14.56440544 475.33343506]
[7.59836388 462.16821289]
[16.14334679 448.85302734]
[6.58879280 460.41635132]
[-7.43254471 465.74572754]
[-22.25552177 463.44802856]
[-34.00544739 454.12390137]
[-39.61091995 440.21066284]
[-37.60668182 425.34515381]
[-28.51663399 413.41320801]
[-14.71689796 407.53384399]
[0.18531244 409.24383545]
[12.29459381 418.09625244]
[18.44546509 431.77621460]
[21.54957390 417.10089111]
[24.65368462 402.42559814]
[27.53895760 387.70571899]
[30.20475197 372.94448853]
[32.87054825 358.18328857]
[35.53634262 343.42205811]
[34.05062866 341.04492188]
[33.41700745 337.93603516]
[33.91891098 334.41702271]
[35.71821594 330.90603638]
[38.82529449 327.87289429]
[42.36496735 313.29650879]
[36.52442932 296.74792480]
[49.34507751 283.53005981]
[52.66733551 268.90258789]
[55.98959732 254.27513123]
[59.31185532 239.64767456]
[53.13270569 229.24841309]
[55.78082275 217.03485107]
[66.36962128 209.67005920]
[69.90929413 195.09367371]
[73.44896698 180.51730347]
[76.98863983 165.94093323]
[80.52831268 151.36454773]
[83.95937347 136.76222229]
[87.28163147 122.13476562]
[90.60388947 107.50730896]
[93.70800018 92.83200836]
[96.59326935 78.11211395]
[99.47854614 63.39222336]
[102.36381531 48.67233276]
[105.24909210 33.95244217]
[108.13436127 19.23254967]
[111.01963806 4.51265860]
[113.90490723 -10.20723248]
[112.48462677 -19.23056984]
[116.94427490 -25.12407494]
[120.04837799 -39.79937744]
[123.15248871 -54.47467804]
[126.25659943 -69.14997864]
[127.92814636 -84.05655670]
[128.15147400 -99.05489349]
[120.62049103 -112.96873474]
[128.54641724 -125.57939911]
[128.76974487 -140.57772827]
[128.99307251 -155.57606506]
[129.21640015 -170.57440186]
[129.43974304 -185.57275391]
[121.90876007 -199.48658752]
[129.83468628 -212.09724426]
[130.05801392 -227.09558105]
[130.28134155 -242.09391785]
[122.75036621 -256.00775146]
[130.67630005 -268.61843872]
[130.89962769 -283.61676025]
[130.45301819 -298.61010742]
[129.33737183 -313.56857300]
[128.11039734 -328.51831055]
[117.17060089 -343.33053589]
[125.16968536 -358.95043945]
[123.60916138 -373.86904907]
[122.04863739 -388.78765869]
[120.48812103 -403.70626831]
[118.92759705 -418.62487793]
[104.00762177 -420.82604980]
[90.10411835 -426.66928101]
[78.09107208 -435.78726196]
[68.72362518 -447.60681152]
[62.59063339 -461.38494873]
[60.07761765 -476.25558472]
[61.34254837 -491.28390503]
[66.30590820 -505.52526855]
[74.65570068 -518.08441162]
[85.86705017 -528.17181396]
[99.23519897 -535.15350342]
[113.91981506 -538.59045410]
[128.99781799 -538.26672363]
[143.52137756 -534.20263672]
[156.57754517 -526.65362549]
[167.34558105 -516.09423828]
[175.14862061 -503.18832397]
[179.49613953 -488.74707031]
[180.11486816 -473.67828369]
[176.96588135 -458.92922974]
[170.24716187 -445.42703247]
[160.38102722 -434.02041626]
[147.98770142 -425.42648315]
[133.84620667 -420.18539429]
[135.40672302 -405.26678467]
[136.96723938 -390.34817505]
[138.52777100 -375.42956543]
[140.08828735 -360.51098633]
[149.28468323 -352.65267944]
[150.70687866 -340.23651123]
[143.05058289 -329.85653687]
[146.77828979 -323.47485352]
[144.29582214 -314.68420410]
[145.41146851 -299.72576904]
[155.99497986 -310.35540771]
[170.99401855 -310.52593994]
[181.81643677 -300.13964844]
[182.26268005 -285.14627075]
[172.07711792 -274.13473511]
[157.09449768 -273.41290283]
[145.89796448 -283.39343262]
[145.67463684 -268.39511108]
[153.22158813 -255.55404663]
[145.27967834 -241.87059021]
[145.05635071 -226.87225342]
[144.83302307 -211.87391663]
[152.37997437 -199.03286743]
[144.43807983 -185.34942627]
[144.21475220 -170.35107422]
[143.99142456 -155.35273743]
[143.76809692 -140.35440063]
[143.54476929 -125.35607147]
[151.09172058 -112.51501465]
[143.14981079 -98.83156586]
[142.92648315 -83.83322906]
[150.96823120 -96.49538422]
[163.41964722 -104.85972595]
[178.18244934 -107.51670837]
[192.76885986 -104.01857758]
[204.72079468 -94.95484161]
[212.02413940 -81.85289001]
[213.44816589 -66.92063904]
[208.75289917 -52.67443466]
[198.72956848 -41.51500320]
[185.06727600 -35.32291794]
[170.06837463 -35.14164352]
[156.26043701 -41.00173187]
[145.97032166 -51.91565704]
[140.93190002 -66.04586792]
[137.82778931 -51.37056732]
[134.72367859 -36.69526672]
[131.61956787 -22.01996422]
[128.62480164 -7.32195997]
[125.73952484 7.39793110]
[122.85425568 22.11782265]
[119.96897888 36.83771515]
[117.08370972 51.55760574]
[114.19843292 66.27749634]
[111.31316376 80.99739075]
[108.42789459 95.71727753]
[110.29273224 100.61996460]
[109.27794647 106.21849060]
[105.23134613 110.82956696]
[101.90908813 125.45703125]
[98.58683014 140.08448792]
[99.73782349 149.14611816]
[95.10468292 154.90422058]
[91.56501007 169.48060608]
[88.02533722 184.05697632]
[84.48566437 198.63334656]
[80.94599152 213.20973206]
[86.53853607 230.75410461]
[73.93931580 242.96994019]
[70.61705780 257.59738159]
[67.29479980 272.22485352]
[63.97253799 286.85232544]
[70.17342377 298.16210938]
[67.10517120 310.27697754]
[56.94134521 316.83618164]
[53.40167236 331.41256714]
[50.29756165 346.08786011]
[47.63176346 360.84906006]
[44.96596909 375.61029053]
[42.30017471 390.37152100]
[44.17266464 396.71228027]
[42.77210999 402.22003174]
[39.32898712 405.52972412]
[36.22487640 420.20501709]
[33.12076569 434.88031006]
[31.11675262 449.74584961]
[38.01893616 463.98208618]
[29.53781128 476.22625732]
[28.64499474 491.19967651]
[27.75218010 506.17306519]
[30.36525154 514.92578125]
[26.73296738 521.36224365]
[25.61731911 536.32067871]
[24.50166893 551.27917480]
[23.38602066 566.23760986]
[22.27037239 581.19604492]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 210]
[7 209]
[8 208]
[9 207]
[10 206]
[11 204]
[12 203]
[13 202]
[15 200]
[26 199]
[27 198]
[28 197]
[29 194]
[30 193]
[31 192]
[32 191]
[37 190]
[38 189]
[40 186]
[41 185]
[42 184]
[43 183]
[46 181]
[47 180]
[48 179]
[49 178]
[50 177]
[51 175]
[52 174]
[53 173]
[54 170]
[55 169]
[56 168]
[57 167]
[58 166]
[59 165]
[60 164]
[61 163]
[63 162]
[64 161]
[65 160]
[66 159]
[67 145]
[68 144]
[70 142]
[71 141]
[72 140]
[73 139]
[74 138]
[76 136]
[77 135]
[78 134]
[80 132]
[81 131]
[82 124]
[83 123]
[84 121]
[86 118]
[87 117]
[88 116]
[89 115]
[90 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
