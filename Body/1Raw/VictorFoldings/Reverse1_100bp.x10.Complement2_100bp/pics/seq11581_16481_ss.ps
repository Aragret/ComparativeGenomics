%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[176.14529419 455.75192261]
[170.07147217 442.03665161]
[157.84329224 433.53247070]
[159.32991028 417.78125000]
[153.25607300 404.06600952]
[147.18225098 390.35073853]
[141.10841370 376.63546753]
[135.03457642 362.92019653]
[128.65597534 349.34399414]
[121.97577667 335.91360474]
[122.00318909 350.91360474]
[118.48795319 365.49588013]
[111.62886810 378.83578491]
[101.81385040 390.17886353]
[89.59798431 398.88360596]
[75.67214203 404.45773315]
[60.82389069 406.58599854]
[45.89297485 405.14801025]
[31.72381020 400.22512817]
[19.11773109 392.09576416]
[8.78767204 381.21963501]
[1.31784821 368.21188354]
[-2.86928558 353.80813599]
[-3.53692675 338.82299805]
[-0.64731681 324.10397339]
[5.63612270 310.48345947]
[14.95803261 298.73175049]
[26.79121399 289.51351929]
[40.46644211 283.35009766]
[55.21031952 280.58999634]
[70.18900299 281.38934326]
[84.55538177 285.70294189]
[97.49696350 293.28686523]
[108.28183746 303.71212769]
[116.30053711 316.39016724]
[107.28114319 304.53689575]
[113.54075623 290.00665283]
[111.98023224 275.08807373]
[110.41970825 260.16946411]
[108.85919189 245.25085449]
[107.29866791 230.33224487]
[105.73814392 215.41363525]
[104.17761993 200.49504089]
[90.67240143 190.47267151]
[88.55271149 173.44851685]
[99.61487579 159.89685059]
[97.83241272 145.00312805]
[96.04994202 130.10940552]
[94.26747894 115.21569061]
[83.87030029 102.05229187]
[90.63981628 86.70465851]
[88.63580322 71.83913422]
[86.07997131 57.05847931]
[82.97586060 42.38317490]
[79.87174988 27.70787430]
[76.76763916 13.03257084]
[73.66352844 -1.64273131]
[69.65880585 12.81279278]
[61.62178802 25.47795486]
[50.24776459 35.25709534]
[36.52069855 41.30421829]
[21.62812233 43.09618759]
[6.85839081 40.47798157]
[-6.51076698 33.67609787]
[-17.32278442 23.27896881]
[-24.64231491 10.18605232]
[-27.83614540 -4.46998596]
[-26.62797546 -19.42125130]
[-21.12232780 -33.37430954]
[-11.79549217 -45.12208176]
[0.54566461 -53.64826584]
[14.83350945 -58.21526718]
[29.83200073 -58.42798996]
[44.24361801 -54.26803207]
[56.82161713 -46.09527206]
[66.47786713 -34.61673737]
[72.37612152 -20.82883453]
[73.49176788 -35.78728867]
[74.60742188 -50.74574280]
[75.72306824 -65.70419312]
[61.32123566 -72.85231018]
[50.79042816 -84.95076752]
[45.72085571 -100.12756348]
[46.86074829 -116.04938507]
[54.00605392 -130.28031921]
[66.03621674 -140.65452576]
[81.08979797 -145.60586548]
[81.98261261 -160.57926941]
[82.87543488 -175.55267334]
[83.76824951 -190.52607727]
[84.66106415 -205.49948120]
[77.75888062 -219.73571777]
[86.24000549 -231.97990417]
[76.02742004 -243.74174500]
[77.14616394 -258.91418457]
[88.42222595 -268.57785034]
[89.31504059 -283.55123901]
[90.20785522 -298.52465820]
[76.11741638 -304.03051758]
[64.41930389 -313.62268066]
[56.25959015 -326.36135864]
[52.43767548 -340.99859619]
[53.32798767 -356.10034180]
[58.84330750 -370.18707275]
[68.44329834 -381.87875366]
[81.18745422 -390.02993774]
[95.82723236 -393.84204102]
[110.92836761 -392.94161987]
[125.01141357 -387.41683960]
[136.69665527 -377.80902100]
[144.83929443 -365.05941772]
[148.64158630 -350.41708374]
[147.73104858 -335.31655884]
[142.19685364 -321.23721313]
[132.58119202 -309.55841064]
[119.82613373 -301.42431641]
[105.18125916 -297.63183594]
[104.28844452 -282.65841675]
[103.39562988 -267.68502808]
[113.44344330 -256.74990845]
[112.75130463 -241.55201721]
[101.21340942 -231.08708191]
[108.17945099 -217.92184448]
[99.63446808 -204.60667419]
[98.74165344 -189.63327026]
[97.84883881 -174.65985107]
[96.95602417 -159.68644714]
[96.06320953 -144.71304321]
[108.91017151 -139.06549072]
[119.07939911 -129.35131836]
[125.33526611 -116.72262573]
[126.90804291 -102.68736267]
[123.58854675 -88.92917633]
[115.75569153 -77.10549164]
[104.33338165 -68.64784241]
[90.68151855 -64.58854675]
[89.56587219 -49.63009262]
[88.45022583 -34.67163849]
[87.33457184 -19.71318626]
[88.33883667 -4.74684143]
[91.44294739 9.92846107]
[94.54705811 24.60376358]
[97.65116119 39.27906418]
[100.75527191 53.95436859]
[111.00045013 42.99825668]
[125.96527863 44.02490616]
[134.61824036 56.27750778]
[130.58070374 70.72389984]
[116.82897186 76.71473694]
[103.50133514 69.83512115]
[105.50534821 84.70064545]
[114.32477570 92.30715179]
[115.79479218 103.86051941]
[109.16119385 113.43322754]
[110.94366455 128.32695007]
[112.72612762 143.22065735]
[114.50859070 158.11437988]
[125.98480988 165.16497803]
[131.22836304 177.35987854]
[128.53080750 190.15852356]
[119.09622192 198.93450928]
[120.65674591 213.85311890]
[122.21726990 228.77172852]
[123.77779388 243.69032288]
[125.33831787 258.60891724]
[126.89884186 273.52752686]
[128.45936584 288.44613647]
[137.59037781 301.36648560]
[131.21914673 314.82965088]
[135.40615845 329.23342896]
[142.08634949 342.66378784]
[146.43736267 345.54751587]
[148.99171448 349.42416382]
[149.67205811 353.44314575]
[148.74984741 356.84637451]
[154.82366943 370.56164551]
[160.89750671 384.27688599]
[166.97134399 397.99215698]
[173.04518127 411.70742798]
[185.70777893 421.19262695]
[183.78672791 435.96282959]
[189.86056519 449.67810059]
[204.56819153 446.47335815]
[219.61987305 446.29516602]
[234.39926147 449.15084839]
[248.30111694 454.92346191]
[260.75619507 463.37661743]
[271.25445557 474.16418457]
[279.36599731 486.84439087]
[284.75869751 500.89801025]
[287.21166992 515.74951172]
[286.62451172 530.79083252]
[283.02120972 545.40588379]
[276.54940796 558.99633789]
[267.47402954 571.00561523]
[256.16677856 580.94195557]
[243.09062195 588.39843750]
[228.78106689 593.06976318]
[213.82405090 594.76464844]
[198.83206177 593.41363525]
[184.41900635 589.07208252]
[171.17510986 581.91778564]
[159.64268494 572.24371338]
[150.29399109 560.44598389]
[143.51182556 547.00769043]
[139.57394409 532.47918701]
[138.64157104 517.45532227]
[140.75291443 502.55142212]
[145.82150269 488.37768555]
[153.63978577 475.51458740]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 182]
[2 181]
[4 179]
[5 178]
[6 177]
[7 176]
[8 175]
[9 171]
[10 170]
[35 169]
[37 167]
[38 166]
[39 165]
[40 164]
[41 163]
[42 162]
[43 161]
[46 157]
[47 156]
[48 155]
[49 154]
[51 151]
[52 150]
[53 144]
[54 143]
[55 142]
[56 141]
[57 140]
[77 139]
[78 138]
[79 137]
[80 136]
[87 128]
[88 127]
[89 126]
[90 125]
[91 124]
[93 122]
[96 119]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
