%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[134.14703369 703.87707520]
[123.94219208 692.85235596]
[115.29792023 680.56579590]
[108.36846924 667.23663330]
[103.27750397 653.10278320]
[100.11589050 638.41644287]
[98.94004059 623.43981934]
[99.77095032 608.44000244]
[102.59377289 593.68487549]
[107.35814667 579.43762207]
[113.97904205 565.95251465]
[122.33830261 553.47027588]
[132.28674316 542.21362305]
[143.64682007 532.38348389]
[156.21580505 524.15527344]
[169.76939392 517.67578125]
[184.06570435 513.06066895]
[181.39990234 498.29946899]
[178.73411560 483.53823853]
[176.06831360 468.77700806]
[173.40251160 454.01580811]
[159.93063354 447.71926880]
[152.66368103 434.54144287]
[154.57205200 419.43478394]
[165.13183594 408.21884155]
[162.46604919 393.45761108]
[159.80024719 378.69641113]
[157.02464294 363.95544434]
[154.13935852 349.23556519]
[151.25408936 334.51565552]
[134.77410889 329.53085327]
[123.02838898 316.82055664]
[119.31901550 299.82513428]
[124.75602722 283.20736694]
[137.92732239 271.57336426]
[134.60505676 256.94592285]
[131.28280640 242.31845093]
[127.96054077 227.69099426]
[124.63828278 213.06352234]
[121.31602478 198.43606567]
[117.99376678 183.80860901]
[114.02166748 169.34408569]
[109.40766144 155.07135010]
[104.79364777 140.79861450]
[100.17964172 126.52588654]
[95.56562805 112.25315094]
[93.38690186 127.09407806]
[87.88856506 141.05001831]
[79.35903931 153.38887024]
[68.24577332 163.46336365]
[55.13174438 170.74499512]
[40.70489120 174.85180664]
[25.72201729 175.56835938]
[10.96909046 172.85705566]
[-2.77997708 166.86012268]
[-14.80393696 157.89215088]
[-24.47203636 146.42359924]
[-31.27710724 133.05606079]
[-34.86216736 118.49078369]
[-35.03915405 103.49182892]
[-31.79878235 88.84600830]
[-25.31103325 75.32162476]
[-15.91624355 63.62812424]
[-4.10724449 54.37893295]
[9.49648762 48.05924225]
[24.18132973 45.00057602]
[39.17694092 45.36338043]
[53.69668198 49.12862396]
[66.97888184 56.09878922]
[78.32677460 65.90824127]
[87.14508057 78.04238892]
[92.97166443 91.86628723]
[93.86447906 76.89288330]
[94.75730133 61.91947937]
[95.65011597 46.94607162]
[96.54293060 31.97266769]
[97.43574524 16.99926186]
[89.47379303 6.85184431]
[90.52568054 -5.60115910]
[99.48402405 -13.72978497]
[100.59967041 -28.68823814]
[101.71532440 -43.64669037]
[91.67898560 -55.55928040]
[93.02350616 -70.71338654]
[104.44218445 -80.20808411]
[104.77716064 -95.20434570]
[104.33055878 -110.19769287]
[103.88394928 -125.19104004]
[103.43734741 -140.18438721]
[102.99073792 -155.17773438]
[102.54413605 -170.17109680]
[102.09752655 -185.16444397]
[99.35265350 -189.60433960]
[98.65508270 -194.19419861]
[99.71908569 -198.12902832]
[101.98087311 -200.83395386]
[102.20420074 -215.83229065]
[102.42752838 -230.83062744]
[88.34690857 -236.49638367]
[77.26650238 -246.86888123]
[70.68482971 -260.54537964]
[69.49202728 -275.67617798]
[73.84938812 -290.21502686]
[83.16764069 -302.19561768]
[96.18654633 -309.99771118]
[111.14541626 -312.56610107]
[126.02117920 -309.55346680]
[138.80201721 -301.36721802]
[147.75942993 -289.11450195]
[151.68199158 -274.45236206]
[150.03919983 -259.36376953]
[143.05325317 -245.88931274]
[131.66893005 -235.85130310]
[117.42586517 -230.60729980]
[117.20253754 -215.60896301]
[116.97920990 -200.61062622]
[117.09087372 -185.61105347]
[117.53748322 -170.61769104]
[117.98409271 -155.62434387]
[118.43069458 -140.63099670]
[118.87730408 -125.63764954]
[119.32390594 -110.64429474]
[119.77051544 -95.65094757]
[129.99255371 -106.62864685]
[144.86347961 -108.59220886]
[157.58450317 -100.64390564]
[162.33975220 -86.41760254]
[156.95518494 -72.41737366]
[143.89254761 -65.04393768]
[129.12391663 -67.66831970]
[119.40064240 -79.09243774]
[129.28453064 -68.00892639]
[128.36619568 -52.82303238]
[116.67377472 -42.53104401]
[115.55812836 -27.57258987]
[114.44248199 -12.61413574]
[122.90307617 2.76068664]
[112.40914917 17.89207840]
[111.51633453 32.86548233]
[110.62351990 47.83889008]
[109.73070526 62.81229401]
[108.83789062 77.78569794]
[107.94506836 92.75910950]
[109.83836365 107.63914490]
[114.45236969 121.91187286]
[119.06638336 136.18460083]
[123.68038940 150.45733643]
[128.29440308 164.73007202]
[136.07064819 151.90315247]
[150.60585022 148.19801331]
[163.57356262 155.73712158]
[167.54531860 170.20173645]
[160.24589539 183.30587769]
[145.85673523 187.54289246]
[132.62123108 180.48634338]
[135.94348145 195.11381531]
[139.26574707 209.74127197]
[142.58799744 224.36872864]
[145.91026306 238.99618530]
[149.23252869 253.62365723]
[152.55477905 268.25109863]
[165.19837952 270.88150024]
[175.86927795 278.07226562]
[183.00195312 288.72589111]
[185.56619263 301.24002075]
[183.21565247 313.74853516]
[176.33425903 324.39971924]
[165.97398376 331.63040161]
[168.85925293 346.35028076]
[171.74452209 361.07015991]
[176.46618652 368.88961792]
[174.56146240 376.03060913]
[177.22726440 390.79183960]
[179.89305115 405.55303955]
[193.70890808 412.36688232]
[200.78077698 425.85174561]
[198.58222961 440.73901367]
[188.16374207 451.35000610]
[190.82952881 466.11123657]
[193.49533081 480.87243652]
[196.16111755 495.63366699]
[198.82691956 510.39486694]
[213.83442688 509.71786499]
[228.79824829 511.04727173]
[243.45135498 514.35931396]
[257.53222656 519.59497070]
[270.78961182 526.66076660]
[282.98687744 535.43066406]
[293.90637207 545.74798584]
[303.35321045 557.42877197]
[311.15881348 570.26452637]
[317.18386841 584.02612305]
[321.32083130 598.46807861]
[323.49594116 613.33251953]
[323.67031860 628.35430908]
[321.84088135 643.26525879]
[318.04025269 657.79931641]
[312.33630371 671.69708252]
[304.83078003 684.71057129]
[295.65765381 696.60748291]
[284.98059082 707.17553711]
[272.99020386 716.22619629]
[259.90042114 723.59783936]
[245.94488525 729.15893555]
[231.37261963 732.81030273]
[216.44367981 734.48669434]
[201.42449951 734.15826416]
[186.58312988 731.83081055]
[172.18440247 727.54595947]
[158.48530579 721.38006592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 182]
[18 181]
[19 180]
[20 179]
[21 178]
[25 174]
[26 173]
[27 172]
[28 170]
[29 169]
[30 168]
[35 161]
[36 160]
[37 159]
[38 158]
[39 157]
[40 156]
[41 155]
[42 148]
[43 147]
[44 146]
[45 145]
[46 144]
[72 143]
[73 142]
[74 141]
[75 140]
[76 139]
[77 138]
[80 136]
[81 135]
[82 134]
[85 131]
[86 123]
[87 122]
[88 121]
[89 120]
[90 119]
[91 118]
[92 117]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
