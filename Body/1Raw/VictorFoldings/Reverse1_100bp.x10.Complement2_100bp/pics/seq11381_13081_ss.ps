%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[64.81017303 524.85314941]
[61.45129395 509.16567993]
[71.73306274 496.85046387]
[71.73306274 481.85046387]
[71.73306274 466.85046387]
[71.39808655 451.85418701]
[70.72830200 436.86917114]
[62.43041611 424.50006104]
[69.54379272 410.36816406]
[68.87400055 395.38314819]
[68.20421600 380.39810181]
[67.53443146 365.41305542]
[59.23654938 353.04397583]
[66.34992218 338.91207886]
[65.68013763 323.92703247]
[65.01035309 308.94198608]
[61.57131577 302.40020752]
[64.44382477 293.72921753]
[63.99722290 278.73583984]
[63.55061722 263.74249268]
[63.10401154 248.74916077]
[56.24007034 262.08654785]
[45.27552032 272.32269287]
[31.49847031 278.25506592]
[16.52742958 279.18670654]
[2.12118316 275.00817871]
[-10.02783775 266.21038818]
[-18.49237823 253.82685852]
[-22.27803230 239.31242371]
[-20.94006538 224.37220764]
[-14.63566113 210.76138306]
[-4.10545397 200.07893372]
[9.41347790 193.57981873]
[24.33294296 192.02755737]
[38.90021896 195.60449219]
[51.40395737 203.89041138]
[60.37522888 215.91191101]
[64.76029205 230.25825500]
[67.86440277 215.58294678]
[70.96851349 200.90765381]
[74.07262421 186.23234558]
[65.75810242 173.92770386]
[68.69705963 159.00064087]
[81.65967560 150.36303711]
[84.76378632 135.68772888]
[87.86789703 121.01242828]
[90.97200775 106.33712769]
[77.16794586 112.20635986]
[63.90055466 105.20804596]
[60.95005798 90.50109100]
[70.49145508 78.92691040]
[85.49118042 79.01755524]
[94.89161682 90.70460510]
[99.07862854 76.30081940]
[103.26564026 61.89703751]
[107.45265198 47.49325562]
[111.63965607 33.08947372]
[100.30113220 25.54416656]
[91.55740356 15.12383080]
[86.10907745 2.67815042]
[84.38856506 -10.78151226]
[86.52576447 -24.16430473]
[92.33829498 -36.38829041]
[101.34705353 -46.46792221]
[112.81564331 -53.59349060]
[125.81061554 -57.19617462]
[139.27740479 -56.99343872]
[143.89141846 -71.26617432]
[148.50543213 -85.53890228]
[147.49685669 -92.07299042]
[149.62069702 -97.34426880]
[153.47512817 -100.16426849]
[158.51203918 -114.29329681]
[163.54896545 -128.42233276]
[168.58587646 -142.55136108]
[173.62278748 -156.68038940]
[178.65971375 -170.80941772]
[183.69662476 -184.93844604]
[176.56126404 -196.36215210]
[177.29734802 -209.61614990]
[185.41246033 -219.87417603]
[197.76814270 -223.53018188]
[203.01486206 -237.58265686]
[208.26158142 -251.63511658]
[205.84008789 -267.26992798]
[217.54039001 -276.48687744]
[222.78710938 -290.53933716]
[228.03382874 -304.59179688]
[219.58699036 -315.48410034]
[217.64067078 -329.02035522]
[222.59738159 -341.64968872]
[233.06286621 -350.11242676]
[246.23628235 -352.28118896]
[251.69163513 -366.25396729]
[257.14700317 -380.22677612]
[262.60235596 -394.19958496]
[267.84906006 -408.25204468]
[272.88598633 -422.38107300]
[277.92288208 -436.51010132]
[264.81472778 -443.87786865]
[253.14039612 -453.35510254]
[243.23574829 -464.66906738]
[235.38580322 -477.49429321]
[229.81639099 -491.46176147]
[226.68777466 -506.16955566]
[226.08996582 -521.19458008]
[228.04016113 -536.10443115]
[232.48223877 -550.47021484]
[239.28842163 -563.87860107]
[248.26284790 -575.94372559]
[259.14733887 -586.31854248]
[271.62869263 -594.70446777]
[285.34780884 -600.86022949]
[299.90997314 -604.60876465]
[314.89617920 -605.84222412]
[329.87527466 -604.52502441]
[344.41625977 -600.69519043]
[358.10073853 -594.46282959]
[370.53503418 -586.00726318]
[381.36138916 -575.57183838]
[390.26824951 -563.45672607]
[396.99935913 -550.01055908]
[401.36111450 -535.62011719]
[403.22793579 -520.69958496]
[402.54617310 -505.67816162]
[399.33541870 -490.98806763]
[393.68801880 -477.05194092]
[385.76654053 -464.27081299]
[375.79882812 -453.01235962]
[364.07168579 -443.60052490]
[350.92254639 -436.30612183]
[336.72973633 -431.33901978]
[321.90161133 -428.84213257]
[306.86480713 -428.88726807]
[292.05194092 -431.47317505]
[287.01501465 -417.34414673]
[281.97808838 -403.21511841]
[283.17938232 -398.59280396]
[281.48968506 -393.16674805]
[276.57513428 -388.74420166]
[271.11978149 -374.77142334]
[265.66442871 -360.79861450]
[260.20907593 -346.82580566]
[269.50906372 -333.29852295]
[268.90753174 -316.72747803]
[258.44354248 -303.65054321]
[242.08628845 -299.34509277]
[236.83958435 -285.29263306]
[231.59286499 -271.24014282]
[234.38964844 -256.61047363]
[222.31405640 -246.38839722]
[217.06733704 -232.33593750]
[211.82061768 -218.28346252]
[219.44920349 -203.29534912]
[213.76544189 -187.10862732]
[197.82565308 -179.90153503]
[192.78874207 -165.77249146]
[187.75183105 -151.64346313]
[182.71490479 -137.51443481]
[177.67799377 -123.38540649]
[172.64106750 -109.25637817]
[167.60415649 -95.12734985]
[162.77816772 -80.92489624]
[158.16415405 -66.65216064]
[153.55014038 -52.37942886]
[166.73031616 -42.52157974]
[175.75311279 -28.72559357]
[179.51330566 -12.64926720]
[177.53929138 3.76837659]
[170.05223083 18.54096031]
[157.94131470 29.87508392]
[142.65829468 36.38804245]
[126.04344177 37.27648544]
[121.85643005 51.68026733]
[117.66941833 66.08405304]
[113.48240662 80.48783112]
[109.29539490 94.89161682]
[105.64730835 109.44123840]
[102.54319763 124.11653900]
[99.43908691 138.79183960]
[96.33497620 153.46714783]
[104.68980408 166.61380005]
[101.33274078 181.45242310]
[88.74792480 189.33645630]
[85.64381409 204.01176453]
[82.53970337 218.68705750]
[79.43559265 233.36236572]
[78.09735870 248.30255127]
[78.54396820 263.29589844]
[78.99057007 278.28924561]
[79.43717957 293.28259277]
[79.99539185 308.27221680]
[80.66517639 323.25723267]
[81.33496094 338.24227905]
[89.68075562 351.68319702]
[82.51947021 364.74328613]
[83.18925476 379.72830200]
[83.85903931 394.71334839]
[84.52883148 409.69839478]
[92.87461853 423.13931274]
[85.71334076 436.19937134]
[86.38312531 451.18441772]
[89.19380188 455.58294678]
[89.95963287 460.16189575]
[88.95433044 464.11215210]
[86.73306274 466.85046387]
[86.73306274 481.85046387]
[86.73306274 496.85046387]
[97.01483154 509.16567993]
[93.65595245 524.85314941]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 208]
[4 207]
[5 206]
[6 202]
[7 201]
[9 199]
[10 198]
[11 197]
[12 196]
[14 194]
[15 193]
[16 192]
[18 191]
[19 190]
[20 189]
[21 188]
[38 187]
[39 186]
[40 185]
[41 184]
[44 181]
[45 180]
[46 179]
[47 178]
[53 177]
[54 176]
[55 175]
[56 174]
[57 173]
[67 165]
[68 164]
[69 163]
[72 162]
[73 161]
[74 160]
[75 159]
[76 158]
[77 157]
[78 156]
[82 153]
[83 152]
[84 151]
[86 149]
[87 148]
[88 147]
[93 143]
[94 142]
[95 141]
[96 140]
[97 137]
[98 136]
[99 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
