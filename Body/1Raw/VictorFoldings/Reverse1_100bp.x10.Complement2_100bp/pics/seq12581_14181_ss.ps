%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUACAAACCCAGACUCAAAUAUAUAGUGUCACUCUUAAGAUACUACCUGGUACAUUGCUUGUUACGAUGUCCCUACUUAUAAUACCUCUUCAUCAGAxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[42.52146912 495.36956787]
[44.60747910 510.45492554]
[40.37113190 525.08276367]
[30.54640579 536.71868896]
[16.83548737 543.34667969]
[1.61388135 543.81848145]
[-12.48118019 538.05224609]
[-23.00764084 527.04711914]
[-28.14172935 512.70971680]
[-26.99393272 497.52410889]
[-19.76311302 484.12130737]
[-7.70205450 474.82339478]
[7.09959126 471.24133301]
[9.76538658 456.48013306]
[12.43118191 441.71890259]
[7.07893801 427.81918335]
[17.14563179 415.61376953]
[19.81142807 400.85253906]
[22.47722244 386.09130859]
[25.14301872 371.33010864]
[27.80881310 356.56887817]
[22.45656967 342.66915894]
[32.52326202 330.46371460]
[35.18906021 315.70251465]
[33.48980331 312.61303711]
[33.20254135 308.54702759]
[34.76995087 304.17706299]
[38.31758881 300.34805298]
[41.63985062 285.72058105]
[40.08024216 282.55831909]
[39.97482300 278.48352051]
[41.73579788 274.18789673]
[45.45087433 270.52111816]
[41.36004639 256.19931030]
[52.47550964 244.94067383]
[56.44760895 230.47615051]
[60.41970444 216.01162720]
[64.39179993 201.54710388]
[68.36389923 187.08258057]
[72.33599091 172.61804199]
[68.24516296 158.29623413]
[79.36062622 147.03759766]
[83.33272552 132.57307434]
[87.30482483 118.10854340]
[91.27691650 103.64402008]
[89.78188324 98.61621094]
[91.21026611 93.10866547]
[95.58860779 88.81134033]
[99.98960114 74.47148895]
[104.39060211 60.13164139]
[93.60053253 70.55154419]
[79.92565155 76.71577454]
[64.97248840 77.90017700]
[50.49771118 73.96559906]
[38.20180893 65.37428284]
[29.52929306 53.13551331]
[25.49899864 38.68709564]
[26.58440018 23.72641945]
[32.65798950 10.01104355]
[43.00624466 -0.84776056]
[56.41346359 -7.57431126]
[71.30458069 -9.37838078]
[85.93019867 -6.04802847]
[98.57212067 2.02549934]
[107.74517822 13.89373207]
[112.37174225 28.16240311]
[111.90795898 43.15677643]
[119.56855011 30.26045036]
[127.22914886 17.36412239]
[127.29215240 12.14462852]
[129.16380310 7.89607143]
[132.17137146 5.14479589]
[135.53076172 4.07387590]
[143.75956726 -8.46752453]
[151.98837280 -21.00892448]
[160.21717834 -33.55032349]
[168.44599915 -46.09172440]
[176.39268494 -58.81376266]
[184.05326843 -71.71009064]
[184.44892883 -87.52634430]
[197.60101318 -94.51719666]
[205.26161194 -107.41352081]
[212.82598877 -120.36652374]
[220.29373169 -133.37547302]
[227.76147461 -146.38442993]
[235.22921753 -159.39337158]
[242.69696045 -172.40232849]
[250.16468811 -185.41128540]
[257.63244629 -198.42022705]
[264.21246338 -211.89996338]
[269.87524414 -225.78999329]
[267.92031860 -241.48995972]
[279.88986206 -250.35446167]
[285.55264282 -264.24447632]
[291.21545410 -278.13452148]
[296.87823486 -292.02453613]
[302.54101562 -305.91455078]
[308.20379639 -319.80459595]
[295.28732300 -327.48718262]
[283.66021729 -337.00915527]
[273.58221436 -348.15774536]
[265.27847290 -360.68395996]
[258.93447876 -374.30789185]
[254.69201660 -388.72521973]
[252.64582825 -403.61383057]
[252.84161377 -418.64111328]
[255.27502441 -433.47134399]
[259.89169312 -447.77325439]
[266.58843994 -461.22726440]
[275.21572876 -473.53286743]
[285.58078003 -484.41513062]
[297.45202637 -493.63092041]
[310.56427002 -500.97439575]
[324.62460327 -506.28146362]
[339.31887817 -509.43356323]
[354.31884766 -510.36029053]
[369.28939819 -509.04092407]
[383.89605713 -505.50497437]
[397.81253052 -499.83139038]
[410.72790527 -492.14697266]
[422.35366821 -482.62335205]
[432.43008423 -471.47329712]
[440.73205566 -458.94592285]
[447.07406616 -445.32107544]
[451.31448364 -430.90316772]
[453.35858154 -416.01425171]
[453.16064453 -400.98699951]
[450.72512817 -386.15710449]
[446.10641479 -371.85586548]
[439.40774536 -358.40280151]
[430.77871704 -346.09841919]
[420.41210938 -335.21765137]
[408.53955078 -326.00354004]
[395.42623901 -318.66195679]
[381.36517334 -313.35687256]
[366.67044067 -310.20687866]
[351.67034912 -309.28228760]
[336.69998169 -310.60375977]
[322.09384155 -314.14181519]
[316.43103027 -300.25177002]
[310.76824951 -286.36175537]
[305.10546875 -272.47171021]
[299.44268799 -258.58169556]
[293.77990723 -244.69166565]
[296.13986206 -229.98521423]
[283.76528931 -220.12721252]
[278.10247803 -206.23718262]
[291.16760254 -213.60623169]
[306.14843750 -212.84823608]
[318.40301514 -204.19807434]
[324.13412476 -190.33610535]
[321.56594849 -175.55760193]
[311.49420166 -164.44183350]
[297.03976440 -160.43315125]
[282.68151855 -164.77369690]
[272.86846924 -176.11849976]
[270.64138794 -190.95249939]
[263.17364502 -177.94354248]
[255.70590210 -164.93458557]
[248.23815918 -151.92562866]
[240.77043152 -138.91668701]
[233.30268860 -125.90773010]
[225.83494568 -112.89878082]
[225.23117065 -105.53282928]
[218.15794373 -99.75292206]
[210.49734497 -86.85659790]
[210.64962769 -71.96276855]
[196.94960022 -64.04949188]
[189.28900146 -51.15316391]
[189.80027771 -47.66447830]
[188.64718628 -43.75482178]
[185.65025330 -40.20915985]
[180.98739624 -37.86291885]
[172.75859070 -25.32151794]
[164.52978516 -12.78011703]
[156.30096436 -0.23871644]
[148.07215881 12.30268383]
[140.12547302 25.02471924]
[132.46487427 37.92104721]
[124.80428314 50.81737518]
[118.73044586 64.53263855]
[114.32945251 78.87248993]
[109.92845154 93.21233368]
[105.74143982 107.61611938]
[101.76934814 122.08064270]
[97.79724884 136.54516602]
[93.82514954 151.00968933]
[97.63186646 166.36610413]
[86.80051422 176.59014893]
[82.82842255 191.05467224]
[78.85632324 205.51919556]
[74.88422394 219.98371887]
[70.91213226 234.44824219]
[66.94003296 248.91276550]
[70.74674988 264.26916504]
[59.91539764 274.49322510]
[56.26731110 289.04284668]
[52.94504929 303.67028809]
[49.95027542 318.36831665]
[47.28448105 333.12951660]
[52.44604874 348.08508301]
[42.57003021 359.23468018]
[39.90423584 373.99591064]
[37.23844147 388.75711060]
[34.57264328 403.51834106]
[31.90684891 418.27954102]
[37.06841660 433.23510742]
[27.19239998 444.38470459]
[24.52660370 459.14593506]
[21.86080933 473.90713501]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 210]
[14 209]
[15 208]
[17 206]
[18 205]
[19 204]
[20 203]
[21 202]
[23 200]
[24 199]
[28 198]
[29 197]
[33 196]
[35 194]
[36 193]
[37 192]
[38 191]
[39 190]
[40 189]
[42 187]
[43 186]
[44 185]
[45 184]
[48 183]
[49 182]
[50 181]
[67 180]
[68 179]
[69 178]
[73 177]
[74 176]
[75 175]
[76 174]
[77 173]
[78 169]
[79 168]
[81 166]
[82 165]
[83 163]
[84 162]
[85 161]
[86 160]
[87 159]
[88 158]
[89 157]
[90 147]
[91 146]
[93 144]
[94 143]
[95 142]
[96 141]
[97 140]
[98 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
