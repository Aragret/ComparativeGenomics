%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[61.85182190 680.78002930]
[47.54408646 685.32128906]
[32.87396622 688.50280762]
[17.97038078 690.29656982]
[2.96430969 690.68688965]
[-12.01237011 689.67022705]
[-26.82804108 687.25561523]
[-41.35249710 683.46423340]
[-55.45809937 678.32940674]
[-69.02088165 671.89624023]
[-81.92164612 664.22131348]
[-94.04702759 655.37200928]
[-105.29045868 645.42620850]
[-115.55312347 634.47119141]
[-124.74485016 622.60333252]
[-132.78485107 609.92681885]
[-139.60244751 596.55316162]
[-145.13775635 582.59985352]
[-149.34211731 568.18951416]
[-152.17858887 553.44879150]
[-153.62223816 538.50726318]
[-153.66036987 523.49615479]
[-152.29266357 508.54745483]
[-149.53112793 493.79251099]
[-145.40003967 479.36099243]
[-139.93569946 465.37973022]
[-133.18612671 451.97161865]
[-125.21064758 439.25445557]
[-116.07934570 427.33999634]
[-105.87246704 416.33300781]
[-94.67971802 406.33016968]
[-82.59945679 397.41940308]
[-69.73785400 389.67901611]
[-56.20793533 383.17703247]
[-42.12860870 377.97058105]
[-27.62360191 374.10546875]
[-12.82039165 371.61560059]
[2.15092945 370.52288818]
[17.15878868 370.83691406]
[32.07129669 372.55493164]
[35.17540359 357.87963867]
[38.27951431 343.20434570]
[41.38362503 328.52905273]
[36.44760132 314.47610474]
[46.87323380 302.57580566]
[49.97734451 287.90051270]
[53.08145142 273.22521973]
[51.39018631 266.03067017]
[56.34256744 258.35528564]
[59.66482925 243.72781372]
[62.98708725 229.10035706]
[66.30934906 214.47290039]
[69.63160706 199.84544373]
[72.95386505 185.21797180]
[76.27612305 170.59051514]
[79.59838867 155.96305847]
[74.87213898 141.83819580]
[85.47379303 130.09445190]
[88.79605103 115.46698761]
[81.16312408 103.15095520]
[84.37232208 89.02129364]
[96.57649231 81.21075439]
[99.89875031 66.58329010]
[100.23372650 51.58703232]
[90.16703033 39.38161469]
[95.51927948 25.48187447]
[92.85348511 10.72065735]
[90.18768311 -4.04055977]
[87.52188873 -18.80177689]
[84.85609436 -33.56299591]
[82.19029999 -48.32421112]
[79.52450562 -63.08543015]
[76.85871124 -77.84664917]
[73.75460052 -92.52194977]
[70.21492767 -107.09832764]
[66.67525482 -121.67469788]
[63.13558197 -136.25106812]
[59.59590912 -150.82745361]
[44.61404419 -149.60670471]
[29.62567329 -150.74478149]
[14.99989891 -154.21366882]
[1.09689307 -159.92794800]
[-11.74097061 -167.74688721]
[-23.19754601 -177.47793579]
[-32.99070740 -188.88146973]
[-40.87928772 -201.67665100]
[-46.66902542 -215.54840088]
[-50.21733856 -230.15510559]
[-51.43685150 -245.13706970]
[-50.29753113 -260.12536621]
[-46.82743454 -274.75085449]
[-41.11201477 -288.65338135]
[-33.29201889 -301.49060059]
[-23.56002235 -312.94638062]
[-12.15568542 -322.73858643]
[0.64015138 -330.62609863]
[14.51237869 -336.41470337]
[29.11938095 -339.96182251]
[44.10144806 -341.18008423]
[59.08963013 -340.03952026]
[73.71482849 -336.56823730]
[87.61689758 -330.85165405]
[100.45346832 -323.03060913]
[111.90843964 -313.29766846]
[121.69971466 -301.89251709]
[129.58618164 -289.09603882]
[135.37362671 -275.22332764]
[138.91954041 -260.61602783]
[140.13658142 -245.63386536]
[138.99478149 -230.64578247]
[135.52227783 -216.02085876]
[129.80456543 -202.11927795]
[121.98244476 -189.28334045]
[112.24855804 -177.82917786]
[100.84260559 -168.03883362]
[88.04546356 -160.15342712]
[74.17228699 -154.36712646]
[77.71195984 -139.79074097]
[81.25163269 -125.21437073]
[84.79129791 -110.63799286]
[88.33097076 -96.06162262]
[90.65200043 -94.48968506]
[92.49020386 -91.90364075]
[93.45621490 -88.48278809]
[93.23269653 -84.54393768]
[91.61992645 -80.51244354]
[94.28572083 -65.75122070]
[96.95151520 -50.99000549]
[99.61730957 -36.22879028]
[102.28311157 -21.46757317]
[104.94890594 -6.70635557]
[107.61470032 8.05486202]
[110.28049469 22.81607819]
[120.15650940 33.96567535]
[114.99494171 48.92123795]
[119.12545776 34.50115204]
[126.22015381 21.28505516]
[135.95628357 9.87418938]
[147.89091492 0.78767592]
[161.48107910 -5.56111145]
[176.10855103 -8.88334465]
[191.10784912 -9.02788448]
[205.79663086 -5.98815536]
[219.50662231 0.09755532]
[231.61415100 8.95238876]
[241.56835938 20.17350769]
[248.91642761 33.25042725]
[253.32406616 47.58823776]
[254.59075928 62.53465652]
[252.65885925 77.40972900]
[247.61627197 91.53673553]
[239.69239807 104.27299500]
[229.24772644 115.03908539]
[216.75740051 123.34523010]
[202.78967285 128.81353760]
[187.97996521 131.19526672]
[173.00202942 130.38203430]
[158.53724670 126.41085815]
[145.24369812 119.46238708]
[133.72612000 109.85273743]
[124.50849152 98.01908112]
[118.01016235 84.49977112]
[114.52620697 69.90554810]
[111.20394897 84.53301239]
[118.83687592 96.84904480]
[115.62767792 110.97870636]
[103.42350769 118.78924561]
[100.10124969 133.41670227]
[104.58986664 148.58782959]
[94.22584534 159.28532410]
[90.90358734 173.91278076]
[87.58132935 188.54023743]
[84.25906372 203.16769409]
[80.93680573 217.79515076]
[77.61454773 232.42262268]
[74.29228973 247.05007935]
[70.97003174 261.67755127]
[67.75675201 276.32931519]
[64.65264893 291.00463867]
[61.54853439 305.67993164]
[66.26253510 320.78253174]
[56.05892944 331.63314819]
[52.95481873 346.30844116]
[49.85070801 360.98376465]
[46.74659729 375.65905762]
[61.07753372 380.12658691]
[74.92714691 385.91644287]
[88.17372894 392.97778320]
[100.70085907 401.24856567]
[112.39844513 410.65603638]
[123.16369629 421.11758423]
[132.90199280 432.54125977]
[141.52775574 444.82662964]
[148.96519470 457.86578369]
[155.14892578 471.54406738]
[160.02461243 485.74133301]
[163.54940796 500.33279419]
[165.69233704 515.19018555]
[166.43455505 530.18298340]
[165.76956177 545.17938232]
[163.70318604 560.04760742]
[160.25360107 574.65704346]
[155.45109558 588.87921143]
[149.33790588 602.58917236]
[141.96772766 615.66644287]
[133.40534973 627.99609375]
[123.72602844 639.46978760]
[113.01480865 649.98663330]
[101.36582947 659.45422363]
[88.88146210 667.78942871]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 185]
[41 184]
[42 183]
[43 182]
[45 180]
[46 179]
[47 178]
[49 177]
[50 176]
[51 175]
[52 174]
[53 173]
[54 172]
[55 171]
[56 170]
[58 168]
[59 167]
[62 164]
[63 163]
[64 135]
[66 133]
[67 132]
[68 131]
[69 130]
[70 129]
[71 128]
[72 127]
[73 126]
[74 121]
[75 120]
[76 119]
[77 118]
[78 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
