%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[101.29705811 571.66278076]
[112.78020477 561.04815674]
[111.88739014 546.07470703]
[110.99457550 531.10131836]
[110.10175323 516.12792969]
[101.62063599 503.88372803]
[108.52281189 489.64749146]
[107.62999725 474.67410278]
[96.35394287 465.01043701]
[95.23519897 449.83798218]
[105.44778442 438.07614136]
[104.55496216 423.10275269]
[103.66214752 408.12933350]
[89.26139069 406.11798096]
[75.52777100 401.32635498]
[62.99277878 393.93780518]
[52.14191055 384.23626709]
[43.39587021 372.59524536]
[37.09428406 359.46356201]
[33.48246765 345.34796143]
[32.70191574 330.79351807]
[34.78474808 316.36273193]
[39.65237427 302.61364746]
[47.11848450 290.07836914]
[56.89616776 279.24243164]
[68.60893250 270.52593994]
[81.80521393 264.26736450]
[95.97577667 260.71041870]
[95.30599213 245.72538757]
[94.63620758 230.74034119]
[93.96642303 215.75531006]
[90.52738190 209.21353149]
[93.39990234 200.54252625]
[92.95329285 185.54916382]
[89.61203766 178.95692444]
[92.61332703 170.32963562]
[89.37059021 163.68836975]
[92.50000000 155.10671997]
[92.50000000 140.10671997]
[92.50000000 125.10671997]
[92.50000000 110.10671997]
[92.16502380 95.11045837]
[90.82678986 80.17027283]
[88.82277679 65.30474854]
[86.81876373 50.43922043]
[84.81475067 35.57369232]
[82.81073761 20.70816422]
[80.03607178 17.36822319]
[78.61179352 13.68909836]
[78.47871399 10.13695908]
[79.43232727 7.11086655]
[81.15728760 4.90119362]
[80.04164124 -10.05725956]
[78.92598724 -25.01571274]
[77.81034088 -39.97416687]
[69.06806183 -53.16064072]
[75.83731842 -66.42813873]
[74.72167206 -81.38658905]
[73.60602570 -96.34503937]
[64.86374664 -109.53151703]
[71.63300323 -122.79901123]
[69.96146393 -137.70558167]
[67.73634338 -152.53962708]
[65.51123047 -167.37367249]
[63.28610992 -182.20771790]
[61.06099319 -197.04176331]
[51.36216354 -209.54148865]
[57.12588120 -223.27571106]
[54.90076447 -238.10975647]
[51.68749237 -252.76153564]
[47.50048065 -267.16531372]
[43.31346893 -281.56912231]
[39.12645721 -295.97290039]
[34.93944550 -310.37667847]
[30.75243378 -324.78045654]
[15.86579132 -322.72967529]
[0.83919358 -322.86834717]
[-14.00706482 -325.19354248]
[-28.35653496 -329.65567017]
[-41.90335846 -336.15960693]
[-54.35877991 -344.56677246]
[-65.45731354 -354.69793701]
[-74.96240234 -366.33712769]
[-82.67142487 -379.23632812]
[-88.42008209 -393.12051392]
[-92.08583069 -407.69378662]
[-93.59053802 -422.64547729]
[-92.90213013 -437.65695190]
[-90.03528595 -452.40820312]
[-85.05110168 -466.58477783]
[-78.05582428 -479.88455200]
[-69.19855499 -492.02401733]
[-58.66809082 -502.74441528]
[-46.68888092 -511.81726074]
[-33.51626968 -519.04913330]
[-19.43103218 -524.28594971]
[-4.73339415 -527.41601562]
[10.26336288 -528.37261963]
[25.23958397 -527.13543701]
[39.87604523 -523.73071289]
[53.86077499 -518.23120117]
[66.89568329 -510.75393677]
[78.70293427 -501.45843506]
[89.03085327 -490.54275513]
[97.65930176 -478.23959351]
[104.40436554 -464.81118774]
[109.12226868 -450.54376221]
[111.71244812 -435.74145508]
[112.11969757 -420.71972656]
[110.33533478 -405.79879761]
[106.39739227 -391.29672241]
[100.38981628 -377.52258301]
[92.44064331 -364.76998901]
[82.71932220 -353.31076050]
[71.43305969 -343.38916016]
[58.82242966 -335.21667480]
[45.15621567 -328.96746826]
[49.34322739 -314.56369019]
[53.53023911 -300.15991211]
[57.71725082 -285.75610352]
[61.90426254 -271.35232544]
[66.09127045 -256.94854736]
[71.75580597 -270.83786011]
[83.96874237 -279.54672241]
[98.94577026 -280.37658691]
[112.04609680 -273.07031250]
[119.21043396 -259.89184570]
[118.21884155 -244.92465210]
[109.37857819 -232.80650330]
[95.42888641 -227.29231262]
[80.69223785 -230.09074402]
[69.73480988 -240.33486938]
[71.95992279 -225.50082397]
[81.49960327 -214.06213379]
[75.89503479 -199.26687622]
[78.12015533 -184.43283081]
[80.34526825 -169.59878540]
[82.57038879 -154.76473999]
[84.79550171 -139.93070984]
[95.67463684 -150.25758362]
[110.55181885 -148.34204102]
[118.46015930 -135.59613037]
[113.56990814 -121.41566467]
[99.48598480 -116.25395966]
[86.59145355 -123.91465759]
[95.25393677 -111.79811096]
[88.56447601 -97.46069336]
[89.68012238 -82.50223541]
[90.79577637 -67.54378510]
[99.45825195 -55.42723846]
[92.76879120 -41.08981705]
[93.88444519 -26.13136101]
[95.00009155 -11.17290878]
[96.11573792 3.78554511]
[97.67626190 18.70414925]
[99.68027496 33.56967926]
[101.68428802 48.43520737]
[103.68830109 63.30073547]
[105.69231415 78.16625977]
[115.62437439 66.92552185]
[130.58666992 65.86254883]
[142.00810242 75.58626556]
[143.34597778 90.52648163]
[133.83389282 102.12476349]
[118.92079926 103.73709106]
[107.15006256 94.44067383]
[109.59850311 97.42019653]
[110.72171783 101.46447754]
[110.07363892 105.95747375]
[107.50000000 110.10671997]
[107.50000000 125.10671997]
[107.50000000 140.10671997]
[107.50000000 155.10671997]
[107.61166382 170.10630798]
[107.94664001 185.10256958]
[108.39324951 200.09591675]
[108.95146179 215.08552551]
[109.62124634 230.07055664]
[110.29103088 245.05560303]
[110.96081543 260.04064941]
[126.24912262 262.54837036]
[140.67996216 268.16946411]
[153.62695312 276.65750122]
[164.52865601 287.64151001]
[172.91291809 300.64251709]
[178.41726685 315.09411621]
[180.80467224 330.36737061]
[179.97367859 345.79806519]
[175.96273804 360.71566772]
[168.94844055 374.47241211]
[159.23774719 386.47143555]
[147.25456238 396.19265747]
[133.52116394 403.21539307]
[118.63555908 407.23654175]
[119.52837372 422.20993042]
[120.42118835 437.18334961]
[131.95907593 447.64825439]
[132.65121460 462.84616089]
[122.60340118 473.78128052]
[123.49622345 488.75466919]
[132.04119873 502.06985474]
[125.07516479 515.23510742]
[125.96797943 530.20849609]
[126.86079407 545.18188477]
[127.75360870 560.15533447]
[140.41674805 569.33020020]
[144.16958618 584.51080322]
[137.24014282 598.52923584]
[122.90030670 604.76647949]
[107.92089844 600.27746582]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 205]
[3 204]
[4 203]
[5 202]
[7 200]
[8 199]
[11 196]
[12 195]
[13 194]
[28 180]
[29 179]
[30 178]
[31 177]
[33 176]
[34 175]
[36 174]
[38 173]
[39 172]
[40 171]
[41 170]
[42 166]
[43 159]
[44 158]
[45 157]
[46 156]
[47 155]
[52 154]
[53 153]
[54 152]
[55 151]
[57 149]
[58 148]
[59 147]
[61 145]
[62 139]
[63 138]
[64 137]
[65 136]
[66 135]
[68 133]
[69 132]
[70 122]
[71 121]
[72 120]
[73 119]
[74 118]
[75 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
