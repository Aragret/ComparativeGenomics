%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[99.67477417 651.20764160]
[84.72255707 652.86462402]
[69.72046661 651.74572754]
[55.17947388 647.88903809]
[41.59484100 641.42584229]
[29.42925453 632.57641602]
[19.09706879 621.64202881]
[10.95019722 608.99517822]
[5.26611614 595.06652832]
[2.23842478 580.33062744]
[1.97024465 565.28924561]
[4.47070980 550.45477295]
[9.65465546 536.33239746]
[17.34551811 523.40313721]
[27.28135109 512.10742188]
[39.12374115 502.82986450]
[52.46934509 495.88656616]
[66.86360931 491.51394653]
[81.81627655 489.86096191]
[82.93193054 474.90252686]
[84.04757690 459.94406128]
[77.27832031 446.67657471]
[86.02059937 433.49011230]
[87.13624573 418.53164673]
[88.25189209 403.57318115]
[89.25615692 388.60684204]
[90.14897156 373.63345337]
[91.04178619 358.66003418]
[76.23779297 344.56631470]
[76.65605927 323.83660889]
[92.45824432 309.96353149]
[92.45824432 294.96353149]
[92.45824432 279.96353149]
[92.45824432 264.96353149]
[92.45824432 249.96353149]
[92.45824432 234.96353149]
[92.45824432 219.96353149]
[81.77736664 209.64585876]
[81.56369019 194.43371582]
[92.45824432 183.30059814]
[92.45824432 168.30059814]
[92.45824432 153.30059814]
[92.45824432 138.30059814]
[92.45824432 123.30059814]
[92.45824432 108.30059814]
[81.91388702 118.96908569]
[66.99108887 120.48900604]
[54.51235580 112.16547394]
[50.18278885 97.80390167]
[55.98181152 83.97019958]
[69.25818634 76.98895264]
[83.94213867 80.05188751]
[93.32096100 91.76043701]
[94.88148499 76.84182739]
[96.44200897 61.92322540]
[98.00252533 47.00461960]
[91.74291229 32.47438431]
[100.76230621 20.62112427]
[102.32283020 5.70251942]
[103.88335419 -9.21608543]
[105.44387817 -24.13468933]
[107.00440216 -39.05329514]
[108.56492615 -53.97190094]
[96.08231354 -68.22316742]
[97.94847107 -86.75504303]
[112.51367950 -97.84424591]
[113.62932587 -112.80269623]
[114.74497986 -127.76114655]
[115.86062622 -142.71960449]
[116.19560242 -157.71586609]
[115.74900055 -172.70921326]
[107.60424805 -186.27290344]
[114.95917511 -199.22489929]
[114.51257324 -214.21824646]
[114.06596375 -229.21159363]
[113.61936188 -244.20494080]
[99.28943634 -246.88966370]
[85.83951569 -252.50012207]
[73.85952759 -260.78750610]
[63.87434769 -271.38562012]
[56.32081604 -283.82714844]
[51.52862167 -297.56414795]
[49.70590973 -311.99227905]
[50.93024826 -326.47738647]
[55.14532089 -340.38330078]
[62.16353226 -353.09979248]
[71.67433167 -364.06942749]
[83.25796509 -372.81195068]
[96.40400696 -378.94525146]
[110.53383636 -382.20220947]
[110.31050873 -397.20053101]
[110.08718109 -412.19888306]
[109.86385345 -427.19723511]
[95.19975281 -430.72073364]
[81.87300110 -437.78106689]
[70.72132111 -447.93441772]
[62.44572067 -460.54257202]
[57.56641006 -474.81292725]
[56.39010620 -489.84844971]
[58.99075317 -504.70401001]
[65.20487213 -518.44573975]
[74.64183807 -530.20989990]
[86.70844269 -539.25683594]
[100.64615631 -545.01800537]
[115.57884216 -547.13122559]
[130.56784058 -545.46356201]
[144.67089844 -540.11993408]
[157.00151062 -531.43621826]
[166.78456116 -519.95831299]
[173.40505981 -506.40765381]
[176.44686890 -491.63613892]
[175.71875000 -476.57223511]
[171.26647949 -462.16293335]
[163.36993408 -449.31399536]
[152.52551270 -438.83309937]
[139.41487122 -431.37908936]
[124.86219025 -427.42056274]
[125.08551788 -412.42221069]
[125.30884552 -397.42385864]
[125.53217316 -382.42553711]
[140.66667175 -379.29962158]
[154.73599243 -372.88916016]
[167.03680420 -363.51123047]
[176.95339966 -351.63134766]
[183.98858643 -337.84030151]
[187.78854370 -322.82489014]
[188.16064453 -307.33358765]
[185.08325195 -292.13940430]
[178.70687866 -278.00106812]
[169.34689331 -265.62542725]
[157.46788025 -255.63182068]
[143.66062927 -248.52134705]
[128.61270142 -244.65155029]
[129.05931091 -229.65820312]
[129.50592041 -214.66485596]
[129.95252991 -199.67150879]
[138.06533813 -187.18023682]
[130.74234009 -173.15582275]
[131.18894958 -158.16247559]
[141.41099548 -169.14016724]
[156.28192139 -171.10372925]
[169.00294495 -163.15542603]
[173.75819397 -148.92912292]
[168.37362671 -134.92889404]
[155.31098938 -127.55545807]
[140.54234314 -130.17984009]
[130.81907654 -141.60395813]
[129.70343018 -126.64550018]
[128.58778381 -111.68704987]
[127.47213745 -96.72859192]
[136.61395264 -89.90266418]
[141.37478638 -79.40265656]
[140.46650696 -67.78934479]
[133.99943542 -57.95684814]
[123.48352814 -52.41137695]
[121.92300415 -37.49277115]
[120.36248016 -22.57416725]
[118.80195618 -7.65556192]
[117.24143219 7.26304245]
[115.68091583 22.18164825]
[122.05214691 35.64480591]
[112.92113495 48.56514359]
[111.36061096 63.48374939]
[109.80008698 78.40235138]
[108.23956299 93.32096100]
[107.45824432 108.30059814]
[107.45824432 123.30059814]
[107.45824432 138.30059814]
[107.45824432 153.30059814]
[107.45824432 168.30059814]
[107.45824432 183.30059814]
[118.35279846 194.43371582]
[118.13911438 209.64585876]
[107.45824432 219.96353149]
[107.45824432 234.96353149]
[107.45824432 249.96353149]
[107.45824432 264.96353149]
[107.45824432 279.96353149]
[107.45824432 294.96353149]
[107.45824432 309.96353149]
[116.01033020 314.54525757]
[122.26872253 321.88302612]
[125.40578461 330.94146729]
[125.03041840 340.46246338]
[121.23631287 349.13973999]
[114.58332062 355.79815674]
[106.01519012 359.55285645]
[105.12237549 374.52624512]
[104.22956085 389.49966431]
[106.84263611 398.25234985]
[103.21035004 404.68884277]
[102.09470367 419.64730835]
[100.97904968 434.60574341]
[107.66851044 448.94317627]
[99.00603485 461.05972290]
[97.89038086 476.01815796]
[96.77473450 490.97662354]
[111.31676483 494.82940674]
[124.90313721 501.28890991]
[137.07110596 510.13510132]
[147.40623474 521.06671143]
[155.55651855 533.71136475]
[161.24435425 547.63842773]
[164.27601624 562.37353516]
[164.54824829 577.41485596]
[162.05178833 592.25000000]
[156.87164307 606.37377930]
[149.18426514 619.30511475]
[139.25148010 630.60351562]
[127.41159821 639.88421631]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 197]
[20 196]
[21 195]
[23 193]
[24 192]
[25 191]
[26 189]
[27 188]
[28 187]
[31 180]
[32 179]
[33 178]
[34 177]
[35 176]
[36 175]
[37 174]
[40 171]
[41 170]
[42 169]
[43 168]
[44 167]
[45 166]
[53 165]
[54 164]
[55 163]
[56 162]
[58 160]
[59 159]
[60 158]
[61 157]
[62 156]
[63 155]
[66 150]
[67 149]
[68 148]
[69 147]
[70 139]
[71 138]
[73 136]
[74 135]
[75 134]
[76 133]
[90 120]
[91 119]
[92 118]
[93 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
