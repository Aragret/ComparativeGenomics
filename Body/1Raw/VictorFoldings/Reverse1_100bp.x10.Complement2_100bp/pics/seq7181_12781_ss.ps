%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[108.82955170 584.81378174]
[100.51067352 572.19287109]
[96.28305817 557.68017578]
[96.52262878 542.56616211]
[101.20806885 528.19470215]
[109.92276764 515.84375000]
[121.89181519 506.61160278]
[136.05093384 501.31906128]
[135.15811157 486.34564209]
[134.26528931 471.37225342]
[133.14964294 456.41378784]
[131.81141663 441.47360229]
[130.47317505 426.53341675]
[129.13494873 411.59323120]
[127.79671478 396.65304565]
[118.95479584 384.66680908]
[125.43004608 370.23138428]
[124.09181213 355.29119873]
[122.64239502 340.36138916]
[121.08187103 325.44277954]
[119.52134705 310.52416992]
[117.96083069 295.60559082]
[116.40030670 280.68698120]
[114.83978271 265.76837158]
[113.27925873 250.84976196]
[111.60771942 235.94319153]
[109.71442413 221.06315613]
[107.71041107 206.19763184]
[95.74684143 197.39941406]
[93.50271606 182.35220337]
[102.81221008 169.86335754]
[100.80819702 154.99783325]
[98.80418396 140.13230896]
[96.57906342 125.29826355]
[94.13333893 110.49899292]
[91.46754456 95.73777771]
[88.58226776 81.01788330]
[85.69699860 66.29799652]
[82.81172180 51.57810211]
[69.97914124 42.74845886]
[67.26275635 27.77929497]
[75.75955200 15.59980297]
[72.87428284 0.87991112]
[69.98900604 -13.83998013]
[66.55794525 -28.44230270]
[62.58584976 -42.90682602]
[58.61375427 -57.37134933]
[54.64165878 -71.83587646]
[50.66956329 -86.30039978]
[46.58989334 -100.73495483]
[42.40288162 -115.13873291]
[38.21587372 -129.54251099]
[32.81542206 -136.90953064]
[34.07546234 -144.19198608]
[30.10336685 -158.65650940]
[17.92646027 -161.48330688]
[8.16353226 -169.17443848]
[2.62933707 -180.22216797]
[2.31924796 -192.50242615]
[7.23076534 -203.68321228]
[16.37562561 -211.66737366]
[12.83595276 -226.24375916]
[9.29628086 -240.82012939]
[-5.68756104 -243.22016907]
[-18.57624626 -251.15267944]
[-27.42206573 -263.38235474]
[-30.90228844 -278.02734375]
[-28.51688004 -292.84878540]
[-20.66008568 -305.59304810]
[-8.55566216 -314.33444214]
[-12.09533501 -328.91082764]
[-15.63500690 -343.48721313]
[-30.28250885 -347.89151001]
[-40.69011688 -358.96304321]
[-44.13570023 -373.65975952]
[-39.79139709 -388.01187134]
[-28.91977692 -398.19390869]
[-32.45944977 -412.77026367]
[-35.99912262 -427.34664917]
[-39.53879547 -441.92303467]
[-43.07846832 -456.49938965]
[-58.10055542 -455.69226074]
[-73.01514435 -457.65939331]
[-87.31425476 -462.33380127]
[-100.51085663 -469.55627441]
[-112.15548706 -479.08084106]
[-121.85152435 -490.58309937]
[-129.26872253 -503.67123413]
[-134.15447998 -517.89953613]
[-136.34236145 -532.78332520]
[-135.75785828 -547.81573486]
[-132.42086792 -562.48474121]
[-126.44507599 -576.29071045]
[-118.03398895 -588.76336670]
[-107.47409058 -599.47802734]
[-95.12505341 -608.06964111]
[-81.40748596 -614.24560547]
[-66.78858185 -617.79559326]
[-51.76628113 -618.59869385]
[-36.85221863 -616.62756348]
[-22.55437088 -611.94927979]
[-9.35971546 -604.72326660]
[2.28234267 -595.19555664]
[11.97527981 -583.69067383]
[19.38895798 -570.60052490]
[24.27086830 -556.37097168]
[26.45473862 -541.48657227]
[25.86618233 -526.45428467]
[22.52524948 -511.78622437]
[16.54572868 -497.98187256]
[8.13128090 -485.51144409]
[-2.43150139 -474.79965210]
[-14.78285313 -466.21136475]
[-28.50209045 -460.03906250]
[-24.96241951 -445.46270752]
[-21.42274666 -430.88632202]
[-17.88307381 -416.30993652]
[-14.34340191 -401.73358154]
[-0.01281571 -397.67156982]
[10.42992687 -386.91027832]
[14.10841370 -372.27011108]
[9.93761826 -357.65841675]
[-1.05863166 -347.02688599]
[2.48104072 -332.45050049]
[6.02071333 -317.87411499]
[20.78610039 -315.65768433]
[33.61274338 -307.93609619]
[42.52999878 -295.85937500]
[46.15396500 -281.24929810]
[43.90218735 -266.32470703]
[36.08700180 -253.36454773]
[23.87265587 -244.35980225]
[27.41232872 -229.78341675]
[30.95200157 -215.20704651]
[47.57973480 -209.25808716]
[57.39419937 -194.38774109]
[56.30810165 -176.44616699]
[44.56789017 -162.62860107]
[48.53998566 -148.16407776]
[52.61965561 -133.72952271]
[56.80666733 -119.32574463]
[60.99367523 -104.92195892]
[65.87930298 -99.37647247]
[65.13408661 -90.27249146]
[69.10617828 -75.80796814]
[73.07827759 -61.34344482]
[77.05037689 -46.87892151]
[81.02246857 -32.41439819]
[90.59735870 -43.96088791]
[105.59676361 -43.82678223]
[114.96366882 -32.11093903]
[111.79315186 -17.44984055]
[98.42239380 -10.65110397]
[84.70890045 -16.72525215]
[87.59416962 -2.00536156]
[90.47944641 12.71452999]
[102.94548798 20.78505898]
[106.08125305 35.67201996]
[97.53161621 48.69282913]
[100.41688538 63.41271973]
[103.30216217 78.13261414]
[106.18743134 92.85250092]
[109.76513672 96.68838501]
[110.93899536 102.25573730]
[108.93260956 108.05326843]
[111.37833405 122.85253906]
[115.27129364 128.19635010]
[115.80153656 133.85461426]
[113.66970825 138.12829590]
[115.67372131 152.99382019]
[117.67773438 167.85934448]
[129.96202087 177.43714905]
[131.78260803 192.54145813]
[122.57594299 204.19361877]
[124.57995605 219.05914307]
[128.82781982 227.14576721]
[126.50143433 234.16072083]
[130.62843323 242.30969238]
[128.19786072 249.28924561]
[129.75839233 264.20785522]
[131.31890869 279.12646484]
[132.87942505 294.04504395]
[134.43995667 308.96365356]
[136.00047302 323.88226318]
[137.56100464 338.80087280]
[141.56622314 347.01037598]
[139.03199768 353.95297241]
[140.37023926 368.89315796]
[149.30787659 381.94799805]
[142.73689270 395.31481934]
[144.07513428 410.25500488]
[145.41336060 425.19519043]
[146.75160217 440.13537598]
[148.08982849 455.07556152]
[151.57455444 460.69412231]
[151.68247986 466.37612915]
[149.23870850 470.47943115]
[150.13151550 485.45281982]
[151.02433777 500.42623901]
[165.71203613 503.99871826]
[178.69334412 511.74322510]
[188.81398010 522.97106934]
[195.17399597 536.68389893]
[197.20788574 551.66235352]
[194.73477173 566.57458496]
[187.97459412 580.09466553]
[177.52845764 591.02026367]
[164.32521057 598.38000488]
[149.53887939 601.51940918]
[134.48425293 600.15930176]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 199]
[9 198]
[10 197]
[11 194]
[12 193]
[13 192]
[14 191]
[15 190]
[17 188]
[18 187]
[19 185]
[20 184]
[21 183]
[22 182]
[23 181]
[24 180]
[25 179]
[26 177]
[27 175]
[28 174]
[31 171]
[32 170]
[33 169]
[34 166]
[35 165]
[36 162]
[37 161]
[38 160]
[39 159]
[42 156]
[43 155]
[44 154]
[45 148]
[46 147]
[47 146]
[48 145]
[49 144]
[50 142]
[51 141]
[52 140]
[54 139]
[55 138]
[61 134]
[62 133]
[63 132]
[70 125]
[71 124]
[72 123]
[77 118]
[78 117]
[79 116]
[80 115]
[81 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
