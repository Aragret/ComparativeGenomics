%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[169.53759766 530.26696777]
[178.10969543 517.87280273]
[189.30944824 507.79000854]
[202.53283691 500.56237793]
[198.56074524 486.09783936]
[194.58863831 471.63333130]
[181.45652771 459.99224854]
[186.26008606 442.21566772]
[182.07307434 427.81188965]
[171.09069824 417.75024414]
[174.66836548 402.33883667]
[170.48135376 387.93505859]
[166.29434204 373.53128052]
[162.10733032 359.12750244]
[157.92031860 344.72372437]
[153.41268921 330.41702271]
[148.58670044 316.21456909]
[143.76069641 302.01211548]
[138.93469238 287.80966187]
[133.80632019 282.48785400]
[134.14428711 273.35968018]
[129.53027344 259.08694458]
[124.91626740 244.81422424]
[120.30226135 230.54148865]
[109.67873383 224.75640869]
[105.71791840 212.90332031]
[111.06044006 201.16363525]
[106.65944672 186.82377625]
[102.25844574 172.48393250]
[98.50148773 187.00582886]
[89.22663879 198.79469299]
[75.99688721 205.86389160]
[61.04167557 207.02215576]
[46.88121414 202.07429504]
[35.90179443 191.85409546]
[29.95363998 178.08386230]
[30.03911972 163.08410645]
[36.14382935 149.38255310]
[47.23901367 139.28816223]
[61.45494461 134.50199890]
[76.39598846 135.83062744]
[89.54431152 143.05015564]
[98.68491364 154.94544983]
[97.12438965 140.02685547]
[95.45285034 125.12027740]
[93.67038727 110.22656250]
[91.66637421 95.36103058]
[89.44125366 80.52698517]
[87.21613312 65.69294739]
[84.39205170 62.39468384]
[82.91315460 58.73717499]
[82.72720337 55.18740845]
[83.63565826 52.14745331]
[85.32752991 49.91234589]
[76.38989258 36.85749054]
[82.96086884 23.49068260]
[81.51145172 8.56087494]
[79.95092773 -6.35773039]
[78.39040375 -21.27633476]
[76.71886444 -36.18291092]
[74.93639374 -51.07662582]
[73.15393066 -65.97034454]
[70.42929840 -69.35122681]
[69.05995941 -73.05114746]
[68.97978210 -76.60487366]
[69.97834015 -79.61643219]
[71.73600769 -81.80017853]
[70.84319305 -96.77358246]
[69.95037842 -111.74699402]
[69.05755615 -126.72039795]
[68.16474152 -141.69380188]
[67.27192688 -156.66720581]
[66.37911224 -171.64060974]
[65.48629761 -186.61401367]
[64.59348297 -201.58741760]
[63.70066452 -216.56083679]
[52.96007156 -206.08993530]
[37.96016312 -206.14274597]
[27.29357147 -216.68902588]
[27.07060242 -231.68736267]
[37.41898346 -242.54605103]
[52.41069412 -243.04472351]
[63.45739365 -232.89859009]
[63.90399933 -247.89193726]
[64.35060120 -262.88528442]
[57.02761841 -276.90969849]
[65.14042664 -289.40097046]
[65.58702850 -304.39431763]
[50.83685684 -307.30676270]
[36.76727676 -312.60739136]
[23.76212502 -320.15164185]
[12.17618561 -329.73370361]
[2.32553434 -341.09216309]
[-5.52109671 -353.91714478]
[-11.14964485 -367.85879517]
[-14.40655994 -382.53674316]
[-15.20299149 -397.55059814]
[-13.51721096 -412.49075317]
[-9.39520741 -426.94961548]
[-2.94943404 -440.53274536]
[5.64426517 -452.86962891]
[16.15144730 -463.62362671]
[28.28546906 -472.50143433]
[41.71530533 -479.26083374]
[56.07458115 -483.71740723]
[70.97156525 -485.74960327]
[85.99985504 -485.30194092]
[100.74946594 -482.38668823]
[114.81802368 -477.08331299]
[127.82172394 -469.53656006]
[139.40582275 -459.95227051]
[149.25427246 -448.59191895]
[157.09843445 -435.76541138]
[162.72430420 -421.82269287]
[165.97839355 -407.14410400]
[166.77192688 -392.13012695]
[165.08326721 -377.19030762]
[160.95848083 -362.73220825]
[154.51008606 -349.15029907]
[145.91401672 -336.81509399]
[135.40475464 -326.06311035]
[123.26902771 -317.18765259]
[109.83789062 -310.43084717]
[95.47775269 -305.97702026]
[80.58038330 -303.94772339]
[80.13377380 -288.95437622]
[87.48870850 -276.00238037]
[79.34395599 -262.43869019]
[78.89734650 -247.44532776]
[78.45074463 -232.45198059]
[78.67407227 -217.45364380]
[79.56688690 -202.48023987]
[80.45970154 -187.50683594]
[81.35251617 -172.53343201]
[82.24533081 -157.56002808]
[83.13815308 -142.58662415]
[84.03096771 -127.61321259]
[84.92378235 -112.63980865]
[85.81659698 -97.66639709]
[86.70941162 -82.69299316]
[88.04764557 -67.75280762]
[89.83011627 -52.85909271]
[91.61257935 -37.96537399]
[95.52864075 -31.69750214]
[93.30900574 -22.83685875]
[94.86952972 -7.91825342]
[96.43005371 7.00035143]
[100.25236511 13.32583332]
[97.90105438 22.15244865]
[106.74297333 34.13867950]
[100.26771545 48.57411194]
[102.05017853 63.46782684]
[104.27529907 78.30187225]
[106.50041199 93.13591766]
[109.90326691 97.12772369]
[110.82735443 102.74193573]
[108.56410217 108.44409180]
[110.34656525 123.33781433]
[114.47357178 131.48678589]
[112.04299927 138.46632385]
[113.60351562 153.38493347]
[116.59828949 168.08293152]
[120.99929047 182.42279053]
[125.40029144 196.76263428]
[139.16853333 208.99035645]
[134.57499695 225.92747498]
[139.18899536 240.20021057]
[143.80300903 254.47294617]
[148.41702271 268.74566650]
[153.13716125 282.98367310]
[157.96315002 297.18612671]
[162.78915405 311.38858032]
[167.61514282 325.59103394]
[171.54188538 329.03018188]
[173.55541992 333.21337891]
[173.69271851 337.28720093]
[172.32409668 340.53671265]
[176.51110840 354.94049072]
[180.69812012 369.34426880]
[184.88513184 383.74804688]
[189.07214355 398.15182495]
[200.35400391 409.24374390]
[196.47686768 423.62487793]
[200.66387939 438.02865601]
[211.57096863 444.91329956]
[214.76181030 456.99642944]
[209.05316162 467.66122437]
[213.02526855 482.12576294]
[216.99736023 496.59027100]
[232.05743408 496.05099487]
[246.83581543 498.99993896]
[260.53552246 505.27804565]
[272.41772461 514.54681396]
[281.84167480 526.30633545]
[288.29910278 539.92242432]
[291.44180298 554.66082764]
[291.10028076 569.72668457]
[287.29296875 584.30749512]
[280.22515869 597.61700439]
[270.27804565 608.93737793]
[257.98800659 617.65820312]
[244.01789856 623.30908203]
[229.12107849 625.58532715]
[214.10090637 624.36419678]
[199.76741028 619.71148682]
[186.89358521 611.87811279]
[176.17369080 601.28662109]
[168.18582153 588.50805664]
[163.36079407 574.23168945]
[161.95877075 559.22729492]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 189]
[5 188]
[6 187]
[8 184]
[9 183]
[11 181]
[12 180]
[13 179]
[14 178]
[15 177]
[16 173]
[17 172]
[18 171]
[19 170]
[21 169]
[22 168]
[23 167]
[24 166]
[27 164]
[28 163]
[29 162]
[43 161]
[44 160]
[45 158]
[46 157]
[47 154]
[48 153]
[49 152]
[54 151]
[56 149]
[57 147]
[58 146]
[59 145]
[60 143]
[61 142]
[62 141]
[67 140]
[68 139]
[69 138]
[70 137]
[71 136]
[72 135]
[73 134]
[74 133]
[75 132]
[76 131]
[83 130]
[84 129]
[85 128]
[87 126]
[88 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
