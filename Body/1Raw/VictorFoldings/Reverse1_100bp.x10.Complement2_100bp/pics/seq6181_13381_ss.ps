%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[25.92722893 620.45996094]
[11.11173820 626.61468506]
[-2.86740255 618.74298096]
[-5.28659344 602.88342285]
[5.70996189 591.20196533]
[6.60277796 576.22857666]
[7.49559355 561.25518799]
[8.38840961 546.28179932]
[-4.11969233 538.19396973]
[-10.94549084 524.84234619]
[-10.16665745 509.76724243]
[-1.89235365 497.02233887]
[11.73924351 490.08496094]
[12.63205910 475.11157227]
[13.52487469 460.13815308]
[14.41769028 445.16476440]
[6.62564373 435.91217041]
[7.24691963 423.43026733]
[16.49320221 414.43753052]
[17.60885048 399.47909546]
[18.72449875 384.52062988]
[19.84014702 369.56216431]
[13.07088852 356.29467773]
[21.81316757 343.10821533]
[22.92881775 328.14974976]
[24.04446602 313.19131470]
[21.66204453 309.05209351]
[21.85456085 303.37231445]
[25.42254829 297.80624390]
[26.98307228 282.88763428]
[28.54359436 267.96902466]
[30.10411835 253.05043030]
[31.66464043 238.13182068]
[23.58616447 250.77058411]
[12.54772091 260.92700195]
[-0.71855080 267.92742920]
[-15.33274555 271.30755615]
[-30.32555580 270.84320068]
[-44.70256424 266.56515503]
[-57.51019287 258.75717163]
[-67.89896393 247.93713379]
[-75.17981720 234.82267761]
[-78.86985016 220.28363037]
[-78.72430420 205.28433228]
[-74.75284576 190.81964111]
[-67.21887970 177.84892273]
[-56.62211227 167.23249817]
[-43.66538620 159.67451477]
[-29.20807076 155.67625427]
[-14.20907211 155.50291443]
[0.33678061 159.16600037]
[13.46471405 166.42253113]
[24.30399895 176.79122925]
[32.13570404 189.58438110]
[36.44038391 203.95343018]
[36.93202591 218.95046997]
[43.20938492 205.32714844]
[49.48674774 191.70382690]
[55.76410675 178.08052063]
[62.04146957 164.45719910]
[68.31883240 150.83387756]
[74.59619141 137.21057129]
[80.87355042 123.58724976]
[87.15090942 109.96393585]
[83.78350830 98.81485748]
[88.73607635 88.27382660]
[99.46766663 83.74897766]
[105.94716644 70.22063446]
[112.32576752 56.64442825]
[118.60312653 43.02111053]
[117.35119629 27.24951553]
[129.70462036 18.92832565]
[135.98197937 5.30501032]
[142.25933838 -8.31830597]
[148.53669739 -21.94162178]
[154.81405640 -35.56493759]
[154.58908081 -42.17258072]
[157.32427979 -47.15412521]
[161.48649597 -49.49611664]
[168.16668701 -62.92649460]
[174.84689331 -76.35687256]
[181.52708435 -89.78724670]
[181.49894714 -96.39865875]
[184.38124084 -101.29655457]
[188.61134338 -103.51358795]
[195.68844604 -116.73911285]
[202.76554871 -129.96464539]
[209.84265137 -143.19017029]
[211.13233948 -152.23309326]
[217.12486267 -156.55876160]
[224.39808655 -169.67745972]
[212.04507446 -178.20799255]
[200.58770752 -187.90826416]
[190.13630676 -198.68486023]
[180.79153442 -210.43399048]
[172.64340210 -223.04251099]
[165.77037048 -236.38897705]
[160.23863220 -250.34486389]
[156.10145569 -264.77575684]
[153.39869690 -279.54266357]
[152.15638733 -294.50341797]
[152.38648987 -309.51385498]
[154.08679199 -324.42947388]
[157.24089050 -339.10662842]
[161.81845093 -353.40393066]
[167.77536011 -367.18368530]
[175.05424500 -380.31323242]
[183.58502197 -392.66604614]
[193.28552246 -404.12322998]
[204.06233215 -414.57443237]
[215.81166077 -423.91894531]
[228.42033386 -432.06683350]
[241.76693726 -438.93960571]
[255.72293091 -444.47106934]
[270.15390015 -448.60794067]
[284.92086792 -451.31039429]
[299.88162231 -452.55242920]
[314.89208984 -452.32202148]
[329.80767822 -450.62142944]
[344.48474121 -447.46701050]
[358.78195190 -442.88919067]
[372.56161499 -436.93200684]
[385.69097900 -429.65286255]
[398.04367065 -421.12182617]
[409.50064087 -411.42108154]
[419.95162964 -400.64407349]
[429.29592896 -388.89456177]
[437.44354248 -376.28573608]
[444.31604004 -362.93899536]
[449.84722900 -348.98287964]
[453.98382568 -334.55181885]
[456.68597412 -319.78479004]
[457.92770386 -304.82400513]
[457.69699097 -289.81356812]
[455.99609375 -274.89801025]
[452.84140015 -260.22100830]
[448.26327515 -245.92388916]
[442.30581665 -232.14434814]
[435.02639771 -219.01512146]
[426.49514771 -206.66261292]
[416.79418945 -195.20582581]
[406.01693726 -184.75506592]
[394.26727295 -175.41101074]
[381.65826416 -167.26362610]
[368.31137085 -160.39138794]
[354.35516357 -154.86048889]
[339.92401123 -150.72419739]
[325.15695190 -148.02232361]
[310.19613647 -146.78091431]
[295.18569946 -147.01191711]
[280.27017212 -148.71310425]
[265.59323120 -151.86808777]
[251.29618835 -156.44650269]
[237.51678467 -162.40423584]
[230.24354553 -149.28553772]
[223.06819153 -136.11306763]
[215.99107361 -122.88753510]
[208.91397095 -109.66201019]
[201.83686829 -96.43647766]
[194.95745850 -83.10704803]
[188.27726746 -69.67667389]
[181.59706116 -56.24629974]
[174.91687012 -42.81592178]
[168.43737793 -29.28757668]
[162.16001892 -15.66426182]
[155.88265991 -2.04094529]
[149.60530090 11.58237076]
[143.32794189 25.20568657]
[145.02886963 40.00285339]
[132.22644043 49.29846954]
[125.94908142 62.92178726]
[126.00487518 70.31223297]
[119.47550964 76.70012665]
[112.99600983 90.22847748]
[114.71636963 106.91429901]
[100.77422333 116.24129486]
[94.49686432 129.86460876]
[88.21950531 143.48793030]
[81.94214630 157.11123657]
[75.66478729 170.73455811]
[69.38742065 184.35787964]
[63.11006165 197.98118591]
[56.83270264 211.60450745]
[50.55533981 225.22782898]
[46.58324432 239.69235229]
[45.02272034 254.61094666]
[43.46220016 269.52957153]
[41.90167618 284.44815063]
[40.34115219 299.36676025]
[39.00291824 314.30694580]
[37.88727188 329.26541138]
[36.77162170 344.22384644]
[43.46108246 358.56127930]
[34.79859924 370.67782593]
[33.68295288 385.63629150]
[32.56730270 400.59472656]
[31.45165443 415.55319214]
[39.82994080 431.95092773]
[29.39109612 446.05758667]
[28.49828148 461.03097534]
[27.60546494 476.00439453]
[26.71264839 490.97778320]
[39.42328644 499.48583984]
[46.12446976 513.12371826]
[45.10639191 528.18457031]
[36.74237442 540.63043213]
[23.36181450 547.17456055]
[22.46899986 562.14801025]
[21.57618332 577.12139893]
[20.68336678 592.09478760]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 210]
[6 209]
[7 208]
[8 207]
[13 202]
[14 201]
[15 200]
[16 199]
[19 197]
[20 196]
[21 195]
[22 194]
[24 192]
[25 191]
[26 190]
[29 189]
[30 188]
[31 187]
[32 186]
[33 185]
[56 184]
[57 183]
[58 182]
[59 181]
[60 180]
[61 179]
[62 178]
[63 177]
[64 176]
[67 174]
[68 173]
[69 171]
[70 170]
[72 168]
[73 167]
[74 166]
[75 165]
[76 164]
[79 163]
[80 162]
[81 161]
[82 160]
[85 159]
[86 158]
[87 157]
[88 156]
[90 155]
[91 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
