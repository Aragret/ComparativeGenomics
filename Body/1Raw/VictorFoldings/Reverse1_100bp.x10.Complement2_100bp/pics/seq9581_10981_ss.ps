%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[71.26528931 811.43688965]
[56.34078217 809.82946777]
[41.62826157 806.85180664]
[27.25324440 802.52935791]
[13.33838177 796.89898682]
[0.00238945 790.00872803]
[-12.64095116 781.91729736]
[-24.48376846 772.69384766]
[-35.42502213 762.41699219]
[-45.37136459 751.17443848]
[-54.23793411 739.06213379]
[-61.94908524 726.18334961]
[-68.43901825 712.64801025]
[-73.65237427 698.57159424]
[-77.54467010 684.07421875]
[-80.08269501 669.27947998]
[-81.24479675 654.31372070]
[-81.02105713 639.30456543]
[-79.41338348 624.38012695]
[-76.43550110 609.66760254]
[-72.11281586 595.29266357]
[-66.48220062 581.37792969]
[-59.59169769 568.04205322]
[-51.50009918 555.39880371]
[-42.27643585 543.55615234]
[-31.99940491 532.61505127]
[-20.75669098 522.66894531]
[-8.64421082 513.80255127]
[4.23469257 506.09161377]
[17.77013779 499.60189819]
[31.84664345 494.38879395]
[46.34411240 490.49673462]
[61.13885117 487.95895386]
[76.10463715 486.79711914]
[76.32796478 471.79876709]
[76.55129242 456.80044556]
[74.37104034 454.02935791]
[73.42466736 450.06460571]
[74.25858307 445.49755859]
[77.13443756 441.14132690]
[78.02725220 426.16793823]
[78.92006683 411.19451904]
[79.81288147 396.22113037]
[80.59420776 381.24148560]
[81.26399231 366.25643921]
[67.43952942 360.58462524]
[56.36897278 350.50631714]
[49.40145111 337.22369385]
[47.39499664 322.33090210]
[50.61090088 307.62280273]
[58.67988205 294.87872314]
[70.64437103 285.64709473]
[85.07212830 281.05740356]
[85.74191284 266.07235718]
[78.58062744 253.01229858]
[86.92642212 239.57138062]
[87.59620667 224.58633423]
[88.26599121 209.60130310]
[88.93577576 194.61625671]
[89.49398804 179.62664795]
[89.94059753 164.63330078]
[90.38719940 149.63995361]
[87.44424438 142.86050415]
[90.95372009 134.42715454]
[91.62351227 119.44212341]
[82.01822662 111.17217255]
[78.85890961 98.89730072]
[83.27809143 87.01772308]
[93.69161987 79.79193115]
[94.58443451 64.81852722]
[95.36576080 49.83889008]
[96.03554535 34.85385132]
[96.70532990 19.86881065]
[97.37511444 4.88377237]
[86.98854828 -6.72471523]
[87.88127136 -21.91213417]
[99.01219940 -31.74259949]
[99.68198395 -46.72763824]
[97.27494049 -51.35939789]
[96.92067719 -55.98841476]
[98.27439117 -59.83321762]
[100.73110199 -62.36243057]
[102.06933594 -77.30261230]
[95.59407806 -91.73804474]
[104.43599701 -103.72428131]
[105.77423096 -118.66445923]
[99.29897308 -133.09989929]
[108.14089203 -145.08612061]
[109.47912598 -160.02630615]
[107.12781525 -168.85292053]
[110.95012665 -175.17840576]
[112.51065063 -190.09701538]
[114.07117462 -205.01560974]
[99.67181396 -209.38081360]
[86.35890961 -216.39245605]
[74.61371613 -225.79707336]
[64.86082458 -237.25471497]
[57.45277786 -250.35118103]
[52.65738678 -264.61303711]
[50.64799500 -279.52474976]
[51.49724197 -294.54724121]
[55.17442703 -309.13748169]
[61.54662704 -322.76800537]
[70.38348389 -334.94613647]
[81.36555481 -345.23156738]
[94.09584808 -353.25256348]
[108.11415863 -358.71911621]
[122.91374969 -361.43365479]
[137.95960999 -361.29800415]
[152.70785522 -358.31710815]
[166.62535095 -352.59872437]
[179.20895386 -344.34951782]
[190.00381470 -333.86773682]
[198.61968994 -321.53228760]
[204.74510193 -307.78909302]
[208.15866089 -293.13494873]
[208.73693848 -278.09957886]
[206.45903015 -263.22653198]
[201.40730286 -249.05343628]
[193.76435852 -236.09265137]
[183.80647278 -224.81271362]
[171.89364624 -215.62135315]
[158.45649719 -208.85086060]
[143.98077393 -204.74598694]
[128.98977661 -203.45509338]
[127.42925262 -188.53648376]
[125.86872864 -173.61788940]
[124.41931152 -158.68807983]
[123.08107758 -143.74789429]
[129.65205383 -130.38108826]
[120.71441650 -117.32622528]
[119.37618256 -102.38603973]
[125.94715881 -89.01923370]
[117.00952148 -75.96437836]
[115.67128754 -61.02419662]
[114.66702271 -46.05785370]
[113.99723816 -31.07281303]
[124.20674896 -20.28849792]
[123.74095917 -5.08199549]
[112.36015320 5.55355787]
[111.69036865 20.53859711]
[111.02058411 35.52363586]
[110.35079956 50.50867462]
[113.19248962 57.33117676]
[109.55784607 65.71134186]
[108.66502380 80.68474579]
[119.89873505 92.77489471]
[119.03909302 109.25605774]
[106.60855103 120.11190796]
[105.93875885 135.09693909]
[105.38055420 150.08654785]
[104.93394470 165.07991028]
[104.48734283 180.07325745]
[107.35985565 188.74426270]
[103.92081451 195.28604126]
[103.25102997 210.27108765]
[102.58124542 225.25611877]
[101.91146088 240.24116516]
[109.02483368 254.37306213]
[100.72695160 266.74215698]
[100.05716705 281.72717285]
[114.01791382 287.58575439]
[125.11109161 297.84799194]
[132.01092529 311.26113892]
[133.90180969 326.19747925]
[130.57469177 340.85189819]
[122.44992828 353.45993042]
[110.52437592 362.51037598]
[96.24903107 366.92623901]
[95.57924652 381.91125488]
[98.32234192 390.62408447]
[94.78628540 397.11392212]
[93.89347076 412.08734131]
[93.00065613 427.06076050]
[92.10784149 442.03414917]
[91.54962921 457.02377319]
[91.32630157 472.02209473]
[91.10297394 487.02044678]
[106.02753448 488.62734985]
[120.74015808 491.60452271]
[135.11531067 495.92648315]
[149.03036499 501.55639648]
[162.36659241 508.44622803]
[175.01019287 516.53723145]
[186.85331726 525.76025391]
[197.79492188 536.03674316]
[207.74163818 547.27899170]
[216.60861206 559.39099121]
[224.32019043 572.26953125]
[230.81057739 585.80462646]
[236.02439880 599.88092041]
[239.91717529 614.37817383]
[242.45568848 629.17279053]
[243.61828613 644.13848877]
[243.39505005 659.14764404]
[241.78788757 674.07220459]
[238.81048584 688.78479004]
[234.48828125 703.15985107]
[228.85812378 717.07482910]
[221.96806335 730.41094971]
[213.87689209 743.05438232]
[204.65362549 754.89733887]
[194.37695312 765.83880615]
[183.13456726 775.78533936]
[171.02238464 784.65209961]
[158.14373779 792.36346436]
[144.60852051 798.85363770]
[130.53218079 804.06719971]
[116.03484344 807.95971680]
[101.24018860 810.49798584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 178]
[35 177]
[36 176]
[40 175]
[41 174]
[42 173]
[43 172]
[44 170]
[45 169]
[53 161]
[54 160]
[56 158]
[57 157]
[58 156]
[59 155]
[60 153]
[61 152]
[62 151]
[64 150]
[65 149]
[69 146]
[70 145]
[71 143]
[72 142]
[73 141]
[74 140]
[77 137]
[78 136]
[82 135]
[83 134]
[85 132]
[86 131]
[88 129]
[89 128]
[91 127]
[92 126]
[93 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
