%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUCCAAAACCGAGCAUUCUUCCGGAUCUAUCCCCUAACACGCCACACACUACGAUCCCAUCUUAGGCUCAUACAACCUCUUUAUUUUACACGUAUCACCxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[111.69451141 780.09765625]
[98.16018677 773.60833740]
[85.24295807 765.96411133]
[73.04112244 757.22314453]
[61.64755630 747.45196533]
[51.14896774 736.72491455]
[41.62525940 725.12371826]
[33.14891815 712.73657227]
[25.78444672 699.65783691]
[19.58790207 685.98693848]
[14.60644054 671.82806396]
[10.87797546 657.28887939]
[8.43088341 642.48004150]
[7.28378868 627.51428223]
[7.44542122 612.50555420]
[8.91455173 597.56799316]
[11.67999744 582.81530762]
[15.72071266 568.35974121]
[21.00594330 554.31140137]
[27.49546623 540.77722168]
[35.13988876 527.86004639]
[43.88103867 515.65838623]
[53.65237808 504.26492310]
[64.37954712 493.76647949]
[75.98090363 484.24295044]
[88.36814880 475.76678467]
[101.44701385 468.40249634]
[115.11795044 462.20614624]
[129.27691650 457.22488403]
[143.81616211 453.49661255]
[141.37043762 438.69735718]
[138.92469788 423.89807129]
[136.47897339 409.09881592]
[133.59370422 394.37890625]
[130.27143860 379.75146484]
[126.94918823 365.12399292]
[123.62692261 350.49652100]
[120.30466461 335.86907959]
[116.98240662 321.24160767]
[113.66014862 306.61413574]
[104.77054596 318.69616699]
[89.96275330 321.08975220]
[77.71935272 312.42379761]
[75.05390930 297.66250610]
[83.49331665 285.26184082]
[98.20310211 282.32546997]
[110.75628662 290.53469849]
[108.75227356 275.66915894]
[106.74826050 260.80361938]
[104.74423981 245.93809509]
[102.74022675 231.07257080]
[100.59533691 229.26770020]
[99.03614807 226.50445557]
[98.43125916 223.00166321]
[99.06334686 219.10743713]
[101.08678436 215.26560974]
[99.97113037 200.30714417]
[88.55245209 190.81245422]
[87.20793152 175.65834045]
[97.24427032 163.74575806]
[96.12861633 148.78730774]
[95.01296997 133.82885742]
[86.35048676 121.71230316]
[93.03994751 107.37488556]
[89.34761047 100.20974731]
[92.02073669 92.18570709]
[83.47575378 78.87053680]
[90.44179535 65.70529175]
[89.54898071 50.73188782]
[87.76651764 35.83817291]
[85.10071564 21.07695389]
[82.10594177 6.37894964]
[78.78368378 -8.24851036]
[75.46142578 -22.87597084]
[64.85977173 -34.61971283]
[69.58602142 -48.74457932]
[66.26376343 -63.37203979]
[62.94150162 -77.99949646]
[52.86058426 -66.89206696]
[37.88213348 -67.69580078]
[29.04770470 -79.81821442]
[32.86971283 -94.32311249]
[46.53071594 -100.51803589]
[59.95930862 -93.83760834]
[57.73419189 -108.67164612]
[55.50907516 -123.50569153]
[53.28395844 -138.33973694]
[51.05884171 -153.17378235]
[36.04762650 -154.56190491]
[21.80504417 -159.50279236]
[9.15913677 -167.70915222]
[-1.15487885 -178.70390320]
[-8.53735828 -191.84782410]
[-12.55909538 -206.37672424]
[-12.98627090 -221.44592285]
[-9.79404926 -236.17933655]
[-3.16802192 -249.72035217]
[6.50658226 -261.28173828]
[18.66729355 -270.19131470]
[32.60710526 -275.93109131]
[47.51557541 -278.16735840]
[62.52594757 -276.77014160]
[76.76553345 -271.82061768]
[89.40646362 -263.60659790]
[99.71380615 -252.60559082]
[107.08831787 -239.45719910]
[111.10124207 -224.92585754]
[111.51928711 -209.85639954]
[108.31813049 -195.12493896]
[101.68389893 -181.58793640]
[92.00228119 -170.03242493]
[79.83617401 -161.13021851]
[65.89288330 -155.39889526]
[68.11800385 -140.56484985]
[70.34311676 -125.73081207]
[72.56823730 -110.89676666]
[74.79335022 -96.06272125]
[77.56896210 -81.32176208]
[80.89122009 -66.69429779]
[84.21348572 -52.06684113]
[94.57750702 -41.36935043]
[90.08888245 -26.19823074]
[93.41114807 -11.57077026]
[96.73340607 3.05669022]
[99.50599670 5.23501110]
[101.36124420 8.86448765]
[101.62859344 13.49933624]
[99.86193848 18.41115761]
[102.52773285 33.17237473]
[110.23896027 20.30626106]
[123.99440765 14.32396603]
[138.66362000 17.45673943]
[148.77534485 28.53613281]
[150.55816650 43.42980576]
[143.34712219 56.58279037]
[129.83177185 63.08934402]
[115.05299377 60.52268600]
[104.52238464 49.83907318]
[105.41519928 64.81247711]
[113.89632416 77.05665588]
[106.99414062 91.29289246]
[107.99840546 106.25923157]
[116.74068451 119.44570923]
[109.97142792 132.71321106]
[111.08707428 147.67166138]
[112.20272064 162.63011169]
[123.89514160 172.92210388]
[124.81348419 188.10798645]
[114.92958832 199.19149780]
[116.04523468 214.14996338]
[117.60575867 229.06855774]
[119.60977173 243.93408203]
[121.61378479 258.79962158]
[123.61779785 273.66513062]
[125.62181091 288.53067017]
[128.28761292 303.29190063]
[131.60986328 317.91934204]
[134.93212891 332.54681396]
[138.25437927 347.17428589]
[141.57664490 361.80172729]
[144.89891052 376.42919922]
[148.22116089 391.05664062]
[151.28274536 394.13574219]
[153.02957153 397.67312622]
[153.47903442 401.19921875]
[152.79919434 404.29830933]
[151.27824402 406.65307617]
[153.72396851 421.45233154]
[156.16970825 436.25161743]
[158.61543274 451.05087280]
[173.58113098 449.90316772]
[188.58990479 450.06417847]
[203.52754211 451.53265381]
[218.28033447 454.29748535]
[232.73602295 458.33758545]
[246.78457642 463.62225342]
[260.31909180 470.11120605]
[273.23654175 477.75506592]
[285.43859863 486.49569702]
[296.83245850 496.26657104]
[307.33132935 506.99328613]
[316.85537720 518.59423828]
[325.33206177 530.98114014]
[332.69689941 544.05969238]
[338.89382935 557.73034668]
[343.87570190 571.88916016]
[347.60455322 586.42822266]
[350.05206299 601.23693848]
[351.19958496 616.20269775]
[351.03836060 631.21142578]
[349.56967163 646.14904785]
[346.80462646 660.90185547]
[342.76431274 675.35748291]
[337.47949219 689.40594482]
[330.99035645 702.94036865]
[323.34628296 715.85766602]
[314.60546875 728.05963135]
[304.83444214 739.45336914]
[294.10757446 749.95208740]
[282.50650024 759.47595215]
[270.11947632 767.95245361]
[257.04083252 775.31713867]
[243.37005615 781.51385498]
[229.21122742 786.49554443]
[214.67208862 790.22418213]
[199.86331177 792.67150879]
[184.89758301 793.81878662]
[169.88880920 793.65740967]
[154.95121765 792.18847656]
[140.19850159 789.42321777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 170]
[31 169]
[32 168]
[33 167]
[34 162]
[35 161]
[36 160]
[37 159]
[38 158]
[39 157]
[40 156]
[47 155]
[48 154]
[49 153]
[50 152]
[51 151]
[56 150]
[57 149]
[60 146]
[61 145]
[62 144]
[64 142]
[66 141]
[68 139]
[69 138]
[70 129]
[71 128]
[72 124]
[73 123]
[74 122]
[76 120]
[77 119]
[78 118]
[84 117]
[85 116]
[86 115]
[87 114]
[88 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
