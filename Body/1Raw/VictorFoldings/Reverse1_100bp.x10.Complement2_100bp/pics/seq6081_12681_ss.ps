%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[83.05852509 617.89044189]
[69.31872559 611.77014160]
[56.89266968 603.29473877]
[46.17979813 592.73663330]
[37.52448273 580.43518066]
[31.20496559 566.78588867]
[27.42438507 552.22747803]
[26.30427742 537.22796631]
[27.88064384 522.26953125]
[32.10281372 507.83300781]
[38.83506393 494.38247681]
[47.86097336 482.35034180]
[58.89040375 472.12332153]
[71.56880188 464.03024292]
[85.48860931 458.33123779]
[100.20236206 455.20950317]
[99.75575256 440.21612549]
[99.30915070 425.22277832]
[98.86254120 410.22943115]
[98.41593170 395.23608398]
[90.30312347 382.74484253]
[97.62611389 368.72039795]
[86.64278412 358.72531128]
[85.97627258 343.52627563]
[96.53452301 332.07373047]
[96.08791351 317.08038330]
[86.07370758 302.66918945]
[94.93650055 286.52816772]
[94.26671600 271.54312134]
[93.59693146 256.55807495]
[92.92714691 241.57304382]
[89.48810577 235.03126526]
[92.36062622 226.36024475]
[91.91401672 211.36689758]
[91.46740723 196.37355042]
[89.16559601 193.70259094]
[88.04312897 189.78404236]
[88.67228699 185.18431091]
[91.35075378 180.70404053]
[91.57408142 165.70570374]
[91.79740906 150.70735168]
[92.02073669 135.70901489]
[92.24406433 120.71068573]
[92.46739197 105.71234894]
[89.76093292 101.21912384]
[89.76460266 95.52937317]
[92.92729950 90.27253723]
[93.59708405 75.28749847]
[94.26686859 60.30246353]
[94.37854004 45.30287933]
[93.93193054 30.30952835]
[82.71073151 19.50571060]
[82.47139740 4.29395914]
[92.84033966 -6.33715773]
[92.39373016 -21.33050728]
[91.94712830 -36.32385635]
[91.50051880 -51.31720734]
[91.05391693 -66.31055450]
[79.83271790 -77.11437225]
[79.59338379 -92.32612610]
[89.96232605 -102.95724487]
[89.51571655 -117.95059204]
[89.06910706 -132.94393921]
[88.62250519 -147.93728638]
[77.40130615 -158.74110413]
[77.16197205 -173.95286560]
[87.53091431 -184.58398438]
[87.08430481 -199.57733154]
[86.63770294 -214.57067871]
[86.19109344 -229.56402588]
[75.14350128 -219.41755676]
[60.15182114 -219.91696167]
[49.80395889 -230.77613831]
[50.02764511 -245.77447510]
[60.69474411 -256.32022095]
[75.69464874 -256.37231445]
[86.43436432 -245.90179443]
[87.32717896 -260.87518311]
[88.22000122 -275.84860229]
[89.11281586 -290.82199097]
[90.00563049 -305.79541016]
[90.89844513 -320.76882935]
[91.79125977 -335.74221802]
[77.02784729 -338.50717163]
[62.72740936 -343.10070801]
[49.11547470 -349.45040894]
[36.40673065 -357.45608521]
[24.80160713 -366.99151611]
[14.48313713 -377.90628052]
[5.61405659 -390.02828979]
[-1.66575611 -403.16629028]
[-7.24148798 -417.11312866]
[-11.02520180 -431.64883423]
[-12.95722198 -446.54415894]
[-13.00707912 -461.56417847]
[-11.17398643 -476.47198486]
[-7.48685408 -491.03250122]
[-2.00383377 -505.01605225]
[5.18859959 -518.20208740]
[13.97701073 -530.38269043]
[24.22279358 -541.36578369]
[35.76435852 -550.97802734]
[48.41967773 -559.06787109]
[61.98915482 -565.50781250]
[76.25878906 -570.19616699]
[91.00351715 -573.05908203]
[105.99079895 -574.05133057]
[120.98426819 -573.15734863]
[135.74743652 -570.39111328]
[150.04750061 -565.79638672]
[163.65888977 -559.44555664]
[176.36697388 -551.43878174]
[187.97128296 -541.90240479]
[198.28883362 -530.98675537]
[207.15690613 -518.86401367]
[214.43560791 -505.72540283]
[220.01016235 -491.77807617]
[223.79264832 -477.24206543]
[225.72341919 -462.34655762]
[225.77201843 -447.32653809]
[223.93766785 -432.41888428]
[220.24931335 -417.85870361]
[214.76510620 -403.87561035]
[207.57156372 -390.69015503]
[198.78213501 -378.51028442]
[188.53543091 -367.52810669]
[176.99305725 -357.91683960]
[164.33705139 -349.82800293]
[150.76702881 -343.38925171]
[136.49700928 -338.70205688]
[121.75203705 -335.84042358]
[106.76466370 -334.84939575]
[105.87184906 -319.87600708]
[104.97903442 -304.90258789]
[104.08621979 -289.92919922]
[103.19340515 -274.95578003]
[102.30059052 -259.98239136]
[101.40776825 -245.00897217]
[101.18444061 -230.01063538]
[101.63105011 -215.01728821]
[102.07765961 -200.02394104]
[102.52426147 -185.03057861]
[113.50759125 -175.03549194]
[114.17410278 -159.83645630]
[103.61585236 -148.38389587]
[104.06246185 -133.39054871]
[104.50906372 -118.39720154]
[104.95567322 -103.40384674]
[115.93900299 -93.40875244]
[116.60551453 -78.20972443]
[106.04726410 -66.75716400]
[106.49387360 -51.76381302]
[106.94047546 -36.77046204]
[107.38708496 -21.77711296]
[107.83368683 -6.78376389]
[118.81702423 3.21133423]
[119.48352814 18.41036034]
[108.92527771 29.86292076]
[109.37188721 44.85626984]
[121.40108490 35.89533997]
[135.94523621 39.56518936]
[142.28292847 53.16054535]
[135.74224854 66.65941620]
[121.14474487 70.11093903]
[109.25190735 60.97224808]
[108.58212280 75.95728302]
[107.91233826 90.94232178]
[107.46572876 105.93567657]
[107.24240112 120.93401337]
[107.01907349 135.93234253]
[106.79574585 150.93067932]
[106.57241821 165.92903137]
[106.34909058 180.92736816]
[106.46076202 195.92694092]
[106.90736389 210.92030334]
[107.35397339 225.91365051]
[107.91218567 240.90325928]
[108.58197021 255.88829041]
[109.25175476 270.87332153]
[109.92153931 285.85836792]
[118.89597321 295.12240601]
[119.14533997 307.61727905]
[111.08126831 316.63375854]
[111.52787018 331.62710571]
[122.74906921 342.43093872]
[122.98840332 357.64266968]
[112.61946106 368.27380371]
[120.76421356 381.83749390]
[113.40928650 394.78948975]
[113.85588837 409.78283691]
[114.30249786 424.77618408]
[114.74909973 439.76953125]
[115.19570923 454.76287842]
[130.06918335 457.00332642]
[144.30352783 461.86370850]
[157.44114685 469.18780518]
[169.05975342 478.74017334]
[178.78582764 490.21377563]
[186.30671692 503.23974609]
[191.38069153 517.39935303]
[193.84460449 532.23742676]
[193.61926270 547.27703857]
[190.71191406 562.03466797]
[185.21601868 576.03588867]
[177.30825806 588.83068848]
[167.24279785 600.00775146]
[155.34324646 609.20776367]
[141.99208069 616.13494873]
[127.61852264 620.56671143]
[112.68460083 622.36053467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 193]
[17 192]
[18 191]
[19 190]
[20 189]
[22 187]
[25 184]
[26 183]
[28 180]
[29 179]
[30 178]
[31 177]
[33 176]
[34 175]
[35 174]
[39 173]
[40 172]
[41 171]
[42 170]
[43 169]
[44 168]
[47 167]
[48 166]
[49 165]
[50 159]
[51 158]
[54 155]
[55 154]
[56 153]
[57 152]
[58 151]
[61 148]
[62 147]
[63 146]
[64 145]
[67 142]
[68 141]
[69 140]
[70 139]
[77 138]
[78 137]
[79 136]
[80 135]
[81 134]
[82 133]
[83 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
