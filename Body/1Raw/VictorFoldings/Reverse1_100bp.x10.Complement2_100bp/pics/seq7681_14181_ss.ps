%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[166.11758423 433.30096436]
[170.04389954 418.79287720]
[176.13894653 405.05419922]
[184.25985718 392.40704346]
[194.21626282 381.14779663]
[205.77476501 371.54043579]
[218.66442871 363.81015015]
[213.00164795 349.92013550]
[207.33885193 336.03012085]
[201.26502991 322.31484985]
[194.78552246 308.78649902]
[188.30603027 295.25814819]
[175.83009338 287.12179565]
[176.84706116 271.33331299]
[170.36756897 257.80496216]
[163.88807678 244.27662659]
[157.20788574 230.84625244]
[150.32846069 217.51683044]
[138.90385437 213.54130554]
[133.06341553 202.49264526]
[136.42030334 190.03895569]
[129.74011230 176.60858154]
[123.05992126 163.17820740]
[116.37972260 149.74783325]
[109.69953156 136.31745911]
[103.01933289 122.88708496]
[96.33914185 109.45671082]
[90.21504974 104.21570587]
[89.66114044 95.77627563]
[83.18164825 82.24792480]
[76.70215607 68.71958160]
[73.03464508 66.39506531]
[70.54772186 63.33243179]
[69.32846069 59.99345016]
[69.30500793 56.82074356]
[70.26663971 54.18760681]
[64.60385132 40.29758072]
[58.94106293 26.40755272]
[53.27827835 12.51752567]
[47.61548996 -1.37250078]
[41.95270538 -15.26252747]
[29.57812119 -25.12053299]
[31.93808746 -39.82698822]
[26.27530098 -53.71701431]
[20.61251450 -67.60704041]
[14.94972706 -81.49707031]
[9.28694057 -95.38710022]
[3.62415409 -109.27712250]
[-2.34740877 -123.03722382]
[-8.62476921 -136.66053772]
[-14.90213013 -150.28385925]
[-22.07749557 -163.45632935]
[-30.11866951 -176.11886597]
[-38.15984344 -188.78138733]
[-46.20101547 -201.44390869]
[-54.24218750 -214.10643005]
[-62.28335953 -226.76896667]
[-66.91076660 -229.18437195]
[-69.85457611 -232.77424622]
[-70.94934082 -236.70063782]
[-70.38617706 -240.18133545]
[-77.85391998 -253.19027710]
[-85.32166290 -266.19924927]
[-92.78940582 -279.20819092]
[-106.66534424 -273.45611572]
[-121.16294861 -269.52569580]
[-136.04412842 -267.48153687]
[-151.06454468 -267.35717773]
[-165.97753906 -269.15469360]
[-180.53822327 -272.84448242]
[-194.50750732 -278.36602783]
[-207.65599060 -285.62866211]
[-219.76777649 -294.51309204]
[-230.64396667 -304.87344360]
[-240.10597229 -316.53958130]
[-247.99841309 -329.31994629]
[-254.19169617 -343.00466919]
[-258.58410645 -357.36901855]
[-261.10354614 -372.17715454]
[-261.70858765 -387.18591309]
[-260.38937378 -402.14877319]
[-257.16751099 -416.82009888]
[-252.09590149 -430.95898438]
[-245.25785828 -444.33319092]
[-236.76565552 -456.72311401]
[-226.75874329 -467.92535400]
[-215.40142822 -477.75592041]
[-202.88023376 -486.05337524]
[-189.40075684 -492.68151855]
[-175.18434143 -497.53143311]
[-160.46444702 -500.52355957]
[-145.48275757 -501.60870361]
[-130.48532104 -500.76907349]
[-115.71837616 -498.01846313]
[-101.42443848 -493.40200806]
[-87.83821106 -486.99554443]
[-75.18279266 -478.90426636]
[-63.66600037 -469.26104736]
[-53.47695541 -458.22421265]
[-44.78296280 -445.97500610]
[-37.72678757 -432.71459961]
[-32.42430115 -418.66070557]
[-28.96257210 -404.04412842]
[-27.39844704 -389.10482788]
[-27.75761032 -374.08819580]
[-30.03416252 -359.24078369]
[-34.19072342 -344.80642700]
[-40.15903854 -331.02209473]
[-47.84109879 -318.11416626]
[-57.11075974 -306.29461670]
[-67.81580353 -295.75753784]
[-79.78044891 -286.67593384]
[-72.31271362 -273.66699219]
[-64.84497070 -260.65802002]
[-57.37722778 -247.64907837]
[-49.62083435 -234.81013489]
[-41.57966232 -222.14761353]
[-33.53849030 -209.48507690]
[-25.49731827 -196.82255554]
[-17.45614433 -184.16003418]
[-9.41497135 -171.49751282]
[-7.85256958 -186.41590881]
[1.44399035 -198.18765259]
[15.59406853 -203.16513062]
[30.21310997 -199.80603027]
[40.77124405 -189.15116882]
[43.99691772 -174.50210571]
[38.89062500 -160.39801025]
[27.03460121 -151.20916748]
[12.10256672 -149.78286743]
[-1.27881396 -156.56121826]
[4.99854660 -142.93789673]
[11.27590752 -129.31459045]
[14.43926430 -127.75717926]
[17.00543976 -124.59019470]
[18.22614288 -120.11100006]
[17.51418114 -114.93991089]
[23.17696762 -101.04988098]
[28.83975410 -87.15985870]
[34.50254059 -73.26982880]
[40.16532898 -59.37980270]
[45.82811356 -45.48977661]
[57.79765701 -36.62527847]
[55.84273148 -20.92531395]
[61.50551605 -7.03528738]
[67.16830444 6.85473967]
[72.83109283 20.74476624]
[78.49388123 34.63479233]
[84.15666199 48.52481842]
[90.23049927 62.24008560]
[96.70999146 75.76843262]
[103.18949127 89.29677582]
[109.76951599 102.77651215]
[116.44971466 116.20688629]
[123.12990570 129.63726807]
[129.81010437 143.06764221]
[136.49029541 156.49801636]
[143.17048645 169.92839050]
[149.85067749 183.35876465]
[165.42839050 193.17796326]
[163.65789795 210.63740540]
[170.53730774 223.96684265]
[175.88528442 227.85409546]
[178.13029480 233.07490540]
[177.41642761 237.79713440]
[183.89591980 251.32548523]
[190.37541199 264.85382080]
[203.31481934 273.95779419]
[201.83438110 288.77865601]
[208.31387329 302.30700684]
[214.79336548 315.83535767]
[218.46087646 318.15985107]
[220.94779968 321.22250366]
[222.16706848 324.56149292]
[222.19050598 327.73419189]
[221.22888184 330.36730957]
[226.89167786 344.25735474]
[232.55445862 358.14736938]
[247.17477417 354.66217041]
[262.15579224 353.44970703]
[277.14627075 354.53842163]
[291.79489136 357.90277100]
[305.75820923 363.46386719]
[318.70892334 371.09140015]
[330.34347534 380.60656738]
[340.38909912 391.78625488]
[348.61032104 404.36846924]
[354.81442261 418.05822754]
[358.85598755 432.53463745]
[360.64025879 447.45834351]
[360.12539673 462.47949219]
[357.32351685 477.24600220]
[352.30023193 491.41171265]
[345.17337036 504.64456177]
[336.10995483 516.63433838]
[325.32241821 527.09997559]
[313.06369019 535.79620361]
[299.62112427 542.51910400]
[285.30981445 547.11108398]
[270.46520996 549.46459961]
[255.43534851 549.52435303]
[240.57252502 547.28900146]
[226.22514343 542.81091309]
[212.72952271 536.19512939]
[200.40203857 527.59667969]
[189.53164673 517.21710205]
[180.37316895 505.29980469]
[173.14129639 492.12405396]
[168.00553894 477.99871826]
[165.08631897 463.25497437]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 178]
[8 177]
[9 176]
[10 171]
[11 170]
[12 169]
[14 167]
[15 166]
[16 165]
[17 162]
[18 161]
[21 159]
[22 158]
[23 157]
[24 156]
[25 155]
[26 154]
[27 153]
[29 152]
[30 151]
[31 150]
[36 149]
[37 148]
[38 147]
[39 146]
[40 145]
[41 144]
[43 142]
[44 141]
[45 140]
[46 139]
[47 138]
[48 137]
[49 133]
[50 132]
[51 131]
[52 121]
[53 120]
[54 119]
[55 118]
[56 117]
[57 116]
[61 115]
[62 114]
[63 113]
[64 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
