%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[72.55227661 584.36413574]
[57.75392914 587.05645752]
[42.71266174 587.06292725]
[27.91198921 584.38342285]
[13.82769299 579.10400391]
[0.91252542 571.39434814]
[-10.41834545 561.50238037]
[-19.80067825 549.74603271]
[-26.93287086 536.50323486]
[-31.58565140 522.19970703]
[-33.60945511 507.29519653]
[-32.93922043 492.26889038]
[-29.59649467 477.60375977]
[-23.68873405 463.77124023]
[-15.40584660 451.21603394]
[-5.01409483 440.34167480]
[7.15247011 431.49780273]
[20.70274353 424.96862793]
[35.20114136 420.96411133]
[50.18159866 419.61294556]
[51.51983261 404.67276001]
[52.85806656 389.73257446]
[50.32384872 382.78997803]
[54.32906723 374.58047485]
[55.88959122 359.66186523]
[57.45011139 344.74325562]
[47.32054520 338.05242920]
[40.95929337 327.62808228]
[39.62594986 315.41647339]
[43.63454437 303.72842407]
[52.28240585 294.80187988]
[63.97248840 290.37359619]
[65.97650146 275.50805664]
[58.44602585 259.65692139]
[69.82198334 245.17695618]
[71.60445404 230.28323364]
[73.38691711 215.38952637]
[75.16938782 200.49580383]
[76.95185089 185.60208130]
[78.73431396 170.70837402]
[80.51678467 155.81465149]
[68.77939606 165.15455627]
[53.78171921 164.89041138]
[42.38049316 155.14299011]
[39.78820419 140.36869812]
[47.19001389 127.32211304]
[61.20190811 121.96797943]
[75.41783905 126.75412750]
[83.33887482 139.49420166]
[86.66113281 124.86674500]
[89.98339081 110.23928070]
[86.03180695 96.82747650]
[95.38915253 86.43845367]
[98.71141052 71.81099701]
[102.03366852 57.18353653]
[105.35592651 42.55607605]
[108.67818451 27.92861557]
[112.00045013 13.30115604]
[107.51182556 -1.86996353]
[117.87584686 -12.56745338]
[109.71768188 -25.83704376]
[113.29530334 -40.62404251]
[125.99610138 -48.31983185]
[129.31835938 -62.94729233]
[132.64062500 -77.57475281]
[135.96287537 -92.20220947]
[139.28514099 -106.82967377]
[134.79652405 -122.00079346]
[145.16055298 -132.69828796]
[148.48280334 -147.32574463]
[151.80506897 -161.95320129]
[141.08580017 -151.46046448]
[126.90340424 -146.57583618]
[111.99627686 -148.24243164]
[99.24275208 -156.13847351]
[91.10533142 -168.73936462]
[89.15522766 -183.61206055]
[93.76896667 -197.88488770]
[104.05571747 -208.80197144]
[118.02926636 -214.25540161]
[132.99154663 -213.19221497]
[146.05355835 -205.81767273]
[154.69325256 -193.55570984]
[157.24235535 -178.77264404]
[163.11131287 -192.57681274]
[168.98028564 -206.38099670]
[174.84924316 -220.18516541]
[180.71820068 -233.98934937]
[186.58715820 -247.79351807]
[192.45611572 -261.59768677]
[179.34104919 -268.90707397]
[167.07722473 -277.56909180]
[155.80360413 -287.48562622]
[145.64794922 -298.54431152]
[136.72529602 -310.61984253]
[129.13677979 -323.57540894]
[122.96836853 -337.26419067]
[118.28995514 -351.53109741]
[115.15454865 -366.21447754]
[113.59767151 -381.14791870]
[113.63697815 -396.16226196]
[115.27201080 -411.08737183]
[118.48424530 -425.75411987]
[123.23728943 -439.99633789]
[129.47729492 -453.65264893]
[137.13352966 -466.56829834]
[146.11926270 -478.59695435]
[156.33268738 -489.60232544]
[167.65806580 -499.45971680]
[179.96707153 -508.05740356]
[193.12023926 -515.29803467]
[206.96852112 -521.09948730]
[221.35502625 -525.39605713]
[236.11672974 -528.13909912]
[251.08636475 -529.29748535]
[266.09432983 -528.85815430]
[280.97058105 -526.82598877]
[295.54650879 -523.22406006]
[309.65701294 -518.09320068]
[323.14221191 -511.49151611]
[335.84927368 -503.49383545]
[347.63421631 -494.19076538]
[358.36352539 -483.68771362]
[367.91561890 -472.10369873]
[376.18228149 -459.56997681]
[383.06982422 -446.22854614]
[388.50021362 -432.23059082]
[392.41192627 -417.73471069]
[394.76065063 -402.90515137]
[395.51974487 -387.90994263]
[394.68063354 -372.91903687]
[392.25277710 -358.10223389]
[388.26376343 -343.62741089]
[382.75872803 -329.65866089]
[375.80004883 -316.35415649]
[367.46661377 -303.86474609]
[357.85281372 -292.33187866]
[347.06759644 -281.88623047]
[335.23318481 -272.64620972]
[322.48361206 -264.71646118]
[308.96337891 -258.18685913]
[294.82568359 -253.13139343]
[280.23074341 -249.60733032]
[265.34384155 -247.65460205]
[250.33375549 -247.29534912]
[235.37051392 -248.53363037]
[220.62365723 -251.35542297]
[206.26029968 -255.72874451]
[200.39134216 -241.92456055]
[194.52238464 -228.12037659]
[188.65341187 -214.31620789]
[182.78445435 -200.51202393]
[176.91549683 -186.70785522]
[171.04653931 -172.90367126]
[166.43252563 -158.63093567]
[163.11026001 -144.00347900]
[159.78800964 -129.37602234]
[164.51425171 -115.25115967]
[153.91259766 -103.50741577]
[150.59034729 -88.87995148]
[147.26808167 -74.25249481]
[143.94581604 -59.62503433]
[140.62356567 -44.99757385]
[148.75396729 -32.57049942]
[145.59309387 -17.68884659]
[132.50331116 -9.24519348]
[137.22956848 4.87967205]
[126.62790680 16.62341499]
[123.30564880 31.25087547]
[119.98339081 45.87833405]
[116.66112518 60.50579453]
[113.33886719 75.13325500]
[110.01660919 89.76071930]
[113.96819305 103.17252350]
[104.61084747 113.56154633]
[101.28858948 128.18901062]
[97.96633148 142.81646729]
[95.41049957 157.59712219]
[93.62803650 172.49082947]
[91.84556580 187.38455200]
[90.06310272 202.27827454]
[88.28063202 217.17198181]
[86.49816895 232.06570435]
[84.71570587 246.95942688]
[92.05955505 257.56274414]
[90.26831818 269.93106079]
[80.84203339 277.51208496]
[78.83801270 292.37759399]
[92.31901550 304.50277710]
[95.79238892 322.13842773]
[88.05259705 338.18667603]
[72.36872101 346.30377197]
[70.80819702 361.22238159]
[69.24767303 376.14099121]
[67.79825592 391.07080078]
[66.46002197 406.01098633]
[65.12178802 420.95117188]
[79.62364197 424.94314575]
[93.17955780 431.46060181]
[105.35376740 440.29394531]
[115.75492096 451.15930176]
[124.04866028 463.70736694]
[129.96838379 477.53475952]
[133.32379150 492.19699097]
[134.00701904 507.22271729]
[131.99610901 522.12896729]
[127.35570526 536.43652344]
[120.23497009 549.68548584]
[110.86280823 561.44995117]
[99.54049683 571.35168457]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 197]
[21 196]
[22 195]
[24 194]
[25 193]
[26 192]
[32 188]
[33 187]
[35 184]
[36 183]
[37 182]
[38 181]
[39 180]
[40 179]
[41 178]
[49 177]
[50 176]
[51 175]
[53 173]
[54 172]
[55 171]
[56 170]
[57 169]
[58 168]
[60 166]
[63 163]
[64 162]
[65 161]
[66 160]
[67 159]
[69 157]
[70 156]
[71 155]
[84 154]
[85 153]
[86 152]
[87 151]
[88 150]
[89 149]
[90 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
