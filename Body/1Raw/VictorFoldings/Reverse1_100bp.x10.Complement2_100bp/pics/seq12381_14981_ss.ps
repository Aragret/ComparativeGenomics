%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUGACUAUUAUUUCCACCUACGCUGUUACCUAAAAUGUAUUACCCCCAUACUCAAAAAAAACAAUCCCAAUUGCUCCCACCAUUCCUACCCCCCUUAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[292.94329834 308.02832031]
[282.45581055 297.30392456]
[271.96829224 286.57955933]
[261.48080444 275.85516357]
[250.99330139 265.13079834]
[240.50579834 254.40641785]
[226.07545471 250.71661377]
[221.95867920 235.44039917]
[211.47119141 224.71601868]
[200.98368835 213.99163818]
[190.49618530 203.26725769]
[180.00868225 192.54287720]
[166.63546753 199.23004150]
[151.83004761 201.45930481]
[137.04048157 198.99987793]
[123.71721649 192.08023071]
[113.17085266 181.36683655]
[106.44318390 167.90007019]
[104.20434570 152.99316406]
[106.68601990 138.10411072]
[113.65759277 124.69313049]
[103.17008972 113.96875000]
[89.75897217 110.01482391]
[86.10552979 96.51875305]
[75.61802673 85.79437256]
[65.13052368 75.06999207]
[49.95005417 70.61310577]
[46.58341980 56.10396957]
[36.09592056 45.37958908]
[20.91544724 40.92269897]
[17.54881287 26.41356277]
[7.06131124 15.68918228]
[-3.42618966 4.96480322]
[-14.83127594 14.71638107]
[-26.86223030 23.68440247]
[-39.46531677 31.82881737]
[-52.58424759 39.11324692]
[-66.16043091 45.50515747]
[-80.13323212 50.97599792]
[-94.44023895 55.50134277]
[-109.01756287 59.06097412]
[-123.80008698 61.63899231]
[-138.72180176 63.22388840]
[-153.71604919 63.80857849]
[-168.71585083 63.39045334]
[-183.65425110 61.97138214]
[-198.46449280 59.55770111]
[-213.08044434 56.16019440]
[-227.43684387 51.79402924]
[-241.46954346 46.47871017]
[-255.11587524 40.23797607]
[-268.31491089 33.09969711]
[-281.00765991 25.09576225]
[-293.13748169 16.26191330]
[-304.65017700 6.63760567]
[-315.49429321 -3.73417521]
[-325.62145996 -14.80710602]
[-334.98641968 -26.53173256]
[-343.54736328 -38.85569000]
[-351.26599121 -51.72393036]
[-358.10791016 -65.07898712]
[-364.04251099 -78.86121368]
[-369.04330444 -93.00905609]
[-373.08795166 -107.45931244]
[-376.15841675 -122.14746094]
[-378.24093628 -137.00788879]
[-379.32623291 -151.97422791]
[-379.40948486 -166.97964478]
[-378.49026489 -181.95710754]
[-376.57272339 -196.83972168]
[-373.66543579 -211.56101990]
[-369.78131104 -226.05526733]
[-364.93777466 -240.25770569]
[-359.15643311 -254.10491943]
[-352.46313477 -267.53506470]
[-344.88769531 -280.48812866]
[-336.46401978 -292.90631104]
[-327.22970581 -304.73410034]
[-317.22601318 -315.91870117]
[-306.49758911 -326.41015625]
[-295.09240723 -336.16159058]
[-283.06134033 -345.12945557]
[-270.45812988 -353.27371216]
[-257.33911133 -360.55798340]
[-243.76284790 -366.94970703]
[-229.78997803 -372.42037964]
[-215.48291016 -376.94555664]
[-200.90554810 -380.50500488]
[-186.12298584 -383.08282471]
[-171.20126343 -384.66754150]
[-156.20701599 -385.25204468]
[-141.20719910 -384.83374023]
[-126.26882935 -383.41445923]
[-111.45861053 -381.00061035]
[-96.84269714 -377.60290527]
[-82.48636627 -373.23657227]
[-68.45373535 -367.92108154]
[-54.80747604 -361.68017578]
[-41.60853958 -354.54171753]
[-28.91587639 -346.53762817]
[-16.78617287 -337.70361328]
[-5.27360678 -328.07916260]
[5.57040548 -317.70724487]
[15.69743156 -306.63418579]
[25.06224060 -294.90945435]
[33.62300491 -282.58538818]
[41.34149551 -269.71704102]
[48.18323517 -256.36190796]
[54.11766434 -242.57960510]
[59.11828613 -228.43170166]
[63.16275787 -213.98139954]
[66.23301697 -199.29321289]
[68.31536102 -184.43275452]
[69.40047455 -169.46640015]
[69.48352814 -154.46098328]
[68.56413269 -139.48353577]
[66.64640808 -124.60094452]
[63.73890686 -109.87967682]
[59.85462952 -95.38548279]
[55.01091385 -81.18309784]
[49.22939682 -67.33596039]
[42.53590012 -53.90590286]
[34.96031952 -40.95291519]
[26.53648949 -28.53485298]
[17.30203247 -16.70717049]
[7.29819012 -5.52269793]
[17.78569031 5.20168161]
[28.27319145 15.92606163]
[42.70352554 19.61587143]
[46.82029724 34.89208603]
[57.30780029 45.61646652]
[71.73813629 49.30627823]
[75.85490417 64.58248901]
[86.34240723 75.30686951]
[96.82991028 86.03125000]
[110.24102783 89.98517609]
[113.89447021 103.48124695]
[124.38197327 114.20562744]
[137.94529724 107.53528595]
[152.88606262 105.38672638]
[167.73925781 107.95790863]
[181.05241394 114.98462677]
[191.52761841 125.76761627]
[198.14801025 139.24208069]
[200.27653503 154.08288574]
[197.71720886 168.83483887]
[190.73306274 182.05537415]
[201.22056580 192.77975464]
[211.70806885 203.50413513]
[222.19557190 214.22851562]
[232.68305969 224.95289612]
[247.86354065 229.40977478]
[251.23017883 243.91891479]
[261.71768188 254.64329529]
[272.20516968 265.36767578]
[282.69268799 276.09207153]
[293.18017578 286.81643677]
[303.66766357 297.54080200]
[315.53018188 288.33328247]
[328.36495972 280.53799438]
[342.00466919 274.25662231]
[356.27154541 269.57104492]
[370.97952271 266.54232788]
[385.93685913 265.20996094]
[400.94860840 265.59133911]
[415.81903076 267.68148804]
[430.35424805 271.45312500]
[444.36474609 276.85708618]
[457.66793823 283.82296753]
[470.09033203 292.25988770]
[481.47000122 302.05792236]
[491.65856934 313.08926392]
[500.52322388 325.21014404]
[507.94836426 338.26254272]
[513.83728027 352.07626343]
[518.11303711 366.47122192]
[520.72009277 381.25976562]
[521.62426758 396.24911499]
[520.81390381 411.24380493]
[518.29949951 426.04840088]
[514.11383057 440.46984863]
[508.31155396 454.32015991]
[500.96823120 467.41876221]
[492.17959595 479.59487915]
[482.06027222 490.68975830]
[470.74215698 500.55880737]
[458.37280273 509.07333374]
[445.11349487 516.12231445]
[431.13705444 521.61389160]
[416.62573242 525.47637939]
[401.76867676 527.65954590]
[386.75961304 528.13488770]
[371.79421997 526.89617920]
[357.06756592 523.95953369]
[342.77166748 519.36334229]
[329.09292603 513.16748047]
[316.20959473 505.45266724]
[304.28970337 496.31954956]
[293.48864746 485.88717651]
[283.94720459 474.29153442]
[275.78976440 461.68383789]
[269.12274170 448.22839355]
[264.03298950 434.10070801]
[260.58688354 419.48489380]
[258.82934570 404.57150269]
[258.78329468 389.55499268]
[260.44934082 374.63110352]
[263.80575562 359.99444580]
[268.80877686 345.83578491]
[275.39318848 332.33972168]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 158]
[2 157]
[3 156]
[4 155]
[5 154]
[6 153]
[8 151]
[9 150]
[10 149]
[11 148]
[12 147]
[21 138]
[22 137]
[24 135]
[25 134]
[26 133]
[28 131]
[29 130]
[31 128]
[32 127]
[33 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
