%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[5.51457834 564.11480713]
[4.64797783 579.11834717]
[1.55479276 593.82513428]
[-3.69587374 607.90661621]
[-10.98672009 621.04821777]
[-20.15486526 632.95629883]
[-30.99549103 643.36486816]
[-43.26641083 652.04138184]
[-56.69349289 658.79205322]
[-70.97676849 663.46600342]
[-85.79714203 665.95880127]
[-100.82351685 666.21484375]
[-115.72021484 664.22833252]
[-130.15441895 660.04370117]
[-143.80368042 653.75439453]
[-156.36305237 645.50091553]
[-167.55197144 635.46765137]
[-177.12045288 623.87878418]
[-184.85475159 610.99322510]
[-190.58207703 597.09875488]
[-194.17446899 582.50585938]
[-195.55168152 567.54058838]
[-194.68295288 552.53710938]
[-191.58766174 537.83074951]
[-186.33499146 523.75006104]
[-179.04228210 510.60949707]
[-169.87243652 498.70269775]
[-159.03033447 488.29568481]
[-146.75816345 479.62088013]
[-133.33012390 472.87216187]
[-119.04618835 468.20025635]
[-104.22546387 465.70953369]
[-89.19904327 465.45565796]
[-74.30263519 467.44427490]
[-59.86902237 471.63098145]
[-53.59166336 458.00765991]
[-47.31430054 444.38436890]
[-49.01523590 429.58718872]
[-36.21281433 420.29156494]
[-29.93545151 406.66824341]
[-33.82881546 395.21539307]
[-28.71053886 383.81420898]
[-16.82687569 378.80007935]
[-10.34737968 365.27172852]
[-3.86788392 351.74340820]
[2.61161184 338.21505737]
[9.09110737 324.68670654]
[15.57060337 311.15835571]
[21.74637222 297.48867798]
[27.61533356 283.68450928]
[33.48429489 269.88034058]
[39.35325623 256.07617188]
[45.22221375 242.27198792]
[35.44125366 227.56808472]
[36.45370102 209.77972412]
[48.04263687 196.04014587]
[65.71213531 191.97239685]
[71.16748810 177.99958801]
[76.62284851 164.02679443]
[81.02384186 149.68695068]
[84.34610748 135.05949402]
[87.66836548 120.43202972]
[90.99062347 105.80457306]
[92.21759796 90.85483551]
[91.32478333 75.88143158]
[90.43196869 60.90802383]
[89.53915405 45.93461990]
[74.67761993 38.68709183]
[65.55121613 25.01213646]
[64.57210541 8.69471550]
[71.91300201 -5.80587339]
[85.48581696 -14.57464409]
[84.37016296 -29.53309631]
[83.25451660 -44.49155045]
[82.13887024 -59.45000458]
[81.02321625 -74.40845490]
[79.90756989 -89.36691284]
[76.50688934 -95.03673553]
[76.48356628 -100.71973419]
[78.98816681 -104.78617859]
[78.31838226 -119.77121735]
[77.42556763 -134.74462891]
[68.68328857 -147.93110657]
[75.45254517 -161.19859314]
[74.33689880 -176.15704346]
[73.22125244 -191.11549377]
[72.10559845 -206.07395935]
[70.98995209 -221.03240967]
[62.24767303 -234.21888733]
[69.01692963 -247.48637390]
[67.90128326 -262.44482422]
[66.78563690 -277.40328979]
[51.98395538 -280.37191772]
[38.53261185 -287.22494507]
[27.42978477 -297.45382690]
[19.49938202 -310.29949951]
[15.32988644 -324.80871582]
[15.23070526 -339.90484619]
[19.20919800 -354.46762085]
[26.97013474 -367.41638184]
[37.93759918 -377.79025269]
[51.29773712 -384.81942749]
[66.05913544 -387.98229980]
[81.12639618 -387.04412842]
[95.38143921 -382.07458496]
[107.76643372 -373.44241333]
[117.36234283 -361.78817749]
[123.45707703 -347.97671509]
[125.59836578 -333.03289795]
[123.62731934 -318.06567383]
[117.69019318 -304.18572998]
[108.22756958 -292.42300415]
[95.94163513 -283.65042114]
[81.74408722 -278.51892090]
[82.85973358 -263.56048584]
[83.97538757 -248.60202026]
[92.63786316 -236.48547363]
[85.94840240 -222.14805603]
[87.06405640 -207.18960571]
[88.17970276 -192.23115540]
[89.29534912 -177.27268982]
[90.41100311 -162.31423950]
[99.07347870 -150.19769287]
[92.38401794 -135.86027527]
[95.35410309 -132.12026978]
[96.00625610 -126.47476196]
[93.30342102 -120.44100189]
[93.97320557 -105.45596313]
[94.86602020 -90.48255920]
[95.98167419 -75.52410889]
[97.09732056 -60.56565094]
[98.21296692 -45.60720062]
[99.32862091 -30.64874649]
[100.44426727 -15.69029236]
[113.11095428 -10.58420563]
[122.38642883 -0.47014347]
[126.41854858 12.71663666]
[124.36590576 26.41937065]
[116.57270050 37.95549393]
[104.51255798 45.04180145]
[105.40537262 60.01520920]
[106.29818726 74.98861694]
[107.19100189 89.96202087]
[113.29577637 76.26049805]
[123.12263489 64.92767334]
[135.82147217 56.94396591]
[150.29370117 53.00003433]
[165.28732300 53.43707275]
[179.50526428 58.21727371]
[191.71751404 66.92710114]
[200.86758423 78.81306458]
[206.16390991 92.84690857]
[207.14831543 107.81457520]
[203.73562622 122.42120361]
[196.22108459 135.40316772]
[185.25476074 145.63742065]
[171.78535461 152.23857117]
[156.97811890 154.63555908]
[142.11399841 152.62104797]
[128.47892761 146.36927795]
[117.25244904 136.42109680]
[109.40576935 123.63713837]
[105.61808777 109.12683105]
[102.29582214 123.75428772]
[98.97356415 138.38174438]
[95.65130615 153.00921631]
[106.96338654 143.15847778]
[121.66603088 140.18659973]
[135.91601562 144.87039185]
[145.98841858 155.98554993]
[149.25035095 170.62658691]
[144.84913635 184.96636963]
[133.93524170 195.25650024]
[119.36154938 198.80718994]
[104.93756866 194.69029236]
[94.43370819 183.98193359]
[90.59564209 169.48214722]
[85.14028931 183.45495605]
[79.68492889 197.42774963]
[87.76163483 206.96896362]
[90.99656677 218.96911621]
[88.83507538 231.13494873]
[81.74777222 241.16844177]
[71.12976837 247.20092773]
[59.02639389 248.14094543]
[53.15743256 261.94512939]
[47.28847122 275.74929810]
[41.41950989 289.55346680]
[35.55054855 303.35763550]
[36.18544388 308.53875732]
[34.89818573 312.99929810]
[32.28514099 316.12771606]
[29.09894943 317.63784790]
[22.61945343 331.16619873]
[16.13995743 344.69454956]
[9.66046143 358.22290039]
[3.18096566 371.75125122]
[-3.29853010 385.27957153]
[-1.45769322 403.60150146]
[-16.31213570 412.94561768]
[-22.58949661 426.56893921]
[-21.33756065 442.34054565]
[-33.69098663 450.66171265]
[-39.96834564 464.28503418]
[-46.24570847 477.90835571]
[-33.68515778 486.16003418]
[-22.49481201 496.19168091]
[-12.92467403 507.77917480]
[-5.18853998 520.66363525]
[0.54076105 534.55725098]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 205]
[36 204]
[37 203]
[39 201]
[40 200]
[43 198]
[44 197]
[45 196]
[46 195]
[47 194]
[48 193]
[49 189]
[50 188]
[51 187]
[52 186]
[53 185]
[57 179]
[58 178]
[59 177]
[60 166]
[61 165]
[62 164]
[63 163]
[64 143]
[65 142]
[66 141]
[67 140]
[72 134]
[73 133]
[74 132]
[75 131]
[76 130]
[77 129]
[80 128]
[81 127]
[82 124]
[84 122]
[85 121]
[86 120]
[87 119]
[88 118]
[90 116]
[91 115]
[92 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
