%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[101.69274902 634.34356689]
[92.19715881 622.50305176]
[87.62381744 608.03070068]
[88.59121704 592.88378906]
[94.96852875 579.11083984]
[105.89328003 568.57452393]
[119.88798523 562.69976807]
[111.77517700 550.20849609]
[119.09815979 536.18408203]
[118.65155792 521.19073486]
[118.20494843 506.19735718]
[117.75834656 491.20401001]
[117.31173706 476.21066284]
[116.86513519 461.21731567]
[116.19535065 446.23226929]
[107.71422577 433.98809814]
[114.61640930 419.75186157]
[113.72359467 404.77844238]
[112.83077240 389.80505371]
[103.99444580 381.54394531]
[103.12808228 369.07666016]
[111.24023438 359.04891968]
[110.57044983 344.06387329]
[109.90066528 329.07882690]
[109.23087311 314.09378052]
[108.56108856 299.10876465]
[99.84873199 290.71701050]
[99.16808319 278.23822021]
[107.42863464 268.33233643]
[106.98203278 253.33898926]
[105.97777557 238.37265015]
[104.41725159 223.45404053]
[102.85672760 208.53544617]
[101.29620361 193.61683655]
[99.73567963 178.69822693]
[90.53928375 170.83993530]
[89.11708832 158.42376709]
[96.77339172 148.04379272]
[95.43515778 133.10360718]
[94.09692383 118.16342163]
[83.04565430 108.79241180]
[81.75296783 94.36067200]
[90.96289062 83.17481232]
[89.62465668 68.23462677]
[88.28642273 53.29444122]
[86.94818878 38.35425568]
[85.38766479 23.43565178]
[83.60520172 8.54193401]
[81.82273865 -6.35178328]
[80.04026794 -21.24550056]
[77.31564331 -24.62638092]
[75.94629669 -28.32630348]
[75.86611938 -31.88003159]
[76.86467743 -34.89159012]
[78.62234497 -37.07533646]
[77.72953033 -52.04874039]
[76.83671570 -67.02214813]
[75.94390106 -81.99555206]
[72.62800598 -87.71537781]
[72.68930054 -93.39809418]
[75.25417328 -97.42680359]
[74.80756378 -112.42015076]
[74.36096191 -127.41349792]
[73.91435242 -142.40684509]
[73.46775055 -157.40020752]
[62.66631699 -165.44654846]
[58.53164291 -178.06062317]
[62.36027908 -190.56756592]
[72.54020691 -198.46684265]
[72.31687927 -213.46517944]
[70.75635529 -228.38378906]
[67.87107849 -243.10368347]
[63.14941788 -250.92312622]
[65.05414581 -258.06411743]
[62.38834763 -272.82534790]
[59.72255325 -287.58654785]
[56.94694138 -302.32751465]
[54.06166840 -317.04742432]
[51.17639542 -331.76730347]
[48.29112244 -346.48718262]
[45.40585327 -361.20709229]
[42.52058029 -375.92697144]
[39.63530731 -390.64688110]
[36.75003433 -405.36676025]
[33.86476135 -420.08663940]
[30.97948837 -434.80654907]
[15.92101574 -435.38885498]
[1.40290153 -439.42880249]
[-11.79191017 -446.70849609]
[-22.95183945 -456.83532715]
[-31.47504425 -469.26318359]
[-36.90188217 -483.32183838]
[-38.93968582 -498.25314331]
[-37.47856522 -513.25189209]
[-32.59730911 -527.50915527]
[-24.55916595 -540.25610352]
[-13.79761696 -550.80529785]
[-0.89301986 -558.58789062]
[13.45869541 -563.18408203]
[28.48356056 -564.34600830]
[43.37130356 -562.01110840]
[57.31904221 -556.30523682]
[69.57460022 -547.53607178]
[79.47704315 -536.17657471]
[86.49235535 -522.83929443]
[90.24219513 -508.24359131]
[90.52435303 -493.17648315]
[87.32360077 -478.45059204]
[80.81256104 -464.86004639]
[71.34236145 -453.13775635]
[59.42371368 -443.91592407]
[45.69937897 -437.69180298]
[48.58465195 -422.97192383]
[51.46992493 -408.25204468]
[54.35519791 -393.53213501]
[57.24047089 -378.81225586]
[60.12574387 -364.09234619]
[63.01101685 -349.37246704]
[65.89628601 -334.65258789]
[68.78156281 -319.93267822]
[71.66683197 -305.21279907]
[76.03823853 -299.25354004]
[74.48377228 -290.25234985]
[77.14956665 -275.49111938]
[79.81536102 -260.72991943]
[82.59097290 -245.98895264]
[85.47624207 -231.26905823]
[91.02867126 -245.20356750]
[102.01846313 -255.41261292]
[116.32365417 -259.92498779]
[131.18214417 -257.86941528]
[143.72497559 -249.64280701]
[151.53034973 -236.83357239]
[153.09115601 -221.91499329]
[148.10601807 -207.76762390]
[137.53750610 -197.12306213]
[123.42622375 -192.03663635]
[108.49684143 -193.49044800]
[95.63199615 -201.20378113]
[87.31521606 -213.68850708]
[87.53854370 -198.69017029]
[100.09574890 -187.50289917]
[100.68817139 -170.35751343]
[88.46109772 -157.84680176]
[88.90769958 -142.85345459]
[89.35430908 -127.86010742]
[89.80091858 -112.86676025]
[90.24752045 -97.87340546]
[90.91730499 -82.88836670]
[91.81011963 -67.91496277]
[92.70293427 -52.94155884]
[93.59575653 -37.96815109]
[94.93399048 -23.02796555]
[96.71645355 -8.13424873]
[98.49891663 6.75946856]
[100.28138733 21.65318489]
[103.41550446 25.25684357]
[104.31909943 30.86759758]
[101.88837433 37.01602173]
[103.22660828 51.95620728]
[104.56484222 66.89639282]
[105.90307617 81.83657837]
[116.95434570 91.20758820]
[118.24703217 105.63932800]
[109.03710938 116.82518768]
[110.37534332 131.76538086]
[111.71357727 146.70555115]
[122.65336609 161.51779175]
[114.65428162 177.13771057]
[116.21480560 192.05630493]
[117.77532959 206.97491455]
[119.33585358 221.89352417]
[120.89637756 236.81213379]
[132.22576904 226.98132324]
[147.00259399 229.55926514]
[154.33389282 242.64558411]
[148.81533813 256.59353638]
[134.51498413 261.12121582]
[121.97537994 252.89239502]
[122.42198944 267.88574219]
[132.46073914 283.32287598]
[123.54612732 298.43896484]
[124.21591187 313.42401123]
[124.88570404 328.40905762]
[125.55548859 343.39407349]
[126.22527313 358.37911987]
[136.49275208 373.66506958]
[127.80418396 388.91223145]
[128.69699097 403.88562012]
[129.58981323 418.85903931]
[138.13479614 432.17422485]
[131.16874695 445.33944702]
[134.48464966 451.05926514]
[134.42335510 456.74200439]
[131.85848999 460.77069092]
[132.30508423 475.76403809]
[132.75169373 490.75738525]
[133.19830322 505.75076294]
[133.64491272 520.74407959]
[134.09150696 535.73742676]
[142.23626709 549.30114746]
[134.88133240 562.25311279]
[149.20089722 567.28448486]
[160.73341370 577.15191650]
[167.91920471 590.52081299]
[169.78645325 605.58331299]
[166.08261108 620.30218506]
[157.30862427 632.68695068]
[144.65109253 641.06256104]
[129.82182312 644.29632568]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 202]
[9 200]
[10 199]
[11 198]
[12 197]
[13 196]
[14 195]
[15 192]
[17 190]
[18 189]
[19 188]
[22 186]
[23 185]
[24 184]
[25 183]
[26 182]
[29 180]
[30 179]
[31 173]
[32 172]
[33 171]
[34 170]
[35 169]
[38 167]
[39 166]
[40 165]
[43 162]
[44 161]
[45 160]
[46 159]
[47 156]
[48 155]
[49 154]
[50 153]
[55 152]
[56 151]
[57 150]
[58 149]
[61 148]
[62 147]
[63 146]
[64 145]
[65 144]
[69 141]
[70 140]
[71 127]
[72 126]
[74 125]
[75 124]
[76 123]
[77 121]
[78 120]
[79 119]
[80 118]
[81 117]
[82 116]
[83 115]
[84 114]
[85 113]
[86 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
