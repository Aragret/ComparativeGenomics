%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[161.55955505 748.41076660]
[148.72082520 740.64355469]
[136.41760254 732.05328369]
[124.70253754 722.67675781]
[113.62581635 712.55407715]
[103.23486328 701.72863770]
[93.57418823 690.24676514]
[84.68515015 678.15759277]
[76.60581207 665.51300049]
[69.37077332 652.36700439]
[63.01101303 638.77600098]
[57.55377197 624.79815674]
[53.02241516 610.49328613]
[49.43634796 595.92266846]
[46.81092072 581.14874268]
[45.15738678 566.23474121]
[44.48281479 551.24450684]
[44.79010391 536.24218750]
[46.07793045 521.29217529]
[48.34078217 506.45837402]
[51.56897354 491.80432129]
[55.74867249 477.39279175]
[60.86198807 463.28549194]
[66.88702393 449.54278564]
[73.79797363 436.22360229]
[81.56524658 423.38491821]
[90.15557861 411.08172607]
[99.53219604 399.36672974]
[109.65493011 388.29006958]
[120.48044586 377.89916992]
[131.96238708 368.23858643]
[144.05157471 359.34960938]
[156.69624329 351.27035522]
[169.84225464 344.03536987]
[183.43331909 337.67568970]
[177.97795105 323.70291138]
[172.52259827 309.73010254]
[167.06724548 295.75732422]
[161.70634460 290.66979980]
[161.63638306 281.53564453]
[156.38966370 267.48318481]
[151.14294434 253.43070984]
[145.89622498 239.37823486]
[140.64950562 225.32575989]
[126.53119659 214.90270996]
[129.72966003 196.76844788]
[124.27429962 182.79565430]
[118.81893921 168.82284546]
[106.98270416 159.78112793]
[109.17115784 144.11201477]
[103.71580505 130.13922119]
[98.26044464 116.16641998]
[84.89817810 106.02610016]
[87.60864258 89.47225952]
[81.94585419 75.58223724]
[70.50746918 74.82220459]
[60.22517776 69.87094116]
[52.56782913 61.47826385]
[48.61339569 50.88245392]
[48.89729691 39.62766647]
[53.34023666 29.33891678]
[61.26519775 21.48744202]
[56.22828293 7.35841179]
[51.19136810 -6.77061796]
[46.15444946 -20.89964676]
[41.11753464 -35.02867508]
[36.08061981 -49.15770721]
[30.93865967 -63.24884796]
[25.69194031 -77.30131531]
[20.44522285 -91.35379028]
[18.62915230 -76.46413422]
[12.55981922 -62.74687195]
[2.76228380 -51.38869095]
[-9.91587067 -43.37218475]
[-24.37785721 -39.39085770]
[-39.37257004 -39.78913879]
[-53.60281372 -44.53257370]
[-65.83753204 -53.21080399]
[-75.01829529 -65.07307434]
[-80.35088348 -79.09318542]
[-81.37397003 -94.05825806]
[-77.99904633 -108.67365265]
[-70.51808167 -121.67500305]
[-59.57824707 -131.93756104]
[-46.12595367 -138.57350159]
[-31.32495689 -141.00877380]
[-16.45569229 -139.03266907]
[-2.80449939 -132.81617737]
[8.44765759 -122.89704895]
[16.32596588 -110.13665009]
[15.21031761 -125.09510040]
[14.09466934 -140.05355835]
[10.33565426 -148.37867737]
[13.07545662 -155.24273682]
[12.18264103 -170.21614075]
[11.28982449 -185.18954468]
[-3.08675718 -190.12739563]
[-14.47604465 -200.19479370]
[-21.14125443 -213.85653687]
[-22.06599045 -229.02932739]
[-17.10923767 -243.39939880]
[-7.02686262 -254.77543640]
[6.64364386 -261.42266846]
[21.81762886 -262.32742310]
[36.18117142 -257.35177612]
[47.54393005 -247.25445557]
[54.17317581 -233.57521057]
[55.05799103 -218.40005493]
[50.06344604 -204.04307556]
[39.95117950 -192.69360352]
[26.26323128 -186.08235168]
[27.15604591 -171.10894775]
[28.04886246 -156.13554382]
[29.05312347 -141.16920471]
[30.16877174 -126.21074677]
[31.28442001 -111.25229645]
[34.49769211 -96.60050964]
[39.74441147 -82.54803467]
[44.99113083 -68.49556732]
[50.27568054 -63.32881546]
[50.20964813 -54.19462204]
[55.24656296 -40.06559372]
[60.28348160 -25.93656349]
[65.32039642 -11.80753422]
[70.35731506 2.32149553]
[75.39422607 16.45052528]
[93.60011292 20.67412376]
[105.67826843 35.13257980]
[106.60916901 54.09946823]
[95.83587646 69.91944885]
[101.49866486 83.80947876]
[111.94190216 88.96505737]
[116.25827789 99.78218079]
[112.23324585 110.71105957]
[117.68859863 124.68386078]
[123.14395905 138.65666199]
[135.37039185 148.69779968]
[132.79173279 163.36749268]
[138.24710083 177.34028625]
[143.70245361 191.31309509]
[155.18026733 197.19718933]
[159.43638611 208.94746399]
[154.70198059 220.07904053]
[159.94869995 234.13151550]
[165.19541931 248.18399048]
[170.44213867 262.23645020]
[175.68885803 276.28894043]
[181.04003906 290.30194092]
[186.49539185 304.27474976]
[191.95075989 318.24755859]
[197.40611267 332.22033691]
[211.71089172 327.68875122]
[226.28143311 324.10241699]
[241.05532837 321.47671509]
[255.96931458 319.82293701]
[270.95953369 319.14810181]
[285.96182251 319.45510864]
[300.91186523 320.74267578]
[315.74572754 323.00524902]
[330.39981079 326.23318481]
[344.81143188 330.41262817]
[358.91882324 335.52569580]
[372.66162109 341.55050659]
[385.98092651 348.46121216]
[398.81976318 356.22824097]
[411.12310791 364.81835938]
[422.83825684 374.19479370]
[433.91510010 384.31732178]
[444.30618286 395.14263916]
[453.96701050 406.62442017]
[462.85617065 418.71343994]
[470.93566895 431.35797119]
[478.17086792 444.50387573]
[484.53076172 458.09481812]
[489.98818970 472.07260132]
[494.51971436 486.37741089]
[498.10595703 500.94796753]
[500.73153687 515.72186279]
[502.38525391 530.63586426]
[503.05999756 545.62609863]
[502.75289917 560.62835693]
[501.46524048 575.57843018]
[499.20257568 590.41229248]
[495.97454834 605.06634521]
[491.79501343 619.47796631]
[486.68188477 633.58532715]
[480.65701294 647.32806396]
[473.74621582 660.64733887]
[465.97909546 673.48608398]
[457.38888550 685.78942871]
[448.01242065 697.50451660]
[437.88980103 708.58129883]
[427.06442261 718.97229004]
[415.58261108 728.63305664]
[403.49349976 737.52215576]
[390.84893799 745.60156250]
[377.70300293 752.83666992]
[364.11203003 759.19653320]
[350.13418579 764.65386963]
[335.82934570 769.18530273]
[321.25878906 772.77142334]
[306.48486328 775.39697266]
[291.57083130 777.05059814]
[276.58059692 777.72521973]
[261.57833862 777.41802979]
[246.62829590 776.13031006]
[231.79447937 773.86755371]
[217.14041138 770.63946533]
[202.72885132 766.45983887]
[188.62150574 761.34661865]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 151]
[36 150]
[37 149]
[38 148]
[40 147]
[41 146]
[42 145]
[43 144]
[44 143]
[46 140]
[47 139]
[48 138]
[50 136]
[51 135]
[52 134]
[54 131]
[55 130]
[62 126]
[63 125]
[64 124]
[65 123]
[66 122]
[67 121]
[68 119]
[69 118]
[70 117]
[90 116]
[91 115]
[92 114]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
