%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUAGGAAAUUUUCAACUCUUUCGGUACAACAAUCUGUACCCCCGUACUCAAUCGUCAAGAACACUCGAAAGAGCCAUUUAUUCCCCAGCAUUCGGAGAxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[20.32973862 548.00115967]
[27.42445374 561.30963135]
[30.98579025 575.96459961]
[30.78987885 591.04479980]
[26.84903336 605.60229492]
[19.41098022 618.72198486]
[8.94328022 629.57916260]
[-3.89605761 637.49127197]
[-18.29994202 641.96105957]
[-33.36293030 642.70751953]
[-48.13815308 639.68365479]
[-61.69682693 633.07965088]
[-73.18664551 623.31054688]
[-81.88533783 610.99053955]
[-87.24610901 596.89398193]
[-88.93197632 581.90698242]
[-86.83695221 566.97174072]
[-81.09274292 553.02703857]
[-72.06043243 540.94946289]
[-60.30780029 531.49822998]
[-46.57361984 525.26739502]
[-31.72124100 522.64868164]
[-16.68429375 523.80670166]
[-11.85829544 509.60424805]
[-7.03229809 495.40176392]
[-10.26342297 480.86187744]
[1.50246084 470.28479004]
[6.32845831 456.08233643]
[11.15445614 441.87988281]
[3.08300257 427.12554932]
[8.28230190 410.77676392]
[24.00044441 403.09826660]
[28.61445236 388.82553101]
[33.01544952 374.48568726]
[37.20246124 360.08190918]
[41.38947296 345.67813110]
[45.57648468 331.27435303]
[49.76349640 316.87057495]
[53.95050812 302.46679688]
[52.79903030 295.16638184]
[58.30856705 287.88058472]
[62.70956421 273.54074097]
[67.11056519 259.20089722]
[71.08265686 244.73637390]
[74.62232971 230.15998840]
[78.16200256 215.58361816]
[81.70167542 201.00724792]
[84.36746979 186.24601746]
[86.14994049 171.35231018]
[87.93240356 156.45858765]
[89.38182068 141.52877808]
[90.49746704 126.57032776]
[91.61312103 111.61187744]
[85.71572876 98.93463135]
[93.42842865 87.27247620]
[94.54407501 72.31402588]
[95.65972900 57.35557175]
[96.77537537 42.39711761]
[97.89102173 27.43866348]
[99.00666809 12.48021030]
[99.67645264 -2.50482845]
[90.33701324 -18.37481117]
[99.91770935 -33.07777786]
[99.91770935 -48.07777786]
[99.91770935 -63.07777786]
[99.91770935 -78.07778168]
[99.91770935 -93.07778168]
[92.18040466 -106.87795258]
[99.91770935 -119.60522461]
[99.91770935 -134.60522461]
[99.91770935 -149.60522461]
[99.91770935 -164.60522461]
[92.06536865 -151.82473755]
[79.73986816 -143.27593994]
[65.01824951 -140.39945984]
[50.38138580 -143.68002319]
[38.29583359 -152.56481934]
[30.79822350 -165.55657959]
[29.15203285 -180.46597290]
[33.63467789 -194.78050232]
[43.49074936 -206.08793640]
[57.05932999 -212.48274231]
[72.05387115 -212.88731384]
[85.94753265 -207.23344421]
[96.39899445 -196.47393799]
[101.64723206 -182.42030334]
[104.53250885 -197.14019775]
[107.30812073 -211.88116455]
[109.97391510 -226.64237976]
[104.81234741 -241.59793091]
[114.68836212 -252.74752808]
[109.52679443 -267.70309448]
[119.40281677 -278.85269165]
[122.06861115 -293.61392212]
[120.51414490 -302.61511230]
[124.88554382 -308.57434082]
[127.77082062 -323.29425049]
[130.65609741 -338.01412964]
[116.84281158 -344.01473999]
[104.64270782 -352.84487915]
[94.62638855 -364.09155273]
[87.26233673 -377.22869873]
[82.89498901 -391.64190674]
[81.72861481 -406.65701294]
[83.81775665 -421.57177734]
[89.06471252 -435.68853760]
[97.22406769 -448.34710693]
[107.91419220 -458.95535278]
[120.63510132 -467.01718140]
[134.79179382 -472.15545654]
[149.72215271 -474.12988281]
[164.72785950 -472.84811401]
[179.10707092 -468.37008667]
[192.18722534 -460.90527344]
[203.35655212 -450.80279541]
[212.09265137 -438.53515625]
[217.98690796 -424.67614746]
[220.76364136 -409.87399292]
[220.29296875 -394.82101440]
[216.59692383 -380.22125244]
[209.84835815 -366.75753784]
[200.36293030 -355.05966187]
[188.58427429 -345.67471313]
[175.06332397 -339.04162598]
[160.43244934 -335.47067261]
[145.37597656 -335.12884521]
[142.49070740 -320.40896606]
[139.60543823 -305.68908691]
[136.82983398 -290.94812012]
[134.16403198 -276.18688965]
[139.51628113 -262.28717041]
[129.44958496 -250.08174133]
[134.80181885 -236.18199158]
[124.73513031 -223.97657776]
[122.06933594 -209.21536255]
[123.97406006 -202.07437134]
[119.25240326 -194.25492859]
[116.36712646 -179.53503418]
[114.91770935 -164.60522461]
[114.91770935 -149.60522461]
[114.91770935 -134.60522461]
[114.91770935 -119.60522461]
[122.65500641 -106.87795258]
[114.91770935 -93.07778168]
[114.91770935 -78.07778168]
[114.91770935 -63.07777786]
[114.91770935 -48.07777786]
[114.91770935 -33.07777786]
[123.24666595 -24.30537605]
[123.36942291 -11.80862904]
[114.67479706 -2.28150082]
[116.52822113 -0.17841695]
[117.66025543 2.78554988]
[117.73883820 6.33931255]
[116.53607178 10.09668922]
[113.96512604 13.59585857]
[112.84947968 28.55431175]
[111.73382568 43.51276398]
[110.61817932 58.47121811]
[109.50253296 73.42967224]
[108.38687897 88.38812256]
[114.28427124 101.06536865]
[106.57157135 112.72752380]
[105.45592499 127.68597412]
[104.34027100 142.64442444]
[106.60834503 147.34580994]
[106.82463074 151.98332214]
[105.35704041 155.78610229]
[102.82611847 158.24105835]
[101.04365540 173.13476562]
[99.26118469 188.02848816]
[110.40796661 177.99108887]
[125.31323242 176.30792236]
[138.41769409 183.60676575]
[144.83370972 197.16532898]
[142.16825867 211.92660522]
[131.41549683 222.38500977]
[116.58593750 224.63981628]
[103.21063995 217.85002136]
[96.27805328 204.54692078]
[92.73838043 219.12329102]
[89.19870758 233.69966125]
[85.65903473 248.27604675]
[87.02898407 252.39637756]
[87.01766205 256.34155273]
[85.84974670 259.69885254]
[83.86087799 262.17089844]
[81.45040894 263.60189819]
[77.04940796 277.94174194]
[72.64841461 292.28158569]
[68.35428619 306.65380859]
[64.16727448 321.05758667]
[59.98026657 335.46136475]
[55.79325485 349.86514282]
[51.60624313 364.26892090]
[47.41923141 378.67269897]
[48.62190247 385.17385864]
[46.65594482 390.50604248]
[42.88718796 393.43954468]
[38.27317810 407.71228027]
[45.74551010 418.91848755]
[45.40436554 432.18853760]
[37.59827423 442.68362427]
[25.35691261 446.70587158]
[20.53091431 460.90832520]
[15.70491695 475.11077881]
[18.59085464 490.66656494]
[7.17015743 500.22778320]
[2.34415984 514.43023682]
[-2.48183775 528.63269043]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 210]
[24 209]
[25 208]
[27 206]
[28 205]
[29 204]
[32 200]
[33 199]
[34 196]
[35 195]
[36 194]
[37 193]
[38 192]
[39 191]
[41 190]
[42 189]
[43 188]
[44 183]
[45 182]
[46 181]
[47 180]
[48 171]
[49 170]
[50 169]
[51 165]
[52 164]
[53 163]
[55 161]
[56 160]
[57 159]
[58 158]
[59 157]
[60 156]
[61 151]
[63 148]
[64 147]
[65 146]
[66 145]
[67 144]
[69 142]
[70 141]
[71 140]
[72 139]
[86 138]
[87 137]
[88 135]
[89 134]
[91 132]
[93 130]
[94 129]
[96 128]
[97 127]
[98 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
