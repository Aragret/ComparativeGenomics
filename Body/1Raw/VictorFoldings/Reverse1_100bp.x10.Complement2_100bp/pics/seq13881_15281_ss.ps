%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUCCAAAACCGAGCAUUCUUCCGGAUCUAUCCCCUAACACGCCACACACUACGAUCCCAUCUUAGGCUCAUACAACCUCUUUAUUUUACACGUAUCACCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[130.44126892 668.35339355]
[123.63804626 681.75720215]
[114.82166290 693.93170166]
[104.20922852 704.57696533]
[92.06208038 713.43096924]
[78.67935944 720.27563477]
[64.39062500 724.94238281]
[49.54774475 727.31628418]
[34.51624680 727.33892822]
[19.66628838 725.00970459]
[5.36356688 720.38598633]
[-8.03970242 713.58166504]
[-20.21344948 704.76428223]
[-30.85788918 694.15100098]
[-39.71088791 682.00311279]
[-46.55443573 668.61981201]
[-51.22000122 654.33068848]
[-53.59269333 639.48760986]
[-53.61408234 624.45611572]
[-51.28363800 609.60638428]
[-46.65875626 595.30401611]
[-39.85332108 581.90130615]
[-31.03492928 569.72827148]
[-20.42073822 559.08471680]
[-8.27213097 550.23272705]
[5.11172009 543.39031982]
[19.40122604 538.72589111]
[34.24449539 536.35443115]
[49.27599716 536.33428955]
[64.12557220 538.66595459]
[68.73957825 524.39324951]
[73.35359192 510.12048340]
[77.96759796 495.84774780]
[82.58161163 481.57501221]
[87.19561768 467.30227661]
[91.80962372 453.02954102]
[96.42363739 438.75683594]
[101.03764343 424.48410034]
[105.65165710 410.21136475]
[110.26566315 395.93862915]
[112.15895844 381.05859375]
[103.67783356 368.81442261]
[110.58001709 354.57818604]
[109.68719482 339.60476685]
[108.79438019 324.63137817]
[107.90156555 309.65795898]
[97.46272278 295.55130005]
[105.84101105 279.15356445]
[104.72535706 264.19512939]
[103.60971069 249.23666382]
[94.94722748 237.12011719]
[101.63668823 222.78269958]
[100.52104187 207.82424927]
[99.40539551 192.86578369]
[98.28974152 177.90733337]
[97.17409515 162.94888306]
[96.05844879 147.99043274]
[94.94279480 133.03196716]
[93.82714844 118.07352448]
[82.91663361 108.53901672]
[81.83895111 94.08962250]
[91.21439362 83.04212952]
[89.98741913 68.09239197]
[88.64918518 53.15221024]
[87.31095123 38.21202469]
[76.37116241 23.39978409]
[84.37024689 7.77987432]
[82.80972290 -7.13873005]
[81.24919891 -22.05733490]
[66.36032104 -24.45663643]
[52.61056519 -30.62344360]
[40.93473434 -40.13190842]
[32.12494278 -52.32921600]
[26.77685928 -66.38039398]
[25.24942589 -81.32549286]
[27.64079094 -96.14514160]
[33.78200912 -109.83008575]
[43.24898148 -121.44993591]
[55.39171600 -130.21640015]
[69.37896729 -135.53675842]
[67.81844330 -150.45536804]
[66.25791931 -165.37397766]
[64.69740295 -180.29257202]
[63.13687515 -195.21118164]
[61.57635498 -210.12979126]
[60.01583099 -225.04838562]
[58.45530701 -239.96699524]
[56.89478302 -254.88560486]
[47.76377106 -267.80593872]
[54.13500595 -281.26910400]
[52.57448196 -296.18771362]
[37.69097519 -298.71432495]
[24.04155731 -305.16381836]
[12.63910198 -315.05758667]
[4.32975006 -327.66143799]
[-0.26989028 -342.04010010]
[-0.81849498 -357.12655640]
[2.72464609 -371.80133057]
[10.09660816 -384.97543335]
[20.75034332 -395.67123413]
[33.89527130 -403.09509277]
[48.55595398 -406.69604492]
[63.64447021 -406.20693970]
[78.04115295 -401.66400146]
[90.67767334 -393.40441895]
[100.61631012 -382.04104614]
[107.11956024 -368.41714478]
[109.70484161 -353.54373169]
[108.18029022 -338.52444458]
[102.65905762 -324.47387695]
[93.55084991 -312.43466187]
[81.53155518 -303.30014038]
[67.49308777 -297.74822998]
[69.05361176 -282.82962036]
[78.07300568 -270.97634888]
[71.81339264 -256.44613647]
[73.37390900 -241.52751160]
[74.93443298 -226.60891724]
[76.49495697 -211.69030762]
[78.05548096 -196.77169800]
[79.61600494 -181.85310364]
[81.17652893 -166.93449402]
[82.73705292 -152.01588440]
[84.29757690 -137.09729004]
[99.08305359 -134.78662109]
[112.77707672 -128.72274780]
[124.44374084 -119.31352997]
[133.28399658 -107.19567871]
[138.69038391 -93.19169617]
[140.28875732 -78.25402069]
[137.96420288 -63.40026474]
[131.86923218 -49.64388275]
[122.41383362 -37.92503738]
[110.23786926 -29.04633522]
[96.16780090 -23.61785889]
[97.72832489 -8.69925308]
[99.28884888 6.21935129]
[108.48524475 14.07765007]
[109.90744019 26.49381447]
[102.25113678 36.87379074]
[103.58937073 51.81397629]
[104.92760468 66.75415802]
[108.65531921 73.13584900]
[106.17285156 81.92647552]
[117.08336639 91.46098328]
[118.16104889 105.91037750]
[108.78560638 116.95787048]
[109.90125275 131.91632080]
[111.01689911 146.87478638]
[112.13254547 161.83323669]
[113.24819946 176.79168701]
[114.36384583 191.75013733]
[115.47949219 206.70858765]
[116.59514618 221.66705322]
[125.33742523 234.85351562]
[118.56816101 248.12101746]
[119.68381500 263.07946777]
[120.79946136 278.03793335]
[130.04574585 287.03063965]
[130.66702271 299.51254272]
[122.87496948 308.76513672]
[123.76779175 323.73855591]
[124.66060638 338.71194458]
[125.55342102 353.68536377]
[134.09840393 367.00051880]
[127.13236237 380.16577148]
[132.95812988 366.34332275]
[141.77612305 354.20895386]
[153.12377930 344.39920044]
[166.40579224 337.42871094]
[180.92544556 333.66308594]
[195.92105103 333.29989624]
[210.60597229 336.35821533]
[224.20985413 342.67755127]
[236.01908875 351.92645264]
[245.41418457 363.61968994]
[251.90226746 377.14392090]
[255.14300537 391.78967285]
[254.96640015 406.78863525]
[251.38171387 421.35400391]
[244.57698059 434.72171021]
[234.90917969 446.19049072]
[222.88543701 455.15878296]
[209.13652039 461.15603638]
[194.38366699 463.86773682]
[179.40077209 463.15155029]
[164.97381592 459.04510498]
[151.85960388 451.76379395]
[140.74607849 441.68960571]
[132.21624756 429.35095215]
[126.71755219 415.39517212]
[124.53839874 400.55264282]
[119.92438507 414.82537842]
[115.31037903 429.09808350]
[110.69636536 443.37081909]
[106.08235931 457.64355469]
[101.46835327 471.91629028]
[96.85433960 486.18902588]
[92.24033356 500.46176147]
[87.62631989 514.73449707]
[83.01231384 529.00720215]
[78.39830780 543.27996826]
[91.80269623 550.08209229]
[103.97789764 558.89746094]
[114.62409210 569.50903320]
[123.47909546 581.65545654]
[130.32484436 595.03759766]
[134.99276733 609.32592773]
[137.36791992 624.16864014]
[137.39178467 639.20013428]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 202]
[31 201]
[32 200]
[33 199]
[34 198]
[35 197]
[36 196]
[37 195]
[38 194]
[39 193]
[40 192]
[41 166]
[43 164]
[44 163]
[45 162]
[46 161]
[48 158]
[49 157]
[50 156]
[52 154]
[53 153]
[54 152]
[55 151]
[56 150]
[57 149]
[58 148]
[59 147]
[62 144]
[63 142]
[64 141]
[65 140]
[67 137]
[68 136]
[69 135]
[80 124]
[81 123]
[82 122]
[83 121]
[84 120]
[85 119]
[86 118]
[87 117]
[88 116]
[90 114]
[91 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
