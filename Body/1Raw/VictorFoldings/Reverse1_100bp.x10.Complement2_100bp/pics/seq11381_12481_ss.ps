%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[-3.38764262 353.59002686]
[4.51754522 366.39254761]
[9.85673237 380.45986938]
[12.43690968 395.28347778]
[12.16480541 410.32751465]
[9.05025578 425.04809570]
[3.20585108 438.91314697]
[-5.15713787 451.42141724]
[-15.73639488 462.12075806]
[-28.14948654 470.62438965]
[-41.94768524 476.62490845]
[-56.63219833 479.90539551]
[-71.67218781 480.34725952]
[-86.52396393 477.93453979]
[-100.65065002 472.75448608]
[-113.54157257 464.99429321]
[-124.73073578 454.93450928]
[-133.81365967 442.93878174]
[-140.46199036 429.44079590]
[-144.43540955 414.92843628]
[-145.59027100 399.92633057]
[-143.88482666 384.97680664]
[-139.38073730 370.62030029]
[-132.24081421 357.37576294]
[-122.72315979 345.72195435]
[-111.17183685 336.08020020]
[-98.00441742 328.79901123]
[-83.69689941 324.14163208]
[-68.76647949 322.27639771]
[-53.75289536 323.27072144]
[-39.19886780 327.08868408]
[-32.71937180 313.56033325]
[-26.23987579 300.03198242]
[-27.04307365 297.34628296]
[-26.83082199 294.18060303]
[-25.41497803 290.92010498]
[-22.75017166 288.01092529]
[-18.95081329 285.90881348]
[-11.67758274 272.79013062]
[-4.40435362 259.67144775]
[2.86887574 246.55273438]
[2.25395560 243.08082581]
[3.29014039 239.13856506]
[6.18017387 235.50524902]
[10.77110577 233.02120972]
[18.62286186 220.24037170]
[26.47461700 207.45953369]
[20.62870789 193.78607178]
[23.99506760 179.11871338]
[35.48696899 169.12924194]
[50.83483887 167.80671692]
[58.68659592 155.02587891]
[66.53835297 142.24504089]
[74.29473877 129.40609741]
[81.85912323 116.45309448]
[89.32685852 103.44414520]
[74.87082672 107.44702911]
[61.17213821 101.33589935]
[54.49365234 87.90467834]
[57.88867950 73.29393768]
[69.80506134 64.18350983]
[84.79478455 64.73856354]
[96.00476074 74.70533752]
[98.30957031 89.52896881]
[107.09017944 77.36751556]
[115.87078094 65.20606232]
[124.65138245 53.04460144]
[133.43199158 40.88314819]
[142.03054810 28.59230995]
[150.44517517 16.17481422]
[158.85978699 3.75731802]
[161.08323669 -5.10236931]
[167.49327087 -8.78113651]
[176.09184265 -21.07197380]
[184.69039917 -33.36281204]
[185.86155701 -51.73969650]
[202.04077148 -58.53677368]
[210.45538330 -70.95426941]
[211.79173279 -86.71893311]
[225.33660889 -92.91456604]
[221.72161865 -110.03038025]
[231.41297913 -124.18637848]
[248.01063538 -126.89868164]
[256.23944092 -139.44007874]
[264.46826172 -151.98147583]
[272.69705200 -164.52288818]
[273.32055664 -182.92648315]
[289.29022217 -190.20227051]
[297.33139038 -202.86479187]
[305.37255859 -215.52731323]
[313.41372681 -228.18984985]
[321.45489502 -240.85237122]
[329.49606323 -253.51489258]
[317.67269897 -262.76556396]
[306.81301880 -273.13058472]
[297.02157593 -284.51016235]
[288.39270020 -296.79467773]
[281.00949097 -309.86581421]
[274.94302368 -323.59771729]
[270.25177002 -337.85812378]
[266.98089600 -352.50967407]
[265.16186523 -367.41128540]
[264.81222534 -382.41943359]
[265.93536377 -397.38958740]
[268.52044678 -412.17755127]
[272.54254150 -426.64093018]
[277.96298218 -440.64041138]
[284.72952271 -454.04119873]
[292.77697754 -466.71420288]
[302.02789307 -478.53738403]
[312.39312744 -489.39685059]
[323.77288818 -499.18807983]
[336.05758667 -507.81671143]
[349.12887573 -515.19964600]
[362.86090088 -521.26586914]
[377.12139893 -525.95678711]
[391.77301025 -529.22741699]
[406.67465210 -531.04614258]
[421.68280029 -531.39544678]
[436.65292358 -530.27203369]
[451.44085693 -527.68664551]
[465.90414429 -523.66424561]
[479.90353394 -518.24353027]
[493.30419922 -511.47674561]
[505.97702026 -503.42901611]
[517.80004883 -494.17788696]
[528.65930176 -483.81240845]
[538.45025635 -472.43246460]
[547.07867432 -460.14761353]
[554.46136475 -447.07617188]
[560.52728271 -433.34402466]
[565.21795654 -419.08343506]
[568.48828125 -404.43176270]
[570.30670166 -389.53005981]
[570.65570068 -374.52191162]
[569.53198242 -359.55181885]
[566.94628906 -344.76394653]
[562.92364502 -330.30072021]
[557.50262451 -316.30145264]
[550.73559570 -302.90093994]
[542.68756104 -290.22824097]
[533.43621826 -278.40545654]
[523.07055664 -267.54638672]
[511.69036865 -257.75561523]
[499.40533447 -249.12748718]
[486.33374023 -241.74504089]
[472.60150146 -235.67941284]
[458.34082031 -230.98901367]
[443.68905640 -227.71899414]
[428.78735352 -225.90087891]
[413.77917480 -225.55213928]
[398.80908203 -226.67617798]
[384.02127075 -229.26213074]
[369.55813599 -233.28511047]
[355.55895996 -238.70639038]
[342.15859985 -245.47372437]
[334.11743164 -232.81118774]
[326.07626343 -220.14866638]
[318.03506470 -207.48614502]
[309.99389648 -194.82362366]
[301.95272827 -182.16110229]
[304.28106689 -170.29074097]
[297.68548584 -159.67556763]
[285.23846436 -156.29406738]
[277.00964355 -143.75267029]
[268.78085327 -131.21127319]
[260.55203247 -118.66987610]
[264.91098022 -106.54431152]
[261.43829346 -93.93389893]
[251.18579102 -85.50200653]
[237.75410461 -84.49994659]
[237.01962280 -69.62345886]
[222.87287903 -62.53964996]
[214.45826721 -50.12215424]
[216.43214417 -38.18773651]
[209.52342224 -27.77365112]
[196.98123169 -24.76424789]
[188.38267517 -12.47341061]
[179.78410339 -0.18257239]
[171.27728271 12.17193699]
[162.86267090 24.58943176]
[154.44804382 37.00692749]
[154.45352173 41.78280640]
[151.45889282 46.61283112]
[145.59344482 49.66374969]
[136.81283569 61.82520676]
[128.03224182 73.98666382]
[119.25163269 86.14811707]
[110.47103119 98.30957031]
[102.33581543 110.91188812]
[94.86807251 123.92083740]
[93.30973053 132.92135620]
[87.19107056 137.06669617]
[85.49889374 146.04301453]
[79.31919098 150.09678650]
[71.46743774 162.87763977]
[63.61568069 175.65847778]
[69.37319946 189.94683838]
[65.65674591 204.71305847]
[54.09477615 214.34555054]
[39.25545883 215.31127930]
[31.40370369 228.09213257]
[23.55194855 240.87297058]
[15.98756981 253.82597351]
[8.71434021 266.94467163]
[1.44111097 280.06335449]
[-5.83211851 293.18203735]
[-12.71153069 306.51147461]
[-19.19102669 320.03982544]
[-25.67052269 333.56817627]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 210]
[32 209]
[33 208]
[38 207]
[39 206]
[40 205]
[41 204]
[45 203]
[46 202]
[47 201]
[51 197]
[52 196]
[53 195]
[54 193]
[55 191]
[56 190]
[64 189]
[65 188]
[66 187]
[67 186]
[68 185]
[69 182]
[70 181]
[71 180]
[73 179]
[74 178]
[75 177]
[77 174]
[78 173]
[80 171]
[83 167]
[84 166]
[85 165]
[86 164]
[88 161]
[89 160]
[90 159]
[91 158]
[92 157]
[93 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
