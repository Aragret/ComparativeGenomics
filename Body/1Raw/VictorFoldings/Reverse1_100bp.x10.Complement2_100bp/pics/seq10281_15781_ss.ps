%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[27.54501534 634.54724121]
[14.84257412 642.54235840]
[1.50785470 649.43139648]
[-12.36306286 655.16473389]
[-26.67023659 659.70111084]
[-41.31058121 663.00781250]
[-56.17861176 665.06097412]
[-71.16720581 665.84582520]
[-86.16835785 665.35675049]
[-101.07398987 663.59722900]
[-115.77670288 660.57995605]
[-130.17056274 656.32659912]
[-144.15187073 650.86791992]
[-157.61985779 644.24322510]
[-170.47752380 636.50018311]
[-182.63220215 627.69464111]
[-193.99632263 617.89001465]
[-204.48800659 607.15698242]
[-214.03166199 595.57281494]
[-222.55851746 583.22106934]
[-230.00714111 570.19061279]
[-236.32386780 556.57543945]
[-241.46318054 542.47363281]
[-245.38806152 527.98681641]
[-248.07020569 513.21923828]
[-249.49031067 498.27746582]
[-249.63813782 483.26907349]
[-248.51261902 468.30221558]
[-246.12187195 453.48471069]
[-242.48310852 438.92333984]
[-237.62255859 424.72302246]
[-231.57522583 410.98608398]
[-224.38471985 397.81149292]
[-216.10279846 385.29412842]
[-206.78916931 373.52426147]
[-196.51094055 362.58663940]
[-185.34214783 352.56005859]
[-173.36326599 343.51681519]
[-160.66061401 335.52203369]
[-147.32571411 328.63333130]
[-133.45465088 322.90032959]
[-119.14736176 318.36431885]
[-104.50693512 315.05801392]
[-89.63884735 313.00521851]
[-74.65023804 312.22076416]
[-59.64909744 312.71023560]
[-44.74351120 314.47015381]
[-30.04087448 317.48782349]
[-15.64712238 321.74148560]
[-10.19176483 307.76870728]
[-4.73640823 293.79589844]
[0.71894884 279.82308960]
[6.17430592 265.85031128]
[5.67873001 258.47628784]
[11.81630230 251.71107483]
[17.47908974 237.82104492]
[4.41397619 245.19009399]
[-10.56686020 244.43209839]
[-22.82144356 235.78193665]
[-28.55255890 221.91996765]
[-25.98435783 207.14146423]
[-15.91262436 196.02569580]
[-1.45819592 192.01701355]
[12.90006638 196.35755920]
[22.71309853 207.70236206]
[24.94019127 222.53636169]
[32.40793228 209.52740479]
[39.87567520 196.51844788]
[47.34341431 183.50950623]
[54.71410370 170.44531250]
[61.98733521 157.32661438]
[69.26056671 144.20793152]
[76.23901367 130.93008423]
[82.91921234 117.49970245]
[89.59940338 104.06932831]
[96.17943573 90.58959198]
[102.65892792 77.06124878]
[109.13842773 63.53290176]
[115.61791992 50.00455475]
[121.89527893 36.38124084]
[127.96911621 22.66597366]
[134.04295349 8.95070744]
[140.11677551 -4.76455975]
[146.19061279 -18.47982597]
[149.73028564 -33.05620193]
[150.62310791 -48.02960587]
[151.51591492 -63.00301361]
[139.45578003 -70.08932495]
[131.66258240 -81.62544250]
[129.60993958 -95.32817841]
[133.64204407 -108.51496124]
[142.91752625 -118.62902069]
[155.58421326 -123.73510742]
[148.89474487 -138.07252502]
[157.55723572 -150.18907166]
[158.67288208 -165.14753723]
[159.78852844 -180.10598755]
[160.90417480 -195.06443787]
[162.01982117 -210.02288818]
[163.13548279 -224.98133850]
[149.41705322 -231.47514343]
[138.97367859 -242.48876953]
[133.21771240 -256.53274536]
[132.92761230 -271.70773315]
[138.14262390 -285.96145630]
[148.15745544 -297.36618042]
[161.61766052 -304.37951660]
[176.70288086 -306.05300903]
[191.37297058 -302.16027832]
[203.64389038 -293.22781372]
[211.85612488 -280.46365356]
[214.89901733 -265.59405518]
[212.36106873 -250.62998962]
[204.58547974 -237.59523010]
[192.62387085 -228.25263977]
[178.09393311 -223.86569214]
[176.97828674 -208.90724182]
[175.86262512 -193.94879150]
[174.74697876 -178.99034119]
[173.63133240 -164.03187561]
[172.51568604 -149.07342529]
[179.28494263 -135.80593872]
[170.54266357 -122.61946106]
[184.11547852 -113.85069275]
[191.45637512 -99.35009766]
[190.47726440 -83.03267670]
[181.35086060 -69.35772705]
[166.48933411 -62.11019897]
[165.59651184 -47.13679123]
[164.70368958 -32.16338730]
[172.14764404 -45.18596268]
[182.45606995 -56.08259201]
[195.04595947 -64.23700714]
[209.20532227 -69.18804169]
[224.13334656 -70.65569305]
[238.98579407 -68.55695343]
[252.92269897 -63.01052094]
[265.15582275 -54.33007050]
[274.99337769 -43.00652313]
[281.87896729 -29.68028450]
[285.42318726 -15.10501289]
[285.42559814 -0.10501293]
[281.88604736 14.47139263]
[275.00469971 27.79983711]
[265.17080688 39.12653351]
[252.94042969 47.81090164]
[239.00531006 53.36179733]
[224.15353394 55.46529007]
[209.22503662 54.00242233]
[195.06410217 49.05591965]
[182.47160339 40.90553284]
[172.15968323 30.01220703]
[164.71156311 16.99201393]
[160.54846191 2.58130503]
[159.90588379 -12.40599251]
[153.83204651 1.30927432]
[147.75820923 15.02454090]
[141.68438721 28.73980713]
[135.61054993 42.45507431]
[136.46470642 47.15395355]
[134.37612915 52.43929672]
[129.14627075 56.48405075]
[122.66677094 70.01239777]
[116.18727112 83.54074097]
[109.70777893 97.06909180]
[109.34284973 105.12137604]
[103.02977753 110.74951935]
[96.34958649 124.17990112]
[89.66939545 137.61027527]
[89.99477386 142.81999207]
[88.44430542 147.19599915]
[85.64968872 150.16334534]
[82.37925720 151.48115540]
[75.10602570 164.59985352]
[67.83280182 177.71853638]
[66.40863037 186.74127197]
[60.35236740 190.97723389]
[52.88462448 203.98619080]
[45.41688538 216.99514771]
[37.94914246 230.00410461]
[31.36911583 243.48382568]
[25.70632935 257.37387085]
[20.14710426 271.30566406]
[14.69174671 285.27844238]
[9.23639011 299.25125122]
[3.78103256 313.22406006]
[-1.67432451 327.19683838]
[11.79384422 333.82122803]
[24.65170288 341.56390381]
[36.80660629 350.36914062]
[48.17098236 360.17346191]
[58.66294479 370.90625000]
[68.20689392 382.49014282]
[76.73407745 394.84170532]
[84.18303680 407.87194824]
[90.50012207 421.48693848]
[95.63980103 435.58862305]
[99.56504822 450.07540894]
[102.24758148 464.84286499]
[103.66806793 479.78460693]
[103.81628418 494.79299927]
[102.69114685 509.75988770]
[100.30078125 524.57745361]
[96.66239166 539.13891602]
[91.80220795 553.33935547]
[85.75524139 567.07647705]
[78.56505585 580.25122070]
[70.28347015 592.76879883]
[60.97014999 604.53894043]
[50.69219208 615.47680664]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 187]
[50 186]
[51 185]
[52 184]
[53 183]
[55 182]
[56 181]
[66 180]
[67 179]
[68 178]
[69 177]
[70 175]
[71 174]
[72 173]
[73 169]
[74 168]
[75 167]
[76 165]
[77 164]
[78 163]
[79 162]
[80 159]
[81 158]
[82 157]
[83 156]
[84 155]
[85 130]
[86 129]
[87 128]
[93 123]
[95 121]
[96 120]
[97 119]
[98 118]
[99 117]
[100 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
