%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[79.11416626 338.27734375]
[82.53771210 323.43823242]
[91.70606995 311.27841187]
[105.03076935 303.90466309]
[103.69253540 288.96447754]
[102.35430145 274.02429199]
[101.01606750 259.08410645]
[99.67783356 244.14390564]
[98.33959198 229.20372009]
[97.00135803 214.26353455]
[95.66312408 199.32334900]
[94.32489014 184.38316345]
[82.85037994 194.04420471]
[68.11358643 191.24655151]
[60.97792816 178.05252075]
[66.70354462 164.18827820]
[81.06972504 159.87400818]
[93.48542023 168.28862000]
[93.26209259 153.29028320]
[93.03876495 138.29194641]
[92.81543732 123.29360962]
[92.59210968 108.29527283]
[81.39467621 118.27613068]
[66.41208649 117.55358887]
[56.22705078 106.54154968]
[56.67401505 91.54821014]
[67.49694061 81.16243744]
[82.49596405 81.33367157]
[93.07859802 91.96295166]
[86.38913727 77.62552643]
[95.05162048 65.50897980]
[96.16726685 50.55052567]
[97.28291321 35.59207153]
[98.39856720 20.63361931]
[99.51421356 5.67516565]
[84.61480713 3.92114449]
[69.80395508 1.53207672]
[55.10871124 -1.48767364]
[40.55592728 -5.13259029]
[26.17218208 -9.39601517]
[11.98374748 -14.27016163]
[-1.98345733 -19.74612427]
[-15.70391846 -25.81390190]
[-29.15257263 -32.46240997]
[-42.30485535 -39.67950058]
[-55.13674164 -47.45199966]
[-67.62478638 -55.76569748]
[-79.74618530 -64.60541534]
[-91.47879791 -73.95500946]
[-102.80118561 -83.79739380]
[-113.69266510 -94.11458588]
[-124.13335419 -104.88775635]
[-134.10417175 -116.09720612]
[-143.58689880 -127.72247314]
[-152.56422424 -139.74230957]
[-161.01972961 -152.13478088]
[-168.93800354 -164.87722778]
[-176.30456543 -177.94638062]
[-183.10594177 -191.31837463]
[-189.32972717 -204.96878052]
[-194.96455383 -218.87265015]
[-200.00012207 -233.00459290]
[-204.42724609 -247.33880615]
[-208.23782349 -261.84909058]
[-211.42489624 -276.50897217]
[-213.98263550 -291.29162598]
[-215.90640259 -306.17007446]
[-217.19264221 -321.11712646]
[-217.83901978 -336.10549927]
[-217.84436035 -351.10778809]
[-217.20866394 -366.09661865]
[-215.93307495 -381.04458618]
[-214.01991272 -395.92437744]
[-211.47270203 -410.70886230]
[-208.29606628 -425.37100220]
[-204.49583435 -439.88400269]
[-200.07893372 -454.22134399]
[-195.05343628 -468.35687256]
[-189.42851257 -482.26477051]
[-183.21444702 -495.91961670]
[-176.42259216 -509.29644775]
[-169.06535339 -522.37084961]
[-161.15615845 -535.11889648]
[-152.70947266 -547.51739502]
[-143.74072266 -559.54364014]
[-134.26626587 -571.17565918]
[-124.30345154 -582.39221191]
[-113.87044525 -593.17279053]
[-102.98631287 -603.49774170]
[-91.67093658 -613.34820557]
[-79.94499207 -622.70617676]
[-67.82989502 -631.55450439]
[-55.34777069 -639.87713623]
[-42.52142715 -647.65875244]
[-29.37429047 -654.88519287]
[-15.93037605 -661.54327393]
[-2.21424150 -667.62084961]
[11.74905777 -673.10675049]
[25.93401718 -677.99102783]
[40.31472397 -682.26470947]
[54.86490631 -685.91998291]
[69.55799103 -688.95019531]
[84.36713409 -691.34979248]
[99.26528931 -693.11444092]
[114.22524261 -694.24084473]
[129.21966553 -694.72705078]
[144.22116089 -694.57202148]
[159.20233154 -693.77618408]
[174.13581848 -692.34094238]
[188.99433899 -690.26885986]
[203.75074768 -687.56378174]
[218.37808228 -684.23065186]
[232.84963989 -680.27551270]
[247.13897705 -675.70562744]
[261.22000122 -670.52935791]
[275.06698608 -664.75610352]
[288.65460205 -658.39648438]
[301.95809937 -651.46203613]
[314.95312500 -643.96551514]
[327.61596680 -635.92053223]
[339.92346191 -627.34179688]
[351.85314941 -618.24505615]
[363.38327026 -608.64685059]
[374.49270630 -598.56469727]
[385.16119385 -588.01708984]
[395.36923218 -577.02325439]
[405.09817505 -565.60321045]
[414.33029175 -553.77795410]
[423.04864502 -541.56896973]
[431.23736572 -528.99859619]
[438.88150024 -516.08984375]
[445.96704102 -502.86621094]
[452.48104858 -489.35192871]
[458.41168213 -475.57162476]
[463.74804688 -461.55047607]
[468.48043823 -447.31414795]
[472.60015869 -432.88858032]
[476.09973145 -418.30017090]
[478.97274780 -403.57553101]
[481.21398926 -388.74157715]
[482.81930542 -373.82543945]
[483.78576660 -358.85427856]
[484.11166382 -343.85552979]
[483.79635620 -328.85653687]
[482.84045410 -313.88473511]
[481.24566650 -298.96743774]
[479.01492310 -284.13192749]
[476.15228271 -269.40527344]
[472.66302490 -254.81437683]
[468.55346680 -240.38591003]
[463.83114624 -226.14624023]
[458.50466919 -212.12133789]
[452.58377075 -198.33685303]
[446.07928467 -184.81796265]
[439.00308228 -171.58934021]
[431.36807251 -158.67517090]
[423.18823242 -146.09904480]
[414.47848511 -133.88392639]
[405.25473022 -122.05212402]
[395.53384399 -110.62525940]
[385.33355713 -99.62419891]
[374.67251587 -89.06904602]
[363.57019043 -78.97908020]
[352.04687500 -69.37272644]
[340.12359619 -60.26753616]
[327.82214355 -51.68014145]
[315.16500854 -43.62622833]
[302.17526245 -36.12051010]
[288.87667847 -29.17669296]
[275.29354858 -22.80746460]
[261.45065308 -17.02445793]
[247.37329102 -11.83823681]
[233.08717346 -7.25827551]
[218.61840820 -3.29293990]
[203.99342346 0.05052713]
[189.23893738 2.76601791]
[174.38188171 4.84857225]
[159.44941711 6.29438543]
[144.46881104 7.10081768]
[129.46742249 7.26639462]
[114.47266388 6.79081440]
[113.35701752 21.74926758]
[112.24137115 36.70772171]
[111.12571716 51.66617584]
[110.01007080 66.62462616]
[116.77932739 79.89212036]
[108.03704834 93.07859802]
[107.59044647 108.07194519]
[107.81377411 123.07028198]
[108.03710175 138.06861877]
[108.26042938 153.06695557]
[108.48375702 168.06529236]
[109.26507568 183.04493713]
[110.60330963 197.98512268]
[111.94154358 212.92530823]
[113.27977753 227.86549377]
[114.61801147 242.80567932]
[115.95624542 257.74584961]
[117.29448700 272.68603516]
[118.63272095 287.62622070]
[119.97095490 302.56640625]
[134.39399719 307.45474243]
[145.57743835 317.79156494]
[151.58369446 331.78604126]
[151.37211609 347.01348877]
[144.97938538 360.83566284]
[133.51306152 370.85781860]
[118.95977783 375.34353638]
[103.84095764 373.51562500]
[90.77603912 365.69082642]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 201]
[5 200]
[6 199]
[7 198]
[8 197]
[9 196]
[10 195]
[11 194]
[12 193]
[18 192]
[19 191]
[20 190]
[21 189]
[22 188]
[29 187]
[31 185]
[32 184]
[33 183]
[34 182]
[35 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
