%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[33.88957214 733.31933594]
[19.01263618 735.37701416]
[3.99614024 735.62646484]
[-10.94093132 734.06402588]
[-25.58075142 730.71246338]
[-39.70982742 725.62060547]
[-53.12211990 718.86285400]
[-65.62203979 710.53759766]
[-77.02729034 700.76635742]
[-87.17155457 689.69152832]
[-95.90690613 677.47473145]
[-103.10594940 664.29400635]
[-108.66371155 650.34161377]
[-112.49913025 635.82104492]
[-114.55628204 620.94403076]
[-114.80516815 605.92755127]
[-113.24214935 590.99053955]
[-109.89003754 576.35083008]
[-104.79769897 562.22192383]
[-98.03940582 548.80993652]
[-89.71369934 536.31030273]
[-79.94201660 524.90539551]
[-68.86683655 514.76159668]
[-56.64967346 506.02667236]
[-43.46869659 498.82812500]
[-29.51611710 493.27087402]
[-14.99540424 489.43600464]
[-0.11831550 487.37942505]
[14.89819813 487.13110352]
[16.45872116 472.21249390]
[18.01924515 457.29388428]
[19.57976723 442.37527466]
[21.14029121 427.45666504]
[10.14419270 437.65890503]
[-4.73436069 439.56381226]
[-17.94603729 432.46087646]
[-24.56320953 418.99935913]
[-22.11783409 404.20001221]
[-11.52197647 393.58267212]
[3.27237082 391.10736084]
[16.74728203 397.69723511]
[23.87716293 410.89566040]
[27.19942284 396.26818848]
[30.52168083 381.64074707]
[29.14359093 379.19964600]
[28.64942360 376.06555176]
[29.30795860 372.57247925]
[31.26224327 369.14532471]
[34.50165939 366.25393677]
[38.68867111 351.85015869]
[42.87568283 337.44638062]
[47.06269455 323.04257202]
[51.24970627 308.63879395]
[55.43671799 294.23501587]
[59.62372971 279.83123779]
[58.47225189 272.53082275]
[63.98178482 265.24502563]
[68.38278198 250.90519714]
[72.78378296 236.56533813]
[75.99705505 221.91355896]
[78.00106812 207.04803467]
[72.03350830 193.40113831]
[81.54515839 180.75839233]
[83.54917145 165.89286804]
[85.55318451 151.02734375]
[87.55720520 136.16181946]
[89.56121826 121.29628754]
[91.56523132 106.43075562]
[92.79220581 91.48102570]
[93.23880768 76.48767090]
[93.68541718 61.49432373]
[93.46208954 46.49598694]
[92.56927490 31.52258110]
[91.67646027 16.54917526]
[90.67219543 1.58283103]
[81.92991638 -11.60364437]
[88.69917297 -24.87113762]
[77.00675201 -35.16312790]
[76.08841705 -50.34901810]
[85.97231293 -61.43252945]
[84.85666656 -76.39098358]
[83.74101257 -91.34943390]
[74.99873352 -104.53591156]
[81.76799774 -117.80340576]
[80.65234375 -132.76185608]
[79.53669739 -147.72030640]
[78.42105103 -162.67877197]
[69.41313934 -150.68470764]
[55.10997009 -146.16592407]
[40.84627914 -150.80780029]
[31.94206238 -162.87904358]
[31.71837807 -177.87738037]
[40.25865173 -190.20878601]
[54.37757492 -195.27397156]
[68.80913544 -191.18373108]
[78.17113495 -179.46253967]
[78.84091949 -194.44757080]
[79.51070404 -209.43261719]
[80.18048859 -224.41764832]
[80.85027313 -239.40269470]
[67.20960999 -246.17411804]
[57.50743484 -257.91241455]
[53.42470551 -272.58386230]
[55.66878510 -287.64651489]
[63.85086441 -300.49072266]
[76.55335999 -308.89111328]
[91.57547760 -311.39227295]
[106.31455231 -307.56088257]
[118.21694183 -298.06072998]
[125.22049713 -284.53778076]
[126.11179352 -269.33496094]
[120.73642731 -255.08627319]
[110.02570343 -244.26037598]
[95.83531189 -238.73291016]
[95.16552734 -223.74786377]
[94.49574280 -208.76283264]
[93.82595825 -193.77778625]
[93.15617371 -178.79275513]
[93.37950134 -163.79441833]
[94.49514771 -148.83596802]
[95.61080170 -133.87750244]
[96.72644806 -118.91905212]
[105.38893127 -106.80250549]
[98.69947052 -92.46508789]
[99.81511688 -77.50662994]
[100.93076324 -62.54817963]
[112.34944916 -53.05348206]
[113.69396210 -37.89937592]
[103.65763092 -25.98678780]
[112.32010651 -13.87024021]
[105.63065338 0.46718237]
[109.26293182 6.90366459]
[106.64986420 15.65635967]
[107.54267883 30.62976456]
[108.43549347 45.60317230]
[119.17608643 35.13227463]
[134.17599487 35.18509293]
[144.84259033 45.73136139]
[145.06555176 60.72970581]
[134.71717834 71.58838654]
[119.72546387 72.08706665]
[108.67876434 61.94092941]
[108.23216248 76.93428040]
[107.78555298 91.92762756]
[118.64287567 81.57781982]
[133.60430908 80.50287628]
[145.82969666 89.19425201]
[149.72973633 103.67836761]
[143.52140808 117.33328247]
[130.04306030 123.91614532]
[115.45681000 120.41736603]
[106.43075562 108.43476868]
[104.42674255 123.30030060]
[102.42272949 138.16583252]
[100.41871643 153.03135681]
[98.41470337 167.89688110]
[96.41069031 182.76240540]
[102.23490906 197.47257996]
[92.86660004 209.05204773]
[90.86258698 223.91757202]
[100.89972687 212.77056885]
[114.93515778 207.47842407]
[129.83331299 209.22340393]
[142.26591492 217.61569214]
[149.45547485 230.78041077]
[149.79585266 245.77655029]
[143.21098328 259.25393677]
[131.17195129 268.20166016]
[116.36830902 270.62078857]
[102.10723114 265.97088623]
[91.57466888 255.29075623]
[87.12362671 240.96633911]
[82.72263336 255.30619812]
[78.32163239 269.64602661]
[74.02751160 284.01824951]
[69.84049988 298.42202759]
[65.65348816 312.82580566]
[61.46647644 327.22958374]
[57.27946472 341.63339233]
[53.09245300 356.03717041]
[48.90544128 370.44094849]
[45.14914322 384.96301270]
[41.82688141 399.59045410]
[38.50462341 414.21792603]
[36.05889511 429.01718140]
[34.49837112 443.93579102]
[32.93785095 458.85440063]
[31.37732697 473.77301025]
[29.81680298 488.69161987]
[44.45687485 492.04208374]
[58.58633423 497.13284302]
[71.99913025 503.88961792]
[84.49966431 512.21392822]
[95.90564728 521.98431396]
[106.05075073 533.05834961]
[114.78701019 545.27453613]
[121.98704529 558.45471191]
[127.54584503 572.40667725]
[131.38235474 586.92694092]
[133.44061279 601.80383301]
[133.69061279 616.82031250]
[132.12872314 631.75744629]
[128.77769470 646.39739990]
[123.68642426 660.52667236]
[116.92913055 673.93920898]
[108.60436249 686.43945312]
[98.83352661 697.84503174]
[87.75910950 707.98974609]
[75.54260254 716.72552490]
[62.36215973 723.92504883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 189]
[30 188]
[31 187]
[32 186]
[33 185]
[42 184]
[43 183]
[44 182]
[49 181]
[50 180]
[51 179]
[52 178]
[53 177]
[54 176]
[55 175]
[57 174]
[58 173]
[59 172]
[60 160]
[61 159]
[63 157]
[64 156]
[65 155]
[66 154]
[67 153]
[68 152]
[69 144]
[70 143]
[71 142]
[72 135]
[73 134]
[74 133]
[75 131]
[77 129]
[80 126]
[81 125]
[82 124]
[84 122]
[85 121]
[86 120]
[87 119]
[96 118]
[97 117]
[98 116]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
