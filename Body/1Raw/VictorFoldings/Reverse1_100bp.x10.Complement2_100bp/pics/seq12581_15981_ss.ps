%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUACAAACCCAGACUCAAAUAUAUAGUGUCACUCUUAAGAUACUACCUGGUACAUUGCUUGUUACGAUGUCCCUACUUAUAAUACCUCUUCAUCAGAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[91.23440552 421.98818970]
[76.25499725 426.47723389]
[61.91516113 420.23999023]
[54.98572540 406.22152710]
[58.73856354 391.04095459]
[71.40169525 381.86602783]
[72.29451752 366.89263916]
[73.18733215 351.91921997]
[74.08014679 336.94583130]
[74.74993134 321.96078491]
[75.19654083 306.96743774]
[75.64314270 291.97409058]
[76.08975220 276.98074341]
[76.53635406 261.98739624]
[73.97148132 257.95867920]
[73.91019440 252.27595520]
[77.22608185 246.55613708]
[78.11889648 231.58273315]
[79.01171875 216.60932922]
[79.90453339 201.63591003]
[69.85671234 190.70079041]
[70.54885864 175.50291443]
[82.08674622 165.03797913]
[82.97956085 150.06457520]
[83.87238312 135.09117126]
[75.84590912 147.76301575]
[64.01185608 156.98013306]
[49.76048279 161.65969849]
[34.76602554 161.25198364]
[20.79001808 155.80485535]
[9.47434425 145.95825195]
[2.14836049 132.86894226]
[-0.32728380 118.07465363]
[2.33824730 103.31338501]
[9.83181000 90.31929016]
[21.27306747 80.61889648]
[35.31791306 75.35179901]
[50.31637192 75.13677216]
[64.50643921 79.99906921]
[76.22108459 89.36748505]
[84.08407593 102.14141846]
[87.17173767 116.82176971]
[91.57273102 102.48191833]
[90.37809753 99.67793274]
[90.17732239 96.37728882]
[91.15630341 92.94727325]
[93.36269379 89.81867981]
[96.68610382 87.43374634]
[101.93282318 73.38127136]
[107.17954254 59.32880020]
[112.42626190 45.27632904]
[115.53037262 30.60102844]
[116.42318726 15.62762260]
[117.31600189 0.65421659]
[118.20881653 -14.31918907]
[119.10163116 -29.29259491]
[116.48856354 -38.04529190]
[120.12084961 -44.48177338]
[121.23649597 -59.44022369]
[114.54703522 -73.77764893]
[123.20951843 -85.89419556]
[124.32516479 -100.85264587]
[125.44081116 -115.81110382]
[126.55646515 -130.76956177]
[127.67211151 -145.72801208]
[120.00931549 -132.83299255]
[109.41652679 -122.21259308]
[96.54148865 -114.51626587]
[82.17151642 -110.21464539]
[67.18534088 -109.57077789]
[52.49937820 -112.62402344]
[39.01166916 -119.18769073]
[27.54699707 -128.86039734]
[18.80643272 -141.05065918]
[13.32446289 -155.01304626]
[11.43631458 -169.89373779]
[13.25744724 -184.78277588]
[18.67649841 -198.76968384]
[27.36208916 -210.99917603]
[38.78309631 -220.72341919]
[52.24111557 -227.34773254]
[66.91318512 -230.46707153]
[81.90210724 -229.89068604]
[96.29130554 -225.65380859]
[109.20085907 -218.01553345]
[119.84136200 -207.44293213]
[127.56213379 -194.58253479]
[131.89105225 -180.22076416]
[132.56338501 -165.23580933]
[138.63722229 -178.95108032]
[144.71105957 -192.66635132]
[150.78488159 -206.38160706]
[156.85871887 -220.09687805]
[157.47224426 -229.21067810]
[163.12643433 -233.97007751]
[169.40379333 -247.59339905]
[175.68116760 -261.21670532]
[181.95852661 -274.84002686]
[169.31962585 -282.96432495]
[157.93446350 -292.76864624]
[148.02465820 -304.06207275]
[139.78309631 -316.62484741]
[133.37022400 -330.21237183]
[128.91084290 -344.56021118]
[126.49176788 -359.38903809]
[126.16008759 -374.41021729]
[127.92225647 -389.33135986]
[131.74397278 -403.86206055]
[137.55084229 -417.71939087]
[145.22985840 -430.63369751]
[154.63150024 -442.35354614]
[165.57279968 -452.65084839]
[177.84077454 -461.32513428]
[191.19660950 -468.20755005]
[205.38034058 -473.16412354]
[220.11589050 -476.09841919]
[235.11639404 -476.95327759]
[250.08988953 -475.71209717]
[264.74490356 -472.39898682]
[278.79617310 -467.07846069]
[291.97018433 -459.85409546]
[304.01049805 -450.86651611]
[314.68276978 -440.29064941]
[323.77923584 -428.33236694]
[331.12283325 -415.22442627]
[336.57061768 -401.22201538]
[340.01657104 -386.59765625]
[341.39355469 -371.63604736]
[340.67483521 -356.62838745]
[337.87435913 -341.86682129]
[333.04666138 -327.63870239]
[326.28570557 -314.22097778]
[317.72308350 -301.87481689]
[307.52551270 -290.84054565]
[295.89141846 -281.33294678]
[283.04733276 -273.53707886]
[269.24322510 -267.60470581]
[254.74783325 -263.65130615]
[239.84327698 -261.75384521]
[224.81970215 -261.94921875]
[209.96952820 -264.23364258]
[195.58183289 -268.56265259]
[189.30447388 -254.93934631]
[183.02711487 -241.31604004]
[176.74975586 -227.69271851]
[170.57398987 -214.02304077]
[164.50015259 -200.30778503]
[158.42631531 -186.59251404]
[152.35249329 -172.87724304]
[146.27865601 -159.16198730]
[142.63056946 -144.61236572]
[141.51490784 -129.65390015]
[140.39926147 -114.69544983]
[139.28361511 -99.73699951]
[138.16796875 -84.77854919]
[144.93722534 -71.51105499]
[136.19494629 -58.32457733]
[135.07929993 -43.36612320]
[134.07504272 -28.39977837]
[133.18222046 -13.42637348]
[132.28941345 1.54703248]
[131.39659119 16.52043724]
[130.50378418 31.49384308]
[138.11807251 18.57012367]
[149.02549744 8.27313328]
[162.36585999 1.41493499]
[177.08706665 -1.46360433]
[192.02815247 -0.13547130]
[206.01080322 5.29459190]
[217.93228149 14.39834785]
[226.85240173 26.45783806]
[232.06770325 40.52199554]
[233.16688538 55.48167038]
[230.06326294 70.15707397]
[223.00157166 83.39084625]
[212.53875732 94.13931274]
[199.49995422 101.55480194]
[184.91345215 105.05251312]
[169.92961121 104.35658264]
[155.73010254 99.52190399]
[143.43476868 90.92976379]
[134.01329041 79.25776672]
[128.20864868 65.42642212]
[126.47872925 50.52304840]
[121.23201752 64.57552338]
[115.98529816 78.62799072]
[110.73857880 92.68046570]
[105.91258240 106.88291931]
[101.51158142 121.22276306]
[98.84578705 135.98397827]
[97.95297241 150.95738220]
[97.06015778 165.93080139]
[107.27273560 177.69264221]
[106.15399170 192.86508179]
[94.87793732 202.52873230]
[93.98512268 217.50213623]
[93.09230804 232.47554016]
[92.19949341 247.44894409]
[91.52970123 262.43399048]
[91.08309937 277.42733765]
[90.63648987 292.42068481]
[90.18988800 307.41403198]
[89.74327850 322.40737915]
[92.53565216 328.40023804]
[91.96762085 334.05480957]
[89.05355072 337.83862305]
[88.16073608 352.81204224]
[87.26792145 367.78546143]
[86.37510681 382.75885010]
[97.85824585 393.37353516]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 209]
[7 208]
[8 207]
[9 206]
[10 203]
[11 202]
[12 201]
[13 200]
[14 199]
[17 198]
[18 197]
[19 196]
[20 195]
[23 192]
[24 191]
[25 190]
[42 189]
[43 188]
[48 187]
[49 186]
[50 185]
[51 184]
[52 163]
[53 162]
[54 161]
[55 160]
[56 159]
[58 158]
[59 157]
[61 155]
[62 154]
[63 153]
[64 152]
[65 151]
[89 150]
[90 149]
[91 148]
[92 147]
[93 146]
[95 145]
[96 144]
[97 143]
[98 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
