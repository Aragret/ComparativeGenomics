%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[335.79965210 313.18591309]
[324.54354858 303.27127075]
[313.28744507 293.35662842]
[302.03134155 283.44198608]
[290.77526855 273.52731323]
[279.37280273 263.78134155]
[267.82647705 254.20623779]
[256.28018188 244.63111877]
[244.73388672 235.05599976]
[233.18759155 225.48088074]
[221.64128113 215.90576172]
[214.48591614 214.05572510]
[209.99574280 206.10110474]
[198.59327698 196.35514832]
[187.19081116 186.60917664]
[172.48883057 184.22149658]
[167.02560425 169.37347412]
[155.62313843 159.62750244]
[144.22067261 149.88154602]
[139.47393799 149.35478210]
[135.00770569 145.84056091]
[132.62940979 139.67166138]
[121.52217102 129.59051514]
[110.41493988 119.50938416]
[99.30770111 109.42824554]
[94.14705658 108.48927307]
[89.87985229 104.72572327]
[88.02555847 98.87777710]
[72.71912384 94.87483978]
[68.92198944 80.47237396]
[58.11983109 70.06500244]
[42.81339264 66.06206512]
[39.01625824 51.65959930]
[28.21410179 41.25222778]
[17.41194534 30.84485245]
[18.69144058 45.79018402]
[11.04090691 58.69248199]
[-2.68619943 64.73950958]
[-17.37000465 61.67587662]
[-27.53381538 50.64424133]
[-29.38677788 35.75913239]
[-22.23778534 22.57232475]
[-8.75323486 16.00217247]
[6.03850794 18.49971771]
[-3.45039034 6.88245440]
[-12.93928909 -4.73480892]
[-20.79165649 -9.40151405]
[-22.48142815 -16.59640503]
[-31.79631042 -28.35365677]
[-41.11119461 -40.11090851]
[-50.42607498 -51.86816025]
[-59.74095917 -63.62541199]
[-69.05583954 -75.38265991]
[-81.71953583 -67.31824493]
[-95.14531708 -60.59868622]
[-109.19085693 -55.29521179]
[-123.70726776 -51.46404648]
[-138.54066467 -49.14580154]
[-153.53381348 -48.36505127]
[-168.52777100 -49.13007355]
[-183.36360168 -51.43275452]
[-197.88401794 -55.24868774]
[-211.93511963 -60.53742599]
[-225.36793518 -67.24289703]
[-238.04008484 -75.29402161]
[-249.81723022 -84.60546112]
[-260.57452393 -95.07849884]
[-270.19796753 -106.60211945]
[-278.58547974 -119.05416870]
[-285.64819336 -132.30264282]
[-291.31124878 -146.20710754]
[-295.51455688 -160.62014771]
[-298.21365356 -175.38900757]
[-299.37982178 -190.35710144]
[-299.00079346 -205.36578369]
[-297.08053589 -220.25593567]
[-293.63940430 -234.86972046]
[-288.71386719 -249.05221558]
[-282.35617065 -262.65307617]
[-274.63372803 -275.52816772]
[-265.62832642 -287.54095459]
[-255.43548584 -298.56411743]
[-244.16325378 -308.48080444]
[-231.93109131 -317.18588257]
[-218.86869812 -324.58706665]
[-205.11451721 -330.60592651]
[-190.81436157 -335.17864990]
[-176.11984253 -338.25677490]
[-161.18669128 -339.80761719]
[-146.17323303 -339.81481934]
[-131.23860168 -338.27822876]
[-116.54113770 -335.21417236]
[-102.23661804 -330.65515137]
[-88.47669220 -324.64944458]
[-75.40721893 -317.26074219]
[-63.16674423 -308.56735229]
[-51.88501740 -298.66146851]
[-41.68164062 -287.64807129]
[-32.66476440 -275.64389038]
[-24.92998314 -262.77621460]
[-18.55928421 -249.18142700]
[-13.62020206 -235.00364685]
[-10.16509247 -220.39317322]
[-8.23058319 -205.50486755]
[-7.83718014 -190.49655151]
[-8.98905468 -175.52734375]
[-11.67399406 -160.75592041]
[-15.86353874 -146.33885193]
[-21.51327705 -132.42898560]
[-28.56331635 -119.17375946]
[-36.93892670 -106.71369171]
[-46.55131531 -95.18087006]
[-57.29859161 -84.69754791]
[-47.98370743 -72.94029236]
[-38.66882324 -61.18304062]
[-29.35394287 -49.42579269]
[-20.03905869 -37.66854095]
[-10.72417641 -25.91128922]
[-1.32202530 -14.22370720]
[8.16687298 -2.60644388]
[17.65577126 9.01081944]
[27.81931877 20.04269600]
[38.62147522 30.45006943]
[49.42362976 40.85744476]
[63.95742798 44.11597061]
[68.52720642 59.26284409]
[79.32936096 69.67021942]
[93.86315918 72.92874908]
[98.43293762 88.07561493]
[109.38884735 98.32100677]
[120.49607849 108.40214539]
[131.60331726 118.48328400]
[142.71054077 128.56442261]
[153.96664429 138.47908020]
[165.36911011 148.22503662]
[176.77156067 157.97100830]
[192.28912354 161.05578613]
[196.93678284 175.20671082]
[208.33923340 184.95268250]
[219.74169922 194.69863892]
[231.21640015 204.35945129]
[242.76271057 213.93457031]
[254.30900574 223.50968933]
[265.85531616 233.08480835]
[277.40161133 242.65992737]
[288.94790649 252.23504639]
[295.39047241 253.71994019]
[299.49923706 257.64614868]
[300.68991089 262.27120972]
[311.94601440 272.18588257]
[323.20208740 282.10052490]
[334.45819092 292.01516724]
[345.71429443 301.92984009]
[356.76098633 291.76181030]
[368.80999756 282.80422974]
[381.72937012 275.15518188]
[395.37750244 268.89849854]
[409.60488892 264.10272217]
[424.25561523 260.82043457]
[439.16918945 259.08755493]
[454.18222046 258.92309570]
[469.13018799 260.32885742]
[483.84930420 263.28939819]
[498.17834473 267.77233887]
[511.96026611 273.72854614]
[525.04406738 281.09271240]
[537.28643799 289.78421021]
[548.55322266 299.70779419]
[558.72100830 310.75473022]
[567.67828369 322.80395508]
[575.32702637 335.72351074]
[581.58337402 349.37179565]
[586.37878418 363.59930420]
[589.66070557 378.25012207]
[591.39324951 393.16375732]
[591.55731201 408.17675781]
[590.15124512 423.12469482]
[587.19030762 437.84375000]
[582.70703125 452.17266846]
[576.75048828 465.95443726]
[569.38598633 479.03808594]
[560.69421387 491.28024292]
[550.77038574 502.54678345]
[539.72320557 512.71429443]
[527.67370605 521.67126465]
[514.75396729 529.31970215]
[501.10552979 535.57574463]
[486.87792969 540.37078857]
[472.22702026 543.65234375]
[457.31335449 545.38452148]
[442.30032349 545.54827881]
[427.35244751 544.14178467]
[412.63345337 541.18048096]
[398.30465698 536.69689941]
[384.52301025 530.73999023]
[371.43954468 523.37518311]
[359.19760132 514.68310547]
[347.93130493 504.75897217]
[337.76409912 493.71154785]
[328.80737305 481.66186523]
[321.15927124 468.74197388]
[314.90359497 455.09335327]
[310.10885620 440.86563110]
[306.82763672 426.21466064]
[305.09585571 411.30093384]
[304.93246460 396.28793335]
[306.33932495 381.34005737]
[309.30093384 366.62115479]
[313.78491211 352.29244995]
[319.74212646 338.51095581]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 153]
[2 152]
[3 151]
[4 150]
[5 149]
[6 146]
[7 145]
[8 144]
[9 143]
[10 142]
[11 141]
[13 140]
[14 139]
[15 138]
[17 136]
[18 135]
[19 134]
[22 133]
[23 132]
[24 131]
[25 130]
[28 129]
[30 127]
[31 126]
[33 124]
[34 123]
[35 122]
[44 121]
[45 120]
[46 119]
[48 118]
[49 117]
[50 116]
[51 115]
[52 114]
[53 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
