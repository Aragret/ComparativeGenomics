%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[39.37146759 538.84313965]
[24.34271622 538.17138672]
[9.69334221 534.74932861]
[-4.07769966 528.69354248]
[-16.50137520 520.21020508]
[-27.15453529 509.58828735]
[-35.67433929 497.18957520]
[-41.77060699 483.43640137]
[-45.23569870 468.79714966]
[-45.95159912 453.77041626]
[-43.89392090 438.86807251]
[-39.13274765 424.59759521]
[-31.83024597 411.44509888]
[-22.23513603 399.85855103]
[-10.67422104 390.23254395]
[2.45873618 382.89495850]
[16.71643257 378.09573364]
[31.61325645 375.99829102]
[32.28304291 361.01324463]
[32.95282745 346.02819824]
[30.11113358 339.20568848]
[33.74578094 330.82553101]
[34.63859940 315.85211182]
[35.53141403 300.87872314]
[36.42422867 285.90530396]
[29.45818901 272.74008179]
[38.00317001 259.42489624]
[38.89598846 244.45149231]
[31.34224892 257.41070557]
[20.61080360 267.89096069]
[7.47636318 275.13574219]
[-7.11288548 278.62197876]
[-22.10373116 278.09799194]
[-36.41397476 273.60168457]
[-49.01054001 265.45758057]
[-58.98408127 254.25361633]
[-65.61459351 240.79864502]
[-68.42340851 226.06396484]
[-67.20776367 211.11331177]
[-62.05541992 197.02597046]
[-53.33832169 184.81890869]
[-41.68576813 175.37338257]
[-27.93896675 169.37126160]
[-13.09030914 167.24584961]
[1.78826618 169.15058899]
[15.62266159 174.94795227]
[27.41416168 184.21945190]
[36.31152344 196.29574585]
[41.67244720 210.30503845]
[43.10987091 225.23716736]
[48.56522751 211.26437378]
[54.02058411 197.29156494]
[59.47594070 183.31877136]
[64.93129730 169.34597778]
[62.35263443 154.67628479]
[74.57907867 144.63513184]
[80.03443146 130.66233826]
[85.48979187 116.68953705]
[90.94514465 102.71674347]
[89.98129272 97.56068420]
[91.97489929 92.23162079]
[96.77655792 88.41310883]
[102.64551544 74.60893250]
[108.51447296 60.80475616]
[114.38343811 47.00057983]
[120.25239563 33.19640350]
[120.73015594 24.07447624]
[126.31287384 19.23142815]
[132.38670349 5.51616096]
[126.93331146 -9.07487106]
[133.28842163 -22.89757729]
[147.23234558 -28.00663757]
[153.30618286 -41.72190475]
[159.38002014 -55.43717194]
[165.45384216 -69.15243530]
[171.52767944 -82.86770630]
[177.60151672 -96.58296967]
[183.67535400 -110.29824066]
[189.74917603 -124.01350403]
[195.82301331 -137.72877502]
[194.33641052 -153.47998047]
[206.56457520 -161.98417664]
[212.63839722 -175.69943237]
[218.71223450 -189.41470337]
[224.78607178 -203.12997437]
[230.85990906 -216.84523010]
[236.93374634 -230.56050110]
[243.00756836 -244.27577209]
[249.08140564 -257.99102783]
[247.59480286 -273.74224854]
[259.82296753 -282.24642944]
[265.89678955 -295.96170044]
[266.51031494 -305.07550049]
[272.16452026 -309.83489990]
[278.44186401 -323.45822144]
[284.71923828 -337.08154297]
[271.99206543 -345.05947876]
[260.38964844 -354.59951782]
[250.10246277 -365.54492188]
[241.29945374 -377.71600342]
[234.12515259 -390.91290283]
[228.69740295 -404.91888428]
[225.10530090 -419.50399780]
[223.40785217 -434.42871094]
[223.63291931 -449.44793701]
[225.77682495 -464.31509399]
[229.80433655 -478.78601074]
[235.64933777 -492.62307739]
[243.21583557 -505.59906006]
[252.37960815 -517.50091553]
[262.99014282 -528.13317871]
[274.87322998 -537.32122803]
[287.83370972 -544.91424561]
[301.65881348 -550.78753662]
[316.12145996 -554.84460449]
[330.98419189 -557.01892090]
[346.00292969 -557.27465820]
[360.93109131 -555.60772705]
[375.52349854 -552.04547119]
[389.54055786 -546.64636230]
[402.75207520 -539.49908447]
[414.94113159 -530.72094727]
[425.90756226 -520.45617676]
[435.47128296 -508.87326050]
[443.47525024 -496.16244507]
[449.78802490 -482.53244019]
[454.30596924 -468.20706177]
[456.95486450 -453.42153931]
[457.69122314 -438.41867065]
[456.50296021 -423.44479370]
[453.40957642 -408.74584961]
[448.46188354 -394.56317139]
[441.74111938 -381.12963867]
[433.35766602 -368.66586304]
[423.44915771 -357.37649536]
[412.17828369 -347.44692993]
[399.73016357 -339.04022217]
[386.30920410 -332.29440308]
[372.13577271 -327.32028198]
[357.44259644 -324.19949341]
[342.47100830 -322.98327637]
[327.46676636 -323.69165039]
[312.67633057 -326.31295776]
[298.34255981 -330.80416870]
[292.06518555 -317.18084717]
[285.78784180 -303.55752563]
[279.61206055 -289.88787842]
[273.53823853 -276.17260742]
[275.45928955 -261.40240479]
[262.79666138 -251.91720581]
[256.72283936 -238.20193481]
[250.64900208 -224.48666382]
[244.57518005 -210.77140808]
[238.50134277 -197.05613708]
[232.42750549 -183.34086609]
[226.35366821 -169.62561035]
[220.27983093 -155.91033936]
[222.20089722 -141.14013672]
[209.53828430 -131.65493774]
[203.46444702 -117.93967438]
[197.39060974 -104.22440338]
[191.31678772 -90.50914001]
[185.24295044 -76.79386902]
[179.16911316 -63.07860565]
[173.09527588 -49.36333847]
[167.02143860 -35.64807129]
[160.94761658 -21.93280411]
[166.53582764 -8.17389774]
[160.57147217 5.82185698]
[146.10197449 11.58999538]
[140.02813721 25.30526161]
[134.05657959 39.06536484]
[128.18760681 52.86954117]
[122.31865692 66.67372131]
[116.44969177 80.47789764]
[110.58073425 94.28207397]
[104.91794586 108.17209625]
[99.46258545 122.14489746]
[94.00723267 136.11769104]
[88.55187225 150.09049988]
[90.74033356 165.75961304]
[78.90409851 174.80133057]
[73.44873810 188.77412415]
[67.99337769 202.74693298]
[62.53802490 216.71972656]
[57.08266830 230.69252014]
[53.86939240 245.34431458]
[52.97657776 260.31771851]
[59.87875748 274.55395508]
[51.39763641 286.79812622]
[50.50482178 301.77154541]
[49.61200333 316.74493408]
[48.71918869 331.71835327]
[47.93786621 346.69799805]
[47.26808167 361.68301392]
[46.59829712 376.66806030]
[61.24859238 380.08618164]
[75.02126312 386.13827515]
[87.44722748 394.61828613]
[98.10324860 405.23730469]
[106.62639618 417.63369751]
[112.72637177 431.38525391]
[116.19541168 446.02355957]
[116.91535950 461.05007935]
[114.86169434 475.95300293]
[110.10437012 490.22473145]
[102.80541229 503.37921143]
[93.21342468 514.96838379]
[81.65510559 524.59747314]
[68.52413177 531.93859863]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 196]
[19 195]
[20 194]
[22 193]
[23 192]
[24 191]
[25 190]
[27 188]
[28 187]
[50 186]
[51 185]
[52 184]
[53 183]
[54 182]
[56 180]
[57 179]
[58 178]
[59 177]
[62 176]
[63 175]
[64 174]
[65 173]
[66 172]
[68 171]
[69 170]
[72 167]
[73 166]
[74 165]
[75 164]
[76 163]
[77 162]
[78 161]
[79 160]
[80 159]
[82 157]
[83 156]
[84 155]
[85 154]
[86 153]
[87 152]
[88 151]
[89 150]
[91 148]
[92 147]
[94 146]
[95 145]
[96 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
