%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[7.36965084 584.87634277]
[-7.42483187 581.26483154]
[-19.46734810 571.94293213]
[-26.67146111 558.52575684]
[-27.78901100 543.33789062]
[-22.62637901 529.01074219]
[-12.07802200 518.02655029]
[2.02849555 512.28845215]
[2.47510147 497.29510498]
[2.92170739 482.30175781]
[3.36831331 467.30841064]
[3.81491923 452.31503296]
[-4.41445923 464.85607910]
[-16.98903084 473.03408813]
[-31.78976059 475.47097778]
[-46.32246399 471.75607300]
[-58.13812256 462.51541138]
[-65.24559784 449.30618286]
[-66.44715118 434.35437012]
[-61.54029465 420.17965698]
[-51.35192871 409.17068481]
[-37.59896851 403.18270874]
[-22.59902573 403.22476196]
[-8.87985897 409.28976440]
[1.24661279 420.35568237]
[6.07410145 434.55935669]
[9.39636040 419.93188477]
[12.71862030 405.30444336]
[16.04088020 390.67697144]
[2.07145262 384.06793213]
[-10.08780193 374.51846313]
[-19.82822609 362.50265503]
[-26.66137123 348.61816406]
[-30.24348450 333.55645752]
[-30.39281082 318.06838989]
[-27.09880638 302.92681885]
[-20.52281952 288.88790894]
[-10.99018955 276.65356445]
[1.02584171 266.83618164]
[14.92763233 259.92800903]
[30.02285767 256.27655029]
[45.55899429 256.06701660]
[48.66310501 241.39172363]
[51.76721191 226.71641541]
[41.44005203 237.59527588]
[27.61225510 243.40837097]
[12.61405277 243.17608643]
[-1.02709353 236.93757629]
[-11.01241302 225.74411011]
[-15.65920258 211.48202515]
[-14.18439674 196.55470276]
[-6.83652782 183.47766113]
[5.14616108 174.45463562]
[19.74437523 171.00613403]
[34.49806213 173.71330261]
[46.92095947 182.11994934]
[54.91959763 194.80938721]
[57.14596939 209.64488220]
[63.01492691 195.84069824]
[68.88388824 182.03652954]
[74.75285339 168.23234558]
[79.47298431 153.99435425]
[83.01265717 139.41798401]
[86.55233002 124.84160614]
[89.98339081 110.23928070]
[86.03180695 96.82747650]
[95.38915253 86.43845367]
[98.71141052 71.81099701]
[102.03366852 57.18353653]
[105.35592651 42.55607605]
[108.67818451 27.92861557]
[107.52719879 18.86699104]
[112.16033173 13.10888100]
[115.70000458 -1.46749461]
[119.23967743 -16.04387093]
[122.34378815 -30.71917152]
[125.00958252 -45.48038864]
[127.67537689 -60.24160767]
[130.34117126 -75.00282288]
[132.67666626 -89.81989288]
[134.68067932 -104.68541718]
[136.68469238 -119.55094910]
[138.68870544 -134.41647339]
[138.91203308 -149.41481018]
[137.35150146 -164.33341980]
[135.79098511 -179.25202942]
[126.28105164 -187.96546936]
[125.28842163 -200.42332458]
[132.80152893 -209.90382385]
[131.46330261 -224.84400940]
[130.12506104 -239.78419495]
[128.78683472 -254.72438049]
[113.96862030 -257.65652466]
[100.57738495 -264.64590454]
[89.69867706 -275.12591553]
[82.21438599 -288.24697876]
[78.73123169 -302.94540405]
[79.53157806 -318.02972412]
[84.55055237 -332.27703857]
[93.38127136 -344.53247070]
[105.30788422 -353.80242920]
[119.36354065 -359.33554077]
[134.40882874 -360.68316650]
[149.22407532 -357.73614502]
[162.60829163 -350.73330688]
[173.47645569 -340.24240112]
[180.94757080 -327.11383057]
[184.41595459 -312.41189575]
[183.60044861 -297.32839966]
[178.56716919 -283.08612061]
[169.72413635 -270.83956909]
[157.78822327 -261.58157349]
[143.72700500 -256.06262207]
[145.06524658 -241.12242126]
[146.40348816 -226.18225098]
[147.74171448 -211.24206543]
[158.59593201 -197.45246887]
[150.70959473 -180.81254578]
[152.27011108 -165.89393616]
[153.83064270 -150.97534180]
[159.68357849 -164.78631592]
[169.85643005 -175.80961609]
[183.15408325 -182.75022888]
[198.01437378 -184.79278564]
[212.69149780 -181.69732666]
[225.46121216 -173.82748413]
[234.82336426 -162.10783386]
[239.67805481 -147.91516113]
[239.45500183 -132.91682434]
[234.18038940 -118.87480164]
[224.47386169 -107.43873596]
[211.47576904 -99.95213318]
[196.71307373 -97.29450226]
[181.92010498 -99.77806854]
[168.83471680 -107.11106110]
[158.99418640 -118.43199921]
[153.55422974 -132.41246033]
[151.55021667 -117.54693604]
[149.54620361 -102.68140411]
[147.54219055 -87.81587982]
[149.37770081 -84.80535889]
[149.84623718 -80.75621796]
[148.47552490 -76.32063293]
[145.10238647 -72.33702850]
[142.43659973 -57.57581329]
[139.77079773 -42.81459427]
[137.10501099 -28.05337715]
[138.59072876 -25.67623901]
[139.22433472 -22.56735802]
[138.72244263 -19.04833794]
[136.92312622 -15.53735256]
[133.81605530 -12.50419712]
[130.27638245 2.07217789]
[126.73670959 16.64855385]
[123.30564880 31.25087547]
[119.98339081 45.87833405]
[116.66112518 60.50579453]
[113.33886719 75.13325500]
[110.01660919 89.76071930]
[113.96819305 103.17252350]
[104.61084747 113.56154633]
[105.76184082 122.62316895]
[101.12870789 128.38127136]
[97.58903503 142.95765686]
[94.04936218 157.53402710]
[105.19171906 147.49172974]
[119.70154572 143.68846130]
[134.33732605 146.97390747]
[145.82936096 156.61407471]
[151.61033630 170.45533752]
[150.38873291 185.40551758]
[142.43748474 198.12469482]
[129.53291321 205.77139282]
[114.55792236 206.63729858]
[100.85797882 200.52899170]
[91.49367523 188.81105042]
[88.55702972 174.10130310]
[82.68806458 187.90548706]
[76.81910706 201.70965576]
[70.95014191 215.51383972]
[66.44251251 229.82052612]
[63.33840561 244.49581909]
[60.23429489 259.17114258]
[73.52598572 265.16159058]
[85.27210999 273.78747559]
[94.95812225 284.66781616]
[102.16037750 297.32290649]
[106.56465912 311.19552612]
[107.97988129 325.67541504]
[106.34638977 340.12622070]
[101.73846436 353.91333008]
[94.36093903 366.43185425]
[84.54011536 377.13305664]
[72.70932770 385.54855347]
[59.38978958 391.31066895]
[45.16769028 394.16860962]
[30.66834068 393.99923706]
[27.34608078 408.62670898]
[24.02382088 423.25415039]
[20.70156097 437.88162231]
[18.80826950 452.76165771]
[18.36166382 467.75500488]
[17.91505814 482.74835205]
[17.46845055 497.74169922]
[17.02184486 512.73504639]
[30.76181412 519.30261230]
[40.63768005 530.89520264]
[44.93839264 545.50421143]
[42.91882324 560.59863281]
[34.92888260 573.56323242]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 205]
[9 204]
[10 203]
[11 202]
[12 201]
[26 200]
[27 199]
[28 198]
[29 197]
[42 183]
[43 182]
[44 181]
[58 180]
[59 179]
[60 178]
[61 177]
[62 165]
[63 164]
[64 163]
[65 161]
[67 159]
[68 158]
[69 157]
[70 156]
[71 155]
[73 154]
[74 153]
[75 152]
[76 147]
[77 146]
[78 145]
[79 144]
[80 140]
[81 139]
[82 138]
[83 137]
[84 120]
[85 119]
[86 118]
[89 116]
[90 115]
[91 114]
[92 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
