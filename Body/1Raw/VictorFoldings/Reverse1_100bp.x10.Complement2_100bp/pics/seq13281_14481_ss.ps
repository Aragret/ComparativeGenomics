%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCUACUACCUGGGCCUCGUGUAUUUAUCAUACCGAAACUUCUUCCGCACCCAUGUCUACACGUCCUUACGAUCCACACCAACCAACUACGGCUAACAxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[17.15516090 569.69226074]
[11.20885181 583.47796631]
[3.87658095 596.57916260]
[-4.76392651 608.85699463]
[-14.62107658 620.18133545]
[-25.59037781 630.43212891]
[-37.55554962 639.50067139]
[-50.38975525 647.29089355]
[-63.95693970 653.72015381]
[-78.11328888 658.72033691]
[-92.70874023 662.23840332]
[-107.58856964 664.23712158]
[-122.59503937 664.69519043]
[-137.56907654 663.60791016]
[-152.35194397 660.98669434]
[-166.78694153 656.85937500]
[-180.72105408 651.26965332]
[-194.00654602 644.27685547]
[-206.50262451 635.95501709]
[-218.07678223 626.39245605]
[-228.60635376 615.69049072]
[-237.97972107 603.96258545]
[-246.09750366 591.33300781]
[-252.87365723 577.93572998]
[-258.23635864 563.91271973]
[-262.12875366 549.41259766]
[-264.50955200 534.58911133]
[-265.35357666 519.59936523]
[-264.65182495 504.60232544]
[-262.41177368 489.75692749]
[-258.65716553 475.22052002]
[-253.42776489 461.14721680]
[-246.77903748 447.68621826]
[-238.78146362 434.98022461]
[-229.51980591 423.16387939]
[-219.09225464 412.36248779]
[-207.60934448 402.69052124]
[-195.19279480 394.25051880]
[-181.97424316 387.13195801]
[-168.09381104 381.41030884]
[-153.69862366 377.14617920]
[-138.94129944 374.38482666]
[-123.97824860 373.15545654]
[-108.96810913 373.47116089]
[-94.06998444 375.32858276]
[-79.44181061 378.70800781]
[-65.23865509 383.57363892]
[-51.61106873 389.87387085]
[-43.95046997 376.97753906]
[-36.28987503 364.08123779]
[-28.72549629 351.12823486]
[-21.25775337 338.11926270]
[-13.88706493 325.05508423]
[-6.61383533 311.93640137]
[0.65939420 298.81768799]
[1.15343690 291.44357300]
[8.13982582 285.55902100]
[15.60756683 272.55004883]
[23.07530785 259.54110718]
[30.54304886 246.53215027]
[38.01079178 233.52319336]
[45.47853088 220.51425171]
[52.94627380 207.50529480]
[60.41401291 194.49633789]
[67.88175201 181.48738098]
[73.64778900 167.63990784]
[77.61988068 153.17538452]
[81.59197998 138.71084595]
[85.56407928 124.24633026]
[89.53617096 109.78180695]
[86.18740082 96.20692444]
[95.99930573 86.24610138]
[99.97139740 71.78157043]
[103.94349670 57.31705093]
[107.91558838 42.85252762]
[100.35807800 29.23188972]
[104.59239960 14.61938858]
[117.62417603 7.49839544]
[121.59626770 -6.96612835]
[120.85105133 -16.07010841]
[125.73667908 -21.61559677]
[129.92369080 -36.01937866]
[134.11070251 -50.42316055]
[138.29771423 -64.82694244]
[139.63594055 -79.76712799]
[138.07542419 -94.68572998]
[126.91631317 -109.33345032]
[134.68194580 -125.07072449]
[132.89949036 -139.96444702]
[131.11701965 -154.85815430]
[129.33454895 -169.75187683]
[127.55208588 -184.64559937]
[112.70744324 -187.55967712]
[99.49084473 -194.92015076]
[89.19710541 -206.00592041]
[82.83470917 -219.73089600]
[81.02696991 -234.75045776]
[83.95100403 -249.59313965]
[91.32032776 -262.80480957]
[102.41298676 -273.09112549]
[116.14222717 -279.44430542]
[131.16299438 -281.24200439]
[146.00372314 -278.30801392]
[159.21044922 -270.92984009]
[169.48931885 -259.83029175]
[175.83331299 -246.09678650]
[177.62092590 -231.07481384]
[174.67700195 -216.23606873]
[167.28997803 -203.03428650]
[156.18354797 -192.76286316]
[142.44580078 -186.42805481]
[144.22827148 -171.53434753]
[146.01074219 -156.64062500]
[147.79319763 -141.74690247]
[149.57566833 -126.85319519]
[158.88804626 -119.13268280]
[160.49493408 -106.73907471]
[152.99403381 -96.24625397]
[154.55455017 -81.32765198]
[159.74787903 -95.39994049]
[167.90391541 -107.98879242]
[178.62471008 -118.47995758]
[191.38716125 -126.36155701]
[205.56858826 -131.24902344]
[220.47702026 -132.90390015]
[235.38505554 -131.24542236]
[249.56529236 -126.35453033]
[262.32583618 -118.46984863]
[273.04409790 -107.97608948]
[281.19708252 -95.38527679]
[286.38702393 -81.31172943]
[288.36065674 -66.44213867]
[287.02169800 -51.50201797]
[282.43545532 -37.22033310]
[274.82574463 -24.29391670]
[264.56384277 -13.35347748]
[252.15043640 -4.93282509]
[238.19122314 0.55717927]
[223.36727905 2.84866571]
[208.40191650 1.82982743]
[194.02532959 -2.44962382]
[180.93898010 -9.78088474]
[169.78137207 -19.80624580]
[161.09692383 -32.03654861]
[155.30935669 -45.87504959]
[152.70149231 -60.63993073]
[148.51448059 -46.23614883]
[144.32746887 -31.83236694]
[140.14045715 -17.42858505]
[136.06079102 -2.99403238]
[132.08869934 11.47049141]
[139.65609741 24.24821281]
[135.83387756 38.97388077]
[122.38011932 46.82462311]
[118.40802002 61.28914642]
[114.43592072 75.75366974]
[110.46382904 90.21819305]
[113.81259918 103.79307556]
[104.00069427 113.75389862]
[100.02860260 128.21842957]
[96.05650330 142.68295288]
[92.08441162 157.14747620]
[88.11231232 171.61199951]
[98.47408295 160.76609802]
[111.76568604 153.81387329]
[126.58443451 151.48904419]
[141.36645508 154.03694153]
[154.55177307 161.18867493]
[164.74891663 172.18949890]
[170.88175964 185.87847900]
[172.30307007 200.81098938]
[168.86286926 215.41116333]
[160.92420959 228.13821411]
[149.32485962 237.64900208]
[135.28895569 242.93986511]
[120.29770660 243.45242310]
[105.93320465 239.13258362]
[93.71134949 230.43624878]
[84.92195892 218.28114319]
[80.49258423 203.95002747]
[80.89070892 188.95512390]
[73.42296600 201.96408081]
[65.95522308 214.97303772]
[58.48748398 227.98197937]
[51.01974106 240.99093628]
[43.55200195 253.99989319]
[36.08425903 267.00885010]
[28.61651993 280.01779175]
[21.14877701 293.02673340]
[13.77808857 306.09094238]
[6.50485897 319.20962524]
[-0.76837069 332.32830811]
[-2.19253802 341.35104370]
[-8.24880219 345.58700562]
[-15.71654320 358.59597778]
[-17.27488708 367.59649658]
[-23.39354706 371.74182129]
[-31.05414581 384.63815308]
[-38.71474075 397.53448486]
[-26.66323280 406.48797607]
[-15.59621906 416.63317871]
[-5.63102055 427.86254883]
[3.12672734 440.05706787]
[10.58418751 453.08743286]
[16.66230583 466.81552124]
[21.29665375 481.09582520]
[24.43810081 495.77694702]
[26.05334854 510.70324707]
[26.12527275 525.71655273]
[24.65311241 540.65765381]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 199]
[49 198]
[50 197]
[51 195]
[52 194]
[53 192]
[54 191]
[55 190]
[57 189]
[58 188]
[59 187]
[60 186]
[61 185]
[62 184]
[63 183]
[64 182]
[65 181]
[66 163]
[67 162]
[68 161]
[69 160]
[70 159]
[72 157]
[73 156]
[74 155]
[75 154]
[78 151]
[79 150]
[81 149]
[82 148]
[83 147]
[84 146]
[85 119]
[86 118]
[88 115]
[89 114]
[90 113]
[91 112]
[92 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
