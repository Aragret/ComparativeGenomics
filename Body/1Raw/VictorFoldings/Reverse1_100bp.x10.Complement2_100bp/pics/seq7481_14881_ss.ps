%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[44.19297028 650.47937012]
[35.19740295 662.92828369]
[21.17600060 669.19689941]
[5.90045118 667.59906006]
[-6.52019978 658.56451416]
[-12.74485970 644.52355957]
[-11.09912491 629.25305176]
[-2.02569222 616.86077881]
[12.03473282 610.68017578]
[13.59525585 595.76159668]
[15.15577888 580.84295654]
[16.71630096 565.92437744]
[10.34506702 552.46118164]
[19.47607994 539.54089355]
[21.03660393 524.62225342]
[22.59712601 509.70364380]
[24.15764999 494.78506470]
[21.72707748 487.80551147]
[25.85407829 479.65652466]
[27.63654327 464.76281738]
[29.41901016 449.86911011]
[31.20147514 434.97537231]
[32.98394012 420.08166504]
[34.76640701 405.18795776]
[36.54887390 390.29421997]
[38.33134079 375.40051270]
[26.48122978 370.40219116]
[16.31950760 362.49679565]
[8.54403400 352.21838379]
[3.69108510 340.26428223]
[2.09836650 327.44775391]
[3.88152480 314.64270020]
[8.92577934 302.72409058]
[16.89328384 292.50808716]
[27.24574852 284.69631958]
[39.28079605 279.82748413]
[52.17961884 278.24038696]
[54.62534714 263.44113159]
[57.07107544 248.64186096]
[51.51247787 234.82334900]
[61.39633560 222.46940613]
[63.84206390 207.67013550]
[66.28778839 192.87086487]
[64.54272461 189.80702209]
[64.19495392 185.74572754]
[65.69713593 181.35292053]
[69.18737030 177.47151184]
[72.29148102 162.79620361]
[75.39559174 148.12091064]
[64.23143005 158.13896179]
[49.57465363 161.32942200]
[35.25651550 156.85830688]
[25.01974106 145.89434814]
[21.54019356 131.30349731]
[25.72742271 116.89978027]
[36.48689651 106.44828796]
[51.00611115 102.68100739]
[65.48978424 106.58271027]
[76.15191650 117.13349152]
[80.20542908 131.57452393]
[85.45214844 117.52204895]
[78.83220673 108.40157318]
[77.39569092 97.22377777]
[81.49438477 86.72579956]
[90.12461853 79.47833252]
[101.17307281 77.25608063]
[106.83585358 63.36605072]
[112.49864197 49.47602463]
[118.16143036 35.58599854]
[123.61678314 21.61319923]
[128.86351013 7.56072855]
[134.11022949 -6.49174261]
[139.35694885 -20.54421425]
[144.60365295 -34.59668350]
[142.18215942 -50.23148346]
[153.88246155 -59.44842911]
[159.12918091 -73.50090027]
[151.57731628 -89.28028107]
[157.65447998 -105.32344055]
[173.14335632 -111.87582397]
[178.18026733 -126.00485229]
[183.21717834 -140.13388062]
[188.25410461 -154.26290894]
[193.29101562 -168.39193726]
[185.50506592 -184.05714417]
[191.34269714 -200.18899536]
[206.73228455 -206.97126770]
[211.55828857 -221.17372131]
[216.38427734 -235.37617493]
[221.10441589 -249.61416626]
[225.61204529 -263.92083740]
[230.01304626 -278.26071167]
[233.76934814 -292.78274536]
[236.87345886 -307.45806885]
[239.97756958 -322.13336182]
[243.08168030 -336.80865479]
[246.18577576 -351.48397827]
[232.35078430 -357.40673828]
[219.93727112 -365.91500854]
[209.42236328 -376.68176270]
[201.21026611 -389.29315186]
[195.61659241 -403.26446533]
[192.85636902 -418.05862427]
[193.03567505 -433.10702515]
[196.14764404 -447.83120728]
[202.07263184 -461.66525269]
[210.58291626 -474.07739258]
[221.35137939 -484.59054565]
[233.96411133 -492.80062866]
[247.93630981 -498.39202881]
[262.73092651 -501.14987183]
[277.77929688 -500.96810913]
[292.50299072 -497.85375977]
[306.33605957 -491.92654419]
[318.74682617 -483.41424561]
[329.25823975 -472.64407349]
[337.46627808 -460.02999878]
[343.05541992 -446.05691528]
[345.81085205 -431.26184082]
[345.62667847 -416.21350098]
[342.50994873 -401.49032593]
[336.58047485 -387.65820312]
[328.06616211 -375.24880981]
[317.29428101 -364.73913574]
[304.67889404 -356.53317261]
[290.70489502 -350.94628906]
[275.90939331 -348.19323730]
[260.86108398 -348.37985229]
[257.75698853 -333.70455933]
[254.65286255 -319.02926636]
[251.54875183 -304.35394287]
[248.44464111 -289.67864990]
[261.57458496 -296.93157959]
[276.02502441 -292.90856934]
[283.51812744 -279.91421509]
[279.76147461 -265.39224243]
[266.90704346 -257.66149902]
[252.31848145 -261.15054321]
[244.35289001 -273.85971069]
[239.95188904 -259.51986694]
[240.99455261 -252.20310974]
[235.37715149 -245.00015259]
[236.31076050 -237.66870117]
[230.58673096 -230.55018616]
[225.76074219 -216.34771729]
[220.93473816 -202.14526367]
[228.19126892 -191.49763489]
[227.98713684 -178.41938782]
[220.17283630 -167.68872070]
[207.42004395 -163.35502625]
[202.38313293 -149.22599792]
[197.34620667 -135.09696960]
[192.30929565 -120.96794128]
[187.27238464 -106.83890533]
[194.36958313 -96.08441162]
[193.97074890 -83.01065826]
[185.99754333 -72.39752960]
[173.18165588 -68.25418091]
[167.93493652 -54.20170975]
[170.73171997 -39.57204056]
[158.65612793 -29.34996605]
[153.40940857 -15.29749584]
[148.16268921 -1.24502444]
[142.91596985 12.80744648]
[137.66925049 26.85991859]
[138.80158997 31.49962425]
[137.03129578 36.89991379]
[132.05145264 41.24878311]
[126.38867188 55.13881302]
[120.72588348 69.02883911]
[115.06309509 82.91886139]
[122.76056671 99.21336365]
[116.20644379 116.00041199]
[99.50462341 122.76876831]
[94.25790405 136.82124329]
[90.07089233 151.22502136]
[86.96678162 165.90031433]
[83.86267090 180.57562256]
[81.08705902 195.31658936]
[78.64133453 210.11585999]
[76.19560242 224.91513062]
[81.57926941 239.79217529]
[71.87034607 251.08758545]
[69.42462158 265.88684082]
[66.97888947 280.68612671]
[82.19061279 288.87103271]
[93.66889191 301.74685669]
[100.04171753 317.74914551]
[100.55603027 334.94137573]
[95.16666412 351.24917603]
[84.53974152 364.71063232]
[69.97042847 373.71240234]
[53.22505569 377.18298340]
[51.44258881 392.07669067]
[49.66012573 406.97039795]
[47.87765884 421.86413574]
[46.09519196 436.75784302]
[44.31272888 451.65155029]
[42.53026199 466.54528809]
[40.74779510 481.43899536]
[39.07625580 496.34558105]
[37.51573181 511.26419067]
[35.95520782 526.18280029]
[34.39468384 541.10137939]
[40.65430069 555.63165283]
[31.63490677 567.48486328]
[30.07438278 582.40350342]
[28.51386070 597.32208252]
[26.95333672 612.24072266]
[39.43038177 621.19720459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 209]
[10 208]
[11 207]
[12 206]
[14 204]
[15 203]
[16 202]
[17 201]
[19 200]
[20 199]
[21 198]
[22 197]
[23 196]
[24 195]
[25 194]
[26 193]
[37 185]
[38 184]
[39 183]
[41 181]
[42 180]
[43 179]
[47 178]
[48 177]
[49 176]
[60 175]
[61 174]
[66 171]
[67 170]
[68 169]
[69 168]
[70 165]
[71 164]
[72 163]
[73 162]
[74 161]
[76 159]
[77 158]
[80 154]
[81 153]
[82 152]
[83 151]
[84 150]
[87 146]
[88 145]
[89 144]
[90 142]
[91 140]
[92 139]
[93 132]
[94 131]
[95 130]
[96 129]
[97 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
