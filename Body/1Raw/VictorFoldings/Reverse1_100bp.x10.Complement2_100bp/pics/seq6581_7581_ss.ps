%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAG\
) } def
/len { sequence length } bind def

/coor [
[28.03441429 450.37063599]
[22.64216042 464.37985229]
[15.96174145 477.82257080]
[8.05186749 490.58065796]
[-1.01794696 502.54196167]
[-11.16799545 513.60137939]
[-22.30907631 523.66174316]
[-34.34327698 532.63464355]
[-47.16484451 540.44116211]
[-60.66109467 547.01275635]
[-74.71341705 552.29162598]
[-89.19832611 556.23138428]
[-103.98851013 558.79748535]
[-118.95401001 559.96728516]
[-133.96328735 559.73059082]
[-148.88444519 558.08935547]
[-163.58634949 555.05810547]
[-177.93980408 550.66345215]
[-191.81864929 544.94403076]
[-205.10093689 537.95007324]
[-217.66993713 529.74310303]
[-229.41517639 520.39514160]
[-240.23342896 509.98843384]
[-250.02964783 498.61441040]
[-258.71771240 486.37301636]
[-266.22131348 473.37182617]
[-272.47445679 459.72512817]
[-277.42221069 445.55282593]
[-281.02111816 430.97949219]
[-283.23950195 416.13317871]
[-284.05789185 401.14434814]
[-283.46911621 386.14474487]
[-281.47830200 371.26620483]
[-278.10299683 356.63946533]
[-273.37280273 342.39306641]
[-267.32934570 328.65219116]
[-260.02572632 315.53765869]
[-251.52610779 303.16467285]
[-241.90521240 291.64196777]
[-231.24755859 281.07080078]
[-219.64683533 271.54412842]
[-207.20498657 263.14562988]
[-194.03134155 255.94912720]
[-180.24169922 250.01785278]
[-165.95721436 245.40393066]
[-151.30345154 242.14793396]
[-136.40917969 240.27844238]
[-121.40528107 239.81192017]
[-106.42362976 240.75244141]
[-91.59587860 243.09175110]
[-77.05234528 246.80928040]
[-62.92083740 251.87237549]
[-49.32554626 258.23654175]
[-36.38594818 265.84582520]
[-35.20886230 250.99780273]
[-20.85748482 244.33834839]
[-12.07688141 232.17687988]
[-3.29627824 220.01542664]
[5.48432493 207.85397339]
[14.08288860 195.56314087]
[22.49750710 183.14564514]
[30.91212654 170.72814941]
[16.40335464 174.53544617]
[2.38616204 169.19519043]
[-5.91138649 156.69917297]
[-5.39450979 141.70808411]
[3.74400973 129.81323242]
[18.09572983 125.45110321]
[32.30781555 130.24867249]
[41.07950592 142.41654968]
[41.13883209 157.41755676]
[50.96940994 146.08795166]
[60.79999161 134.75836182]
[70.54595947 123.35590363]
[80.20677185 111.88120270]
[89.86757660 100.40650177]
[92.23733521 92.70216370]
[99.75865173 88.83426666]
[109.58923340 77.50467682]
[119.41981506 66.17507935]
[129.25039673 54.84548950]
[139.08097839 43.51589584]
[148.21977234 31.62126350]
[156.63439941 19.20376778]
[154.97142029 6.41325188]
[162.23561096 -3.75607657]
[174.08894348 -6.16961718]
[182.68750000 -18.46045494]
[191.28607178 -30.75129318]
[193.64118958 -39.57689285]
[200.10527039 -43.15981674]
[208.88587952 -55.32127380]
[206.57000732 -70.72499084]
[215.64802551 -82.93334961]
[230.34739685 -85.04625702]
[239.12799072 -97.20771027]
[247.90859985 -109.36916351]
[256.68920898 -121.53062439]
[245.53680420 -131.58403015]
[235.53675842 -142.78431702]
[226.80632019 -155.00016785]
[219.44784546 -168.08833313]
[213.54762268 -181.89538574]
[209.17481995 -196.25942993]
[206.38069153 -211.01205444]
[205.19802856 -225.98030090]
[205.64067078 -240.98867798]
[207.70343018 -255.86122131]
[211.36213684 -270.42352295]
[216.57386780 -284.50491333]
[223.27755737 -297.94021606]
[231.39457703 -310.57199097]
[240.82977295 -322.25207520]
[251.47251892 -332.84353638]
[263.19802856 -342.22219849]
[275.86883545 -350.27813721]
[289.33636475 -356.91687012]
[303.44274902 -362.06054688]
[318.02255249 -365.64886475]
[332.90487671 -367.63980103]
[347.91522217 -368.00994873]
[362.87759399 -366.75500488]
[377.61654663 -363.88967896]
[391.95932007 -359.44754028]
[405.73770142 -353.48071289]
[418.79019165 -346.05914307]
[430.96371460 -337.26980591]
[442.11560059 -327.21578979]
[452.11502075 -316.01495361]
[460.84481812 -303.79864502]
[468.20257568 -290.71008301]
[474.10205078 -276.90274048]
[478.47409058 -262.53845215]
[481.26742554 -247.78565979]
[482.44927979 -232.81735229]
[482.00582886 -217.80900574]
[479.94226074 -202.93656921]
[476.28277588 -188.37445068]
[471.07028198 -174.29336548]
[464.36587524 -160.85839844]
[456.24816895 -148.22708130]
[446.81234741 -136.54751587]
[436.16903687 -125.95661163]
[424.44302368 -116.57856750]
[411.77178955 -108.52332306]
[398.30389404 -101.88532257]
[384.19723511 -96.74240112]
[369.61721802 -93.15485382]
[354.73480225 -91.16473389]
[339.72445679 -90.79538727]
[324.76214600 -92.05113220]
[310.02334595 -94.91725922]
[295.68081665 -99.36015320]
[281.90274048 -105.32772827]
[268.85064697 -112.75002289]
[260.07006836 -100.58856201]
[251.28944397 -88.42710876]
[242.50885010 -76.26565552]
[245.12881470 -61.64815140]
[236.39727783 -49.18962097]
[221.04733276 -46.54067230]
[212.26672363 -34.37921524]
[203.57690430 -22.15272903]
[194.97834778 -9.86189079]
[186.37977600 2.42894673]
[185.80180359 19.96841240]
[169.05189514 27.61838722]
[160.63726807 40.03588104]
[175.14604187 36.22858047]
[189.16323853 41.56883240]
[197.46078491 54.06485748]
[196.94390869 69.05595398]
[187.80538940 80.95079803]
[173.45367432 85.31292725]
[159.24157715 80.51535797]
[150.46989441 68.34747314]
[150.41056824 53.34647751]
[140.57998657 64.67607117]
[130.74940491 76.00566101]
[120.91882324 87.33525848]
[111.08824158 98.66484833]
[101.34227753 110.06731415]
[91.68146515 121.54201508]
[82.02066040 133.01670837]
[78.88755035 141.59700012]
[72.12958527 144.58894348]
[62.29900360 155.91853333]
[52.46842575 167.24813843]
[43.32962036 179.14276123]
[34.91500473 191.56025696]
[26.50038528 203.97775269]
[25.64498138 210.53366089]
[22.13416481 215.00256348]
[17.64578056 216.63458252]
[8.86517715 228.79603577]
[0.08457437 240.95748901]
[-8.69602871 253.11894226]
[-10.50116253 268.83682251]
[-24.22449303 274.62643433]
[-12.92998409 284.51422119]
[-2.61102295 295.41622925]
[6.64170504 307.23660278]
[14.74688530 319.87152100]
[21.63328552 333.20986938]
[27.24039078 347.13449097]
[31.51891899 361.52297974]
[34.43127441 376.24890137]
[35.95185852 391.18283081]
[36.06731033 406.19351196]
[34.77661514 421.14907837]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 199]
[56 197]
[57 196]
[58 195]
[59 194]
[60 191]
[61 190]
[62 189]
[71 188]
[72 187]
[73 186]
[74 184]
[75 183]
[76 182]
[78 181]
[79 180]
[80 179]
[81 178]
[82 177]
[83 168]
[84 167]
[87 165]
[88 164]
[89 163]
[91 162]
[92 161]
[95 158]
[96 157]
[97 156]
[98 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
