%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUACUCUCAUUAUCUAUCCCGAGUCCGCAAACACAUACUAUACAAACGCCAAAGCUACUACACCAGAAACCUCAUCUUUGGACACUCCUUUCCAUAAxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[36.22679520 320.03314209]
[40.75330734 334.36114502]
[43.19457626 349.18750000]
[43.50090027 364.21035767]
[41.66604233 379.12393188]
[37.72735977 393.62454224]
[31.76504135 407.41696167]
[23.90046692 420.22045898]
[14.29375076 431.77432251]
[3.14047527 441.84335327]
[-9.33229446 450.22253418]
[-22.87062836 456.74130249]
[-37.19890594 461.26690674]
[-52.02541733 463.70727539]
[-67.04831696 464.01266479]
[-81.96175385 462.17687988]
[-96.46211243 458.23730469]
[-110.25418854 452.27413940]
[-123.05718994 444.40875244]
[-134.61045837 434.80133057]
[-144.67878723 423.64743042]
[-153.05720520 411.17413330]
[-159.57513428 397.63540649]
[-164.09986877 383.30685425]
[-166.53930664 368.48019409]
[-166.84376526 353.45727539]
[-165.00706482 338.54394531]
[-161.06658936 324.04382324]
[-155.10255432 310.25213623]
[-147.23640442 297.44961548]
[-137.62825012 285.89694214]
[-126.47373199 275.82928467]
[-113.99992371 267.45166016]
[-100.46078491 260.93457031]
[-86.13195038 256.41070557]
[-71.30513763 253.97219849]
[-56.28219604 253.66867065]
[-41.36898422 255.50628662]
[-26.86911201 259.44766235]
[-13.07777596 265.41253662]
[-5.22602034 252.63169861]
[2.62573504 239.85086060]
[10.47749043 227.07002258]
[11.30031204 219.72531128]
[18.54249191 214.15856934]
[26.58366585 201.49603271]
[34.62483978 188.83351135]
[42.66601181 176.17098999]
[42.95724106 161.27923584]
[56.88679504 153.77735901]
[64.92797089 141.11483765]
[72.96913910 128.45231628]
[81.01031494 115.78978729]
[89.05149078 103.12725830]
[74.88473511 108.05706787]
[60.27708435 104.64875793]
[49.75488281 93.95841980]
[46.57854462 79.29858398]
[51.73229599 65.21174622]
[63.61918640 56.06288147]
[78.55593872 54.68685532]
[91.91423798 61.51004791]
[99.55486298 74.41821289]
[99.11020660 89.41187286]
[108.77101898 77.93717194]
[118.43183136 66.46247101]
[128.09263611 54.98777008]
[137.75344849 43.51307297]
[147.41426086 32.03837204]
[155.17065430 19.19943047]
[160.83343506 5.30940342]
[166.49623108 -8.58062363]
[172.15901184 -22.47064972]
[177.82179260 -36.36067581]
[183.48458862 -50.25070572]
[189.14736938 -64.14073181]
[187.19244385 -79.84069061]
[199.16198730 -88.70519257]
[204.82476807 -102.59522247]
[191.41476440 -109.33358002]
[178.57476807 -117.10331726]
[166.38397217 -125.85652924]
[154.91754150 -135.53923035]
[144.24613953 -146.09173584]
[134.43559265 -157.44898987]
[125.54637146 -169.54096985]
[117.63328552 -182.29310608]
[110.74511719 -195.62680054]
[104.92434692 -209.45983887]
[100.20684814 -223.70690918]
[96.62171173 -238.28021240]
[94.19104767 -253.08985901]
[92.92983246 -268.04458618]
[92.84584808 -283.05215454]
[93.93960571 -298.02001953]
[96.20436859 -312.85595703]
[99.62617493 -327.46847534]
[104.18392181 -341.76745605]
[109.84951019 -355.66476440]
[116.58801270 -369.07470703]
[124.35787964 -381.91461182]
[133.11120605 -394.10531616]
[142.79403687 -405.57168579]
[153.34664917 -416.24295044]
[164.70401001 -426.05340576]
[176.79606628 -434.94250488]
[189.54829407 -442.85543823]
[202.88204956 -449.74346924]
[216.71514893 -455.56411743]
[230.96226501 -460.28146362]
[245.53559875 -463.86645508]
[260.34527588 -466.29696655]
[275.30001831 -467.55801392]
[290.30758667 -467.64184570]
[305.27545166 -466.54794312]
[320.11135864 -464.28302002]
[334.72384644 -460.86108398]
[349.02276611 -456.30319214]
[362.92004395 -450.63745117]
[376.32992554 -443.89880371]
[389.16973877 -436.12881470]
[401.36035156 -427.37536621]
[412.82659912 -417.69241333]
[423.49777222 -407.13967896]
[433.30810547 -395.78222656]
[442.19708252 -383.69006348]
[450.10989380 -370.93777466]
[456.99777222 -357.60394287]
[462.81826782 -343.77078247]
[467.53549194 -329.52362061]
[471.12033081 -314.95025635]
[473.55068970 -300.14053345]
[474.81158447 -285.18582153]
[474.89526367 -270.17825317]
[473.80120850 -255.21037292]
[471.53613281 -240.37448120]
[468.11404419 -225.76203918]
[463.55599976 -211.46315002]
[457.89013672 -197.56596375]
[451.15133667 -184.15614319]
[443.38122559 -171.31640625]
[434.62765503 -159.12586975]
[424.94458008 -147.65972900]
[414.39175415 -136.98866272]
[403.03417969 -127.17845917]
[390.94195557 -118.28960419]
[378.18957520 -110.37690735]
[364.85565186 -103.48915100]
[351.02246094 -97.66880035]
[336.77523804 -92.95174408]
[322.20181274 -89.36705017]
[307.39208984 -86.93683624]
[292.43734741 -85.67608643]
[277.42977905 -85.59255981]
[262.46191406 -86.68677521]
[247.62605286 -88.95199585]
[233.01364136 -92.37424469]
[218.71479797 -96.93243408]
[213.05201721 -83.04240417]
[215.41198730 -68.33595276]
[203.03739929 -58.47794342]
[197.37461853 -44.58791733]
[191.71182251 -30.69789124]
[186.04904175 -16.80786324]
[180.38624573 -2.91783667]
[174.72346497 10.97218990]
[169.06068420 24.86221695]
[180.38218689 15.02233505]
[193.91490173 8.55195808]
[208.68186951 5.91818905]
[223.61705017 7.31116152]
[237.64225769 12.63031578]
[249.74501038 21.49165726]
[259.05160522 33.25547791]
[264.89016724 47.07253647]
[266.83923340 61.94536972]
[264.75805664 76.80029297]
[258.79693604 90.56491852]
[249.38616943 102.24556732]
[237.20513916 110.99900055]
[223.13320923 116.19329834]
[208.18623352 117.45348358]
[193.44326782 114.68858337]
[179.96859741 108.09819031]
[168.73497009 98.15808105]
[160.55337524 85.58583832]
[156.01441956 71.28905487]
[155.44580078 56.29983902]
[158.88896179 41.69918060]
[149.22814941 53.17388153]
[139.56733704 64.64858246]
[129.90652466 76.12328339]
[120.24571991 87.59798431]
[110.58490753 99.07268524]
[101.71401215 111.16843414]
[93.67283630 123.83095551]
[85.63166809 136.49348450]
[77.59049225 149.15600586]
[69.54932404 161.81852722]
[68.68292999 177.61599731]
[55.32853699 184.21215820]
[47.28736496 196.87467957]
[39.24618912 209.53721619]
[31.20501709 222.19973755]
[23.25833321 234.92176819]
[15.40657711 247.70262146]
[7.55482197 260.48345947]
[-0.29693338 273.26431274]
[11.25752544 282.87030029]
[21.32723808 294.02294922]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 208]
[41 207]
[42 206]
[43 205]
[45 204]
[46 203]
[47 202]
[48 201]
[50 199]
[51 198]
[52 197]
[53 196]
[54 195]
[64 194]
[65 193]
[66 192]
[67 191]
[68 190]
[69 189]
[70 167]
[71 166]
[72 165]
[73 164]
[74 163]
[75 162]
[76 161]
[78 159]
[79 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
