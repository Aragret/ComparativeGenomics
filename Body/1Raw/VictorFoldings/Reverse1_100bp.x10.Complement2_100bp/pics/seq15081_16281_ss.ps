%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACACCGGGGAGUCUUACUAUAAACCGGAGUGCCCUCCUGUAUCGGAUACUUCCGACAACGAUAUCAACGUUCGUCCUCCUAUUACGGCUACAAAGUCxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[8.24348164 404.58465576]
[14.34971428 418.32379150]
[18.11113167 432.88064575]
[19.42511940 447.85806274]
[18.25582886 462.84747314]
[14.63516235 477.43997192]
[8.66189289 491.23742676]
[0.49897560 503.86346436]
[-9.63089943 514.97363281]
[-21.45138168 524.26477051]
[-34.63999939 531.48352051]
[-48.83695602 536.43292236]
[-63.65494919 538.97790527]
[-78.68973541 539.04901123]
[-93.53115845 536.64440918]
[-107.77432251 531.82965088]
[-121.03067017 524.73602295]
[-132.93855286 515.55712891]
[-143.17312622 504.54336548]
[-151.45516968 491.99514771]
[-157.55876160 478.25485229]
[-161.31736755 463.69726562]
[-162.62847900 448.71960449]
[-161.45629883 433.73040771]
[-157.83282471 419.13861084]
[-151.85688782 405.34231567]
[-143.69154358 392.71786499]
[-133.55952454 381.60964966]
[-121.73725128 372.32073975]
[-108.54724884 365.10455322]
[-94.34933472 360.15789795]
[-79.53085327 357.61578369]
[-64.49604797 357.54754639]
[-49.65509415 359.95501709]
[-35.41286087 364.77255249]
[-28.33575439 351.54702759]
[-21.25864792 338.32147217]
[-14.18154335 325.09594727]
[-7.10443783 311.87042236]
[-0.02733226 298.64489746]
[-0.84450781 283.77273560]
[12.48850250 275.25561523]
[19.56560707 262.03009033]
[26.64271355 248.80455017]
[33.12220764 235.27621460]
[38.99116898 221.47203064]
[36.85042191 206.73207092]
[49.37040710 197.05940247]
[47.22966003 182.31942749]
[59.74964142 172.64675903]
[59.47383499 165.26124573]
[65.81011200 158.68177795]
[71.88394928 144.96652222]
[77.95777893 131.25125122]
[84.03161621 117.53598022]
[90.10544586 103.82071686]
[95.45663452 89.80769348]
[100.07064819 75.53495789]
[104.68465424 61.26222610]
[109.29866028 46.98949432]
[113.48567200 32.58571243]
[117.24197388 18.06365204]
[120.99827576 3.54159307]
[124.75457764 -10.98046589]
[128.51087952 -25.50252533]
[132.26718140 -40.02458572]
[136.02348328 -54.54664230]
[136.47007751 -69.53999329]
[133.58480835 -84.25988770]
[130.69953918 -98.97977448]
[126.64920044 -104.20532227]
[125.95072937 -109.84527588]
[127.95436096 -114.18054199]
[125.50863647 -128.97981262]
[123.06291199 -143.77908325]
[119.16995239 -149.12289429]
[118.63970947 -154.78115845]
[120.77153778 -159.05484009]
[118.76752472 -173.92036438]
[109.25586700 -186.56311035]
[115.22342682 -200.20999146]
[113.21941376 -215.07553101]
[111.21540070 -229.94105530]
[109.21138763 -244.80657959]
[107.20737457 -259.67211914]
[105.20336151 -274.53762817]
[96.17885590 -262.55606079]
[81.59290314 -259.05606079]
[68.11400604 -265.63778687]
[61.90452957 -279.29220581]
[65.80336761 -293.77664185]
[78.02803040 -302.46902466]
[92.98954773 -301.39535522]
[103.84856415 -291.04476929]
[103.40196228 -306.03811646]
[102.95535278 -321.03149414]
[102.50875092 -336.02484131]
[88.28556061 -341.38851929]
[77.20106506 -351.79055786]
[70.94557190 -365.64471436]
[70.47299194 -380.83828735]
[75.85540009 -395.05441284]
[86.27201080 -406.12521362]
[100.13436890 -412.36248779]
[115.32856750 -412.81506348]
[129.53759766 -407.41397095]
[140.59468079 -396.98281860]
[146.81370544 -383.11224365]
[147.24630737 -367.91748047]
[141.82652283 -353.71557617]
[131.38081360 -342.67221069]
[117.50209808 -336.47143555]
[117.94869995 -321.47808838]
[118.39530945 -306.48474121]
[118.84191132 -291.49139404]
[120.06889343 -276.54165649]
[122.07290649 -261.67611694]
[124.07691956 -246.81059265]
[126.08093262 -231.94506836]
[128.08494568 -217.07954407]
[130.08895874 -202.21400452]
[139.45727539 -190.63455200]
[133.63305664 -175.92437744]
[135.63706970 -161.05885315]
[137.86218262 -146.22480774]
[140.30790710 -131.42553711]
[142.75363159 -116.62626648]
[145.41943359 -101.86505127]
[148.30470276 -87.14515686]
[151.18997192 -72.42527008]
[155.14126587 -86.89549255]
[161.80345154 -100.33480835]
[170.92747498 -112.24077606]
[182.17222595 -122.16828918]
[195.11732483 -129.74618530]
[209.27879333 -134.69117737]
[224.12718201 -136.81838989]
[239.10740662 -136.04829407]
[253.65939331 -132.40966797]
[267.23910522 -126.03855133]
[279.33889771 -117.17314148]
[289.50634766 -106.14487457]
[297.36138916 -93.36604309]
[302.61032104 -79.31439972]
[305.05691528 -64.51527405]
[304.60971069 -49.52193832]
[301.28546143 -34.89493561]
[295.20837402 -21.18110657]
[286.60568237 -8.89314842]
[275.79904175 1.50954127]
[263.19238281 9.63805199]
[249.25709534 15.18849277]
[234.51411438 17.95335579]
[219.51461792 17.82927704]
[204.81939697 14.82089138]
[190.97782898 9.04067230]
[178.50738525 0.70471752]
[167.87429810 -9.87532806]
[159.47607422 -22.30392265]
[153.62670898 -36.11641312]
[150.54553223 -50.79034424]
[146.78923035 -36.26828384]
[143.03294373 -21.74622536]
[139.27664185 -7.22416544]
[135.52033997 7.29789400]
[131.76403809 21.81995392]
[128.00773621 36.34201050]
[129.31253052 38.82307053]
[129.71316528 41.97046661]
[128.95092773 45.44240952]
[126.89546204 48.80984116]
[123.57139587 51.60350418]
[118.95738983 65.87623596]
[114.34337616 80.14897156]
[109.72937012 94.42169952]
[123.04412079 87.51392365]
[137.71092224 90.65795135]
[147.02430725 102.41638947]
[146.72633362 117.41342926]
[136.95321655 128.79263306]
[122.17310333 131.35157776]
[109.14325714 123.92034149]
[103.82071686 109.89455414]
[97.74687958 123.60981750]
[91.67304993 137.32508850]
[85.59921265 151.04034424]
[79.52538300 164.75561523]
[73.55381775 178.51571655]
[75.27478027 194.24304199]
[63.17458344 202.92835999]
[64.89553833 218.65568542]
[52.79534531 227.34098816]
[46.92638779 241.14517212]
[61.20624161 236.55325317]
[74.61301422 243.28068542]
[79.46669006 257.47372437]
[72.98686981 271.00189209]
[58.88548660 276.11569214]
[45.24045181 269.88568115]
[39.86824036 255.88165283]
[32.79113388 269.10717773]
[25.71402931 282.33270264]
[26.02500343 298.15087891]
[13.19819546 305.72201538]
[6.12108994 318.94754028]
[-0.95601559 332.17306519]
[-8.03312111 345.39859009]
[-15.11022663 358.62411499]
[-22.18733215 371.84963989]
[-10.27767658 381.02624512]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 209]
[36 208]
[37 207]
[38 206]
[39 205]
[40 204]
[42 202]
[43 201]
[44 200]
[45 193]
[46 192]
[48 190]
[50 188]
[52 187]
[53 186]
[54 185]
[55 184]
[56 183]
[57 175]
[58 174]
[59 173]
[60 172]
[61 167]
[62 166]
[63 165]
[64 164]
[65 163]
[66 162]
[67 161]
[68 130]
[69 129]
[70 128]
[73 127]
[74 126]
[75 125]
[78 124]
[79 123]
[81 121]
[82 120]
[83 119]
[84 118]
[85 117]
[86 116]
[94 115]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
