%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[35.08564758 605.00494385]
[21.02590179 610.29443359]
[6.39601135 613.70343018]
[-8.55368900 615.17364502]
[-23.56739044 614.67987061]
[-38.38818741 612.23059082]
[-52.76247787 607.86767578]
[-66.44429779 601.66583252]
[-79.19953156 593.73114014]
[-90.80992126 584.19946289]
[-101.07680511 573.23376465]
[-109.82449341 561.02178955]
[-116.90330505 547.77239990]
[-122.19211578 533.71240234]
[-125.60042572 519.08233643]
[-127.06990814 504.13259888]
[-126.57542419 489.11889648]
[-124.12543488 474.29821777]
[-119.76186371 459.92413330]
[-113.55937195 446.24261475]
[-105.62409210 433.48776245]
[-96.09181213 421.87783813]
[-85.12564087 411.61145020]
[-72.91323090 402.86434937]
[-59.66353607 395.78616333]
[-45.60328674 390.49804688]
[-30.97307205 387.09042358]
[-16.02323151 385.62164307]
[-1.00957751 386.11685181]
[1.43614984 371.31756592]
[3.88187718 356.51831055]
[6.10699463 341.68426514]
[8.11100769 326.81872559]
[10.11502171 311.95321655]
[12.11903572 297.08767700]
[14.12304878 282.22213745]
[5.49677134 294.49356079]
[-6.32646942 303.72454834]
[-20.32384491 309.11651611]
[-35.28444290 310.20303345]
[-49.91402054 306.89010620]
[-62.94697189 299.46435547]
[-73.25582123 288.56811523]
[-79.94874573 275.14407349]
[-82.44673920 260.35354614]
[-80.53370667 245.47602844]
[-74.37513733 231.79861450]
[-64.50381470 220.50450134]
[-51.77370071 212.57075500]
[-37.28608322 208.68373108]
[-22.29428482 209.17968750]
[-8.09524441 214.01573181]
[4.08267736 222.77348328]
[13.18596935 234.69531250]
[18.42710495 248.74986267]
[19.35297775 263.71777344]
[25.42681122 250.00251770]
[31.50064468 236.28724670]
[37.57447815 222.57197571]
[35.65342712 207.80177307]
[48.31603241 198.31657410]
[54.38986588 184.60131836]
[60.46369934 170.88604736]
[66.53753662 157.17077637]
[72.61136627 143.45550537]
[78.68520355 129.74024963]
[84.75903320 116.02497864]
[90.83287048 102.30971527]
[90.10021210 97.11576080]
[92.32978058 91.88103485]
[97.29714966 88.28073120]
[96.28017426 72.49224854]
[108.75611877 64.35590363]
[115.23561096 50.82756042]
[121.71511078 37.29921341]
[121.31219482 32.09491348]
[122.79734039 27.69631767]
[125.54747009 24.68769073]
[128.79791260 23.32133102]
[135.87501526 10.09580326]
[142.95213318 -3.12972379]
[139.96751404 -15.67782593]
[146.13432312 -26.54770279]
[157.67224121 -30.18130493]
[164.94546509 -43.29999924]
[172.21870422 -56.41869354]
[179.49192810 -69.53738403]
[167.04884338 -77.93136597]
[155.38468933 -87.37789154]
[144.58824158 -97.80508423]
[134.74168396 -109.13356781]
[125.91995239 -121.27714539]
[118.19017792 -134.14337158]
[111.61119843 -147.63435364]
[106.23307800 -161.64738464]
[102.09674835 -176.07583618]
[99.23369598 -190.80989075]
[97.66570282 -205.73741150]
[97.40470886 -220.74478149]
[98.45269775 -235.71778870]
[100.80169678 -250.54248047]
[104.43382263 -265.10604858]
[109.32143402 -279.29760742]
[115.42733765 -293.00918579]
[122.70506287 -306.13641357]
[131.09921265 -318.57937622]
[140.54589844 -330.24340820]
[150.97325134 -341.03970337]
[162.30187988 -350.88607788]
[174.44557190 -359.70764160]
[187.31190491 -367.43725586]
[200.80297852 -374.01605225]
[214.81608582 -379.39398193]
[229.24459839 -383.53009033]
[243.97868347 -386.39294434]
[258.90621948 -387.96072388]
[273.91360474 -388.22149658]
[288.88659668 -387.17330933]
[303.71127319 -384.82409668]
[318.27474976 -381.19177246]
[332.46624756 -376.30395508]
[346.17776489 -370.19787598]
[359.30487061 -362.91995239]
[371.74774170 -354.52563477]
[383.41162109 -345.07876587]
[394.20776367 -334.65127563]
[404.05401611 -323.32250977]
[412.87539673 -311.17871094]
[420.60482788 -298.31225586]
[427.18341064 -284.82107544]
[432.56115723 -270.80789185]
[436.69708252 -256.37933350]
[439.55972290 -241.64520264]
[441.12728882 -226.71765137]
[441.38784790 -211.71026611]
[440.33944702 -196.73727417]
[437.99002075 -181.91265869]
[434.35748291 -167.34919739]
[429.46948242 -153.15777588]
[423.36318970 -139.44636536]
[416.08511353 -126.31934357]
[407.69061279 -113.87660217]
[398.24359131 -102.21285248]
[387.81594849 -91.41684723]
[376.48703003 -81.57077026]
[364.34310913 -72.74954224]
[351.47653198 -65.02031708]
[337.98529053 -58.44189835]
[323.97201538 -53.06436539]
[309.54339600 -48.92864609]
[294.80923462 -46.06621170]
[279.88165283 -44.49884796]
[264.87426758 -44.23848724]
[249.90129089 -45.28710556]
[235.07670593 -47.63672638]
[220.51330566 -51.26946640]
[206.32194519 -56.15767670]
[192.61062622 -62.26415634]
[185.33738708 -49.14546204]
[178.06416321 -36.02677155]
[170.79093933 -22.90807533]
[172.04080200 -5.40365505]
[156.17765808 3.94738173]
[149.10055542 17.17290878]
[142.02343750 30.39843750]
[135.24345398 43.77870941]
[128.76396179 57.30705643]
[122.28446198 70.83540344]
[123.76490021 85.65625000]
[110.82550049 94.76023102]
[104.54813385 108.38354492]
[98.47430420 122.09881592]
[92.40046692 135.81408691]
[86.32663727 149.52934265]
[80.25279999 163.24461365]
[74.17897034 176.95988464]
[68.10513306 190.67514038]
[62.03129959 204.39041138]
[63.51791000 220.14161682]
[51.28974533 228.64581299]
[45.21591187 242.36108398]
[39.14207840 256.07635498]
[33.06824493 269.79162598]
[28.98857689 284.22616577]
[26.98456383 299.09170532]
[24.98055077 313.95721436]
[22.97653580 328.82275391]
[20.97252274 343.68826294]
[23.12627602 349.93911743]
[21.97305107 355.50390625]
[18.68114853 358.96401978]
[16.23542023 373.76330566]
[13.78969288 388.56259155]
[28.16439819 392.92410278]
[41.84680939 399.12463379]
[54.60279846 407.05810547]
[66.21409607 416.58871460]
[76.48202515 427.55340576]
[85.23087311 439.76458740]
[92.31095123 453.01327515]
[97.60109711 467.07275391]
[101.01079559 481.70248413]
[102.48170471 496.65213013]
[101.98865509 511.66583252]
[99.54006958 526.48675537]
[95.17786407 540.86126709]
[88.97667694 554.54339600]
[81.04261780 567.29895020]
[71.51144409 578.90985107]
[60.54624939 589.17724609]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 193]
[30 192]
[31 191]
[32 188]
[33 187]
[34 186]
[35 185]
[36 184]
[56 183]
[57 182]
[58 181]
[59 180]
[61 178]
[62 177]
[63 176]
[64 175]
[65 174]
[66 173]
[67 172]
[68 171]
[71 170]
[73 168]
[74 167]
[75 166]
[79 165]
[80 164]
[81 163]
[84 161]
[85 160]
[86 159]
[87 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
