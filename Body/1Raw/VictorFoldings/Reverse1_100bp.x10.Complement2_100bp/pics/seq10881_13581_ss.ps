%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[127.01499939 630.45196533]
[126.56839752 615.45861816]
[126.12178802 600.46527100]
[125.67518616 585.47192383]
[110.49581909 582.57171631]
[96.33261871 576.37139893]
[83.89354706 567.17767334]
[73.80117798 555.44671631]
[66.56144714 541.76196289]
[62.53835297 526.80480957]
[61.93564606 511.32077026]
[64.78648376 496.08242798]
[70.95165253 481.85073853]
[80.12634277 469.33709717]
[91.85523987 459.16775513]
[105.55509949 451.85250854]
[120.54373932 447.75909424]
[119.87395477 432.77404785]
[119.20417023 417.78900146]
[118.53438568 402.80398560]
[117.86460114 387.81893921]
[117.19481659 372.83389282]
[116.52503204 357.84884644]
[107.81266785 349.45712280]
[107.13202667 336.97830200]
[115.39257812 327.07244873]
[114.94596863 312.07910156]
[114.49936676 297.08575439]
[106.38655090 284.59448242]
[113.70954132 270.57006836]
[113.26293945 255.57672119]
[112.81632996 240.58337402]
[112.36972809 225.59001160]
[111.25407410 210.63156128]
[109.47161102 195.73785400]
[107.68914032 180.84413147]
[105.35366058 166.02706909]
[102.46838379 151.30717468]
[99.58311462 136.58728027]
[96.69783783 121.86738586]
[93.81256866 107.14749908]
[90.23486328 103.31161499]
[89.06100464 97.74426270]
[91.06739044 91.94673157]
[88.62166595 77.14746094]
[86.17593384 62.34819412]
[83.73020935 47.54892349]
[79.83724976 42.20510483]
[79.30700684 36.54684830]
[81.43883514 32.27316284]
[79.43482208 17.40763664]
[77.43080902 2.54210806]
[74.23892212 -1.58814168]
[73.06762695 -6.08050966]
[73.71649933 -10.10468864]
[75.68460846 -13.03024578]
[74.34637451 -27.97043037]
[73.00814056 -42.91061401]
[57.59200668 -45.23302841]
[43.18476105 -51.16683197]
[30.61870766 -60.36472321]
[20.61870956 -72.29096222]
[13.76037216 -86.25257111]
[10.43691349 -101.43962860]
[10.83662319 -116.97220612]
[14.93219757 -131.95138550]
[22.48256302 -145.51127625]
[33.04706192 -156.86904907]
[46.01116943 -165.37016296]
[60.62223053 -170.52604675]
[59.06171036 -185.44465637]
[57.50118637 -200.36326599]
[55.94066238 -215.28186035]
[52.37267685 -220.84791565]
[52.18016052 -226.52770996]
[54.56258011 -230.66693115]
[53.44692993 -245.62538147]
[52.33128357 -260.58383179]
[51.21563339 -275.54229736]
[38.18362045 -283.75646973]
[32.55303574 -297.90390015]
[36.28844833 -312.48165894]
[47.75431442 -321.95117188]
[46.63866425 -336.90963745]
[45.52301407 -351.86807251]
[44.40736771 -366.82653809]
[30.01536179 -371.63754272]
[18.59253693 -381.56539917]
[11.85912228 -395.07373047]
[10.81331444 -410.09017944]
[15.58341217 -424.32431030]
[25.41300201 -435.61700439]
[38.78071594 -442.26782227]
[37.66506958 -457.22628784]
[36.54941940 -472.18472290]
[22.01947784 -476.57165527]
[10.05786324 -485.91427612]
[2.28228593 -498.94903564]
[-0.25567159 -513.91308594]
[2.78722882 -528.78271484]
[10.99946022 -541.54687500]
[23.27038574 -550.47930908]
[37.94046402 -554.37200928]
[53.02568436 -552.69854736]
[66.48590088 -545.68518066]
[76.50071716 -534.28045654]
[81.71572876 -520.02679443]
[81.42563629 -504.85177612]
[75.66967773 -490.80780029]
[65.22629547 -479.79415894]
[51.50787354 -473.30038452]
[52.62352371 -458.34191895]
[53.73917007 -443.38348389]
[67.94557953 -438.78921509]
[79.34158325 -429.07962036]
[86.17041779 -415.71054077]
[87.36373901 -400.70507812]
[82.70866394 -386.34738159]
[72.88492584 -374.83489990]
[59.36582184 -367.94216919]
[60.48146820 -352.98373413]
[61.59711838 -338.02526855]
[62.71276474 -323.06683350]
[75.45649719 -315.40292358]
[81.31306458 -301.54058838]
[77.84342194 -286.71441650]
[66.17408752 -276.65792847]
[67.28973389 -261.69949341]
[68.40538788 -246.74102783]
[69.52103424 -231.78257751]
[70.85926819 -216.84239197]
[72.41979218 -201.92378235]
[73.98031616 -187.00517273]
[75.54084015 -172.08657837]
[89.88584900 -170.31785583]
[103.48220062 -165.39196777]
[115.64389801 -157.55386353]
[125.75654602 -147.19557190]
[133.30838013 -134.83645630]
[137.91613770 -121.09730530]
[139.34454346 -106.66909790]
[137.51834106 -92.27825165]
[132.52616882 -78.65005493]
[124.61634827 -66.47210693]
[114.18447113 -56.35963440]
[101.75366974 -48.82440948]
[87.94832611 -44.24884796]
[89.28656006 -29.30866432]
[90.62479401 -14.36847973]
[92.29633331 0.53809434]
[94.30034637 15.40362263]
[96.30435944 30.26915169]
[98.52947998 45.10319519]
[100.97520447 59.90246582]
[103.42093658 74.70173645]
[105.86666107 89.50100708]
[108.53245544 104.26222229]
[111.41773224 118.98211670]
[114.30300140 133.70201111]
[117.18827820 148.42190552]
[120.07354736 163.14178467]
[130.48071289 152.33943176]
[145.42858887 153.58876038]
[153.89816284 165.96884155]
[149.64599609 180.35351562]
[135.80659485 186.13894653]
[122.58286285 179.06166077]
[124.36532593 193.95538330]
[126.14779663 208.84910583]
[136.24610901 197.75747681]
[151.22256470 196.91738892]
[162.49797058 206.81007385]
[163.61326599 221.76855469]
[153.92955017 233.22393799]
[138.99409485 234.61404419]
[127.36307526 225.14341736]
[127.80967712 240.13676453]
[128.25628662 255.13011169]
[128.70289612 270.12347412]
[136.84764099 283.68713379]
[129.49270630 296.63916016]
[129.93931580 311.63250732]
[130.38592529 326.62585449]
[140.42468262 342.06295776]
[131.51007080 357.17907715]
[132.17985535 372.16412354]
[132.84963989 387.14913940]
[133.51942444 402.13418579]
[134.18920898 417.11923218]
[134.85899353 432.10427856]
[135.52877808 447.08929443]
[149.89709473 449.56039429]
[163.42904663 454.96997070]
[175.53109741 463.07806396]
[185.67295837 473.52633667]
[193.41088867 485.85400391]
[198.40707397 499.51815796]
[200.44439697 513.91754150]
[199.43585205 528.41931152]
[195.42828369 542.38641357]
[188.60018921 555.20599365]
[179.25375366 566.31604004]
[167.80157471 575.23004150]
[154.74830627 581.55834961]
[140.66853333 585.02532959]
[141.11514282 600.01867676]
[141.56175232 615.01202393]
[142.00834656 630.00537109]
[148.52360535 645.65747070]
[135.28680420 656.25103760]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 208]
[2 207]
[3 206]
[4 205]
[17 191]
[18 190]
[19 189]
[20 188]
[21 187]
[22 186]
[23 185]
[26 183]
[27 182]
[28 181]
[30 179]
[31 178]
[32 177]
[33 176]
[34 169]
[35 168]
[36 167]
[37 161]
[38 160]
[39 159]
[40 158]
[41 157]
[44 156]
[45 155]
[46 154]
[47 153]
[50 152]
[51 151]
[52 150]
[56 149]
[57 148]
[58 147]
[70 134]
[71 133]
[72 132]
[73 131]
[76 130]
[77 129]
[78 128]
[79 127]
[83 123]
[84 122]
[85 121]
[86 120]
[93 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
