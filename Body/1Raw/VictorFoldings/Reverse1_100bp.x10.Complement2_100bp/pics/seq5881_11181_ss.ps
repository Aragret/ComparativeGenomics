%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[30.39149284 491.46661377]
[15.04792023 490.78082275]
[2.11154509 482.50158691]
[-4.93781281 468.85598755]
[-4.20391083 453.51464844]
[4.11583471 440.60427856]
[17.78345299 433.59771729]
[18.45323944 418.61267090]
[11.29195881 405.55261230]
[19.63775253 392.11169434]
[20.30753708 377.12664795]
[20.97732162 362.14163208]
[9.20567131 371.43829346]
[-5.70734596 369.82525635]
[-15.21887684 358.22653198]
[-13.88028526 343.28637695]
[-2.45837593 333.56320190]
[12.50386238 334.62689209]
[22.43506622 345.86721802]
[24.43908119 331.00167847]
[26.44309425 316.13613892]
[28.44710732 301.27062988]
[26.85672760 298.96218872]
[26.08492279 295.88470459]
[26.42919159 292.34680176]
[28.06992912 288.75897217]
[31.03847122 285.59008789]
[33.92374420 270.87020874]
[36.80901718 256.15029907]
[39.69429016 241.43041992]
[29.01145935 251.96023560]
[14.68592358 256.40759277]
[-0.08195453 253.77896118]
[-11.99299335 244.66154480]
[-18.38623810 231.09222412]
[-17.83341980 216.10241699]
[-10.45803928 203.04087830]
[2.09222293 194.82559204]
[17.01360703 193.29188538]
[30.97263908 198.78236389]
[40.85083389 210.07046509]
[44.44137573 224.63442993]
[49.68809509 210.58195496]
[54.93481445 196.52947998]
[60.18153000 182.47700500]
[53.24523544 171.61804199]
[53.83866882 158.55166626]
[61.96899796 148.05842590]
[74.84516907 144.10635376]
[80.30052185 130.13354492]
[85.75588226 116.16075134]
[91.21123505 102.18795776]
[90.17897797 98.47219849]
[90.78958130 94.31948853]
[93.20146942 90.47373199]
[97.23480225 87.72199249]
[103.30863953 74.00672150]
[109.38246918 60.29145813]
[115.35403442 46.53135681]
[121.22299194 32.72717667]
[127.09195709 18.92300224]
[113.91857910 26.09670830]
[98.95068359 25.11575890]
[86.82624817 16.28411102]
[81.30215454 2.33834600]
[84.09009552 -12.40028858]
[94.32621002 -23.36486626]
[108.83872223 -27.15789413]
[123.13076782 -22.60406113]
[132.77380371 -11.11441994]
[134.77980042 3.75109148]
[142.44039917 -9.14523506]
[150.10099792 -22.04156303]
[157.76158142 -34.93788910]
[157.82458496 -40.15738297]
[159.69622803 -44.40594101]
[162.70381165 -47.15721512]
[166.06320190 -48.22813416]
[167.16468811 -64.01095581]
[180.61581421 -70.40755463]
[188.84461975 -82.94895935]
[197.07342529 -95.49035645]
[198.17492676 -111.27317047]
[211.62605286 -117.66977692]
[219.85485840 -130.21118164]
[228.08366394 -142.75257874]
[236.31246948 -155.29397583]
[234.45924377 -168.05831909]
[241.57122803 -178.33467102]
[253.38731384 -180.92442322]
[261.80194092 -193.34191895]
[270.21655273 -205.75941467]
[258.61975098 -215.29037476]
[247.95185852 -225.85070801]
[238.30386353 -237.35029602]
[229.75807190 -249.69105530]
[222.38743591 -262.76766968]
[216.25479126 -276.46859741]
[211.41249084 -290.67694092]
[207.90184021 -305.27145386]
[205.75279236 -320.12765503]
[204.98368835 -335.11874390]
[205.60107422 -350.11685181]
[207.59970093 -364.99404907]
[210.96250916 -379.62332153]
[215.66079712 -393.87991333]
[221.65449524 -407.64221191]
[228.89245605 -420.79272461]
[237.31294250 -433.21932983]
[246.84410095 -444.81594849]
[257.40460205 -455.48367310]
[268.90435791 -465.13150024]
[281.24526978 -473.67706299]
[294.32202148 -481.04748535]
[308.02304077 -487.17990112]
[322.23144531 -492.02197266]
[336.82601929 -495.53237915]
[351.68225098 -497.68118286]
[366.67337036 -498.45004272]
[381.67147827 -497.83239746]
[396.54861450 -495.83352661]
[411.17785645 -492.47045898]
[425.43435669 -487.77194214]
[439.19653320 -481.77801514]
[452.34695435 -474.53982544]
[464.77340698 -466.11914062]
[476.36987305 -456.58779907]
[487.03741455 -446.02709961]
[496.68502808 -434.52719116]
[505.23040771 -422.18615723]
[512.60064697 -409.10928345]
[518.73278809 -395.40814209]
[523.57464600 -381.19964600]
[527.08477783 -366.60501099]
[529.23333740 -351.74874878]
[530.00195312 -336.75762939]
[529.38403320 -321.75952148]
[527.38494873 -306.88244629]
[524.02166748 -292.25326538]
[519.32287598 -277.99679565]
[513.32873535 -264.23474121]
[506.09033203 -251.08444214]
[497.66943359 -238.65812683]
[488.13787842 -227.06181335]
[477.57702637 -216.39443970]
[466.07693481 -206.74702454]
[453.73574829 -198.20185852]
[440.65878296 -190.83186340]
[426.95751953 -184.69990540]
[412.74896240 -179.85832214]
[398.15426636 -176.34840393]
[383.29797363 -174.20010376]
[368.30682373 -173.43173218]
[353.30874634 -174.04988098]
[338.43167114 -176.04924011]
[323.80255127 -179.41278076]
[309.54617310 -184.11178589]
[295.78421021 -190.10617065]
[282.63403320 -197.34478760]
[274.21942139 -184.92729187]
[265.80480957 -172.50979614]
[265.48803711 -154.96366882]
[248.85386658 -147.06517029]
[240.62506104 -134.52377319]
[232.39625549 -121.98236847]
[224.16744995 -109.44097137]
[223.65454102 -94.55519867]
[209.61483765 -87.26155090]
[201.38601685 -74.72014618]
[193.15721130 -62.17874908]
[192.64430237 -47.29297638]
[178.60459900 -39.99932861]
[170.65791321 -27.27729225]
[162.99731445 -14.38096523]
[155.33671570 -1.48463798]
[147.67611694 11.41168880]
[140.89613342 24.79196167]
[135.02717590 38.59613800]
[129.15820312 52.40031433]
[129.43402100 59.78582382]
[123.09774017 66.36529541]
[117.02390289 80.08055878]
[110.95007324 93.79582214]
[105.18403625 107.64331055]
[99.72867584 121.61611176]
[94.27332306 135.58891296]
[88.81796265 149.56170654]
[96.13404846 165.45176697]
[89.81871033 181.40267944]
[74.23400116 187.72372437]
[68.98728180 201.77619934]
[63.74056625 215.82867432]
[58.49384689 229.88113403]
[54.41418076 244.31568909]
[51.52890778 259.03558350]
[48.64363480 273.75546265]
[45.75836182 288.47537231]
[43.31263733 303.27462769]
[41.30862045 318.14016724]
[39.30460739 333.00570679]
[37.30059433 347.87121582]
[35.96236038 362.81140137]
[35.29257584 377.79644775]
[34.62279129 392.78149414]
[41.73616409 406.91339111]
[33.43827820 419.28247070]
[32.76849365 434.26751709]
[45.75651550 442.46548462]
[52.89128113 456.06661987]
[52.25356674 471.41226196]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 207]
[8 206]
[10 204]
[11 203]
[12 202]
[19 201]
[20 200]
[21 199]
[22 198]
[27 197]
[28 196]
[29 195]
[30 194]
[42 193]
[43 192]
[44 191]
[45 190]
[49 187]
[50 186]
[51 185]
[52 184]
[56 183]
[57 182]
[58 181]
[59 179]
[60 178]
[61 177]
[71 176]
[72 175]
[73 174]
[74 173]
[78 172]
[80 170]
[81 169]
[82 168]
[84 166]
[85 165]
[86 164]
[87 163]
[90 161]
[91 160]
[92 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
