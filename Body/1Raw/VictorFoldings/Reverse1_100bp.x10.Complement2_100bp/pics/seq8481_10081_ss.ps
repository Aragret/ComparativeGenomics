%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[46.45995712 613.76190186]
[31.40858078 616.53942871]
[16.79390717 611.99304199]
[5.97428226 601.16741943]
[1.43597651 586.55023193]
[4.22185850 571.50036621]
[13.69175339 559.47625732]
[27.66954803 553.24090576]
[28.56236458 538.26745605]
[29.45518112 523.29406738]
[16.60821724 517.64654541]
[6.43899012 507.93234253]
[0.18312261 495.30364990]
[-1.38965607 481.26840210]
[1.92984045 467.51019287]
[9.76269245 455.68652344]
[21.18500900 447.22885132]
[34.83686829 443.16955566]
[35.95251465 428.21112061]
[27.49191475 412.83630371]
[37.98584366 397.70489502]
[38.87865829 382.73150635]
[39.77147293 367.75808716]
[40.66429138 352.78469849]
[41.55710602 337.81127930]
[33.53063202 350.48312378]
[21.69658279 359.70025635]
[7.44520998 364.37982178]
[-7.54924774 363.97207642]
[-21.52525711 358.52496338]
[-32.84093094 348.67837524]
[-40.16691208 335.58905029]
[-42.64255905 320.79476929]
[-39.97702789 306.03350830]
[-32.48346329 293.03939819]
[-21.04220581 283.33901978]
[-6.99736118 278.07189941]
[8.00109768 277.85687256]
[22.19116592 282.71917725]
[33.90580750 292.08758545]
[41.76879883 304.86154175]
[44.85646057 319.54187012]
[49.25745773 305.20202637]
[53.65845490 290.86218262]
[58.05945587 276.52233887]
[62.46045303 262.18249512]
[66.86145020 247.84263611]
[71.26245117 233.50279236]
[74.58470917 218.87533569]
[76.80982208 204.04129028]
[79.03494263 189.20724487]
[81.26006317 174.37319946]
[75.49633789 160.63897705]
[85.19516754 148.13925171]
[79.43144989 134.40502930]
[89.13027954 121.90530396]
[91.35540009 107.07125854]
[93.47002411 92.22106171]
[95.47403717 77.35552979]
[97.47805023 62.49000549]
[99.48206329 47.62447739]
[90.17257690 35.13563538]
[92.41669464 20.08842278]
[104.38026428 11.29021168]
[106.38427734 -3.57531643]
[108.38829041 -18.44084549]
[98.28816986 -25.80666733]
[92.31282806 -36.70454407]
[91.54240417 -49.03685760]
[96.06185913 -60.45944977]
[104.95646667 -68.82717896]
[116.49619293 -72.59677887]
[118.94192505 -87.39604950]
[121.38764954 -102.19532013]
[116.00399017 -117.07237244]
[125.71291351 -128.36776733]
[128.15864563 -143.16703796]
[130.60437012 -157.96632385]
[133.05009460 -172.76559448]
[135.49581909 -187.56486511]
[137.94154358 -202.36413574]
[131.07847595 -213.28480530]
[133.42021179 -225.56080627]
[143.17559814 -232.71333313]
[145.84140015 -247.47454834]
[148.50720215 -262.23577881]
[143.34562683 -277.19134521]
[153.22164917 -288.34094238]
[144.47909546 -301.23300171]
[147.39286804 -316.16500854]
[159.73736572 -324.42022705]
[162.40316772 -339.18145752]
[155.70346069 -350.20309448]
[158.22769165 -362.44287109]
[168.08850098 -369.44937134]
[170.97377014 -384.16925049]
[173.85903931 -398.88916016]
[176.74432373 -413.60903931]
[162.93104553 -419.60964966]
[150.73092651 -428.43981934]
[140.71461487 -439.68646240]
[133.35057068 -452.82363892]
[128.98321533 -467.23681641]
[127.81684113 -482.25195312]
[129.90597534 -497.16668701]
[135.15293884 -511.28347778]
[143.31228638 -523.94201660]
[154.00242615 -534.55029297]
[166.72332764 -542.61206055]
[180.88002014 -547.75036621]
[195.81037903 -549.72479248]
[210.81608582 -548.44299316]
[225.19529724 -543.96502686]
[238.27545166 -536.50018311]
[249.44477844 -526.39770508]
[258.18087769 -514.13006592]
[264.07513428 -500.27108765]
[266.85186768 -485.46890259]
[266.38119507 -470.41592407]
[262.68515015 -455.81616211]
[255.93658447 -442.35247803]
[246.45115662 -430.65457153]
[234.67250061 -421.26962280]
[221.15155029 -414.63653564]
[206.52067566 -411.06558228]
[191.46420288 -410.72378540]
[188.57893372 -396.00387573]
[185.69366455 -381.28399658]
[182.80839539 -366.56408691]
[189.38203430 -350.29281616]
[177.16438293 -336.51565552]
[174.49859619 -321.75445557]
[183.17578125 -309.70278931]
[180.68255615 -294.69485474]
[167.98286438 -285.67514038]
[173.33511353 -271.77539062]
[163.26841736 -259.56997681]
[160.60261536 -244.80876160]
[157.93682861 -230.04754639]
[164.75199890 -213.87594604]
[152.74081421 -199.91839600]
[150.29508972 -185.11912537]
[147.84936523 -170.31985474]
[145.40364075 -155.52058411]
[142.95791626 -140.72131348]
[140.51217651 -125.92205048]
[146.07078552 -112.10353851]
[136.18692017 -99.74959564]
[133.74119568 -84.95031738]
[131.29547119 -70.15104675]
[144.26998901 -58.17051315]
[147.48381042 -40.64561081]
[139.46440125 -24.55931854]
[123.25382233 -16.43683052]
[121.24980927 -1.57130277]
[119.24579620 13.29422569]
[128.45246887 24.94638634]
[126.63187408 40.05069351]
[114.34759521 49.62849045]
[112.34358215 64.49401855]
[110.33956909 79.35954285]
[108.33554840 94.22507477]
[110.46520996 101.99920654]
[106.18944550 109.29637146]
[103.96432495 124.13041687]
[109.56889343 138.92567444]
[100.02921295 150.36436462]
[105.63378143 165.15962219]
[96.09410095 176.59832764]
[93.86898804 191.43235779]
[91.64386749 206.26640320]
[89.41875458 221.10044861]
[99.96683502 210.43565369]
[114.40772247 206.37846375]
[128.96659851 209.98942566]
[139.83781433 220.32464600]
[144.17965698 234.68251038]
[140.85717773 249.30992126]
[130.73886108 260.38330078]
[116.46961975 265.00808716]
[101.77939606 261.97540283]
[90.50817108 252.07794189]
[85.60229492 237.90379333]
[81.20130157 252.24363708]
[76.80030060 266.58349609]
[72.39929962 280.92333984]
[67.99830627 295.26318359]
[63.59730530 309.60302734]
[59.19630814 323.94287109]
[56.53051376 338.70410156]
[55.63769531 353.67749023]
[54.74488068 368.65090942]
[53.85206604 383.62429810]
[52.95924759 398.59771729]
[60.92120361 408.74514771]
[59.86931610 421.19815063]
[50.91096878 429.32675171]
[49.79531860 444.28521729]
[64.19715118 451.43334961]
[74.72795868 463.53179932]
[79.79753113 478.70858765]
[78.65763855 494.63040161]
[71.51232910 508.86135864]
[59.48217010 519.23553467]
[44.42858505 524.18688965]
[43.53577042 539.16027832]
[42.64295578 554.13366699]
[55.78075409 561.98590088]
[63.75471115 575.05010986]
[64.73246765 590.32440186]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 207]
[9 206]
[10 205]
[18 198]
[19 197]
[21 194]
[22 193]
[23 192]
[24 191]
[25 190]
[42 189]
[43 188]
[44 187]
[45 186]
[46 185]
[47 184]
[48 183]
[49 172]
[50 171]
[51 170]
[52 169]
[54 167]
[56 165]
[57 164]
[58 162]
[59 161]
[60 160]
[61 159]
[64 156]
[65 155]
[66 154]
[72 150]
[73 149]
[74 148]
[76 146]
[77 145]
[78 144]
[79 143]
[80 142]
[81 141]
[84 139]
[85 138]
[86 137]
[88 135]
[91 132]
[92 131]
[95 129]
[96 128]
[97 127]
[98 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
