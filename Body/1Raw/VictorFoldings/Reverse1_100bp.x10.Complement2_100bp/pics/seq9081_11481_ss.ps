%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[124.91724396 553.23889160]
[120.45942688 538.89923096]
[117.66529083 524.14489746]
[116.57127380 509.16818237]
[117.19163513 494.16442871]
[119.51828766 479.32919312]
[123.52089691 464.85586548]
[129.14727783 450.93316650]
[136.32409668 437.74258423]
[144.95776367 425.45611572]
[154.93572998 414.23391724]
[166.12791443 404.22229004]
[178.38841248 395.55175781]
[191.55737305 388.33538818]
[185.89459229 374.44534302]
[180.23179626 360.55532837]
[174.56901550 346.66528320]
[168.90623474 332.77526855]
[156.93669128 323.91076660]
[158.89161682 308.21081543]
[153.22882080 294.32077026]
[147.56604004 280.43075562]
[141.90325928 266.54074097]
[136.24046326 252.65069580]
[130.57768250 238.76066589]
[124.91489410 224.87065125]
[119.14885712 211.02316284]
[113.27989960 197.21897888]
[111.32341766 212.09083557]
[103.89130402 225.12017822]
[92.08606720 234.37417603]
[77.65894318 238.48005676]
[62.75011826 236.82872009]
[49.57122040 229.66516113]
[40.07726288 218.05203247]
[35.67661667 203.71208191]
[37.02209091 188.77253723]
[43.91409683 175.44961548]
[55.33024216 165.71968079]
[69.57701111 161.02612305]
[84.54097748 162.06517029]
[98.00233459 168.68272400]
[107.96318817 179.89544678]
[105.07791138 165.17555237]
[95.03698730 154.17424011]
[99.97531891 139.14347839]
[97.09004974 124.42359161]
[94.20477295 109.70369720]
[86.68595886 122.68319702]
[73.02111053 128.86962891]
[58.30688095 125.95560455]
[48.03131866 115.02799225]
[46.02695084 100.16250610]
[53.04135895 86.90361786]
[66.45833588 80.19656372]
[81.27368927 82.54290771]
[91.96219635 93.06855011]
[90.84654999 78.11009216]
[89.73090363 63.15164185]
[88.61525726 48.19318771]
[87.49960327 33.23473358]
[78.75732422 20.04825974]
[85.52658081 6.78076601]
[84.41093445 -8.17768764]
[83.29528809 -23.13614082]
[74.55300903 -36.32261658]
[81.32226562 -49.59011078]
[72.57998657 -62.77658463]
[79.34924316 -76.04408264]
[78.23359680 -91.00253296]
[77.11795044 -105.96098328]
[76.00229645 -120.91944122]
[74.88665009 -135.87789917]
[67.71771240 -122.70191956]
[55.59263992 -113.87113953]
[40.85259628 -111.09064484]
[26.34365654 -114.89730072]
[14.86726475 -124.55609894]
[8.63933563 -138.20208740]
[8.86238289 -153.20042419]
[15.49334049 -166.65518188]
[27.25187492 -175.96844482]
[41.86759567 -179.34197998]
[56.51843643 -176.12438965]
[68.37554932 -166.93696594]
[75.14982605 -153.55239868]
[76.71035004 -168.47100830]
[78.27087402 -183.38961792]
[79.83139801 -198.30821228]
[81.39192200 -213.22682190]
[82.95244598 -228.14543152]
[80.73280334 -237.00607300]
[84.64887238 -243.27394104]
[86.43133545 -258.16766357]
[88.21380615 -273.06137085]
[89.99626923 -287.95510864]
[75.80931854 -293.02246094]
[63.10594940 -301.12011719]
[52.52334595 -311.84188843]
[44.59233093 -324.64996338]
[39.71072388 -338.90191650]
[38.12337875 -353.88281250]
[39.90991592 -368.84130859]
[44.98073196 -383.02700806]
[53.08146667 -395.72842407]
[63.80579758 -406.30844116]
[76.61579132 -414.23635864]
[90.86890411 -419.11450195]
[105.85021210 -420.69821167]
[120.80825806 -418.90805054]
[134.99275208 -413.83380127]
[147.69219971 -405.72998047]
[158.26960754 -395.00308228]
[166.19441223 -382.19119263]
[171.06910706 -367.93688965]
[172.64920044 -352.95520020]
[170.85540771 -337.99758911]
[165.77772522 -323.81433105]
[157.67082214 -311.11685181]
[146.94137573 -300.54202271]
[134.12753296 -292.62033081]
[119.87206268 -287.74908447]
[104.88998413 -286.17263794]
[103.10752106 -271.27890015]
[101.32505035 -256.38519287]
[99.54258728 -241.49147034]
[97.87104797 -226.58489990]
[96.31052399 -211.66630554]
[94.75000000 -196.74769592]
[93.18947601 -181.82908630]
[91.62895203 -166.91047668]
[90.06843567 -151.99188232]
[89.84510803 -136.99354553]
[90.96075439 -122.03508759]
[92.07640076 -107.07663727]
[93.19204712 -92.11817932]
[94.30770111 -77.15972900]
[102.97017670 -65.04318237]
[96.28071594 -50.70575714]
[104.94319916 -38.58921051]
[98.25373840 -24.25178909]
[99.36939240 -9.29333591]
[100.48503876 5.66511726]
[109.14752197 17.78166389]
[102.45806122 32.11908722]
[103.57370758 47.07754135]
[104.68935394 62.03599167]
[105.80500793 76.99444580]
[106.92065430 91.95290375]
[108.92466736 106.81842804]
[111.80993652 121.53832245]
[114.69521332 136.25820923]
[124.94251251 148.31239319]
[119.79780579 162.29028320]
[122.68307495 177.01017761]
[127.08407593 191.35002136]
[132.95303345 205.15420532]
[139.19065857 211.82727051]
[138.80491638 219.20785522]
[144.46771240 233.09788513]
[150.13049316 246.98791504]
[155.79327393 260.87792969]
[161.45606995 274.76797485]
[167.11885071 288.65798950]
[172.78164673 302.54803467]
[185.15621948 312.40603638]
[182.79626465 327.11248779]
[188.45904541 341.00250244]
[194.12182617 354.89254761]
[199.78462219 368.78256226]
[205.44740295 382.67257690]
[219.90812683 378.62469482]
[234.73600769 376.25164795]
[249.73776245 375.58435059]
[264.71780396 376.63146973]
[279.48080444 379.37942505]
[293.83432007 383.79235840]
[307.59124756 389.81274414]
[320.57220459 397.36206055]
[332.60797119 406.34191895]
[343.54165649 416.63525391]
[353.23068237 428.10787964]
[361.54873657 440.61016846]
[368.38735962 453.97918701]
[373.65747070 468.04061890]
[377.29028320 482.61117554]
[379.23846436 497.50082397]
[379.47662354 512.51550293]
[378.00167847 527.45947266]
[374.83279419 542.13793945]
[370.01132202 556.35943604]
[363.60012817 569.93859863]
[355.68276978 582.69842529]
[346.36251831 594.47259521]
[335.76080322 605.10748291]
[324.01589966 614.46459961]
[311.28091431 622.42181396]
[297.72183228 628.87548828]
[283.51550293 633.74139404]
[268.84704590 636.95623779]
[253.90777588 638.47796631]
[238.89241028 638.28674316]
[223.99671936 636.38519287]
[209.41488647 632.79797363]
[195.33703613 627.57189941]
[181.94668579 620.77514648]
[169.41841125 612.49621582]
[157.91554260 602.84313965]
[147.58804321 591.94177246]
[138.57055664 579.93414307]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 171]
[15 170]
[16 169]
[17 168]
[18 167]
[20 165]
[21 164]
[22 163]
[23 162]
[24 161]
[25 160]
[26 159]
[27 157]
[28 156]
[43 155]
[44 154]
[46 152]
[47 151]
[48 150]
[57 149]
[58 148]
[59 147]
[60 146]
[61 145]
[63 143]
[64 142]
[65 141]
[67 139]
[69 137]
[70 136]
[71 135]
[72 134]
[73 133]
[86 132]
[87 131]
[88 130]
[89 129]
[90 128]
[91 127]
[93 126]
[94 125]
[95 124]
[96 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
