%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[57.23117447 512.22363281]
[53.71017838 526.83862305]
[47.89023972 540.69952393]
[39.92210388 553.44726562]
[30.01217079 564.75170898]
[18.41712761 574.31994629]
[5.43731451 581.90417480]
[-8.59105968 587.30792236]
[-23.30462646 590.39129639]
[-38.32226944 591.07440186]
[-53.25499344 589.33947754]
[-67.71600342 585.23150635]
[-81.33073425 578.85693359]
[-93.74652100 570.38085938]
[-104.64177704 560.02276611]
[-113.73426819 548.05102539]
[-120.78849792 534.77569580]
[-125.62173462 520.54064941]
[-128.10879517 505.71466064]
[-128.18524170 490.68170166]
[-125.84910583 475.83114624]
[-121.16089630 461.54769897]
[-114.24205017 448.20132446]
[-105.27178192 436.13772583]
[-94.48244476 425.66937256]
[-82.15350342 417.06741333]
[-68.60431671 410.55468750]
[-54.18582916 406.29989624]
[-39.27152252 404.41320801]
[-24.24770927 404.94348145]
[-9.50354481 407.87704468]
[-4.25682640 393.82458496]
[0.98989165 379.77212524]
[6.23660994 365.71963501]
[11.48332787 351.66717529]
[10.87801838 344.30133057]
[16.91418648 337.44549561]
[22.36954498 323.47271729]
[27.82490158 309.49990845]
[32.75649643 295.33377075]
[37.15749359 280.99392700]
[41.45161819 266.62170410]
[45.63862610 252.21794128]
[49.82563782 237.81414795]
[54.01264954 223.41036987]
[58.19966125 209.00659180]
[62.38667297 194.60281372]
[66.57368469 180.19902039]
[70.76069641 165.79524231]
[66.88355255 151.41410828]
[78.16541290 140.32220459]
[76.93505859 137.80340576]
[76.62831116 134.64547729]
[77.49359131 131.19776917]
[79.64839935 127.89302063]
[83.05416870 125.19956970]
[88.09108734 111.07054138]
[84.64415741 94.65423584]
[97.54031372 83.92738342]
[102.36631012 69.72492981]
[104.37032318 54.85939789]
[103.47750854 39.88599396]
[102.58469391 24.91258812]
[101.69187927 9.93918228]
[100.79906464 -5.03422356]
[99.90624237 -20.00762939]
[98.79059601 -34.96608353]
[97.45236206 -49.90626907]
[96.11412811 -64.84645081]
[94.44258881 -79.75302887]
[92.43857574 -94.61855316]
[90.43456268 -109.48408508]
[88.43054962 -124.34960938]
[74.93271637 -131.77354431]
[68.47004700 -145.56076050]
[71.33115387 -160.33500671]
[82.21305847 -170.47019958]
[72.70140076 -183.11294556]
[78.66896820 -196.75982666]
[76.66495514 -211.62535095]
[74.66093445 -226.49089050]
[72.65692139 -241.35641479]
[70.65290833 -256.22195435]
[55.62555695 -256.75738525]
[40.90488815 -259.82495117]
[26.91444206 -265.33633423]
[14.05675220 -273.13299561]
[2.70176148 -282.99057007]
[-6.82382488 -294.62548828]
[-14.24593735 -307.70297241]
[-19.35102463 -321.84674072]
[-21.99220657 -336.64984131]
[-22.09349060 -351.68640137]
[-19.65195847 -366.52374268]
[-14.73786354 -380.73498535]
[-7.49258995 -393.91125488]
[1.87539923 -405.67343140]
[13.09656906 -415.68310547]
[25.84806442 -423.65225220]
[39.76299667 -429.35162354]
[54.44100952 -432.61718750]
[69.45978546 -433.35501099]
[84.38719940 -431.54388428]
[98.79376984 -427.23590088]
[112.26498413 -420.55499268]
[124.41325378 -411.69342041]
[134.88903809 -400.90612793]
[143.39094543 -388.50347900]
[149.67434692 -374.84231567]
[153.55844116 -360.31573486]
[154.93151855 -345.34167480]
[153.75402832 -330.35095215]
[150.05987549 -315.77490234]
[143.95533752 -302.03289795]
[135.61604309 -289.52032471]
[125.28196716 -278.59719849]
[113.25040436 -269.57778931]
[99.86754608 -262.72161865]
[85.51844025 -258.22595215]
[87.52245331 -243.36042786]
[89.52646637 -228.49490356]
[91.53047943 -213.62936401]
[93.53449249 -198.76383972]
[102.90280914 -187.18437195]
[97.07858276 -172.47421265]
[110.25588226 -165.58241272]
[116.92716980 -152.09324646]
[114.34614563 -137.08685303]
[103.29607391 -126.35362244]
[105.30008698 -111.48809814]
[107.30410004 -96.62256622]
[109.30811310 -81.75704193]
[111.87531281 -79.34004974]
[113.39935303 -75.55952454]
[113.25213623 -70.91931152]
[111.05431366 -66.18468475]
[112.39254761 -51.24450302]
[113.73078156 -36.30431747]
[116.75621796 -32.60894012]
[117.49235535 -26.97377396]
[114.87965393 -20.90044594]
[115.77246857 -5.92703915]
[116.66528320 9.04636669]
[117.55809784 24.01977158]
[118.45091248 38.99317932]
[119.34372711 53.96658325]
[125.16024017 40.14022446]
[133.87025452 27.92811775]
[145.04881287 17.92612267]
[158.15048218 10.62225819]
[172.53598022 6.37289572]
[187.50344849 5.38537121]
[202.32255554 7.70786810]
[216.27026367 13.22706604]
[228.66601562 21.67367172]
[238.90501404 32.63555908]
[246.48767090 45.57786560]
[251.04400635 59.86911774]
[252.35169983 74.81200409]
[250.34696960 89.67743683]
[245.12760925 103.74008942]
[236.94828796 116.31381989]
[226.20809937 126.78513336]
[213.43106079 134.64309692]
[199.24063110 139.50431824]
[184.32916260 141.13159180]
[169.42422485 139.44552612]
[155.25305176 134.52839661]
[142.50711060 126.62011719]
[131.80828857 116.10653687]
[123.67861938 103.50065613]
[118.51474762 89.41752625]
[116.56876373 74.55092621]
[111.74276733 88.75337982]
[116.25178528 99.49163055]
[112.42272949 110.49069977]
[102.22011566 116.10745239]
[97.18319702 130.23648071]
[92.56919098 144.50921631]
[96.14685059 159.92060852]
[85.16447449 169.98225403]
[80.97746277 184.38603210]
[76.79045868 198.78982544]
[72.60344696 213.19360352]
[68.41643524 227.59738159]
[64.22942352 242.00115967]
[60.04241180 256.40493774]
[55.85540009 270.80871582]
[56.46499252 279.92279053]
[51.49734116 285.39492798]
[47.09634399 299.73477173]
[61.36898422 295.12048340]
[73.95911407 303.27453613]
[75.58575439 318.18609619]
[65.04980469 328.86288452]
[50.11798096 327.43438721]
[41.79769897 314.95526123]
[36.34234238 328.92807007]
[30.88698578 342.90087891]
[25.53579903 356.91387939]
[20.28908157 370.96636963]
[15.04236317 385.01882935]
[9.79564476 399.07128906]
[4.54892635 413.12377930]
[17.60785866 420.57095337]
[29.30298233 430.01660156]
[39.33136749 441.21603394]
[47.43325424 453.87921143]
[53.39878082 467.67807007]
[57.07343292 482.25521851]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 204]
[32 203]
[33 202]
[34 201]
[35 200]
[37 199]
[38 198]
[39 197]
[40 191]
[41 190]
[42 188]
[43 187]
[44 186]
[45 185]
[46 184]
[47 183]
[48 182]
[49 181]
[51 179]
[56 178]
[57 177]
[59 174]
[60 173]
[61 146]
[62 145]
[63 144]
[64 143]
[65 142]
[66 141]
[67 138]
[68 137]
[69 136]
[70 132]
[71 131]
[72 130]
[73 129]
[77 125]
[79 123]
[80 122]
[81 121]
[82 120]
[83 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
