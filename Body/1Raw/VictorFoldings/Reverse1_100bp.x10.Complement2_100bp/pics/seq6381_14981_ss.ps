%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[186.72290039 392.36734009]
[192.42024231 378.47058105]
[199.78219604 365.37930298]
[208.69714355 353.29199219]
[219.02995300 342.39187622]
[230.62396240 332.84417725]
[222.58279419 320.18164062]
[214.54162598 307.51913452]
[206.50044250 294.85659790]
[202.11715698 292.96032715]
[198.87857056 288.29037476]
[198.41488647 281.69519043]
[190.75428772 268.79885864]
[183.09368896 255.90252686]
[175.43310547 243.00619507]
[167.77250671 230.10987854]
[156.13151550 226.82141113]
[149.64379883 216.13996887]
[152.25349426 203.50856018]
[144.78575134 190.49960327]
[129.15690613 182.51800537]
[129.35578918 164.10490417]
[121.69519806 151.20858765]
[114.03459930 138.31225586]
[106.37400055 125.41593170]
[98.71340179 112.51959991]
[90.76672363 99.79756927]
[82.53791046 87.25616455]
[74.30910492 74.71476746]
[65.71054077 62.42392731]
[56.74984360 50.39455032]
[47.78914642 38.36517334]
[38.82845306 26.33579636]
[29.25333214 14.78949356]
[19.08978653 3.75761676]
[8.92623901 -7.27426052]
[-1.23730791 -18.30613708]
[-11.40085506 -29.33801460]
[-28.88978195 -29.73389244]
[-40.45370102 -42.40632629]
[-39.29759216 -59.18435287]
[-49.62425995 -70.06369019]
[-59.95092773 -80.94302368]
[-70.27759552 -91.82235718]
[-85.84383392 -92.39679718]
[-96.16156769 -103.57709503]
[-95.51799774 -118.41358185]
[-105.84466553 -129.29292297]
[-117.67887878 -120.05673981]
[-130.34927368 -112.00585938]
[-143.73754883 -105.21544647]
[-157.71868896 -99.74890900]
[-172.16217041 -95.65727997]
[-186.93312073 -92.97877502]
[-201.89363098 -91.73838806]
[-216.90402222 -91.94770050]
[-231.82412720 -93.60477448]
[-246.51464844 -96.69412231]
[-260.83840942 -101.18691254]
[-274.66171265 -107.04117584]
[-287.85540771 -114.20227051]
[-300.29638672 -122.60333252]
[-311.86846924 -132.16590881]
[-322.46356201 -142.80072021]
[-331.98278809 -154.40847778]
[-340.33724976 -166.88078308]
[-347.44894409 -180.10119629]
[-353.25146484 -193.94628906]
[-357.69061279 -208.28675842]
[-360.72500610 -222.98873901]
[-362.32623291 -237.91493225]
[-362.47940063 -252.92599487]
[-361.18307495 -267.88177490]
[-358.44931030 -282.64260864]
[-354.30368042 -297.07067871]
[-348.78488159 -311.03128052]
[-341.94445801 -324.39404297]
[-333.84622192 -337.03424072]
[-324.56585693 -348.83380127]
[-314.18994141 -359.68261719]
[-302.81542969 -369.47933960]
[-290.54846191 -378.13250732]
[-277.50360107 -385.56130981]
[-263.80267334 -391.69644165]
[-249.57356262 -396.48056030]
[-234.94914246 -399.86901855]
[-220.06594849 -401.83020020]
[-205.06295776 -402.34576416]
[-190.08024597 -401.41091919]
[-175.25770569 -399.03436279]
[-160.73374939 -395.23831177]
[-146.64396667 -390.05819702]
[-133.11991882 -383.54238892]
[-120.28788757 -375.75170898]
[-108.26767731 -366.75894165]
[-97.17152405 -356.64801025]
[-87.10302734 -345.51333618]
[-78.15619659 -333.45889282]
[-70.41457367 -320.59722900]
[-63.95043564 -307.04840088]
[-58.82414246 -292.93893433]
[-55.08355331 -278.40060425]
[-52.76359940 -263.56909180]
[-51.88594055 -248.58293152]
[-52.45876694 -233.58201599]
[-54.47673416 -218.70642090]
[-57.92100143 -204.09504700]
[-62.75941086 -189.88429260]
[-68.94677734 -176.20686340]
[-76.42533875 -163.19047546]
[-85.12526703 -150.95663452]
[-94.96533203 -139.61958313]
[-84.63866425 -128.74024963]
[-69.78879547 -128.61013794]
[-59.16110229 -117.72405243]
[-59.39826202 -102.14902496]
[-49.07159424 -91.26969147]
[-38.74492645 -80.39035797]
[-28.41825676 -69.51102448]
[-15.61711693 -70.98082733]
[-4.13536072 -64.71573639]
[1.72786224 -52.80636597]
[-0.36897749 -39.50156021]
[9.79456902 -28.46968460]
[19.95811653 -17.43780708]
[30.12166214 -6.40593004]
[40.28520966 4.62594700]
[40.81150055 -10.36481762]
[50.75674438 -21.59389305]
[65.57410431 -23.92749786]
[78.48929596 -16.29874039]
[83.59765625 -2.19538283]
[78.56371307 11.93470669]
[65.68891907 19.63144302]
[50.85783005 17.37509918]
[59.81852722 29.40447807]
[68.77922058 41.43385315]
[77.73992157 53.46323395]
[80.49095154 54.00172043]
[83.19443512 55.66237640]
[85.42189026 58.43254471]
[86.75732422 62.14484406]
[86.85050201 66.48596191]
[95.07931519 79.02735901]
[103.30812073 91.56875610]
[106.93483734 92.87998199]
[109.96597290 95.78343964]
[111.70338440 99.97729492]
[111.60973358 104.85900879]
[119.27033234 117.75533295]
[126.93092346 130.65165710]
[134.59152222 143.54798889]
[142.25212097 156.44432068]
[154.53573608 160.37821960]
[160.65077209 171.27731323]
[157.79470825 183.03186035]
[165.26243591 196.04081726]
[181.39697266 204.91540527]
[180.66882324 222.44927979]
[188.32942200 235.34561157]
[195.99002075 248.24192810]
[203.65061951 261.13824463]
[211.31121826 274.03457642]
[219.16297913 286.81542969]
[227.20414734 299.47796631]
[235.24531555 312.14047241]
[243.28649902 324.80300903]
[256.85815430 318.36953735]
[271.11758423 313.65270996]
[285.84857178 310.72396851]
[300.82781982 309.62774658]
[315.82824707 310.38064575]
[330.62243652 312.97128296]
[344.98614502 317.36035156]
[358.70156860 323.48132324]
[371.56085205 331.24139404]
[383.36898804 340.52294922]
[393.94702148 351.18530273]
[403.13455200 363.06674194]
[410.79229736 375.98721313]
[416.80419922 389.75079346]
[421.07910156 404.14889526]
[423.55221558 418.96316528]
[424.18603516 433.96911621]
[422.97091675 448.93917847]
[419.92535400 463.64645386]
[415.09545898 477.86798096]
[408.55447388 491.38815308]
[400.40155029 504.00201416]
[390.76031494 515.51837158]
[379.77688599 525.76257324]
[367.61776733 534.57934570]
[354.46731567 541.83508301]
[340.52490234 547.41967773]
[326.00183105 551.24859619]
[311.11831665 553.26373291]
[296.09997559 553.43450928]
[281.17449951 551.75842285]
[266.56811523 548.26074219]
[252.50230408 542.99462891]
[239.19024658 536.03985596]
[226.83377075 527.50189209]
[215.62022400 517.51007080]
[205.71955872 506.21600342]
[197.28189087 493.79080200]
[190.43513489 480.42288208]
[185.28306580 466.31488037]
[181.90380859 451.68066406]
[180.34858704 436.74209595]
[180.64097595 421.72561646]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 167]
[7 166]
[8 165]
[9 164]
[12 163]
[13 162]
[14 161]
[15 160]
[16 159]
[19 157]
[20 156]
[22 153]
[23 152]
[24 151]
[25 150]
[26 149]
[27 145]
[28 144]
[29 143]
[30 138]
[31 137]
[32 136]
[33 135]
[34 127]
[35 126]
[36 125]
[37 124]
[38 123]
[41 119]
[42 118]
[43 117]
[44 116]
[47 113]
[48 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
