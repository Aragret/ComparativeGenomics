%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUGACUAUUAUUUCCACCUACGCUGUUACCUAAAAUGUAUUACCCCCAUACUCAAAAAAAACAAUCCCAAUUGCUCCCACCAUUCCUACCCCCCUUAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[87.24817657 591.74267578]
[81.97861481 605.80249023]
[75.21977997 619.21014404]
[67.05091858 631.80847168]
[57.56781006 643.44964600]
[46.88163376 653.99731445]
[35.11768341 663.32775879]
[22.41388321 671.33154297]
[8.91917801 677.91485596]
[-5.20821285 683.00054932]
[-19.80265236 686.52893066]
[-34.69303131 688.45867920]
[-49.70476151 688.76715088]
[-64.66184235 687.45074463]
[-79.38890839 684.52484131]
[-93.71329498 680.02380371]
[-107.46705627 674.00042725]
[-120.48892975 666.52526855]
[-132.62625122 657.68597412]
[-143.73669434 647.58624268]
[-153.69003296 636.34442139]
[-162.36953735 624.09234619]
[-169.67344666 610.97363281]
[-175.51614380 597.14215088]
[-179.82911682 582.76000977]
[-182.56179810 567.99591064]
[-183.68215942 553.02288818]
[-183.17703247 538.01647949]
[-181.05238342 523.15264893]
[-177.33308411 508.60568237]
[-172.06275940 494.54611206]
[-165.30320740 481.13882446]
[-157.13368225 468.54098511]
[-147.64993286 456.90026855]
[-136.96319580 446.35321045]
[-125.19874573 437.02340698]
[-112.49450684 429.02029419]
[-98.99945068 422.43771362]
[-84.87178802 417.35278320]
[-70.27716064 413.82519531]
[-55.38667679 411.89624023]
[-40.37492752 411.58856201]
[-25.41791725 412.90579224]
[-10.69100761 415.83245850]
[3.63313580 420.33425903]
[17.38656998 426.35839844]
[24.85431099 413.34945679]
[32.32205200 400.34048462]
[39.78979492 387.33154297]
[47.25753403 374.32257080]
[54.72527695 361.31362915]
[59.55127335 347.11117554]
[53.58370972 333.46429443]
[63.09536362 320.82153320]
[65.09938049 305.95602417]
[67.10339355 291.09048462]
[54.71205521 284.50305176]
[45.29350281 274.05944824]
[39.99424362 261.00045776]
[39.46971512 246.88708496]
[43.80330276 233.41389465]
[52.49386597 222.20553589]
[64.51359558 214.62086487]
[78.42955780 211.58818054]
[80.65467834 196.75415039]
[82.87979126 181.92010498]
[85.10491180 167.08605957]
[86.99819946 152.20602417]
[88.55872345 137.28741455]
[90.11924744 122.36881256]
[91.67977142 107.45020294]
[93.12918854 92.52040100]
[94.02200317 77.54698944]
[94.46861267 62.55364227]
[94.91521454 47.56029129]
[95.36182404 32.56694412]
[95.80842590 17.57359314]
[96.25503540 2.58024240]
[96.59001160 -12.41601658]
[96.81333923 -27.41435432]
[97.03666687 -42.41269302]
[96.14385223 -57.38609695]
[94.13983917 -72.25162506]
[84.37469482 -80.67805481]
[83.01158142 -93.10084534]
[90.23908997 -102.80082703]
[88.45661926 -117.69454956]
[86.67415619 -132.58827209]
[84.89169312 -147.48197937]
[69.92845917 -149.31643677]
[55.83930206 -154.67918396]
[43.44333649 -163.25842285]
[33.46124649 -174.55538940]
[26.47338295 -187.91326904]
[22.88600922 -202.55548096]
[22.90769005 -217.63072205]
[26.53716469 -232.26255798]
[33.56341934 -245.60028076]
[43.57796097 -256.86849976]
[55.99855423 -265.41204834]
[70.10308075 -270.73425293]
[85.07152557 -272.52563477]
[100.03363800 -270.68212891]
[114.11954498 -265.31085205]
[126.51030731 -256.72409058]
[136.48554993 -245.42106628]
[143.46530151 -232.05894470]
[147.04380798 -217.41456604]
[147.01298523 -202.33934021]
[143.37463379 -187.70971680]
[136.34030151 -174.37625122]
[126.31893158 -163.11412048]
[113.89315796 -154.57809448]
[99.78540802 -149.26445007]
[101.56787109 -134.37072754]
[103.35034180 -119.47701263]
[105.13280487 -104.58329773]
[116.39278412 -91.12299347]
[109.00536346 -74.25563812]
[111.00937653 -59.39011002]
[118.16128540 -72.57534027]
[130.89567566 -80.50220490]
[145.88381958 -81.09864807]
[159.20783997 -74.20876312]
[167.38487244 -61.63354111]
[168.27746582 -46.66012192]
[161.65228271 -33.20251846]
[149.24114990 -24.77851677]
[134.28829956 -23.59012985]
[120.70236969 -29.94799995]
[112.03500366 -42.18936539]
[111.81167603 -27.19102669]
[111.58834839 -12.19268894]
[114.63191223 -5.45781708]
[111.24838257 3.02684832]
[110.80178070 18.02019882]
[110.35517120 33.01354980]
[109.90856934 48.00689697]
[109.46195984 63.00024796]
[109.01535797 77.99359894]
[110.83725739 80.12404633]
[111.92504883 83.10453796]
[111.95070648 86.65907288]
[110.69213867 90.39812469]
[108.06937408 93.85863495]
[110.54403687 101.52991486]
[106.59837341 109.01072693]
[105.03784943 123.92933655]
[103.47732544 138.84794617]
[101.91680908 153.76654053]
[104.04389954 158.53337097]
[104.12200928 163.17526245]
[102.54184723 166.93266296]
[99.93894958 169.31117249]
[97.71383667 184.14521790]
[95.48871613 198.97926331]
[93.26360321 213.81330872]
[107.09388733 222.01278687]
[116.69568634 234.86097717]
[120.62242126 250.37278748]
[118.30147552 266.16574097]
[110.11750793 279.82580566]
[97.34906769 289.27651978]
[81.96891785 293.09451294]
[79.96490479 307.96002197]
[77.96089172 322.82556152]
[83.78511047 337.53573608]
[74.41680145 349.11520386]
[82.78421021 336.66583252]
[93.68060303 326.35717773]
[106.57431030 318.69216919]
[120.83621979 314.04479980]
[135.77046204 312.64187622]
[150.64837646 314.55178833]
[164.74401855 319.68139648]
[177.36964417 327.78039551]
[187.90921021 338.45361328]
[195.84846497 351.18029785]
[200.80004883 365.33944702]
[202.52235413 380.24023438]
[200.93135071 395.15563965]
[196.10466003 409.35784912]
[188.27778625 422.15396118]
[177.83262634 432.91958618]
[165.27883911 441.12945557]
[151.22891235 446.38299561]
[136.36840820 448.42388916]
[121.42237854 447.15252686]
[107.12008667 442.63098145]
[94.15937042 435.07980347]
[83.17262268 424.86752319]
[74.69589233 412.49234009]
[69.14278412 398.55807495]
[66.78425598 383.74465942]
[67.73423004 368.78137207]
[60.26648712 381.79031372]
[52.79874420 394.79928589]
[45.33100510 407.80822754]
[37.86326218 420.81716919]
[30.39552307 433.82614136]
[42.53331375 442.66476440]
[53.64431381 452.76391602]
[63.59824753 464.00518799]
[72.27841187 476.25680542]
[79.58303833 489.37509155]
[85.42647552 503.20626831]
[89.74021912 517.58819580]
[92.47370148 532.35217285]
[93.59485626 547.32513428]
[93.09054565 562.33160400]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 200]
[47 199]
[48 198]
[49 197]
[50 196]
[51 195]
[52 168]
[54 166]
[55 165]
[56 164]
[64 157]
[65 156]
[66 155]
[67 154]
[68 150]
[69 149]
[70 148]
[71 147]
[72 145]
[73 140]
[74 139]
[75 138]
[76 137]
[77 136]
[78 135]
[79 133]
[80 132]
[81 131]
[82 120]
[83 119]
[86 117]
[87 116]
[88 115]
[89 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
