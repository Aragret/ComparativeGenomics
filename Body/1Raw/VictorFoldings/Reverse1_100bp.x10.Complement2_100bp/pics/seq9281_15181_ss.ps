%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[187.97171021 562.99066162]
[180.26510620 575.92517090]
[170.03736877 586.97448730]
[157.73564148 595.65557861]
[143.89767456 601.58892822]
[129.12841797 604.51513672]
[114.07351685 604.30627441]
[99.39110565 600.97155762]
[85.72303772 594.65667725]
[73.66681671 585.63775635]
[63.74950027 574.30902100]
[56.40462494 561.16571045]
[51.95327377 546.78240967]
[50.59004593 531.78790283]
[52.37453461 516.83764648]
[57.22872543 502.58526611]
[64.94042206 489.65377808]
[75.17249298 478.60848999]
[87.47763824 469.93225098]
[101.31793976 464.00436401]
[116.08834839 461.08398438]
[131.14315796 461.29873657]
[134.46542358 446.67126465]
[137.78768921 432.04379272]
[141.10993958 417.41635132]
[144.43220520 402.78887939]
[136.30180359 390.36181641]
[139.46267700 375.48016357]
[152.55245972 367.03649902]
[155.87471008 352.40905762]
[159.19697571 337.78158569]
[160.75749207 322.86297607]
[160.53416443 307.86465454]
[160.31083679 292.86630249]
[157.86511230 278.06704712]
[153.25109863 263.79431152]
[148.63710022 249.52156067]
[144.02308655 235.24882507]
[139.40907288 220.97610474]
[134.79507446 206.70336914]
[130.18106079 192.43063354]
[125.56704712 178.15789795]
[120.21586609 164.14488220]
[114.14202881 150.42961121]
[108.06819916 136.71434021]
[101.99436188 122.99907684]
[95.92053223 109.28380585]
[90.03656769 103.77458191]
[89.86005402 95.31883240]
[83.99109650 81.51465607]
[78.12213135 67.71047974]
[72.04830170 53.99521255]
[65.77094269 40.37189484]
[59.49357986 26.74857903]
[47.68588638 21.55809021]
[42.73792267 10.08196640]
[46.80137253 -1.31166947]
[40.72753525 -15.02693653]
[35.62041855 -19.22561073]
[33.69012833 -24.57079697]
[34.68381500 -29.24216080]
[29.02102852 -43.13218689]
[23.35824203 -57.02221298]
[18.37839890 -61.37108612]
[16.60811234 -66.77137756]
[17.74044037 -71.41107941]
[12.49372292 -85.46355438]
[7.24700499 -99.51602173]
[2.00028658 -113.56849670]
[-12.61824322 -110.11859131]
[-27.55389404 -108.52813721]
[-42.57110977 -108.82220459]
[-57.43304825 -110.99615479]
[-71.90531158 -115.01571655]
[-85.75965118 -120.81747437]
[-98.77757263 -128.30993652]
[-110.75375366 -137.37495422]
[-121.49931335 -147.86952209]
[-130.84478760 -159.62814331]
[-138.64277649 -172.46537781]
[-144.77030945 -186.17875671]
[-149.13072205 -200.55200195]
[-151.65525818 -215.35841370]
[-152.30410767 -230.36448669]
[-151.06703186 -245.33355713]
[-147.96353149 -260.02951050]
[-143.04255676 -274.22061157]
[-136.38174438 -287.68304443]
[-128.08610535 -300.20443726]
[-118.28649902 -311.58737183]
[-107.13747406 -321.65228271]
[-94.81486511 -330.24044800]
[-81.51301575 -337.21640015]
[-67.44171906 -342.47015381]
[-52.82290268 -345.91882324]
[-37.88711548 -347.50802612]
[-22.86992455 -347.21270752]
[-8.00817204 -345.03750610]
[6.46375322 -341.01672363]
[20.31760597 -335.21380615]
[33.33489227 -327.72024536]
[45.31031036 -318.65420532]
[56.05499268 -308.15875244]
[65.39947510 -296.39932251]
[73.19638824 -283.56143188]
[79.32275391 -269.84753418]
[83.68196106 -255.47393799]
[86.20525360 -240.66731262]
[86.85283661 -225.66117859]
[85.61450195 -210.69221497]
[82.50976562 -195.99650574]
[77.58760834 -181.80583191]
[70.92564392 -168.34396362]
[62.62895966 -155.82325745]
[52.82839584 -144.44116211]
[41.67852402 -134.37718201]
[29.35519218 -125.79005432]
[16.05275726 -118.81521606]
[21.29947662 -104.76274109]
[26.54619408 -90.71027374]
[31.79291153 -76.65779877]
[37.24826813 -62.68500137]
[42.91105652 -48.79497528]
[48.57384109 -34.90494537]
[54.44280243 -21.10077095]
[60.51663589 -7.38550329]
[75.23031616 2.17873502]
[73.11689758 20.47122002]
[79.39425659 34.09453583]
[85.67161560 47.71784973]
[89.76226807 50.18273163]
[92.34791565 55.24350357]
[91.92630768 61.84151840]
[97.79527283 75.64569855]
[103.66423035 89.44987488]
[109.63579559 103.20997620]
[115.70963287 116.92523956]
[121.78346252 130.64050293]
[127.85729980 144.35577393]
[133.93113708 158.07104492]
[139.25247192 144.04666138]
[152.28169250 136.61433411]
[167.06201172 139.17204285]
[176.83609009 150.55043030]
[177.13531494 165.54745483]
[167.82290649 177.30665588]
[153.15637207 180.45191956]
[139.83978271 173.54388428]
[144.45379639 187.81661987]
[149.06779480 202.08935547]
[153.68180847 216.36209106]
[158.29582214 230.63482666]
[162.90983582 244.90756226]
[167.52383423 259.18029785]
[172.13784790 273.45303345]
[174.53048706 258.64508057]
[180.94604492 245.08630371]
[190.87860107 233.84599304]
[203.54479980 225.81060791]
[217.94573975 221.61386108]
[232.94572449 221.58671570]
[247.36175537 225.73132324]
[260.05697632 233.72080994]
[270.03012085 244.92509460]
[276.49472046 258.46057129]
[278.94091797 273.25976562]
[277.17584229 288.15554810]
[271.33862305 301.97317505]
[261.88967896 313.62295532]
[249.57412720 322.18609619]
[235.36328125 326.98730469]
[220.37783813 327.64794922]
[205.79960632 324.11587524]
[192.77830505 316.66967773]
[182.34085083 305.89660645]
[175.30917358 292.64297485]
[175.53250122 307.64132690]
[175.75582886 322.63964844]
[182.81759644 309.40591431]
[193.93331909 299.33416748]
[207.79718018 293.60757446]
[222.78042603 292.89892578]
[237.12286377 297.29147339]
[249.13955688 306.26919556]
[257.41879272 318.77737427]
[260.98791504 333.34655762]
[259.42767334 348.26519775]
[252.92131042 361.78063965]
[242.23323059 372.30511475]
[228.61903381 378.60223389]
[213.67810059 379.93222046]
[199.16569519 376.13879395]
[186.78671265 367.66760254]
[177.99542236 355.51388550]
[173.82443237 341.10385132]
[170.50218201 355.73129272]
[167.17991638 370.35876465]
[175.33808899 383.62835693]
[171.76046753 398.41534424]
[159.05966187 406.11114502]
[155.73739624 420.73861694]
[152.41514587 435.36605835]
[149.09288025 449.99353027]
[145.77062988 464.62097168]
[159.44117737 470.93048096]
[171.50094604 479.94467163]
[181.42271423 491.26953125]
[188.77276611 504.40994263]
[193.22976685 518.79150391]
[194.59889221 533.78546143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 204]
[23 203]
[24 202]
[25 201]
[26 200]
[29 197]
[30 196]
[31 195]
[32 178]
[33 177]
[34 176]
[35 155]
[36 154]
[37 153]
[38 152]
[39 151]
[40 150]
[41 149]
[42 148]
[43 140]
[44 139]
[45 138]
[46 137]
[47 136]
[49 135]
[50 134]
[51 133]
[52 130]
[53 129]
[54 128]
[57 126]
[58 125]
[61 124]
[62 123]
[63 122]
[66 121]
[67 120]
[68 119]
[69 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
