%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[104.03712463 642.50537109]
[98.21080017 656.41601562]
[89.10743713 668.44012451]
[77.29928589 677.82189941]
[63.52860641 683.97167969]
[48.66104507 686.50274658]
[33.63118744 685.25610352]
[19.38381958 680.31005859]
[6.81454468 671.97552490]
[-3.28652167 660.77648926]
[-10.28441811 647.41680908]
[-13.73925114 632.73638916]
[-13.43384647 617.65802002]
[-9.38740349 603.12951660]
[-1.85428333 590.06420898]
[8.69197464 579.28332520]
[21.58842278 571.46459961]
[36.02438354 567.09948730]
[51.09239578 566.46246338]
[54.19650650 551.78717041]
[57.30061340 537.11187744]
[60.40472412 522.43658447]
[63.50883484 507.76126099]
[57.17817307 491.39392090]
[69.59959412 477.80017090]
[72.48486328 463.08029175]
[65.99882507 452.86962891]
[68.28212738 440.58261108]
[78.64695740 432.90582275]
[81.75106812 418.23052979]
[84.85517120 403.55523682]
[86.63764191 388.66149902]
[87.08424377 373.66815186]
[87.53085327 358.67480469]
[87.97745514 343.68145752]
[88.42406464 328.68811035]
[88.87066650 313.69476318]
[89.31727600 298.70141602]
[89.76388550 283.70806885]
[75.85651398 278.24267578]
[64.63713074 268.33032227]
[57.47262192 255.15292358]
[55.24465561 240.29164124]
[58.24122238 225.53729248]
[66.11956787 212.67448425]
[77.94528961 203.26574707]
[92.30310822 198.46176147]
[92.74971008 183.46841431]
[93.19631958 168.47505188]
[93.64292908 153.48170471]
[93.64292908 138.48170471]
[93.19631958 123.48835754]
[92.74971008 108.49501038]
[92.19150543 93.50539398]
[91.52172089 78.52035522]
[90.85192871 63.53532028]
[90.18214417 48.55028152]
[89.51235962 33.56524277]
[88.84257507 18.58020401]
[87.61560059 3.63047028]
[85.83313751 -11.26324749]
[81.70613098 -19.41221428]
[84.13671112 -26.39176369]
[82.57618713 -41.31036758]
[81.01566315 -56.22897339]
[75.76655579 -42.17739487]
[67.22984314 -29.84351730]
[55.92754745 -19.98156357]
[42.55081177 -13.19459248]
[27.91762733 -9.89763260]
[12.92282009 -10.29229355]
[-1.51667237 -14.35444164]
[-14.51786995 -21.83567429]
[-25.28574562 -32.27851486]
[-33.16183853 -45.04437256]
[-37.66452026 -59.35261536]
[-38.51845169 -74.32829285]
[-35.67141724 -89.05562592]
[-29.29751396 -102.63404083]
[-19.78650284 -114.23320770]
[-7.71999216 -123.14383698]
[6.16414976 -128.82102966]
[21.01690102 -130.91764832]
[35.93001175 -129.30545044]
[49.99153519 -124.08305359]
[62.34160995 -115.56978607]
[72.22502136 -104.28625488]
[79.03739166 -90.92243195]
[82.36215210 -76.29551697]
[85.90182495 -90.87188721]
[89.44149780 -105.44826508]
[92.65476990 -120.10005188]
[95.54003906 -134.81994629]
[98.42531586 -149.53984070]
[89.87567902 -162.56063843]
[93.01144409 -177.44760132]
[105.47748566 -185.51812744]
[108.36276245 -200.23802185]
[111.24803162 -214.95791626]
[97.52369690 -221.18202209]
[85.60504913 -230.40386963]
[76.13484955 -242.12615967]
[69.62380981 -255.71670532]
[66.42305756 -270.44259644]
[66.70521545 -285.50967407]
[70.45505524 -300.10540771]
[77.47036743 -313.44265747]
[87.37281036 -324.80215454]
[99.62837219 -333.57131958]
[113.57611084 -339.27722168]
[128.46385193 -341.61215210]
[143.48870850 -340.45016479]
[157.84043884 -335.85397339]
[170.74502563 -328.07144165]
[181.50657654 -317.52221680]
[189.54472351 -304.77526855]
[194.42597961 -290.51797485]
[195.88710022 -275.51925659]
[193.84928894 -260.58795166]
[188.42245483 -246.52926636]
[179.89924622 -234.10140991]
[168.73931885 -223.97457886]
[155.54450989 -216.69491577]
[141.02639771 -212.65496826]
[125.96792603 -212.07264709]
[123.08264923 -197.35275269]
[120.19738007 -182.63285828]
[128.69416809 -170.45336914]
[125.97779083 -155.48420715]
[113.14520264 -146.65455627]
[110.25993347 -131.93467712]
[107.37466431 -117.21477509]
[109.02773285 -114.10034180]
[109.25442505 -110.03049469]
[107.62212372 -105.68436432]
[104.01786804 -101.90859222]
[100.47819519 -87.33221436]
[96.93852997 -72.75584412]
[95.93426514 -57.78949738]
[97.49478912 -42.87089157]
[99.05531311 -27.95228767]
[100.72685242 -13.04571342]
[102.50931549 1.84800434]
[113.69109344 -8.15038872]
[128.50465393 -5.79273796]
[136.02998352 7.18298340]
[130.71969604 21.21155739]
[116.48834229 25.95163918]
[103.82761383 17.91041946]
[104.49739838 32.89545822]
[105.16718292 47.88049698]
[105.83696747 62.86553574]
[106.50675964 77.85057068]
[107.17654419 92.83560944]
[110.65391541 100.10750580]
[107.74306488 108.04840088]
[108.18966675 123.04174805]
[108.63627625 138.03509521]
[111.04841614 141.64558411]
[112.08220673 145.45291138]
[111.84501648 148.99961853]
[110.58175659 151.91007996]
[108.63627625 153.92831421]
[108.18966675 168.92166138]
[107.74306488 183.91500854]
[107.29645538 198.90835571]
[121.34288788 204.55842590]
[132.58761597 214.65435791]
[139.68638611 227.96330261]
[141.79945374 242.86984253]
[138.69087219 257.57217407]
[130.75473022 270.29977417]
[118.96524811 279.52676392]
[104.75723267 284.15466309]
[104.31062317 299.14801025]
[103.86402130 314.14135742]
[103.41741180 329.13470459]
[102.97080994 344.12805176]
[102.52420044 359.12139893]
[102.07759857 374.11477661]
[101.63098907 389.10812378]
[110.13179016 376.74945068]
[123.10977936 369.22802734]
[138.05909729 367.99609375]
[152.09329224 373.29153442]
[162.50254822 384.09185791]
[167.27702332 398.31173706]
[165.49484253 413.20547485]
[157.50010681 425.89736938]
[144.83647156 433.93679810]
[129.94909668 435.77148438]
[115.71249390 431.04714966]
[104.87553406 420.67602539]
[99.53047943 406.65933228]
[96.42636871 421.33462524]
[93.32225800 436.00994873]
[99.43467712 453.38003540]
[87.20475769 465.96557617]
[84.31948090 480.68545532]
[90.85435486 491.80563354]
[88.14817047 504.00646973]
[78.18413544 510.86538696]
[75.08002472 525.54064941]
[71.97591400 540.21600342]
[68.87181091 554.89129639]
[65.76770020 569.56658936]
[79.28720093 576.25042725]
[90.71921539 586.08709717]
[99.34512329 598.45819092]
[104.62268829 612.58612061]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 206]
[20 205]
[21 204]
[22 203]
[23 202]
[25 199]
[26 198]
[29 196]
[30 195]
[31 194]
[32 181]
[33 180]
[34 179]
[35 178]
[36 177]
[37 176]
[38 175]
[39 174]
[47 166]
[48 165]
[49 164]
[50 163]
[51 158]
[52 157]
[53 156]
[54 154]
[55 153]
[56 152]
[57 151]
[58 150]
[59 149]
[60 143]
[61 142]
[63 141]
[64 140]
[65 139]
[89 138]
[90 137]
[91 136]
[92 132]
[93 131]
[94 130]
[97 127]
[98 126]
[99 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
