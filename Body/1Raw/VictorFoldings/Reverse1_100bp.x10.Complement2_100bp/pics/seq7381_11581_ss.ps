%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[13.43990135 512.45886230]
[0.88073671 520.94671631]
[-13.82477856 524.62414551]
[-28.90088081 523.04711914]
[-42.52706146 516.40612793]
[-53.05788422 505.50302124]
[-59.22171021 491.65444946]
[-60.27422333 476.53268433]
[-56.08832932 461.96374512]
[-47.16949081 449.70690918]
[-34.59470749 441.24221802]
[-19.88244057 437.59188843]
[-18.32191658 422.67327881]
[-16.76139450 407.75466919]
[-15.20087051 392.83605957]
[-13.64034748 377.91748047]
[-12.07982445 362.99887085]
[-10.51930141 348.08026123]
[-8.95877838 333.16165161]
[-7.39825583 318.24304199]
[-5.83773279 303.32443237]
[-13.83927536 316.01205444]
[-24.51776123 326.54626465]
[-37.31301498 334.37451172]
[-51.55382919 339.08612061]
[-66.49314880 340.43395996]
[-81.34729767 338.34725952]
[-95.33705902 332.93554688]
[-107.72853851 324.48266602]
[-117.87172699 313.43206787]
[-125.23451996 300.36343384]
[-129.43067932 285.96231079]
[-130.24009705 270.98416138]
[-127.62029266 256.21472168]
[-121.70870972 242.42872620]
[-112.81545258 230.34941101]
[-101.40704346 220.61041260]
[-88.08195496 213.72259521]
[-73.53917694 210.04731750]
[-58.54160690 209.77735901]
[-43.87598419 212.92687988]
[-30.31163597 219.33067322]
[-18.56012535 228.65278625]
[-9.23790836 240.40423584]
[-2.83401275 253.96852112]
[0.31562671 268.63412476]
[0.04556659 283.63333130]
[6.92497921 270.30392456]
[13.80439186 256.97448730]
[6.95768929 243.77369690]
[9.22381687 228.89657593]
[19.94090462 218.08004761]
[35.14789963 215.61967468]
[42.02731323 202.29023743]
[48.90672684 188.96081543]
[55.78614044 175.63137817]
[62.46633148 162.20100403]
[68.94583130 148.67266846]
[75.42532349 135.14431763]
[81.80393219 121.56810760]
[88.08129120 107.94479370]
[86.99069214 94.00556183]
[98.29539490 85.77784729]
[104.57275391 72.15452576]
[110.85011292 58.53121185]
[117.12747192 44.90789413]
[115.87554169 29.13630104]
[128.22895813 20.81511116]
[134.20053101 7.05500889]
[139.86331177 -6.83501816]
[145.52610779 -20.72504425]
[151.18888855 -34.61507034]
[156.85166931 -48.50510025]
[159.40750122 -63.28575134]
[158.73771667 -78.27079010]
[158.06793213 -93.25582886]
[157.39814758 -108.24086761]
[155.94873047 -123.17067719]
[153.72361755 -138.00471497]
[139.52745056 -143.69825745]
[130.14910889 -155.65414429]
[128.02844238 -170.59968567]
[133.63584900 -184.50698853]
[145.37251282 -193.67848206]
[143.14739990 -208.51252747]
[140.92227173 -223.34655762]
[138.69715881 -238.18060303]
[123.67478943 -239.31028748]
[109.28059387 -243.75494385]
[96.23658752 -251.29161072]
[85.19703674 -261.54226685]
[76.71568298 -273.99276733]
[71.21796417 -288.01855469]
[68.97962189 -302.91610718]
[70.11294556 -317.93820190]
[74.56108856 -332.33132935]
[82.10092163 -345.37350464]
[92.35425568 -356.41058350]
[104.80679321 -364.88891602]
[118.83391571 -370.38323975]
[133.73202515 -372.61798096]
[148.75384521 -371.48098755]
[163.14588928 -367.02938843]
[176.18624878 -359.48638916]
[187.22082520 -349.23037720]
[195.69613647 -336.77578735]
[201.18705750 -322.74734497]
[203.41818237 -307.84866333]
[202.27757263 -292.82714844]
[197.82246399 -278.43618774]
[190.27630615 -265.39764404]
[180.01762390 -254.36555481]
[167.56098938 -245.89324951]
[153.53120422 -240.40573120]
[155.75631714 -225.57168579]
[157.98144531 -210.73764038]
[160.20655823 -195.90359497]
[174.11759949 -190.57926941]
[183.55862427 -178.92926025]
[185.91630554 -164.01927185]
[180.45855713 -149.83795166]
[168.55766296 -140.22984314]
[170.78277588 -125.39579773]
[179.62789917 -137.51040649]
[194.16012573 -141.22718811]
[207.73551941 -134.84684753]
[214.14759827 -121.28642273]
[210.46484375 -106.74553680]
[198.37095642 -97.87209320]
[183.39511108 -98.72291565]
[172.38319397 -108.91065216]
[173.05297852 -93.92561340]
[173.72276306 -78.94057465]
[174.39254761 -63.95553589]
[180.42945862 -77.68709564]
[189.07292175 -89.94639587]
[199.97868347 -100.24515533]
[212.71235657 -108.17317963]
[226.76676941 -113.41469574]
[241.58213806 -115.76094055]
[256.56835938 -115.11846924]
[271.12857056 -111.51285553]
[284.68283081 -105.08771515]
[296.69125366 -96.09896851]
[306.67556763 -84.90462494]
[314.23812866 -71.95055389]
[319.07766724 -57.75271225]
[321.00146484 -42.87659073]
[319.93289185 -27.91469955]
[315.91448975 -13.46296883]
[309.10635376 -0.09700284]
[299.77960205 11.65083599]
[288.30572510 21.31263542]
[275.14175415 28.50357246]
[260.81195068 32.93723297]
[245.88713074 34.43702316]
[230.96170044 32.94321060]
[216.63014221 28.51529312]
[203.46327209 21.32963181]
[191.98553467 11.67243004]
[182.65408325 -0.07167104]
[175.84057617 -13.43490791]
[171.81639099 -27.88502693]
[170.74169922 -42.84231186]
[165.07891846 -28.95228577]
[159.41612244 -15.06225872]
[153.75334167 -1.17223155]
[148.09056091 12.71779537]
[149.11369324 16.09204102]
[148.55331421 20.12949371]
[146.11550903 24.08049393]
[141.85227966 27.09247208]
[143.55320740 41.88963699]
[130.75079346 51.18525696]
[124.47342682 64.80857086]
[118.19606781 78.43189240]
[111.91870880 92.05520630]
[113.00930786 105.99443817]
[101.70460510 114.22215271]
[95.42724609 127.84547424]
[94.67810059 136.94912720]
[88.95367432 141.62380981]
[82.47417450 155.15216064]
[75.99468231 168.68051147]
[76.12124634 175.29075623]
[73.31220245 180.23103333]
[69.11557007 182.51080322]
[62.23615646 195.84022522]
[55.35674286 209.16966248]
[48.47732925 222.49908447]
[55.28162384 236.31964111]
[52.67371750 251.32138062]
[41.86021042 261.78713989]
[27.13382149 263.85388184]
[20.25440788 277.18331909]
[13.37499619 290.51275635]
[9.08087254 304.88497925]
[7.52034903 319.80355835]
[5.95982599 334.72216797]
[4.39930296 349.64077759]
[2.83878016 364.55938721]
[1.27825713 379.47799683]
[-0.28226587 394.39660645]
[-1.84278882 409.31518555]
[-3.40331197 424.23379517]
[-4.96383476 439.15240479]
[8.67455864 445.76831055]
[19.22546005 456.65197754]
[25.41479683 470.48916626]
[26.49517441 485.60897827]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 206]
[13 205]
[14 204]
[15 203]
[16 202]
[17 201]
[18 200]
[19 199]
[20 198]
[21 197]
[47 196]
[48 195]
[49 194]
[53 190]
[54 189]
[55 188]
[56 187]
[57 184]
[58 183]
[59 182]
[60 180]
[61 179]
[63 177]
[64 176]
[65 175]
[66 174]
[68 172]
[69 168]
[70 167]
[71 166]
[72 165]
[73 164]
[74 134]
[75 133]
[76 132]
[77 131]
[78 123]
[79 122]
[84 117]
[85 116]
[86 115]
[87 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
