%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[214.58862305 696.91149902]
[210.83232117 682.38940430]
[200.15438843 672.00524902]
[204.18931580 656.70721436]
[200.43301392 642.18518066]
[196.67671204 627.66308594]
[181.87995911 625.66674805]
[168.93978882 618.13702393]
[159.84370422 606.19439697]
[156.00262451 591.63989258]
[158.03195190 576.68341064]
[165.65330505 563.60833740]
[177.73223877 554.42272949]
[173.97593689 539.90063477]
[170.21963501 525.37860107]
[159.54170227 514.99444580]
[163.57662964 499.69638062]
[159.82032776 485.17434692]
[156.06402588 470.65228271]
[152.30772400 456.13021851]
[148.55142212 441.60815430]
[132.24729919 433.28399658]
[127.11737061 415.37878418]
[136.86854553 399.13598633]
[132.68153381 384.73220825]
[126.35066986 398.33074951]
[113.29223633 405.71160889]
[98.37670898 404.12194824]
[87.16721344 394.15466309]
[83.84460449 379.52728271]
[89.64813995 365.69546509]
[102.41324615 357.81814575]
[117.37884521 358.83337402]
[128.96379089 368.36346436]
[126.51805878 353.56417847]
[124.07233429 338.76492310]
[121.62660217 323.96563721]
[119.18087769 309.16638184]
[116.73514557 294.36709595]
[114.28942108 279.56784058]
[111.65140533 277.22833252]
[110.01547241 273.49487305]
[110.02446747 268.85232544]
[112.08035278 264.05438232]
[110.29788208 249.16065979]
[98.46662903 240.18530273]
[96.44679260 225.10633850]
[105.94119263 212.75749207]
[104.15872192 197.86376953]
[102.37625885 182.97006226]
[100.59378815 168.07633972]
[98.81132507 153.18261719]
[97.02886200 138.28890991]
[95.24639130 123.39518738]
[82.44662476 116.18056488]
[76.29591370 102.83688354]
[79.12409973 88.41861725]
[89.85988617 78.38727570]
[88.07742310 63.49356079]
[86.29496002 48.59984207]
[84.51248932 33.70612335]
[82.28737640 18.87208176]
[79.62158203 4.11086369]
[69.55488586 -8.09455490]
[74.90712738 -21.99429321]
[72.24133301 -36.75551224]
[68.26924133 -42.04077911]
[67.65481567 -47.69051361]
[69.72277832 -51.99546051]
[67.49766541 -66.82950592]
[65.27254486 -81.66355133]
[63.04742813 -96.49758911]
[60.82231140 -111.33163452]
[58.59719467 -126.16567993]
[56.37207794 -140.99972534]
[54.14696121 -155.83377075]
[51.92184448 -170.66781616]
[49.69672394 -185.50186157]
[42.74191666 -172.21160889]
[30.12695312 -164.09602356]
[15.14935780 -163.27648926]
[1.72423697 -169.96723938]
[-6.63911486 -182.41932678]
[-7.75453711 -197.37779236]
[-1.33046174 -210.93254089]
[10.95387363 -219.54040527]
[25.88737297 -220.95127869]
[39.56645584 -214.79638672]
[48.41511917 -202.68542480]
[48.41511917 -217.68542480]
[48.41511917 -232.68542480]
[40.67782211 -246.48559570]
[48.41511917 -259.21286011]
[48.19179153 -274.21121216]
[47.74518585 -289.20455933]
[39.60043335 -302.76824951]
[46.95536423 -315.72024536]
[46.50875854 -330.71359253]
[32.54520798 -336.87652588]
[22.64501762 -348.49328613]
[18.77388000 -363.25735474]
[21.70041466 -378.23727417]
[30.84355354 -390.45880127]
[44.38792038 -397.49533081]
[59.64427185 -397.94976807]
[73.58344269 -391.73187256]
[83.43781281 -380.07623291]
[87.25077820 -365.29705811]
[84.26527405 -350.32876587]
[75.07408142 -338.14334106]
[61.50210953 -331.16018677]
[61.94871521 -316.16683960]
[70.06152344 -303.67559814]
[62.73853683 -289.65115356]
[63.18514252 -274.65780640]
[65.98526001 -270.78890991]
[66.38468170 -265.11990356]
[63.41511917 -259.21286011]
[71.15242004 -246.48559570]
[63.41511917 -232.68542480]
[63.41511917 -217.68542480]
[63.41511917 -202.68542480]
[64.53076935 -187.72697449]
[66.75588989 -172.89292908]
[68.98100281 -158.05888367]
[71.20612335 -143.22483826]
[73.43123627 -128.39079285]
[75.65635681 -113.55675507]
[77.88146973 -98.72270966]
[80.10659027 -83.88866425]
[82.33170319 -69.05461884]
[84.55682373 -54.22057724]
[87.00254822 -39.42130661]
[89.66835022 -24.66008949]
[99.54436493 -13.51049232]
[94.38279724 1.44506824]
[97.04859161 16.20628548]
[99.27193451 17.91358757]
[100.95295715 20.60445595]
[101.71364594 24.07674026]
[101.25608063 27.99530602]
[99.40621185 31.92365837]
[101.18867493 46.81737518]
[102.97113800 61.71109390]
[104.75360870 76.60481262]
[117.55337524 83.81943512]
[123.70408630 97.16311646]
[120.87590027 111.58138275]
[110.14011383 121.61272430]
[111.92257690 136.50643921]
[113.70503998 151.40016174]
[115.48751068 166.29386902]
[117.26997375 181.18759155]
[119.05243683 196.08131409]
[120.83490753 210.97502136]
[132.97521973 220.73464966]
[134.57073975 235.86439514]
[125.19160461 247.37818909]
[126.97406769 262.27191162]
[129.08869934 277.12210083]
[131.53442383 291.92138672]
[133.98014832 306.72064209]
[136.42587280 321.51992798]
[138.87159729 336.31918335]
[141.31732178 351.11846924]
[143.76306152 365.91772461]
[147.08531189 380.54519653]
[151.27232361 394.94897461]
[162.60636902 398.53729248]
[170.71792603 407.06393433]
[173.67565918 418.33096313]
[170.85667419 429.50991821]
[163.07348633 437.85186768]
[166.82978821 452.37393188]
[170.58609009 466.89596558]
[174.34239197 481.41802979]
[178.09867859 495.94009399]
[189.04528809 507.36297607]
[184.74168396 521.62231445]
[188.49798584 536.14434814]
[192.25428772 550.66644287]
[207.27220154 552.84307861]
[220.27755737 560.58282471]
[229.30448914 572.67950439]
[233.00236511 587.27099609]
[230.83789062 602.12634277]
[223.17170715 614.98614502]
[211.19877625 623.90679932]
[214.95507812 638.42889404]
[218.71138000 652.95092773]
[229.65798950 664.37384033]
[225.35438538 678.63311768]
[229.11067200 693.15521240]
[244.21156311 694.05987549]
[258.29306030 699.58862305]
[269.97558594 709.19976807]
[278.11459351 721.95166016]
[281.91275024 736.59509277]
[280.99795532 751.69537354]
[275.45977783 765.77313232]
[265.84082031 777.44921875]
[253.08345032 785.57971191]
[238.43750000 789.36804199]
[223.33784485 788.44311523]
[209.26377869 782.89550781]
[197.59414673 773.26873779]
[189.47221375 760.50592041]
[185.69367981 745.85742188]
[186.62873840 730.75842285]
[192.18577576 716.68804932]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 193]
[2 192]
[4 190]
[5 189]
[6 188]
[13 181]
[14 180]
[15 179]
[17 177]
[18 176]
[19 175]
[20 174]
[21 173]
[24 168]
[25 167]
[34 166]
[35 165]
[36 164]
[37 163]
[38 162]
[39 161]
[40 160]
[44 159]
[45 158]
[48 155]
[49 154]
[50 153]
[51 152]
[52 151]
[53 150]
[54 149]
[58 145]
[59 144]
[60 143]
[61 142]
[62 137]
[63 136]
[65 134]
[66 133]
[69 132]
[70 131]
[71 130]
[72 129]
[73 128]
[74 127]
[75 126]
[76 125]
[77 124]
[78 123]
[89 122]
[90 121]
[91 120]
[93 118]
[94 115]
[95 114]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
