%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCUUCAGUCCCAAUCCCACCAAUAUCAUCACACGUACCAAUAAUGAAAAUAAACCUCAACGUGGUUUUAAAAACCCCGGAUUCUGGUUACCUAUCGAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[93.23716736 454.79156494]
[86.95496368 441.15701294]
[82.03945160 426.97238159]
[78.53796387 412.37420654]
[76.48422241 397.50311279]
[75.89801025 382.50234985]
[76.78497314 367.51635742]
[79.13657379 352.68945312]
[82.93015289 338.16445923]
[88.12918091 324.08126831]
[94.68358612 310.57546997]
[102.53025055 297.77716064]
[111.59359741 285.80960083]
[121.78633881 274.78802490]
[133.01031494 264.81863403]
[145.15744019 255.99737549]
[158.11070251 248.40924072]
[151.83334351 234.78593445]
[145.55598450 221.16261292]
[139.17736816 207.58641052]
[132.69787598 194.05805969]
[126.21838379 180.52972412]
[119.73888397 167.00137329]
[112.36845398 180.06570435]
[97.58399200 182.59942627]
[86.28405762 172.73475647]
[86.79853821 157.74359131]
[98.74818420 148.67683411]
[113.32286835 152.21713257]
[107.86751556 138.24433899]
[102.20472717 124.35430145]
[96.33576965 110.55012512]
[90.36420441 96.79002380]
[84.29036713 83.07476044]
[78.21653748 69.35948944]
[72.14270020 55.64422607]
[66.06887054 41.92895889]
[59.99503326 28.21369171]
[52.62434387 15.14950657]
[44.02577972 2.85866833]
[35.42721558 -9.43216991]
[26.82865334 -21.72300720]
[18.23008919 -34.01384735]
[9.63152599 -46.30468369]
[11.02112007 -31.36918831]
[6.99170876 -16.92052460]
[-1.92656827 -4.85966587]
[-14.56035900 3.22657704]
[-29.24747086 6.27431917]
[-44.05556488 3.88257742]
[-57.03637314 -3.63397312]
[-66.48205566 -15.28640175]
[-71.14987183 -29.54162979]
[-70.42567444 -44.52413940]
[-64.40476227 -58.26271820]
[-53.87928772 -68.94982910]
[-40.23404694 -75.17938995]
[-25.26431274 -76.13179779]
[-10.93961143 -71.68174744]
[0.85697025 -62.41293716]
[-4.80581617 -76.30296326]
[-10.46860313 -90.19299316]
[-16.13138962 -104.08301544]
[-30.93563080 -115.03363037]
[-27.87146759 -132.31303406]
[-33.74042892 -146.11721802]
[-39.60939026 -159.92138672]
[-45.47834778 -173.72557068]
[-59.93950272 -169.66313171]
[-74.80142975 -167.48335266]
[-89.82008362 -167.22203064]
[-104.74884796 -168.88343811]
[-119.34258270 -172.44032288]
[-133.36163330 -177.83424377]
[-146.57580566 -184.97665405]
[-158.76809692 -193.75025940]
[-169.73831177 -204.01100159]
[-179.30632019 -215.59036255]
[-187.31497192 -228.29823303]
[-193.63279724 -241.92590332]
[-198.15602112 -256.24960327]
[-200.81037903 -271.03414917]
[-201.55229187 -286.03674316]
[-200.36955261 -301.01104736]
[-197.28161621 -315.71115112]
[-192.33917236 -329.89566040]
[-185.62336731 -343.33166504]
[-177.24450684 -355.79855347]
[-167.34016418 -367.09158325]
[-156.07298279 -377.02529907]
[-143.62797546 -385.43661499]
[-130.20950317 -392.18737793]
[-116.03790283 -397.16674805]
[-101.34589386 -400.29296875]
[-86.37473297 -401.51470947]
[-71.37025452 -400.81185913]
[-56.57884979 -398.19604492]
[-42.24340439 -393.71014404]
[-28.59931755 -387.42782593]
[-15.87064171 -379.45230103]
[-4.26639128 -369.91448975]
[6.02288103 -358.97103882]
[14.82821560 -346.80163574]
[22.00502205 -333.60610962]
[27.43544960 -319.60116577]
[31.03032684 -305.01675415]
[32.73062134 -290.09234619]
[32.50841522 -275.07305908]
[30.36735344 -260.20550537]
[26.34259796 -245.73382568]
[20.50023460 -231.89566040]
[12.93620491 -218.91822815]
[3.77471447 -207.01463318]
[-6.83379650 -196.38035583]
[-18.71512604 -187.19001770]
[-31.67417145 -179.59452820]
[-25.80521202 -165.79035950]
[-19.93625069 -151.98617554]
[-14.06729031 -138.18199158]
[-2.97000480 -133.36776733]
[2.03249764 -121.91531372]
[-2.24136257 -109.74580383]
[3.42142391 -95.85577393]
[9.08421040 -81.96575165]
[14.74699688 -68.07572174]
[21.92236328 -54.90324783]
[30.52092743 -42.61240768]
[39.11949158 -30.32157135]
[47.71805573 -18.03073311]
[56.31661987 -5.73989582]
[64.91518402 6.55094242]
[64.02304840 -8.42250443]
[69.22194672 -22.49273682]
[79.63576508 -33.28867722]
[93.50960541 -38.99101639]
[108.50547028 -38.63881302]
[122.09629822 -32.29141617]
[131.99179077 -21.01847649]
[136.52438354 -6.71968174]
[134.93026733 8.19537067]
[127.47807312 21.21323204]
[115.42361450 30.14016342]
[100.79829407 33.47182083]
[86.06672668 30.64676285]
[73.71030426 22.13985825]
[79.78413391 35.85512543]
[85.85797119 49.57039261]
[91.93180084 63.28565598]
[98.00563812 77.00092316]
[104.07946777 90.71619415]
[109.96343231 96.22541809]
[110.13994598 104.68116760]
[116.00890350 118.48534393]
[121.05294800 122.75959015]
[122.90343475 128.13291931]
[121.84030914 132.78897095]
[127.29566956 146.76177979]
[133.26722717 160.52188110]
[139.74673462 174.05021667]
[146.22622681 187.57856750]
[152.70571899 201.10691833]
[159.23507690 207.49481201]
[159.17929077 214.88525391]
[165.45664978 228.50857544]
[171.73402405 242.13188171]
[185.91838074 237.21551514]
[200.51632690 233.71315002]
[215.38728333 231.65852356]
[230.38803101 231.07141113]
[245.37406921 231.95747375]
[260.20111084 234.30818176]
[274.72631836 238.10089111]
[288.80984497 243.29908752]
[302.31604004 249.85267639]
[315.11483765 257.69857788]
[327.08291626 266.76119995]
[338.10510254 276.95327759]
[348.07519531 288.17666626]
[356.89715576 300.32324219]
[364.48605347 313.27606201]
[370.76879883 326.91033936]
[375.68490601 341.09481812]
[379.18698120 355.69284058]
[381.24130249 370.56384277]
[381.82812500 385.56457520]
[380.94174194 400.55059814]
[378.59072876 415.37759399]
[374.79772949 429.90274048]
[369.59927368 443.98617554]
[363.04541016 457.49221802]
[355.19924927 470.29083252]
[346.13638306 482.25875854]
[335.94409180 493.28073120]
[324.72052002 503.25061035]
[312.57376099 512.07232666]
[299.62078857 519.66094971]
[285.98635864 525.94342041]
[271.80181885 530.85925293]
[257.20370483 534.36102295]
[242.33267212 536.41503906]
[227.33192444 537.00158691]
[212.34590149 536.11492920]
[197.51896667 533.76361084]
[182.99389648 529.97033691]
[168.91056824 524.77154541]
[155.40464783 518.21740723]
[142.60618591 510.37103271]
[130.63844299 501.30792236]
[119.61667633 491.11538696]
[109.64704132 479.89163208]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 165]
[18 164]
[19 163]
[20 161]
[21 160]
[22 159]
[23 158]
[29 157]
[30 156]
[31 153]
[32 152]
[33 150]
[34 149]
[35 148]
[36 147]
[37 146]
[38 145]
[39 131]
[40 130]
[41 129]
[42 128]
[43 127]
[44 126]
[60 125]
[61 124]
[62 123]
[63 122]
[65 119]
[66 118]
[67 117]
[68 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
