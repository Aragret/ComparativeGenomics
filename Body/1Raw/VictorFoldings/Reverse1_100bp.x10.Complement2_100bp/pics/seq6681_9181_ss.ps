%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[115.23982239 509.51092529]
[106.12509918 521.71099854]
[92.83300018 529.14337158]
[77.66645813 530.52032471]
[63.25317383 525.60327148]
[52.09033966 515.24420166]
[46.11197662 501.23779297]
[46.35387421 486.01077271]
[52.77412415 472.20135498]
[64.26037598 462.20205688]
[78.82257843 457.74536133]
[72.65248871 444.18881226]
[81.97486115 431.40585327]
[83.75732422 416.51214600]
[85.53978729 401.61843872]
[79.36970520 388.06188965]
[88.69207764 375.27893066]
[82.52199554 361.72241211]
[91.84436035 348.93945312]
[85.67427826 335.38293457]
[94.99664307 322.59997559]
[93.37207031 320.31549072]
[92.55453491 317.24981689]
[92.84609222 313.70718384]
[94.43322754 310.09530640]
[97.35426331 306.88259888]
[100.02005768 292.12139893]
[102.68585205 277.36016846]
[105.35164642 262.59893799]
[107.57676697 247.76490784]
[109.35923004 232.87118530]
[111.14169312 217.97747803]
[112.92416382 203.08375549]
[114.70662689 188.19003296]
[113.47965240 173.24031067]
[109.29264069 158.83651733]
[98.31026459 148.77487183]
[101.88792419 133.36349487]
[97.70092010 118.95970917]
[85.05349731 111.88941956]
[81.00897980 97.97582245]
[87.89530182 85.22730255]
[83.70829010 70.82352448]
[79.52127838 56.41973877]
[75.33426666 42.01595688]
[69.93381500 34.64894104]
[71.19385529 27.36649132]
[60.07839203 16.10784912]
[64.16921997 1.78603375]
[60.19712448 -12.67849064]
[56.22502899 -27.14301491]
[52.25293350 -41.60753632]
[41.13746643 -52.86618042]
[45.22829437 -67.18799591]
[41.25619888 -81.65251923]
[37.28410339 -96.11704254]
[30.75148010 -82.61427307]
[17.58460617 -75.42863464]
[2.69439840 -77.24018860]
[-8.36546135 -87.37327576]
[-11.46992111 -102.04850769]
[-5.46109247 -115.79238129]
[7.41987896 -123.47876740]
[22.36870956 -122.24083710]
[33.81047440 -112.53932190]
[31.58535576 -127.37336731]
[29.36023903 -142.20741272]
[27.13512230 -157.04145813]
[24.91000366 -171.87550354]
[22.68488693 -186.70954895]
[20.45977020 -201.54357910]
[15.22936153 -187.48503113]
[5.55887413 -176.01849365]
[-7.41561174 -168.49102783]
[-22.16986656 -165.78695679]
[-36.97057724 -168.22396851]
[-50.07896805 -175.51574707]
[-59.95507812 -186.80567932]
[-65.43867493 -200.76742554]
[-65.88555145 -215.76075745]
[-61.24320221 -230.02430725]
[-52.05701447 -241.88237000]
[-39.40616608 -249.94190979]
[-24.77687073 -253.25607300]
[-9.88776112 -251.43553162]
[3.51200581 -244.69415283]
[13.84823799 -233.82389832]
[19.90702248 -220.10028076]
[21.24525642 -235.04046631]
[14.77000141 -249.47590637]
[23.61191940 -261.46212769]
[24.95015335 -276.40231323]
[26.28838730 -291.34249878]
[27.51536369 -306.29223633]
[28.40817833 -321.26565552]
[29.07796478 -336.25067139]
[29.74774933 -351.23571777]
[30.41753387 -366.22076416]
[31.08732033 -381.20581055]
[17.18163490 -387.28826904]
[6.41496515 -397.98608398]
[0.24341543 -411.85244751]
[-0.49836376 -427.01208496]
[4.28994751 -441.41473389]
[13.96076870 -453.11257935]
[27.20620155 -460.52359009]
[42.23490906 -462.64547729]
[57.01438522 -459.19125366]
[69.54582214 -450.62811279]
[78.13444519 -438.11410522]
[81.61872101 -423.34170532]
[79.52742767 -408.30871582]
[72.14338684 -395.04821777]
[60.46524429 -385.35360718]
[46.07235718 -380.53601074]
[45.40257263 -365.55096436]
[44.73278809 -350.56594849]
[44.06300354 -335.58090210]
[43.39321899 -320.59585571]
[45.89782333 -316.52941895]
[45.87450027 -310.84640503]
[42.47381592 -305.17657471]
[45.11111832 -298.27249146]
[41.22857285 -290.00427246]
[39.89033890 -275.06408691]
[38.55210495 -260.12390137]
[45.12308121 -246.75709534]
[36.18544388 -233.70223999]
[34.84720612 -218.76205444]
[35.29381561 -203.76870728]
[37.51893234 -188.93466187]
[39.74404907 -174.10061646]
[41.96916580 -159.26657104]
[44.19428253 -144.43252563]
[46.41939926 -129.59848022]
[48.64451599 -114.76444244]
[51.74862671 -100.08914185]
[55.72072220 -85.62461853]
[59.69281769 -71.16008759]
[70.52416992 -60.93605042]
[66.71746063 -45.57963562]
[70.68955231 -31.11511040]
[74.66165161 -16.65058708]
[78.63374329 -2.18606257]
[89.46510315 8.03797913]
[85.65838623 23.39439392]
[89.73805237 37.82894897]
[93.92506409 52.23273087]
[98.11207581 66.63651276]
[102.29907990 81.04029083]
[114.94650269 88.11058044]
[118.99102020 102.02417755]
[112.10469818 114.77269745]
[116.29170990 129.17648315]
[127.57357025 140.26837158]
[123.69642639 154.64950562]
[127.88343811 169.05329895]
[130.49134827 154.28173828]
[136.17260742 140.39926147]
[144.66877747 128.03741455]
[155.59332275 117.75859833]
[168.44926453 110.03041077]
[182.65173340 105.20443726]
[197.55459595 103.50022888]
[212.47990417 104.99531555]
[226.74864197 109.62168884]
[239.71166992 117.16886902]
[250.77925110 127.29351044]
[259.44790649 139.53501892]
[265.32327271 153.33647156]
[268.13803101 168.07000732]
[267.76412964 183.06535339]
[264.21859741 197.64030457]
[257.66275024 211.13180542]
[248.39480591 222.92608643]
[236.83638000 232.48658752]
[223.51335144 239.37837219]
[209.03178406 243.28788757]
[194.05052185 244.03730774]
[179.25108337 241.59251404]
[165.30677795 236.06474304]
[152.85195923 227.70545959]
[142.45324707 216.89497375]
[134.58369446 204.12507629]
[129.60034180 189.97250366]
[127.81787872 204.86622620]
[126.03541565 219.75993347]
[124.25294495 234.65365601]
[122.47048187 249.54737854]
[124.32035065 253.47572327]
[124.77791595 257.39428711]
[124.01723480 260.86657715]
[122.33621216 263.55743408]
[120.11286163 265.26473999]
[117.44706726 280.02597046]
[114.78127289 294.78717041]
[112.11547852 309.54840088]
[109.89035797 324.38244629]
[115.93295288 339.00427246]
[106.73807526 350.72192383]
[112.78066254 365.34375000]
[103.58579254 377.06140137]
[109.62837982 391.68322754]
[100.43350983 403.40090942]
[98.65103912 418.29461670]
[96.86857605 433.18832397]
[102.91116333 447.81015015]
[93.71629333 459.52780151]
[106.81553650 467.29501343]
[115.61779022 479.72244263]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 208]
[13 206]
[14 205]
[15 204]
[17 202]
[19 200]
[21 198]
[26 197]
[27 196]
[28 195]
[29 194]
[30 189]
[31 188]
[32 187]
[33 186]
[34 185]
[35 157]
[36 156]
[38 154]
[39 153]
[42 150]
[43 149]
[44 148]
[45 147]
[47 146]
[49 144]
[50 143]
[51 142]
[52 141]
[54 139]
[55 138]
[56 137]
[65 136]
[66 135]
[67 134]
[68 133]
[69 132]
[70 131]
[71 130]
[88 129]
[89 128]
[91 126]
[92 125]
[93 124]
[94 122]
[95 119]
[96 118]
[97 117]
[98 116]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
