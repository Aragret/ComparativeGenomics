%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[195.08242798 466.43826294]
[198.75708008 451.86111450]
[204.72261047 438.06225586]
[212.82449341 425.39910889]
[222.85287476 414.19964600]
[234.54800415 404.75399780]
[247.60693359 397.30682373]
[242.36021423 383.25436401]
[237.11349487 369.20187378]
[231.86677551 355.14941406]
[226.62005615 341.09695435]
[221.37333679 327.04446411]
[216.12661743 312.99200439]
[210.87991333 298.93951416]
[205.21711731 285.04949951]
[199.14328003 271.33422852]
[193.06945801 257.61895752]
[185.79621887 244.50027466]
[177.38160706 232.08277893]
[168.96697998 219.66528320]
[160.55236816 207.24778748]
[152.13774109 194.83029175]
[143.72312927 182.41279602]
[139.28532410 180.64787292]
[135.90911865 176.07641602]
[135.24929810 169.49795532]
[127.20812225 156.83541870]
[119.16694641 144.17289734]
[111.12577057 131.51037598]
[103.08460236 118.84785461]
[88.96633148 115.58892059]
[81.19881439 103.35732269]
[84.25287628 89.19332123]
[76.21170044 76.53079987]
[68.17053223 63.86827087]
[55.77523422 60.30183029]
[49.33840561 49.58964157]
[51.84322739 37.75526810]
[43.61442184 25.21386719]
[35.01585770 12.92302895]
[26.41729355 0.63219082]
[13.87511253 -2.37721276]
[6.96638060 -12.79129887]
[8.94027138 -24.72571564]
[0.52565289 -37.14321136]
[-7.88896561 -49.56070709]
[-16.30358505 -61.97820282]
[-24.71820259 -74.39569855]
[-33.13282013 -86.81319427]
[-41.54743958 -99.23069000]
[-49.96205902 -111.64818573]
[-58.37667847 -124.06568146]
[-71.52684784 -116.82705688]
[-85.28882599 -110.83267212]
[-99.54518890 -106.13366699]
[-114.17431641 -102.77012634]
[-129.05137634 -100.77075958]
[-144.04946899 -100.15262604]
[-159.04060364 -100.92098236]
[-173.89689636 -103.06929016]
[-188.49159241 -106.57920837]
[-202.70016479 -111.42079926]
[-216.40139771 -117.55274963]
[-229.47839355 -124.92274475]
[-241.81958008 -133.46791077]
[-253.31967163 -143.11532593]
[-263.88052368 -153.78269958]
[-273.41207886 -165.37901306]
[-281.83294678 -177.80532837]
[-289.07135010 -190.95561218]
[-295.06552124 -204.71769714]
[-299.76428223 -218.97413635]
[-303.12759399 -233.60331726]
[-305.12670898 -248.48042297]
[-305.74459839 -263.47851562]
[-304.97598267 -278.46963501]
[-302.82742310 -293.32589722]
[-299.31726074 -307.92053223]
[-294.47543335 -322.12902832]
[-288.34326172 -335.83016968]
[-280.97305298 -348.90704346]
[-272.42767334 -361.24807739]
[-262.78005981 -372.74798584]
[-252.11251831 -383.30868530]
[-240.51603699 -392.84002686]
[-228.08958435 -401.26071167]
[-214.93917847 -408.49890137]
[-201.17700195 -414.49282837]
[-186.92048645 -419.19134521]
[-172.29124451 -422.55441284]
[-157.41410828 -424.55328369]
[-142.41600037 -425.17092896]
[-127.42488861 -424.40206909]
[-112.56867218 -422.25326538]
[-97.97409058 -418.74285889]
[-83.76567841 -413.90078735]
[-70.06464386 -407.76837158]
[-56.98789597 -400.39794922]
[-44.64699936 -391.85238647]
[-33.14723969 -382.20455933]
[-22.58673096 -371.53683472]
[-13.05557919 -359.94021606]
[-4.63509941 -347.51361084]
[2.60286617 -334.36309814]
[8.59656429 -320.60079956]
[13.29485798 -306.34420776]
[16.65766144 -291.71493530]
[18.65628624 -276.83773804]
[19.27367592 -261.83963013]
[18.50456810 -246.84854126]
[16.35552025 -231.99235535]
[12.84487152 -217.39782715]
[8.00257111 -203.18949890]
[1.86993444 -189.48857117]
[-5.50071669 -176.41194153]
[-14.04649639 -164.07118225]
[-23.69449425 -152.57157898]
[-34.36239624 -142.01126099]
[-45.95918274 -132.48030090]
[-37.54456329 -120.06280518]
[-29.12994385 -107.64530945]
[-20.71532631 -95.22781372]
[-12.30070782 -82.81031799]
[-3.88608885 -70.39282227]
[4.52852964 -57.97532654]
[12.94314861 -45.55783081]
[21.35776711 -33.14033508]
[37.53697205 -26.34325790]
[38.70812988 -7.96637297]
[47.30669403 4.32446480]
[55.90525818 16.61530304]
[58.63903809 17.23546219]
[61.29188156 18.97587395]
[63.43587112 21.81113434]
[64.66017914 25.56154633]
[64.62406921 29.90351105]
[80.48363495 37.41624832]
[80.83305359 55.82709885]
[88.87422943 68.48962402]
[96.91539764 81.15214539]
[111.03366852 84.41107941]
[118.80118561 96.64267731]
[115.74712372 110.80667877]
[123.78829956 123.46920013]
[131.82946777 136.13172913]
[139.87065125 148.79425049]
[147.91181946 161.45677185]
[156.14062500 173.99818420]
[164.55523682 186.41567993]
[172.96986389 198.83317566]
[181.38447571 211.25067139]
[189.79910278 223.66816711]
[198.21371460 236.08566284]
[197.87142944 221.08956909]
[203.99066162 207.39448547]
[215.38989258 197.64474487]
[229.86810303 193.72285461]
[244.62979126 196.38606262]
[256.82470703 205.12016296]
[264.09817505 218.23870850]
[265.04583740 233.20875549]
[259.48468018 247.13978577]
[248.48851013 257.34194946]
[234.18049622 261.84536743]
[219.32330322 259.78051758]
[206.78471375 251.54513550]
[212.85855103 265.26040649]
[218.93238831 278.97567749]
[222.52905273 281.40835571]
[224.92369080 284.54367065]
[226.04299927 287.91748047]
[225.97198486 291.08947754]
[224.93237305 293.69281006]
[230.17909241 307.74526978]
[235.42581177 321.79776001]
[240.67253113 335.85021973]
[245.91925049 349.90270996]
[251.16596985 363.95516968]
[256.41268921 378.00762939]
[261.65939331 392.06011963]
[276.40356445 389.12655640]
[291.42736816 388.59625244]
[306.34170532 390.48294067]
[320.76016235 394.73776245]
[334.30935669 401.25048828]
[346.63830566 409.85241699]
[357.42764282 420.32077026]
[366.39791870 432.38436890]
[373.31674194 445.73074341]
[378.00497437 460.01419067]
[380.34109497 474.86474609]
[380.26464844 489.89770508]
[377.77758789 504.72372437]
[372.94436646 518.95874023]
[365.89013672 532.23406982]
[356.79763794 544.20581055]
[345.90237427 554.56390381]
[333.48660278 563.03997803]
[319.87185669 569.41461182]
[305.41085815 573.52252197]
[290.47811890 575.25744629]
[275.46047974 574.57434082]
[260.74691772 571.49102783]
[246.71855164 566.08721924]
[233.73873901 558.50299072]
[222.14369202 548.93475342]
[212.23374939 537.63037109]
[204.26562500 524.88262939]
[198.44567871 511.02169800]
[194.92468262 496.40667725]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 180]
[8 179]
[9 178]
[10 177]
[11 176]
[12 175]
[13 174]
[14 173]
[15 168]
[16 167]
[17 166]
[18 153]
[19 152]
[20 151]
[21 150]
[22 149]
[23 148]
[26 147]
[27 146]
[28 145]
[29 144]
[30 143]
[33 140]
[34 139]
[35 138]
[38 136]
[39 131]
[40 130]
[41 129]
[44 127]
[45 126]
[46 125]
[47 124]
[48 123]
[49 122]
[50 121]
[51 120]
[52 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
