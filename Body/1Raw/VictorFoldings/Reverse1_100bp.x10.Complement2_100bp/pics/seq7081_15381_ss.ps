%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[205.23246765 479.22738647]
[199.56967163 465.33734131]
[193.90689087 451.44732666]
[188.24411011 437.55728149]
[182.58131409 423.66726685]
[176.91853333 409.77725220]
[171.25575256 395.88720703]
[165.59295654 381.99719238]
[161.61645508 379.35211182]
[159.25935364 374.18093872]
[159.97515869 367.60830688]
[154.72843933 353.55584717]
[149.48171997 339.50338745]
[135.86660767 333.57342529]
[130.34550476 319.39694214]
[136.65771484 305.15637207]
[131.41099548 291.10391235]
[119.71068573 281.88696289]
[122.13219452 266.25216675]
[116.88547516 252.19969177]
[111.63875580 238.14723206]
[106.39203644 224.09475708]
[101.14531708 210.04228210]
[95.86077118 204.87553406]
[95.92680359 195.74133301]
[94.14179993 210.63475037]
[88.75670624 224.63478088]
[80.10081482 236.88531494]
[68.70343781 246.63722229]
[55.26152802 253.29418945]
[40.59706879 256.44912720]
[25.60679245 255.90908813]
[11.20736217 251.70713806]
[-1.72069192 244.10020447]
[-12.38681412 233.55346680]
[-20.13876724 220.71183777]
[-24.50251579 206.36061096]
[-25.21121597 191.37736511]
[-22.22152901 176.67832947]
[-15.71627617 163.16235352]
[-6.09325647 151.65594482]
[6.05907917 142.86271667]
[19.99761009 137.32038879]
[34.86999130 135.36788940]
[49.76676941 137.12458801]
[63.77700043 142.48307800]
[76.04395294 151.11567688]
[85.81750488 162.49450684]
[92.50000000 175.92376709]
[92.50000000 160.92376709]
[92.50000000 145.92376709]
[92.50000000 130.92376709]
[92.50000000 115.92376709]
[85.06703949 109.31788635]
[82.40034485 99.73793793]
[85.35108185 90.24163055]
[92.97743225 83.85998535]
[93.42404175 68.86663818]
[93.87064362 53.87328720]
[94.31725311 38.87993622]
[93.87064362 23.88658714]
[92.53240967 8.94640255]
[83.15326691 0.09233917]
[82.34622192 -12.37892532]
[89.99964905 -21.74650955]
[88.88400269 -36.70496368]
[87.76834869 -51.66341782]
[86.65270233 -66.62187195]
[85.53705597 -81.58032227]
[84.42140198 -96.53878021]
[73.70335388 -111.51225281]
[81.93411255 -127.01133728]
[80.59587860 -141.95152283]
[71.21672821 -150.80558777]
[70.40969086 -163.27685547]
[78.06311035 -172.64443970]
[76.94746399 -187.60289001]
[75.83181763 -202.56134033]
[73.82780457 -217.42686462]
[70.94252777 -232.14675903]
[68.05725861 -246.86665344]
[65.17198181 -261.58654785]
[61.12164688 -266.81207275]
[60.42317200 -272.45205688]
[62.42681122 -276.78729248]
[59.98108292 -291.58657837]
[57.53535461 -306.38583374]
[55.08962631 -321.18511963]
[40.06509018 -322.49435425]
[25.83843994 -327.49966431]
[13.30397797 -335.88644409]
[3.24963069 -347.12747192]
[-3.69257760 -360.51614380]
[-7.08625364 -375.21084595]
[-6.71806860 -390.28781128]
[-2.61116600 -404.79934692]
[4.97629023 -417.83319092]
[15.56734657 -428.57006836]
[28.49623871 -436.33502197]
[42.95024872 -440.63995361]
[58.02078247 -441.21423340]
[72.76049805 -438.02178955]
[86.24283600 -431.26330566]
[97.62029266 -421.36358643]
[106.17767334 -408.94497681]
[111.37704468 -394.78808594]
[112.89157867 -379.78286743]
[110.62606049 -364.87252808]
[104.72291565 -350.99435425]
[95.55320740 -339.02072144]
[83.69336700 -329.70434570]
[69.88890076 -323.63082886]
[72.33462524 -308.83157349]
[74.78034973 -294.03228760]
[77.22608185 -279.23303223]
[79.89187622 -264.47180176]
[82.77714539 -249.75192261]
[85.66242218 -235.03202820]
[88.54769135 -220.31213379]
[96.06651306 -233.29164124]
[109.73136139 -239.47807312]
[124.44558716 -236.56404114]
[134.72114563 -225.63642883]
[136.72552490 -210.77095032]
[129.71110535 -197.51205444]
[116.29412842 -190.80500793]
[101.47877502 -193.15133667]
[90.79026794 -203.67698669]
[91.90592194 -188.71853638]
[93.02156830 -173.76008606]
[103.66928101 -159.81040955]
[95.53606415 -143.28974915]
[96.87429810 -128.34956360]
[105.95267487 -120.35522461]
[107.18984985 -107.91925812]
[99.37985992 -97.65442657]
[100.49550629 -82.69596863]
[101.61115265 -67.73751831]
[102.72680664 -52.77906418]
[103.84245300 -37.82061005]
[104.95809937 -22.86215782]
[115.60581207 -8.91249466]
[107.47259521 7.60816813]
[108.81082916 22.54835320]
[117.63917542 10.42150688]
[131.87347412 5.69026661]
[146.20469666 10.11926937]
[155.28764343 22.05660629]
[155.73460388 37.04994583]
[147.37887573 49.50714111]
[133.33692932 54.78197098]
[118.84607697 50.90705109]
[109.31060028 39.32654190]
[108.86399841 54.31989288]
[108.41738892 69.31324005]
[107.97078705 84.30659485]
[117.59965515 100.26206207]
[107.50000000 115.92376709]
[107.50000000 130.92376709]
[107.50000000 145.92376709]
[107.50000000 160.92376709]
[107.50000000 175.92376709]
[110.05583191 190.70442200]
[115.19779205 204.79556274]
[120.44451141 218.84803772]
[125.69123077 232.90051270]
[130.93794250 246.95297241]
[136.18466187 261.00546265]
[148.26025391 271.22750854]
[145.46347046 285.85717773]
[150.71018982 299.90966797]
[164.81069946 306.52880859]
[169.93144226 320.85476685]
[163.53419495 334.25665283]
[168.78091431 348.30914307]
[174.02763367 362.36160278]
[179.48298645 376.33441162]
[185.14576721 390.22442627]
[190.80856323 404.11444092]
[196.47134399 418.00448608]
[202.13412476 431.89450073]
[207.79692078 445.78454590]
[213.45970154 459.67456055]
[219.12249756 473.56457520]
[233.96354675 471.00387573]
[249.00807190 471.69387817]
[263.55242920 475.60232544]
[276.91635132 482.54638672]
[288.47473145 492.20129395]
[297.68704224 504.11547852]
[304.12237549 517.73168945]
[307.47970581 532.41302490]
[307.60205078 547.47290039]
[304.48364258 562.20684814]
[298.27038574 575.92578125]
[289.25286865 587.98803711]
[277.85284424 597.82946777]
[264.60351562 604.98968506]
[250.12455750 609.13391113]
[235.09323120 610.06823730]
[220.21252441 607.74896240]
[206.17848206 602.28460693]
[193.64746094 593.93072510]
[183.20558167 583.07800293]
[175.34121704 570.23406982]
[170.42221069 555.99969482]
[168.67863464 541.04064941]
[170.19203186 526.05651855]
[174.89160156 511.74819946]
[182.55757141 498.78491211]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 184]
[2 183]
[3 182]
[4 181]
[5 180]
[6 179]
[7 178]
[8 177]
[11 176]
[12 175]
[13 174]
[16 171]
[17 170]
[19 168]
[20 167]
[21 166]
[22 165]
[23 164]
[25 163]
[49 162]
[50 161]
[51 160]
[52 159]
[53 158]
[57 156]
[58 155]
[59 154]
[60 153]
[61 144]
[62 143]
[65 141]
[66 140]
[67 139]
[68 138]
[69 137]
[70 136]
[72 133]
[73 132]
[76 130]
[77 129]
[78 128]
[79 119]
[80 118]
[81 117]
[82 116]
[85 115]
[86 114]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
