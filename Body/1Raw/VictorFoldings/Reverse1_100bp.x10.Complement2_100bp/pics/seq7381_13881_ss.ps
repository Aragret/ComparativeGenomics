%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[33.35213470 537.40576172]
[31.77546310 552.35601807]
[27.82088470 566.85974121]
[21.59083557 580.54119873]
[13.24668598 593.04602051]
[3.00457096 604.05035400]
[-8.87021351 613.26916504]
[-22.07008362 620.46356201]
[-36.25312805 625.44726562]
[-51.05197525 628.09118652]
[-66.08329773 628.32684326]
[-80.95774841 626.14807129]
[-95.29003906 621.61138916]
[-108.70893860 614.83428955]
[-120.86685944 605.99224854]
[-131.44888306 595.31439209]
[-140.18090820 583.07727051]
[-146.83674622 569.59777832]
[-151.24400330 555.22515869]
[-153.28852844 540.33166504]
[-152.91735840 525.30310059]
[-150.14010620 510.52868652]
[-145.02870178 496.39114380]
[-137.71556091 483.25668335]
[-128.39009094 471.46551514]
[-117.29385376 461.32302856]
[-104.71426392 453.09197998]
[-90.97717285 446.98556519]
[-76.43840027 443.16192627]
[-61.47452927 441.72012329]
[-46.47316742 442.69750977]
[-31.82288170 446.06875610]
[-26.16009521 432.17874146]
[-20.49730873 418.28869629]
[-14.83452225 404.39868164]
[-9.17173576 390.50863647]
[-11.53170204 375.80218506]
[0.84288108 365.94418335]
[6.50566769 352.05416870]
[11.75238609 338.00167847]
[16.57838440 323.79922485]
[21.40438080 309.59677124]
[9.39461994 300.69021606]
[0.71404058 288.49114990]
[-3.77698684 274.18692017]
[-3.62663603 259.17465210]
[1.16295171 244.92465210]
[10.13464546 232.83648682]
[22.41992378 224.10148621]
[36.82294083 219.58534241]
[51.93693542 219.74235535]
[56.76293564 205.53990173]
[61.58893204 191.33743286]
[58.35780716 176.79753113]
[70.12368774 166.22044373]
[74.94969177 152.01799011]
[79.77568817 137.81553650]
[84.49581909 123.57754517]
[89.10983276 109.30481720]
[86.37054443 95.59394836]
[96.61743927 86.08117676]
[93.50021362 70.57009888]
[104.77729797 60.83990097]
[109.39130402 46.56716537]
[104.22415924 34.74924088]
[108.36100769 22.95643616]
[119.06948853 17.33016205]
[123.89548492 3.12770581]
[128.72148132 -11.07474995]
[133.54748535 -25.27720642]
[138.37347412 -39.47966003]
[143.19947815 -53.68211746]
[147.81349182 -67.95484924]
[152.10760498 -82.32706451]
[156.29461670 -96.73084259]
[160.48162842 -111.13462830]
[164.66864014 -125.53840637]
[168.85565186 -139.94218445]
[173.04266357 -154.34597778]
[164.95172119 -161.20872498]
[159.62408447 -170.33929443]
[157.64476013 -180.68466187]
[159.21426392 -191.06143188]
[164.12866211 -200.29119873]
[171.80560303 -207.33438110]
[181.35327148 -211.40731812]
[191.67393494 -212.06936646]
[196.71086121 -226.19839478]
[201.74777222 -240.32742310]
[206.78469849 -254.45645142]
[211.82160950 -268.58547974]
[210.87945557 -273.71963501]
[211.89892578 -278.24887085]
[214.32113647 -281.52728271]
[217.41178894 -283.22436523]
[223.07458496 -297.11441040]
[228.73736572 -311.00442505]
[215.77128601 -318.59796143]
[204.01789856 -327.95950317]
[193.71650696 -338.89852905]
[185.07681274 -351.19226074]
[178.27471924 -364.59048462]
[173.44869995 -378.82040405]
[170.69702148 -393.59228516]
[170.07568359 -408.60543823]
[171.59736633 -423.55419922]
[175.23104858 -438.13421631]
[180.90280151 -452.04867554]
[188.49711609 -465.01428223]
[197.85940552 -476.76708984]
[208.79904175 -487.06781006]
[221.09333801 -495.70675659]
[234.49197388 -502.50802612]
[248.72218323 -507.33316040]
[263.49426270 -510.08392334]
[278.50744629 -510.70431519]
[293.45611572 -509.18173218]
[308.03588867 -505.54711914]
[321.95001221 -499.87451172]
[334.91516113 -492.27938843]
[346.66735840 -482.91638184]
[356.96740723 -471.97610474]
[365.60559082 -459.68127441]
[372.40603638 -446.28222656]
[377.23028564 -432.05172729]
[379.98013306 -417.27947998]
[380.59960938 -402.26623535]
[379.07608032 -387.31768799]
[375.44058228 -372.73809814]
[369.76712036 -358.82434082]
[362.17120361 -345.85968018]
[352.80746460 -334.10803223]
[341.86654663 -323.80865479]
[329.57116699 -315.17126465]
[316.17169189 -308.37164307]
[301.94088745 -303.54827881]
[287.16848755 -300.79934692]
[272.15521240 -300.18078613]
[257.20675659 -301.70523071]
[242.62739563 -305.34164429]
[236.96461487 -291.45162964]
[231.30181885 -277.56158447]
[225.95063782 -263.54858398]
[220.91372681 -249.41954041]
[215.87680054 -235.29051208]
[210.83988953 -221.16148376]
[205.80297852 -207.03245544]
[217.90914917 -191.66838074]
[218.27995300 -171.96701050]
[206.59048462 -155.92498779]
[187.44645691 -150.15896606]
[183.25944519 -135.75517273]
[179.07243347 -121.35139465]
[174.88542175 -106.94761658]
[170.69841003 -92.54383087]
[166.51139832 -78.14005280]
[167.66287231 -70.83964539]
[162.15333557 -63.55385208]
[163.55981445 -58.98976898]
[162.11410522 -53.49368668]
[157.40193176 -48.85611725]
[152.57594299 -34.65366364]
[147.74993896 -20.45120811]
[142.92393494 -6.24875212]
[138.09794617 7.95370340]
[133.27194214 22.15615845]
[137.61280823 39.15980148]
[123.66403961 51.18117523]
[119.05002594 65.45391083]
[122.49727631 79.94410706]
[110.89016724 90.69518280]
[113.62945557 104.40605164]
[103.38256073 113.91882324]
[98.76855469 128.19155884]
[99.10651398 137.31973267]
[93.97814178 142.64154053]
[89.15214539 156.84399414]
[84.32614899 171.04644775]
[87.21208191 186.60221863]
[75.79138947 196.16343689]
[70.96539307 210.36589050]
[66.13938904 224.56834412]
[78.22007751 233.65209961]
[86.88984680 246.00837708]
[91.30993652 260.41986084]
[91.05951691 275.47152710]
[86.17568207 289.68948364]
[77.14862061 301.68545532]
[64.87245178 310.29217529]
[50.55662918 314.67709351]
[35.60683823 314.42279053]
[30.78083992 328.62524414]
[25.95484161 342.82769775]
[26.95173073 347.05383301]
[26.58848381 350.98223877]
[25.12570572 354.22195435]
[22.92422104 356.50671387]
[20.39569473 357.71694946]
[14.73290825 371.60696411]
[16.68783379 387.30694580]
[4.71829081 396.17144775]
[-0.94449562 410.06146240]
[-6.60728216 423.95147705]
[-12.27006912 437.84152222]
[-17.93285561 451.73153687]
[-5.10144329 459.56423950]
[6.30726337 469.35391235]
[15.99775314 480.84695435]
[23.71901703 493.74572754]
[29.27105904 507.71609497]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 205]
[33 204]
[34 203]
[35 202]
[36 201]
[38 199]
[39 198]
[40 193]
[41 192]
[42 191]
[51 182]
[52 181]
[53 180]
[55 178]
[56 177]
[57 176]
[58 174]
[59 173]
[61 171]
[63 169]
[64 168]
[67 166]
[68 165]
[69 164]
[70 163]
[71 162]
[72 161]
[73 158]
[74 156]
[75 155]
[76 154]
[77 153]
[78 152]
[79 151]
[87 147]
[88 146]
[89 145]
[90 144]
[91 143]
[95 142]
[96 141]
[97 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
