%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[-16.66223526 620.42419434]
[-16.52439308 635.51208496]
[-20.29721260 650.12121582]
[-27.72345543 663.25567627]
[-38.29679108 674.01983643]
[-51.29630661 681.67980957]
[-65.83567810 685.71325684]
[-80.92359161 685.84527588]
[-95.53131104 682.06683350]
[-108.66287994 674.63549805]
[-119.42295074 664.05804443]
[-127.07788849 651.05554199]
[-131.10575867 636.51464844]
[-131.23196411 621.42669678]
[-127.44786072 606.82037354]
[-120.01147461 593.69171143]
[-109.42983246 582.93572998]
[-96.42440033 575.28582764]
[-81.88191986 571.26354980]
[-66.79391479 571.14318848]
[-63.03761292 556.62109375]
[-59.28131104 542.09906006]
[-70.57194519 551.97436523]
[-85.13679504 555.56115723]
[-99.72203064 552.05816650]
[-111.06927490 542.24798584]
[-116.64352417 528.32220459]
[-115.19947815 513.39184570]
[-107.05973816 500.79244995]
[-94.04273987 493.33874512]
[-79.05652618 492.69589233]
[-65.44904327 499.00750732]
[-56.26024246 510.86355591]
[-53.54292297 525.61541748]
[-47.46908951 511.90011597]
[-41.39525604 498.18484497]
[-35.32142258 484.46957397]
[-29.24758911 470.75433350]
[-23.48155594 456.90682983]
[-18.02619934 442.93405151]
[-12.57084179 428.96124268]
[-24.64990425 420.12689209]
[-34.03774643 408.45791626]
[-40.08975220 394.74594116]
[-42.38787842 379.92330933]
[-40.76953888 364.99945068]
[-35.33907318 350.99234009]
[-26.46106529 338.85897827]
[-14.73584557 329.42996216]
[-0.95892185 323.35278320]
[13.93300438 321.04714966]
[28.92571831 322.67617798]
[34.38107681 308.70336914]
[39.83643341 294.73056030]
[45.29179001 280.75778198]
[50.74714661 266.78497314]
[55.25477600 252.47828674]
[58.79444885 237.90191650]
[62.33412170 223.32553101]
[65.87379456 208.74916077]
[69.41346741 194.17279053]
[72.95314026 179.59640503]
[76.49281311 165.02003479]
[71.97737885 150.82637024]
[82.75270844 139.24176025]
[86.29238129 124.66539001]
[89.83205414 110.08901978]
[86.08058929 96.61986542]
[95.59156799 86.37131500]
[99.13124084 71.79493713]
[100.35822296 56.84520340]
[99.24256897 41.88674927]
[90.50028992 28.70027351]
[97.26954651 15.43277931]
[96.15390015 0.47432637]
[95.03825378 -14.48412704]
[93.92260742 -29.44258118]
[92.80695343 -44.40103531]
[91.69130707 -59.35948563]
[90.46433258 -74.30921936]
[89.12609863 -89.24940491]
[78.86364746 -91.95332336]
[69.77349854 -97.38954163]
[62.56449509 -105.12055969]
[57.79499435 -114.53045654]
[55.82965088 -124.87398529]
[56.81154251 -135.33557129]
[60.65182877 -145.09361267]
[67.03765869 -153.38505554]
[75.45760345 -159.56500244]
[85.24264526 -163.15687561]
[77.30073547 -176.84031677]
[84.84768677 -189.68136597]
[84.62435913 -204.67971802]
[84.40103149 -219.67805481]
[84.17770386 -234.67639160]
[83.95437622 -249.67472839]
[69.71131134 -254.91871643]
[58.32698822 -264.95672607]
[51.34103775 -278.43118286]
[49.69825745 -293.51977539]
[53.62081528 -308.18191528]
[62.57822418 -320.43463135]
[75.35906219 -328.62088013]
[90.23483276 -331.63351440]
[105.19370270 -329.06512451]
[118.21260834 -321.26303101]
[127.53085327 -309.28244019]
[131.88821411 -294.74359131]
[130.69540405 -279.61279297]
[124.11374664 -265.93630981]
[113.03333282 -255.56379700]
[98.95271301 -249.89805603]
[99.17604065 -234.89971924]
[99.39936829 -219.90138245]
[99.62269592 -204.90304565]
[99.84602356 -189.90469360]
[107.77195740 -177.29403687]
[100.24098206 -163.38020325]
[117.90620422 -154.90028381]
[128.85737610 -138.55578613]
[129.99049377 -118.83524323]
[120.91119385 -101.20355225]
[104.06628418 -90.58763885]
[105.40451813 -75.64745331]
[109.13222504 -69.26576233]
[106.64975739 -60.47513580]
[107.76541138 -45.51668167]
[108.88105774 -30.55822945]
[109.99670410 -15.59977531]
[111.11235809 -0.64132231]
[112.22800446 14.31713104]
[120.89048767 26.43367767]
[114.20102692 40.77109909]
[115.31667328 55.72955322]
[121.07133484 41.87733841]
[130.30639648 30.05728912]
[142.35517883 21.12270737]
[156.34788513 15.71858978]
[171.27433777 14.23506260]
[186.05700684 16.77922249]
[199.62870789 23.16740417]
[211.00968933 32.93844223]
[219.37835693 45.38695145]
[224.13056946 59.61426926]
[224.92324829 74.59330750]
[221.69917297 89.24272919]
[214.69108582 102.50495911]
[204.40492249 113.42259979]
[191.58325195 121.20749664]
[177.15167236 125.29764557]
[162.15200806 125.39778137]
[147.66709900 121.50067139]
[134.74263000 113.88765717]
[124.31162262 103.10831451]
[117.12710571 89.94082642]
[113.70761871 75.33460999]
[110.16794586 89.91098022]
[113.91941071 103.38013458]
[104.40843201 113.62868500]
[100.86875916 128.20506287]
[97.32908630 142.78143311]
[101.59133148 158.01770020]
[91.06918335 168.55970764]
[87.52951050 183.13607788]
[83.98983765 197.71246338]
[80.45017242 212.28883362]
[76.91049957 226.86520386]
[73.37082672 241.44158936]
[69.83115387 256.01794434]
[81.65858459 246.79234314]
[96.58611298 245.31967163]
[109.98828888 252.05627441]
[117.71230316 264.91473389]
[117.36477661 279.91070557]
[109.05339813 292.39752197]
[95.35353851 298.50604248]
[80.51025391 296.34344482]
[69.12288666 286.57983398]
[64.71994781 272.24032593]
[59.26458740 286.21313477]
[53.80923080 300.18591309]
[48.35387421 314.15872192]
[42.89851761 328.13153076]
[55.02881241 337.09204102]
[64.41897583 348.87808228]
[70.43360901 362.68243408]
[72.66822052 377.56170654]
[70.97641754 392.50076294]
[65.47950745 406.48193359]
[56.55777740 418.55435181]
[44.82421875 427.89865112]
[31.08241463 433.88256836]
[16.27149391 436.10369873]
[1.40195644 434.41659546]
[-4.05340052 448.38940430]
[-9.50875759 462.36218262]
[-8.71988487 467.52212524]
[-9.87376308 472.01898193]
[-12.39250374 475.22381592]
[-15.53232193 476.82815552]
[-21.60615540 490.54342651]
[-27.67999077 504.25869751]
[-33.75382233 517.97393799]
[-39.82765961 531.68920898]
[-44.75925064 545.85534668]
[-48.51555252 560.37744141]
[-52.27185440 574.89947510]
[-39.13455582 582.32067871]
[-28.36631775 592.88983154]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 208]
[21 207]
[22 206]
[34 205]
[35 204]
[36 203]
[37 202]
[38 201]
[39 197]
[40 196]
[41 195]
[52 184]
[53 183]
[54 182]
[55 181]
[56 180]
[57 170]
[58 169]
[59 168]
[60 167]
[61 166]
[62 165]
[63 164]
[65 162]
[66 161]
[67 160]
[69 158]
[70 157]
[71 135]
[72 134]
[74 132]
[75 131]
[76 130]
[77 129]
[78 128]
[79 127]
[80 125]
[81 124]
[91 119]
[93 117]
[94 116]
[95 115]
[96 114]
[97 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
