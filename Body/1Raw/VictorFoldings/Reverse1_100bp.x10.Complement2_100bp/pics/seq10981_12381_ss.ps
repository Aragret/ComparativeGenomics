%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[136.17442322 862.55010986]
[122.28890991 856.85711670]
[108.87372589 850.13031006]
[96.00569916 842.40814209]
[83.75855255 833.73492432]
[72.20243073 824.16027832]
[61.40352249 813.73913574]
[51.42368698 802.53106689]
[42.32009125 790.60034180]
[34.14487839 778.01531982]
[26.94487381 764.84802246]
[20.76132202 751.17395020]
[15.62964058 737.07135010]
[11.57922363 722.62103271]
[8.63327312 707.90576172]
[6.80866289 693.00988770]
[6.11584377 678.01861572]
[6.55878401 663.01788330]
[8.13494778 648.09368896]
[10.83530521 633.33135986]
[14.64438915 618.81555176]
[19.54038239 604.62945557]
[25.49523926 590.85418701]
[32.47484970 577.56878662]
[40.43923950 564.84924316]
[49.34278488 552.76855469]
[59.13448715 541.39575195]
[69.75825500 530.79608154]
[81.15324402 521.03027344]
[93.25418091 512.15417480]
[105.99175262 504.21871948]
[119.29299164 497.26928711]
[133.08172607 491.34573364]
[147.27894592 486.48199463]
[161.80335999 482.70590210]
[159.13755798 467.94467163]
[156.47177124 453.18347168]
[153.80596924 438.42224121]
[151.14018250 423.66104126]
[148.47438049 408.89981079]
[145.69877625 394.15884399]
[142.81349182 379.43896484]
[139.92822266 364.71905518]
[137.04295349 349.99917603]
[134.15768433 335.27929688]
[131.27241516 320.55938721]
[128.38713074 305.83950806]
[125.50186157 291.11959839]
[122.61659241 276.39971924]
[119.73131561 261.67984009]
[116.84604645 246.95993042]
[113.96076965 232.24005127]
[111.07550049 217.52015686]
[107.68203735 214.15957642]
[106.36363983 208.63157654]
[108.33032227 202.31939697]
[105.88459778 187.52012634]
[103.43887329 172.72085571]
[99.24683380 166.63409424]
[101.06861115 157.68316650]
[98.84349060 142.84913635]
[96.61837769 128.01509094]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[88.54757690 74.21002960]
[85.77197266 59.46907043]
[82.44970703 44.84160995]
[79.12744904 30.21414948]
[74.17506409 22.53875160]
[75.86633301 15.34421253]
[72.76222229 0.66890973]
[69.65811157 -14.00639248]
[66.55400085 -28.68169594]
[63.23174286 -43.30915451]
[59.69207001 -57.88553238]
[56.15240097 -72.46190643]
[45.37707520 -84.04650116]
[49.89250183 -98.24017334]
[34.89765549 -97.14268494]
[19.92669487 -98.52838898]
[5.38803625 -102.35948181]
[-8.32169437 -108.53144836]
[-20.82848549 -116.87590790]
[-31.79114151 -127.16522980]
[-40.91059494 -139.11869812]
[-47.93806076 -152.41021729]
[-52.68182373 -166.67720032]
[-55.01247025 -181.53041077]
[-54.86641693 -196.56465149]
[-52.24765015 -211.36978149]
[-47.22761536 -225.54190063]
[-39.94325638 -238.69439697]
[-30.59329796 -250.46844482]
[-19.43281555 -260.54284668]
[-6.76627302 -268.64276123]
[7.06077528 -274.54721069]
[21.67111778 -278.09512329]
[36.66617584 -279.18972778]
[51.63686752 -277.80114746]
[66.17478943 -273.96725464]
[79.88333130 -267.79263306]
[92.38851166 -259.44577026]
[103.34918976 -249.15434265]
[112.46633911 -237.19911194]
[119.49124146 -223.90623474]
[124.23225403 -209.63835144]
[126.56004333 -194.78468323]
[126.41109467 -179.75047302]
[123.78947449 -164.94584656]
[118.76670837 -150.77468872]
[111.47981262 -137.62359619]
[102.12758636 -125.85135651]
[90.96516418 -115.77910614]
[78.29706573 -107.68163300]
[64.46887970 -101.77984619]
[74.99102020 -91.23784637]
[70.72877502 -76.00157928]
[74.26844788 -61.42520142]
[77.80812073 -46.84882736]
[81.34825897 -43.64313507]
[82.91217804 -38.17951202]
[81.22930908 -31.78580475]
[84.33341217 -17.11050224]
[87.43752289 -2.43520045]
[90.54163361 12.24010181]
[93.75491333 26.89188957]
[97.07717133 41.51934814]
[100.39942932 56.14680862]
[110.48034668 45.03937531]
[125.45880127 45.84310913]
[134.29322815 57.96552277]
[130.47122192 72.47042847]
[116.81021881 78.66534424]
[103.38162231 71.98491669]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[111.45242310 125.78997040]
[113.67753601 140.62400818]
[115.90265656 155.45805359]
[118.23814392 170.27511597]
[120.68386841 185.07440186]
[123.12959290 199.87367249]
[125.79539490 214.63488770]
[128.68066406 229.35476685]
[131.56593323 244.07466125]
[134.45120239 258.79455566]
[137.33648682 273.51443481]
[140.22175598 288.23434448]
[143.10702515 302.95422363]
[145.99229431 317.67413330]
[148.87757874 332.39401245]
[151.76284790 347.11389160]
[154.64811707 361.83380127]
[157.53338623 376.55368042]
[160.41867065 391.27359009]
[165.14031982 399.09301758]
[163.23559570 406.23400879]
[165.90139771 420.99523926]
[168.56718445 435.75643921]
[171.23298645 450.51766968]
[173.89878845 465.27890015]
[176.56457520 480.04010010]
[191.49230957 478.49731445]
[206.49397278 478.08789062]
[221.48362732 478.81420898]
[236.37542725 480.67211914]
[251.08406067 483.65097046]
[265.52526855 487.73367310]
[279.61636353 492.89685059]
[293.27661133 499.11096191]
[306.42776489 506.34039307]
[318.99450684 514.54370117]
[330.90484619 523.67395020]
[342.09054565 533.67883301]
[352.48757935 544.50097656]
[362.03634644 556.07849121]
[370.68215942 568.34497070]
[378.37551880 581.23022461]
[385.07232666 594.66040039]
[390.73425293 608.55865479]
[395.32885742 622.84521484]
[398.82980347 637.43841553]
[401.21707153 652.25457764]
[402.47695923 667.20880127]
[402.60226440 682.21551514]
[401.59225464 697.18878174]
[399.45272827 712.04272461]
[396.19595337 726.69232178]
[391.84057617 741.05364990]
[386.41149902 755.04443359]
[379.93988037 768.58459473]
[372.46276855 781.59649658]
[364.02297974 794.00567627]
[354.66888428 805.74102783]
[344.45401001 816.73529053]
[333.43692017 826.92553711]
[321.68072510 836.25341797]
[309.25271606 844.66540527]
[296.22412109 852.11346436]
[282.66955566 858.55480957]
[268.66662598 863.95257568]
[254.29559326 868.27581787]
[239.63876343 871.49987793]
[224.78005981 873.60620117]
[209.80462646 874.58270264]
[194.79821777 874.42388916]
[179.84680176 873.13055420]
[165.03602600 870.71020508]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 164]
[36 163]
[37 162]
[38 161]
[39 160]
[40 159]
[41 157]
[42 156]
[43 155]
[44 154]
[45 153]
[46 152]
[47 151]
[48 150]
[49 149]
[50 148]
[51 147]
[52 146]
[53 145]
[56 144]
[57 143]
[58 142]
[60 141]
[61 140]
[62 139]
[63 138]
[65 136]
[66 135]
[67 129]
[68 128]
[69 127]
[71 126]
[72 125]
[73 124]
[74 123]
[75 120]
[76 119]
[77 118]
[79 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
