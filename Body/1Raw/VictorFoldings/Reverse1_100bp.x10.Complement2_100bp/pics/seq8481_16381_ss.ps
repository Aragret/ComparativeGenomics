%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[136.79359436 406.15637207]
[138.54609680 391.20599365]
[143.27255249 376.91455078]
[150.77940369 363.86724854]
[160.75924683 352.59835815]
[172.80342102 343.56936646]
[186.41871643 337.14996338]
[182.87904358 322.57360840]
[179.33937073 307.99722290]
[175.79969788 293.42083740]
[165.63586426 286.86163330]
[162.56761169 274.74679565]
[168.76850891 263.43698120]
[165.44624329 248.80952454]
[162.12397766 234.18206787]
[156.87725830 220.12959290]
[149.80015564 206.90406799]
[142.72305298 193.67854309]
[135.64595032 180.45301819]
[128.56884766 167.22747803]
[121.39347839 154.05500793]
[114.12024689 140.93630981]
[106.84701538 127.81761932]
[92.05486298 127.52410126]
[79.38179779 119.88947296]
[72.20793152 106.95001221]
[72.44665527 92.15686798]
[80.03428650 79.45561218]
[72.76106262 66.33691406]
[65.48783112 53.21822357]
[65.31607056 68.21723938]
[59.80535889 82.16829681]
[49.68072891 93.23590088]
[36.27423859 99.96391296]
[21.34975433 101.46714020]
[6.87084103 97.54782104]
[-5.25754881 88.72160339]
[-13.43971729 76.14971924]
[-16.59915924 61.48623276]
[-14.32019520 46.66036606]
[-6.90266228 33.62271881]
[4.67753458 24.08862114]
[18.89682198 19.31244278]
[33.88440704 19.92257690]
[47.66841888 25.83874702]
[58.43670654 36.28451920]
[54.24969864 21.88073540]
[50.06268692 7.47695446]
[45.87567520 -6.92682791]
[30.76974487 -7.44484901]
[16.58274651 -12.59961319]
[4.69976091 -21.87447166]
[-3.72321892 -34.35118866]
[-7.87173367 -48.80083847]
[-7.35160112 -63.80485153]
[-2.22633624 -77.89427185]
[6.99030256 -89.69358063]
[19.38578415 -98.05498505]
[15.19877243 -112.45876312]
[11.01176071 -126.86254883]
[6.82474995 -141.26632690]
[-6.74440241 -148.91589355]
[-10.78544044 -163.58302307]
[-3.40912604 -176.47200012]
[-7.59613752 -190.87577820]
[-11.78314877 -205.27955627]
[-16.07727242 -219.65177917]
[-20.47826958 -233.99162292]
[-24.87926865 -248.33146667]
[-39.64982986 -245.62092590]
[-54.63519669 -244.64350891]
[-69.63270569 -245.41242981]
[-84.43952942 -247.91729736]
[-98.85543823 -252.12423706]
[-112.68545532 -257.97634888]
[-125.74255371 -265.39447021]
[-137.85014343 -274.27832031]
[-148.84449768 -284.50772095]
[-158.57691956 -295.94433594]
[-166.91580200 -308.43353271]
[-173.74835205 -321.80636597]
[-178.98216248 -335.88201904]
[-182.54647827 -350.47009277]
[-184.39309692 -365.37332153]
[-184.49700928 -380.39016724]
[-182.85684204 -395.31753540]
[-179.49476624 -409.95355225]
[-174.45625305 -424.10028076]
[-167.80944824 -437.56640625]
[-159.64422607 -450.16979980]
[-150.07101440 -461.74005127]
[-139.21929932 -472.12063599]
[-127.23580933 -481.17120361]
[-114.28263092 -488.76931763]
[-100.53492737 -494.81228638]
[-86.17863464 -499.21832275]
[-71.40789032 -501.92788696]
[-56.42245865 -502.90429688]
[-41.42500305 -502.13436890]
[-26.61834145 -499.62850952]
[-12.20271969 -495.42062378]
[1.62690806 -489.56759644]
[14.68351078 -482.14859009]
[26.79051399 -473.26394653]
[37.78418350 -463.03381348]
[47.51584244 -451.59652710]
[55.85388184 -439.10678101]
[62.68553925 -425.73348999]
[67.91842651 -411.65750122]
[71.48176575 -397.06918335]
[73.32737732 -382.16583252]
[73.43029785 -367.14895630]
[71.78913879 -352.22171021]
[68.42608643 -337.58590698]
[63.38662720 -323.43951416]
[56.73891449 -309.97384644]
[48.57284927 -297.37100220]
[38.99887085 -285.80139160]
[28.14645576 -275.42153931]
[16.16236877 -266.37176514]
[3.20868158 -258.77450562]
[-10.53942108 -252.73246765]
[-6.13842297 -238.39262390]
[-1.73742497 -224.05276489]
[3.23022556 -218.58064270]
[2.62063360 -209.46656799]
[6.80764484 -195.06278992]
[10.99465561 -180.65901184]
[24.13100243 -173.73283386]
[28.58241463 -159.18498230]
[21.22853279 -145.45333862]
[25.41554260 -131.04956055]
[29.60255432 -116.64577484]
[33.78956604 -102.24199677]
[48.73580170 -101.82851410]
[62.84154892 -96.80874634]
[74.72116852 -87.66244507]
[83.20356750 -75.27536774]
[87.44766998 -60.85350037]
[87.02574921 -45.80567551]
[81.96656036 -31.60592461]
[72.75370026 -19.64909554]
[60.27945709 -11.11383915]
[64.46646881 3.28994298]
[68.65348053 17.69372559]
[72.84049225 32.09750748]
[78.60652161 45.94499207]
[85.87975311 59.06368637]
[93.15298462 72.18238068]
[107.94513702 72.47589874]
[120.61820221 80.11052704]
[127.79206848 93.04998779]
[127.55334473 107.84313202]
[119.96571350 120.54438782]
[127.23893738 133.66308594]
[134.51217651 146.78178406]
[141.41017151 152.76971436]
[141.79437256 160.15037537]
[148.87147522 173.37590027]
[155.94857788 186.60142517]
[163.02568054 199.82696533]
[170.10279846 213.05249023]
[170.02070618 198.05271912]
[174.51788330 183.74273682]
[183.16569519 171.48649597]
[195.13987732 162.45217896]
[209.29913330 157.50088501]
[224.29389954 157.10453796]
[238.69496155 161.30088806]
[251.12969971 169.69000244]
[260.41293335 181.47227478]
[265.65979004 195.52468872]
[266.37023926 210.50785828]
[262.47653198 224.99368286]
[254.34980774 237.60145569]
[242.76463318 247.12950134]
[228.82524109 252.66966248]
[213.86024475 253.69389343]
[199.29602051 250.10455322]
[186.52073669 242.24375916]
[176.75144958 230.85980225]
[180.07369995 245.48725891]
[183.39596558 260.11471558]
[196.21661377 273.33261108]
[190.37606812 289.88116455]
[193.91574097 304.45755005]
[197.45541382 319.03393555]
[200.99508667 333.61029053]
[216.03814697 333.07040405]
[230.88188171 335.57003784]
[244.91847229 341.00686646]
[257.57312012 349.15820312]
[268.32763672 359.69030762]
[276.74160767 372.17190552]
[282.47052002 386.09182739]
[285.27975464 400.88009644]
[285.05429077 415.93115234]
[281.80331421 430.62866211]
[275.66000366 444.37072754]
[266.87591553 456.59466553]
[255.81074524 466.79989624]
[242.91760254 474.56851196]
[228.72444153 479.58242798]
[213.81248474 481.63629150]
[198.79235840 480.64602661]
[184.27912903 476.65216064]
[170.86709595 469.81823730]
[159.10548401 460.42413330]
[149.47592163 448.85449219]
[142.37272644 435.58312988]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 188]
[8 187]
[9 186]
[10 185]
[13 183]
[14 182]
[15 181]
[16 162]
[17 161]
[18 160]
[19 159]
[20 158]
[21 156]
[22 155]
[23 154]
[28 149]
[29 148]
[30 147]
[46 146]
[47 145]
[48 144]
[49 143]
[58 134]
[59 133]
[60 132]
[61 131]
[64 128]
[65 127]
[66 126]
[67 124]
[68 123]
[69 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
