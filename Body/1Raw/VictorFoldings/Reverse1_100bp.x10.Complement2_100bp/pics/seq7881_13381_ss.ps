%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[103.02644348 618.27770996]
[88.51210785 614.15502930]
[75.55986023 606.41540527]
[65.05281067 595.58654785]
[57.70734406 582.40679932]
[54.02428818 567.77471924]
[54.25475693 552.68798828]
[58.38304138 538.17523193]
[66.12766266 525.22601318]
[76.96058655 514.72314453]
[90.14319611 507.38275146]
[104.77668762 503.70535278]
[105.00001526 488.70700073]
[105.22334290 473.70867920]
[105.44667053 458.71032715]
[105.66999817 443.71197510]
[91.06181335 433.78866577]
[85.28389740 416.93438721]
[90.82831573 399.83645630]
[105.65464783 389.39913940]
[105.43132019 374.40081787]
[105.20799255 359.40246582]
[104.98466492 344.40414429]
[104.76133728 329.40579224]
[104.20312500 314.41619873]
[103.31031036 299.44277954]
[102.41749573 284.46936035]
[101.52467346 269.49597168]
[100.63185883 254.52256775]
[99.73904419 239.54916382]
[98.84622955 224.57574463]
[95.31017303 218.08590698]
[98.05327606 209.37307739]
[97.38349152 194.38804626]
[89.08560181 182.01895142]
[96.19897461 167.88705444]
[95.52919006 152.90202332]
[94.74787140 137.92237854]
[93.85504913 122.94897461]
[92.96223450 107.97557068]
[90.95822144 93.11004639]
[87.85411072 78.43473816]
[84.75000000 63.75943756]
[81.64588928 49.08413696]
[78.54178619 34.40883255]
[75.05154419 30.52742386]
[73.54936981 26.13461685]
[73.89714050 22.07332230]
[75.64220428 19.00948715]
[73.19647217 4.21021700]
[70.75074768 -10.58905411]
[68.30502319 -25.38832474]
[65.85929108 -40.18759537]
[63.41356659 -54.98686600]
[53.52970886 -67.34081268]
[59.08830643 -81.15932465]
[56.64257812 -95.95859528]
[40.05387878 -101.75929260]
[28.74567795 -115.09478760]
[25.76445961 -132.23294067]
[31.84263802 -148.43692017]
[45.22127151 -159.27438354]
[42.33599854 -173.99427795]
[39.45072556 -188.71415710]
[24.74103546 -192.63670349]
[13.23999596 -202.51663208]
[7.19386959 -216.35371399]
[7.75278854 -231.38197327]
[14.75236988 -244.62263489]
[26.75692940 -253.47453308]
[23.87165833 -268.19442749]
[20.98638535 -282.91430664]
[18.10111237 -297.63421631]
[15.21584034 -312.35409546]
[8.86140823 -298.76657104]
[-3.37859249 -290.09579468]
[-18.30465508 -288.60827637]
[-32.01514435 -294.69290161]
[-40.92616653 -306.75912476]
[-42.70840836 -321.65286255]
[-36.89599228 -335.48092651]
[-25.00827026 -344.62872314]
[-10.15266418 -346.70501709]
[3.78760552 -341.16708374]
[13.16822624 -329.46328735]
[12.49844170 -344.44833374]
[11.82865620 -359.43338013]
[11.15887070 -374.41842651]
[10.48908615 -389.40344238]
[9.81930065 -404.38848877]
[-4.63925648 -416.63040161]
[-5.54278135 -435.23406982]
[7.21629763 -448.36120605]
[6.10064888 -463.31967163]
[4.98500013 -478.27810669]
[-9.54494095 -482.66506958]
[-21.50655556 -492.00765991]
[-29.28213310 -505.04241943]
[-31.82009125 -520.00646973]
[-28.77719116 -534.87609863]
[-20.56495857 -547.64025879]
[-8.29403400 -556.57269287]
[6.37604284 -560.46539307]
[21.46126366 -558.79193115]
[34.92147827 -551.77856445]
[44.93630219 -540.37384033]
[50.15130997 -526.12017822]
[49.86121750 -510.94515991]
[44.10525894 -496.90118408]
[33.66187668 -485.88754272]
[19.94345284 -479.39376831]
[21.05910301 -464.43530273]
[22.17475128 -449.47686768]
[32.22799683 -444.08255005]
[38.49373245 -434.40493774]
[39.31823349 -422.78536987]
[34.38128281 -412.10235596]
[24.80434036 -405.05828857]
[25.47412491 -390.07324219]
[26.14390945 -375.08819580]
[26.81369591 -360.10314941]
[27.48348045 -345.11813354]
[28.15326500 -330.13308716]
[29.93573189 -315.23937988]
[32.82100296 -300.51947021]
[35.70627594 -285.79959106]
[38.59154892 -271.07968140]
[41.47682190 -256.35980225]
[55.93482590 -252.69488525]
[67.41505432 -243.07647705]
[73.60607147 -229.37127686]
[73.23110199 -214.27560425]
[66.31098938 -200.78491211]
[54.17061996 -191.59944153]
[57.05589294 -176.87954712]
[59.94116592 -162.15965271]
[72.26452637 -159.37522888]
[82.65772247 -152.11009216]
[89.55652618 -141.41456604]
[91.90637207 -128.85839844]
[89.32344055 -116.30039215]
[82.15682983 -105.61325836]
[71.44184875 -98.40431976]
[73.88758087 -83.60504913]
[83.59649658 -72.30964661]
[78.21283722 -57.43259430]
[80.65856171 -42.63332367]
[83.10429382 -27.83405304]
[85.55001831 -13.03478146]
[87.99575043 1.76448941]
[90.44147491 16.56376076]
[93.21708679 31.30472374]
[96.32119751 45.98002625]
[99.42530823 60.65532684]
[102.52941895 75.33062744]
[105.63352203 90.00593567]
[111.78495789 76.32529449]
[123.89450073 67.47324371]
[138.79676819 65.76367950]
[152.59632874 71.64349365]
[161.68600464 83.57569885]
[163.68980408 98.44126129]
[158.08390808 112.35434723]
[146.33369446 121.67811584]
[131.51065063 123.97534943]
[117.48947906 118.64556122]
[107.93564606 107.08275604]
[108.82846069 122.05615997]
[109.72127533 137.02957153]
[113.35592651 145.40972900]
[110.51422882 152.23223877]
[111.18401337 167.21726990]
[119.52980804 180.65818787]
[112.36853027 193.71826172]
[113.03831482 208.70329285]
[113.81963348 223.68293762]
[114.71244812 238.65634155]
[115.60526276 253.62974548]
[116.49808502 268.60314941]
[117.39089966 283.57656860]
[118.28371429 298.54995728]
[119.17652893 313.52337646]
[122.05237579 317.87957764]
[122.88629913 322.44662476]
[121.93992615 326.41140747]
[119.75967407 329.18246460]
[119.98300171 344.18081665]
[120.20632935 359.17913818]
[120.42965698 374.17749023]
[120.65298462 389.17581177]
[131.73400879 394.96188354]
[139.25985718 404.85281372]
[141.85113525 416.93438721]
[139.07612610 428.90103149]
[131.52120972 438.49560547]
[120.66833496 443.93530273]
[120.44500732 458.93365479]
[120.22167969 473.93200684]
[119.99835205 488.93032837]
[119.77502441 503.92868042]
[134.29254150 508.04013062]
[147.25076294 515.76977539]
[157.76617432 526.59051514]
[165.12181091 539.76458740]
[168.81616211 554.39379883]
[168.59735107 569.48071289]
[164.48027039 583.99664307]
[156.74565125 596.95190430]
[145.92083740 607.46313477]
[132.74389648 614.81365967]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 200]
[13 199]
[14 198]
[15 197]
[16 196]
[20 190]
[21 189]
[22 188]
[23 187]
[24 186]
[25 182]
[26 181]
[27 180]
[28 179]
[29 178]
[30 177]
[31 176]
[33 175]
[34 174]
[36 172]
[37 171]
[38 169]
[39 168]
[40 167]
[41 156]
[42 155]
[43 154]
[44 153]
[45 152]
[49 151]
[50 150]
[51 149]
[52 148]
[53 147]
[54 146]
[56 144]
[57 143]
[62 136]
[63 135]
[64 134]
[70 128]
[71 127]
[72 126]
[73 125]
[74 124]
[85 123]
[86 122]
[87 121]
[88 120]
[89 119]
[90 118]
[93 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
