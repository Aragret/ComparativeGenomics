%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[189.14514160 432.42016602]
[182.46495056 418.98977661]
[175.78475952 405.55941772]
[169.10456848 392.12902832]
[162.42436218 378.69866943]
[155.74417114 365.26828003]
[149.06398010 351.83792114]
[142.38378906 338.40753174]
[139.27783203 353.08245850]
[128.80703735 363.82315063]
[114.21591187 367.30151367]
[100.02566528 362.43972778]
[90.63330078 350.74429321]
[88.94914246 335.83914185]
[95.49504852 322.34280396]
[108.24269104 314.43725586]
[123.24208832 314.57214355]
[135.84567261 322.70584106]
[131.01966858 308.50338745]
[126.19367218 294.30093384]
[121.36767578 280.09848022]
[116.54167938 265.89602661]
[113.21875763 280.52334595]
[104.29901886 292.58312988]
[91.28561401 300.04309082]
[76.37151337 301.64611816]
[62.07001495 297.12203979]
[50.79117203 287.23327637]
[44.43566132 273.64627075]
[44.07450485 258.65060425]
[49.76855850 244.77336121]
[60.55827713 234.35310364]
[74.62540436 229.14579773]
[89.59938049 230.02899170]
[102.95683289 236.85385132]
[112.44754791 248.47172546]
[110.44353485 233.60620117]
[108.43952179 218.74066162]
[106.43550873 203.87513733]
[94.47193146 195.07691956]
[92.22781372 180.02970886]
[101.53730011 167.54087830]
[92.16899109 155.96141052]
[97.99320984 141.25123596]
[95.98919678 126.38571167]
[93.98518372 111.52018738]
[91.53945923 96.72091675]
[88.54468536 82.02291107]
[85.44057465 67.34761047]
[82.33646393 52.67230606]
[79.23235321 37.99700546]
[76.12824249 23.32170105]
[71.29068756 15.57342148]
[73.08888245 8.40485954]
[70.20360565 -6.31503153]
[65.48194122 -14.13447666]
[67.38667297 -21.27547073]
[64.72087860 -36.03668976]
[54.65418243 -48.24210739]
[60.00642776 -62.14184570]
[57.34062958 -76.90306091]
[54.67483521 -91.66428375]
[51.13516235 -106.24065399]
[46.73416519 -120.58050537]
[42.33316803 -134.92034912]
[37.93216705 -149.26019287]
[33.53116989 -163.60005188]
[29.13017273 -177.93989563]
[24.72917366 -192.27973938]
[20.32817650 -206.61958313]
[15.92717838 -220.95942688]
[1.12922394 -218.38575745]
[-13.87461281 -217.68710327]
[-28.84770012 -218.87449646]
[-43.55389023 -221.92919922]
[-57.76124954 -226.80302429]
[-71.24569702 -233.41912842]
[-83.79457855 -241.67315674]
[-95.20996857 -251.43492126]
[-105.31182861 -262.55047607]
[-113.94084930 -274.84451294]
[-120.96092987 -288.12313843]
[-126.26136017 -302.17691040]
[-129.75852966 -316.78421021]
[-131.39730835 -331.71463013]
[-131.15182495 -346.73272705]
[-129.02595520 -361.60159302]
[-125.05324554 -376.08679199]
[-119.29633331 -389.95983887]
[-111.84602356 -403.00192261]
[-102.81980896 -415.00738525]
[-92.36005402 -425.78683472]
[-80.63172150 -435.17028809]
[-67.81977844 -443.00976562]
[-54.12630081 -449.18164062]
[-39.76724243 -453.58853149]
[-24.96907425 -456.16094971]
[-9.96517754 -456.85833740]
[5.00780964 -455.66970825]
[19.71374321 -452.61376953]
[33.92068863 -447.73873901]
[47.40458679 -441.12149048]
[59.95276642 -432.86642456]
[71.36733246 -423.10369873]
[81.46826172 -411.98727417]
[90.09625244 -399.69253540]
[97.11521149 -386.41333008]
[102.41445160 -372.35910034]
[105.91040039 -357.75149536]
[107.54791260 -342.82092285]
[107.30117035 -327.80285645]
[105.17404938 -312.93414307]
[101.20011902 -298.44931030]
[95.44203949 -284.57675171]
[87.99063110 -271.53527832]
[78.96340942 -259.53060913]
[68.50274658 -248.75201416]
[56.77362442 -239.36953735]
[43.96102524 -231.53114319]
[30.26702499 -225.36042786]
[34.66802216 -211.02058411]
[39.06902313 -196.68074036]
[43.47002029 -182.34089661]
[47.87101746 -168.00103760]
[52.27201462 -153.66119385]
[56.67301178 -139.32135010]
[61.07401276 -124.98149872]
[65.47500610 -110.64165497]
[71.60270691 -124.33293915]
[84.54980469 -131.90742493]
[99.48734283 -130.54000854]
[110.84400177 -120.74069977]
[114.38401794 -106.16440582]
[108.78706360 -92.24772644]
[96.14065552 -84.18122864]
[81.16159058 -84.97352600]
[69.43605042 -94.33007812]
[72.10184479 -79.56886292]
[74.76764679 -64.80764008]
[84.64366150 -53.65804291]
[79.48209381 -38.70248413]
[82.14788818 -23.94126701]
[84.92350006 -9.20030403]
[87.80876923 5.51958704]
[90.80354309 20.21759224]
[93.90765381 34.89289474]
[97.01176453 49.56819534]
[100.11587524 64.24349976]
[103.21998596 78.91880035]
[107.67962646 84.81230164]
[106.25934601 93.83563995]
[108.63560486 95.74428558]
[110.36989594 98.55973816]
[111.12502289 102.04588318]
[110.65573883 105.84535980]
[108.85071564 109.51617432]
[110.85472870 124.38169861]
[112.85874176 139.24722290]
[122.37039185 151.88996887]
[116.40283203 165.53686523]
[128.68711853 175.11465454]
[130.50770569 190.21896362]
[121.30103302 201.87112427]
[123.30504608 216.73664856]
[125.30905914 231.60218811]
[127.31307220 246.46771240]
[130.74414062 261.07003784]
[135.57012939 275.27249146]
[140.39613342 289.47494507]
[145.22212219 303.67739868]
[150.04812622 317.87985229]
[155.81416321 331.72732544]
[162.49435425 345.15771484]
[169.17454529 358.58810425]
[175.85475159 372.01846313]
[182.53494263 385.44885254]
[189.21513367 398.87921143]
[195.89532471 412.30960083]
[202.57551575 425.73995972]
[217.04574585 421.62573242]
[232.02561951 420.24066162]
[247.00489807 421.63195801]
[261.47341919 425.75222778]
[274.93838501 432.46115112]
[286.94116211 441.53018188]
[297.07296753 452.65048218]
[304.98870850 465.44329834]
[310.41879272 479.47286987]
[313.17822266 494.26138306]
[313.17306519 509.30514526]
[310.40347290 524.09173584]
[304.96380615 538.11761475]
[297.03927612 550.90496826]
[286.89987183 562.01831055]
[274.89086914 571.07916260]
[261.42129517 577.77880859]
[246.94996643 581.88916016]
[231.96972656 583.27020264]
[216.99082947 581.87487793]
[202.52342224 577.75067139]
[189.06027222 571.03814697]
[177.05992126 561.96588135]
[166.93110657 550.84283447]
[159.01881409 538.04791260]
[153.59252930 524.01684570]
[150.83706665 509.22760010]
[150.84628296 494.18386841]
[153.61985779 479.39797974]
[159.06332397 465.37359619]
[166.99127197 452.58837891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 179]
[2 178]
[3 177]
[4 176]
[5 175]
[6 174]
[7 173]
[8 172]
[18 171]
[19 170]
[20 169]
[21 168]
[22 167]
[36 166]
[37 165]
[38 164]
[39 163]
[42 160]
[44 158]
[45 157]
[46 156]
[47 151]
[48 149]
[49 148]
[50 147]
[51 146]
[52 145]
[54 144]
[55 143]
[57 142]
[58 141]
[60 139]
[61 138]
[62 137]
[63 128]
[64 127]
[65 126]
[66 125]
[67 124]
[68 123]
[69 122]
[70 121]
[71 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
