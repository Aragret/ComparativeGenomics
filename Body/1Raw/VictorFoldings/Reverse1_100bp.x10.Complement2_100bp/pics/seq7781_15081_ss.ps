%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[38.52419662 626.72778320]
[23.88960838 623.30297852]
[9.94936562 617.68426514]
[-2.96975088 610.00335693]
[-14.56489944 600.44024658]
[-24.56427383 589.21911621]
[-32.73347473 576.60308838]
[-38.88100052 562.88781738]
[-42.86274719 548.39489746]
[-44.58537674 533.46392822]
[-44.00851059 518.44500732]
[-41.14566803 503.69021606]
[-36.06395721 489.54534912]
[-28.88250351 476.34204102]
[-19.76964951 464.38980103]
[-8.93901443 453.96878052]
[3.35551691 445.32327271]
[16.82574272 438.65591431]
[31.15590286 434.12304688]
[46.01007843 431.83090210]
[46.01007843 416.83090210]
[46.01007843 401.83090210]
[35.32920456 391.51321411]
[35.11552429 376.30108643]
[46.01007843 365.16796875]
[46.01007843 350.16796875]
[46.01007843 335.16796875]
[46.01007843 320.16796875]
[46.01007843 305.16796875]
[46.01007843 290.16796875]
[46.01007843 275.16796875]
[46.01007843 260.16796875]
[37.68112183 251.39555359]
[37.55835724 238.89880371]
[46.25299072 229.37167358]
[39.41528702 242.72254944]
[29.71920204 254.16746521]
[17.67337227 263.10601807]
[3.90969777 269.06933594]
[-10.84980679 271.74459839]
[-25.83088684 270.99145508]
[-40.24766541 266.84942627]
[-53.34386826 259.53576660]
[-64.43249512 249.43417358]
[-72.93185425 237.07452393]
[-78.39608765 223.10519409]
[-80.53855133 208.25898743]
[-79.24686432 193.31471252]
[-74.58878326 179.05630493]
[-66.80864716 166.23173523]
[-56.31460953 155.51374817]
[-43.65715027 147.46459961]
[-29.50025749 142.50653076]
[-14.58657742 140.89964294]
[0.30155066 142.72819519]
[14.38312531 147.89630127]
[26.91945457 156.13282776]
[37.25291061 167.00572205]
[44.84141541 179.94459534]
[49.28689575 194.27072144]
[50.35607529 209.23420715]
[56.01886368 195.34419250]
[61.68164825 181.45416260]
[67.34443665 167.56413269]
[73.00722504 153.67410278]
[78.67000580 139.78407288]
[83.81196594 125.69293976]
[88.42597961 111.42020416]
[84.49179840 95.11380768]
[97.06285858 84.00774384]
[101.46385956 69.66789246]
[105.86486053 55.32804871]
[110.26585388 40.98820114]
[95.99321747 45.60249329]
[83.40308380 37.44843292]
[81.77644348 22.53689194]
[92.31239319 11.86010361]
[107.24421692 13.28859806]
[115.56449890 25.76770782]
[121.01985931 11.79490948]
[126.47521210 -2.17788815]
[124.28675842 -17.84700584]
[136.12298584 -26.88872910]
[141.57835388 -40.86152649]
[139.38989258 -56.53064346]
[151.22613525 -65.57236481]
[156.68148804 -79.54516602]
[161.29548645 -93.81790161]
[165.05178833 -108.33995819]
[157.29232788 -121.84656525]
[161.30862427 -136.52049255]
[174.23292542 -143.83471680]
[177.98922729 -158.35678101]
[181.74552917 -172.87882996]
[185.50183105 -187.40089417]
[189.25813293 -201.92295837]
[193.01443481 -216.44500732]
[179.35752869 -222.74809265]
[167.04566956 -231.38858032]
[156.47463989 -242.08871460]
[147.98425293 -254.50456238]
[141.84744263 -268.23696899]
[138.26147461 -282.84454346]
[137.34162903 -297.85763550]
[139.11746216 -312.79370117]
[143.53190613 -327.17260742]
[150.44303894 -340.53210449]
[159.62870789 -352.44271851]
[170.79362488 -362.52163696]
[183.57888794 -370.44482422]
[197.57350159 -375.95758057]
[212.32760620 -378.88269043]
[227.36691284 -379.12615967]
[242.20794678 -376.68011475]
[256.37365723 -371.62319946]
[269.40869141 -364.11801147]
[280.89398193 -354.40576172]
[290.46035767 -342.79867554]
[297.80029297 -329.66989136]
[302.67779541 -315.44140625]
[304.93615723 -300.57064819]
[304.50271606 -285.53561401]
[301.39144897 -270.81964111]
[295.70230103 -256.89581299]
[287.61825562 -244.21165466]
[277.39907837 -233.17495728]
[265.37335205 -224.14050293]
[251.92761230 -217.39869690]
[237.49409485 -213.16625977]
[222.53678894 -211.57926941]
[207.53649902 -212.68870544]
[203.78019714 -198.16665649]
[200.02389526 -183.64459229]
[196.26759338 -169.12252808]
[192.51129150 -154.60047913]
[188.75498962 -140.07841492]
[196.51177979 -127.41477966]
[192.90924072 -112.63383484]
[179.57385254 -104.58365631]
[175.81755066 -90.06159973]
[188.20539856 -98.51979828]
[203.20191956 -98.19651794]
[215.21377563 -89.21234131]
[219.76083374 -74.91813660]
[215.14715576 -60.64529419]
[203.09355164 -51.71722794]
[188.09568787 -51.46388626]
[175.74740601 -59.97976303]
[170.65428162 -74.08980560]
[165.19892883 -60.11701202]
[167.77758789 -45.44732285]
[155.55114746 -35.40616989]
[150.09579468 -21.43337250]
[152.67445374 -6.76368332]
[140.44801331 3.27746892]
[134.99266052 17.25026703]
[129.53729248 31.22306442]
[124.60570526 45.38919830]
[120.20470428 59.72904587]
[115.80371094 74.06889343]
[111.40270996 88.40874481]
[116.22944641 99.00798035]
[112.72956848 110.11618042]
[102.69870758 116.03421021]
[98.08470154 130.30694580]
[112.42446136 125.90567017]
[124.89179230 134.24627686]
[126.29624176 149.18037415]
[115.60250092 159.69911194]
[100.69359589 158.04846191]
[92.56003571 145.44686890]
[86.89724731 159.33689880]
[81.23446655 173.22691345]
[75.57167816 187.11694336]
[69.90888977 201.00697327]
[64.24610138 214.89700317]
[61.25132751 229.59500122]
[70.59076691 245.46498108]
[61.01007843 260.16796875]
[61.01007843 275.16796875]
[61.01007843 290.16796875]
[61.01007843 305.16796875]
[61.01007843 320.16796875]
[61.01007843 335.16796875]
[61.01007843 350.16796875]
[61.01007843 365.16796875]
[71.90463257 376.30108643]
[71.69094849 391.51321411]
[61.01007843 401.83090210]
[61.01007843 416.83090210]
[61.01007843 431.83090210]
[75.86425018 434.12304688]
[90.19441223 438.65591431]
[103.66463470 445.32327271]
[115.95916748 453.96878052]
[126.78980255 464.38980103]
[135.90266418 476.34204102]
[143.08410645 489.54534912]
[148.16581726 503.69021606]
[151.02865601 518.44500732]
[151.60552979 533.46392822]
[149.88290405 548.39489746]
[145.90115356 562.88781738]
[139.75363159 576.60308838]
[131.58442688 589.21911621]
[121.58505249 600.44024658]
[109.98990631 610.00335693]
[97.07078552 617.68426514]
[83.13054657 623.30297852]
[68.49595642 626.72778320]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 191]
[21 190]
[22 189]
[25 186]
[26 185]
[27 184]
[28 183]
[29 182]
[30 181]
[31 180]
[32 179]
[35 177]
[61 176]
[62 175]
[63 174]
[64 173]
[65 172]
[66 171]
[67 165]
[68 164]
[70 161]
[71 160]
[72 159]
[73 158]
[79 157]
[80 156]
[81 155]
[83 153]
[84 152]
[86 150]
[87 149]
[88 140]
[89 139]
[92 136]
[93 135]
[94 134]
[95 133]
[96 132]
[97 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
