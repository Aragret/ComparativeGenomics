%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[40.54445648 652.88836670]
[25.91514969 656.31317139]
[10.95156193 657.66857910]
[-4.05503607 656.92822266]
[-18.81253624 654.10644531]
[-33.03367615 649.25823975]
[-46.44164276 642.47790527]
[-58.77544403 633.89752197]
[-69.79499817 623.68402100]
[-79.28580475 612.03625488]
[-87.06312561 599.18090820]
[-92.97557068 585.36828613]
[-96.90805054 570.86718750]
[-98.78402710 555.95989990]
[-98.56697083 540.93664551]
[-96.26112366 526.08978271]
[-91.91135406 511.70831299]
[-85.60233307 498.07226562]
[-77.45687866 485.44699097]
[-67.63352966 474.07824707]
[-56.32351685 464.18734741]
[-43.74697876 455.96682739]
[-30.14873123 449.57672119]
[-15.79346180 445.14135742]
[-0.96060276 442.74710083]
[14.06112003 442.44058228]
[15.84358597 427.54684448]
[17.62605286 412.65313721]
[19.40851784 397.75942993]
[21.19098473 382.86569214]
[22.97344971 367.97198486]
[21.09331703 364.98913574]
[20.56455040 360.94741821]
[21.86907959 356.49191284]
[25.18251991 352.45852661]
[27.62824821 337.65927124]
[30.07397461 322.85998535]
[32.51970291 308.06069946]
[34.96543121 293.26144409]
[21.43721199 299.74121094]
[7.87056303 293.34228516]
[4.26631069 278.78176880]
[13.28137589 266.79306030]
[28.27018929 266.21386719]
[38.18310165 277.46948242]
[36.84150696 275.00814819]
[36.39405441 271.86706543]
[37.10452271 268.38415527]
[39.10961914 264.98648071]
[42.39172363 262.14364624]
[46.79272079 247.80380249]
[51.19372177 233.46394348]
[55.59471893 219.12409973]
[59.99571609 204.78425598]
[64.39671326 190.44441223]
[54.15041351 179.63336182]
[50.66806412 165.04811096]
[54.98230743 150.58250427]
[66.03044891 140.15010071]
[80.91413116 136.62542725]
[85.31513214 122.28557587]
[89.71612549 107.94573212]
[93.68822479 93.48120880]
[97.22789764 78.90483093]
[100.76757050 64.32846069]
[96.50532532 49.09218979]
[107.02746582 38.55018997]
[110.56713867 23.97381592]
[114.10681152 9.39744091]
[117.64648438 -5.17893457]
[120.96874237 -19.80639458]
[124.07285309 -34.48169708]
[112.52534485 -24.90803146]
[97.64827728 -22.99156570]
[84.05146790 -29.32613945]
[75.94804382 -41.94891357]
[75.84893036 -56.94858551]
[83.78484344 -69.67734528]
[97.29675293 -76.19104767]
[112.19784546 -74.47134399]
[123.87085724 -65.05111694]
[128.69879150 -50.84905624]
[133.73570251 -64.97808838]
[138.77262878 -79.10711670]
[143.80953979 -93.23614502]
[148.84645081 -107.36517334]
[153.88337708 -121.49420166]
[158.92028809 -135.62322998]
[158.85426331 -144.75743103]
[164.13880920 -149.92417908]
[169.38552856 -163.97665405]
[166.96401978 -179.61145020]
[178.66432190 -188.82838440]
[183.91104126 -202.88085938]
[170.64372253 -209.92593384]
[158.40950012 -218.64251709]
[147.41772461 -228.88145447]
[137.85647583 -240.46755981]
[129.88937378 -253.20256042]
[123.65273285 -266.86853027]
[119.25327301 -281.23168945]
[116.76628113 -296.04620361]
[116.23429871 -311.05859375]
[117.66644287 -326.01199341]
[121.03820801 -340.65051270]
[126.29188538 -354.72366333]
[133.33758545 -367.99066162]
[142.05474854 -380.22445679]
[152.29421997 -391.21575928]
[163.88076782 -400.77645874]
[176.61614990 -408.74295044]
[190.28244019 -414.97894287]
[204.64578247 -419.37771606]
[219.46041870 -421.86401367]
[234.47283936 -422.39526367]
[249.42616272 -420.96240234]
[264.06451416 -417.58996582]
[278.13745117 -412.33560181]
[291.40408325 -405.28927612]
[303.63748169 -396.57153320]
[314.62829590 -386.33154297]
[324.18841553 -374.74453735]
[332.15432739 -362.00875854]
[338.38964844 -348.34219360]
[342.78775024 -333.97863770]
[345.27334595 -319.16387939]
[345.80389404 -304.15142822]
[344.37030029 -289.19818115]
[340.99716187 -274.55996704]
[335.74215698 -260.48730469]
[328.69519043 -247.22099304]
[319.97683716 -234.98800659]
[309.73632812 -223.99769592]
[298.14886475 -214.43811035]
[285.41275024 -206.47282410]
[271.74584961 -200.23812866]
[257.38208008 -195.84072876]
[242.56721497 -193.35585022]
[227.55474854 -192.82601929]
[212.60156250 -194.26029968]
[197.96351624 -197.63414001]
[192.71679688 -183.58166504]
[195.51358032 -168.95199585]
[183.43800354 -158.72993469]
[178.19128418 -144.67745972]
[173.04931641 -130.58631897]
[168.01240540 -116.45729065]
[162.97549438 -102.32825470]
[157.93856812 -88.19922638]
[152.90165710 -74.07019806]
[147.86474609 -59.94116974]
[142.82781982 -45.81214142]
[138.74815369 -31.37758636]
[135.64404297 -16.70228386]
[137.45210266 -12.28188133]
[136.50248718 -6.67873478]
[132.22285461 -1.63926208]
[128.68318176 12.93711281]
[125.14351654 27.51348877]
[121.60384369 42.08986282]
[126.11927032 56.28353119]
[115.34394836 67.86812592]
[111.80427551 82.44450378]
[108.26460266 97.02088165]
[109.62400818 99.74879456]
[110.02089691 103.03163147]
[109.24780273 106.51383972]
[107.23153687 109.76821136]
[104.05597687 112.34673309]
[99.65497589 126.68657684]
[95.25398254 141.02642822]
[105.59793091 152.29362488]
[108.89163208 167.12765503]
[104.34826660 181.52293396]
[93.28351593 191.64356995]
[78.73656464 194.84541321]
[74.33556366 209.18525696]
[69.93456268 223.52510071]
[65.53356934 237.86494446]
[61.13256836 252.20478821]
[56.73157120 266.54464722]
[52.75947571 281.00915527]
[49.76470184 295.70718384]
[47.31897354 310.50643921]
[44.87324524 325.30572510]
[42.42751694 340.10498047]
[39.98179245 354.90426636]
[37.86716843 369.75445557]
[36.08470154 384.64816284]
[34.30223465 399.54190063]
[32.51976776 414.43560791]
[30.73730278 429.32931519]
[28.95483780 444.22305298]
[43.47998810 448.06570435]
[57.32895279 453.89257812]
[70.23215485 461.59020996]
[81.93843842 471.00875854]
[92.21993256 481.96490479]
[100.87650299 494.24536133]
[107.73964691 507.61111450]
[112.67577362 521.80200195]
[115.58879852 536.54174805]
[116.42201996 551.54345703]
[115.15921783 566.51513672]
[111.82497406 581.16540527]
[106.48418427 595.20898438]
[99.24082184 608.37255859]
[90.23587036 620.39990234]
[79.64462280 631.05688477]
[67.67322540 640.13610840]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 193]
[27 192]
[28 191]
[29 190]
[30 189]
[31 188]
[35 187]
[36 186]
[37 185]
[38 184]
[39 183]
[45 182]
[50 181]
[51 180]
[52 179]
[53 178]
[54 177]
[55 176]
[60 171]
[61 170]
[62 169]
[63 164]
[64 163]
[65 162]
[67 160]
[68 159]
[69 158]
[70 157]
[71 154]
[72 153]
[82 152]
[83 151]
[84 150]
[85 149]
[86 148]
[87 147]
[88 146]
[90 145]
[91 144]
[93 142]
[94 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
