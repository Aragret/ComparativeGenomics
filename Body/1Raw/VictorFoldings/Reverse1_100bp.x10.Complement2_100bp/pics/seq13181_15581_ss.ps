%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGAUAAUACUCAGGAUCAACUGAACUUCACCUCUUCCGAUGCUAAAAAAACUACAGUAAAACACAUUCCCGCGUCUGACGACGCUUGUCUCACCACUAUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[75.89203644 727.23620605]
[61.26272964 730.66101074]
[46.29914093 732.01641846]
[31.29254341 731.27606201]
[16.53504372 728.45428467]
[2.31390166 723.60607910]
[-11.09406471 716.82574463]
[-23.42786407 708.24536133]
[-34.44741821 698.03186035]
[-43.93822479 686.38409424]
[-51.71554565 673.52874756]
[-57.62799072 659.71612549]
[-61.56047440 645.21502686]
[-63.43644714 630.30773926]
[-63.21939468 615.28442383]
[-60.91353989 600.43762207]
[-56.56377029 586.05615234]
[-50.25475311 572.42010498]
[-42.10929489 559.79479980]
[-32.28595352 548.42608643]
[-20.97593689 538.53521729]
[-8.39940071 530.31469727]
[5.19884872 523.92456055]
[19.55411720 519.48919678]
[34.38697815 517.09497070]
[49.40869904 516.78839111]
[51.19116592 501.89468384]
[45.02108383 488.33816528]
[54.34344864 475.55520630]
[48.17336655 461.99868774]
[57.49573517 449.21572876]
[59.27820206 434.32199097]
[61.06066513 419.42828369]
[47.89294052 410.06219482]
[41.20685196 395.24829102]
[42.91359329 378.99087524]
[52.64151382 365.73706055]
[67.81184387 359.16036987]
[69.37236786 344.24176025]
[70.93289185 329.32315063]
[72.49340820 314.40454102]
[66.12217712 300.94140625]
[75.25318909 288.02105713]
[76.81371307 273.10244751]
[78.37423706 258.18383789]
[65.06852722 249.01484680]
[58.16262054 234.30212402]
[59.62712479 218.02108765]
[69.15663147 204.62393188]
[84.22736359 197.82209778]
[77.65638733 184.45529175]
[86.59402466 171.40043640]
[87.93225861 156.46025085]
[89.27049255 141.52006531]
[90.49746704 126.57032776]
[91.61312103 111.61187744]
[85.71572876 98.93463135]
[93.42842865 87.27247620]
[94.54407501 72.31402588]
[83.85661316 82.83914185]
[69.04137421 85.18618774]
[55.62406921 78.47976685]
[48.60903168 65.22121429]
[50.61269379 50.35564041]
[60.88773346 39.42753220]
[75.60182190 36.51280975]
[89.26696777 42.69858932]
[96.78665161 55.67887115]
[99.67192841 40.95898056]
[102.55719757 26.23908806]
[105.44246674 11.51919746]
[108.32774353 -3.20069385]
[99.77810669 -16.22150421]
[102.91387177 -31.10846519]
[115.37991333 -39.17899323]
[118.26519012 -53.89888382]
[121.15045929 -68.61877441]
[124.03572845 -83.33866882]
[122.61545563 -92.36200714]
[127.07509613 -98.25550842]
[130.17919922 -112.93080902]
[132.29382324 -127.78100586]
[133.40948486 -142.73945618]
[134.52513123 -157.69792175]
[135.30644226 -172.67755127]
[135.75305176 -187.67089844]
[136.19966125 -202.66424561]
[136.64627075 -217.65760803]
[137.09288025 -232.65095520]
[137.53947449 -247.64430237]
[137.98608398 -262.63766479]
[127.42783356 -274.09020996]
[128.09434509 -289.28924561]
[139.07768250 -299.28433228]
[139.52427673 -314.27767944]
[132.20129395 -328.30212402]
[140.31410217 -340.79336548]
[140.76071167 -355.78671265]
[126.66802216 -361.36990356]
[115.33685303 -371.43869019]
[108.13549805 -384.77722168]
[105.93355560 -399.77481079]
[108.99691772 -414.62039185]
[116.95566559 -427.52133179]
[128.84875488 -436.91973877]
[143.24002075 -441.68075562]
[158.39164734 -441.22943115]
[172.47402954 -435.62030029]
[183.78662109 -425.53063965]
[190.96337891 -412.17886353]
[193.13768005 -397.17724609]
[190.04696655 -382.33734131]
[182.06445312 -369.45108032]
[170.15408325 -360.07458496]
[155.75405884 -355.34011841]
[155.30744934 -340.34677124]
[162.66238403 -327.39477539]
[154.51763916 -313.83108521]
[154.07102966 -298.83773804]
[164.43997192 -288.20660400]
[164.20063782 -272.99487305]
[152.97943115 -262.19104004]
[152.53282166 -247.19769287]
[152.08622742 -232.20434570]
[151.63961792 -217.21099854]
[151.19300842 -202.21765137]
[150.74639893 -187.22430420]
[150.29980469 -172.23094177]
[152.43855286 -169.42771912]
[153.32579041 -165.44929504]
[152.42396545 -160.89517212]
[149.48358154 -156.58226013]
[148.36793518 -141.62380981]
[147.25228882 -126.66535950]
[157.41722107 -137.69595337]
[171.90487671 -141.58282471]
[186.22608948 -137.12159729]
[195.94329834 -125.69460297]
[198.04548645 -110.84264374]
[191.88128662 -97.16774750]
[179.36074829 -88.90724182]
[164.36349487 -88.62071991]
[151.53657532 -96.39698029]
[144.85450745 -109.82669830]
[141.75039673 -95.15139771]
[138.75563049 -80.45339203]
[135.87034607 -65.73350525]
[132.98507690 -51.01361084]
[130.09980774 -36.29372025]
[138.59660339 -24.11422729]
[135.88021851 -9.14506340]
[123.04763031 -0.31542119]
[120.16236115 14.40447044]
[117.27709198 29.12436104]
[114.39181519 43.84425354]
[111.50654602 58.56414413]
[109.50253296 73.42967224]
[108.38687897 88.38812256]
[114.28427124 101.06536865]
[106.57157135 112.72752380]
[105.45592499 127.68597412]
[107.93839264 136.47660828]
[104.21067810 142.85829163]
[102.87244415 157.79847717]
[101.53421021 172.73866272]
[108.00946808 187.17408752]
[99.16754913 199.16032410]
[111.01136017 206.60256958]
[118.45763397 218.36561584]
[120.10138702 232.12338257]
[115.67843628 245.18426514]
[106.10594177 255.01768494]
[93.29283905 259.74435425]
[91.73231506 274.66296387]
[90.17179871 289.58157349]
[96.43141174 304.11181641]
[87.41201782 315.96508789]
[85.85149384 330.88366699]
[84.29096985 345.80227661]
[82.73044586 360.72088623]
[94.46214294 368.33865356]
[101.73245239 380.21124268]
[103.17118835 393.99197388]
[98.55427551 406.98556519]
[88.83643341 416.67535400]
[75.95438385 421.21075439]
[74.17192078 436.10446167]
[72.38945007 450.99819946]
[78.43203735 465.61999512]
[69.23716736 477.33767700]
[75.27975464 491.95950317]
[66.08488464 503.67715454]
[64.30241394 518.57086182]
[78.82756805 522.41357422]
[92.67652893 528.24041748]
[105.57973480 535.93804932]
[117.28601837 545.35656738]
[127.56751251 556.31274414]
[136.22407532 568.59320068]
[143.08721924 581.95892334]
[148.02334595 596.14984131]
[150.93637085 610.88958740]
[151.76959229 625.89129639]
[150.50679016 640.86297607]
[147.17254639 655.51324463]
[141.83177185 669.55682373]
[134.58840942 682.72039795]
[125.58345032 694.74774170]
[114.99220276 705.40472412]
[103.02080536 714.48388672]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 193]
[27 192]
[29 190]
[31 188]
[32 187]
[33 186]
[38 180]
[39 179]
[40 178]
[41 177]
[43 175]
[44 174]
[45 173]
[50 167]
[52 165]
[53 164]
[54 163]
[55 161]
[56 160]
[58 158]
[59 157]
[68 156]
[69 155]
[70 154]
[71 153]
[72 152]
[75 149]
[76 148]
[77 147]
[78 146]
[80 145]
[81 144]
[82 134]
[83 133]
[84 132]
[85 128]
[86 127]
[87 126]
[88 125]
[89 124]
[90 123]
[91 122]
[94 119]
[95 118]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
