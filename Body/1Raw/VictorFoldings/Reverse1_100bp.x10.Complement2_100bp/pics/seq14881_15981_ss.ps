%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUAAGUCGGUAUUAAAUGCAGAGCUCACUACACCCGCUAACUACUUUUCCGCCAACUCCGCAGACCACUCAUCACGUACCGAUCCUUAUCAGGACACCAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[-47.60701370 340.79559326]
[-43.60431290 355.26712036]
[-41.18975830 370.08660889]
[-40.39165115 385.08029175]
[-41.21935272 400.07235718]
[-43.66315460 414.88705444]
[-47.69441223 429.35067749]
[-53.26585388 443.29364014]
[-60.31216049 456.55245972]
[-68.75071716 468.97174072]
[-78.48258209 480.40579224]
[-89.39366150 490.72061157]
[-101.35602570 499.79525757]
[-114.22942352 507.52331543]
[-127.86291504 513.81420898]
[-142.09666443 518.59411621]
[-156.76377869 521.80706787]
[-171.69229126 523.41534424]
[-186.70718384 523.40014648]
[-201.63241577 521.76159668]
[-216.29298401 518.51892090]
[-230.51699829 513.71014404]
[-244.13771057 507.39163208]
[-256.99542236 499.63748169]
[-268.93936157 490.53860474]
[-279.82949829 480.20166016]
[-289.53814697 468.74789429]
[-297.95150757 456.31155396]
[-304.97091675 443.03845215]
[-310.51406860 429.08419800]
[-314.51599121 414.61245728]
[-316.92974854 399.79284668]
[-317.72705078 384.79910278]
[-316.89855957 369.80709839]
[-314.45394897 354.99252319]
[-310.42190552 340.52914429]
[-304.84973145 326.58645630]
[-297.80270386 313.32800293]
[-289.36346436 300.90921021]
[-279.63098145 289.47564697]
[-268.71936035 279.16140747]
[-256.75650024 270.08743286]
[-243.88269043 262.36004639]
[-230.24885559 256.06991577]
[-216.01486206 251.29074097]
[-201.34757996 248.07858276]
[-186.41897583 246.47109985]
[-171.40408325 246.48713684]
[-156.47894287 248.12649536]
[-141.81854248 251.36996460]
[-127.59477997 256.17950439]
[-113.97441101 262.49874878]
[-101.11713409 270.25360107]
[-89.17368317 279.35311890]
[-78.84701538 268.47378540]
[-68.52034760 257.59445190]
[-58.19367599 246.71510315]
[-47.86700821 235.83576965]
[-62.70109558 233.61094666]
[-70.34239197 220.70317078]
[-65.15802002 206.62757874]
[-50.96969986 201.76017761]
[-38.23653793 209.68902588]
[-36.34443283 224.56770325]
[-32.12016678 210.28468323]
[-16.70133018 206.73924255]
[-5.59409761 196.65811157]
[5.51313639 186.57696533]
[16.62037086 176.49583435]
[27.72760391 166.41468811]
[38.83483887 156.33355713]
[49.94207001 146.25241089]
[60.34944534 135.45025635]
[70.01025391 123.97555542]
[79.67106628 112.50086212]
[89.33187866 101.02616119]
[97.27855682 88.30412292]
[103.35239410 74.58885956]
[109.42623138 60.87358856]
[115.50006104 47.15832138]
[109.23411560 35.23554993]
[110.95394897 22.07300568]
[119.80953979 12.44696522]
[132.40293884 9.72006893]
[138.68029785 -3.90324688]
[144.34307861 -17.79327393]
[149.37998962 -31.92230415]
[154.41691589 -46.05133438]
[159.45382690 -60.18036270]
[164.49073792 -74.30939484]
[169.52766418 -88.43842316]
[174.56457520 -102.56745148]
[179.60148621 -116.69647980]
[182.92375183 -131.32394409]
[184.48426819 -146.24253845]
[178.22465515 -160.77278137]
[187.24404907 -172.62603760]
[188.80458069 -187.54464722]
[190.36509705 -202.46325684]
[176.45643616 -208.38275146]
[164.91156006 -218.14016724]
[156.75704956 -230.86791992]
[152.71800232 -245.43423462]
[153.15354919 -260.54388428]
[158.02497864 -274.85333252]
[166.89910889 -287.09020996]
[178.98687744 -296.16641235]
[193.21343994 -301.27487183]
[208.31376648 -301.96139526]
[222.94517517 -298.16488647]
[235.80662537 -290.22293091]
[245.75450134 -278.84173584]
[251.90423584 -265.03335571]
[253.70899963 -250.02552795]
[251.00831604 -235.15281677]
[244.04232788 -221.73765564]
[233.43045044 -210.97293091]
[220.11628723 -203.81581116]
[205.28370667 -200.90272522]
[203.72317505 -185.98413086]
[202.16265869 -171.06552124]
[208.53388977 -157.60235596]
[199.40287781 -144.68202209]
[197.84236145 -129.76341248]
[206.42665100 -142.06422424]
[218.66046143 -150.74372864]
[233.10658264 -154.78227234]
[248.06787109 -153.70542908]
[261.78671265 -147.63966370]
[272.65142822 -137.29762268]
[279.38565063 -123.89424133]
[281.19821167 -109.00416565]
[277.87622070 -94.37664032]
[269.80990601 -81.73011017]
[257.94692993 -72.55027008]
[243.68089294 -67.91556549]
[228.68778992 -68.37046814]
[214.72898865 -73.86153412]
[203.44435120 -83.74369049]
[196.15959167 -96.85598755]
[193.73051453 -111.65956116]
[188.69360352 -97.53053284]
[183.65669250 -83.40150452]
[178.61976624 -69.27247620]
[173.58285522 -55.14344788]
[168.54594421 -41.01441574]
[163.50901794 -26.88538742]
[158.47210693 -12.75635719]
[172.45332336 -18.19008827]
[186.23675537 -12.27255821]
[191.92662048 1.60640097]
[186.26348877 15.49629211]
[172.49148560 21.44035530]
[158.49983215 16.03355980]
[152.30360413 2.37411380]
[146.02624512 15.99742985]
[152.51893616 31.51141548]
[145.64700317 47.23056030]
[129.21533203 53.23215485]
[123.14149475 66.94742584]
[117.06765747 80.66268921]
[110.99382782 94.37796021]
[122.70259857 85.00220490]
[136.63256836 79.43840790]
[151.57865906 78.16788483]
[166.24789429 81.30056000]
[179.37123108 88.56541443]
[189.81335449 99.33397675]
[196.67094421 112.67464447]
[199.35073853 127.43332672]
[197.62089539 142.33325195]
[191.63108826 156.08541870]
[181.89947510 167.50013733]
[169.26792908 175.58990479]
[154.82923889 179.65489197]
[139.83247375 179.34342957]
[125.57501221 174.68244934]
[113.29025269 166.07521057]
[104.04096222 154.26628113]
[98.62729645 140.27728271]
[97.51759338 125.31838226]
[100.80657196 110.68696594]
[91.14576721 122.16166687]
[81.48495483 133.63636780]
[71.82414246 145.11106873]
[86.52252197 142.11814880]
[100.54386902 147.44749451]
[109.54350281 159.44776917]
[110.73279572 174.40055847]
[103.74323273 187.67256165]
[90.74060822 195.15130615]
[75.75392151 194.51943970]
[63.42696381 185.97273254]
[57.57937622 172.15948486]
[60.02320862 157.35964966]
[48.91597748 167.44078064]
[37.80874252 177.52192688]
[26.70150948 187.60307312]
[15.59427547 197.68420410]
[4.48704147 207.76535034]
[-6.62019253 217.84648132]
[-11.63892174 232.85058594]
[-26.26329422 235.67494202]
[-36.98767471 246.16244507]
[-47.31434250 257.04177856]
[-57.64101028 267.92111206]
[-67.96768188 278.80044556]
[-78.29434967 289.67977905]
[-68.58506775 301.13302612]
[-60.17104340 313.56893921]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 208]
[55 207]
[56 206]
[57 205]
[58 204]
[64 203]
[66 201]
[67 200]
[68 199]
[69 198]
[70 197]
[71 196]
[72 195]
[73 185]
[74 184]
[75 183]
[76 182]
[77 162]
[78 161]
[79 160]
[80 159]
[84 156]
[85 155]
[86 148]
[87 147]
[88 146]
[89 145]
[90 144]
[91 143]
[92 142]
[93 141]
[94 124]
[95 123]
[97 121]
[98 120]
[99 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
