%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[-8.55209160 531.35046387]
[-6.99756050 546.29162598]
[-7.40660143 561.30792236]
[-9.77221584 576.14227295]
[-14.05392361 590.54095459]
[-20.17846107 604.25756836]
[-28.04102707 617.05737305]
[-37.50708389 628.72137451]
[-48.41465759 639.04998779]
[-60.57710266 647.86639404]
[-73.78630066 655.01989746]
[-87.81623077 660.38793945]
[-102.42681885 663.87878418]
[-117.36805725 665.43255615]
[-132.38429260 665.02282715]
[-147.21855164 662.65649414]
[-161.61703491 658.37408447]
[-175.33334351 652.24890137]
[-188.13276672 644.38574219]
[-199.79631042 634.91912842]
[-210.12438965 624.01104736]
[-218.94027710 611.84820557]
[-226.09310913 598.63867188]
[-231.46051025 584.60845947]
[-234.95062256 569.99774170]
[-236.50372314 555.05639648]
[-236.09326172 540.04022217]
[-233.72622681 525.20605469]
[-229.44314575 510.80776978]
[-223.31730652 497.09176636]
[-215.45352173 484.29269409]
[-205.98635864 472.62960815]
[-195.07780457 462.30206299]
[-182.91452026 453.48675537]
[-169.70463562 446.33453369]
[-155.67419434 440.96780396]
[-141.06327820 437.47839355]
[-126.12188721 435.92599487]
[-111.10569763 436.33718872]
[-96.27165222 438.70492554]
[-81.87358856 442.98867798]
[-68.15785980 449.11517334]
[-60.30610657 436.33432007]
[-52.45435333 423.55349731]
[-44.60259628 410.77264404]
[-36.75084305 397.99179077]
[-28.89908600 385.21096802]
[-21.04733086 372.43011475]
[-25.65047264 356.25451660]
[-16.95931435 341.46334839]
[0.06911704 337.45687866]
[7.72971439 324.56054688]
[7.00156498 307.02667236]
[23.13610077 298.15209961]
[30.60384178 285.14312744]
[38.07158279 272.13418579]
[37.69757080 257.24426270]
[51.27825546 249.12789917]
[50.90424347 234.23799133]
[64.48493195 226.12161255]
[71.66029358 212.94914246]
[78.53970337 199.61970520]
[85.41912079 186.29028320]
[89.28342438 171.79658508]
[89.95320892 156.81155396]
[90.62299347 141.82650757]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[85.93902588 73.34188080]
[94.23690796 60.97279358]
[94.90669250 45.98775482]
[87.79331970 31.85585976]
[96.09120941 19.48677063]
[93.68415833 14.85500908]
[93.32989502 10.22599220]
[94.68360901 6.38119078]
[97.14031982 3.85197711]
[98.47855377 -11.08820820]
[99.81678772 -26.02839279]
[93.34152985 -40.46382141]
[102.18344879 -52.45005417]
[103.52168274 -67.39024353]
[104.85991669 -82.33042145]
[98.38465881 -96.76585388]
[107.22657776 -108.75209045]
[108.56481171 -123.69226837]
[109.90304565 -138.63246155]
[100.13430786 -147.90533447]
[97.52787781 -160.92135620]
[102.81559753 -172.88471985]
[113.86206818 -179.51834106]
[115.42259216 -194.43695068]
[116.98311615 -209.35556030]
[109.09677124 -225.99548340]
[119.95098877 -239.78506470]
[121.28922272 -254.72525024]
[122.62745667 -269.66543579]
[108.70719910 -275.58840942]
[97.29987335 -285.52459717]
[89.52304840 -298.50057983]
[86.13863373 -313.24511719]
[87.47818756 -328.31365967]
[93.41047668 -342.22994995]
[103.35431671 -353.63061523]
[116.33551025 -361.39871216]
[131.08229065 -364.77325439]
[146.14993286 -363.42361450]
[160.06224060 -357.48199463]
[171.45625305 -347.53051758]
[179.21566772 -334.54412842]
[182.58032227 -319.79507446]
[181.22058105 -304.72836304]
[175.26963806 -290.82003784]
[165.31053162 -279.43270874]
[152.31893921 -271.68197632]
[137.56764221 -268.32720947]
[136.22941589 -253.38702393]
[134.89117432 -238.44683838]
[142.40428162 -228.96633911]
[141.41165161 -216.50846863]
[131.90171814 -207.79502869]
[130.34120178 -192.87643433]
[128.78067017 -177.95782471]
[139.91950989 -165.35762024]
[138.47033691 -148.26333618]
[124.84323120 -137.29421997]
[123.50499725 -122.35403442]
[122.16676331 -107.41384888]
[128.73774719 -94.04704285]
[119.80010223 -80.99218750]
[118.46186829 -66.05200195]
[117.12363434 -51.11182022]
[123.69461060 -37.74501419]
[114.75697327 -24.69015884]
[113.41873932 -9.74997425]
[112.08050537 5.19021130]
[111.07624817 20.15655518]
[118.23752594 33.21662140]
[109.89173126 46.65753937]
[109.22194672 61.64257812]
[116.38322449 74.70264435]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[105.60803223 142.49629211]
[104.93824768 157.48133850]
[104.26846313 172.46636963]
[111.50637817 159.32815552]
[121.20909882 147.88888550]
[132.99017334 138.60415649]
[146.38037109 131.84378052]
[160.84637451 127.87703705]
[175.81198120 126.86191559]
[190.68113708 128.83883667]
[204.86160278 133.72906494]
[217.78857422 141.33782959]
[228.94718933 151.36207581]
[237.89299011 163.40254211]
[244.26966858 176.97964478]
[247.82324219 191.55264282]
[248.41218567 206.54107666]
[246.01303101 221.34796143]
[240.72134399 235.38356018]
[232.74789429 248.08883667]
[222.41023254 258.95773315]
[210.12014771 267.55737305]
[196.36711121 273.54519653]
[181.69891357 276.68273926]
[166.69979858 276.84500122]
[151.96714783 274.02557373]
[138.08778381 268.33673096]
[125.61450195 260.00500488]
[115.04410553 249.36233521]
[106.79761505 236.83255005]
[101.20349121 222.91473389]
[98.48452759 208.16320801]
[98.74855042 193.16969299]
[91.86913300 206.49913025]
[84.98972321 219.82855225]
[85.23750305 225.04254150]
[83.62205505 229.39497375]
[80.78356934 232.32038879]
[77.49388123 233.58935547]
[77.33374786 249.40975952]
[64.28720856 256.59564209]
[64.12707520 272.41604614]
[51.08053589 279.60192871]
[43.61279297 292.61087036]
[36.14505386 305.61984253]
[38.75474167 318.25122070]
[32.26702881 328.93267822]
[20.62604141 332.22116089]
[12.96544361 345.11746216]
[17.77020073 357.70034790]
[14.49842834 370.56527710]
[4.56171417 379.07077026]
[-8.26648808 380.28186035]
[-16.11824417 393.06271362]
[-23.96999931 405.84356689]
[-31.82175446 418.62438965]
[-39.67351151 431.40524292]
[-47.52526474 444.18609619]
[-55.37702179 456.96691895]
[-43.71257401 466.43243408]
[-33.38346100 477.33950806]
[-24.56642151 489.50152588]
[-17.41232681 502.71038818]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 206]
[43 205]
[44 204]
[45 203]
[46 202]
[47 201]
[48 200]
[51 196]
[52 195]
[54 192]
[55 191]
[56 190]
[58 188]
[60 186]
[61 182]
[62 181]
[63 180]
[64 150]
[65 149]
[66 148]
[67 147]
[68 146]
[70 144]
[72 142]
[73 141]
[75 139]
[79 138]
[80 137]
[81 136]
[83 134]
[84 133]
[85 132]
[87 130]
[88 129]
[89 128]
[93 125]
[94 124]
[95 123]
[97 120]
[98 119]
[99 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
