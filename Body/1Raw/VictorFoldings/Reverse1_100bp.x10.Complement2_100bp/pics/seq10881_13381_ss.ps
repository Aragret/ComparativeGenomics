%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[65.02134705 771.13146973]
[50.12646103 769.22821045]
[35.53833771 765.66918945]
[21.44043541 760.49914551]
[8.01005173 753.78314209]
[-4.58391094 745.60559082]
[-16.18307114 736.06939697]
[-26.64155769 725.29443359]
[-35.82784653 713.41619873]
[-43.62640381 700.58410645]
[-49.93915939 686.95953369]
[-54.68672180 672.71380615]
[-57.80938721 658.02612305]
[-59.26788330 643.08111572]
[-59.04386902 628.06677246]
[-57.14015961 613.17193604]
[-53.58069992 598.58392334]
[-48.41024780 584.48620605]
[-41.69383240 571.05603027]
[-33.51591873 558.46228027]
[-23.97935486 546.86340332]
[-13.20406723 536.40527344]
[-1.32557070 527.21929932]
[11.50675106 519.42114258]
[25.13151741 513.10876465]
[39.37738419 508.36166382]
[54.06519318 505.23944092]
[69.01023102 503.78137207]
[69.23355865 488.78305054]
[69.45688629 473.78469849]
[69.68021393 458.78637695]
[69.90354156 443.78802490]
[62.35658646 430.94696045]
[70.29849243 417.26351929]
[70.52182007 402.26519775]
[70.74514771 387.26684570]
[70.96847534 372.26852417]
[71.19180298 357.27017212]
[62.99438095 348.37475586]
[63.05768967 335.87756348]
[71.89320374 326.48092651]
[72.33980560 311.48757935]
[59.79857254 319.71664429]
[45.49864197 315.18762207]
[39.98139954 301.23913574]
[47.31394958 288.15350342]
[62.09100723 285.57696533]
[73.41881561 295.40731812]
[74.97933960 280.48870850]
[76.42875671 265.55889893]
[77.76699066 250.61871338]
[79.10522461 235.67852783]
[80.44345856 220.73834229]
[73.87248230 207.37153625]
[82.81011963 194.31668091]
[75.29701233 184.83619690]
[76.28964233 172.37832642]
[85.79957581 163.66488647]
[87.36009979 148.74627686]
[88.92062378 133.82768250]
[90.48114777 118.90907288]
[81.38512421 110.08206940]
[78.96202850 97.64091492]
[84.08045959 86.04543304]
[94.90560913 79.45227814]
[96.68807983 64.55856323]
[98.47054291 49.66484451]
[100.25300598 34.77112579]
[102.03547668 19.87740898]
[103.81793976 4.98369217]
[105.04491425 -9.96604156]
[105.71469879 -24.95108032]
[106.38448334 -39.93611908]
[106.27281952 -54.93570328]
[105.38000488 -69.90911102]
[104.48719025 -84.88251495]
[103.59437561 -99.85591888]
[92.05648041 -110.32085419]
[91.36434174 -125.51873016]
[101.41215515 -136.45385742]
[100.51934052 -151.42726135]
[99.62652588 -166.40066528]
[98.73370361 -181.37406921]
[97.84088898 -196.34748840]
[87.34696198 -211.47886658]
[95.80756378 -226.85369873]
[94.69191742 -241.81214905]
[93.57626343 -256.77059937]
[89.81725311 -265.09573364]
[92.55705261 -271.95977783]
[91.66423798 -286.93319702]
[81.17031097 -302.06457520]
[89.63091278 -317.43939209]
[88.51525879 -332.39785767]
[87.39961243 -347.35629272]
[72.86967468 -351.74325562]
[60.90805817 -361.08584595]
[53.13248062 -374.12060547]
[50.59452057 -389.08465576]
[53.63742065 -403.95428467]
[61.84965515 -416.71841431]
[74.12057495 -425.65087891]
[88.79065704 -429.54360962]
[103.87587738 -427.87011719]
[117.33609009 -420.85678101]
[127.35091400 -409.45205688]
[132.56591797 -395.19836426]
[132.27583313 -380.02337646]
[126.51987457 -365.97937012]
[116.07649231 -354.96575928]
[102.35806274 -348.47195435]
[103.47371674 -333.51348877]
[104.58936310 -318.55505371]
[113.54771423 -310.42642212]
[114.59960175 -297.97341919]
[106.63764191 -287.82598877]
[107.53045654 -272.85260010]
[108.53472137 -257.88626099]
[109.65036774 -242.92779541]
[110.76601410 -227.96934509]
[119.72436523 -219.84071350]
[120.77625275 -207.38771057]
[112.81430054 -197.24029541]
[113.70711517 -182.26689148]
[114.59992981 -167.29348755]
[115.49274445 -152.32008362]
[116.38555908 -137.34667969]
[127.66161346 -127.68302155]
[128.78036499 -112.51057434]
[118.56777954 -100.74873352]
[119.46059418 -85.77532959]
[120.35340881 -70.80192566]
[121.24622345 -55.82851791]
[131.13688660 -67.10570526]
[145.94274902 -69.51115417]
[158.89479065 -61.94512558]
[164.07150269 -47.86671448]
[159.10615540 -33.71237564]
[146.26884460 -25.95327950]
[131.42861938 -28.13678360]
[121.36952209 -39.26633453]
[120.69973755 -24.28129578]
[120.02995300 -9.29625607]
[132.69232178 -17.33767891]
[146.92323303 -12.59625053]
[152.23219299 1.43282509]
[144.70562744 14.40783501]
[129.89184570 16.76408386]
[118.71165466 6.76615810]
[116.92919159 21.65987587]
[115.14672852 36.55359268]
[113.36425781 51.44731140]
[111.58179474 66.34102631]
[109.79933167 81.23474121]
[120.29349518 93.97209930]
[118.45440674 110.37287903]
[105.39974976 120.46959686]
[103.83922577 135.38819885]
[102.27870178 150.30680847]
[100.71817780 165.22540283]
[108.60453033 181.86532593]
[97.75030518 195.65492249]
[104.22556305 210.09034729]
[95.38364410 222.07658386]
[94.04541016 237.01676941]
[92.70717621 251.95695496]
[91.36894226 266.89712524]
[93.72025299 275.72375488]
[89.89794159 282.04922485]
[88.33741760 296.96783447]
[87.33316040 311.93417358]
[86.88655090 326.92752075]
[95.98867798 342.93481445]
[86.19013977 357.49349976]
[85.96681213 372.49185181]
[85.74348450 387.49017334]
[85.52015686 402.48852539]
[85.29682922 417.48684692]
[92.82781219 431.40069580]
[84.90187836 444.01135254]
[84.67855072 459.00970459]
[84.45522308 474.00802612]
[84.23189545 489.00637817]
[84.00856781 504.00469971]
[98.90356445 505.90707397]
[113.49189758 509.46524048]
[127.59011078 514.63439941]
[141.02088928 521.34960938]
[153.61534119 529.52642822]
[165.21507263 539.06195068]
[175.67420959 549.83630371]
[184.86120605 561.71392822]
[192.66053772 574.54559326]
[198.97410583 588.16979980]
[203.72251892 602.41522217]
[206.84606934 617.10272217]
[208.30545044 632.04766846]
[208.08233643 647.06201172]
[206.17951965 661.95690918]
[202.62092590 676.54516602]
[197.45132446 690.64318848]
[190.73571777 704.07379150]
[182.55854797 716.66802979]
[173.02267456 728.26745605]
[162.24801636 738.72625732]
[150.37007141 747.91290283]
[137.53820801 755.71185303]
[123.91382599 762.02502441]
[109.66824341 766.77301025]
[94.98062134 769.89611816]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 184]
[29 183]
[30 182]
[31 181]
[32 180]
[34 178]
[35 177]
[36 176]
[37 175]
[38 174]
[41 172]
[42 171]
[48 170]
[49 169]
[50 167]
[51 166]
[52 165]
[53 164]
[55 162]
[58 160]
[59 159]
[60 158]
[61 157]
[65 154]
[66 153]
[67 152]
[68 151]
[69 150]
[70 149]
[71 143]
[72 142]
[73 141]
[74 133]
[75 132]
[76 131]
[77 130]
[80 127]
[81 126]
[82 125]
[83 124]
[84 123]
[86 120]
[87 119]
[88 118]
[90 117]
[91 116]
[93 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
