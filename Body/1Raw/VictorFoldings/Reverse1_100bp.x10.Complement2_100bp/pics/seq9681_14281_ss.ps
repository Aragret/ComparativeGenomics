%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[83.91891479 569.38519287]
[72.47412109 559.22271729]
[67.07382965 544.90161133]
[68.95899200 529.71258545]
[77.69640350 517.14611816]
[91.27828217 510.08987427]
[91.27828217 495.08987427]
[83.54098511 482.36257935]
[91.27828217 468.56240845]
[91.27828217 453.56240845]
[91.27828217 438.56240845]
[82.94932556 429.79000854]
[82.82656860 417.29327393]
[91.52120209 407.76614380]
[91.74452972 392.76779175]
[91.96785736 377.76947021]
[92.19118500 362.77111816]
[92.41451263 347.77279663]
[78.89671326 335.42837524]
[78.69132233 316.80389404]
[92.39559937 303.72311401]
[92.17227173 288.72476196]
[91.94894409 273.72644043]
[84.02301025 261.11575317]
[91.55398560 247.20191956]
[91.33065796 232.20358276]
[80.47778320 226.76388550]
[72.92286682 217.16928101]
[70.14785767 205.20265198]
[72.73914337 193.12106323]
[80.26498413 183.23014832]
[91.34601593 177.44409180]
[91.56934357 162.44575500]
[91.79267120 147.44740295]
[92.01599884 132.44906616]
[92.23932648 117.45073700]
[82.22293854 106.98085785]
[82.43866730 92.49294281]
[92.76233673 82.32593536]
[92.98566437 67.32759857]
[93.20899200 52.32926178]
[93.43231964 37.33092499]
[93.65564728 22.33258629]
[93.87897491 7.33424950]
[93.54399872 -7.66200972]
[92.65118408 -22.63541603]
[91.75836945 -37.60882187]
[90.86555481 -52.58222580]
[79.10848236 -43.26711273]
[64.46152496 -46.50230026]
[57.72185898 -59.90293121]
[63.85772324 -73.59056091]
[78.34598541 -77.47517395]
[90.50564575 -68.69462585]
[90.72897339 -83.69297028]
[90.95230103 -98.69130707]
[91.17562866 -113.68964386]
[91.39895630 -128.68797302]
[91.62228394 -143.68630981]
[91.28730774 -158.68257141]
[90.39449310 -173.65597534]
[89.50167847 -188.62939453]
[88.60886383 -203.60279846]
[81.77209473 -190.25143433]
[70.39633942 -180.47430420]
[56.16913605 -175.72177124]
[41.20099258 -176.69885254]
[27.71234703 -183.26058960]
[17.70416260 -194.43360901]
[12.66109180 -208.56044006]
[13.33124447 -223.54547119]
[19.61520767 -237.16574097]
[30.58079338 -247.40077209]
[44.60132217 -252.73226929]
[59.59692764 -252.36932373]
[73.34310913 -246.36576843]
[83.80069733 -235.61222839]
[89.41800690 -221.70576477]
[91.64312744 -236.53981018]
[93.86824036 -251.37385559]
[96.09336090 -266.20788574]
[98.31847382 -281.04193115]
[92.71391296 -295.83718872]
[102.25358582 -307.27587891]
[104.47870636 -322.10992432]
[106.70381927 -336.94396973]
[108.92893982 -351.77801514]
[96.25399017 -343.75643921]
[81.58970642 -346.91220093]
[73.33646393 -359.43756104]
[76.22208405 -374.15737915]
[88.59356689 -382.63949585]
[103.36395264 -380.02499390]
[112.07187653 -367.81246948]
[115.61154938 -382.38885498]
[119.15122223 -396.96520996]
[122.69089508 -411.54159546]
[126.23056793 -426.11798096]
[112.57804871 -432.45001221]
[100.42335510 -441.32412720]
[90.23368835 -452.39916992]
[82.40070343 -465.24948120]
[77.22549438 -479.38113403]
[74.90696716 -494.25094604]
[75.53424835 -509.28732300]
[79.08322906 -523.91235352]
[85.41748810 -537.56384277]
[94.29355621 -549.71710205]
[105.37026215 -559.90496826]
[118.22184753 -567.73583984]
[132.35432434 -572.90875244]
[147.22448730 -575.22491455]
[162.26077271 -574.59515381]
[176.88520813 -571.04382324]
[190.53567505 -564.70739746]
[202.68750000 -555.82934570]
[212.87358093 -544.75097656]
[220.70240784 -531.89813232]
[225.87304688 -517.76483154]
[228.18675232 -502.89425659]
[227.55461121 -487.85809326]
[224.00090027 -473.23422241]
[217.66221619 -459.58477783]
[208.78221130 -447.43438721]
[197.70220947 -437.25012207]
[184.84808350 -429.42337036]
[170.71392822 -424.25500488]
[155.84301758 -421.94372559]
[140.80694580 -422.57830811]
[137.26727295 -408.00192261]
[133.72760010 -393.42553711]
[130.18792725 -378.84918213]
[126.64825439 -364.27279663]
[123.76298523 -349.55291748]
[121.53786469 -334.71887207]
[119.31275177 -319.88482666]
[117.08763123 -305.05078125]
[122.85134888 -291.31655884]
[113.15251923 -278.81683350]
[110.92740631 -263.98278809]
[108.70228577 -249.14874268]
[106.47716522 -234.31469727]
[104.25205231 -219.48065186]
[103.58226776 -204.49560547]
[104.47508240 -189.52220154]
[105.36789703 -174.54879761]
[106.26071167 -159.57539368]
[118.01778412 -168.89050293]
[132.66474915 -165.65531921]
[139.40440369 -152.25468445]
[133.26853943 -138.56706238]
[118.78028107 -134.68244934]
[106.62062073 -143.46298218]
[106.39729309 -128.46464539]
[106.17396545 -113.46631622]
[105.95063782 -98.46797943]
[105.72731018 -83.46964264]
[105.50398254 -68.47129822]
[105.83895874 -53.47504425]
[106.73177338 -38.50163651]
[107.62458801 -23.52823067]
[108.51741028 -8.55482578]
[120.27447510 -17.86993980]
[134.92143250 -14.63475132]
[141.66110229 -1.23411918]
[135.52523804 12.45350838]
[121.03697205 16.33812141]
[108.87731171 7.55757761]
[108.65398407 22.55591393]
[108.43065643 37.55425262]
[108.20732880 52.55258942]
[107.98400116 67.55092621]
[107.76067352 82.54926300]
[117.77706146 93.01914215]
[117.56133270 107.50705719]
[107.23766327 117.67406464]
[107.01433563 132.67239380]
[106.79100800 147.67073059]
[106.56768036 162.66908264]
[106.34435272 177.66741943]
[121.17068481 188.10473633]
[126.71510315 205.20265198]
[120.93718719 222.05693054]
[106.32899475 231.98025513]
[106.55232239 246.97859192]
[114.49423218 260.66204834]
[106.94728088 273.50311279]
[107.17060852 288.50143433]
[107.39393616 303.49978638]
[117.37316895 309.96130371]
[122.93723297 320.33157349]
[122.80580139 331.97961426]
[117.12719727 342.01300049]
[107.41284943 347.99612427]
[107.18952179 362.99444580]
[106.96619415 377.99279785]
[106.74286652 392.99111938]
[106.51953888 407.98947144]
[115.85897827 423.85943604]
[106.27828217 438.56240845]
[106.27828217 453.56240845]
[106.27828217 468.56240845]
[114.01558685 482.36257935]
[106.27828217 495.08987427]
[106.27828217 510.08987427]
[119.86016083 517.14611816]
[128.59757996 529.71258545]
[130.48274231 544.90161133]
[125.08245087 559.22271729]
[113.63765717 569.38519287]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 205]
[7 204]
[9 202]
[10 201]
[11 200]
[14 198]
[15 197]
[16 196]
[17 195]
[18 194]
[21 189]
[22 188]
[23 187]
[25 185]
[26 184]
[32 180]
[33 179]
[34 178]
[35 177]
[36 176]
[39 173]
[40 172]
[41 171]
[42 170]
[43 169]
[44 168]
[45 162]
[46 161]
[47 160]
[48 159]
[54 158]
[55 157]
[56 156]
[57 155]
[58 154]
[59 153]
[60 147]
[61 146]
[62 145]
[63 144]
[78 143]
[79 142]
[80 141]
[81 140]
[82 139]
[84 137]
[85 136]
[86 135]
[87 134]
[94 133]
[95 132]
[96 131]
[97 130]
[98 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
