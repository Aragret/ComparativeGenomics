%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[264.31243896 664.76464844]
[275.20700073 654.35290527]
[288.20935059 646.73474121]
[283.80834961 632.39489746]
[273.27212524 626.45233154]
[269.48822021 614.54156494]
[275.00494385 602.88269043]
[270.81793213 588.47894287]
[266.63092041 574.07513428]
[262.12329102 559.76849365]
[257.29730225 545.56604004]
[246.58880615 539.93975830]
[242.45196533 528.14691162]
[247.61911011 516.32897949]
[243.00509644 502.05627441]
[238.39108276 487.78353882]
[233.77708435 473.51080322]
[229.16307068 459.23806763]
[224.54905701 444.96533203]
[219.93505859 430.69259644]
[214.37582397 416.76080322]
[207.89633179 403.23245239]
[201.41683960 389.70410156]
[194.93733215 376.17578125]
[188.45783997 362.64743042]
[181.97834778 349.11907959]
[175.49885559 335.59072876]
[168.12841797 348.65505981]
[153.34396362 351.18878174]
[142.04402161 341.32412720]
[142.55850220 326.33294678]
[154.50814819 317.26620483]
[169.08283997 320.80648804]
[158.13380432 315.66400146]
[153.47450256 304.06765747]
[158.10879517 292.03079224]
[152.86209106 277.97833252]
[147.61537170 263.92587280]
[142.36865234 249.87338257]
[137.12193298 235.82092285]
[131.87521362 221.76844788]
[126.62849426 207.71597290]
[121.38177490 193.66349792]
[116.13505554 179.61103821]
[107.62847137 191.96571350]
[92.67691803 193.17031860]
[82.30213165 182.33686829]
[84.15200806 167.45137024]
[96.86289215 159.48686218]
[111.06361389 164.31333923]
[106.87660217 149.90956116]
[102.68959045 135.50576782]
[98.50257874 121.10198975]
[94.31556702 106.69820404]
[91.77851105 105.00917053]
[89.79994965 102.35967255]
[88.73680878 98.95479584]
[88.86525726 95.12860870]
[90.33558655 91.31139374]
[87.01332855 76.68393707]
[83.69107056 62.05647659]
[80.36881256 47.42901611]
[67.27902222 38.98536301]
[64.11815643 24.10371017]
[72.24855804 11.67663670]
[68.92630005 -2.95082331]
[65.60403442 -17.57828331]
[62.28177643 -32.20574188]
[51.68012619 -43.94948578]
[56.40637589 -58.07435226]
[53.08411407 -72.70181274]
[42.48246002 -84.44555664]
[47.20870972 -98.57041931]
[43.88645172 -113.19788361]
[38.93406677 -120.87327576]
[40.62533569 -128.06782532]
[37.52122498 -142.74311829]
[32.17687607 -128.72749329]
[21.34030151 -118.35595703]
[7.10387850 -113.63110352]
[-7.78356600 -115.46522522]
[-20.44749832 -123.50418091]
[-28.44271088 -136.19577026]
[-30.22545624 -151.08946228]
[-25.45151138 -165.30949402]
[-15.04265022 -176.11021423]
[-1.00866246 -181.40617371]
[13.94070911 -180.17480469]
[26.91897583 -172.65386963]
[35.42071152 -160.29434204]
[34.97410583 -175.28768921]
[34.52750015 -190.28103638]
[24.48874283 -205.71817017]
[33.40335846 -220.83427429]
[32.73357391 -235.81930542]
[24.38777924 -249.26022339]
[31.54906082 -262.32028198]
[17.35867500 -267.84774780]
[6.64794731 -278.67367554]
[1.27257776 -292.92236328]
[2.16388059 -308.12518311]
[9.16743183 -321.64813232]
[21.06982422 -331.14828491]
[35.80889893 -334.97967529]
[50.83101654 -332.47851562]
[63.53350830 -324.07812500]
[71.71559143 -311.23391724]
[73.95967102 -296.17123413]
[69.87693787 -281.49981689]
[60.17476273 -269.76150513]
[46.53409958 -262.99008179]
[54.83198547 -250.62098694]
[47.71861267 -236.48908997]
[48.38839722 -221.50405884]
[57.10075378 -213.11230469]
[57.78140259 -200.63351440]
[49.52085114 -190.72764587]
[49.96745682 -175.73429871]
[50.41406250 -160.74095154]
[52.19652939 -145.84722900]
[55.30063629 -131.17193604]
[58.51391220 -116.52014160]
[61.83617020 -101.89268494]
[72.20019531 -91.19519043]
[67.71157837 -76.02407074]
[71.03383636 -61.39661026]
[81.39785767 -50.69912338]
[76.90924072 -35.52800369]
[80.23149872 -20.90054321]
[83.55375671 -6.27308273]
[86.87601471 8.35437775]
[99.57682037 16.05016708]
[103.15443420 30.83716583]
[94.99626923 44.10675812]
[98.31852722 58.73421860]
[101.64079285 73.36167908]
[104.96305084 87.98913574]
[108.71935272 102.51119995]
[112.90635681 116.91497803]
[117.09336853 131.31875610]
[121.28038025 145.72254944]
[125.46739197 160.12632751]
[130.18753052 174.36431885]
[135.43424988 188.41677856]
[140.68096924 202.46925354]
[145.92768860 216.52172852]
[151.17440796 230.57420349]
[156.42111206 244.62666321]
[161.66783142 258.67913818]
[166.91455078 272.73159790]
[172.16127014 286.78408813]
[186.63290405 298.17062378]
[183.05563354 315.35113525]
[189.02719116 329.11123657]
[195.50669861 342.63958740]
[201.98619080 356.16793823]
[208.46568298 369.69628906]
[214.94517517 383.22460938]
[221.42468262 396.75296021]
[227.90417480 410.28131104]
[231.22827148 395.65426636]
[241.85781860 385.07064819]
[256.49911499 381.80990601]
[270.61538696 386.88241577]
[279.83258057 398.71640015]
[281.29464722 413.64498901]
[274.54852295 427.04235840]
[261.68460083 434.75723267]
[246.68887329 434.39904785]
[234.20777893 426.07858276]
[238.82179260 440.35131836]
[243.43580627 454.62405396]
[248.04981995 468.89678955]
[252.66381836 483.16952515]
[257.27783203 497.44226074]
[261.89184570 511.71499634]
[275.84060669 523.73638916]
[271.49975586 540.73999023]
[276.32574463 554.94244385]
[280.25247192 558.38165283]
[282.26602173 562.56481934]
[282.40332031 566.63867188]
[281.03469849 569.88812256]
[285.22171021 584.29193115]
[289.40872192 598.69567871]
[302.99337769 611.12707520]
[298.14819336 627.99389648]
[302.54919434 642.33374023]
[317.58651733 641.34631348]
[332.44616699 643.85394287]
[346.32672119 649.72137451]
[358.47961426 658.63226318]
[368.24951172 670.10595703]
[375.10949707 683.52380371]
[378.68960571 698.16204834]
[378.79681396 713.23138428]
[375.42529297 727.91912842]
[368.75689697 741.43316650]
[359.15124512 753.04473877]
[347.12631226 762.12756348]
[333.33065796 768.19189453]
[318.50820923 770.91064453]
[303.45831299 770.13726807]
[288.99264526 765.91339111]
[275.89129639 758.46679688]
[264.86080933 748.19915771]
[256.49603271 735.66412354]
[251.24807739 721.53771973]
[249.39994812 706.58172607]
[251.05131531 691.60272217]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 188]
[4 187]
[7 185]
[8 184]
[9 183]
[10 179]
[11 178]
[14 176]
[15 175]
[16 174]
[17 173]
[18 172]
[19 171]
[20 170]
[21 160]
[22 159]
[23 158]
[24 157]
[25 156]
[26 155]
[27 154]
[33 153]
[36 151]
[37 150]
[38 149]
[39 148]
[40 147]
[41 146]
[42 145]
[43 144]
[44 143]
[50 142]
[51 141]
[52 140]
[53 139]
[54 138]
[59 137]
[60 136]
[61 135]
[62 134]
[65 131]
[66 130]
[67 129]
[68 128]
[70 126]
[71 125]
[73 123]
[74 122]
[76 121]
[77 120]
[90 119]
[91 118]
[92 117]
[94 114]
[95 113]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
