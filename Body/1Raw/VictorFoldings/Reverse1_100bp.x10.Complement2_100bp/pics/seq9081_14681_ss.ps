%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[194.56121826 334.23187256]
[203.01225281 321.81271362]
[213.01203918 310.60293579]
[224.38949585 300.79434204]
[216.16067505 288.25292969]
[202.70956421 281.85632324]
[201.60806274 266.07351685]
[188.15693665 259.67691040]
[187.05545044 243.89408875]
[178.82664490 231.35269165]
[170.59783936 218.81129456]
[164.30017090 214.94329834]
[162.34149170 206.02134705]
[154.30032349 193.35882568]
[146.25914001 180.69628906]
[138.21797180 168.03376770]
[130.17680359 155.37124634]
[121.76218414 142.95375061]
[112.98158264 130.79229736]
[104.20097351 118.63083649]
[89.91375732 116.21801758]
[81.43197632 104.47043610]
[83.63756561 90.14976501]
[74.85696411 77.98831177]
[66.07636261 65.82685852]
[56.33039474 54.42439270]
[45.68438721 43.85734558]
[35.03837967 33.29029846]
[24.39237022 22.72324944]
[28.87178230 37.03879547]
[28.77106857 52.03845978]
[24.09982681 66.29256439]
[15.30329323 78.44249725]
[3.21989536 87.33021545]
[-10.99865437 92.10858917]
[-25.99713326 92.32217407]
[-40.34598160 87.95062256]
[-52.67756271 79.41059113]
[-61.81650543 67.51605988]
[-66.89173889 53.40075302]
[-67.41953278 38.41004181]
[-63.34958267 23.97274590]
[-55.06980133 11.46494007]
[-43.36936951 2.07878613]
[-29.36349678 -3.29108739]
[-14.38713360 -4.13285780]
[0.13226645 -0.36629319]
[12.81166267 7.65034914]
[5.34392166 -5.35860348]
[-9.64714622 -9.59010887]
[-17.03517914 -22.88941765]
[-12.90870094 -37.15503311]
[-20.37644196 -50.16398621]
[-28.03703880 -63.06031036]
[-35.88879395 -75.84115601]
[-43.74055099 -88.62199402]
[-51.59230423 -101.40283966]
[-59.44406128 -114.18368530]
[-67.29581451 -126.96452332]
[-80.87644958 -120.55909729]
[-95.07932281 -115.68655396]
[-109.73201752 -112.40604401]
[-124.65666962 -110.75740051]
[-139.67210388 -110.76062012]
[-154.59603882 -112.41567230]
[-169.24732971 -115.70246124]
[-183.44810486 -120.58109283]
[-197.02598572 -126.99234772]
[-209.81616211 -134.85839844]
[-221.66336060 -144.08374023]
[-232.42376709 -154.55641174]
[-241.96676636 -166.14927673]
[-250.17651367 -178.72160339]
[-256.95333862 -192.12077332]
[-262.21499634 -206.18412781]
[-265.89758301 -220.74098206]
[-267.95645142 -235.61459351]
[-268.36654663 -250.62442017]
[-267.12292480 -265.58825684]
[-264.24066162 -280.32446289]
[-259.75479126 -294.65414429]
[-253.71971130 -308.40338135]
[-246.20872498 -321.40524292]
[-237.31297302 -333.50189209]
[-227.14047241 -344.54647827]
[-215.81468201 -354.40496826]
[-203.47311401 -362.95767212]
[-190.26556396 -370.10076904]
[-176.35235596 -375.74755859]
[-161.90240479 -379.82943726]
[-147.09109497 -382.29693604]
[-132.09825134 -383.12005615]
[-117.10584259 -382.28881836]
[-102.29587555 -379.81329346]
[-87.84813690 -375.72354126]
[-73.93800354 -370.06924438]
[-60.73432541 -362.91897583]
[-48.39738846 -354.35958862]
[-37.07695389 -344.49496460]
[-26.91044044 -333.44482422]
[-18.02125931 -321.34335327]
[-10.51731491 -308.33743286]
[-4.48970127 -294.58493042]
[-0.01158641 -280.25280762]
[2.86266875 -265.51504517]
[4.09817362 -250.55053711]
[3.67993045 -235.54092407]
[1.61301577 -220.66844177]
[-2.07747936 -206.11360168]
[-7.34675598 -192.05308533]
[-14.13084984 -178.65759277]
[-22.34740829 -166.08972168]
[-31.89669037 -154.50204468]
[-42.66277695 -144.03520203]
[-54.51497269 -134.81628418]
[-46.66321945 -122.03543854]
[-38.81146240 -109.25459290]
[-30.95970726 -96.47375488]
[-23.10795212 -83.69290924]
[-15.25619698 -70.91206360]
[-10.90162849 -68.95074463]
[-7.73291779 -64.23308563]
[-7.36748981 -57.63172531]
[0.10025137 -44.62277222]
[14.50003338 -40.99209213]
[22.25870323 -27.90554428]
[18.35287476 -12.82634449]
[25.82061577 0.18260789]
[34.95941925 12.07724094]
[45.60542679 22.64428902]
[56.25143433 33.21133804]
[66.89744568 43.77838516]
[64.06357574 29.04850960]
[68.31118011 14.66248131]
[78.69133759 3.83417296]
[92.88510132 -1.01734376]
[107.72153473 1.19177282]
[119.88614655 9.96800041]
[126.66133881 23.35070801]
[126.53350067 38.35016251]
[119.53120422 51.61544800]
[107.21877289 60.18307114]
[92.34684753 62.13899231]
[78.23781586 57.04625320]
[87.01841736 69.20771027]
[95.79902649 81.36916351]
[110.08624268 83.78198242]
[118.56802368 95.52956390]
[116.36243439 109.85023499]
[125.14303589 122.01168823]
[133.92364502 134.17314148]
[137.94587708 135.80886841]
[140.93750000 138.38078308]
[142.73075867 141.44992065]
[143.31768799 144.56794739]
[142.83932495 147.33006287]
[150.88049316 159.99259949]
[158.92167664 172.65512085]
[166.96284485 185.31764221]
[175.00401306 197.98016357]
[183.13923645 210.58248901]
[191.36804199 223.12388611]
[199.59684753 235.66528320]
[213.63655090 242.95893860]
[214.14945984 257.84469604]
[228.18916321 265.13833618]
[228.70208740 280.02410889]
[236.93089294 292.56552124]
[250.45812988 286.03338623]
[264.72225952 281.32281494]
[279.47924805 278.51446533]
[294.47653198 277.65637207]
[309.45751953 278.76324463]
[324.16583252 281.81607056]
[338.34985352 286.76269531]
[351.76681519 293.51843262]
[364.18719482 301.96768188]
[375.39837646 311.96585083]
[385.20861816 323.34191895]
[393.44998169 335.90115356]
[399.98150635 349.42871094]
[404.69137573 363.69308472]
[407.49899292 378.45016479]
[408.35638428 393.44750977]
[407.24880981 408.42843628]
[404.19528198 423.13662720]
[399.24798584 437.32040405]
[392.49160767 450.73706055]
[384.04177856 463.15701294]
[374.04306030 474.36773682]
[362.66653442 484.17742920]
[350.10690308 492.41821289]
[336.57904053 498.94906616]
[322.31445312 503.65826416]
[307.55722046 506.46517944]
[292.55984497 507.32186890]
[277.57894897 506.21359253]
[262.87091064 503.15933228]
[248.68737793 498.21136475]
[235.27105713 491.45437622]
[222.85150146 483.00393677]
[211.64125061 473.00466919]
[201.83210754 461.62768555]
[193.59191895 449.06765747]
[187.06170654 435.53948975]
[182.35319519 421.27468872]
[179.54695129 406.51730347]
[178.69100952 391.51989746]
[179.79998779 376.53906250]
[182.85494995 361.83117676]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 168]
[5 167]
[7 165]
[9 163]
[10 162]
[11 161]
[13 160]
[14 159]
[15 158]
[16 157]
[17 156]
[18 151]
[19 150]
[20 149]
[23 146]
[24 145]
[25 144]
[26 132]
[27 131]
[28 130]
[29 129]
[48 128]
[49 127]
[52 124]
[53 123]
[54 120]
[55 119]
[56 118]
[57 117]
[58 116]
[59 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
