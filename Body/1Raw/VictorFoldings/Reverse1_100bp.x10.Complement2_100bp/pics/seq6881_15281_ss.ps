%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[105.98328400 553.97747803]
[101.36324310 539.68377686]
[98.64849091 524.90930176]
[97.88547516 509.90686035]
[99.08726501 494.93316650]
[102.23328400 480.24450684]
[107.26969910 466.09213257]
[114.11033630 452.71823120]
[122.63814545 440.35168457]
[132.70719910 429.20407104]
[144.14520264 419.46615601]
[156.75643921 411.30456543]
[170.32510376 404.85894775]
[165.71110535 390.58621216]
[161.09709167 376.31347656]
[149.82000732 366.58328247]
[152.93724060 351.07220459]
[148.32322693 336.79946899]
[134.68440247 325.75637817]
[138.68940735 307.78302002]
[133.86341858 293.58056641]
[129.03741455 279.37811279]
[124.21141815 265.17565918]
[116.62700653 278.11694336]
[102.14858246 282.03808594]
[89.07005310 274.69287109]
[84.88338470 260.28900146]
[91.98690033 247.07763672]
[106.31137848 242.62686157]
[119.65048981 249.48556519]
[115.01734924 243.72744751]
[116.16834259 234.66581726]
[112.84608459 220.03836060]
[109.52381897 205.41090393]
[106.20156097 190.78344727]
[102.87930298 176.15597534]
[93.98970032 188.23799133]
[79.18191528 190.63159180]
[66.93850708 181.96562195]
[64.27306366 167.20434570]
[72.71247101 154.80368042]
[87.42225647 151.86730957]
[99.97544098 160.07652283]
[97.97142792 145.21099854]
[93.96247864 139.00212097]
[96.04994202 130.10940552]
[94.26747894 115.21569061]
[85.56227875 107.47872162]
[84.26443481 95.90474701]
[91.03981781 86.43186951]
[81.90880585 73.51152802]
[88.28004456 60.04837036]
[86.71952057 45.12976456]
[85.15899658 30.21116066]
[83.59847260 15.29255581]
[82.03794861 0.37395084]
[80.47742462 -14.54465389]
[78.91690063 -29.46325874]
[77.35637665 -44.38186264]
[74.68238831 -47.80293655]
[73.36828613 -51.52283478]
[73.34102631 -55.07736206]
[74.38431549 -58.07371902]
[76.17429352 -60.23105621]
[75.50450897 -75.21609497]
[74.83472443 -90.20113373]
[66.48893738 -103.64205170]
[73.65021515 -116.70211792]
[72.08969116 -131.62072754]
[69.64396667 -146.41999817]
[67.19823456 -161.21926880]
[63.30527496 -166.56307983]
[62.77503586 -172.22134399]
[64.90686035 -176.49502563]
[62.90284729 -191.36054993]
[60.89883423 -206.22607422]
[58.89482117 -221.09161377]
[49.38316727 -233.73435974]
[55.35073090 -247.38124084]
[40.32610703 -247.46408081]
[25.45924568 -249.63723755]
[11.03953266 -253.85836792]
[-2.65234900 -260.04531860]
[-15.34988213 -268.07769775]
[-26.80590630 -277.79910278]
[-36.79742432 -289.02029419]
[-45.12995148 -301.52291870]
[-51.64128876 -315.06353760]
[-56.20469666 -329.37863159]
[-58.73134232 -344.18951416]
[-59.17204285 -359.20788574]
[-57.51822662 -374.14144897]
[-53.80207825 -388.69946289]
[-48.09593964 -402.59860229]
[-40.51087570 -415.56829834]
[-31.19454002 -427.35610962]
[-20.32827187 -437.73254395]
[-8.12358761 -446.49563599]
[5.18194389 -453.47479248]
[19.32932663 -458.53421021]
[34.04317856 -461.57537842]
[49.03709030 -462.53912354]
[64.01920319 -461.40661621]
[78.69787598 -458.19998169]
[92.78739929 -452.98159790]
[106.01350403 -445.85302734]
[118.11874390 -436.95309448]
[128.86749268 -426.45495605]
[138.05050659 -414.56301880]
[145.48905945 -401.50872803]
[151.03834534 -387.54623413]
[154.59033203 -372.94726562]
[156.07589722 -357.99606323]
[155.46612549 -342.98358154]
[152.77287292 -328.20208740]
[148.04858398 -313.93930054]
[141.38519287 -300.47283936]
[132.91241455 -288.06484985]
[122.79518890 -276.95684814]
[111.23043060 -267.36505127]
[98.44326019 -259.47616577]
[84.68258667 -253.44375610]
[70.21625519 -249.38525391]
[79.58457184 -237.80578613]
[73.76034546 -223.09562683]
[75.76436615 -208.23008728]
[77.76837921 -193.36456299]
[79.77239227 -178.49903870]
[81.99750519 -163.66499329]
[84.44323730 -148.86572266]
[86.88896179 -134.06645203]
[94.79089355 -146.81632996]
[108.63388062 -152.59317017]
[123.25482178 -149.24234009]
[133.20046997 -138.01362610]
[134.76135254 -123.09505463]
[127.35528564 -110.05088806]
[113.74456024 -103.74627686]
[99.00563049 -106.53268433]
[88.63525391 -117.37190247]
[96.93313599 -105.00281525]
[89.81976318 -90.87091827]
[90.48954773 -75.88587952]
[91.15933228 -60.90084076]
[92.27498627 -45.94238663]
[93.83551025 -31.02378082]
[95.39603424 -16.10517693]
[96.95655060 -1.18657219]
[98.51707458 13.73203278]
[100.07759857 28.65063667]
[101.63812256 43.56924057]
[103.19864655 58.48784637]
[112.21804047 70.34111023]
[105.95842743 84.87134552]
[116.15846252 98.18807983]
[109.16119385 113.43322754]
[110.94366455 128.32695007]
[112.83695221 143.20697021]
[114.84096527 158.07250977]
[117.50676727 172.83372498]
[120.82902527 187.46118164]
[124.15128326 202.08863831]
[127.47354126 216.71611023]
[130.79580688 231.34356689]
[134.22686768 245.94589233]
[138.41387939 260.34967041]
[143.23986816 274.55212402]
[148.06587219 288.75457764]
[152.89186096 302.95703125]
[164.09548950 309.34777832]
[167.82269287 321.27639771]
[162.59596252 332.18545532]
[167.20996094 346.45819092]
[178.81707764 357.20925903]
[175.36982727 371.69946289]
[179.98384094 385.97219849]
[184.59783936 400.24493408]
[199.37193298 397.52807617]
[214.37425232 396.76290894]
[229.34808350 397.96255493]
[244.03723145 401.10647583]
[258.19030762 406.14086914]
[271.56518555 412.97961426]
[283.93295288 421.50564575]
[295.08200073 431.57312012]
[304.82153320 443.00970459]
[312.98495483 455.61978149]
[319.43249512 469.18753052]
[324.05389404 483.48080444]
[326.77005005 498.25503540]
[327.53451538 513.25738525]
[326.33413696 528.23120117]
[323.18951416 542.92016602]
[318.15444946 557.07299805]
[311.31509399 570.44750977]
[302.78845215 582.81488037]
[292.72045898 593.96343994]
[281.28338623 603.70245361]
[268.67294312 611.86529541]
[255.10487366 618.31219482]
[240.81138611 622.93292236]
[226.03703308 625.64837646]
[211.03463745 626.41210938]
[196.06091309 625.21099854]
[181.37208557 622.06573486]
[167.21946716 617.02996826]
[153.84526062 610.18994141]
[141.47830200 601.66271973]
[130.33021545 591.59423828]
[120.59175873 580.15667725]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 177]
[14 176]
[15 175]
[17 173]
[18 172]
[20 169]
[21 168]
[22 167]
[23 166]
[30 165]
[32 164]
[33 163]
[34 162]
[35 161]
[36 160]
[43 159]
[44 158]
[46 157]
[47 156]
[50 154]
[52 152]
[53 151]
[54 150]
[55 149]
[56 148]
[57 147]
[58 146]
[59 145]
[64 144]
[65 143]
[66 142]
[68 140]
[69 131]
[70 130]
[71 129]
[74 128]
[75 127]
[76 126]
[77 125]
[79 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
