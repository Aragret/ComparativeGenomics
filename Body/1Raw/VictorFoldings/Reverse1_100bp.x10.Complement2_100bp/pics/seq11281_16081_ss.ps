%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[94.17437744 559.38635254]
[79.16754150 558.71563721]
[64.37665558 556.09173584]
[50.05480576 551.55969238]
[36.44706345 545.19696045]
[23.78627014 537.11242676]
[12.28907204 527.44445801]
[2.15219951 516.35852051]
[-6.45089197 504.04421997]
[-13.37299156 490.71231079]
[-18.49565315 476.59094238]
[-21.73122215 461.92172241]
[-23.02433395 446.95565796]
[-22.35285950 431.94885254]
[-19.72829247 417.15808105]
[-15.19553757 402.83645630]
[-8.83216000 389.22900391]
[-0.74704438 376.56860352]
[8.92146206 365.07186890]
[20.00791931 354.93551636]
[32.32262421 346.33300781]
[45.65485382 339.41156006]
[59.77647400 334.28958130]
[74.44585419 331.05468750]
[89.41197205 329.76229858]
[90.08175659 314.77725220]
[90.75154114 299.79220581]
[91.42132568 284.80718994]
[91.64465332 269.80883789]
[91.42132568 254.81050110]
[83.49539185 242.19984436]
[91.02637482 228.28599548]
[90.80304718 213.28765869]
[90.57971954 198.28932190]
[90.35639191 183.29098511]
[90.13306427 168.29264832]
[89.90973663 153.29431152]
[77.74845123 162.07516479]
[63.26055527 158.18917847]
[57.12598419 144.50096130]
[63.86691284 131.10096741]
[78.51418304 127.86716461]
[90.26963806 137.18191528]
[91.16246033 122.20850372]
[92.05527496 107.23509979]
[90.27280426 92.34138489]
[85.87181091 78.00153351]
[74.42606354 67.07883453]
[78.08866119 52.64157104]
[73.68766022 38.30172348]
[69.28666687 23.96187592]
[64.88566589 9.62202835]
[60.48466873 -4.71781921]
[57.87183380 10.05286407]
[51.25510788 23.51462173]
[41.15631104 34.60580444]
[28.37187767 42.45171356]
[13.91004276 46.43358612]
[-1.08867443 46.23740005]
[-15.44141197 41.87862396]
[-28.01625252 33.70101166]
[-37.82149506 22.34947968]
[-44.08385086 8.71926022]
[-46.30944824 -6.11471176]
[-44.32276917 -20.98256683]
[-38.28049088 -34.71176147]
[-28.65912819 -46.21956253]
[-16.21746635 -54.59840393]
[-1.93670523 -59.18750763]
[13.05691528 -59.62495041]
[27.58093452 -55.87623596]
[40.48992920 -48.23700333]
[50.76583862 -37.30971527]
[57.59939957 -23.95286179]
[57.59939957 -38.95286179]
[57.59939957 -53.95286179]
[57.59939957 -68.95285797]
[57.59939957 -83.95285797]
[57.59939957 -98.95285797]
[50.17642975 -85.91831207]
[38.59225845 -76.38903809]
[24.37097931 -71.61879730]
[9.38364887 -72.23517609]
[-4.39789295 -78.15709686]
[-15.16044617 -88.60542297]
[-21.48801422 -102.20549011]
[-22.54809380 -117.16798401]
[-18.20121574 -131.52432251]
[-9.01928520 -143.38569641]
[3.78965688 -151.19152832]
[18.54037285 -153.91482544]
[33.29215240 -151.19729614]
[46.10414886 -143.39648438]
[55.29071808 -131.53869629]
[59.64347839 -117.18169403]
[62.96574020 -131.80915833]
[66.28800201 -146.43661499]
[69.61026001 -161.06407166]
[72.93251801 -175.69152832]
[59.30402374 -182.10076904]
[47.37223053 -191.29023743]
[37.69520569 -202.83013916]
[30.72556496 -216.18072510]
[26.78928947 -230.71757507]
[26.07048416 -245.76075745]
[28.60276985 -260.60668945]
[34.26770782 -274.56097412]
[42.80033875 -286.97097778]
[53.80157471 -297.25625610]
[66.75686646 -304.93576050]
[81.06027985 -309.65023804]
[96.04280853 -311.17926025]
[111.00369263 -309.45129395]
[125.24319458 -304.54714966]
[138.09529114 -296.69616699]
[148.95889282 -286.26562500]
[157.32585144 -273.74331665]
[162.80487061 -259.71499634]
[165.13964844 -244.83671570]
[164.22100830 -229.80441284]
[160.09190369 -215.32115173]
[152.94548035 -202.06436157]
[143.11596680 -190.65406799]
[131.06311035 -181.62396240]
[117.35065460 -175.39640808]
[102.61994934 -172.26264954]
[87.55997467 -172.36927795]
[84.23771667 -157.74182129]
[80.91545868 -143.11434937]
[77.59320068 -128.48689270]
[74.27094269 -113.85943604]
[72.59939575 -98.95285797]
[72.59939575 -83.95285797]
[72.59939575 -68.95285797]
[72.59939575 -53.95286179]
[72.59939575 -38.95286179]
[72.59939575 -23.95286179]
[74.82451630 -9.11881733]
[79.22551727 5.22102976]
[83.62651062 19.56087685]
[88.02751160 33.90072250]
[92.42850494 48.24057007]
[103.55947113 58.13759232]
[100.21165466 73.60054016]
[104.61265564 87.94038391]
[107.03133392 73.13666534]
[112.87715149 59.32267380]
[121.81949615 47.27965164]
[133.35264587 37.68869019]
[146.82432556 31.09220695]
[161.47267151 27.86326218]
[176.46923828 28.18447113]
[190.96588135 32.03766632]
[204.14277649 39.20493317]
[215.25466919 49.28092575]
[223.67315674 61.69579697]
[228.92213440 75.74742889]
[230.70472717 90.64112854]
[228.92012024 105.53459167]
[223.66926575 119.58551788]
[215.24909973 131.99925232]
[204.13584900 142.07374573]
[190.95799255 149.23924255]
[176.46083069 153.09048462]
[161.46423340 153.40968323]
[146.81631470 150.17877197]
[133.34552002 143.58047485]
[121.81365967 133.98796082]
[112.87293243 121.94372559]
[107.02867889 108.12791443]
[106.13586426 123.10131836]
[105.24304962 138.07472229]
[104.90807343 153.07098389]
[105.13140106 168.06932068]
[105.35472870 183.06765747]
[105.57805634 198.06599426]
[105.80138397 213.06433105]
[106.02471161 228.06266785]
[113.96661377 241.74612427]
[106.41966248 254.58717346]
[106.64299011 269.58551025]
[109.00110626 273.23150635]
[109.97809601 277.05380249]
[109.68813324 280.59658813]
[108.38168335 283.48791504]
[106.40636444 285.47695923]
[105.73657990 300.46200562]
[105.06679535 315.44705200]
[104.39701080 330.43206787]
[119.18814850 333.05453491]
[133.51042175 337.58523560]
[147.11877441 343.94668579]
[159.78033447 352.02999878]
[171.27845764 361.69686890]
[181.41638184 372.78186035]
[190.02064514 385.09533691]
[196.94401550 398.42657471]
[202.06802368 412.54748535]
[205.30499268 427.21640015]
[206.59951782 442.18231201]
[205.92947388 457.18917847]
[203.30632019 471.98019409]
[198.77493286 486.30227661]
[192.41284180 499.91030884]
[184.32893372 512.57147217]
[174.66152954 524.06915283]
[163.57603455 534.20654297]
[151.26214600 542.81024170]
[137.93057251 549.73297119]
[123.80944061 554.85626221]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 189]
[26 188]
[27 187]
[28 186]
[29 181]
[30 180]
[32 178]
[33 177]
[34 176]
[35 175]
[36 174]
[37 173]
[43 172]
[44 171]
[45 170]
[46 145]
[47 144]
[49 142]
[50 141]
[51 140]
[52 139]
[53 138]
[74 137]
[75 136]
[76 135]
[77 134]
[78 133]
[79 132]
[95 131]
[96 130]
[97 129]
[98 128]
[99 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
