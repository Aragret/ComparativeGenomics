%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[42.67512894 817.00036621]
[27.68123817 817.51177979]
[12.67960930 817.34020996]
[-2.29866362 816.48602295]
[-17.22253609 814.95098877]
[-32.06107712 812.73828125]
[-46.78352737 809.85253906]
[-61.35937881 806.29962158]
[-75.75841522 802.08703613]
[-89.95079041 797.22344971]
[-103.90709686 791.71893311]
[-117.59840393 785.58483887]
[-130.99633789 778.83404541]
[-144.07312012 771.48040771]
[-156.80165100 763.53918457]
[-169.15554810 755.02685547]
[-181.10920715 745.96112061]
[-192.63786316 736.36065674]
[-203.71759033 726.24542236]
[-214.32545471 715.63641357]
[-224.43946838 704.55554199]
[-234.03865051 693.02587891]
[-243.10311890 681.07122803]
[-251.61407471 668.71636963]
[-259.55389404 655.98699951]
[-266.90609741 642.90936279]
[-273.65548706 629.51074219]
[-279.78802490 615.81872559]
[-285.29101562 601.86181641]
[-290.15307617 587.66894531]
[-294.36410522 573.26940918]
[-297.91537476 558.69317627]
[-300.79953003 543.97039795]
[-303.01062012 529.13165283]
[-304.54400635 514.20758057]
[-305.39657593 499.22924805]
[-305.56649780 484.22760010]
[-305.05346680 469.23376465]
[-303.85852051 454.27880859]
[-301.98413086 439.39373779]
[-299.43420410 424.60943604]
[-296.21401978 409.95648193]
[-292.33023071 395.46530151]
[-287.79092407 381.16589355]
[-282.60549927 367.08792114]
[-276.78466797 353.26052856]
[-270.34054565 339.71240234]
[-263.28643799 326.47164917]
[-255.63700867 313.56567383]
[-247.40809631 301.02120972]
[-238.61676025 288.86428833]
[-229.28120422 277.12011719]
[-219.42079163 265.81301880]
[-209.05595398 254.96641541]
[-198.20819092 244.60281372]
[-186.89997864 234.74369812]
[-175.15473938 225.40946960]
[-162.99682617 216.61950684]
[-150.45144653 208.39201355]
[-137.54458618 200.74403381]
[-124.30301666 193.69145203]
[-110.75417328 187.24884033]
[-96.92613220 181.42959595]
[-82.84756470 176.24575806]
[-68.54764557 171.70806885]
[-54.05601883 167.82592773]
[-39.40271378 164.60740662]
[-24.61810112 162.05915833]
[-9.73283005 160.18646240]
[5.22224998 158.99320984]
[20.21614265 158.48187256]
[35.21776962 158.65350342]
[50.19604111 159.50775146]
[65.11990356 161.04283142]
[79.95843506 163.25559998]
[82.84371185 148.53570557]
[85.72898102 133.81581116]
[80.58427429 119.83792877]
[90.83157349 107.78373718]
[93.49736786 93.02252197]
[95.94309998 78.22325134]
[98.38882446 63.42398071]
[100.83455658 48.62471008]
[103.28028107 33.82543945]
[105.72600555 19.02616692]
[108.17173767 4.22689581]
[109.17599487 -10.73944855]
[108.72939301 -25.73279762]
[108.28278351 -40.72614670]
[107.83618164 -55.71949768]
[97.79741669 -71.15662384]
[106.71203613 -86.27272797]
[106.04225159 -101.25776672]
[105.37246704 -116.24280548]
[104.70268250 -131.22784424]
[104.03289795 -146.21287537]
[103.36311340 -161.19792175]
[89.17272186 -166.72538757]
[78.46199799 -177.55128479]
[73.08662415 -191.79998779]
[73.97792816 -207.00279236]
[80.98148346 -220.52574158]
[92.88387299 -230.02589417]
[107.62294769 -233.85729980]
[122.64506531 -231.35612488]
[135.34756470 -222.95573425]
[143.52964783 -210.11154175]
[145.77371216 -195.04887390]
[141.69099426 -180.37742615]
[131.98881531 -168.63912964]
[118.34815216 -161.86770630]
[119.01793671 -146.88265991]
[119.68772125 -131.89762878]
[120.35750580 -116.91259003]
[121.02729034 -101.92755127]
[121.69707489 -86.94251251]
[130.40943909 -78.55076599]
[131.09007263 -66.07196808]
[122.82952881 -56.16610336]
[123.27613068 -41.17275238]
[123.72274017 -26.17940521]
[124.16934967 -11.18605423]
[131.63768005 -24.19466782]
[143.70318604 -33.10664749]
[158.33262634 -36.42016983]
[173.06068420 -33.57685089]
[185.40541077 -25.05583572]
[193.28651428 -12.29306698]
[195.37588501 2.56070471]
[191.32142639 17.00235748]
[181.80638123 28.59822083]
[168.43421936 35.39418793]
[153.45835876 36.24501419]
[139.40252686 31.00732803]
[128.63536072 20.56376648]
[122.97100830 6.67262316]
[120.52527618 21.47189331]
[118.07955170 36.27116394]
[115.63382721 51.07043457]
[113.18809509 65.86970520]
[110.74237061 80.66897583]
[108.29663849 95.46824646]
[110.30662537 100.31324005]
[109.45897675 105.93949890]
[105.55146790 110.66901398]
[110.48979950 125.69976044]
[100.44887543 136.70108032]
[97.56359863 151.42097473]
[94.67832947 166.14086914]
[109.25418854 169.69367981]
[123.65324402 173.90623474]
[137.84564209 178.76977539]
[151.80197144 184.27424622]
[165.49330139 190.40823364]
[178.89125061 197.15901184]
[191.96806335 204.51260376]
[204.69662476 212.45376587]
[217.05056763 220.96603394]
[229.00425720 230.03175354]
[240.53294373 239.63215637]
[251.61273193 249.74732971]
[262.22064209 260.35632324]
[272.33468628 271.43713379]
[281.93392944 282.96676636]
[290.99844360 294.92138672]
[299.50942993 307.27618408]
[307.44931030 320.00555420]
[314.80157471 333.08312988]
[321.55099487 346.48175049]
[327.68359375 360.17370605]
[333.18664551 374.13058472]
[338.04876709 388.32348633]
[342.25982666 402.72296143]
[345.81118774 417.29919434]
[348.69540405 432.02194214]
[350.90652466 446.86071777]
[352.44000244 461.78475952]
[353.29260254 476.76312256]
[353.46258545 491.76477051]
[352.94961548 506.75860596]
[351.75469971 521.71356201]
[349.88040161 536.59863281]
[347.33053589 551.38293457]
[344.11041260 566.03588867]
[340.22668457 580.52709961]
[335.68743896 594.82653809]
[330.50204468 608.90454102]
[324.68127441 622.73193359]
[318.23721313 636.28009033]
[311.18316650 649.52087402]
[303.53378296 662.42687988]
[295.30490112 674.97137451]
[286.51361084 687.12829590]
[277.17810059 698.87255859]
[267.31774902 710.17968750]
[256.95297241 721.02630615]
[246.10522461 731.38995361]
[234.79704285 741.24914551]
[223.05184937 750.58337402]
[210.89396667 759.37341309]
[198.34861755 767.60095215]
[185.44180298 775.24896240]
[172.20025635 782.30163574]
[158.65144348 788.74426270]
[144.82342529 794.56359863]
[130.74487305 799.74749756]
[116.44497681 804.28521729]
[101.95336151 808.16741943]
[87.30007172 811.38598633]
[72.51546478 813.93432617]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 149]
[76 148]
[77 147]
[79 145]
[80 142]
[81 141]
[82 140]
[83 139]
[84 138]
[85 137]
[86 136]
[87 122]
[88 121]
[89 120]
[90 119]
[92 116]
[93 115]
[94 114]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
