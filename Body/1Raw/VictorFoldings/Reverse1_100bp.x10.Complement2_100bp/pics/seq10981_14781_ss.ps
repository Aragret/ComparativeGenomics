%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[66.53332520 750.38690186]
[66.14447784 765.68750000]
[58.67951965 779.04913330]
[45.85383606 787.40136719]
[30.61468315 788.82501221]
[16.46389961 782.99285889]
[6.65323544 771.24511719]
[3.43710852 756.28131104]
[7.55456161 741.54003906]
[18.05943298 730.40875244]
[32.53778076 725.44525146]
[34.76290131 710.61120605]
[36.98801804 695.77716064]
[39.21313477 680.94311523]
[41.43825150 666.10906982]
[43.66336823 651.27508545]
[37.89965057 637.54083252]
[47.59848022 625.04107666]
[49.82359695 610.20703125]
[52.04871368 595.37304688]
[37.88738632 590.48455811]
[24.86202621 583.07513428]
[13.41696835 573.39575195]
[3.94293857 561.77502441]
[-3.23626995 548.60772705]
[-7.87486839 534.34167480]
[-9.81348705 519.46215820]
[-8.98464775 504.47579956]
[-5.41511726 489.89309692]
[0.77496302 476.21099854]
[9.37611294 463.89608765]
[20.09660339 453.36862183]
[32.57235718 444.98815918]
[46.37930679 439.04135132]
[61.04780579 435.73205566]
[76.07861328 435.17443848]
[78.30373383 420.34039307]
[80.52884674 405.50634766]
[78.41235352 398.42523193]
[82.89910889 390.46868896]
[85.34483337 375.66940308]
[86.90535736 360.75079346]
[87.57514191 345.76577759]
[88.24492645 330.78073120]
[88.91471863 315.79568481]
[89.58450317 300.81063843]
[73.87948608 291.77056885]
[64.89549255 275.93545532]
[65.19490814 257.64666748]
[74.78125763 241.96887207]
[91.07427979 233.28758240]
[91.07427979 218.28758240]
[81.49358368 203.58462524]
[90.83302307 187.71463013]
[90.60969543 172.71629333]
[90.38636780 157.71795654]
[88.47115326 155.67098999]
[87.25136566 152.74205017]
[87.06700897 149.19219971]
[88.15737152 145.40068054]
[90.62299347 141.82650757]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[85.93902588 73.34188080]
[94.23690796 60.97279358]
[94.90669250 45.98775482]
[95.57647705 31.00271606]
[96.24626160 16.01767731]
[93.83921814 11.38591671]
[93.48495483 6.75690031]
[94.83866882 2.91209841]
[97.29537964 0.38288483]
[98.63361359 -14.55730057]
[99.97184753 -29.49748611]
[101.31008148 -44.43767166]
[94.83482361 -58.87310028]
[103.67674255 -70.85932922]
[96.02044678 -81.23931122]
[97.44263458 -93.65547180]
[106.63903046 -101.51377106]
[108.19955444 -116.43237305]
[109.76007843 -131.35098267]
[107.63298798 -136.11779785]
[107.55487061 -140.75968933]
[109.13504028 -144.51710510]
[111.73793030 -146.89561462]
[106.13336945 -161.69085693]
[115.67304230 -173.12956238]
[117.89816284 -187.96360779]
[120.12327576 -202.79765320]
[122.34839630 -217.63169861]
[110.51458740 -232.42611694]
[113.20637512 -250.85618591]
[128.25221252 -261.28396606]
[130.03468323 -276.17767334]
[131.81715393 -291.07138062]
[117.80614471 -296.67086792]
[105.72239685 -305.70666504]
[96.38977814 -317.56265259]
[90.44461823 -331.43051147]
[88.29225922 -346.36468506]
[90.07946014 -361.34695435]
[95.68435669 -375.35580444]
[104.72480011 -387.43606567]
[116.58440399 -396.76409912]
[130.45455933 -402.70391846]
[145.38957214 -404.85049438]
[160.37113953 -403.05752563]
[174.37780762 -397.44720459]
[186.45458984 -388.40209961]
[195.77804565 -376.53890991]
[201.71249390 -362.66644287]
[203.85331726 -347.73062134]
[202.05455017 -332.74972534]
[196.43884277 -318.74523926]
[187.38906860 -306.67193604]
[175.52226257 -297.35308838]
[161.64753723 -291.42398071]
[146.71086121 -289.28890991]
[144.92840576 -274.39520264]
[143.14593506 -259.50149536]
[151.97384644 -252.27416992]
[156.26107788 -241.57205200]
[154.83512878 -230.01087952]
[147.93547058 -220.47695923]
[137.18243408 -215.40657043]
[134.95732117 -200.57252502]
[132.73220825 -185.73847961]
[130.50708008 -170.90444946]
[136.27079773 -157.17022705]
[126.57197571 -144.67048645]
[124.67868042 -129.79045105]
[123.11815643 -114.87184906]
[121.55764008 -99.95324707]
[129.55671692 -84.33333588]
[118.61692810 -69.52109528]
[125.18790436 -56.15428925]
[116.25026703 -43.09943771]
[114.91203308 -28.15925026]
[113.57379913 -13.21906567]
[112.23556519 1.72111905]
[111.23130035 16.68746376]
[110.56151581 31.67250252]
[109.89173126 46.65753937]
[109.22194672 61.64257812]
[116.38322449 74.70264435]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[105.60803223 142.49629211]
[105.38470459 157.49462891]
[105.60803223 172.49296570]
[105.83135986 187.49130249]
[114.52599335 197.01843262]
[114.40323639 209.51518250]
[106.07427979 218.28758240]
[106.07427979 233.28758240]
[117.16674805 237.91416931]
[126.02394867 245.98681641]
[131.62413025 256.54272461]
[133.33195496 268.33453369]
[130.97048950 279.97772217]
[124.83919525 290.11309814]
[115.67620850 297.56561279]
[104.56954193 301.48043823]
[103.89975739 316.46548462]
[103.22996521 331.45050049]
[102.56018066 346.43554688]
[101.89039612 361.42059326]
[112.25975037 350.58193970]
[126.99854279 347.79483032]
[140.60957336 354.09878540]
[148.01625061 367.14260864]
[146.45608521 382.06124878]
[136.51097107 393.29043579]
[121.89019012 396.64193726]
[108.04692841 390.86578369]
[100.14410400 378.11514282]
[97.69837952 392.91439819]
[95.36289215 407.73147583]
[93.13777924 422.56552124]
[90.91265869 437.39956665]
[105.11835480 442.34268188]
[118.17034149 449.81005859]
[129.62484741 459.54611206]
[139.09272766 471.21810913]
[146.25263977 484.42767334]
[150.86206055 498.72415161]
[152.76539612 513.62030029]
[151.89926147 528.60852051]
[148.29463196 543.17846680]
[142.07568359 556.83435059]
[133.45556641 569.11163330]
[122.72903442 579.59301758]
[110.26243591 587.92266846]
[96.48115540 593.81805420]
[81.85511780 597.07977295]
[66.88275909 597.59814453]
[64.65763855 612.43218994]
[62.43252182 627.26623535]
[68.03708649 642.06146240]
[58.49741364 653.50018311]
[56.27229691 668.33422852]
[54.04717636 683.16827393]
[51.82205963 698.00231934]
[49.59694290 712.83636475]
[47.37182617 727.67041016]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 210]
[12 209]
[13 208]
[14 207]
[15 206]
[16 205]
[18 203]
[19 202]
[20 201]
[36 185]
[37 184]
[38 183]
[40 182]
[41 181]
[42 172]
[43 171]
[44 170]
[45 169]
[46 168]
[51 160]
[52 159]
[54 156]
[55 155]
[56 154]
[61 153]
[62 152]
[63 151]
[65 149]
[67 147]
[68 146]
[69 145]
[70 144]
[74 143]
[75 142]
[76 141]
[77 140]
[79 138]
[82 136]
[83 135]
[84 134]
[88 133]
[90 131]
[91 130]
[92 129]
[93 128]
[96 123]
[97 122]
[98 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
