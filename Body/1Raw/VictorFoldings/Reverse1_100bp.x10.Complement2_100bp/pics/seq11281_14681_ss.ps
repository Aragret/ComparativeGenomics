%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[20.55098534 641.54565430]
[6.86660337 635.32598877]
[-5.67626333 627.04211426]
[-16.76873589 616.89794922]
[-26.13765144 605.14343262]
[-33.55229187 592.06787109]
[-38.83006668 577.99334717]
[-41.84100342 563.26647949]
[-42.51095581 548.24993896]
[-40.82342911 533.31341553]
[-36.81997299 518.82482910]
[-30.59918404 505.14099121]
[-22.31424904 492.59878540]
[-12.16919613 481.50717163]
[-0.41385284 472.13922119]
[12.66229343 464.72564697]
[26.73723030 459.44903564]
[41.46435165 456.43933105]
[40.79456329 441.45428467]
[40.01324081 426.47463989]
[39.12042618 411.50125122]
[38.22761154 396.52783203]
[37.33479691 381.55441284]
[36.44197845 366.58102417]
[27.96085548 354.33685303]
[34.86303711 340.10061646]
[24.97237778 351.37780762]
[10.16650677 353.78323364]
[-2.78553057 346.21722412]
[-7.96223783 332.13879395]
[-2.99689341 317.98446655]
[9.84041405 310.22537231]
[24.68063927 312.40887451]
[34.73973846 323.53842163]
[35.40952301 308.55337524]
[36.07930756 293.56835938]
[36.74909210 278.58331299]
[27.36775780 290.28759766]
[13.42732143 295.82513428]
[-1.42822158 293.74838257]
[-13.31566715 284.60025024]
[-19.12766647 270.77200317]
[-17.34497452 255.87829590]
[-8.43358517 243.81234741]
[5.27708721 237.72814941]
[20.20310593 239.21609497]
[32.44284439 247.88725281]
[38.79670715 261.47409058]
[41.68198013 246.75421143]
[44.56725311 232.03431702]
[47.45252609 217.31442261]
[50.33779526 202.59454346]
[40.37541962 213.80841064]
[26.91374397 220.42530823]
[11.94972420 221.46363831]
[-2.29681420 216.76936340]
[-13.71248150 207.03886414]
[-20.60383224 193.71560669]
[-21.94857407 178.77600098]
[-17.54722404 164.43626404]
[-8.05269623 152.82360840]
[5.12655354 145.66069031]
[20.03546143 144.01010132]
[34.46237946 148.11668396]
[46.26716232 157.37124634]
[53.69863510 170.40095520]
[55.65451050 185.27099609]
[61.52347183 171.46682739]
[67.39243317 157.66264343]
[73.26139069 143.85847473]
[79.13035583 130.05429077]
[84.99931335 116.25011444]
[90.86827087 102.44593811]
[90.05836487 97.26347351]
[92.20975494 91.99613190]
[97.12297058 88.32227325]
[103.40032959 74.69895935]
[109.67768860 61.07564163]
[115.95504761 47.45232773]
[122.13082123 33.78265762]
[128.20465088 20.06738853]
[131.30876160 5.39208698]
[121.73407745 -10.33708668]
[131.09480286 -25.18106651]
[130.87147522 -40.17940521]
[130.64814758 -55.17774200]
[127.39131927 -63.71184158]
[130.53482056 -70.40065002]
[130.53482056 -85.40065002]
[122.79751587 -99.20082855]
[130.53482056 -111.92810059]
[130.53482056 -126.92810059]
[130.53482056 -141.92810059]
[130.53482056 -156.92810059]
[118.14984131 -166.08880615]
[113.58708954 -180.61582947]
[118.39640045 -194.87538147]
[130.53482056 -203.46588135]
[130.53482056 -218.46588135]
[116.76094818 -225.04185486]
[107.21102142 -236.94822693]
[103.78118134 -251.82098389]
[107.15242767 -266.70712280]
[116.65539551 -278.65100098]
[130.40325928 -285.28115845]
[145.66638184 -285.28115845]
[159.41424561 -278.65100098]
[168.91720581 -266.70712280]
[172.28845215 -251.82098389]
[168.85861206 -236.94822693]
[159.30868530 -225.04185486]
[145.53482056 -218.46588135]
[145.53482056 -203.46588135]
[157.67323303 -194.87538147]
[162.48254395 -180.61582947]
[157.91979980 -166.08880615]
[145.53482056 -156.92810059]
[145.53482056 -141.92810059]
[145.53482056 -126.92810059]
[145.53482056 -111.92810059]
[153.27212524 -99.20082855]
[145.53482056 -85.40065002]
[145.53482056 -70.40065002]
[145.64648438 -55.40106964]
[145.86981201 -40.40273285]
[146.09313965 -25.40439415]
[154.55178833 -16.75696945]
[154.86058044 -4.26343536]
[146.30876160 5.39208698]
[152.94148254 -8.06180000]
[162.19265747 -19.86924362]
[173.66893005 -29.52818489]
[186.88232422 -36.62792206]
[201.27099609 -40.86656952]
[216.22312927 -42.06389618]
[231.10296631 -40.16899490]
[245.27778625 -35.26243591]
[258.14489746 -27.55284691]
[269.15713501 -17.36804581]
[277.84631348 -5.14109516]
[283.84292603 8.60810947]
[286.89199829 23.29494476]
[286.86389160 38.29491806]
[283.75982666 52.97022247]
[277.71173096 66.69686127]
[268.97680664 78.89116669]
[257.92645264 89.03462982]
[245.03054810 96.69594574]
[230.83743286 101.54935455]
[215.95060730 103.38848877]
[201.00306702 102.13513947]
[186.63037109 97.84260559]
[173.44367981 90.69340515]
[162.00367737 80.99153137]
[152.79681396 69.14949799]
[146.21455383 55.67085266]
[142.53680420 41.12870789]
[141.91992188 26.14122391]
[135.84608459 39.85649109]
[136.01190186 47.24528503]
[129.57836914 53.72968674]
[123.30101013 67.35300446]
[117.02364349 80.97631836]
[110.74628448 94.59963226]
[104.67244720 108.31490326]
[98.80348969 122.11907959]
[92.93453217 135.92324829]
[87.06556702 149.72743225]
[81.19660950 163.53161621]
[75.32764435 177.33578491]
[69.45868683 191.13996887]
[65.05768585 205.47981262]
[62.17241669 220.19970703]
[59.28714371 234.91958618]
[56.40187073 249.63948059]
[53.51659775 264.35937500]
[51.73413086 279.25308228]
[51.06434631 294.23812866]
[50.39456177 309.22317505]
[49.72477722 324.20822144]
[49.83644485 339.20779419]
[58.38142776 352.52297974]
[51.41538620 365.68820190]
[52.30820084 380.66162109]
[53.20101547 395.63500977]
[54.09383392 410.60842896]
[54.98664856 425.58181763]
[58.62129593 433.96200562]
[55.77960205 440.78448486]
[56.44939041 455.76953125]
[71.38629913 457.45336914]
[85.87586212 461.45324707]
[99.56127167 467.67062378]
[112.10550690 475.95245361]
[123.19965363 486.09478760]
[132.57051086 497.84780884]
[139.98730469 510.92211914]
[145.26739502 524.99572754]
[148.28076172 539.72210693]
[148.95320129 554.73858643]
[147.26814270 569.67535400]
[143.26707458 584.16461182]
[137.04853821 597.84948730]
[128.76567078 610.39300537]
[118.62245178 621.48632812]
[106.86865997 630.85620117]
[93.79373169 638.27197266]
[79.71966553 643.55090332]
[64.99304199 646.56304932]
[49.97652054 647.23425293]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 190]
[19 189]
[20 187]
[21 186]
[22 185]
[23 184]
[24 183]
[26 181]
[34 180]
[35 179]
[36 178]
[37 177]
[48 176]
[49 175]
[50 174]
[51 173]
[52 172]
[67 171]
[68 170]
[69 169]
[70 168]
[71 167]
[72 166]
[73 165]
[76 164]
[77 163]
[78 162]
[79 161]
[80 159]
[81 158]
[82 129]
[84 126]
[85 125]
[86 124]
[88 123]
[89 122]
[91 120]
[92 119]
[93 118]
[94 117]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
