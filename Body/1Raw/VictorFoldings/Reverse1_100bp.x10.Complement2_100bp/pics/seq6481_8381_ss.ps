%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGG\
) } def
/len { sequence length } bind def

/coor [
[107.37162781 522.05603027]
[105.36738586 537.28356934]
[96.00515747 549.45916748]
[81.80332947 555.30755615]
[66.58213043 553.25561523]
[54.43597412 543.85522461]
[48.63212967 529.63513184]
[50.73179245 514.42047119]
[60.17016602 502.30383301]
[74.40837860 496.54458618]
[76.41239166 481.67904663]
[78.41640472 466.81353760]
[80.42041779 451.94799805]
[82.31371307 437.06796265]
[84.09617615 422.17425537]
[85.87863922 407.28051758]
[83.99851227 404.29766846]
[83.46974182 400.25595093]
[84.77426910 395.80044556]
[88.08771515 391.76705933]
[90.53343964 376.96780396]
[92.97916412 362.16851807]
[87.42057037 348.35000610]
[97.30442810 335.99606323]
[99.75015259 321.19680786]
[102.19588470 306.39752197]
[104.64160919 291.59826660]
[107.08733368 276.79898071]
[109.53306580 261.99972534]
[111.97879028 247.20043945]
[112.09046173 232.20086670]
[109.86534119 217.36682129]
[107.64022064 202.53277588]
[105.41510773 187.69873047]
[101.31416321 181.55023193]
[103.26899719 172.62742615]
[101.26498413 157.76190186]
[99.26097107 142.89637756]
[97.03585052 128.06233215]
[94.59012604 113.26305389]
[85.86773682 102.33549500]
[90.61060333 89.18267059]
[88.16487122 74.38339996]
[76.15370178 60.42584991]
[82.96887207 44.25426102]
[80.08359528 29.53437042]
[76.97948456 14.85906696]
[73.87538147 0.18376480]
[63.44974518 -11.71652031]
[68.38577271 -25.76945305]
[65.28166199 -40.44475555]
[54.85602951 -52.34503937]
[59.79205322 -66.39797211]
[56.68794250 -81.07327271]
[53.58383179 -95.74858093]
[50.47972488 -110.42388153]
[47.37561417 -125.09918213]
[44.27150345 -139.77449036]
[39.87050629 -154.11433411]
[34.20771790 -168.00436401]
[28.54493141 -181.89437866]
[16.98078346 -187.60693359]
[12.55018997 -199.29255676]
[17.11833954 -210.49337769]
[11.66298199 -224.46618652]
[6.20762491 -238.43898010]
[0.75226802 -252.41177368]
[-13.78471851 -248.64184570]
[-28.66555786 -246.61775208]
[-43.68134689 -246.36790466]
[-58.62128830 -247.89582825]
[-73.27565002 -251.18003845]
[-87.43869781 -256.17446899]
[-100.91162109 -262.80899048]
[-113.50526428 -270.99044800]
[-125.04284668 -280.60403442]
[-135.36239624 -291.51470947]
[-144.31903076 -303.56939697]
[-151.78701782 -316.59878540]
[-157.66152954 -330.42004395]
[-161.86007690 -344.83905029]
[-164.32374573 -359.65347290]
[-165.01792908 -374.65530396]
[-163.93287659 -389.63391113]
[-161.08384705 -404.37905884]
[-156.51081848 -418.68374634]
[-150.27798462 -432.34710693]
[-142.47285461 -445.17739868]
[-133.20500183 -456.99447632]
[-122.60453033 -467.63244629]
[-110.82025146 -476.94195557]
[-98.01759338 -484.79232788]
[-84.37628937 -491.07336426]
[-70.08784485 -495.69686890]
[-55.35285187 -498.59793091]
[-40.37815475 -499.73583984]
[-25.37398148 -499.09463501]
[-10.55096722 -496.68328857]
[3.88279676 -492.53564453]
[17.72468376 -486.70996094]
[30.78037262 -479.28802490]
[42.86658478 -470.37399292]
[53.81364822 -460.09304810]
[63.46788406 -448.58947754]
[71.69375610 -436.02478027]
[78.37579346 -422.57537842]
[83.42018890 -408.43002319]
[86.75612640 -393.78735352]
[88.33676910 -378.85290527]
[88.13993835 -363.83633423]
[86.16838837 -348.94842529]
[82.44979858 -334.39822388]
[77.03637695 -320.38998413]
[70.00411224 -307.12033081]
[61.45172882 -294.77557373]
[51.49929047 -283.52899170]
[40.28651428 -273.53851318]
[27.97080803 -264.94433594]
[14.72506618 -257.86712646]
[20.18042374 -243.89433289]
[25.63578033 -229.92153931]
[31.09113693 -215.94874573]
[45.36307144 -205.73704529]
[42.43495941 -187.55717468]
[48.09774399 -173.66714478]
[53.76053238 -159.77711487]
[56.52895355 -174.51943970]
[65.34979248 -186.65173340]
[78.51988983 -193.83146667]
[93.49630737 -194.67233276]
[107.38732147 -189.01197815]
[117.51081085 -177.94332886]
[121.91207123 -163.60356140]
[119.74130249 -148.76147461]
[111.41764069 -136.28282166]
[98.54825592 -128.57705688]
[83.61801910 -127.13201904]
[69.50973511 -132.22674561]
[58.94680405 -142.87860107]
[62.05091476 -128.20329285]
[65.15502930 -113.52799225]
[68.25913239 -98.85269165]
[71.36324310 -84.17738342]
[74.46735382 -69.50208282]
[84.67095947 -58.65147400]
[79.95696259 -43.54886627]
[83.06107330 -28.87356377]
[93.26467896 -18.02295494]
[88.55068207 -2.92034531]
[91.65479279 11.75495720]
[94.75890350 26.43025970]
[98.20201874 29.73993492]
[99.60257721 35.24769974]
[97.73008728 41.58846664]
[107.48548889 48.74100113]
[109.82720947 61.01699829]
[102.96414948 71.93767548]
[105.40987396 86.73694611]
[114.13226318 97.66450500]
[109.38939667 110.81732941]
[111.83512878 125.61660004]
[115.72808838 130.96041870]
[116.25832367 136.61868286]
[114.12650299 140.89236450]
[116.13051605 155.75788879]
[118.13452911 170.62341309]
[120.24915314 185.47361755]
[122.47426605 200.30764771]
[124.69938660 215.14169312]
[126.92449951 229.97573853]
[131.63293457 215.73388672]
[139.96330261 203.25970459]
[151.31417847 193.45372009]
[164.86618042 187.02383423]
[179.64096069 184.43423462]
[194.57191467 185.87187195]
[208.58114624 191.23294067]
[220.65734863 200.13043213]
[229.92871094 211.92204285]
[235.72593689 225.75650024]
[237.63050842 240.63508606]
[235.50494385 255.48371887]
[229.50267029 269.23046875]
[220.05702209 280.88290405]
[207.84986877 289.59988403]
[193.76246643 294.75207520]
[178.81179810 295.96755981]
[164.07714844 293.15856934]
[150.62225342 286.52792358]
[139.41841125 276.55426025]
[131.27442932 263.95761108]
[126.77806091 249.64616394]
[124.33233643 264.44543457]
[121.88660431 279.24472046]
[119.44087982 294.04397583]
[116.99515533 308.84326172]
[114.54942322 323.64251709]
[112.10369873 338.44180298]
[117.48735809 353.31884766]
[107.77843475 364.61425781]
[105.33271027 379.41351318]
[102.88698578 394.21279907]
[100.77236176 409.06298828]
[98.98989105 423.95669556]
[97.20742798 438.85043335]
[99.29489899 447.74313354]
[95.28594971 453.95199585]
[93.28192902 468.81753540]
[91.27791595 483.68307495]
[89.27390289 498.54858398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 210]
[11 209]
[12 208]
[13 207]
[14 205]
[15 204]
[16 203]
[20 202]
[21 201]
[22 200]
[24 198]
[25 197]
[26 196]
[27 195]
[28 194]
[29 193]
[30 192]
[31 170]
[32 169]
[33 168]
[34 167]
[36 166]
[37 165]
[38 164]
[39 161]
[40 160]
[42 158]
[43 157]
[45 154]
[46 151]
[47 150]
[48 149]
[50 147]
[51 146]
[53 144]
[54 143]
[55 142]
[56 141]
[57 140]
[58 139]
[59 126]
[60 125]
[61 124]
[64 122]
[65 121]
[66 120]
[67 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
