%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[67.08934021 561.08038330]
[60.40858841 574.52459717]
[52.42240906 587.23675537]
[43.21017456 599.09057617]
[32.86344147 609.96826172]
[21.48504639 619.76165771]
[9.18807220 628.37347412]
[-3.90526271 635.71807861]
[-17.66482735 641.72247314]
[-31.95387268 646.32702637]
[-46.63037872 649.48596191]
[-61.54848480 651.16784668]
[-76.55992126 651.35601807]
[-91.51549530 650.04852295]
[-106.26656342 647.25842285]
[-120.66652679 643.01348877]
[-134.57226562 637.35583496]
[-147.84556580 630.34167480]
[-160.35450745 622.04077148]
[-171.97479248 612.53564453]
[-182.59091187 601.92071533]
[-192.09735107 590.30151367]
[-200.39962769 577.79345703]
[-207.41523743 564.52093506]
[-213.07444763 550.61584473]
[-217.32102966 536.21636963]
[-220.11274719 521.46563721]
[-221.42187500 506.51019287]
[-221.23539734 491.49871826]
[-219.55517578 476.58044434]
[-216.39790344 461.90356445]
[-211.79495239 447.61401367]
[-205.79206848 433.85379028]
[-198.44892883 420.75964355]
[-189.83850098 408.46170044]
[-180.04637146 397.08221436]
[-169.16984558 386.73425293]
[-157.31704712 377.52072144]
[-144.60575867 369.53311157]
[-131.16230774 362.85086060]
[-117.12033081 357.54037476]
[-102.61936188 353.65441895]
[-87.80353546 351.23162842]
[-72.82009888 350.29605103]
[-57.81797028 350.85705566]
[-42.94625092 352.90899658]
[-28.35273933 356.43148804]
[-14.18248463 361.38958740]
[-0.57631737 367.73391724]
[7.08428001 354.83761597]
[14.74487782 341.94128418]
[22.40547562 329.04495239]
[30.06607246 316.14862061]
[37.72666931 303.25228882]
[43.38945770 289.36227417]
[41.91314697 282.12057495]
[47.09186172 274.59600830]
[50.84815979 260.07397461]
[46.54455566 245.81463623]
[57.49116516 234.39175415]
[61.24746704 219.86968994]
[65.00376892 205.34762573]
[68.76006317 190.82557678]
[72.51636505 176.30351257]
[68.21276093 162.04418945]
[79.15937042 150.62130737]
[71.40257263 137.95767212]
[75.00512695 123.17672729]
[88.34050751 115.12654877]
[81.07765961 102.58871460]
[84.70613098 88.56086731]
[97.13743591 81.11714935]
[100.89373779 66.59509277]
[104.65003967 52.07303238]
[108.40633392 37.55097198]
[112.16263580 23.02891350]
[115.48489380 8.40145397]
[118.37017059 -6.31843758]
[121.25543976 -21.03832817]
[124.14071655 -35.75822067]
[126.36582947 -50.59226227]
[127.92635345 -65.51087189]
[129.48687744 -80.42947388]
[131.04739380 -95.34807587]
[132.27438354 -110.29781342]
[133.16719055 -125.27121735]
[134.06001282 -140.24462891]
[124.07215881 -145.87109375]
[116.93743896 -154.77818298]
[113.65671539 -165.65516663]
[114.66728210 -176.91960144]
[119.78501892 -186.94754028]
[128.23646545 -194.30766296]
[138.77546692 -197.96551514]
[140.33599854 -212.88410950]
[141.89651489 -227.80271912]
[143.45704651 -242.72132874]
[137.19743347 -257.25155640]
[146.21682739 -269.10482788]
[147.77734375 -284.02343750]
[134.03611755 -290.38403320]
[123.10643768 -300.86358643]
[116.17387390 -314.32531738]
[113.99042511 -329.30902100]
[116.79293060 -344.18936157]
[124.27740479 -357.35223389]
[135.63197327 -367.36984253]
[149.62498474 -373.15554810]
[164.73858643 -374.08172607]
[179.33335876 -370.04797363]
[191.82617188 -361.49179077]
[200.86190796 -349.34130859]
[205.46043396 -334.91452026]
[205.12292480 -319.77633667]
[199.88600159 -305.56881714]
[190.31773376 -293.83309937]
[177.45599365 -285.84219360]
[162.69595337 -282.46289062]
[161.13542175 -267.54431152]
[167.50666809 -254.08114624]
[158.37564087 -241.16079712]
[156.81512451 -226.24220276]
[155.25460815 -211.32359314]
[153.69407654 -196.40498352]
[168.28932190 -184.73143005]
[172.93692017 -166.47415161]
[165.58343506 -148.96598816]
[149.03341675 -139.35180664]
[148.14059448 -124.37840271]
[147.24778748 -109.40499878]
[149.30212402 -106.53933716]
[150.07052612 -102.53625488]
[149.03350830 -98.01100922]
[145.96600342 -93.78755188]
[144.40548706 -78.86894989]
[142.84495544 -63.95034409]
[141.28443909 -49.03174210]
[153.58856201 -57.61127853]
[168.37913513 -55.11345673]
[177.18342590 -42.96914291]
[174.95796204 -28.13515282]
[162.97756958 -19.10906792]
[148.10516357 -21.06143951]
[138.86061096 -32.87294769]
[135.97532654 -18.15305710]
[133.09005737 -3.43316483]
[130.20478821 11.28672695]
[131.65495300 13.68572140]
[132.24221802 16.80369186]
[131.68797302 20.31484795]
[129.83659363 23.79865646]
[126.68470001 26.78521538]
[122.92839813 41.30727386]
[119.17209625 55.82933426]
[115.41579437 70.35139465]
[111.65949249 84.87345123]
[118.92234039 97.41128540]
[115.29386902 111.43913269]
[102.86256409 118.88285065]
[110.62203217 132.38945007]
[106.60573578 147.06338501]
[93.68142700 154.37760925]
[97.71636200 169.67564392]
[87.03842926 180.05981445]
[83.28212738 194.58187866]
[79.52582550 209.10392761]
[75.76952362 223.62599182]
[72.01322174 238.14805603]
[76.04815674 253.44609070]
[65.37021637 263.83026123]
[61.61391830 278.35232544]
[57.96583176 292.90194702]
[67.75571442 281.53717041]
[80.31948853 273.34255981]
[94.66631317 268.96438599]
[109.66475677 268.74789429]
[124.13195801 272.71023560]
[136.92698669 280.53884888]
[147.04077148 291.61636353]
[153.67570496 305.06915283]
[156.30850220 319.83627319]
[154.73155212 334.75317383]
[149.06921387 348.64337158]
[139.76805115 360.41146851]
[127.56158447 369.12939453]
[113.41246033 374.10958862]
[98.43654633 374.95932007]
[83.81490326 371.61154175]
[70.70066071 364.33029175]
[60.12805176 353.68978882]
[52.93088150 340.52923584]
[49.67675018 325.88644409]
[50.62299728 310.91290283]
[42.96239853 323.80920410]
[35.30180359 336.70553589]
[27.64120483 349.60186768]
[19.98060608 362.49819946]
[12.32000923 375.39453125]
[24.40001488 384.30810547]
[35.53247070 394.38021851]
[45.60673904 405.51068115]
[54.52268600 417.58895874]
[62.19170761 430.49496460]
[68.53758240 444.10040283]
[73.49723053 458.27011108]
[77.02136993 472.86322021]
[79.07497406 487.73474121]
[79.63762665 502.73678589]
[78.70374298 517.72033691]
[76.28260040 532.53643799]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 198]
[50 197]
[51 196]
[52 195]
[53 194]
[54 193]
[55 172]
[57 171]
[58 170]
[60 168]
[61 167]
[62 166]
[63 165]
[64 164]
[66 162]
[69 159]
[72 156]
[73 155]
[74 154]
[75 153]
[76 152]
[77 147]
[78 146]
[79 145]
[80 144]
[81 137]
[82 136]
[83 135]
[84 134]
[85 130]
[86 129]
[87 128]
[94 124]
[95 123]
[96 122]
[97 121]
[99 119]
[100 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
