%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[37.27032471 612.86468506]
[22.41126060 615.14599609]
[7.37867022 615.01403809]
[-7.43806505 612.47229004]
[-21.65515709 607.58654785]
[-34.90434647 600.48339844]
[-46.84245300 591.34680176]
[-57.16024399 580.41339111]
[-65.59046936 567.96636963]
[-71.91476440 554.32824707]
[-75.96930695 539.85217285]
[-77.64909363 524.91308594]
[-76.91059113 509.89810181]
[-73.77294922 495.19601440]
[-68.31742096 481.18768311]
[-60.68533325 468.23593140]
[-51.07436752 456.67630005]
[-39.73347092 446.80813599]
[-26.95640564 438.88711548]
[-13.07412338 433.11837769]
[1.55379081 429.65133667]
[16.54843712 428.57583618]
[17.88667107 413.63565063]
[19.22490692 398.69546509]
[12.65393066 385.32864380]
[21.59156799 372.27380371]
[19.05735016 365.33120728]
[23.06256676 357.12170410]
[24.62309074 342.20309448]
[26.18361282 327.28448486]
[27.74413681 312.36587524]
[18.60479355 324.26010132]
[5.45679569 331.48022461]
[-9.48418522 332.80953979]
[-23.70033455 328.02401733]
[-34.79597855 317.93014526]
[-40.90130997 304.22885132]
[-40.98746872 289.22909546]
[-35.03993988 275.45858765]
[-24.06098175 265.23791504]
[-9.90074635 260.28939819]
[5.05452013 261.44699097]
[18.28459167 268.51559448]
[27.55997086 280.30404663]
[31.31766891 294.82739258]
[35.71866608 280.48754883]
[40.11966324 266.14770508]
[39.07700729 258.83096313]
[44.69440842 251.62802124]
[49.30841446 237.35528564]
[53.92242432 223.08255005]
[58.53643417 208.80981445]
[53.94289780 191.87268066]
[67.71113586 179.64497375]
[72.11213684 165.30511475]
[76.51313019 150.96527100]
[80.91413116 136.62542725]
[85.31513214 122.28557587]
[89.71612549 107.94573212]
[93.68822479 93.48120880]
[97.22789764 78.90483093]
[100.76757050 64.32846069]
[104.30724335 49.75208282]
[107.84691620 35.17570496]
[103.58466339 19.93943977]
[114.10681152 9.39744091]
[117.64648438 -5.17893457]
[120.64125824 -19.87693787]
[123.08698273 -34.67620850]
[117.70332336 -49.55326462]
[127.41224670 -60.84866333]
[129.85797119 -75.64793396]
[116.27784729 -82.24036407]
[105.11684418 -92.38207245]
[97.27373505 -105.24484253]
[93.37685394 -119.78177643]
[93.73374939 -134.81256104]
[98.30695343 -149.11927795]
[106.71770477 -161.54505920]
[118.27729034 -171.08767700]
[132.04345703 -176.98039246]
[146.89718628 -178.75347900]
[149.34292603 -193.55274963]
[143.95925903 -208.42979431]
[153.66818237 -219.72520447]
[156.11390686 -234.52447510]
[158.55963135 -249.32374573]
[161.00535583 -264.12301636]
[163.45109558 -278.92227173]
[149.11201477 -283.40969849]
[135.53704834 -289.84915161]
[122.99042511 -298.11526489]
[111.71638489 -308.04711914]
[101.93436432 -319.45144653]
[93.83477783 -332.10620117]
[87.57529449 -345.76507568]
[83.27774811 -360.16220093]
[81.02578735 -375.01733398]
[80.86325836 -390.04129028]
[82.79332733 -404.94165039]
[86.77841187 -419.42837524]
[92.74094391 -433.21948242]
[100.56487274 -446.04650879]
[110.09788513 -457.65975952]
[121.15443420 -467.83319092]
[133.51930237 -476.36877441]
[146.95178223 -483.10040283]
[161.19042969 -487.89697266]
[175.95806885 -490.66516113]
[190.96725464 -491.35107422]
[205.92582703 -489.94134521]
[220.54260254 -486.46343994]
[234.53308105 -480.98504639]
[247.62492371 -473.61279297]
[259.56329346 -464.49020386]
[270.11578369 -453.79486084]
[279.07702637 -441.73489380]
[286.27258301 -428.54513550]
[291.56234741 -414.48226929]
[294.84341431 -399.82003784]
[296.05184937 -384.84387207]
[295.16418457 -369.84524536]
[292.19769287 -355.11614990]
[287.21011353 -340.94329834]
[280.29849243 -327.60253906]
[271.59741211 -315.35357666]
[261.27621460 -304.43481445]
[249.53584290 -295.05880737]
[236.60478210 -287.40808105]
[222.73475647 -281.63150024]
[208.19577026 -277.84158325]
[193.27078247 -276.11203003]
[178.25036621 -276.47656250]
[175.80464172 -261.67727661]
[173.35890198 -246.87802124]
[170.91317749 -232.07875061]
[168.46745300 -217.27947998]
[174.02604675 -203.46096802]
[164.14219666 -191.10702515]
[161.69647217 -176.30775452]
[175.18997192 -169.84999084]
[186.32832336 -159.84156799]
[194.20310974 -147.08721924]
[198.16886902 -132.61608887]
[197.89598083 -117.59871674]
[193.39799500 -103.25228119]
[185.03129578 -90.74202728]
[173.46682739 -81.08655548]
[159.63632202 -75.07493591]
[144.65724182 -73.20220947]
[142.21151733 -58.40293884]
[147.77011108 -44.58442688]
[137.88626099 -32.23048401]
[135.44053650 -17.43121147]
[148.96875000 -23.91097450]
[162.53540039 -17.51206589]
[166.13964844 -2.95152497]
[157.12458801 9.03716087]
[142.13577271 9.61637783]
[132.22285461 -1.63926208]
[128.68318176 12.93711281]
[133.19860840 27.13077927]
[122.42328644 38.71537781]
[118.88361359 53.29175568]
[115.34394836 67.86812592]
[111.80427551 82.44450378]
[108.26460266 97.02088165]
[109.62400818 99.74879456]
[110.02089691 103.03163147]
[109.24780273 106.51383972]
[107.23153687 109.76821136]
[104.05597687 112.34673309]
[99.65497589 126.68657684]
[95.25398254 141.02642822]
[90.85298157 155.36627197]
[86.45198059 169.70611572]
[82.05098724 184.04595947]
[87.39350891 195.78564453]
[83.43269348 207.63873291]
[72.80916595 213.42382812]
[68.19515991 227.69656372]
[63.58115005 241.96928406]
[58.96714020 256.24203491]
[54.45951080 270.54870605]
[50.05851364 284.88854980]
[45.65751648 299.22839355]
[42.66274261 313.92642212]
[41.10221863 328.84500122]
[39.54169464 343.76361084]
[37.98117065 358.68222046]
[36.53175354 373.61203003]
[43.00700760 388.04745483]
[34.16509247 400.03369141]
[32.82685852 414.97387695]
[31.48862267 429.91406250]
[46.05343246 433.63729858]
[59.83232498 439.64880371]
[72.46839905 447.79287720]
[83.63434601 457.85855103]
[93.04094696 469.58511353]
[100.44453430 482.66879272]
[105.65335083 496.77072144]
[108.53247833 511.52560425]
[109.00732422 526.55126953]
[107.06560516 541.45855713]
[102.75759888 555.86120605]
[96.19491577 569.38629150]
[87.54752350 581.68341064]
[77.03942871 592.43402100]
[64.94280243 601.35968018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 195]
[23 194]
[24 193]
[26 191]
[28 190]
[29 189]
[30 188]
[31 187]
[45 186]
[46 185]
[47 184]
[49 183]
[50 182]
[51 181]
[52 180]
[54 177]
[55 176]
[56 175]
[57 174]
[58 173]
[59 172]
[60 167]
[61 166]
[62 165]
[63 164]
[64 163]
[66 161]
[67 160]
[68 154]
[69 153]
[71 151]
[72 150]
[82 140]
[83 139]
[85 137]
[86 136]
[87 135]
[88 134]
[89 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
