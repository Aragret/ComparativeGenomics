%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[103.23589325 651.76885986]
[88.52703857 654.79040527]
[73.57236481 656.14605713]
[58.55994034 655.81872559]
[43.67856216 653.81256104]
[29.11538124 650.15283203]
[15.05354500 644.88549805]
[1.66989458 638.07684326]
[-10.86725616 629.81243896]
[-22.40023804 620.19628906]
[-32.78401566 609.34930420]
[-41.88799667 597.40789795]
[-49.59769058 584.52221680]
[-55.81614304 570.85430908]
[-60.46514511 556.57617188]
[-63.48623657 541.86718750]
[-64.84141541 526.91247559]
[-64.51364899 511.90008545]
[-62.50705719 497.01876831]
[-58.84686661 482.45568848]
[-53.57911682 468.39401245]
[-46.77005386 455.01055908]
[-38.50530243 442.47366333]
[-28.88881111 430.94094849]
[-18.04150963 420.55749512]
[-6.09981585 411.45388794]
[6.78608942 403.74456787]
[20.45415306 397.52651978]
[34.73248291 392.87796021]
[49.44151688 389.85729980]
[64.39627075 388.50256348]
[79.40867615 388.83078003]
[81.41268921 373.96527100]
[83.41670227 359.09973145]
[85.42072296 344.23419189]
[87.42473602 329.36868286]
[89.42874908 314.50314331]
[91.43276215 299.63760376]
[93.32604980 284.75756836]
[95.10852051 269.86386108]
[88.93843842 256.30734253]
[98.26080322 243.52438354]
[92.09072113 229.96786499]
[101.41308594 217.18489075]
[103.19555664 202.29118347]
[104.97801971 187.39746094]
[106.76048279 172.50375366]
[105.97916412 157.52410889]
[102.65690613 142.89665222]
[99.33464050 128.26919556]
[95.79496765 113.69281006]
[86.13245392 103.58700562]
[89.68296814 90.06348419]
[85.92666626 75.54142761]
[82.17036438 61.01936722]
[78.41407013 46.49731064]
[74.44197083 32.03278732]
[70.25495911 17.62900352]
[66.06794739 3.22522187]
[54.78609085 -7.86667871]
[58.66323471 -22.24781227]
[41.86684799 -23.83943939]
[27.00260544 -31.74302673]
[16.33753586 -44.72116089]
[11.48592281 -60.76496124]
[13.16500759 -77.40500641]
[21.08909988 -92.09140778]
[34.01772308 -102.58457947]
[29.40371513 -116.85730743]
[17.79661179 -127.60839081]
[21.24385643 -142.09858704]
[16.62984657 -156.37132263]
[5.02274418 -167.12240601]
[8.46998882 -181.61259460]
[3.85597968 -195.88533020]
[-0.75802964 -210.15806580]
[-15.61847878 -207.88578796]
[-30.65098572 -208.02687073]
[-45.46617126 -210.57763672]
[-59.68029022 -215.47203064]
[-72.92515564 -222.58325195]
[-84.85770416 -231.72714233]
[-95.16884613 -242.66680908]
[-103.59149170 -255.11892700]
[-109.90749359 -268.76092529]
[-113.95323181 -283.23947144]
[-115.62392426 -298.17953491]
[-114.87629700 -313.19409180]
[-111.72970581 -327.89425659]
[-106.26566315 -341.89926147]
[-98.62570190 -354.84637451]
[-89.00770569 -366.40017700]
[-77.66081238 -376.26141357]
[-64.87892914 -384.17468262]
[-50.99313736 -389.93496704]
[-36.36311722 -393.39309692]
[-21.36781883 -394.45950317]
[-6.39565659 -393.10653687]
[8.16555500 -389.36923218]
[21.93864441 -383.34445190]
[34.56685638 -375.18820190]
[45.72309113 -365.11175537]
[55.11837387 -353.37612915]
[62.50934219 -340.28530884]
[67.70455933 -326.17837524]
[70.56944275 -311.42071533]
[71.02980042 -296.39459229]
[69.07369995 -281.48922729]
[64.75181580 -267.09069824]
[58.17608261 -253.57197571]
[49.51683807 -241.28320312]
[38.99837494 -230.54272461]
[26.89314461 -221.62870789]
[13.51470375 -214.77206421]
[18.12871361 -200.49934387]
[22.74272156 -186.22660828]
[34.01980209 -176.49639893]
[30.90258026 -160.98533630]
[35.51659012 -146.71260071]
[46.79366684 -136.98239136]
[43.67644882 -121.47132111]
[48.29045868 -107.19858551]
[61.54746628 -106.98587036]
[74.11542511 -102.69116974]
[84.76673889 -94.71913910]
[92.45645142 -83.83435059]
[96.42476654 -71.08795929]
[96.27210999 -57.71622086]
[91.99929047 -45.02057266]
[84.00881958 -34.24097824]
[73.06701660 -26.43482399]
[84.04939270 -16.37317848]
[80.47173309 -0.96178937]
[84.65874481 13.44199276]
[88.84575653 27.84577560]
[92.52549744 30.89019585]
[94.33182526 36.27853775]
[92.93612671 42.74100876]
[96.69242859 57.26306915]
[100.44873047 71.78512573]
[104.20503235 86.30718994]
[113.86754608 96.41299438]
[110.31703186 109.93651581]
[114.67121887 114.91171265]
[115.70414734 120.50009918]
[113.96210480 124.94692993]
[117.28436279 139.57438660]
[120.60662079 154.20184326]
[124.14877319 139.62608337]
[131.15934753 126.36516571]
[141.20965576 115.23002625]
[153.68510437 106.90157318]
[167.82283020 101.88909149]
[182.75828552 100.49910736]
[197.57817078 102.81661224]
[211.37625122 108.69989777]
[223.30877686 117.78918457]
[232.64604187 129.52867126]
[238.81707764 143.20046997]
[241.44453430 157.96855164]
[240.36773682 172.92985535]
[235.65254211 187.16947937]
[227.58726501 199.81666565]
[216.66510010 210.09803772]
[203.55397034 217.38487244]
[189.05558777 221.23159790]
[174.05657959 221.40296936]
[159.47409058 217.88851929]
[146.19989014 210.90315247]
[135.04566956 200.87400818]
[126.69353485 188.41441345]
[121.65420532 174.28620911]
[119.87173462 189.17993164]
[118.08927155 204.07365417]
[116.30680084 218.96736145]
[122.34939575 233.58918762]
[113.15451813 245.30685425]
[119.19710541 259.92868042]
[110.00223541 271.64633179]
[108.21977234 286.54003906]
[110.30723572 295.43276978]
[106.29828644 301.64163208]
[104.29427338 316.50717163]
[102.29026031 331.37268066]
[100.28624725 346.23822021]
[98.28223419 361.10372925]
[96.27822113 375.96926880]
[94.27420807 390.83480835]
[108.83760834 394.49368286]
[122.89975739 399.76016235]
[136.28381348 406.56802368]
[148.82145691 414.83166504]
[160.35501099 424.44711304]
[170.73944092 435.29348755]
[179.84413147 447.23437500]
[187.55461121 460.11956787]
[193.77386475 473.78707886]
[198.42373657 488.06500244]
[201.44569397 502.77377319]
[202.80177307 517.72839355]
[202.47491455 532.74084473]
[200.46920776 547.62225342]
[196.80989075 562.18554688]
[191.54296875 576.24755859]
[184.73471069 589.63140869]
[176.47071838 602.16882324]
[166.85490417 613.70208740]
[156.00822449 624.08618164]
[144.06707764 633.19049072]
[131.18164062 640.90057373]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 188]
[33 187]
[34 186]
[35 185]
[36 184]
[37 183]
[38 182]
[39 180]
[40 179]
[42 177]
[44 175]
[45 174]
[46 173]
[47 172]
[48 148]
[49 147]
[50 146]
[51 143]
[53 141]
[54 140]
[55 139]
[56 138]
[57 135]
[58 134]
[59 133]
[61 131]
[68 122]
[69 121]
[71 119]
[72 118]
[74 116]
[75 115]
[76 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
