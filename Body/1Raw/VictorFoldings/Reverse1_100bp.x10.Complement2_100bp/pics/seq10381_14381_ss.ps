%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[207.49629211 340.80422974]
[218.12132263 330.16390991]
[230.39186096 321.47241211]
[223.91235352 307.94406128]
[217.43286133 294.41571045]
[210.95336914 280.88735962]
[204.47387695 267.35900879]
[197.00613403 254.35006714]
[188.59150696 241.93257141]
[180.17689514 229.51507568]
[171.76226807 217.09757996]
[163.34765625 204.68008423]
[146.71145630 202.21519470]
[136.81040955 188.20506287]
[140.17016602 171.03732300]
[131.57159424 158.74647522]
[122.97303772 146.45564270]
[109.33742523 140.46237183]
[107.76651001 124.71934509]
[99.16794586 112.42850494]
[101.22526550 127.28675079]
[99.07019043 142.13113403]
[92.87268066 155.79095459]
[83.12149811 167.18896484]
[70.58566284 175.42625427]
[56.25380707 179.85317993]
[41.25619125 180.12065125]
[26.77559471 176.20755005]
[13.95401859 168.42250061]
[3.80262423 157.37944031]
[-2.87800670 143.94927979]
[-5.56101131 129.19117737]
[-4.03479719 114.26902008]
[1.58027232 100.35964203]
[10.84136963 88.55997467]
[23.01812553 79.80059814]
[37.15023041 74.77232361]
[52.12316895 73.87168121]
[66.75611115 77.16971588]
[79.89504242 84.40632629]
[90.50585175 95.01357269]
[85.89184570 80.74083710]
[81.27783203 66.46810913]
[76.66382599 52.19537354]
[72.04981995 37.92263794]
[67.43580627 23.64990616]
[62.82179642 9.37717342]
[58.20779037 -4.89556026]
[53.59378052 -19.16829300]
[48.97977066 -33.44102859]
[44.36576080 -47.71376038]
[38.74835968 -54.91672134]
[39.79101944 -62.23345947]
[35.39002228 -76.57330322]
[23.94427109 -87.49600983]
[27.60687256 -101.93327332]
[23.20587349 -116.27311707]
[7.60379553 -124.18478394]
[2.64848137 -140.60914612]
[10.93871021 -155.24168396]
[6.32470131 -169.51440430]
[1.71069193 -183.78713989]
[-2.90331721 -198.05987549]
[-7.51732635 -212.33261108]
[-22.19074440 -209.15937805]
[-37.10720062 -207.46292114]
[-52.11844635 -207.26013184]
[-67.07528687 -208.55299377]
[-81.82907104 -211.32867432]
[-96.23316956 -215.55958557]
[-110.14441681 -221.20367432]
[-123.42456055 -228.20484924]
[-135.94160461 -236.49351501]
[-147.57115173 -245.98731995]
[-158.19763184 -256.59188843]
[-167.71540833 -268.20181274]
[-176.02989197 -280.70172119]
[-183.05844116 -293.96740723]
[-188.73123169 -307.86697388]
[-192.99185181 -322.26229858]
[-195.79797363 -337.01034546]
[-197.12170410 -351.96447754]
[-196.94987488 -366.97610474]
[-195.28421021 -381.89602661]
[-192.14125061 -396.57595825]
[-187.55224609 -410.87002563]
[-181.56280518 -424.63610840]
[-174.23245239 -437.73742676]
[-165.63401794 -450.04376221]
[-155.85299683 -461.43280029]
[-144.98658752 -471.79135132]
[-133.14277649 -481.01644897]
[-120.43929291 -489.01644897]
[-107.00238037 -495.71182251]
[-92.96558380 -501.03601074]
[-78.46842194 -504.93612671]
[-63.65496826 -507.37338257]
[-48.67245102 -508.32354736]
[-33.66978073 -507.77722168]
[-18.79606247 -505.73977661]
[-4.19912195 -502.23150635]
[9.97596550 -497.28729248]
[23.58831787 -490.95620728]
[36.50264740 -483.30123901]
[48.59059906 -474.39840698]
[59.73203659 -464.33627319]
[69.81623077 -453.21475220]
[78.74295044 -441.14447021]
[86.42347717 -428.24530029]
[92.78148651 -414.64550781]
[97.75377655 -400.48025513]
[101.29093170 -385.89028931]
[103.35780334 -371.02062988]
[103.93383789 -356.01907349]
[103.01332092 -341.03469849]
[100.60540009 -326.21643066]
[96.73400116 -311.71157837]
[91.43759918 -297.66427612]
[84.76884460 -284.21414185]
[76.79401398 -271.49484253]
[67.59235382 -259.63278198]
[57.25532913 -248.74589539]
[45.88567352 -238.94235229]
[33.59638977 -230.31958008]
[20.50961113 -222.96330261]
[6.75540686 -216.94662476]
[11.36941624 -202.67388916]
[15.98342514 -188.40115356]
[20.59743500 -174.12841797]
[25.21144295 -159.85568237]
[37.39156723 -155.65162659]
[45.04053497 -145.04147339]
[45.18406677 -131.76782227]
[37.54571915 -120.67411804]
[41.94672012 -106.33426666]
[53.07767868 -96.43724823]
[49.72986603 -80.97430420]
[54.13086700 -66.63445282]
[58.63849258 -52.32777023]
[63.25250244 -38.05503464]
[67.86651611 -23.78230286]
[72.48052216 -9.50956917]
[77.09452820 4.76316357]
[81.70854187 19.03589630]
[86.32254791 33.30863190]
[90.93656158 47.58136368]
[95.55056763 61.85409546]
[100.16458130 76.12683105]
[104.77858734 90.39956665]
[111.45877838 103.82994080]
[120.05734253 116.12078094]
[134.30798340 122.99317932]
[135.26387024 137.85708618]
[143.86244202 150.14791870]
[152.46099854 162.43875122]
[165.90612793 163.24072266]
[176.28302002 171.51904297]
[179.94306946 184.07635498]
[175.76515198 196.26547241]
[184.17976379 208.68296814]
[192.59439087 221.10046387]
[201.00900269 233.51795959]
[209.42362976 245.93545532]
[209.95515442 230.94487000]
[217.82679749 218.17626953]
[230.98092651 210.96733093]
[245.97909546 211.20243835]
[258.90078735 218.82015991]
[266.36834717 231.82922363]
[266.42971802 246.82910156]
[259.06890869 259.89886475]
[246.20999146 267.62207031]
[231.21426392 267.97994995]
[218.00221252 260.87951660]
[224.48171997 274.40786743]
[230.96121216 287.93621826]
[237.44070435 301.46456909]
[243.92019653 314.99291992]
[258.38366699 310.87997437]
[273.33419800 309.27072144]
[288.34161377 310.21142578]
[302.97418213 313.67501831]
[316.81082153 319.56185913]
[329.45349121 327.70260620]
[340.53836060 337.86297607]
[349.74658203 349.75064087]
[356.81314087 363.02362061]
[361.53475952 377.29995728]
[363.77560425 392.16894531]
[363.47113037 407.20275879]
[360.63018799 421.96884155]
[355.33444214 436.04232788]
[347.73629761 449.01831055]
[338.05438232 460.52346802]
[326.56723022 470.22671509]
[313.60534668 477.84893799]
[299.54171753 483.17077637]
[284.78094482 486.03915405]
[269.74774170 486.37149048]
[254.87461853 484.15826416]
[240.58952332 479.46313477]
[227.30346680 472.42123413]
[215.39871216 463.23510742]
[205.21778870 452.16909790]
[197.05360413 439.54156494]
[191.14108276 425.71585083]
[187.65032959 411.08978271]
[186.68176270 396.08410645]
[188.26329041 381.13061523]
[192.34936523 366.65954590]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 178]
[4 177]
[5 176]
[6 175]
[7 174]
[8 163]
[9 162]
[10 161]
[11 160]
[12 159]
[15 155]
[16 154]
[17 153]
[19 151]
[20 150]
[41 149]
[42 148]
[43 147]
[44 146]
[45 145]
[46 144]
[47 143]
[48 142]
[49 141]
[50 140]
[51 139]
[53 138]
[54 137]
[56 135]
[57 134]
[60 130]
[61 129]
[62 128]
[63 127]
[64 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
