%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[75.70640564 534.65216064]
[67.65419006 547.35137939]
[57.57150650 558.50695801]
[45.74843597 567.79797363]
[32.52516174 574.95709229]
[18.28213882 579.77832031]
[3.42917013 582.12298584]
[-11.60639572 581.92358398]
[-26.39195633 579.18585205]
[-40.50209808 573.98852539]
[-53.53084946 566.48120117]
[-65.10334015 556.87988281]
[-74.88661957 545.46081543]
[-82.59918976 532.55249023]
[-88.01914978 518.52636719]
[-90.99055481 503.78601074]
[-91.42790985 488.75549316]
[-89.31864166 473.86727905]
[-84.72342682 459.54971313]
[-77.77448273 446.21481323]
[-68.67174530 434.24615479]
[-57.67712402 423.98818970]
[-45.10694122 415.73599243]
[-31.32287979 409.72705078]
[-16.72152710 406.13418579]
[-1.72299743 405.06085205]
[13.24117374 406.53784180]
[17.21327019 392.07333374]
[13.12244225 377.75152588]
[24.23790741 366.49288940]
[28.21000481 352.02835083]
[24.11917686 337.70654297]
[35.23464203 326.44790649]
[39.20673752 311.98336792]
[43.17883301 297.51885986]
[47.15092850 283.05432129]
[50.36420441 268.40252686]
[52.80993271 253.60325623]
[55.25565720 238.80398560]
[53.73471451 236.44923401]
[53.05487823 233.35014343]
[53.50433350 229.82403564]
[55.25116730 226.28665161]
[58.31274033 223.20756531]
[61.63500214 208.58010864]
[64.95726013 193.95265198]
[68.27951813 179.32519531]
[54.38960648 184.98825073]
[41.22787857 177.79318237]
[38.49667358 163.04393005]
[48.20933533 151.61308289]
[63.20605087 151.92704773]
[72.43144226 163.75276184]
[76.83243561 149.41290283]
[81.23343658 135.07305908]
[85.63442993 120.73321533]
[90.03543091 106.39337158]
[78.96047974 116.50996399]
[64.88346100 121.69046021]
[49.89262009 121.16637421]
[36.21175766 115.01544189]
[25.87034607 104.15012360]
[20.40247536 90.18221283]
[20.61926842 75.18378448]
[26.48856735 61.37974930]
[37.13969803 50.81786346]
[50.99262619 45.06491852]
[65.99235535 44.97432327]
[79.91375732 50.55952835]
[90.69168091 60.99199295]
[96.72728729 74.72412109]
[97.12554169 89.71695709]
[104.39877319 76.59826660]
[111.67200470 63.47957230]
[111.59657288 47.65854645]
[124.53468323 40.27920914]
[131.80790710 27.16051674]
[129.01045227 14.56936836]
[135.33840942 3.79251242]
[146.92915344 0.33109429]
[154.39689636 -12.67785835]
[161.86463928 -25.68680954]
[169.33236694 -38.69576263]
[169.31765747 -43.91561508]
[171.12583923 -48.19157028]
[174.09211731 -50.98731613]
[177.43519592 -52.10813522]
[185.47636414 -64.77066040]
[193.51753235 -77.43318176]
[201.55871582 -90.09571075]
[208.33869934 -103.47598267]
[213.79406738 -117.44878387]
[219.24942017 -131.42158508]
[224.70477295 -145.39437866]
[230.16012573 -159.36717224]
[227.97167969 -175.03628540]
[239.80790710 -184.07801819]
[226.75372314 -191.52153015]
[214.92248535 -200.78651428]
[204.56639099 -211.67546082]
[195.90617371 -223.95628357]
[189.12643433 -237.36720276]
[184.37168884 -251.62239075]
[181.74325562 -266.41796875]
[181.29719543 -281.43859863]
[183.04298401 -296.36407471]
[186.94343567 -310.87628174]
[192.91540527 -324.66589355]
[200.83158875 -337.43899536]
[210.52326965 -348.92330933]
[221.78384399 -358.87402344]
[234.37332153 -367.07910156]
[248.02334595 -373.36358643]
[262.44296265 -377.59356689]
[277.32479858 -379.67886353]
[292.35168457 -379.57501221]
[307.20327759 -377.28427124]
[321.56307983 -372.85543823]
[335.12493896 -366.38290405]
[347.59982300 -358.00466919]
[358.72183228 -347.89926147]
[368.25387573 -336.28213501]
[375.99279785 -323.40084839]
[381.77362061 -309.53002930]
[385.47314453 -294.96530151]
[387.01254272 -280.01712036]
[386.35894775 -265.00411987]
[383.52630615 -250.24626160]
[378.57501221 -236.05815125]
[371.61059570 -222.74218750]
[362.78149414 -210.58221436]
[352.27590942 -199.83741760]
[340.31777954 -190.73683167]
[327.16195679 -183.47441101]
[313.08892822 -178.20498657]
[298.39855957 -175.04084778]
[283.40408325 -174.04945374]
[268.42501831 -175.25193787]
[253.78070068 -178.62266541]
[256.35937500 -163.95297241]
[244.13293457 -153.91181946]
[238.67756653 -139.93902588]
[233.22221375 -125.96622467]
[227.76686096 -111.99342346]
[222.31150818 -98.02062988]
[234.27424622 -107.07008362]
[248.86482239 -110.55078125]
[263.62445068 -107.87617493]
[276.06585693 -99.49697113]
[284.09246826 -86.82521820]
[286.35168457 -71.99632263]
[282.46273804 -57.50922394]
[273.08099365 -45.80524445]
[259.78747559 -38.85671234]
[244.82232666 -37.83457947]
[230.70748901 -42.91109467]
[219.82151794 -53.23077011]
[213.99890137 -67.05456543]
[214.22123718 -82.05453491]
[206.18006897 -69.39201355]
[198.13888550 -56.72948837]
[190.09771729 -44.06696320]
[182.34132385 -31.22802162]
[174.87358093 -18.21906853]
[167.40583801 -5.21011686]
[159.93811035 7.79883528]
[160.92723083 25.31992531]
[144.92660522 34.43374634]
[137.65338135 47.55244064]
[138.24903870 62.43513107]
[124.79069519 70.75279999]
[117.51747131 83.87149811]
[110.24423981 96.99018860]
[104.37527466 110.79436493]
[99.97428131 125.13421631]
[95.57328033 139.47406006]
[91.17228699 153.81390381]
[86.77128601 168.15376282]
[82.90698242 182.64744568]
[79.58472443 197.27490234]
[76.26245880 211.90237427]
[72.94020081 226.52983093]
[70.05493164 241.24972534]
[67.60919952 256.04898071]
[65.16347504 270.84826660]
[77.30620575 262.04177856]
[92.27712250 262.97534180]
[103.23173523 273.22210693]
[105.16172791 288.09744263]
[97.18474579 300.80050659]
[82.94775391 305.52362061]
[68.95970917 300.10748291]
[61.61545563 287.02642822]
[57.64335632 301.49093628]
[53.67126083 315.95547485]
[49.69916534 330.41998291]
[53.50588226 345.77639771]
[42.67452621 356.00045776]
[38.70243073 370.46496582]
[42.50914764 385.82138062]
[31.67779350 396.04544067]
[27.70569801 410.50994873]
[41.32554245 416.88238525]
[53.67243576 425.46505737]
[64.39113617 436.01101685]
[73.17324066 448.21685791]
[79.76606750 461.73138428]
[83.97993469 476.16577148]
[85.69360352 491.10470581]
[84.85775757 506.11834717]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 202]
[28 201]
[30 199]
[31 198]
[33 196]
[34 195]
[35 194]
[36 193]
[37 185]
[38 184]
[39 183]
[44 182]
[45 181]
[46 180]
[47 179]
[53 178]
[54 177]
[55 176]
[56 175]
[57 174]
[72 173]
[73 172]
[74 171]
[76 169]
[77 168]
[80 166]
[81 165]
[82 164]
[83 163]
[87 162]
[88 161]
[89 160]
[90 159]
[91 145]
[92 144]
[93 143]
[94 142]
[95 141]
[97 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
