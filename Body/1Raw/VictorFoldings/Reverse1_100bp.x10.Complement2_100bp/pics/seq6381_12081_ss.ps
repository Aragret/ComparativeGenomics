%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[184.28829956 501.33572388]
[197.28143311 493.61108398]
[193.74176025 479.03469849]
[190.20208740 464.45831299]
[179.67994690 453.91632080]
[183.94218445 438.68005371]
[180.40251160 424.10366821]
[176.86283875 409.52731323]
[172.99853516 395.03359985]
[168.81152344 380.62982178]
[164.62451172 366.22604370]
[160.43750000 351.82226562]
[156.25048828 337.41848755]
[145.80392456 331.31967163]
[142.19776917 319.35391235]
[147.88746643 307.77850342]
[143.91535950 293.31396484]
[129.01652527 292.16955566]
[115.38262177 285.98519897]
[104.66717529 275.48980713]
[98.17696381 261.93624878]
[96.71273041 246.95205688]
[100.47039795 232.34382629]
[109.01514435 219.87951660]
[121.33158875 211.07435608]
[117.35948944 196.60983276]
[112.55696869 190.99223328]
[113.43765259 181.90034485]
[109.68135071 167.37829590]
[105.92504883 152.85623169]
[102.16874695 138.33416748]
[98.41244507 123.81211090]
[94.65614319 109.29005432]
[88.89011383 95.44256592]
[81.22951508 82.54624176]
[67.52949524 74.63296509]
[67.68177795 59.73913574]
[60.02117920 46.84280777]
[52.36058044 33.94647980]
[36.09570694 25.31309891]
[36.56272125 7.77032757]
[28.71096611 -5.01051521]
[14.89464569 -12.71894455]
[14.82516479 -27.61338806]
[6.97340918 -40.39422989]
[-6.84291029 -48.10266113]
[-6.91239119 -62.99710083]
[-14.76414680 -75.77794647]
[-28.69474411 -72.14075470]
[-43.06980515 -72.57692719]
[-56.72399902 -77.04212189]
[-68.55296326 -85.16574860]
[-77.60263824 -96.28171539]
[-83.14618683 -109.48301697]
[-84.74237823 -123.69574738]
[-82.27070618 -137.76647949]
[-75.94042206 -150.55583191]
[-66.27285767 -161.03076172]
[-73.93345642 -173.92707825]
[-81.59405518 -186.82341003]
[-89.25465393 -199.71974182]
[-96.91525269 -212.61605835]
[-110.65748596 -206.55732727]
[-125.02983856 -202.19924927]
[-139.82270813 -199.60537720]
[-154.82038879 -198.81355286]
[-169.80416870 -199.83531189]
[-184.55551147 -202.65576172]
[-198.85932922 -207.23376465]
[-212.50703430 -213.50256348]
[-225.29957581 -221.37072754]
[-237.05041504 -230.72354126]
[-247.58819580 -241.42460632]
[-256.75921631 -253.31785583]
[-264.42977905 -266.22985840]
[-270.48800659 -279.97232056]
[-274.84555054 -294.34481812]
[-277.43887329 -309.13781738]
[-278.23013306 -324.13552856]
[-277.20782471 -339.11926270]
[-274.38681030 -353.87048340]
[-269.80828857 -368.17413330]
[-263.53897095 -381.82159424]
[-255.67031860 -394.61386108]
[-246.31707764 -406.36434937]
[-235.61561584 -416.90173340]
[-223.72203064 -426.07232666]
[-210.80973816 -433.74240112]
[-197.06704712 -439.80010986]
[-182.69436646 -444.15710449]
[-167.90130615 -446.74987793]
[-152.90356445 -447.54058838]
[-137.91986084 -446.51770020]
[-123.16872406 -443.69613647]
[-108.86524963 -439.11706543]
[-95.21802521 -432.84725952]
[-82.42607117 -424.97811890]
[-70.67592621 -415.62442017]
[-60.13895035 -404.92257690]
[-50.96879959 -393.02865601]
[-43.29920578 -380.11608887]
[-37.24200439 -366.37316895]
[-32.88553619 -352.00030518]
[-30.29333115 -337.20715332]
[-29.50318527 -322.20938110]
[-30.52662659 -307.22573853]
[-33.34872818 -292.47470093]
[-37.92833328 -278.17138672]
[-44.19866180 -264.52438354]
[-52.06827545 -251.73274231]
[-61.42240524 -239.98294067]
[-72.12464142 -229.44636536]
[-84.01892090 -220.27665710]
[-76.35832214 -207.38034058]
[-68.69773102 -194.48400879]
[-61.03713226 -181.58767700]
[-53.37653351 -168.69136047]
[-38.13459778 -172.29826355]
[-22.50469780 -171.01695251]
[-8.01782131 -164.96090698]
[3.90328646 -154.71183777]
[12.08384132 -141.26394653]
[15.71278954 -125.92737579]
[14.42320824 -110.20066071]
[8.32936192 -95.62426758]
[-1.98330390 -83.62969971]
[5.86845160 -70.84886169]
[19.12316132 -64.05460358]
[19.75425148 -48.24598694]
[27.60600662 -35.46514130]
[40.86071777 -28.67088509]
[41.49180603 -12.86227036]
[49.34356308 -0.08142800]
[61.03221893 3.03335595]
[67.67824554 13.61702728]
[65.25691223 26.28588486]
[72.91750336 39.18221283]
[80.57810211 52.07853699]
[93.73018646 59.06938553]
[94.12583923 74.88564301]
[101.78643799 87.78197479]
[100.92741394 72.80658722]
[104.46230316 58.22905350]
[112.08530426 45.31046295]
[123.13694000 35.16841125]
[136.66114807 28.68028641]
[151.48794556 26.40737152]
[166.33465576 28.54629898]
[179.91691589 34.91202927]
[191.05969238 44.95386887]
[198.79904175 57.80308914]
[202.46542358 72.34810638]
[201.74166870 87.33063507]
[196.69038391 101.45453644]
[187.74856567 113.49794769]
[175.68975830 122.41899872]
[161.55715942 127.44592285]
[146.57341003 128.14384460]
[132.03472900 124.45238495]
[119.19887543 116.69089508]
[109.17820740 105.53375244]
[112.93450928 120.05580902]
[116.69080353 134.57786560]
[120.44710541 149.09992981]
[124.20340729 163.62199402]
[127.95970917 178.14404297]
[131.82402039 192.63774109]
[135.79611206 207.10226440]
[150.88208008 208.38244629]
[164.59408569 214.73486328]
[175.28526306 225.37528992]
[181.67890930 239.00581360]
[183.02079773 253.97314453]
[179.16821289 268.46908569]
[170.60478210 280.74899292]
[158.37988281 289.34185791]
[162.35198975 303.80639648]
[175.75006104 316.43862915]
[170.65428162 333.23147583]
[174.84129333 347.63525391]
[179.02830505 362.03903198]
[183.21530151 376.44281006]
[187.40231323 390.84661865]
[191.17156982 394.45767212]
[192.99630737 398.72659302]
[192.95156860 402.80249023]
[191.43922424 405.98764038]
[194.97889709 420.56402588]
[198.51856995 435.14038086]
[209.29388428 446.72497559]
[204.77845764 460.91864014]
[208.31813049 475.49502563]
[211.85780334 490.07141113]
[226.94660950 490.97671509]
[241.09761047 496.29089355]
[253.05253601 505.54135132]
[261.74835205 517.90557861]
[266.41183472 532.28417969]
[266.62829590 547.39855957]
[262.37850952 561.90478516]
[254.04035950 574.51300049]
[242.35525513 584.10205078]
[228.36224365 589.81927490]
[213.30555725 591.15637207]
[198.52403259 587.99432373]
[185.33204651 580.61444092]
[174.90261841 569.67285156]
[168.16310120 556.14251709]
[165.71279907 541.22650146]
[167.76956177 526.25115967]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 193]
[3 192]
[4 191]
[6 189]
[7 188]
[8 187]
[9 183]
[10 182]
[11 181]
[12 180]
[13 179]
[16 177]
[17 176]
[25 168]
[26 167]
[28 166]
[29 165]
[30 164]
[31 163]
[32 162]
[33 161]
[34 141]
[35 140]
[37 138]
[38 137]
[39 136]
[41 133]
[42 132]
[44 130]
[45 129]
[47 127]
[48 126]
[58 117]
[59 116]
[60 115]
[61 114]
[62 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
