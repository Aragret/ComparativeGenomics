%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[53.44094467 579.91009521]
[47.02140045 566.30480957]
[43.21136093 551.75152588]
[42.14059067 536.74591064]
[43.84556198 521.79907227]
[48.26820374 507.42010498]
[55.25788498 494.09872437]
[64.57653046 482.28866577]
[75.90676117 472.39218140]
[88.86267090 464.74633789]
[103.00298309 459.61154175]
[100.55725861 444.81225586]
[98.11153412 430.01300049]
[95.66580200 415.21371460]
[91.47377014 409.12695312]
[93.29554749 400.17605591]
[91.07042694 385.34201050]
[88.84530640 370.50796509]
[81.89050293 383.79818726]
[69.27553558 391.91378784]
[54.29794312 392.73330688]
[40.87282181 386.04257202]
[32.50946808 373.59048462]
[31.39404678 358.63201904]
[37.81812286 345.07727051]
[50.10245895 336.46942139]
[65.03595734 335.05853271]
[78.71504211 341.21340942]
[87.56370544 353.32437134]
[87.56370544 338.32437134]
[87.56370544 323.32437134]
[87.56370544 308.32437134]
[79.82640076 295.59710693]
[87.56370544 281.79693604]
[87.56370544 266.79693604]
[75.17444611 255.42395020]
[74.83736420 238.27165222]
[87.24935150 225.94436646]
[87.02602386 210.94602966]
[86.80269623 195.94769287]
[75.60526276 205.92854309]
[60.62267303 205.20600891]
[50.43763733 194.19396973]
[50.88460159 179.20062256]
[61.70752716 168.81484985]
[76.70655060 168.98608398]
[87.28918457 179.61535645]
[88.40483093 164.65690613]
[89.52047729 149.69845581]
[90.52474213 134.73211670]
[91.41755676 119.75870514]
[92.31037140 104.78530121]
[90.18519592 101.56723022]
[89.48881531 97.42803192]
[90.60080719 93.02684021]
[93.59214783 89.16786194]
[95.15267181 74.24925232]
[96.71319580 59.33065033]
[98.27371979 44.41204453]
[99.83424377 29.49344063]
[92.33333588 19.00062561]
[93.94022369 6.60701180]
[103.25260162 -1.11349475]
[105.03506470 -16.00721169]
[106.81753540 -30.90092850]
[108.48907471 -45.80750275]
[110.04959869 -60.72610855]
[111.61012268 -75.64471436]
[113.17064667 -90.56331635]
[103.46983337 -79.12241364]
[89.59819794 -73.41471863]
[74.65469360 -74.71536255]
[61.97773743 -82.73375702]
[54.39939499 -95.67858887]
[53.61268234 -110.65795135]
[59.79335785 -124.32540131]
[71.56064606 -133.62760925]
[86.28569794 -136.48641968]
[100.67890167 -132.26319885]
[111.52478027 -121.90139771]
[116.40033722 -107.71585083]
[120.37242889 -122.18037415]
[124.34452820 -136.64489746]
[128.31661987 -151.10942078]
[120.35136414 -161.97079468]
[120.09962463 -175.24282837]
[127.42929840 -186.07601929]
[139.47885132 -190.64086914]
[143.66586304 -205.04464722]
[147.85287476 -219.44842529]
[140.05020142 -230.42716980]
[139.99609375 -243.70149231]
[147.48625183 -254.42434692]
[159.60243225 -258.80929565]
[156.25462341 -274.27224731]
[167.38557434 -284.16925049]
[171.78657532 -298.50909424]
[176.18757629 -312.84896851]
[180.58857727 -327.18881226]
[167.26103210 -334.16671753]
[155.44276428 -343.47494507]
[145.53628540 -354.79644775]
[137.87901306 -367.74560547]
[132.73175049 -381.88140869]
[130.26979065 -396.72235107]
[130.57701111 -411.76296997]
[133.64294434 -426.49099731]
[139.36317444 -440.40478516]
[147.54284668 -453.03045654]
[157.90336609 -463.93795776]
[170.09188843 -472.75582886]
[183.69325256 -479.18371582]
[198.24420166 -483.00265503]
[213.24914551 -484.08261108]
[228.19702148 -482.38681030]
[242.57870483 -477.97296143]
[255.90435791 -470.99145508]
[267.72012329 -461.68002319]
[277.62353516 -450.35586548]
[285.27731323 -437.40463257]
[290.42077637 -423.26745605]
[292.87872314 -408.42587280]
[292.56744385 -393.38531494]
[289.49755859 -378.65814209]
[283.77359009 -364.74588013]
[275.59051514 -352.12240601]
[265.22705078 -341.21768188]
[253.03614807 -332.40310669]
[239.43304443 -325.97888184]
[224.88107300 -322.16387939]
[209.87583923 -321.08795166]
[194.92842102 -322.78781128]
[190.52742004 -308.44796753]
[186.12641907 -294.10809326]
[181.72541809 -279.76824951]
[185.38803101 -265.33099365]
[173.94227600 -254.40829468]
[182.44944763 -239.90081787]
[177.73921204 -223.40449524]
[162.25665283 -215.26141357]
[158.06964111 -200.85763550]
[153.88262939 -186.45385742]
[162.60485840 -172.07464600]
[158.14074707 -155.51002502]
[142.78114319 -147.13732910]
[138.80905151 -132.67280579]
[134.83695984 -118.20828247]
[130.86485291 -103.74375916]
[128.08924866 -89.00279236]
[126.52872467 -74.08419037]
[124.96820068 -59.16558456]
[123.40767670 -44.24697876]
[125.83824921 -37.26742935]
[121.71125031 -29.11846352]
[119.92878723 -14.22474575]
[118.14631653 0.66897118]
[125.91195679 16.40624428]
[114.75284576 31.05396461]
[113.19232178 45.97256851]
[111.63179779 60.89117432]
[110.07127380 75.80977631]
[108.51075745 90.72838593]
[107.28377533 105.67811584]
[106.39096069 120.65151978]
[105.49814606 135.62492371]
[108.11122131 144.37762451]
[104.47893524 150.81410217]
[103.36328888 165.77255249]
[102.24763489 180.73101807]
[101.80103302 195.72436523]
[102.02436066 210.72270203]
[102.24768829 225.72103882]
[112.92812347 233.92730713]
[116.87453461 246.60154724]
[112.86010742 259.05010986]
[102.56370544 266.79693604]
[102.56370544 281.79693604]
[110.30100250 295.59710693]
[102.56370544 308.32437134]
[102.56370544 323.32437134]
[102.56370544 338.32437134]
[102.56370544 353.32437134]
[103.67935181 368.28283691]
[105.90447235 383.11688232]
[108.12958527 397.95092773]
[110.46507263 412.76800537]
[112.91080475 427.56726074]
[115.35652924 442.36654663]
[117.80225372 457.16580200]
[132.84277344 457.47817993]
[147.56974792 460.54916382]
[161.48158264 466.27413940]
[174.10444641 474.45816040]
[185.00842285 484.82241821]
[193.82209778 497.01397705]
[200.24531555 510.61752319]
[204.05928040 525.16979980]
[205.13409424 540.17510986]
[203.43315125 555.12237549]
[199.01437378 569.50256348]
[192.02828979 582.82580566]
[182.71282959 594.63836670]
[171.38526917 604.53790283]
[158.43141174 612.18725586]
[144.29248047 617.32586670]
[129.45004272 619.77874756]
[114.40961456 619.46234131]
[99.68347168 616.38739014]
[85.77317810 610.65863037]
[73.15251923 602.47125244]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 189]
[12 188]
[13 187]
[14 186]
[16 185]
[17 184]
[18 183]
[29 182]
[30 181]
[31 180]
[32 179]
[34 177]
[35 176]
[38 172]
[39 171]
[40 170]
[47 169]
[48 168]
[49 167]
[50 165]
[51 164]
[52 163]
[56 162]
[57 161]
[58 160]
[59 159]
[60 158]
[63 156]
[64 155]
[65 154]
[66 152]
[67 151]
[68 150]
[69 149]
[81 148]
[82 147]
[83 146]
[84 145]
[88 142]
[89 141]
[90 140]
[94 137]
[96 135]
[97 134]
[98 133]
[99 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
