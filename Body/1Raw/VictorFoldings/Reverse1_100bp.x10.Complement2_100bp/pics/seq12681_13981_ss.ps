%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAUGCGGGAGAGUCGGCUACUUGUCAACCUUAUCCAACAAUCGCCAUUGAUUCUAAUCAUACCAUUAAUCCUUCUACUCAUCUAUAAACUUCUUGACxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[90.38513947 598.09204102]
[75.47607422 595.89739990]
[61.47523499 590.32305908]
[49.13766479 581.66967773]
[39.12871552 570.40386963]
[31.98815346 557.13330078]
[28.10106277 542.57348633]
[27.67707062 527.50976562]
[30.73904037 512.75439453]
[37.12184525 499.10311890]
[46.48126984 487.29220581]
[58.31256866 477.95855713]
[71.97769928 471.60552979]
[86.73970795 468.57571411]
[79.38478088 455.62371826]
[87.52953339 442.06002808]
[87.97613525 427.06668091]
[80.62120819 414.11468506]
[88.76596069 400.55099487]
[89.21256256 385.55764771]
[89.65917206 370.56430054]
[90.10577393 355.57095337]
[90.55238342 340.57760620]
[90.99898529 325.58425903]
[78.95384216 313.84741211]
[79.12759399 296.69268799]
[91.90110016 284.74041748]
[92.12442780 269.74209595]
[84.57747650 256.90103149]
[92.51938629 243.21759033]
[92.74271393 228.21925354]
[92.96604156 213.22091675]
[93.18936920 198.22257996]
[93.30103302 183.22299194]
[93.30103302 168.22299194]
[83.72034454 153.52001953]
[93.05978394 137.65003967]
[92.83645630 122.65170288]
[92.61312866 107.65336609]
[91.27489471 92.71318054]
[88.82917023 77.91390991]
[86.38343811 63.11463547]
[83.93771362 48.31536484]
[70.22483063 41.29660034]
[63.35452652 27.70791626]
[65.77448273 12.85504436]
[76.34979248 2.40034413]
[73.90406799 -12.39892673]
[71.45834351 -27.19819832]
[69.01261139 -41.99746704]
[66.56688690 -56.79673767]
[50.17533112 -59.65325165]
[35.77454758 -67.93615723]
[25.09629059 -80.62912750]
[19.41770744 -96.18673706]
[19.40861320 -112.72262573]
[25.05252457 -128.23822021]
[35.65078354 -140.86425781]
[49.90899277 -149.08604431]
[47.02371979 -163.80593872]
[44.13844681 -178.52583313]
[41.25317383 -193.24572754]
[28.42059135 -202.07536316]
[25.70420456 -217.04452515]
[34.20100403 -229.22401428]
[31.31572914 -243.94390869]
[28.43045616 -258.66378784]
[24.99839592 -262.59674072]
[23.56178856 -267.01144409]
[23.96998405 -271.06710815]
[25.76047325 -274.10461426]
[23.53535461 -288.93865967]
[21.31023788 -303.77270508]
[19.08512115 -318.60675049]
[16.52928925 -333.38739014]
[13.64401627 -348.10729980]
[10.75874329 -362.82717896]
[7.87347078 -377.54705811]
[-2.37382793 -389.60125732]
[2.77087688 -403.57913208]
[-0.11439581 -418.29904175]
[-2.99966836 -433.01892090]
[-5.88494110 -447.73883057]
[-8.77021408 -462.45870972]
[-11.65548611 -477.17858887]
[-14.54075909 -491.89849854]
[-29.59923172 -492.48083496]
[-44.11734772 -496.52075195]
[-57.31215668 -503.80044556]
[-68.47208405 -513.92724609]
[-76.99529266 -526.35510254]
[-82.42212677 -540.41381836]
[-84.45993042 -555.34509277]
[-82.99880981 -570.34381104]
[-78.11756134 -584.60113525]
[-70.07941437 -597.34808350]
[-59.31786346 -607.89727783]
[-46.41326904 -615.67980957]
[-32.06155014 -620.27600098]
[-17.03668785 -621.43798828]
[-2.14894557 -619.10308838]
[11.79879570 -613.39715576]
[24.05435181 -604.62799072]
[33.95679855 -593.26849365]
[40.97210693 -579.93127441]
[44.72195053 -565.33551025]
[45.00410461 -550.26843262]
[41.80335617 -535.54254150]
[35.29231262 -521.95202637]
[25.82211113 -510.22970581]
[13.90346527 -501.00787354]
[0.17913251 -494.78375244]
[3.06440520 -480.06387329]
[5.94967794 -465.34399414]
[8.83495045 -450.62408447]
[11.72022247 -435.90420532]
[14.60549545 -421.18429565]
[17.49076843 -406.46441650]
[27.53169250 -395.46310425]
[22.59336281 -380.43234253]
[25.47863388 -365.71246338]
[28.36390686 -350.99255371]
[31.24917984 -336.27267456]
[33.95568466 -334.01275635]
[35.70204926 -330.32965088]
[35.83128357 -325.68890381]
[33.91916275 -320.83184814]
[36.14428329 -305.99780273]
[38.36940002 -291.16375732]
[40.59451675 -276.32974243]
[43.15034866 -261.54907227]
[46.03562164 -246.82917786]
[48.92089462 -232.10929871]
[61.38693237 -224.03875732]
[64.52269745 -209.15180969]
[55.97306442 -196.13099670]
[58.85833740 -181.41110229]
[61.74361038 -166.69120789]
[64.62888336 -151.97131348]
[78.02434540 -150.57234192]
[90.49913788 -145.45098877]
[101.03972626 -137.01307678]
[108.78688049 -125.93434906]
[113.10563660 -113.10626221]
[113.63739777 -99.56433105]
[110.32965088 -86.40448761]
[103.44100189 -74.69441986]
[93.52096558 -65.38694000]
[81.36615753 -59.24246597]
[83.81188202 -44.44319534]
[86.25761414 -29.64392471]
[88.70333862 -14.84465408]
[91.14906311 -0.04538321]
[104.52571869 6.45101547]
[111.59566498 19.73558617]
[109.46258545 34.81216812]
[98.73698425 45.86964035]
[101.18270874 60.66891098]
[103.62844086 75.46817780]
[106.07416534 90.26744843]
[112.83032990 76.87512970]
[125.32306671 68.57263184]
[140.28680420 67.53019714]
[153.81004333 74.02032471]
[162.35786438 86.34651184]
[163.69587708 101.28671265]
[157.47431946 114.93560791]
[145.31950378 123.72539520]
[130.40866089 125.35845947]
[116.63946533 119.40791321]
[107.61146545 107.43003845]
[107.83479309 122.42837524]
[108.05812073 137.42671204]
[116.75275421 146.95384216]
[116.62998962 159.45059204]
[108.30103302 168.22299194]
[108.30103302 183.22299194]
[111.43044281 191.80462646]
[108.18770599 198.44590759]
[107.96437836 213.44424438]
[107.74105072 228.44258118]
[107.51772308 243.44091797]
[115.04869843 257.35476685]
[107.12277222 269.96542358]
[106.89944458 284.96374512]
[117.33081055 293.48437500]
[120.89810944 306.27050781]
[116.51483154 318.59402466]
[105.99234009 326.03085327]
[105.54573059 341.02420044]
[105.09912872 356.01754761]
[104.65251923 371.01089478]
[104.20590973 386.00427246]
[103.75930786 400.99761963]
[111.08229828 415.02203369]
[102.96949005 427.51330566]
[102.52288055 442.50665283]
[109.84587097 456.53106689]
[101.73306274 469.02233887]
[116.28856659 472.92541504]
[129.55133057 480.08053589]
[140.80610657 490.10183716]
[149.44592285 502.44891357]
[155.00488281 516.45587158]
[157.18316650 531.36730957]
[155.86331177 546.37915039]
[151.11650085 560.68176270]
[143.19871521 573.50384521]
[132.53697205 584.15386963]
[119.70620728 592.05755615]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 199]
[16 197]
[17 196]
[19 194]
[20 193]
[21 192]
[22 191]
[23 190]
[24 189]
[27 185]
[28 184]
[30 182]
[31 181]
[32 180]
[33 179]
[34 177]
[35 176]
[37 173]
[38 172]
[39 171]
[40 160]
[41 159]
[42 158]
[43 157]
[47 153]
[48 152]
[49 151]
[50 150]
[51 149]
[59 139]
[60 138]
[61 137]
[62 136]
[65 133]
[66 132]
[67 131]
[71 130]
[72 129]
[73 128]
[74 127]
[75 123]
[76 122]
[77 121]
[78 120]
[80 118]
[81 117]
[82 116]
[83 115]
[84 114]
[85 113]
[86 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
