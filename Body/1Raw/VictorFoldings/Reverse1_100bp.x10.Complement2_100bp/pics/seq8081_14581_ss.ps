%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[50.68642807 711.92681885]
[36.09643936 715.44177246]
[21.28019524 717.82958984]
[6.32463837 719.07623291]
[-8.68246365 719.17431641]
[-23.65304375 718.12335205]
[-38.49924469 715.92950439]
[-53.13394165 712.60559082]
[-67.47126007 708.17114258]
[-81.42704773 702.65222168]
[-94.91941071 696.08117676]
[-107.86917877 688.49658203]
[-120.20034790 679.94287109]
[-131.84054565 670.47039795]
[-142.72148132 660.13464355]
[-152.77928162 648.99627686]
[-161.95494080 637.12066650]
[-170.19459534 624.57751465]
[-177.44990540 611.44036865]
[-183.67826843 597.78643799]
[-188.84317017 583.69580078]
[-192.91427612 569.25109863]
[-195.86769104 554.53717041]
[-197.68609619 539.64031982]
[-198.35881042 524.64794922]
[-197.88191223 509.64813232]
[-196.25816345 494.72882080]
[-193.49710083 479.97756958]
[-189.61495972 465.48095703]
[-184.63447571 451.32406616]
[-178.58491516 437.58996582]
[-171.50175476 424.35925293]
[-163.42657471 411.70959473]
[-154.40675354 399.71517944]
[-144.49523926 388.44644165]
[-133.75019836 377.96948242]
[-122.23465729 368.34579468]
[-110.01622772 359.63186646]
[-97.16659546 351.87881470]
[-83.76117706 345.13214111]
[-69.87863159 339.43145752]
[-55.60044098 334.81021118]
[-41.01039124 331.29550171]
[-26.19409943 328.90798950]
[-11.23851776 327.66165161]
[3.76858616 327.56381226]
[18.73914528 328.61505127]
[33.58530426 330.80920410]
[36.90756607 316.18176270]
[40.22982407 301.55429077]
[43.55208206 286.92681885]
[41.81003571 282.48001099]
[42.84296799 276.89160156]
[47.19715500 271.91641235]
[42.89355087 257.65710449]
[53.84016037 246.23420715]
[57.59646225 231.71214294]
[61.35276031 217.19009399]
[65.10906219 202.66802979]
[68.86536407 188.14596558]
[72.62166595 173.62391663]
[76.37796783 159.10185242]
[66.96697998 149.63214111]
[63.43578720 136.64465332]
[66.80995941 123.50370026]
[76.31172943 113.66831970]
[89.53617096 109.78180695]
[86.18740082 96.20692444]
[95.99930573 86.24610138]
[99.97139740 71.78157043]
[103.94349670 57.31705093]
[98.25379944 45.74163818]
[101.85995483 33.77587509]
[112.30652618 27.67705345]
[116.49353790 13.27327061]
[120.68054962 -1.13051116]
[124.86756134 -15.53429317]
[115.63398743 -25.76815796]
[112.68627930 -39.12216568]
[116.68993378 -52.08520126]
[126.49700928 -61.30286789]
[139.47262573 -64.44541168]
[143.87362671 -78.78525543]
[148.27461243 -93.12510681]
[152.67561340 -107.46495056]
[157.07661438 -121.80480194]
[161.04870605 -136.26931763]
[164.58837891 -150.84570312]
[168.12805176 -165.42207336]
[171.66772461 -179.99844360]
[175.20739746 -194.57482910]
[178.74707031 -209.15119934]
[182.28674316 -223.72756958]
[168.37351990 -229.40911865]
[155.46255493 -237.10095215]
[143.84225464 -246.63124084]
[133.77223206 -257.78704834]
[125.47745514 -270.31918335]
[119.14324188 -283.94766235]
[114.91108704 -298.36801147]
[112.87554932 -313.25808716]
[113.08209991 -328.28524780]
[115.52612305 -343.11373901]
[120.15301514 -357.41232300]
[126.85941315 -370.86154175]
[135.49549866 -383.16098022]
[145.86833191 -394.03579712]
[157.74618530 -403.24310303]
[170.86369324 -410.57717896]
[184.92781067 -415.87417603]
[199.62434387 -419.01577759]
[214.62496948 -419.93176270]
[229.59454346 -418.60168457]
[244.19868469 -415.05526733]
[258.11108398 -409.37173462]
[271.02096558 -401.67807007]
[282.63992310 -392.14614868]
[292.70834351 -380.98889160]
[301.00134277 -368.45556641]
[307.33361816 -354.82617188]
[311.56369019 -340.40524292]
[313.59713745 -325.51486206]
[313.38842773 -310.48776245]
[310.94229126 -295.65960693]
[306.31338501 -281.36169434]
[299.60504150 -267.91339111]
[290.96722412 -255.61521912]
[280.59283447 -244.74185181]
[268.71368408 -235.53625488]
[255.59512329 -228.20404053]
[241.53025818 -222.90905762]
[226.83326721 -219.76956177]
[211.83251953 -218.85569763]
[196.86312866 -220.18789673]
[193.32345581 -205.61152649]
[189.78378296 -191.03515625]
[186.24411011 -176.45877075]
[182.70443726 -161.88240051]
[179.16476440 -147.30603027]
[175.62509155 -132.72964478]
[176.96667480 -130.26829529]
[177.41412354 -127.12721252]
[176.70365906 -123.64430237]
[174.69856262 -120.24664307]
[171.41645813 -117.40380096]
[167.01545715 -103.06395721]
[162.61447144 -88.72410583]
[158.21347046 -74.38426208]
[153.81246948 -60.04441071]
[164.09281921 -47.24629211]
[164.72543335 -30.67639160]
[155.26304626 -16.85739899]
[139.27134705 -11.34728241]
[135.08433533 3.05650020]
[130.89732361 17.46028137]
[126.71031189 31.86406326]
[131.80609131 48.65691757]
[118.40802002 61.28914642]
[114.43592072 75.75366974]
[110.46382904 90.21819305]
[113.81259918 103.79307556]
[104.00069427 113.75389862]
[114.74225616 126.81969452]
[115.57118225 143.54734802]
[106.35864258 157.33468628]
[90.90002441 162.85815430]
[87.14372253 177.38020325]
[83.38742065 191.90226746]
[79.63111877 206.42433167]
[75.87482452 220.94638062]
[72.11852264 235.46844482]
[68.36222076 249.99050903]
[72.39714813 265.28854370]
[61.71921539 275.67269897]
[58.17954254 290.24908447]
[54.85728455 304.87655640]
[51.53502274 319.50399780]
[48.21276474 334.13146973]
[62.55016327 338.56564331]
[76.50605774 344.08428955]
[89.99855042 350.65509033]
[102.94845581 358.23947144]
[115.27978516 366.79290771]
[126.92017365 376.26516724]
[137.80130005 386.60073853]
[147.85931396 397.73892212]
[157.03520203 409.61434937]
[165.27508545 422.15734863]
[172.53063965 435.29431152]
[178.75927734 448.94815063]
[183.92443848 463.03869629]
[187.99580383 477.48330688]
[190.94950867 492.19720459]
[192.76820374 507.09399414]
[193.44120789 522.08630371]
[192.96456909 537.08618164]
[191.34111023 552.00555420]
[188.58033752 566.75683594]
[184.69845581 581.25354004]
[179.71826172 595.41052246]
[173.66894531 609.14471436]
[166.58604431 622.37554932]
[158.51110840 635.02539062]
[149.49151611 647.01995850]
[139.58021545 658.28887939]
[128.83535767 668.76605225]
[117.32000732 678.38995361]
[105.10173798 687.10412598]
[92.25225830 694.85742188]
[78.84696198 701.60430908]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 178]
[49 177]
[50 176]
[51 175]
[54 174]
[56 172]
[57 171]
[58 170]
[59 169]
[60 168]
[61 167]
[62 166]
[67 162]
[69 160]
[70 159]
[71 158]
[74 156]
[75 155]
[76 154]
[77 153]
[82 149]
[83 148]
[84 147]
[85 146]
[86 145]
[87 140]
[88 139]
[89 138]
[90 137]
[91 136]
[92 135]
[93 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
