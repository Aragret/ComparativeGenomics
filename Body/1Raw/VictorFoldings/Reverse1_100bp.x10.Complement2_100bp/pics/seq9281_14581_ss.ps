%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[70.28054810 678.83953857]
[59.31535721 668.57214355]
[49.78418350 656.96130371]
[41.85012054 644.20568848]
[35.64892960 630.52355957]
[31.28672600 616.14910889]
[28.83814621 601.32818604]
[28.34509087 586.31445312]
[29.81599808 571.36480713]
[33.22570038 556.73510742]
[38.51584625 542.67559814]
[45.59592056 529.42694092]
[54.34477234 517.21575928]
[64.61270142 506.25103760]
[76.22399902 496.72042847]
[88.97998810 488.78695679]
[102.66239929 482.58642578]
[117.03710175 478.22491455]
[114.59137726 463.42562866]
[112.14565277 448.62637329]
[109.69992065 433.82708740]
[100.05209351 426.53012085]
[97.89340210 414.22061157]
[104.91829681 403.40332031]
[102.69318390 388.56927490]
[100.46806335 373.73522949]
[98.24295044 358.90118408]
[88.70326996 347.46249390]
[94.30783844 332.66723633]
[92.08271790 317.83319092]
[89.85760498 302.99914551]
[87.63248444 288.16510010]
[85.29699707 273.34805298]
[82.85127258 258.54876709]
[80.40554047 243.74949646]
[77.95981598 228.95022583]
[73.39702606 243.23942566]
[65.04111481 255.69650269]
[53.55105972 265.33905029]
[39.83301544 271.40661621]
[24.96884727 273.42065430]
[10.13080120 271.22238159]
[-3.51093078 264.98516846]
[-14.88050461 255.20083618]
[-23.08126831 242.64108276]
[-27.46647453 228.29640198]
[-27.69029045 213.29806519]
[-23.73506165 198.82893372]
[-15.91271591 186.03005981]
[-4.84015608 175.91085815]
[8.60939121 169.26933289]
[23.37523651 166.62930298]
[38.29288483 168.19894409]
[52.18586731 173.85447693]
[63.95852661 183.14987183]
[72.68241882 195.35206604]
[77.67023468 209.50215149]
[79.67424774 194.63662720]
[81.67826080 179.77110291]
[83.68227386 164.90556335]
[85.68628693 150.04003906]
[87.69029999 135.17451477]
[89.69431305 120.30898285]
[81.21874237 112.88124084]
[77.34220886 102.29921722]
[79.01396942 91.15417480]
[85.82466125 82.17524719]
[96.10652161 77.56112671]
[98.55224609 62.76185989]
[100.99797821 47.96258926]
[103.44370270 33.16331863]
[90.32899475 27.08510208]
[79.24657440 17.82391548]
[70.94947815 6.01724339]
[65.99935913 -7.52475071]
[64.72847748 -21.87481499]
[67.21737671 -36.05209732]
[73.28984833 -49.08919907]
[82.52535248 -60.09816742]
[94.28816986 -68.33099365]
[107.77114868 -73.23041534]
[122.05107880 -74.46765900]
[124.71687317 -89.22887421]
[127.38266754 -103.99008942]
[122.22109985 -118.94564819]
[132.09712219 -130.09524536]
[134.76290894 -144.85646057]
[137.42871094 -159.61767578]
[138.65568542 -174.56741333]
[138.43235779 -189.56575012]
[138.20903015 -204.56408691]
[137.98570251 -219.56242371]
[137.76237488 -234.56076050]
[137.53904724 -249.55909729]
[134.48187256 -255.42127991]
[134.79684448 -261.09561157]
[137.53904724 -265.00576782]
[137.76237488 -280.00408936]
[137.98570251 -295.00244141]
[138.20903015 -310.00076294]
[124.73371124 -317.25848389]
[116.18436432 -329.95364380]
[114.52555084 -345.16900635]
[120.13846588 -359.40817261]
[131.73329163 -369.39907837]
[146.64562988 -372.84591675]
[161.44874573 -368.95663452]
[172.74096680 -358.62490845]
[177.92742920 -344.22494507]
[175.81634521 -329.06573486]
[166.89279175 -316.63073730]
[153.20736694 -309.77743530]
[152.98403931 -294.77911377]
[152.76071167 -279.78076172]
[152.53738403 -264.78244019]
[152.53738403 -249.78242493]
[152.76071167 -234.78408813]
[152.98403931 -219.78575134]
[153.20736694 -204.78741455]
[153.43069458 -189.78907776]
[153.65402222 -174.79074097]
[161.31520081 -187.68672180]
[173.51206970 -196.41807556]
[188.18922424 -199.51342773]
[202.87330627 -196.45114136]
[215.08979797 -187.74726868]
[222.78001404 -174.86857605]
[224.64799500 -159.98535156]
[220.37896729 -145.60566711]
[210.69233704 -134.15275574]
[197.22047424 -127.55662537]
[182.23361206 -126.92886353]
[168.25732422 -132.37524414]
[157.64682007 -142.97795105]
[152.18992615 -156.95188904]
[149.52412415 -142.19067383]
[146.85833740 -127.42945099]
[152.21058655 -113.52971649]
[142.14389038 -101.32429504]
[139.47808838 -86.56307983]
[136.81230164 -71.80185699]
[150.81945801 -64.94296265]
[162.34017944 -54.40867615]
[170.43722534 -41.04492950]
[174.44874573 -25.92826271]
[174.04243469 -10.27913189]
[169.24295044 4.63664293]
[160.43067932 17.61025429]
[148.31155396 27.58787727]
[133.86047363 33.75626755]
[118.24297333 35.60904312]
[115.79724884 50.40831757]
[113.35151672 65.20758820]
[110.90579224 80.00685883]
[122.02105713 94.19179535]
[119.34777832 112.01355743]
[104.55983734 122.31299591]
[102.55582428 137.17852783]
[100.55181122 152.04405212]
[98.54779816 166.90957642]
[96.54378510 181.77511597]
[94.53977203 196.64064026]
[92.53575897 211.50616455]
[92.75908661 226.50450134]
[95.20481110 241.30377197]
[97.65054321 256.10305786]
[100.09626770 270.90231323]
[104.58302307 278.85888672]
[102.46652985 285.94000244]
[104.69164276 300.77404785]
[106.91676331 315.60809326]
[109.14188385 330.44213867]
[118.84071350 342.94186401]
[113.07698822 356.67608643]
[115.30210876 371.51013184]
[117.52722931 386.34417725]
[119.75234222 401.17822266]
[131.55438232 415.31304932]
[124.49919128 431.38137817]
[126.94492340 446.18063354]
[129.39065552 460.97991943]
[131.83638000 475.77917480]
[146.85003662 475.28399658]
[161.79986572 476.75274658]
[176.43008423 480.16036987]
[190.49032593 485.44851685]
[203.74002075 492.52670288]
[215.95243835 501.27380371]
[226.91860962 511.54016113]
[236.45089722 523.15008545]
[244.38616943 535.90496826]
[250.58865356 549.58648682]
[254.95223999 563.96057129]
[257.40222168 578.78125000]
[257.89669800 593.79492188]
[256.42721558 608.74468994]
[253.01892090 623.37475586]
[247.73010254 637.43475342]
[240.65129089 650.68408203]
[231.90361023 662.89611816]
[221.63671875 673.86175537]
[210.02633667 683.39349365]
[197.27108765 691.32818604]
[183.58927917 697.53002930]
[169.21498108 701.89288330]
[154.39418030 704.34216309]
[139.38049316 704.83593750]
[124.43078613 703.36578369]
[109.80089569 699.95672607]
[95.74114990 694.66729736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 182]
[19 181]
[20 180]
[21 179]
[24 177]
[25 176]
[26 175]
[27 174]
[29 172]
[30 171]
[31 170]
[32 169]
[33 167]
[34 166]
[35 165]
[36 164]
[57 163]
[58 162]
[59 161]
[60 160]
[61 159]
[62 158]
[63 157]
[68 154]
[69 153]
[70 152]
[71 151]
[82 141]
[83 140]
[84 139]
[86 137]
[87 136]
[88 135]
[89 121]
[90 120]
[91 119]
[92 118]
[93 117]
[94 116]
[97 115]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
