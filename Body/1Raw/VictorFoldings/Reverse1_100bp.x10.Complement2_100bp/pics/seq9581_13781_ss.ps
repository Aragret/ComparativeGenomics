%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[132.65603638 534.38867188]
[145.60140991 526.62207031]
[141.62931824 512.15753174]
[137.65721130 497.69299316]
[133.68511963 483.22848511]
[129.71302795 468.76394653]
[125.74092865 454.29943848]
[115.38631439 448.04574585]
[111.95871735 436.02761841]
[117.82012177 424.53820801]
[114.06381989 410.01614380]
[110.30751801 395.49407959]
[99.62958527 385.10992432]
[103.66451263 369.81188965]
[99.90821838 355.28982544]
[96.32145691 369.85467529]
[88.25528717 382.50131226]
[76.56095123 391.89505005]
[62.47257233 397.04458618]
[47.47694016 397.40643311]
[33.15657043 392.94247437]
[21.02273369 384.12374878]
[12.35593891 371.88092041]
[8.07081318 357.50601196]
[8.61957741 342.51605225]
[13.94431877 328.49298096]
[23.48310471 316.91662598]
[36.22928619 309.00872803]
[50.83772278 305.60382080]
[65.76675415 307.06118774]
[79.44088745 313.22705078]
[90.41706085 323.45074463]
[97.53697968 336.65350342]
[97.53697968 321.65350342]
[97.53697968 306.65350342]
[97.53697968 291.65350342]
[89.79968262 278.92620850]
[97.53697968 265.12603760]
[97.53697968 250.12603760]
[97.42531586 235.12646484]
[97.20198822 220.12812805]
[96.97866058 205.12979126]
[96.53205109 190.13642883]
[95.86226654 175.15139771]
[87.56438446 162.78230286]
[94.67775726 148.65040588]
[86.37986755 136.28132629]
[93.49324036 122.14942932]
[92.82345581 107.16439056]
[89.34608459 99.89249420]
[92.25693512 91.95159912]
[84.11218262 78.38790894]
[91.46711731 65.43591309]
[91.02050781 50.44256592]
[90.57390594 35.44921494]
[89.23567200 20.50902939]
[87.01055145 5.67498589]
[84.78543854 -9.15905762]
[72.98339844 -23.29388809]
[80.03858185 -39.36221695]
[77.59285736 -54.16148758]
[75.14713287 -68.96076202]
[72.70140076 -83.76003265]
[70.25567627 -98.55930328]
[60.66270065 -87.02783203]
[45.73869324 -85.51984406]
[34.03280258 -94.89919281]
[32.25069427 -109.79295349]
[41.41324234 -121.66930389]
[56.27171707 -123.72493744]
[68.31402588 -114.78309631]
[67.19837952 -129.74154663]
[58.45610046 -142.92802429]
[65.22535706 -156.19552612]
[64.10971069 -171.15397644]
[62.99406052 -186.11242676]
[61.87841034 -201.07087708]
[60.42899323 -216.00068665]
[58.64652634 -230.89440918]
[56.86405945 -245.78811646]
[55.08159637 -260.68185425]
[53.29912949 -275.57556152]
[51.51666260 -290.46926880]
[49.62337112 -305.34930420]
[47.61935806 -320.21484375]
[40.46744919 -307.02960205]
[27.73305321 -299.10275269]
[12.74491692 -298.50631714]
[-0.57910103 -305.39617920]
[-8.75613308 -317.97140503]
[-9.64872265 -332.94482422]
[-3.02354860 -346.40243530]
[9.38758373 -354.82644653]
[24.34043312 -356.01483154]
[37.92636490 -349.65695190]
[46.59373093 -337.41558838]
[46.81705856 -352.41390991]
[47.04038620 -367.41226196]
[47.26371384 -382.41058350]
[47.48704529 -397.40893555]
[34.01173019 -404.66665649]
[25.46237755 -417.36181641]
[23.80356598 -432.57717896]
[29.41647911 -446.81634521]
[41.01131058 -456.80725098]
[55.92364883 -460.25408936]
[70.72675323 -456.36477661]
[82.01897430 -446.03308105]
[87.20544434 -431.63311768]
[85.09435272 -416.47387695]
[76.17080688 -404.03890991]
[62.48538208 -397.18560791]
[62.26205444 -382.18725586]
[62.03872681 -367.18893433]
[61.81539917 -352.19058228]
[61.59207153 -337.19226074]
[62.48488617 -322.21884155]
[64.48889923 -307.35333252]
[68.49784851 -301.14443970]
[66.41037750 -292.25173950]
[68.19284821 -277.35803223]
[69.97531128 -262.46429443]
[71.75778198 -247.57058716]
[73.54024506 -232.67686462]
[75.32270813 -217.78315735]
[77.85363770 -215.32820129]
[79.32122803 -211.52542114]
[79.10494232 -206.88790894]
[76.83686829 -202.18652344]
[77.95251465 -187.22807312]
[79.06816101 -172.26962280]
[80.18381500 -157.31117249]
[88.84629059 -145.19462585]
[82.15682983 -130.85719299]
[83.27248383 -115.89874268]
[85.05494690 -101.00502777]
[87.50067139 -86.20575714]
[89.94640350 -71.40648651]
[92.39212799 -56.60721588]
[94.83785248 -41.80794525]
[104.48567963 -34.51095963]
[106.64437866 -22.20145798]
[99.61947632 -11.38417435]
[101.84459686 3.44986892]
[104.06970978 18.28391266]
[112.16059875 5.65309381]
[126.08805847 0.08300193]
[140.65748596 3.65114284]
[150.43486023 15.02668858]
[151.77345276 29.96684265]
[144.17399597 42.89929581]
[130.47091675 49.00056076]
[115.77510834 45.99502182]
[105.56725311 35.00260925]
[106.01386261 49.99596024]
[106.46046448 64.98931122]
[114.57327271 77.48056793]
[107.25028992 91.50498962]
[107.80849457 106.49460602]
[108.47827911 121.47964478]
[116.82407379 134.92056274]
[109.66279602 147.98062134]
[118.00859070 161.42153931]
[110.84730530 174.48161316]
[111.51708984 189.46664429]
[114.74745941 195.23521423]
[114.60156250 200.91638184]
[111.97699738 204.90646362]
[112.20032501 219.90480042]
[112.42365265 234.90313721]
[115.68048096 243.43724060]
[112.53697968 250.12603760]
[112.53697968 265.12603760]
[120.27428436 278.92620850]
[112.53697968 291.65350342]
[112.53697968 306.65350342]
[112.53697968 321.65350342]
[112.53697968 336.65350342]
[114.43027496 351.53353882]
[118.18657684 366.05557251]
[129.13317871 377.47848511]
[124.82958221 391.73779297]
[128.58587646 406.25985718]
[132.34217834 420.78192139]
[145.55068970 433.61221313]
[140.20545959 450.32733154]
[144.17755127 464.79187012]
[148.14964294 479.25637817]
[152.12174988 493.72091675]
[156.09384155 508.18542480]
[160.06593323 522.64996338]
[175.16223145 522.71606445]
[189.68057251 526.85369873]
[202.54360962 534.75592041]
[212.79679871 545.83630371]
[219.67930603 559.27258301]
[222.68040466 574.06768799]
[221.57737732 589.12377930]
[216.45207214 603.32360840]
[207.68484497 615.61334229]
[195.92626953 625.08111572]
[182.04890442 631.02429199]
[167.08255005 633.00183105]
[152.13780212 630.86706543]
[138.32368469 624.77838135]
[126.66525269 615.18756104]
[118.02767944 602.80633545]
[113.05191040 588.55346680]
[112.10718536 573.48663330]
[115.26360321 558.72381592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 191]
[3 190]
[4 189]
[5 188]
[6 187]
[7 186]
[10 184]
[11 183]
[12 182]
[14 180]
[15 179]
[33 178]
[34 177]
[35 176]
[36 175]
[38 173]
[39 172]
[40 170]
[41 169]
[42 168]
[43 165]
[44 164]
[46 162]
[48 160]
[49 159]
[51 158]
[53 156]
[54 155]
[55 154]
[56 145]
[57 144]
[58 143]
[60 140]
[61 139]
[62 138]
[63 137]
[64 136]
[71 135]
[72 134]
[74 132]
[75 131]
[76 130]
[77 129]
[78 125]
[79 124]
[80 123]
[81 122]
[82 121]
[83 120]
[84 118]
[85 117]
[96 116]
[97 115]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
