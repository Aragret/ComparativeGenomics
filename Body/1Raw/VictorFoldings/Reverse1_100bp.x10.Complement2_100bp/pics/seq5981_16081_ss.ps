%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[89.98522186 625.94525146]
[77.09977722 618.23516846]
[65.15862274 609.13085938]
[54.31194305 598.74670410]
[44.69614029 587.21343994]
[36.43214417 574.67608643]
[29.62387848 561.29223633]
[24.35696793 547.23022461]
[20.69765091 532.66693115]
[18.69194603 517.78546143]
[18.36507797 502.77304077]
[19.72115517 487.81842041]
[22.74312401 473.10964966]
[27.39298058 458.83175659]
[33.61225128 445.16424561]
[41.32271576 432.27902222]
[50.42741013 420.33813477]
[60.81183624 409.49179077]
[72.34539032 399.87631226]
[84.88304138 391.61270142]
[98.26709747 384.80484009]
[112.32924652 379.53833008]
[126.89264679 375.87945557]
[124.88863373 361.01394653]
[122.88462067 346.14840698]
[120.88060760 331.28286743]
[118.87659454 316.41735840]
[116.87258148 301.55181885]
[102.56164551 299.96377563]
[89.03988647 294.98788452]
[77.09753418 286.91012573]
[67.43366241 276.19787598]
[60.61528015 263.47286987]
[57.04406738 249.47518921]
[56.93271255 235.02008057]
[60.29224396 220.95062256]
[66.93112946 208.08847046]
[76.46617889 197.18588257]
[88.34469604 188.88174438]
[101.87644196 183.66409302]
[100.09397888 168.77037048]
[98.31150818 153.87666321]
[88.99913788 146.15615845]
[87.39224243 133.76254272]
[94.89315033 123.26972198]
[93.33262634 108.35112000]
[90.11935425 93.69933319]
[85.29335785 79.49687195]
[80.46736145 65.29441833]
[75.64135742 51.09196472]
[70.81536102 36.88950729]
[65.98936462 22.68705368]
[61.16336823 8.48459721]
[56.33737183 -5.71785831]
[51.62520599 -10.35542488]
[50.17948914 -15.85150814]
[51.58596802 -20.41559029]
[47.18497086 -34.75543976]
[42.78397369 -49.09528732]
[27.68384552 -50.59921646]
[14.34585857 -57.75052261]
[4.78779888 -69.43200684]
[0.44206059 -83.84388733]
[1.94105268 -98.78101349]
[9.02536678 -111.97032166]
[20.58803177 -121.41670227]
[16.18703270 -135.75654602]
[11.78603554 -150.09640503]
[7.38503742 -164.43624878]
[-7.38552475 -161.72570801]
[-22.37088966 -160.74829102]
[-37.36840057 -161.51721191]
[-52.17522812 -164.02207947]
[-66.59113312 -168.22900391]
[-80.42115021 -174.08111572]
[-93.47824860 -181.49925232]
[-105.58583832 -190.38308716]
[-116.58019257 -200.61248779]
[-126.31261444 -212.04911804]
[-134.65148926 -224.53831482]
[-141.48403931 -237.91114807]
[-146.71786499 -251.98678589]
[-150.28218079 -266.57485962]
[-152.12878418 -281.47811890]
[-152.23271179 -296.49496460]
[-150.59254456 -311.42233276]
[-147.23046875 -326.05834961]
[-142.19195557 -340.20507812]
[-135.54513550 -353.67120361]
[-127.37991333 -366.27459717]
[-117.80670929 -377.84481812]
[-106.95498657 -388.22540283]
[-94.97150421 -397.27597046]
[-82.01832581 -404.87411499]
[-68.27062225 -410.91705322]
[-53.91432953 -415.32308960]
[-39.14358521 -418.03265381]
[-24.15815353 -419.00906372]
[-9.16069698 -418.23913574]
[5.64596462 -415.73330688]
[20.06158638 -411.52539062]
[33.89121246 -405.67236328]
[46.94781494 -398.25335693]
[59.05482101 -389.36871338]
[70.04849243 -379.13858032]
[79.78015137 -367.70129395]
[88.11818695 -355.21154785]
[94.94984436 -341.83825684]
[100.18273163 -327.76226807]
[103.74607086 -313.17395020]
[105.59168243 -298.27059937]
[105.69460297 -283.25375366]
[104.05344391 -268.32647705]
[100.69039154 -253.69068909]
[95.65093231 -239.54429626]
[89.00321960 -226.07862854]
[80.83715820 -213.47576904]
[71.26317596 -201.90617371]
[60.41075897 -191.52630615]
[48.42667389 -182.47654724]
[35.47298813 -174.87927246]
[21.72488403 -168.83724976]
[26.12588310 -154.49739075]
[30.52688026 -140.15754700]
[34.92787933 -125.81770325]
[49.79901123 -124.48403931]
[63.06250763 -117.53961182]
[72.68277740 -106.01506042]
[77.16992188 -91.64658356]
[75.81046295 -76.61443329]
[68.78054047 -63.21207428]
[57.12382126 -53.49628448]
[61.52481842 -39.15643692]
[65.92581940 -24.81658936]
[70.53982544 -10.54385567]
[75.36582184 3.65859985]
[80.19181824 17.86105537]
[85.01782227 32.06351089]
[89.84381866 46.26596832]
[94.66981506 60.46842194]
[99.49581146 74.67087555]
[104.32180786 88.87333679]
[107.15645599 74.14360809]
[115.05882263 61.39399719]
[126.98921204 52.30192566]
[141.37797546 48.06361389]
[156.33204651 49.23668671]
[169.88392639 55.66680527]
[180.25065613 66.50797272]
[186.06829834 80.33385468]
[186.57145691 95.32541656]
[181.69392395 109.51025391]
[172.07742310 121.02211761]
[158.98716736 128.34642029]
[144.14541626 130.51951599]
[129.50485229 127.25550079]
[116.99168396 118.98381805]
[108.25123596 106.79059601]
[109.81175232 121.70919800]
[120.97087097 136.35691833]
[113.20523071 152.09419250]
[114.98769379 166.98791504]
[116.77016449 181.88162231]
[132.27046204 184.05758667]
[146.67163086 190.16102600]
[158.99748230 199.77200317]
[168.41412354 212.23300171]
[174.28637695 226.69390869]
[176.22061157 242.17010498]
[174.09114075 257.60940552]
[168.04832458 271.96365356]
[158.50802612 284.25979614]
[146.12298584 293.66601562]
[131.73811340 299.54782104]
[133.74212646 314.41333008]
[135.74613953 329.27886963]
[137.75015259 344.14437866]
[139.75416565 359.00991821]
[141.75817871 373.87545776]
[156.77058411 373.54724121]
[171.72534180 374.90197754]
[186.43437195 377.92260742]
[200.71270752 382.57119751]
[214.38076782 388.78924561]
[227.26666260 396.49853516]
[239.20835876 405.60217285]
[250.05566406 415.98562622]
[259.67214966 427.51831055]
[267.93692017 440.05520630]
[274.74597168 453.43865967]
[280.01373291 467.50033569]
[283.67391968 482.06341553]
[285.68051147 496.94473267]
[286.00827026 511.95715332]
[284.65307617 526.91186523]
[281.63198853 541.62078857]
[276.98300171 555.89898682]
[270.76455688 569.56689453]
[263.05484009 582.45257568]
[253.95086670 594.39398193]
[243.56709290 605.24096680]
[232.03410339 614.85711670]
[219.49696350 623.12145996]
[206.11331177 629.93017578]
[192.05146790 635.19750977]
[177.48829651 638.85723877]
[162.60691833 640.86340332]
[147.59449768 641.19067383]
[132.63981628 639.83508301]
[117.93096161 636.81353760]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 179]
[24 178]
[25 177]
[26 176]
[27 175]
[28 174]
[40 163]
[41 162]
[42 161]
[45 159]
[46 158]
[47 142]
[48 141]
[49 140]
[50 139]
[51 138]
[52 137]
[53 136]
[54 135]
[57 134]
[58 133]
[59 132]
[66 125]
[67 124]
[68 123]
[69 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
