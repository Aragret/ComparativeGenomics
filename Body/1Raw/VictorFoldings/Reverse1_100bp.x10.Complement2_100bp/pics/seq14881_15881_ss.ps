%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUAAGUCGGUAUUAAAUGCAGAGCUCACUACACCCGCUAACUACUUUUCCGCCAACUCCGCAGACCACUCAUCACGUACCGAUCCUUAUCAGGACACCAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[67.81104279 776.56384277]
[52.98535156 774.10284424]
[38.69207382 769.45959473]
[25.25053024 762.73779297]
[12.96100426 754.08764648]
[2.09805369 743.70233154]
[-7.09564161 731.81396484]
[-14.41469097 718.68804932]
[-19.69558334 704.61791992]
[-22.82034111 689.91778564]
[-23.71915817 674.91613770]
[-22.37195206 659.94805908]
[-18.80882263 645.34802246]
[-13.10936928 631.44213867]
[-5.40092087 618.54107666]
[4.14431334 606.93304443]
[15.31308937 596.87738037]
[27.85589218 588.59875488]
[41.49251175 582.28210449]
[55.91830063 578.06848145]
[70.81098175 576.05212402]
[71.03430939 561.05377197]
[71.25763702 546.05548096]
[71.48096466 531.05712891]
[69.30071259 528.28601074]
[68.35433197 524.32128906]
[69.18825531 519.75421143]
[72.06410217 515.39801025]
[72.95692444 500.42462158]
[73.84973907 485.45120239]
[74.74255371 470.47778320]
[67.77651215 457.31256104]
[76.32149506 443.99737549]
[77.21430969 429.02398682]
[69.42226410 419.77139282]
[70.04354095 407.28948975]
[79.28981781 398.29675293]
[71.63639832 388.92916870]
[72.44344330 376.45791626]
[81.82258606 367.60385132]
[83.16082001 352.66366577]
[84.49905396 337.72348022]
[85.83728790 322.78329468]
[78.32418060 313.30279541]
[79.31681061 300.84494019]
[88.82674408 292.13150024]
[90.38726807 277.21289062]
[91.94779205 262.29428101]
[93.50830841 247.37567139]
[95.06883240 232.45707703]
[96.62935638 217.53846741]
[97.07596588 202.54512024]
[96.40618134 187.56007385]
[95.73639679 172.57504272]
[95.06660461 157.58999634]
[94.39682007 142.60496521]
[80.17153931 138.12362671]
[68.33482361 129.04986572]
[60.31252289 116.47673798]
[57.07102585 101.91879272]
[59.00080109 87.12970734]
[65.86939240 73.89099884]
[76.84938812 63.79740524]
[90.61814117 58.06481934]
[89.94835663 43.07978058]
[89.27856445 28.09474373]
[88.60877991 13.10970497]
[87.93899536 -1.87533426]
[87.26921082 -16.86037254]
[74.14550018 -28.42702675]
[73.46106720 -45.56897354]
[85.15142059 -57.65923309]
[84.25860596 -72.63263702]
[83.36579132 -87.60604095]
[82.47297668 -102.57945251]
[73.92799377 -115.89462280]
[80.89403534 -129.05986023]
[80.00122070 -144.03326416]
[79.10839844 -159.00666809]
[69.99703217 -168.13606262]
[69.56166077 -180.62582397]
[77.49060059 -189.76138306]
[76.82081604 -204.74642944]
[75.81655884 -219.71276855]
[74.47832489 -234.65295410]
[73.14009094 -249.59313965]
[71.80185699 -264.53332520]
[62.42271042 -273.38739014]
[61.61566544 -285.85864258]
[69.26908875 -295.22622681]
[68.15344238 -310.18469238]
[59.41116333 -323.37115479]
[66.18041992 -336.63867188]
[65.06477356 -351.59710693]
[50.41188431 -355.41436768]
[37.79376984 -363.78466797]
[28.57915306 -375.80007935]
[23.76756477 -390.15719604]
[23.88092995 -405.29873657]
[28.90695000 -419.58221436]
[38.30044556 -431.45828247]
[51.04247284 -439.63870239]
[65.75087738 -443.23614502]
[80.83020020 -441.86038208]
[94.64474487 -435.66061401]
[105.69602203 -425.30938721]
[112.78526306 -411.92950439]
[115.14348602 -396.97232056]
[112.51488495 -382.06027222]
[105.18459320 -368.81091309]
[93.94774628 -358.66140747]
[80.02323151 -352.71276855]
[81.13887787 -337.75430298]
[89.80135345 -325.63775635]
[83.11190033 -311.30035400]
[84.22754669 -296.34188843]
[94.87525940 -282.39221191]
[86.74204254 -265.87155151]
[88.08027649 -250.93138123]
[89.41851044 -235.99119568]
[90.75674438 -221.05101013]
[93.21345520 -218.52178955]
[94.56716919 -214.67698669]
[94.21290588 -210.04797363]
[91.80585480 -205.41621399]
[92.47563934 -190.43116760]
[102.70330048 -176.17066956]
[94.08181000 -159.89949036]
[94.97462463 -144.92608643]
[95.86743927 -129.95268250]
[104.34856415 -117.70850372]
[97.44638062 -103.47226715]
[98.33919525 -88.49885559]
[99.23200989 -73.52545166]
[100.12483215 -58.55204773]
[110.86407471 -51.43179321]
[115.61233521 -39.24425125]
[112.42730713 -26.35758972]
[102.25424957 -17.53015900]
[102.92403412 -2.54511952]
[103.59381866 12.43991947]
[104.26360321 27.42495728]
[104.93339539 42.40999603]
[105.60317993 57.39503479]
[119.82846069 61.87637329]
[131.66517639 70.95012665]
[139.68746948 83.52326202]
[142.92897034 98.08120728]
[140.99919128 112.87029266]
[134.13061523 126.10900116]
[123.15061188 136.20259094]
[109.38185883 141.93518066]
[110.05164337 156.92021179]
[110.72143555 171.90525818]
[111.39122009 186.89028931]
[112.06100464 201.87533569]
[120.36071777 189.38075256]
[133.75154114 182.62159729]
[148.73310852 183.36471558]
[161.38931274 191.41583252]
[168.41183472 204.67042542]
[167.96499634 219.66377258]
[160.16561890 232.47663879]
[147.05242920 239.75978088]
[132.05317688 239.60940552]
[119.08864594 232.06480408]
[111.54795837 219.09899902]
[109.98744202 234.01759338]
[108.42691803 248.93620300]
[106.86639404 263.85479736]
[105.30587006 278.77340698]
[103.74534607 293.69201660]
[111.63169861 310.33193970]
[100.77747345 324.12152100]
[99.43923950 339.06170654]
[98.10100555 354.00189209]
[96.76277161 368.94207764]
[104.89598846 385.46273804]
[94.24827576 399.41241455]
[102.62655640 415.81015015]
[92.18771362 429.91680908]
[91.29489899 444.89019775]
[98.19708252 459.12643433]
[89.71595764 471.37060547]
[88.82314301 486.34402466]
[87.93032837 501.31741333]
[87.03751373 516.29083252]
[86.47930145 531.28045654]
[86.25597382 546.27880859]
[86.03264618 561.27709961]
[85.80931854 576.27545166]
[100.63536072 578.73431396]
[114.92929840 583.37554932]
[128.37179565 590.09545898]
[140.66255188 598.74383545]
[151.52699280 609.12756348]
[160.72238159 621.01464844]
[168.04328918 634.13952637]
[173.32618713 648.20892334]
[176.45304871 662.90863037]
[177.35400391 677.91015625]
[176.00892639 692.87835693]
[172.44787598 707.47894287]
[166.75039673 721.38568115]
[159.04379272 734.28784180]
[149.50021362 745.89721680]
[138.33287048 755.95446777]
[125.79123688 764.23486328]
[112.15551758 770.55346680]
[97.73033142 774.76910400]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 191]
[22 190]
[23 189]
[24 188]
[28 187]
[29 186]
[30 185]
[31 184]
[33 182]
[34 181]
[37 179]
[40 177]
[41 176]
[42 175]
[43 174]
[46 172]
[47 171]
[48 170]
[49 169]
[50 168]
[51 167]
[52 156]
[53 155]
[54 154]
[55 153]
[56 152]
[64 144]
[65 143]
[66 142]
[67 141]
[68 140]
[69 139]
[72 135]
[73 134]
[74 133]
[75 132]
[77 130]
[78 129]
[79 128]
[82 126]
[83 125]
[84 121]
[85 120]
[86 119]
[87 118]
[90 116]
[91 115]
[93 113]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
