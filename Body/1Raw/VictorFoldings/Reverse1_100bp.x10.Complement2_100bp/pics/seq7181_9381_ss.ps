%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[29.93180656 531.87054443]
[27.04999352 546.63317871]
[21.57832909 560.64392090]
[13.69270039 573.45233154]
[3.64660144 584.64678955]
[-8.23702908 593.86737061]
[-21.57618141 600.81768799]
[-35.94205475 605.27429199]
[-50.87284851 607.09399414]
[-65.88860321 606.21820068]
[-80.50661469 602.67510986]
[-94.25698090 596.57861328]
[-106.69767761 588.12469482]
[-117.42880249 577.58508301]
[-126.10537720 565.29864502]
[-132.44850159 551.66027832]
[-136.25425720 537.10845947]
[-137.40031433 522.11090088]
[-135.84982300 507.14978027]
[-131.65263367 492.70596313]
[-124.94366455 479.24383545]
[-115.93857574 467.19607544]
[-104.92685699 456.95001221]
[-92.26247406 448.83502197]
[-78.35254669 443.11193848]
[-63.64421844 439.96472168]
[-48.61029816 439.49459839]
[-33.73406601 441.71664429]
[-28.90806770 427.51419067]
[-24.08207130 413.31173706]
[-24.90641975 405.96719360]
[-19.07705116 398.93469238]
[-14.04013538 384.80566406]
[-17.05442429 370.21923828]
[-5.13236761 359.81851196]
[-0.09545120 345.68948364]
[4.94146490 331.56045532]
[0.04185040 320.50061035]
[4.12255526 308.68826294]
[15.51149273 302.63394165]
[20.75821114 288.58145142]
[14.36096573 275.17956543]
[19.48170090 260.85360718]
[33.58221817 254.23446655]
[38.82893753 240.18199158]
[36.03215027 225.55232239]
[48.10773849 215.33024597]
[53.35445786 201.27778625]
[46.95721054 187.87588501]
[52.07794571 173.54994202]
[66.17846680 166.93078613]
[71.42517853 152.87831116]
[70.81987000 145.51249695]
[76.85604095 138.65666199]
[82.31140137 124.68386078]
[87.76675415 110.71105957]
[83.74172211 99.78218079]
[88.05809784 88.96505737]
[98.50133514 83.80947876]
[104.16412354 69.91944885]
[109.82690430 56.02942276]
[109.11494446 50.85832977]
[110.33564758 46.37913513]
[112.90182495 43.21215057]
[116.06517792 41.65474701]
[122.34254456 28.03142929]
[128.61990356 14.40811253]
[126.50648499 -3.88437128]
[141.22015381 -13.44860935]
[147.29399109 -27.16387558]
[153.36782837 -40.87914276]
[150.98229980 -59.13813400]
[165.55194092 -68.92037964]
[171.42089844 -82.72455597]
[177.28987122 -96.52873230]
[183.15882874 -110.33290863]
[189.02778625 -124.13708496]
[194.89674377 -137.94126892]
[200.76570129 -151.74543762]
[199.04475403 -167.47276306]
[211.14494324 -176.15808105]
[217.01390076 -189.96224976]
[222.88285828 -203.76643372]
[228.75183105 -217.57060242]
[227.03086853 -233.29792786]
[239.13105774 -241.98324585]
[237.41009521 -257.71057129]
[249.51029968 -266.39587402]
[248.83049011 -270.68444824]
[249.48490906 -274.57498169]
[251.18460083 -277.69689941]
[253.54992676 -279.81158447]
[256.16146851 -280.83041382]
[262.84164429 -294.26080322]
[269.52185059 -307.69119263]
[268.74005127 -323.49304199]
[281.33575439 -331.44274902]
[288.01593018 -344.87313843]
[294.69613647 -358.30349731]
[301.37634277 -371.73388672]
[289.03826904 -380.31234741]
[278.08081055 -390.59591675]
[268.73745728 -402.36535645]
[261.20742798 -415.36984253]
[255.65118408 -429.33215332]
[252.18717957 -443.95468140]
[250.88923645 -458.92575073]
[251.78501892 -473.92626953]
[254.85543823 -488.63647461]
[260.03503418 -502.74285889]
[267.21343994 -515.94470215]
[276.23764038 -527.96057129]
[286.91522217 -538.53442383]
[299.01867676 -547.44091797]
[312.28997803 -554.49005127]
[326.44622803 -559.53167725]
[341.18572998 -562.45837402]
[356.19427490 -563.20764160]
[371.15194702 -561.76361084]
[385.73995972 -558.15698242]
[399.64736938 -552.46466064]
[412.57769775 -544.80804443]
[424.25537109 -535.35021973]
[434.43145752 -524.29290771]
[442.88906860 -511.87167358]
[449.44790649 -498.35134888]
[453.96820068 -484.02008057]
[456.35357666 -469.18338013]
[456.55322266 -454.15747070]
[454.56283569 -439.26263428]
[450.42486572 -424.81634521]
[444.22750854 -411.12652588]
[436.10287476 -398.48501587]
[426.22412109 -387.16122437]
[414.80181885 -377.39654541]
[402.07946777 -369.39907837]
[388.32821655 -363.33932495]
[373.84115601 -359.34643555]
[358.92709351 -357.50555420]
[343.90393066 -357.85583496]
[329.09191895 -360.38989258]
[314.80670166 -365.05368042]
[308.12652588 -351.62329102]
[301.44631958 -338.19293213]
[294.76611328 -324.76254272]
[296.02572632 -309.92129517]
[282.95220947 -301.01098633]
[276.27203369 -287.58059692]
[269.59182739 -274.15023804]
[263.31448364 -260.52691650]
[265.45523071 -245.78695679]
[252.93524170 -236.11427307]
[255.07598877 -221.37431335]
[242.55599976 -211.70164490]
[236.68704224 -197.89746094]
[230.81808472 -184.09329224]
[224.94911194 -170.28910828]
[227.08985901 -155.54914856]
[214.56988525 -145.87648010]
[208.70092773 -132.07229614]
[202.83195496 -118.26812744]
[196.96299744 -104.46394348]
[191.09403992 -90.65976715]
[185.22508240 -76.85559082]
[179.35612488 -63.05141830]
[183.58876038 -51.71954346]
[178.81219482 -40.17102432]
[167.08309937 -34.80530930]
[161.00926208 -21.09004211]
[154.93542480 -7.37477589]
[158.99887085 4.01885986]
[154.05091858 15.49498367]
[142.24322510 20.68547440]
[135.96585083 34.30878830]
[129.68849182 47.93210602]
[123.71693420 61.69220734]
[118.05414581 75.58223724]
[112.39135742 89.47225952]
[115.10182190 106.02610016]
[101.73955536 116.16641998]
[96.28419495 130.13922119]
[90.82884216 144.11201477]
[85.47765350 158.12503052]
[80.23093414 172.17750549]
[86.54313660 186.41807556]
[81.02203369 200.59454346]
[67.40692902 206.52450562]
[62.16020966 220.57696533]
[64.58171082 236.21176147]
[52.88140869 245.42871094]
[47.63468933 259.48117065]
[53.94689178 273.72177124]
[48.42578888 287.89822388]
[34.81068420 293.82818604]
[29.56396484 307.88064575]
[33.03206253 325.96527100]
[19.07049370 336.59738159]
[14.03357792 350.72640991]
[8.99666214 364.85543823]
[11.65067768 380.45245361]
[0.08889452 389.84259033]
[-4.94802189 403.97161865]
[-9.87961483 418.13772583]
[-14.70561314 432.34020996]
[-19.53161049 446.54266357]
[-6.38133287 453.84402466]
[5.25377035 463.37628174]
[14.99967861 474.83303833]
[22.54310226 487.84597778]
[27.64155006 501.99679565]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 205]
[29 204]
[30 203]
[32 202]
[33 201]
[35 199]
[36 198]
[37 197]
[40 195]
[41 194]
[44 191]
[45 190]
[47 188]
[48 187]
[51 184]
[52 183]
[54 182]
[55 181]
[56 180]
[59 178]
[60 177]
[61 176]
[65 175]
[66 174]
[67 173]
[69 170]
[70 169]
[71 168]
[73 165]
[74 164]
[75 163]
[76 162]
[77 161]
[78 160]
[79 159]
[81 157]
[82 156]
[83 155]
[84 154]
[86 152]
[88 150]
[93 149]
[94 148]
[95 147]
[97 145]
[98 144]
[99 143]
[100 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
