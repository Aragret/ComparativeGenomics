%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[177.79118347 348.53399658]
[186.70338440 336.43136597]
[197.35867310 325.83111572]
[209.50726318 316.98171997]
[202.62785339 303.65228271]
[195.74844360 290.32287598]
[189.88737488 285.82067871]
[188.86750793 276.74337769]
[182.18731689 263.31298828]
[175.50711060 249.88262939]
[168.82691956 236.45225525]
[162.14672852 223.02186584]
[155.46653748 209.59149170]
[148.38943481 196.36596680]
[140.82504272 183.41296387]
[133.16445923 170.51664734]
[125.50385284 157.62031555]
[117.84325409 144.72398376]
[110.18266296 131.82766724]
[102.52206421 118.93133545]
[88.50708008 115.25349426]
[81.10718536 102.79605103]
[84.58161163 88.72926331]
[76.92101288 75.83293152]
[69.26041412 62.93660736]
[61.59981918 50.04027939]
[53.93922043 37.14395523]
[46.27862549 24.24762726]
[32.57860184 16.33434868]
[32.73088455 1.44052136]
[25.07028770 -11.45580578]
[17.40969086 -24.35213280]
[9.74909306 -37.24845886]
[-3.95092797 -45.16173935]
[-3.79864478 -60.05556488]
[-11.55503654 -72.89450836]
[-19.40679169 -85.67534637]
[-29.06760216 -97.15004730]
[-40.32369614 -107.06469727]
[-51.57979202 -116.97934723]
[-62.83588791 -126.89400482]
[-74.09198761 -136.80865479]
[-85.34808350 -146.72329712]
[-96.25254059 -136.40788269]
[-108.04985809 -127.12679291]
[-120.64228058 -118.95696259]
[-133.92546082 -111.96607971]
[-147.78932190 -106.21208191]
[-162.11898804 -101.74264526]
[-176.79571533 -98.59480286]
[-191.69789124 -96.79463959]
[-206.70201111 -96.35708618]
[-221.68376160 -97.28575134]
[-236.51898193 -99.57294464]
[-251.08476257 -103.19971466]
[-265.26037598 -108.13600922]
[-278.92837524 -114.34092712]
[-291.97552490 -121.76303864]
[-304.29364014 -130.34085083]
[-315.78070068 -140.00328064]
[-326.34152222 -150.67027283]
[-335.88854980 -162.25341797]
[-344.34271240 -174.65673828]
[-351.63394165 -187.77745056]
[-357.70181274 -201.50683594]
[-362.49606323 -215.73114014]
[-365.97695923 -230.33245850]
[-368.11563110 -245.18981934]
[-368.89437866 -260.18011475]
[-368.30676270 -275.17910767]
[-366.35763550 -290.06253052]
[-363.06311035 -304.70703125]
[-358.45056152 -318.99127197]
[-352.55816650 -332.79687500]
[-345.43475342 -346.00946045]
[-337.13937378 -358.51953125]
[-327.74075317 -370.22341919]
[-317.31674194 -381.02413940]
[-305.95376587 -390.83221436]
[-293.74597168 -399.56631470]
[-280.79452515 -407.15414429]
[-267.20669556 -413.53274536]
[-253.09515381 -418.64932251]
[-238.57678223 -422.46145630]
[-223.77191162 -424.93753052]
[-208.80322266 -426.05709839]
[-193.79473877 -425.81079102]
[-178.87083435 -424.20071411]
[-164.15518188 -421.24020386]
[-149.76969910 -416.95376587]
[-135.83363342 -411.37695312]
[-122.46242523 -404.55593872]
[-109.76689911 -396.54727173]
[-97.85224152 -387.41729736]
[-86.81719971 -377.24169922]
[-76.75319672 -366.10476685]
[-67.74363708 -354.09881592]
[-59.86318207 -341.32330322]
[-53.17712402 -327.88409424]
[-47.74087524 -313.89257812]
[-43.59947968 -299.46469116]
[-40.78725052 -284.71997070]
[-39.32749939 -269.78063965]
[-39.23231506 -254.77041626]
[-40.50249100 -239.81375122]
[-43.12750244 -225.03456116]
[-47.08559036 -210.55531311]
[-52.34396744 -196.49598694]
[-58.85905075 -182.97306824]
[-66.57685852 -170.09864807]
[-75.43342590 -157.97940063]
[-64.17733765 -148.06474304]
[-52.92123795 -138.15010071]
[-41.66514206 -128.23544312]
[-30.40904617 -118.32079315]
[-19.15295029 -108.40614319]
[-24.65838814 -122.35928345]
[-26.06712723 -137.29298401]
[-23.26806831 -152.02951050]
[-16.48195839 -165.40669250]
[-6.24397564 -176.36952209]
[6.63846779 -184.05343628]
[21.14940834 -187.85246277]
[36.14445496 -187.46697998]
[50.44103241 -182.92739868]
[62.91165924 -174.59172058]
[72.57283783 -163.11734009]
[78.66265869 -149.40916443]
[80.70085144 -134.54827881]
[78.52667236 -119.70668030]
[72.31158447 -106.05484009]
[62.54574585 -94.66940308]
[49.99931717 -86.44825745]
[35.66176987 -82.03977203]
[20.66382408 -81.79161072]
[6.18827724 -85.72334290]
[-6.62594891 -93.52710724]
[1.22580647 -80.74626160]
[7.40550613 -76.69248199]
[9.09768200 -67.71616364]
[22.24976540 -60.72531509]
[22.64542007 -44.90905762]
[30.30601692 -32.01272964]
[37.96661377 -19.11640358]
[45.62721252 -6.22007608]
[58.77929688 0.77077168]
[59.17494965 16.58703041]
[66.83554840 29.48335648]
[74.49614716 42.37968445]
[82.15674591 55.27601242]
[89.81733704 68.17234039]
[97.47793579 81.06866455]
[111.49291992 84.74650574]
[118.89281464 97.20394897]
[115.41838837 111.27073669]
[123.07898712 124.16706848]
[130.73957825 137.06338501]
[138.40017700 149.95971680]
[146.06077576 162.85604858]
[153.72137451 175.75236511]
[160.79460144 181.53227234]
[161.39837646 188.89822388]
[165.22862244 190.94352722]
[167.93644714 193.81271362]
[169.40066528 197.05175781]
[169.66003418 200.21392822]
[168.89691162 202.91130066]
[175.57710266 216.34167480]
[182.25729370 229.77204895]
[188.93750000 243.20242310]
[195.61769104 256.63281250]
[202.29788208 270.06317139]
[209.07788086 283.44345093]
[215.95729065 296.77288818]
[222.83670044 310.10232544]
[237.08778381 305.32666016]
[251.90087891 302.78250122]
[266.92874146 302.52944946]
[281.81906128 304.57351685]
[296.22286987 308.86669922]
[309.80242920 315.30841064]
[322.23947144 323.74761963]
[333.24243164 333.98654175]
[342.55340576 345.78509521]
[349.95410156 358.86676025]
[355.27108765 372.92486572]
[358.37966919 387.62988281]
[359.20697021 402.63708496]
[357.73367310 417.59466553]
[353.99423218 432.15203857]
[348.07635498 445.96795654]
[340.11874390 458.71850586]
[330.30795288 470.10485840]
[318.87396240 479.86004639]
[306.08474731 487.75543213]
[292.24017334 493.60592651]
[277.66476440 497.27438354]
[262.70016479 498.67480469]
[247.69717407 497.77435303]
[233.00749207 494.59414673]
[218.97546387 489.20877075]
[205.93000793 481.74441528]
[194.17695618 472.37606812]
[183.99177551 461.32333374]
[175.61326599 448.84530640]
[169.23779297 435.23452759]
[165.01483154 420.80999756]
[163.04338074 405.90985107]
[163.36962891 390.88342285]
[165.98593140 376.08288574]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 175]
[5 174]
[6 173]
[8 172]
[9 171]
[10 170]
[11 169]
[12 168]
[13 167]
[14 162]
[15 160]
[16 159]
[17 158]
[18 157]
[19 156]
[20 155]
[23 152]
[24 151]
[25 150]
[26 149]
[27 148]
[28 147]
[30 145]
[31 144]
[32 143]
[33 142]
[35 140]
[36 138]
[37 137]
[38 116]
[39 115]
[40 114]
[41 113]
[42 112]
[43 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
