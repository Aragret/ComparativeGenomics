%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[117.42320251 638.11285400]
[108.61657715 625.95300293]
[101.12925720 612.93927002]
[95.04328918 599.21417236]
[90.42534637 584.92810059]
[87.32602692 570.23754883]
[85.77928925 555.30352783]
[85.80207825 540.28961182]
[87.39414978 525.36035156]
[90.53805542 510.67926025]
[95.19935608 496.40725708]
[101.32696533 482.70071411]
[108.85375977 469.70974731]
[117.69726562 457.57672119]
[127.76058960 446.43457031]
[138.93347168 436.40539551]
[151.09349060 427.59906006]
[164.10743713 420.11206055]
[177.83268738 414.02642822]
[173.21868896 399.75369263]
[168.60467529 385.48095703]
[163.99066162 371.20822144]
[159.37666321 356.93551636]
[154.76264954 342.66278076]
[150.14863586 328.39004517]
[145.53462219 314.11730957]
[140.48605347 308.71972656]
[140.95988464 299.59759521]
[136.55888367 285.25775146]
[132.15788269 270.91790771]
[127.75688934 256.57806396]
[123.35589600 242.23822021]
[112.81967163 236.29560852]
[109.03577423 224.38485718]
[114.55249023 212.72601318]
[110.36547852 198.32223511]
[106.17847443 183.91845703]
[101.29283905 178.37297058]
[102.03806305 169.26898193]
[96.71182251 183.29150391]
[85.15062714 192.84863281]
[70.37654114 195.44216919]
[56.25147629 190.39414978]
[46.46768951 179.02412415]
[43.58264160 164.30418396]
[48.35047150 150.08209229]
[59.52488708 140.07546997]
[74.18492126 136.90002441]
[88.49847412 141.38580322]
[98.72359467 152.35946655]
[96.94113159 137.46574402]
[95.15866089 122.57202911]
[93.37619781 107.67830658]
[89.36759949 100.68519592]
[91.67977142 92.54979706]
[90.11924744 77.63118744]
[80.98823547 64.71085358]
[87.35946655 51.24769211]
[85.79894257 36.32908630]
[84.12740326 21.42251205]
[82.12339020 6.55698442]
[79.89827728 -8.27705956]
[77.67315674 -23.11110306]
[75.44803619 -37.94514847]
[73.22292328 -52.77919006]
[70.99780273 -67.61323547]
[67.78453064 -82.26502228]
[63.59751892 -96.66880035]
[59.41050720 -111.07258606]
[55.22349548 -125.47636414]
[44.31640625 -132.36099243]
[41.12556458 -144.44413757]
[46.83420181 -155.10894775]
[42.86210632 -169.57347107]
[27.96807480 -167.60330200]
[12.94449520 -167.67961121]
[-1.92875123 -169.80101013]
[-16.37458611 -173.92794800]
[-30.12388992 -179.98355103]
[-42.92052460 -187.85501099]
[-54.52609634 -197.39569092]
[-64.72439575 -208.42784119]
[-73.32544708 -220.74594116]
[-80.16899872 -234.12052917]
[-85.12757874 -248.30242920]
[-88.10879517 -263.02743530]
[-89.05712128 -278.02127075]
[-87.95488739 -293.00454712]
[-84.82263184 -307.69818115]
[-79.71869659 -321.82839966]
[-72.73816681 -335.13201904]
[-64.01109314 -347.36114502]
[-53.70005035 -358.28802490]
[-41.99712753 -367.70901489]
[-29.12034416 -375.44866943]
[-15.30958557 -381.36279297]
[-0.82213736 -385.34115601]
[14.07210732 -387.30972290]
[29.09567833 -387.23178101]
[43.96869659 -385.10879517]
[58.41408157 -380.98028564]
[72.16273499 -374.92318726]
[84.95851135 -367.05035400]
[96.56304932 -357.50842285]
[106.76016235 -346.47515869]
[115.35987091 -334.15612793]
[122.20198059 -320.78079224]
[127.15901947 -306.59835815]
[130.13865662 -291.87301636]
[131.08535767 -276.87908936]
[129.98150635 -261.89593506]
[126.84764862 -247.20265198]
[121.74218750 -233.07296753]
[114.76021576 -219.77011108]
[106.03182220 -207.54191589]
[95.71959686 -196.61616516]
[84.01564789 -187.19642639]
[71.13803101 -179.45817566]
[57.32662964 -173.54556274]
[61.29872513 -159.08103943]
[74.43084717 -147.43997192]
[69.62728119 -129.66337585]
[73.81429291 -115.25959778]
[78.00130463 -100.85581207]
[82.18831635 -86.45203400]
[87.85285187 -100.34134674]
[100.06578827 -109.05020142]
[115.04280853 -109.88006592]
[128.14312744 -102.57379913]
[135.30747986 -89.39532471]
[134.31588745 -74.42813110]
[125.47561646 -62.30997849]
[111.52592468 -56.79579926]
[96.78927612 -59.59422302]
[85.83184814 -69.83834839]
[88.05696869 -55.00430679]
[90.28208160 -40.17026520]
[92.50720215 -25.33621979]
[94.73231506 -10.50217628]
[96.95743561 4.33186722]
[100.19745636 7.84061384]
[101.26770020 13.42197514]
[99.02111816 19.64004707]
[102.93718719 25.90791893]
[100.71755219 34.76856232]
[102.27807617 49.68716812]
[111.29747009 61.54042816]
[105.03784943 76.07066345]
[106.59837341 90.98927307]
[108.26991272 105.89584351]
[110.05238342 120.78955841]
[111.83484650 135.68327332]
[113.61731720 150.57699585]
[116.50258636 165.29689026]
[120.58225250 179.73144531]
[124.76926422 194.13522339]
[128.95626831 208.53900146]
[142.54093933 220.97035217]
[137.69573975 237.83721924]
[142.09674072 252.17706299]
[146.49774170 266.51690674]
[150.89872742 280.85675049]
[155.29972839 295.19659424]
[159.80735779 309.50329590]
[164.42137146 323.77603149]
[169.03538513 338.04876709]
[173.64938354 352.32150269]
[178.26339722 366.59423828]
[182.87741089 380.86697388]
[187.49140930 395.13967896]
[192.10542297 409.41241455]
[206.79574585 406.31204224]
[221.72966003 404.76422119]
[236.74356079 404.78591919]
[251.67294312 406.37689209]
[266.35424805 409.51971436]
[280.62658691 414.17999268]
[294.33358765 420.30661011]
[307.32510376 427.83245850]
[319.45877075 436.67507935]
[330.60162354 446.73757935]
[340.63162231 457.90972900]
[349.43884277 470.06912231]
[356.92678833 483.08251953]
[363.01342773 496.80731201]
[367.63208008 511.09317017]
[370.73208618 525.78356934]
[372.27957153 540.71752930]
[372.25750732 555.73144531]
[370.66616821 570.66076660]
[367.52294922 585.34197998]
[362.86236572 599.61419678]
[356.73541260 613.32110596]
[349.20925903 626.31243896]
[340.36633301 638.44586182]
[330.30355835 649.58850098]
[319.13116455 659.61822510]
[306.97155762 668.42510986]
[293.95797729 675.91278076]
[280.23303223 681.99908447]
[265.94705200 686.61737061]
[251.25657654 689.71704102]
[236.32258606 691.26416016]
[221.30868530 691.24169922]
[206.37937927 689.65002441]
[191.69824219 686.50646973]
[177.42613220 681.84552002]
[163.71940613 675.71820068]
[150.72827148 668.19171143]
[138.59503174 659.34851074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 171]
[20 170]
[21 169]
[22 168]
[23 167]
[24 166]
[25 165]
[26 164]
[28 163]
[29 162]
[30 161]
[31 160]
[32 159]
[35 157]
[36 156]
[37 155]
[39 154]
[50 153]
[51 152]
[52 151]
[53 150]
[55 149]
[56 148]
[58 146]
[59 145]
[60 143]
[61 140]
[62 139]
[63 138]
[64 137]
[65 136]
[66 135]
[67 125]
[68 124]
[69 123]
[70 122]
[73 120]
[74 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
