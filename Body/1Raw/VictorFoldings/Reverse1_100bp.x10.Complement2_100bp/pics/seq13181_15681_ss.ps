%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGAUAAUACUCAGGAUCAACUGAACUUCACCUCUUCCGAUGCUAAAAAAACUACAGUAAAACACAUUCCCGCGUCUGACGACGCUUGUCUCACCACUAUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[131.64201355 636.39660645]
[119.45715332 627.53790283]
[109.54943085 616.18957520]
[102.41582489 602.92083740]
[98.41413879 588.39727783]
[97.74510956 573.34735107]
[100.44229126 558.52593994]
[106.37038422 544.67657471]
[115.23205566 532.49389648]
[126.58279419 522.58892822]
[139.85325623 515.45849609]
[154.37780762 511.46032715]
[153.70802307 496.47531128]
[153.03823853 481.49026489]
[152.36845398 466.50521851]
[151.69866943 451.52017212]
[150.13813782 436.60159302]
[147.69241333 421.80230713]
[145.24668884 407.00305176]
[142.80096436 392.20376587]
[140.24511719 377.42312622]
[137.57933044 362.66189575]
[127.82392883 355.50936890]
[125.48220825 343.23336792]
[132.34527588 332.31268311]
[129.89955139 317.51342773]
[127.45381927 302.71414185]
[125.00808716 287.91488647]
[122.56236267 273.11560059]
[112.85343933 261.82022095]
[118.23709869 246.94314575]
[115.79137421 232.14387512]
[100.53264618 226.82563782]
[89.97724915 214.46685791]
[87.07814789 198.37922668]
[92.71981049 182.93684387]
[105.45137787 172.38699341]
[102.78558350 157.62577820]
[100.11978149 142.86456299]
[97.45398712 128.10334778]
[94.78819275 113.34213257]
[85.90407562 102.54564667]
[90.45059204 89.32366180]
[87.78479004 74.56244659]
[81.22876740 88.05387115]
[68.86103058 96.54145050]
[53.91447449 97.80655670]
[40.29609680 91.51848602]
[31.56570816 79.32093811]
[30.00540924 64.40230560]
[36.02306366 50.66229630]
[48.04566193 41.69251251]
[62.93053436 39.83763123]
[76.78681183 45.58251572]
[85.99214172 57.42465210]
[85.54553223 42.43130112]
[85.09892273 27.43795204]
[84.65232086 12.44460297]
[70.01316071 4.75780392]
[61.29795837 -9.18281364]
[60.80511475 -25.52215195]
[68.57449341 -39.79774857]
[82.40236664 -48.15851593]
[81.73258209 -63.14355469]
[81.06279755 -78.12859344]
[69.02759552 -84.84757996]
[61.94018555 -96.54318237]
[61.56032944 -110.10508728]
[67.88034058 -121.98792267]
[79.15498352 -129.13806152]
[78.70837402 -144.13140869]
[78.26177216 -159.12475586]
[70.11701965 -172.68844604]
[77.47194672 -185.64044189]
[77.02534485 -200.63378906]
[76.57873535 -215.62713623]
[73.43461609 -221.44316101]
[73.66507721 -227.12153625]
[76.34876251 -231.07208252]
[76.34876251 -246.07208252]
[67.79693604 -255.72761536]
[68.10574341 -268.22113037]
[76.56438446 -276.86856079]
[76.78771210 -291.86691284]
[77.01103973 -306.86523438]
[77.23436737 -321.86358643]
[77.45769501 -336.86190796]
[62.65630341 -339.49154663]
[48.46846008 -344.46157837]
[35.26165771 -351.64328003]
[23.37798500 -360.85058594]
[13.12526226 -371.84503174]
[4.76905584 -384.34182739]
[-1.47418761 -398.01727295]
[-5.44275284 -412.51718140]
[-7.03384447 -427.46591187]
[-6.20624924 -442.47625732]
[-2.98140430 -457.15948486]
[2.55715919 -471.13519287]
[10.26597977 -484.04138184]
[19.94537926 -495.54379272]
[31.34463882 -505.34448242]
[44.16849136 -513.18951416]
[58.08476257 -518.87579346]
[72.73299408 -522.25592041]
[87.73376465 -523.24243164]
[102.69850922 -521.80975342]
[117.23960114 -517.99493408]
[130.98040771 -511.89688110]
[143.56500244 -503.67349243]
[154.66740417 -493.53778076]
[164.00004578 -481.75225830]
[171.32118225 -468.62225342]
[176.44117737 -454.48785400]
[179.22741699 -439.71511841]
[179.60772705 -424.68676758]
[177.57226562 -409.79205322]
[173.17373657 -395.41674805]
[166.52609253 -381.93322754]
[157.80151367 -369.69076538]
[147.22599792 -359.00646973]
[135.07345581 -350.15704346]
[121.65868378 -343.37176514]
[107.32915497 -338.82638550]
[92.45603180 -336.63858032]
[92.23270416 -321.64025879]
[92.00937653 -306.64190674]
[91.78604889 -291.64358521]
[91.56272125 -276.64523315]
[100.92344666 -261.80126953]
[91.34876251 -246.07208252]
[91.34876251 -231.07208252]
[91.57209015 -216.07374573]
[92.01869202 -201.08039856]
[92.46530151 -186.08705139]
[100.57810974 -173.59579468]
[93.25511932 -159.57136536]
[93.70172882 -144.57801819]
[94.14833069 -129.58467102]
[107.99966431 -120.77454376]
[113.92972565 -105.28919220]
[109.41648102 -89.16059113]
[96.04783630 -78.79837799]
[96.71762085 -63.81333923]
[97.38740540 -48.82830048]
[109.89644623 -43.34734344]
[118.86667633 -32.96160126]
[122.50438690 -19.66061592]
[120.04467010 -6.02507162]
[111.91145325 5.27390575]
[99.64566803 11.99799633]
[100.09227753 26.99134636]
[100.53887939 41.98469543]
[100.98548889 56.97804642]
[102.54601288 71.89665222]
[105.21180725 86.65786743]
[114.09592438 97.45435333]
[109.54940796 110.67633820]
[112.21520996 125.43755341]
[114.88100433 140.19877625]
[117.54679871 154.95999146]
[120.21259308 169.72120667]
[133.60435486 173.76145935]
[143.89973450 183.13275146]
[149.12796021 195.96412659]
[148.32150269 209.72998047]
[141.69468689 221.74720764]
[130.59065247 229.69815063]
[133.03637695 244.49742126]
[142.92022705 256.85137939]
[137.36163330 270.66989136]
[139.80735779 285.46914673]
[142.25308228 300.26843262]
[144.69882202 315.06768799]
[147.14454651 329.86697388]
[159.15571594 343.82452393]
[152.34054565 359.99609375]
[155.00634766 374.75732422]
[159.61106873 382.64620972]
[157.60023499 389.75805664]
[160.04595947 404.55731201]
[162.49168396 419.35659790]
[164.93740845 434.15585327]
[172.83934021 421.40597534]
[186.68232727 415.62915039]
[201.30326843 418.97998047]
[211.24891663 430.20867920]
[212.80979919 445.12725830]
[205.40373230 458.17141724]
[191.79301453 464.47601318]
[177.05407715 461.68960571]
[166.68370056 450.85040283]
[167.35348511 465.83544922]
[168.02326965 480.82046509]
[168.69305420 495.80551147]
[169.36283875 510.79055786]
[184.18617249 513.47698975]
[198.03985596 519.39501953]
[210.22900391 528.24780273]
[220.14222717 539.59130859]
[227.28227234 552.85662842]
[231.29098511 567.37823486]
[231.96731567 582.42785645]
[229.27731323 597.25048828]
[223.35592651 611.10278320]
[214.50016785 623.28979492]
[203.15423584 633.20025635]
[189.88722229 640.33709717]
[175.36462402 644.34228516]
[160.31486511 645.01495361]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 196]
[13 195]
[14 194]
[15 193]
[16 192]
[17 183]
[18 182]
[19 181]
[20 180]
[21 178]
[22 177]
[25 175]
[26 174]
[27 173]
[28 172]
[29 171]
[31 169]
[32 168]
[37 162]
[38 161]
[39 160]
[40 159]
[41 158]
[43 156]
[44 155]
[55 154]
[56 153]
[57 152]
[58 151]
[63 145]
[64 144]
[65 143]
[70 139]
[71 138]
[72 137]
[74 135]
[75 134]
[76 133]
[79 132]
[80 131]
[83 129]
[84 128]
[85 127]
[86 126]
[87 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
