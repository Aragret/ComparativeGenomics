%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[-11.13423252 721.12390137]
[-21.28710938 732.17834473]
[-32.35270309 742.31903076]
[-44.24908447 751.47094727]
[-56.88817596 759.56628418]
[-70.17639923 766.54516602]
[-84.01537323 772.35589600]
[-98.30263519 776.95538330]
[-112.93241119 780.30963135]
[-127.79637909 782.39385986]
[-142.78450012 783.19256592]
[-157.78578186 782.69982910]
[-172.68917847 780.91937256]
[-187.38435364 777.86425781]
[-201.76248169 773.55718994]
[-215.71713257 768.03009033]
[-229.14498901 761.32379150]
[-241.94662476 753.48803711]
[-254.02725220 744.58074951]
[-265.29745483 734.66790771]
[-275.67376709 723.82293701]
[-285.07937622 712.12609863]
[-293.44464111 699.66400146]
[-300.70761108 686.52886963]
[-306.81454468 672.81805420]
[-311.72021484 658.63299561]
[-315.38830566 644.07873535]
[-317.79162598 629.26306152]
[-318.91241455 614.29553223]
[-318.74240112 599.28717041]
[-317.28277588 584.34887695]
[-314.54440308 569.59143066]
[-310.54751587 555.12402344]
[-305.32171631 541.05377197]
[-298.90573120 527.48480225]
[-291.34701538 514.51763916]
[-282.70156860 502.24826050]
[-273.03335571 490.76751709]
[-262.41400146 480.16040039]
[-250.92213440 470.50546265]
[-238.64279175 461.87414551]
[-225.66691589 454.33041382]
[-212.09057617 447.93008423]
[-198.01428223 442.72052002]
[-183.54225159 438.74032593]
[-168.78164673 436.01898193]
[-153.84173584 434.57659912]
[-138.83312988 434.42385864]
[-123.86695862 435.56192017]
[-109.05402374 437.98236084]
[-94.50400543 441.66720581]
[-80.32460785 446.58923340]
[-66.62083435 452.71197510]
[-59.34760666 439.59329224]
[-52.07437897 426.47460938]
[-44.80114746 413.35589600]
[-37.52791977 400.23721313]
[-30.25468826 387.11849976]
[-22.98145866 373.99981689]
[-15.70823002 360.88113403]
[-8.43500042 347.76242065]
[-1.16177094 334.64373779]
[-0.66772830 327.26962280]
[6.31866026 321.38504028]
[13.78640175 308.37609863]
[21.25414276 295.36712646]
[28.72188377 282.35818481]
[34.99924469 268.73486328]
[40.03615952 254.60583496]
[45.07307816 240.47680664]
[40.98585892 223.41041565]
[55.11206055 211.59805298]
[59.93805695 197.39559937]
[64.76405334 183.19314575]
[69.59004974 168.99069214]
[65.24919128 151.98704529]
[79.19795990 139.96566772]
[83.81196594 125.69293976]
[88.42597961 111.42020416]
[83.75758362 100.75027466]
[87.42245483 89.69541931]
[97.54031372 83.92738342]
[94.65437317 68.37161255]
[106.07507324 58.81039429]
[110.90106964 44.60793686]
[115.72706604 30.40548134]
[120.55306244 16.20302582]
[117.66712952 0.64725792]
[129.08782959 -8.91396332]
[133.80795288 -23.15195274]
[138.42196655 -37.42468643]
[143.03598022 -51.69741821]
[141.94137573 -56.80123520]
[142.82554626 -61.35881424]
[145.14907837 -64.70789337]
[148.18783569 -66.49626160]
[153.43455505 -80.54873657]
[158.68127441 -94.60120392]
[163.92799377 -108.65367889]
[169.17469788 -122.70614624]
[156.21157837 -130.33033752]
[144.76942444 -140.08987427]
[135.19598389 -151.68815613]
[127.78216553 -164.77275085]
[122.75328064 -178.94601440]
[120.26214600 -193.77723694]
[120.38445282 -208.81573486]
[123.11650085 -223.60447693]
[128.37525940 -237.69406128]
[136.00091553 -250.65634155]
[145.76174927 -262.09738159]
[157.36111450 -271.66949463]
[170.44654846 -279.08184814]
[184.62039185 -284.10910034]
[199.45188904 -286.59857178]
[214.49037170 -286.47454834]
[229.27880859 -283.74084473]
[243.36779785 -278.48046875]
[256.32922363 -270.85333252]
[267.76913452 -261.09121704]
[277.33996582 -249.49075317]
[284.75079346 -236.40449524]
[289.77645874 -222.23008728]
[292.26425171 -207.39828491]
[292.13851929 -192.35983276]
[289.40313721 -177.57170105]
[284.14117432 -163.48330688]
[276.51257324 -150.52276611]
[266.74914551 -139.08393860]
[255.14759827 -129.51445007]
[242.06048584 -122.10507965]
[227.88551331 -117.08101654]
[213.05343628 -114.59492493]
[198.01499939 -114.72235107]
[183.22717285 -117.45942688]
[177.98045349 -103.40695953]
[172.73373413 -89.35448456]
[167.48701477 -75.30201721]
[162.24031067 -61.24954605]
[157.30871582 -47.08340836]
[152.69470215 -32.81067657]
[148.08068848 -18.53794289]
[149.01429749 -11.20649242]
[143.29028320 -4.08796597]
[146.52140808 10.45194817]
[134.75552368 21.02902412]
[129.92951965 35.23147964]
[125.10352325 49.43393707]
[120.27752686 63.63639069]
[123.50865173 78.17630768]
[111.74276733 88.75337982]
[115.43373108 105.11654663]
[102.69870758 116.03421021]
[98.08470154 130.30694580]
[93.47069550 144.57968140]
[98.63784027 156.39761353]
[94.50099182 168.19041443]
[83.79251099 173.81668091]
[78.96650696 188.01913452]
[74.14051056 202.22160339]
[69.31451416 216.42405701]
[74.30513763 228.31759644]
[69.99317169 240.04750061]
[59.20210648 245.51371765]
[54.16519165 259.64276123]
[49.12827301 273.77178955]
[61.01844788 264.62716675]
[75.68080139 261.46246338]
[90.28425598 264.88867188]
[102.00912476 274.24429321]
[108.59151459 287.72286987]
[108.76045990 302.72192383]
[102.48336029 316.34536743]
[90.97220612 325.96270752]
[76.44963074 329.71701050]
[61.71971130 326.88336182]
[49.62656784 318.00891113]
[42.50519562 304.80715942]
[41.73083496 289.82592773]
[34.26309586 302.83486938]
[26.79535294 315.84384155]
[19.32761192 328.85278320]
[11.95692348 341.91696167]
[4.68369341 355.03564453]
[-2.58953595 368.15435791]
[-9.86276531 381.27304077]
[-17.13599396 394.39175415]
[-24.40922356 407.51043701]
[-31.68245316 420.62911987]
[-38.95568466 433.74783325]
[-46.22891235 446.86651611]
[-53.50214386 459.98519897]
[-41.04925156 468.36416626]
[-29.36276436 477.78262329]
[-18.52920151 488.17086792]
[-8.62877274 499.45196533]
[0.26522109 511.54238892]
[8.08693027 524.35260010]
[14.77844524 537.78784180]
[20.29022408 551.74853516]
[24.58145714 566.13140869]
[27.62037468 580.82995605]
[29.38447571 595.73529053]
[29.86070061 610.73712158]
[29.04552269 625.72430420]
[26.94497871 640.58599854]
[23.57461739 655.21209717]
[18.95939636 669.49426270]
[13.13348293 683.32684326]
[6.14001083 696.60742188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 192]
[54 191]
[55 190]
[56 189]
[57 188]
[58 187]
[59 186]
[60 185]
[61 184]
[62 183]
[64 182]
[65 181]
[66 180]
[67 179]
[68 166]
[69 165]
[70 164]
[72 161]
[73 160]
[74 159]
[75 158]
[77 155]
[78 154]
[79 153]
[82 151]
[84 149]
[85 148]
[86 147]
[87 146]
[89 144]
[90 142]
[91 141]
[92 140]
[96 139]
[97 138]
[98 137]
[99 136]
[100 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
