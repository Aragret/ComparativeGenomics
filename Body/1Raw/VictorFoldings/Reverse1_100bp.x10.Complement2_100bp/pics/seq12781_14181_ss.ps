%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGGCUAUAGCGGCUAUGCCAACAUAUCCUAACGAACUUACCGACGACACAACCGUAGACGAGCCCGCAUAGUAGUUGACUACUCGUUCUUCCUAUAUUxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[85.15068817 472.37725830]
[81.03208923 486.90103149]
[73.14676666 499.77441406]
[62.07987213 510.04214478]
[48.65263748 516.94232178]
[33.86145401 519.96282959]
[18.80392647 518.87951660]
[4.59742403 513.77288818]
[-7.70383787 505.02182007]
[-17.18702316 493.27566528]
[-23.14841843 479.40612793]
[-25.14564514 464.44238281]
[-23.03049850 449.49484253]
[-16.95993614 435.67272949]
[-7.38443232 424.00173950]
[4.98544550 415.34790039]
[19.23176956 410.35342407]
[34.29737091 409.38891602]
[29.36134529 395.33599854]
[39.78697586 383.43569946]
[42.89108658 368.76040649]
[45.99519730 354.08508301]
[49.09930801 339.40979004]
[52.20341873 324.73449707]
[50.51214981 317.53994751]
[55.46453476 309.86456299]
[58.78679276 295.23709106]
[61.56240463 280.49612427]
[63.78752136 265.66207886]
[66.01264191 250.82804871]
[68.23775482 235.99400330]
[70.46287537 221.15995789]
[63.52737427 211.24908447]
[65.25975037 198.87239075]
[75.27145386 190.74043274]
[77.71718597 175.94116211]
[75.71354675 171.60591125]
[76.41201782 165.96594238]
[80.46235657 160.74040222]
[75.31764984 146.76251221]
[85.56494904 134.70832825]
[88.45022583 119.98844147]
[91.33549500 105.26854706]
[89.67234039 97.38143921]
[94.37486267 90.35170746]
[97.47897339 75.67639923]
[100.58308411 61.00109863]
[95.86907959 45.89849091]
[106.07268524 35.04788208]
[101.35868835 19.94527245]
[111.56229401 9.09466457]
[100.01478577 18.66832924]
[85.13771820 20.58479500]
[71.54090881 14.25022221]
[63.43748474 1.62744677]
[63.33836746 -13.37222576]
[71.27428436 -26.10098457]
[84.78619385 -32.61468506]
[99.68728638 -30.89498520]
[111.36029816 -21.47475433]
[116.18823242 -7.27269459]
[121.22515106 -21.40172386]
[126.26206970 -35.53075409]
[130.12637329 -50.02444839]
[132.79217529 -64.78566742]
[135.45796204 -79.54688263]
[138.12376404 -94.30809784]
[140.78955078 -109.06931305]
[143.45535278 -123.83053589]
[146.12113953 -138.59175110]
[134.86380005 -128.67851257]
[120.05039215 -126.31995392]
[106.27100372 -132.24688721]
[97.79534149 -144.62280273]
[97.24967957 -159.61286926]
[104.80308533 -172.57226562]
[118.11507416 -179.48538208]
[133.06076050 -178.21011353]
[145.00907898 -169.14160156]
[150.25772095 -155.08958435]
[154.87171936 -169.36231995]
[159.48573303 -183.63505554]
[164.09974670 -197.90779114]
[160.98252869 -213.41886902]
[172.25959778 -223.14906311]
[176.87361145 -237.42179871]
[181.48762512 -251.69453430]
[186.10162354 -265.96725464]
[172.40869141 -272.12896729]
[159.47671509 -279.75964355]
[147.46267700 -288.76663208]
[136.51242065 -299.04064941]
[126.75888062 -310.45693970]
[118.32044983 -322.87692261]
[111.29955292 -336.14984131]
[105.78142548 -350.11456299]
[101.83305359 -364.60156250]
[99.50237274 -379.43502808]
[98.81765747 -394.43481445]
[99.78723907 -409.41891479]
[102.39933777 -424.20541382]
[106.62223816 -438.61477661]
[112.40469360 -452.47213745]
[119.67650604 -465.60928345]
[128.34939575 -477.86666870]
[138.31808472 -489.09558105]
[149.46156311 -499.15969849]
[161.64456177 -507.93679810]
[174.71917725 -515.32037354]
[188.52671814 -521.22082520]
[202.89955139 -525.56646729]
[217.66322327 -528.30462646]
[232.63850403 -529.40191650]
[247.64361572 -528.84521484]
[262.49639893 -526.64111328]
[277.01657104 -522.81646729]
[291.02783203 -517.41760254]
[304.36013794 -510.51019287]
[316.85165405 -502.17797852]
[328.35070801 -492.52218628]
[338.71774292 -481.65994263]
[347.82687378 -469.72317505]
[355.56756592 -456.85675049]
[361.84585571 -443.21685791]
[366.58547974 -428.96908569]
[369.72894287 -414.28637695]
[371.23809814 -399.34698486]
[371.09460449 -384.33224487]
[369.30020142 -369.42440796]
[365.87667847 -354.80447388]
[360.86557007 -340.64990234]
[354.32775879 -327.13247681]
[346.34255981 -314.41635132]
[337.00692749 -302.65588379]
[326.43417358 -291.99377441]
[314.75268555 -282.55950928]
[302.10418701 -274.46759033]
[288.64230347 -267.81622314]
[274.53039551 -262.68618774]
[259.93978882 -259.13973999]
[245.04757690 -257.21994019]
[230.03457642 -256.95010376]
[215.08300781 -258.33346558]
[200.37435913 -261.35324097]
[195.76036072 -247.08052063]
[191.14634705 -232.80778503]
[186.53233337 -218.53504944]
[189.97958374 -204.04486084]
[178.37248230 -193.29377747]
[173.75846863 -179.02104187]
[169.14445496 -164.74830627]
[164.53045654 -150.47557068]
[160.88237000 -135.92594910]
[158.21656799 -121.16473389]
[155.55076599 -106.40351868]
[152.88497925 -91.64230347]
[150.21917725 -76.88108826]
[147.55339050 -62.11986923]
[144.88758850 -47.35865021]
[155.41246033 -58.04635620]
[169.67019653 -62.70651245]
[184.47557068 -60.29803085]
[196.52104187 -51.35897064]
[203.11560059 -37.88634109]
[202.78602600 -22.88996124]
[195.60592651 -9.72006321]
[183.17936707 -1.31883347]
[168.28247070 0.43687078]
[154.24324036 -4.84517908]
[144.19807434 -15.98495960]
[140.39109802 -30.49383736]
[135.35418701 -16.36480713]
[130.31726074 -2.23577857]
[126.23759460 12.19877434]
[131.17361450 26.25170708]
[120.74799347 38.15199280]
[125.68401337 52.20492554]
[115.25838470 64.10520935]
[112.15427399 78.78050995]
[109.05016327 93.45581818]
[106.05538940 108.15381622]
[103.17011261 122.87371063]
[100.28484344 137.59359741]
[105.22317505 152.62435913]
[95.18225098 163.62567139]
[92.51645660 178.38688660]
[90.07072449 193.18615723]
[96.95266724 210.26599121]
[85.29691315 223.38507080]
[83.07180023 238.21911621]
[80.84667969 253.05316162]
[78.62156677 267.88720703]
[76.39644623 282.72125244]
[89.82669067 276.04080200]
[103.48710632 282.23699951]
[107.30774689 296.74227905]
[98.47217560 308.86383057]
[83.49364471 309.66616821]
[73.41425323 298.55935669]
[70.09199524 313.18682861]
[66.87872314 327.83859253]
[63.77460861 342.51391602]
[60.67050171 357.18920898]
[57.56639099 371.86450195]
[54.46228027 386.53982544]
[59.17627716 401.64242554]
[48.97267151 412.49304199]
[62.35737228 419.47531128]
[73.36113739 429.81066895]
[81.16741943 442.73214722]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 207]
[20 205]
[21 204]
[22 203]
[23 202]
[24 201]
[26 200]
[27 199]
[28 193]
[29 192]
[30 191]
[31 190]
[32 189]
[35 187]
[36 186]
[39 185]
[41 183]
[42 182]
[43 181]
[45 180]
[46 179]
[47 178]
[49 176]
[51 174]
[61 173]
[62 172]
[63 171]
[64 159]
[65 158]
[66 157]
[67 156]
[68 155]
[69 154]
[70 153]
[80 152]
[81 151]
[82 150]
[83 149]
[85 147]
[86 146]
[87 145]
[88 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
