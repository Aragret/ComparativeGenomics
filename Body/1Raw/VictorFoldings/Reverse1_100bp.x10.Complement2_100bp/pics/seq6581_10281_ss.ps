%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[80.28675842 724.45806885]
[65.30517578 725.43579102]
[50.30245209 724.86798096]
[35.43764114 722.76049805]
[20.86831284 719.13574219]
[6.74890757 714.03216553]
[-6.77089739 707.50390625]
[-19.54778671 699.61999512]
[-31.44631577 690.46423340]
[-42.34035873 680.13348389]
[-52.11442566 668.73736572]
[-60.66490936 656.39666748]
[-67.90116882 643.24212646]
[-73.74649811 629.41333008]
[-78.13893890 615.05676270]
[-81.03191376 600.32470703]
[-82.39476776 585.37322998]
[-82.21304321 570.36083984]
[-80.48867798 555.44671631]
[-77.23994446 540.78900146]
[-72.50128937 526.54296875]
[-66.32293701 512.85968018]
[-58.77037811 499.88421631]
[-49.92368317 487.75408936]
[-39.87662506 476.59790039]
[-28.73571396 466.53390503]
[-16.61904526 457.66876221]
[-3.65506506 450.09649658]
[10.01880169 443.89736938]
[24.25760460 439.13705444]
[38.91040421 435.86605835]
[53.82187271 434.11901855]
[68.83394623 433.91448975]
[70.17218018 418.97430420]
[71.39915466 404.02456665]
[72.51480103 389.06610107]
[73.63044739 374.10766602]
[74.74610138 359.14920044]
[75.86174774 344.19076538]
[76.97739410 329.23229980]
[78.09304810 314.27383423]
[69.63244629 298.89901733]
[80.12637329 283.76763916]
[81.01918793 268.79421997]
[69.32882690 256.70397949]
[70.01326752 239.56202698]
[83.13697815 227.99536133]
[83.80676270 213.01033020]
[84.47654724 198.02528381]
[85.14633179 183.04025269]
[85.81611633 168.05520630]
[84.02613068 165.89787292]
[82.98284149 162.90151978]
[83.01010132 159.34700012]
[84.32421112 155.62709045]
[86.99819946 152.20602417]
[88.55872345 137.28741455]
[90.11924744 122.36881256]
[91.67977142 107.45020294]
[93.12918854 92.52040100]
[94.46742249 77.58021545]
[95.80565643 62.64002609]
[97.14389038 47.69984436]
[82.30797577 43.37386322]
[68.60095978 36.24695969]
[56.54558563 26.59296608]
[46.60121536 14.78205395]
[39.14631653 1.26653600]
[34.46406555 -13.43645477]
[32.73159027 -28.76474953]
[34.01327896 -44.13264084]
[38.25836563 -58.95326233]
[45.30296707 -72.66100311]
[54.87638474 -84.73307037]
[66.61152649 -94.70948029]
[80.05895996 -102.21052551]
[94.70414734 -106.95126343]
[109.98712921 -108.75231934]
[111.10277557 -123.71077728]
[112.21842194 -138.66923523]
[113.33407593 -153.62768555]
[114.22689056 -168.60108948]
[114.89667511 -183.58612061]
[115.56645966 -198.57116699]
[116.23624420 -213.55619812]
[107.37345123 -229.69721985]
[117.38765717 -244.10841370]
[117.83426666 -259.10177612]
[118.28086853 -274.09512329]
[118.72747803 -289.08847046]
[119.17408752 -304.08181763]
[119.62068939 -319.07516479]
[119.62068939 -334.07516479]
[119.17408752 -349.06851196]
[118.72747803 -364.06185913]
[118.28086853 -379.05520630]
[103.88085175 -383.78970337]
[91.97047424 -393.16619873]
[83.98796082 -406.05242920]
[80.89724731 -420.89236450]
[83.07154846 -435.89395142]
[90.24831390 -449.24572754]
[101.56090546 -459.33538818]
[115.64328003 -464.94454956]
[130.79492188 -465.39587402]
[145.18618774 -460.63485718]
[157.07926941 -451.23641968]
[165.03802490 -438.33547974]
[168.10137939 -423.48989868]
[165.89942932 -408.49234009]
[158.69807434 -395.15380859]
[147.36691284 -385.08502197]
[133.27421570 -379.50183105]
[133.72082520 -364.50848389]
[134.16743469 -349.51513672]
[134.61404419 -334.52175903]
[136.55952454 -332.50354004]
[137.82278442 -329.59307861]
[138.05996704 -326.04638672]
[137.02618408 -322.23904419]
[134.61404419 -318.62857056]
[134.16743469 -303.63522339]
[133.72082520 -288.64187622]
[133.27421570 -273.64849854]
[132.82762146 -258.65515137]
[132.38101196 -243.66181946]
[140.44508362 -234.64530945]
[140.19572449 -222.15045166]
[131.22128296 -212.88641357]
[130.55149841 -197.90138245]
[129.88171387 -182.91633606]
[129.21192932 -167.93130493]
[131.71653748 -163.86485291]
[131.69320679 -158.18185425]
[128.29252625 -152.51203918]
[127.17687988 -137.55357361]
[126.06122589 -122.59513092]
[124.94557953 -107.63667297]
[139.02735901 -103.87515259]
[152.17825317 -97.58073425]
[163.94696045 -88.96773529]
[173.92929077 -78.33008575]
[181.78205872 -66.03127289]
[187.23487854 -52.49193573]
[190.09950256 -38.17546082]
[190.27626038 -23.57214928]
[187.75758362 -9.18240547]
[182.62829590 4.50040054]
[175.06271362 17.00685692]
[165.31880188 27.90760803]
[153.72933960 36.82809448]
[140.69055176 43.46142578]
[126.64853668 47.57894135]
[112.08407593 49.03807831]
[110.74584198 63.97826385]
[109.40760803 78.91844940]
[108.06937408 93.85863495]
[110.54403687 101.52991486]
[106.59837341 109.01072693]
[105.03784943 123.92933655]
[103.47732544 138.84794617]
[101.91680908 153.76654053]
[100.80115509 168.72499084]
[100.13137054 183.71003723]
[99.46158600 198.69506836]
[98.79180145 213.68011475]
[98.12201691 228.66514587]
[108.29507446 237.49258423]
[111.48010254 250.37924194]
[106.73184204 262.56677246]
[95.99259186 269.68704224]
[95.09977722 284.66046143]
[103.06172943 294.80786133]
[102.00984955 307.26086426]
[93.05149841 315.38949585]
[91.93585205 330.34796143]
[90.82019806 345.30639648]
[89.70455170 360.26486206]
[88.58890533 375.22329712]
[87.47325134 390.18176270]
[86.35760498 405.14022827]
[88.84007263 413.93084717]
[85.11236572 420.31253052]
[83.77412415 435.25271606]
[98.51087189 438.12194824]
[112.87448883 442.49121094]
[126.71270752 448.31423950]
[139.87884521 455.52929688]
[152.23333740 464.05987549]
[163.64520264 473.81555176]
[173.99346924 484.69293213]
[183.16847229 496.57666016]
[191.07290649 509.34082031]
[197.62301636 522.85009766]
[202.74934387 536.96124268]
[206.39755249 551.52471924]
[208.52899170 566.38610840]
[209.12103271 581.38787842]
[208.16741943 596.37103271]
[205.67825317 611.17669678]
[201.67991638 625.64794922]
[196.21481323 639.63140869]
[189.34085083 652.97882080]
[181.13092041 665.54864502]
[171.67204285 677.20770264]
[161.06448364 687.83239746]
[149.42070007 697.31005859]
[136.86410522 705.54022217]
[123.52780914 712.43572998]
[109.55319977 717.92333984]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 184]
[34 183]
[35 181]
[36 180]
[37 179]
[38 178]
[39 177]
[40 176]
[41 175]
[43 172]
[44 171]
[47 167]
[48 166]
[49 165]
[50 164]
[51 163]
[56 162]
[57 161]
[58 160]
[59 159]
[60 157]
[61 156]
[62 155]
[63 154]
[78 138]
[79 137]
[80 136]
[81 135]
[82 132]
[83 131]
[84 130]
[85 129]
[87 126]
[88 125]
[89 124]
[90 123]
[91 122]
[92 121]
[93 116]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
