%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[178.20263672 645.25714111]
[183.93194580 631.36352539]
[191.66807556 618.47900391]
[201.23820496 606.89154053]
[212.42855835 596.85986328]
[224.98910522 588.60821533]
[218.71174622 574.98492432]
[206.35832214 566.66369629]
[207.61026001 550.89208984]
[201.33290100 537.26879883]
[195.05554199 523.64550781]
[188.77816772 510.02215576]
[182.50080872 496.39883423]
[176.84661865 491.63946533]
[176.23309326 482.52566528]
[171.77575684 496.84808350]
[159.82049561 505.90740967]
[144.82629395 506.32473755]
[132.38565063 497.94439697]
[127.13859558 483.89202881]
[131.04216003 469.40887451]
[142.64041138 459.89672852]
[157.60748291 458.90344238]
[170.36180115 466.80035400]
[165.96080017 452.46051025]
[161.55979919 438.12063599]
[159.14932251 436.68963623]
[157.16046143 434.21759033]
[155.99253845 430.86032104]
[155.98123169 426.91513062]
[157.35118103 422.79479980]
[153.81150818 408.21841431]
[150.27183533 393.64205933]
[146.73216248 379.06567383]
[142.09902954 373.30755615]
[143.25001526 364.24594116]
[139.92774963 349.61846924]
[136.60549927 334.99102783]
[133.28323364 320.36355591]
[128.73634338 314.53710938]
[130.02212524 305.49362183]
[126.91800690 290.81832886]
[113.49172974 290.65084839]
[100.39131165 287.67608643]
[88.19742584 282.02304077]
[77.45116425 273.93954468]
[68.63002014 263.78125000]
[62.12666702 251.99623108]
[58.23148727 239.10490417]
[57.11959839 225.67732239]
[58.84299088 212.30778503]
[63.32809067 199.58865356]
[70.37891388 188.08403015]
[79.68561554 178.30474854]
[90.83810425 170.68574524]
[103.34413147 165.56666565]
[100.89839935 150.76739502]
[98.45267487 135.96812439]
[96.00695038 121.16885376]
[93.56121826 106.36958313]
[90.77606964 103.70212555]
[89.18022156 99.81996918]
[89.28980255 95.28179932]
[91.35214996 90.85612488]
[89.56968689 75.96240997]
[85.44268036 67.81343842]
[87.87325287 60.83388901]
[86.31272888 45.91528320]
[77.18171692 32.99494553]
[83.55295563 19.53178787]
[74.42193604 6.61144876]
[80.79317474 -6.85170937]
[79.23265076 -21.77031517]
[77.67212677 -36.68891907]
[76.11160278 -51.60752487]
[72.54361725 -57.17358017]
[72.35109711 -62.85336685]
[74.73352051 -66.99258423]
[73.61787415 -81.95103455]
[62.00079727 -72.46190643]
[47.30728912 -75.47866821]
[40.36885834 -88.77747345]
[46.30025482 -102.55493164]
[60.72907639 -106.65483093]
[73.01811218 -98.05629730]
[73.01811218 -113.05629730]
[73.01811218 -128.05628967]
[73.01811218 -143.05628967]
[69.88871002 -151.63793945]
[73.13144684 -158.27920532]
[73.35477448 -173.27754211]
[65.82379150 -187.19139099]
[73.74972534 -199.80204773]
[70.74843597 -208.42933655]
[74.08969116 -215.02159119]
[74.53629303 -230.01493835]
[60.17152023 -234.68717957]
[47.70571899 -243.21832275]
[38.14944077 -254.91679382]
[32.27737045 -268.83425903]
[30.56552696 -283.84246826]
[33.15268707 -298.72476196]
[39.82912064 -312.27474976]
[50.05359650 -323.39395142]
[62.99726486 -331.18099976]
[77.61083221 -335.00463867]
[92.70965576 -334.55490112]
[107.06973267 -329.86822510]
[119.52695465 -321.32455444]
[129.07147217 -309.61648560]
[134.92956543 -295.69314575]
[136.62632751 -280.68322754]
[134.02421570 -265.80352783]
[127.33417511 -252.26025391]
[117.09853363 -241.15132141]
[104.14704895 -233.37728882]
[89.52964783 -229.56832886]
[89.08303833 -214.57498169]
[88.74806213 -199.57872009]
[96.29501343 -186.73765564]
[88.35311127 -173.05421448]
[88.12978363 -158.05587769]
[88.01811218 -143.05628967]
[88.01811218 -128.05628967]
[88.01811218 -113.05629730]
[88.01811218 -98.05629730]
[88.57632446 -83.06668854]
[89.69197845 -68.10823059]
[91.03021240 -53.16804504]
[92.59072876 -38.24944305]
[94.15125275 -23.33083725]
[95.71177673 -8.41223240]
[104.73117065 3.44102764]
[98.47155762 17.97126389]
[107.49095154 29.82452393]
[101.23133850 44.35476303]
[102.79186249 59.27336502]
[104.46340179 74.17993927]
[106.24586487 89.07365417]
[108.36048889 103.92385864]
[110.80622101 118.72312927]
[113.25194550 133.52239990]
[115.69766998 148.32167053]
[118.14340210 163.12094116]
[134.74295044 164.54731750]
[150.40708923 170.19262695]
[164.08314514 179.67181396]
[174.85351562 192.34240723]
[181.99725342 207.34797668]
[185.03825378 223.67611694]
[183.77706909 240.22668457]
[178.30389404 255.88594055]
[168.99221802 269.60150146]
[156.47328186 280.45309448]
[141.59330750 287.71420288]
[144.69741821 302.38952637]
[147.91069031 317.04129028]
[151.23295593 331.66876221]
[154.55520630 346.29620361]
[157.87747192 360.92367554]
[161.30853271 375.52600098]
[164.84820557 390.10238647]
[168.38787842 404.67874146]
[171.92755127 419.25512695]
[175.89964294 433.71966553]
[180.30064392 448.05950928]
[184.70164490 462.39935303]
[189.94836426 476.45181274]
[196.12413025 490.12149048]
[202.40148926 503.74481201]
[208.67884827 517.36810303]
[214.95620728 530.99145508]
[221.23356628 544.61474609]
[234.03599548 553.91040039]
[232.33506775 568.70751953]
[238.61242676 582.33087158]
[253.04603577 578.14416504]
[267.94244385 576.15551758]
[282.96887207 576.40942383]
[297.78958130 578.90008545]
[312.07351685 583.57202148]
[325.50155640 590.32073975]
[337.77371216 598.99554443]
[348.61584473 609.40258789]
[357.78567505 621.30932617]
[365.07839966 634.44989014]
[370.33105469 648.53063965]
[373.42633057 663.23699951]
[374.29507446 678.24041748]
[372.91787720 693.20574951]
[369.32546997 707.79864502]
[363.59814453 721.69305420]
[355.86386108 734.57867432]
[346.29537964 746.16754150]
[335.10644531 756.20074463]
[322.54708862 764.45422363]
[308.89782715 770.74353027]
[294.46362305 774.92816162]
[279.56692505 776.91467285]
[264.54052734 776.65869141]
[249.72016907 774.16583252]
[235.43688965 769.49188232]
[222.00981140 762.74127197]
[209.73889160 754.06475830]
[198.89826965 743.65612793]
[189.73011780 731.74804688]
[182.43927002 718.60650635]
[177.18861389 704.52502441]
[174.09542847 689.81817627]
[173.22882080 674.81463623]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 176]
[7 175]
[9 173]
[10 172]
[11 171]
[12 170]
[13 169]
[15 168]
[24 167]
[25 166]
[26 165]
[31 164]
[32 163]
[33 162]
[34 161]
[36 160]
[37 159]
[38 158]
[39 157]
[41 156]
[42 155]
[56 144]
[57 143]
[58 142]
[59 141]
[60 140]
[64 139]
[65 138]
[67 137]
[68 136]
[70 134]
[72 132]
[73 131]
[74 130]
[75 129]
[78 128]
[79 127]
[85 126]
[86 125]
[87 124]
[88 123]
[90 122]
[91 121]
[93 119]
[95 118]
[96 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
