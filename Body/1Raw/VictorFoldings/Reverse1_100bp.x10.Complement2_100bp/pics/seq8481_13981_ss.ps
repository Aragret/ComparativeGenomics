%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[80.32994843 524.03997803]
[92.57521820 514.65612793]
[91.23698425 499.71594238]
[89.89875031 484.77575684]
[88.56051636 469.83557129]
[86.99999237 454.91696167]
[85.21752930 440.02325439]
[83.43505859 425.12951660]
[81.65259552 410.23580933]
[64.83433533 402.08480835]
[56.25846863 385.31030273]
[59.55154800 366.60830688]
[73.56114197 353.56735229]
[71.11541748 338.76806641]
[68.66968536 323.96881104]
[59.02186203 316.67181396]
[56.86316681 304.36230469]
[63.88806534 293.54501343]
[61.66294861 278.71096802]
[59.43783188 263.87695312]
[57.21271133 249.04289246]
[52.43768692 263.26257324]
[43.89723206 275.59384155]
[32.26488876 285.06427002]
[18.45802689 290.92691040]
[3.56551886 292.71945190]
[-11.23815346 290.30050659]
[-24.78550911 283.86083984]
[-36.00814819 273.90832520]
[-44.02100754 261.22787476]
[-48.19215775 246.81948853]
[-48.19264603 231.81948853]
[-44.02243042 217.41084290]
[-36.01039505 204.72985840]
[-24.78840446 194.77662659]
[-11.24146557 188.33609009]
[3.56204963 185.91618347]
[18.45467567 187.70774841]
[32.26191711 193.56950378]
[43.89487457 203.03915405]
[52.43613052 215.36988831]
[57.21271133 229.59266663]
[59.43783188 214.75862122]
[61.66294861 199.92457581]
[63.88806534 185.09053040]
[66.11318207 170.25648499]
[68.33830261 155.42243958]
[59.60137177 167.61531067]
[47.81878662 176.89813232]
[33.91976929 182.53881836]
[19.00045013 184.09251404]
[4.23743486 181.43669128]
[-9.20500755 174.78080750]
[-20.26674843 164.64978027]
[-28.07541466 151.84255981]
[-32.01517868 137.36920166]
[-31.77533913 122.37111664]
[-27.37480736 108.03112793]
[-19.16062737 95.48014069]
[-7.78060532 85.70798492]
[5.86778355 79.48532104]
[20.70816994 77.30290985]
[35.57017899 79.33285522]
[49.28173065 85.41506958]
[60.76147842 95.06988525]
[69.10407257 107.53588104]
[73.65158844 121.82994080]
[74.04499817 136.82821655]
[80.52449036 123.29987335]
[87.00399017 109.77152252]
[85.28363037 93.08570099]
[99.22577667 83.75870514]
[105.50313568 70.13539124]
[111.78049469 56.51207352]
[110.52855682 40.74047852]
[122.88198090 32.41928864]
[123.63112640 23.31563187]
[129.35556030 18.64094734]
[135.83505249 5.11260176]
[142.31454468 -8.41574383]
[148.79405212 -21.94408989]
[155.17265320 -35.52029800]
[161.45001221 -49.14361191]
[167.72737122 -62.76692963]
[174.00473022 -76.39024353]
[180.28208923 -90.01355743]
[166.24082947 -84.73693085]
[152.05155945 -89.60155487]
[144.20143127 -102.38339233]
[146.27940369 -117.23876190]
[157.33547974 -127.37599182]
[172.31495667 -128.16046143]
[184.36941528 -119.23354340]
[187.98753357 -104.67464447]
[195.64813232 -117.57096863]
[202.82350159 -130.74345398]
[209.50369263 -144.17382812]
[216.18388367 -157.60420227]
[222.86408997 -171.03457642]
[229.54428101 -184.46495056]
[217.20622253 -193.04342651]
[206.24874878 -203.32698059]
[196.90541077 -215.09643555]
[189.37538147 -228.10090637]
[183.81913757 -242.06321716]
[180.35511780 -256.68576050]
[179.05717468 -271.65682983]
[179.95295715 -286.65734863]
[183.02339172 -301.36755371]
[188.20300293 -315.47393799]
[195.38139343 -328.67575073]
[204.40557861 -340.69168091]
[215.08317566 -351.26553345]
[227.18663025 -360.17196655]
[240.45791626 -367.22113037]
[254.61418152 -372.26275635]
[269.35366821 -375.18942261]
[284.36221313 -375.93872070]
[299.31991577 -374.49465942]
[313.90792847 -370.88806152]
[327.81530762 -365.19577026]
[340.74566650 -357.53912354]
[352.42330933 -348.08132935]
[362.59939575 -337.02395630]
[371.05700684 -324.60275269]
[377.61587524 -311.08239746]
[382.13616943 -296.75115967]
[384.52154541 -281.91445923]
[384.72116089 -266.88854980]
[382.73077393 -251.99369812]
[378.59280396 -237.54742432]
[372.39544678 -223.85762024]
[364.27081299 -211.21609497]
[354.39205933 -199.89230347]
[342.96978760 -190.12760925]
[330.24740601 -182.13015747]
[316.49615479 -176.07040405]
[302.00909424 -172.07752991]
[287.09503174 -170.23661804]
[272.07189941 -170.58691406]
[257.25985718 -173.12097168]
[242.97465515 -177.78475952]
[236.29446411 -164.35438538]
[229.61425781 -150.92401123]
[222.93406677 -137.49362183]
[216.25387573 -124.06325531]
[231.08787537 -126.28865814]
[242.18002319 -116.19091797]
[241.35357666 -101.21369934]
[229.21778870 -92.39765930]
[214.71870422 -96.24164581]
[208.54446411 -109.91036987]
[200.88386536 -97.01404572]
[193.90541077 -83.73619843]
[187.62805176 -70.11288452]
[181.35069275 -56.48956680]
[175.07333374 -42.86625290]
[168.79597473 -29.24293518]
[168.85176086 -21.85248947]
[162.32238770 -15.46459293]
[155.84289551 -1.93624783]
[149.36340332 11.59209824]
[142.88391113 25.12044334]
[136.50529480 38.69665146]
[138.20623779 53.49381638]
[125.40380859 62.78943253]
[119.12644958 76.41275024]
[112.84909058 90.03606415]
[116.21649170 101.18514252]
[111.26392365 111.72617340]
[100.53233337 116.25102234]
[94.05283356 129.77937317]
[87.57334137 143.30770874]
[83.17234039 157.64755249]
[80.94722748 172.48159790]
[78.72210693 187.31564331]
[76.49699402 202.14968872]
[74.27187347 216.98373413]
[72.04676056 231.81777954]
[72.04676056 246.81777954]
[74.27187347 261.65182495]
[76.49699402 276.48587036]
[78.72210693 291.31991577]
[90.52414703 305.45474243]
[83.46895599 321.52307129]
[85.91468811 336.32232666]
[88.36041260 351.12161255]
[99.34637451 354.39617920]
[108.27667236 361.50183105]
[113.88500214 371.38204956]
[115.39441681 382.59054565]
[112.62481689 393.50292969]
[106.01342773 402.55212402]
[96.54631042 408.45333862]
[98.32878113 423.34704590]
[100.11124420 438.24078369]
[101.89370728 453.13449097]
[105.54417419 458.64682007]
[105.82122803 464.32308960]
[103.50070190 468.49734497]
[104.83893585 483.43750000]
[106.17716980 498.37768555]
[107.51540375 513.31787109]
[121.23344421 520.37615967]
[128.93801880 533.74188232]
[128.17063904 549.15014648]
[119.17615509 561.68420410]
[104.82469177 567.34454346]
[89.69573975 564.32489014]
[78.61688995 553.58880615]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 203]
[3 202]
[4 201]
[5 200]
[6 197]
[7 196]
[8 195]
[9 194]
[13 187]
[14 186]
[15 185]
[18 183]
[19 182]
[20 181]
[21 180]
[42 179]
[43 178]
[44 177]
[45 176]
[46 175]
[47 174]
[68 173]
[69 172]
[70 171]
[72 168]
[73 167]
[74 166]
[76 164]
[78 163]
[79 162]
[80 161]
[81 160]
[82 158]
[83 157]
[84 156]
[85 155]
[86 154]
[94 153]
[95 152]
[96 146]
[97 145]
[98 144]
[99 143]
[100 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
