%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[144.07585144 569.23034668]
[151.26112366 555.93139648]
[162.04829407 545.34228516]
[175.47816467 538.40472412]
[172.81236267 523.64349365]
[170.14656067 508.88229370]
[167.15179443 494.18429565]
[163.82952881 479.55682373]
[160.50727844 464.92935181]
[155.96038818 459.10290527]
[157.24615479 450.05941772]
[154.14204407 435.38412476]
[151.03793335 420.70883179]
[136.34509277 418.05374146]
[123.75403595 409.95370483]
[115.20030212 397.61682129]
[112.01293945 382.90530396]
[114.70807648 368.05438232]
[122.90567017 355.33267212]
[135.38270569 346.69555664]
[132.27859497 332.02026367]
[129.17448425 317.34497070]
[117.47794342 314.09442139]
[108.21857452 306.13217163]
[103.19357300 294.92279053]
[103.41256714 282.56838989]
[108.89533234 271.41455078]
[118.65647888 263.60507202]
[115.99068451 248.84387207]
[106.23529053 241.69132996]
[103.89356232 229.41532898]
[110.75662994 218.49465942]
[108.31089783 203.69538879]
[105.86517334 188.89611816]
[101.67314148 182.80935669]
[103.49491119 173.85844421]
[101.26979828 159.02439880]
[91.73011780 147.58569336]
[97.33468628 132.79045105]
[95.10956573 117.95640564]
[87.48922729 113.77785492]
[82.59716797 106.59471130]
[81.50022125 97.97342682]
[84.43760681 89.79409027]
[90.76874542 83.84040070]
[89.20822144 68.92179108]
[87.64769745 54.00318909]
[86.08717346 39.08458328]
[84.52665710 24.16597939]
[75.39563751 11.24564075]
[81.76687622 -2.21751714]
[80.20635223 -17.13612175]
[78.64582825 -32.05472565]
[77.08530426 -46.97333145]
[74.01780701 -51.19678497]
[72.98078918 -55.72203445]
[73.74918365 -59.72510910]
[75.80352783 -62.59077072]
[74.91071320 -77.56417847]
[74.01789856 -92.53758240]
[73.12508392 -107.51098633]
[59.83061218 -118.88096619]
[58.89103699 -136.01083374]
[70.40009308 -148.27378845]
[69.28444672 -163.23225403]
[68.16879272 -178.19070435]
[67.05314636 -193.14915466]
[65.93750000 -208.10760498]
[64.82184601 -223.06605530]
[63.70619965 -238.02452087]
[62.59055328 -252.98297119]
[61.47490311 -267.94143677]
[60.35925293 -282.89987183]
[51.61697388 -296.08636475]
[58.38623428 -309.35385132]
[49.64395523 -322.54031372]
[56.41321182 -335.80780029]
[55.29756546 -350.76626587]
[46.55528641 -363.95272827]
[53.32454300 -377.22024536]
[52.20889664 -392.17868042]
[51.09324646 -407.13714600]
[49.97759628 -422.09561157]
[40.73131561 -431.08831787]
[40.11003876 -443.57022095]
[47.90208817 -452.82281494]
[47.00926971 -467.79623413]
[37.89790344 -476.92559814]
[37.46253204 -489.41537476]
[45.39147186 -498.55093384]
[44.72168732 -513.53594971]
[44.05190277 -528.52099609]
[29.28939819 -531.60632324]
[15.75833988 -538.26678467]
[4.30930042 -548.08361816]
[-4.33802223 -560.43975830]
[-9.64005184 -574.55853271]
[-11.26349640 -589.55236816]
[-9.10630703 -604.47875977]
[-3.30408478 -618.39941406]
[5.77843714 -630.43933105]
[17.57032394 -639.84155273]
[31.33032608 -646.01513672]
[46.19348145 -648.57196045]
[61.22547913 -647.35137939]
[75.48139191 -642.42999268]
[88.06507874 -634.11724854]
[98.18553162 -622.93572998]
[105.20655823 -609.58819580]
[108.68681335 -594.91375732]
[108.40752411 -579.83489990]
[104.38625336 -565.29943848]
[96.87577057 -552.22106934]
[86.34820557 -541.42193604]
[73.46531677 -533.58087158]
[59.03694153 -529.19079590]
[59.70672607 -514.20574951]
[60.37651062 -499.22073364]
[70.60417175 -484.96020508]
[61.98267746 -468.68902588]
[62.87549210 -453.71563721]
[73.31433868 -439.60897827]
[64.93605042 -423.21124268]
[66.05169678 -408.25277710]
[67.16735077 -393.29434204]
[68.28299713 -378.33587646]
[76.94548035 -366.21932983]
[70.25601959 -351.88192749]
[71.37166595 -336.92346191]
[80.03414917 -324.80691528]
[73.34468842 -310.46948242]
[82.00716400 -298.35293579]
[75.31771088 -284.01553345]
[76.43335724 -269.05706787]
[77.54900360 -254.09861755]
[78.66464996 -239.14016724]
[79.78030396 -224.18171692]
[80.89595032 -209.22325134]
[82.01159668 -194.26480103]
[83.12725067 -179.30635071]
[84.24289703 -164.34790039]
[85.35854340 -149.38945007]
[96.20261383 -142.42987061]
[101.13179779 -130.31437683]
[98.13898468 -117.38172150]
[88.09848785 -108.40380859]
[88.99130249 -93.43039703]
[89.88411713 -78.45699310]
[90.77693176 -63.48358917]
[92.00391388 -48.53385544]
[93.56443024 -33.61524963]
[95.12495422 -18.69664574]
[96.68547821 -3.77804017]
[105.70487213 8.07522011]
[99.44525909 22.60545731]
[101.00578308 37.52406311]
[102.56630707 52.44266510]
[104.12683105 67.36127472]
[105.68734741 82.27987671]
[118.46160889 97.65100098]
[109.94361115 115.73128510]
[112.16872406 130.56532288]
[121.86756134 143.06506348]
[116.10383606 156.79928589]
[118.32895660 171.63333130]
[120.66444397 186.45039368]
[123.11016846 201.24966431]
[125.55590057 216.04893494]
[137.56707764 230.00648499]
[130.75190735 246.17807007]
[133.41769409 260.93930054]
[149.97479248 268.32983398]
[158.70449829 284.04199219]
[156.27641296 301.69293213]
[143.84979248 314.24084473]
[146.95390320 328.91616821]
[150.05801392 343.59146118]
[164.96374512 346.43655396]
[177.61053467 354.74929810]
[186.08831787 367.23693848]
[189.13095093 381.97906494]
[186.30531311 396.72290039]
[178.07255554 409.22756958]
[165.71324158 417.60470581]
[168.81735229 432.27999878]
[171.92146301 446.95532227]
[175.13473511 461.60711670]
[178.45700073 476.23455811]
[181.77925110 490.86203003]
[185.32688904 494.69104004]
[186.89430237 499.06100464]
[186.60704041 503.12701416]
[184.90779114 506.21649170]
[187.57357788 520.97772217]
[190.23937988 535.73895264]
[205.24752808 537.54077148]
[219.05714417 543.68774414]
[230.44027710 553.63342285]
[238.38475037 566.49328613]
[242.18412781 581.12396240]
[241.50059509 596.22442627]
[236.39491272 610.45196533]
[227.32109070 622.54156494]
[215.08595276 631.41809082]
[200.77745056 636.29229736]
[185.66787720 636.73083496]
[171.10076904 632.69464111]
[158.37142944 624.54260254]
[148.61174011 612.99963379]
[142.68951416 599.09216309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 195]
[5 194]
[6 193]
[7 189]
[8 188]
[9 187]
[11 186]
[12 185]
[13 184]
[20 177]
[21 176]
[22 175]
[28 171]
[29 170]
[32 168]
[33 167]
[34 166]
[36 165]
[37 164]
[39 162]
[40 161]
[45 159]
[46 158]
[47 157]
[48 156]
[49 155]
[51 153]
[52 152]
[53 151]
[54 150]
[58 149]
[59 148]
[60 147]
[61 146]
[64 142]
[65 141]
[66 140]
[67 139]
[68 138]
[69 137]
[70 136]
[71 135]
[72 134]
[73 133]
[75 131]
[77 129]
[78 128]
[80 126]
[81 125]
[82 124]
[83 123]
[86 121]
[87 120]
[90 118]
[91 117]
[92 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
