%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[130.83651733 488.19522095]
[132.34976196 473.23663330]
[136.30461121 458.73114014]
[142.59318542 445.07452393]
[151.04393005 432.63928223]
[161.42630005 421.76470947]
[173.45704651 412.74746704]
[186.80798340 405.83352661]
[182.19396973 391.56079102]
[177.57995605 377.28805542]
[172.96594238 363.01531982]
[168.35194397 348.74258423]
[163.52593994 334.54013062]
[158.48902893 320.41110229]
[153.45211792 306.28207397]
[150.98014832 304.96014404]
[148.88287354 302.57937622]
[147.56622314 299.27755737]
[147.37875366 295.33685303]
[148.56335449 291.15942383]
[144.37634277 276.75564575]
[140.18933105 262.35186768]
[135.89520264 247.97966003]
[131.49420166 233.63981628]
[127.09320831 219.29997253]
[116.55698395 213.35734558]
[112.77308655 201.44660950]
[118.28981018 189.78776550]
[114.10279846 175.38398743]
[109.91578674 160.98020935]
[105.72877502 146.57641602]
[94.74639893 136.51477051]
[98.32405853 121.10338593]
[86.56876373 116.36347961]
[79.62819672 105.75772095]
[79.99036407 93.08797455]
[87.52542877 82.89600372]
[83.55332947 68.43148041]
[79.58123779 53.96695328]
[75.60913849 39.50242996]
[62.21107101 26.87020111]
[67.30685425 10.07734871]
[63.11983871 -4.32643366]
[58.61221313 -18.63311958]
[53.78621292 -32.83557510]
[48.96021652 -47.03803253]
[35.06302643 -54.07407379]
[30.37109756 -68.54613495]
[37.16453171 -81.75161743]
[32.33853531 -95.95407104]
[27.51253700 -110.15652466]
[22.68653870 -124.35898590]
[17.86054230 -138.56143188]
[13.03454399 -152.76390076]
[8.32237816 -157.40145874]
[6.87666130 -162.89755249]
[8.28314304 -167.46162415]
[3.88214493 -181.80146790]
[-0.51885307 -196.14132690]
[-14.28709316 -208.36903381]
[-9.69355679 -225.30616760]
[-14.30756569 -239.57890320]
[-18.92157555 -253.85163879]
[-34.04241943 -255.13058472]
[-47.48540115 -262.08251953]
[-57.21632385 -273.62039185]
[-61.77614975 -287.96597290]
[-60.49971390 -302.92376709]
[-53.61255646 -316.21710205]
[-42.19181442 -325.83456421]
[-46.80582428 -340.10729980]
[-51.41983414 -354.38003540]
[-56.03384399 -368.65277100]
[-60.64785385 -382.92550659]
[-75.46683502 -380.43240356]
[-90.49089813 -380.12362671]
[-105.39980316 -382.00573730]
[-119.87577057 -386.03866577]
[-133.61022949 -392.13638306]
[-146.31044006 -400.16897583]
[-157.70570374 -409.96520996]
[-167.55311584 -421.31625366]
[-175.64279175 -433.98016357]
[-181.80227661 -447.68704224]
[-185.90029907 -462.14471436]
[-187.84950256 -477.04501343]
[-187.60835266 -492.07031250]
[-185.18197632 -506.90036011]
[-180.62210083 -521.21905518]
[-174.02589417 -534.72119141]
[-165.53399658 -547.11901855]
[-155.32737732 -558.14819336]
[-143.62362671 -567.57366943]
[-130.67216492 -575.19458008]
[-116.74909210 -580.84838867]
[-102.15116119 -584.41467285]
[-87.18953705 -585.81738281]
[-72.18312073 -585.02661133]
[-57.45177841 -582.05920410]
[-43.30950546 -576.97845459]
[-30.05774879 -569.89263916]
[-17.97896957 -560.95281982]
[-7.33062935 -550.34948730]
[1.66030455 -538.30865479]
[8.80218887 -525.08703613]
[13.94279289 -510.96643066]
[16.97254562 -496.24777222]
[17.82686615 -481.24484253]
[16.48754692 -466.27740479]
[12.98313427 -451.66452026]
[7.38832426 -437.71762085]
[-0.17762817 -424.73400879]
[-9.55345535 -412.99041748]
[-20.53931046 -402.73718262]
[-32.90102768 -394.19284058]
[-46.37511826 -387.53952026]
[-41.76110840 -373.26678467]
[-37.14710236 -358.99404907]
[-32.53309250 -344.72131348]
[-27.91908264 -330.44857788]
[-13.02974033 -329.33648682]
[0.33567870 -322.59030151]
[10.12646103 -311.21023560]
[14.82703972 -296.91018677]
[13.69153595 -281.85943604]
[6.86193037 -268.35391235]
[-4.64884138 -258.46563721]
[-0.03483224 -244.19291687]
[4.57917690 -229.92018127]
[15.20270538 -224.13508606]
[19.16352081 -212.28199768]
[13.82099438 -200.54231262]
[18.22199249 -186.20246887]
[22.62298965 -171.86262512]
[27.23699951 -157.58988953]
[32.06299591 -143.38743591]
[36.88899612 -129.18498230]
[41.71499252 -114.98252869]
[46.54098892 -100.78006744]
[51.36698914 -86.57761383]
[64.79949951 -80.24491119]
[69.89607239 -65.91034698]
[63.16267014 -51.86402893]
[67.98867035 -37.66157532]
[72.81466675 -23.45911789]
[75.79883575 -21.58106422]
[78.02160645 -18.16429329]
[78.76969147 -13.58240795]
[77.52362061 -8.51344490]
[81.71063232 5.89033699]
[92.15721130 11.98915958]
[95.76335907 23.95492172]
[90.07366180 35.53033447]
[94.04576111 49.99485779]
[98.01786041 64.45938110]
[101.98995209 78.92390442]
[116.51616669 86.75696564]
[121.00476837 102.63841248]
[112.72784424 116.91637421]
[124.00969696 128.00827026]
[120.13255310 142.38940430]
[124.31956482 156.79319763]
[128.50657654 171.19697571]
[132.69358826 185.60075378]
[146.27824402 198.03210449]
[141.43305969 214.89897156]
[145.83404541 229.23881531]
[150.23504639 243.57865906]
[155.74458313 250.86445618]
[154.59310913 258.16485596]
[158.78012085 272.56863403]
[162.96713257 286.97241211]
[167.58114624 301.24514771]
[172.61805725 315.37417603]
[177.65496826 329.50320435]
[182.43566895 334.07009888]
[183.96304321 339.54406738]
[182.62467957 344.12857056]
[187.23867798 358.40130615]
[191.85269165 372.67404175]
[196.46670532 386.94677734]
[201.08070374 401.21951294]
[215.95239258 399.00979614]
[230.98495483 399.27816772]
[245.76829529 402.01733398]
[259.89910889 407.15252686]
[272.99188232 414.54364014]
[284.68945312 423.98910522]
[294.67269897 435.23120117]
[302.66928101 447.96322632]
[308.46102905 461.83786011]
[311.88995361 476.47659302]
[312.86251831 491.48004150]
[311.35214233 506.43893433]
[307.40008545 520.94519043]
[301.11413574 534.60302734]
[292.66580200 547.03991699]
[282.28552246 557.91644287]
[270.25650024 566.93603516]
[256.90692139 573.85253906]
[242.60092163 578.47729492]
[227.72880554 580.68414307]
[212.69630432 580.41290283]
[197.91349792 577.67089844]
[183.78367615 572.53295898]
[170.69232178 565.13934326]
[158.99656677 555.69158936]
[149.01547241 544.44757080]
[141.02134705 531.71405029]
[135.23226929 517.83825684]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 182]
[9 181]
[10 180]
[11 179]
[12 178]
[13 175]
[14 174]
[15 173]
[20 172]
[21 171]
[22 170]
[23 168]
[24 167]
[25 166]
[28 164]
[29 163]
[30 162]
[31 161]
[33 159]
[37 156]
[38 155]
[39 154]
[40 153]
[42 150]
[43 149]
[44 145]
[45 144]
[46 143]
[49 140]
[50 139]
[51 138]
[52 137]
[53 136]
[54 135]
[57 134]
[58 133]
[59 132]
[61 129]
[62 128]
[63 127]
[70 120]
[71 119]
[72 118]
[73 117]
[74 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
