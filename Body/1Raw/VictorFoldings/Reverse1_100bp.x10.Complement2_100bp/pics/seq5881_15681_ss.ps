%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[77.25389862 507.43823242]
[64.17814636 514.88281250]
[49.92971802 519.71795654]
[35.02368164 521.76892090]
[19.99887848 520.96160889]
[5.39844704 517.32513428]
[-8.24981499 510.99096680]
[-20.45253372 502.18814087]
[-30.76858521 491.23480225]
[-38.82505417 478.52691650]
[-44.33070374 464.52392578]
[-47.08650208 449.73196411]
[-46.99283981 434.68576050]
[-44.05309296 419.92926025]
[-38.37353897 405.99588013]
[-30.15948296 393.38931274]
[-19.70786285 382.56524658]
[-7.39649773 373.91500854]
[6.32956600 367.75128174]
[20.97413826 364.29684448]
[36.00782776 363.67663574]
[38.23294449 348.84259033]
[40.45806122 334.00854492]
[38.90222931 331.67669678]
[38.17632675 328.58807373]
[38.57323456 325.05566406]
[40.26720810 321.49264526]
[43.28260040 318.36834717]
[46.38671112 303.69302368]
[49.49081802 289.01773071]
[52.37609100 274.29785156]
[55.04188919 259.53662109]
[57.70768356 244.77540588]
[60.37347794 230.01419067]
[63.03927612 215.25297546]
[49.41608047 221.53059387]
[35.94620514 214.93041992]
[32.55913925 200.31782532]
[41.75169754 188.46469116]
[56.74747467 188.10870361]
[66.49170685 199.51068115]
[70.24800873 184.98861694]
[62.49121094 172.32498169]
[66.09375763 157.54403687]
[79.42913818 149.49386597]
[83.18544006 134.97180176]
[86.94174194 120.44974518]
[90.69804382 105.92768097]
[76.64567566 111.17467499]
[63.70401001 103.59092712]
[61.41315460 88.76689911]
[71.46185303 77.63030243]
[86.44256592 78.39063263]
[95.31176758 90.48577118]
[100.13777161 76.28331757]
[104.96376801 62.08086014]
[109.78976440 47.87840652]
[114.61576080 33.67594910]
[117.39137268 18.93498802]
[118.06115723 3.94994879]
[118.73094177 -11.03509045]
[119.40072632 -26.02012825]
[120.07051086 -41.00516891]
[120.74029541 -55.99020767]
[120.40531921 -70.98646545]
[119.06708527 -85.92665100]
[117.72885132 -100.86683655]
[115.83556366 -115.74687195]
[105.95170593 -128.10081482]
[111.51029968 -141.91932678]
[109.06457520 -156.71859741]
[106.61885071 -171.51786804]
[104.17311859 -186.31713867]
[101.72739410 -201.11640930]
[99.28166199 -215.91567993]
[84.27476501 -215.30522156]
[69.30660248 -216.54360962]
[54.60407639 -219.61206055]
[40.39008331 -224.46408081]
[26.88010216 -231.02609253]
[14.27893925 -239.19862366]
[2.77762508 -248.85778809]
[-7.44948339 -259.85714722]
[-16.24734497 -272.02993774]
[-23.48258781 -285.19168091]
[-29.04552650 -299.14276123]
[-32.85182571 -313.67178345]
[-34.84378815 -328.55841064]
[-34.99121475 -343.57699585]
[-33.29186630 -358.49984741]
[-29.77150726 -373.10076904]
[-24.48350716 -387.15838623]
[-17.50802994 -400.45959473]
[-8.95081997 -412.80276489]
[1.05839586 -424.00076294]
[12.36788082 -433.88385010]
[24.80618668 -442.30215454]
[38.18474960 -449.12811279]
[52.30075836 -454.25820923]
[66.94020844 -457.61471558]
[81.88118744 -459.14666748]
[96.89717102 -458.83093262]
[111.76053619 -456.67224121]
[126.24595642 -452.70333862]
[140.13383484 -446.98437500]
[153.21363831 -439.60205078]
[165.28706360 -430.66830444]
[176.17109680 -420.31857300]
[185.70074463 -408.70971680]
[193.73152161 -396.01773071]
[200.14169312 -382.43505859]
[204.83409119 -368.16757202]
[207.73756409 -353.43157959]
[208.80810547 -338.45046997]
[208.02947998 -323.45135498]
[205.41348267 -308.66162109]
[200.99980164 -294.30548096]
[194.85533142 -280.60055542]
[187.07319641 -267.75460815]
[177.77140808 -255.96238708]
[167.09097290 -245.40266418]
[155.19378662 -236.23551941]
[142.26020813 -228.59991455]
[128.48632812 -222.61161804]
[114.08093262 -218.36140442]
[116.52666473 -203.56213379]
[118.97238922 -188.76286316]
[121.41812134 -173.96359253]
[123.86384583 -159.16432190]
[126.30957031 -144.36505127]
[136.01849365 -133.06965637]
[130.63482666 -118.19259644]
[141.35900879 -128.68031311]
[156.26306152 -126.98647308]
[164.36029053 -114.35971832]
[159.68170166 -100.10801697]
[145.67619324 -94.73719788]
[132.66903687 -102.20507050]
[134.00727844 -87.26488495]
[135.34550476 -72.32469940]
[143.57589722 -84.86506653]
[157.23593140 -91.06211090]
[172.09289551 -88.99562836]
[183.54321289 -79.30593109]
[188.03886414 -64.99547577]
[184.18682861 -50.49851608]
[173.18070984 -40.30709457]
[158.43084717 -37.57912827]
[144.50767517 -43.15991211]
[135.72534180 -55.32042313]
[135.05555725 -40.33538437]
[134.38577271 -25.35034370]
[133.71598816 -10.36530495]
[133.04620361 4.61973381]
[132.37641907 19.60477257]
[139.87348938 6.61270523]
[150.82603455 -3.63628173]
[164.28654480 -10.25554752]
[179.09054565 -12.67246056]
[193.95735168 -10.67793369]
[207.60083008 -4.44451237]
[218.84068298 5.48854971]
[226.70454407 18.26194191]
[230.51213074 32.77064133]
[229.93403625 47.75949860]
[225.02026367 61.93182373]
[216.19590759 74.06157684]
[204.22438049 83.09940338]
[190.14131165 88.26345062]
[175.16505432 89.10697174]
[160.59118652 85.55699158]
[147.68049622 77.92062378]
[137.54989624 66.85848999]
[131.07577515 53.32757187]
[128.81822205 38.50194931]
[123.99221802 52.70440292]
[119.16622162 66.90686035]
[114.34022522 81.10931396]
[109.51422882 95.31176758]
[105.22010040 109.68398285]
[101.46380615 124.20603943]
[97.70750427 138.72810364]
[93.95120239 153.25016785]
[101.71066284 166.75677490]
[97.69437408 181.43069458]
[84.77006531 188.74491882]
[81.01376343 203.26698303]
[77.80049133 217.91876221]
[75.13469696 232.67997742]
[72.46890259 247.44120789]
[69.80310822 262.20242310]
[67.13730621 276.96362305]
[69.00980377 283.30441284]
[67.60924530 288.81216431]
[64.16612244 292.12185669]
[61.06201172 306.79714966]
[57.95790100 321.47244263]
[55.29210663 336.23367310]
[53.06698990 351.06771851]
[50.84187317 365.90176392]
[65.03195190 370.90554810]
[78.01849365 378.50466919]
[89.33203125 388.42434692]
[98.56359100 400.30606079]
[105.37945557 413.72024536]
[109.53323364 428.18200684]
[110.87477875 443.16854858]
[109.35559082 458.13815308]
[105.03058624 472.54962158]
[98.05610657 485.88204956]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 200]
[22 199]
[23 198]
[28 197]
[29 196]
[30 195]
[31 192]
[32 191]
[33 190]
[34 189]
[35 188]
[41 187]
[42 186]
[45 183]
[46 182]
[47 181]
[48 180]
[54 179]
[55 178]
[56 177]
[57 176]
[58 175]
[59 155]
[60 154]
[61 153]
[62 152]
[63 151]
[64 150]
[65 140]
[66 139]
[67 138]
[68 132]
[70 130]
[71 129]
[72 128]
[73 127]
[74 126]
[75 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
