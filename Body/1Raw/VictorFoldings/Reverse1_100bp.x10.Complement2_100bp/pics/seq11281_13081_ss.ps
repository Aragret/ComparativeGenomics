%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[5.18973446 519.88757324]
[1.90486360 534.56835938]
[-4.02187490 548.39544678]
[-12.38861942 560.89788818]
[-22.91040039 571.64996338]
[-35.22885132 580.28540039]
[-48.92440796 586.51007080]
[-63.53060913 590.11193848]
[-78.54996490 590.96838379]
[-93.47093201 589.05017090]
[-107.78530121 584.42272949]
[-121.00553131 577.24359131]
[-132.68135071 567.75726318]
[-142.41508484 556.28692627]
[-149.87519836 543.22314453]
[-154.80760193 529.01098633]
[-157.04431152 514.13446045]
[-156.50914001 499.10018921]
[-153.22030640 484.42034912]
[-147.28984070 470.59484863]
[-138.91972351 458.09460449]
[-128.39505005 447.34539795]
[-116.07427216 438.71328735]
[-102.37703705 432.49234009]
[-87.76986694 428.89437866]
[-72.75027466 428.04199219]
[-57.82982635 429.96420288]
[-53.21581650 415.69146729]
[-48.60180664 401.41873169]
[-43.98779678 387.14599609]
[-39.37378693 372.87326050]
[-34.86616135 358.56658936]
[-30.46516228 344.22674561]
[-26.06416321 329.88687134]
[-21.66316605 315.54702759]
[-22.98325729 312.27752686]
[-22.78531456 308.20617676]
[-20.70972061 304.05343628]
[-16.73221397 300.67312622]
[-11.69529819 286.54409790]
[-6.65838146 272.41506958]
[-1.62146544 258.28604126]
[-13.13709927 267.89801025]
[-27.43139839 272.44479370]
[-42.38388443 271.25183105]
[-55.77645111 264.49615479]
[-65.62238312 253.17991638]
[-70.46110535 238.98178101]
[-69.57481384 224.00799561]
[-63.09498215 210.47979736]
[-51.98286438 200.40405273]
[-37.88687134 195.27540588]
[-22.89805984 195.85467529]
[-9.23993301 202.05593872]
[1.06140912 212.95924377]
[6.47782278 226.94718933]
[6.20621729 241.94285583]
[14.05797291 229.16201782]
[21.90972900 216.38116455]
[29.76148415 203.60032654]
[37.61323929 190.81948853]
[45.46499634 178.03865051]
[53.31674957 165.25779724]
[61.16850662 152.47695923]
[68.82910156 139.58062744]
[76.29684448 126.57167816]
[83.76458740 113.56272888]
[91.23233032 100.55377197]
[90.68840027 97.55483246]
[91.22364807 94.29170227]
[92.93801117 91.16369629]
[95.78253937 88.60148621]
[99.55163574 87.01186371]
[107.78044128 74.47046661]
[116.00924683 61.92906570]
[124.23806000 49.38766479]
[131.01805115 36.00738907]
[136.26477051 21.95491982]
[141.51148987 7.90244865]
[146.75820923 -6.15002298]
[140.44599915 -20.39059448]
[145.96710205 -34.56705475]
[159.58221436 -40.49701691]
[164.82893372 -54.54948807]
[169.65492249 -68.75194550]
[174.05592346 -83.09178925]
[178.45692444 -97.43164062]
[182.85792542 -111.77148438]
[187.25892639 -126.11132812]
[191.65991211 -140.45117188]
[190.55416870 -146.96952820]
[192.59930420 -152.27183533]
[196.41131592 -155.14891052]
[201.23731995 -169.35136414]
[206.06330872 -183.55381775]
[210.88931274 -197.75627136]
[197.53845215 -204.65644836]
[185.36518860 -213.46946716]
[174.64147949 -223.99845886]
[165.60688782 -236.00819397]
[158.46325684 -249.23037720]
[153.37017822 -263.36962891]
[150.44142151 -278.11004639]
[149.74243164 -293.12234497]
[151.28880310 -308.07113647]
[155.04602051 -322.62246704]
[160.93011475 -336.45123291]
[168.80966187 -349.24853516]
[178.50860596 -360.72842407]
[189.81027222 -370.63446045]
[202.46218872 -378.74536133]
[216.18170166 -384.87991333]
[230.66232300 -388.90103149]
[245.58052063 -390.71893311]
[260.60305786 -390.29299927]
[275.39428711 -387.63272095]
[289.62377930 -382.79751587]
[302.97366333 -375.89544678]
[315.14566040 -367.08068848]
[325.86785889 -356.55017090]
[334.90075684 -344.53915405]
[342.04251099 -331.31594849]
[347.13357544 -317.17599487]
[350.06021118 -302.43515015]
[350.75708008 -287.42276001]
[349.20858765 -272.47418213]
[345.44927979 -257.92337036]
[339.56323242 -244.09544373]
[331.68185425 -231.29928589]
[321.98129272 -219.82077026]
[310.67819214 -209.91632080]
[298.02511597 -201.80723572]
[284.30471802 -195.67465210]
[269.82354736 -191.65557861]
[254.90507507 -189.83979797]
[239.88261414 -190.26788330]
[225.09176636 -192.93028259]
[220.26576233 -178.72782898]
[215.43977356 -164.52537537]
[210.61376953 -150.32292175]
[205.99977112 -136.05018616]
[201.59877014 -121.71033478]
[197.19776917 -107.37048340]
[192.79676819 -93.03063965]
[188.39576721 -78.69079590]
[183.99478149 -64.35094452]
[185.18748474 -61.81410217]
[185.44718933 -58.65195465]
[184.53067017 -55.21751022]
[182.32690430 -51.94521713]
[178.88139343 -49.30276871]
[173.63468933 -35.25029755]
[180.03192139 -21.84840202]
[174.91119385 -7.52245569]
[160.81066895 -0.90330464]
[155.56394958 13.14916706]
[150.31724548 27.20163727]
[145.07052612 41.25410843]
[156.58383179 31.63934708]
[170.76940918 26.76395416]
[185.76089478 27.26937485]
[199.58589172 33.08910751]
[210.42549133 43.45747375]
[216.85357666 57.01032639]
[218.02438354 71.96456146]
[213.78390503 86.35269165]
[204.69003296 98.28171539]
[191.93922424 106.18215179]
[177.20907593 109.01457214]
[162.43757629 106.40632629]
[149.56819153 98.70056152]
[140.29408264 86.91110992]
[135.83544922 72.58908081]
[136.77946472 57.61647034]
[128.55064392 70.15787506]
[120.32184601 82.69927216]
[112.09303284 95.24067688]
[104.24127960 108.02151489]
[96.77353668 121.03047180]
[89.30579376 134.03941345]
[81.83805847 147.04837036]
[81.47262573 153.64973450]
[78.30391693 158.36740112]
[73.94934845 160.32872009]
[66.09759521 173.10955811]
[58.24583817 185.89039612]
[50.39408112 198.67123413]
[42.54232788 211.45208740]
[34.69057083 224.23292542]
[26.83881569 237.01376343]
[18.98706055 249.79461670]
[12.50756454 263.32296753]
[7.47064781 277.45199585]
[2.43373179 291.58102417]
[-2.60318446 305.71005249]
[-7.32331896 319.94802856]
[-11.72431660 334.28787231]
[-16.12531471 348.62771606]
[-20.52631378 362.96759033]
[-20.05248260 372.08972168]
[-25.10105515 377.48727417]
[-29.71506500 391.76000977]
[-34.32907486 406.03274536]
[-38.94308472 420.30548096]
[-43.55709076 434.57821655]
[-30.33492661 441.75378418]
[-18.65655327 451.23693848]
[-8.91973400 462.70468140]
[-1.45610046 475.76641846]
[3.48013830 489.97726440]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 205]
[28 204]
[29 203]
[30 202]
[31 201]
[32 199]
[33 198]
[34 197]
[35 196]
[39 195]
[40 194]
[41 193]
[42 192]
[57 191]
[58 190]
[59 189]
[60 188]
[61 187]
[62 186]
[63 185]
[64 184]
[65 181]
[66 180]
[67 179]
[68 178]
[73 177]
[74 176]
[75 175]
[76 174]
[77 158]
[78 157]
[79 156]
[80 155]
[83 152]
[84 151]
[85 146]
[86 145]
[87 144]
[88 143]
[89 142]
[90 141]
[93 140]
[94 139]
[95 138]
[96 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
