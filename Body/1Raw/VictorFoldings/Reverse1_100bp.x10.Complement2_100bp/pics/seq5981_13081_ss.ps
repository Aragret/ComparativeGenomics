%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[32.99290848 360.58999634]
[37.51705933 374.91433716]
[40.13274765 389.70669556]
[40.79520798 404.71389771]
[39.49311066 419.67916870]
[36.24872971 434.34643555]
[31.11758995 448.46475220]
[24.18748474 461.79248047]
[15.57699966 474.10162354]
[5.43347120 485.18148804]
[-6.06953144 494.84255981]
[-18.73517609 502.91946411]
[-32.34673691 509.27401733]
[-46.67130661 513.79748535]
[-61.46376801 516.41247559]
[-76.47100067 517.07421875]
[-91.43621826 515.77142334]
[-106.10334015 512.52630615]
[-120.22139740 507.39450073]
[-133.54881287 500.46377563]
[-145.85752869 491.85269165]
[-156.93692017 481.70864868]
[-166.59742737 470.20516968]
[-174.67373657 457.53915405]
[-181.02764893 443.92727661]
[-185.55043030 429.60250854]
[-188.16470337 414.80993652]
[-188.82574463 399.80264282]
[-187.52221680 384.83749390]
[-184.27644348 370.17053223]
[-179.14396667 356.05273438]
[-172.21258545 342.72564697]
[-163.60093689 330.41732788]
[-153.45634460 319.33840942]
[-141.95242310 309.67846680]
[-129.28601074 301.60275269]
[-115.67384338 295.24948120]
[-101.34884644 290.72738647]
[-86.55613708 288.11380005]
[-71.54883575 287.45349121]
[-56.58374405 288.75772095]
[-41.91693115 292.00421143]
[-27.79936409 297.13735962]
[-14.47261333 304.06936646]
[-5.87404966 291.77853394]
[2.72451425 279.48770142]
[11.32307816 267.19686890]
[11.90105534 249.65739441]
[28.65096283 242.00741577]
[37.06558228 229.58992004]
[44.14268875 216.36439514]
[49.80547333 202.47436523]
[55.46826172 188.58433533]
[53.10829544 173.87788391]
[65.48287964 164.01988220]
[71.14566803 150.12985229]
[76.80844879 136.23982239]
[82.47123718 122.34980011]
[82.08550262 114.96921539]
[88.32312012 108.29613495]
[86.81798553 94.39555359]
[97.87270355 85.83489990]
[103.74166107 72.03072357]
[109.61062622 58.22654724]
[115.47958374 44.42237091]
[118.58369446 29.74706841]
[118.80702209 14.74873161]
[119.03034973 -0.24960580]
[119.25367737 -15.24794292]
[119.47700500 -30.24628067]
[119.70033264 -45.24461746]
[119.92366028 -60.24295425]
[120.14698792 -75.24129486]
[112.61601257 -89.15513611]
[120.54194641 -101.76580048]
[120.76527405 -116.76413727]
[107.53000641 -122.02519989]
[96.90779114 -131.46817017]
[90.16103363 -143.94352722]
[88.08221436 -157.94299316]
[90.90088654 -171.78198242]
[98.25848389 -183.80218506]
[109.25381470 -192.57037354]
[122.55339813 -197.04925537]
[123.00000763 -212.04260254]
[123.44661713 -227.03594971]
[122.88840485 -242.02555847]
[121.32788086 -256.94418335]
[119.76735687 -271.86276245]
[118.20683289 -286.78137207]
[103.28685760 -288.98257446]
[89.38335419 -294.82580566]
[77.37030792 -303.94378662]
[68.00286102 -315.76333618]
[61.86987305 -329.54147339]
[59.35685349 -344.41210938]
[60.62178421 -359.44042969]
[65.58514404 -373.68176270]
[73.93493652 -386.24090576]
[85.14628601 -396.32833862]
[98.51443481 -403.30999756]
[113.19905853 -406.74697876]
[128.27705383 -406.42324829]
[142.80061340 -402.35913086]
[155.85678101 -394.81011963]
[166.62481689 -384.25076294]
[174.42785645 -371.34481812]
[178.77537537 -356.90356445]
[179.39410400 -341.83477783]
[176.24511719 -327.08572388]
[169.52639771 -313.58352661]
[159.66027832 -302.17694092]
[147.26693726 -293.58297729]
[133.12544250 -288.34188843]
[134.68595886 -273.42330933]
[136.24649048 -258.50469971]
[137.80700684 -243.58609009]
[145.84977722 -256.24758911]
[159.41603088 -262.64733887]
[174.30212402 -260.80227661]
[185.89543152 -251.28413391]
[190.60365295 -237.04220581]
[186.96788025 -222.48950195]
[176.11470032 -212.13534546]
[161.40710449 -209.18807983]
[147.40237427 -214.56094360]
[138.43995667 -226.58935547]
[137.99336243 -211.59599304]
[137.54675293 -196.60264587]
[152.09857178 -190.32804871]
[163.15521240 -178.92193604]
[169.00241089 -164.11027527]
[168.71728516 -148.15023804]
[162.31391907 -133.48625183]
[150.74572754 -122.37554932]
[135.76361084 -116.54080963]
[135.54028320 -101.54246521]
[143.08723450 -88.70140839]
[135.14532471 -75.01796722]
[134.92199707 -60.01962662]
[134.69866943 -45.02128983]
[134.47534180 -30.02295303]
[134.25201416 -15.02461529]
[134.02868652 -0.02627808]
[133.80535889 14.97205925]
[133.58203125 29.97039604]
[140.41078186 16.61494446]
[150.00497437 5.08448458]
[161.89648438 -4.05838442]
[175.50509644 -10.36756229]
[190.16680908 -13.53520966]
[205.16625977 -13.40677071]
[219.77159119 -9.98851204]
[233.27015686 -3.44721794]
[245.00335693 5.89794731]
[254.39868164 17.59101295]
[260.99774170 31.06144524]
[264.47851562 45.65199661]
[264.67120361 60.65076065]
[261.56637573 75.32591248]
[255.31553650 88.96141815]
[246.22367859 100.89197540]
[234.73440552 110.53546143]
[221.40832520 117.42134857]
[206.89562988 121.21366119]
[191.90443420 121.72737122]
[177.16618347 118.93740082]
[163.39997864 112.97988892]
[151.27754211 104.14550781]
[141.39031982 92.86531067]
[134.22073364 79.68968201]
[130.11862183 65.26149750]
[129.28376770 50.29133224]
[123.41480255 64.09551239]
[117.54583740 77.89968872]
[111.67687988 91.70386505]
[113.18201447 105.60444641]
[102.12729645 114.16510010]
[96.36126709 128.01258850]
[90.69847870 141.90260315]
[85.03569031 155.79263306]
[79.37290192 169.68266296]
[81.32782745 185.38262939]
[69.35828400 194.24713135]
[63.69549942 208.13714600]
[58.03271484 222.02717590]
[69.96605682 212.93898010]
[84.44912720 209.03503418]
[99.33342743 210.89445496]
[112.41098022 218.24139404]
[121.74179840 229.98600769]
[125.94171143 244.38603210]
[124.38768768 259.30532837]
[117.31025696 272.53067017]
[105.75931549 282.10018921]
[91.44837189 286.59429932]
[76.50038147 285.34631348]
[63.13277817 278.54138184]
[53.32856750 267.18896484]
[48.54215240 252.97311401]
[49.48307800 238.00453186]
[41.06845856 250.42202759]
[42.73143768 263.21255493]
[35.46724319 273.38186646]
[23.61391640 275.79541016]
[15.01535225 288.08624268]
[6.41678810 300.37710571]
[-2.18177581 312.66793823]
[8.89859200 322.81094360]
[18.56019211 334.31347656]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 208]
[45 207]
[46 206]
[47 205]
[49 202]
[50 201]
[51 186]
[52 185]
[53 184]
[55 182]
[56 181]
[57 180]
[58 179]
[60 178]
[62 176]
[63 175]
[64 174]
[65 173]
[66 146]
[67 145]
[68 144]
[69 143]
[70 142]
[71 141]
[72 140]
[73 139]
[75 137]
[76 136]
[84 129]
[85 128]
[86 127]
[87 117]
[88 116]
[89 115]
[90 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
