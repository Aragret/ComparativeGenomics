%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[77.43227386 664.34375000]
[65.98748016 654.18133545]
[60.58718872 639.86016846]
[62.47234726 624.67120361]
[71.20976257 612.10473633]
[84.79164124 605.04846191]
[84.79164124 590.04846191]
[84.79164124 575.04846191]
[84.79164124 560.04846191]
[77.05434418 547.32116699]
[84.79164124 533.52099609]
[84.79164124 518.52099609]
[84.79164124 503.52099609]
[77.05434418 490.79373169]
[84.79164124 476.99353027]
[84.79164124 461.99353027]
[84.79164124 446.99353027]
[77.05434418 434.26626587]
[84.79164124 420.46609497]
[77.05434418 407.73883057]
[84.79164124 393.93865967]
[84.79164124 378.93865967]
[84.79164124 363.93865967]
[84.79164124 348.93865967]
[76.46268463 340.16625977]
[76.33992767 327.66949463]
[85.03455353 318.14236450]
[85.25788116 303.14404297]
[85.48120880 288.14569092]
[82.85664368 284.15563965]
[82.71075439 278.47445679]
[85.94111633 272.70590210]
[86.61090088 257.72085571]
[87.28068542 242.73582458]
[87.95046997 227.75077820]
[88.62025452 212.76574707]
[89.29003906 197.78070068]
[77.42097473 185.86584473]
[77.85011292 168.71560669]
[90.80016327 156.95483398]
[91.24677277 141.96148682]
[91.69337463 126.96813965]
[92.13998413 111.97478485]
[85.68240356 99.57352448]
[92.86666870 87.57860565]
[92.19688416 72.59356689]
[90.41442108 57.69985199]
[88.63195038 42.80613327]
[86.84948730 27.91241646]
[85.06701660 13.01869965]
[75.74465179 0.23574044]
[81.91473389 -13.32078362]
[80.13227081 -28.21450043]
[70.49366760 -36.78538513]
[69.31565857 -49.22709274]
[76.68678284 -58.81839752]
[74.02098846 -73.57961273]
[70.26468658 -88.10166931]
[66.50839233 -102.62373352]
[62.75209045 -117.14579010]
[58.99578857 -131.66784668]
[53.46136856 -117.72618103]
[41.75916290 -108.34223938]
[26.94809914 -105.96896362]
[12.89975643 -111.22672272]
[3.28633642 -122.74115753]
[0.62076402 -137.50241089]
[5.59981346 -151.65194702]
[16.92197418 -161.49108887]
[31.62765884 -164.44790649]
[45.87283707 -159.74952698]
[55.93344879 -148.62484741]
[54.37292480 -163.54345703]
[52.81240082 -178.46205139]
[51.25187683 -193.38066101]
[49.69135666 -208.29927063]
[40.56034088 -221.21960449]
[46.93157578 -234.68275452]
[45.37105179 -249.60136414]
[43.81053162 -264.51995850]
[29.50944710 -269.73919678]
[18.93571472 -280.60580444]
[14.14818096 -294.92712402]
[16.04562569 -309.84558105]
[24.19857025 -322.40896606]
[36.94498825 -330.15457153]
[35.38446426 -345.07318115]
[33.82394028 -359.99179077]
[30.75644493 -364.21524048]
[29.71942520 -368.74047852]
[30.48782349 -372.74356079]
[32.54216385 -375.60922241]
[31.64934921 -390.58264160]
[30.75653267 -405.55603027]
[16.11166191 -409.34854126]
[3.35659552 -417.48260498]
[-6.25905657 -429.16140747]
[-11.79325008 -443.24075317]
[-12.70380020 -458.34130859]
[-8.90150261 -472.98361206]
[-0.75886559 -485.73324585]
[10.92637730 -495.34106445]
[25.00942421 -500.86581421]
[40.11056519 -501.76626587]
[54.75033951 -497.95413208]
[67.49449158 -489.80297852]
[77.09449005 -478.11129761]
[82.60980988 -464.02453613]
[83.50012207 -448.92279053]
[79.67819977 -434.28558350]
[71.51848602 -421.54690552]
[59.82037735 -411.95474243]
[45.72993851 -406.44885254]
[46.62275314 -391.47546387]
[47.51557159 -376.50204468]
[48.74254608 -361.55230713]
[50.30307007 -346.63369751]
[51.86359406 -331.71511841]
[65.93697357 -326.77493286]
[76.51331329 -316.17065430]
[81.45692444 -301.96777344]
[79.73667908 -286.96572876]
[71.64057922 -274.14624023]
[58.72913361 -266.08050537]
[60.28965759 -251.16189575]
[61.85018158 -236.24328613]
[70.86957550 -224.39002991]
[64.60996246 -209.85978699]
[66.17048645 -194.94117737]
[67.73100281 -180.02258301]
[69.29152679 -165.10397339]
[70.85205078 -150.18536377]
[73.51784515 -135.42414856]
[77.27414703 -120.90209198]
[81.03044891 -106.38003540]
[84.78675079 -91.85797119]
[88.54305267 -77.33591461]
[94.07746887 -91.27758789]
[105.77967834 -100.66152954]
[120.59073639 -103.03479767]
[134.63908386 -97.77703857]
[144.25250244 -86.26260376]
[146.91807556 -71.50135040]
[141.93902588 -57.35182190]
[130.61686707 -47.51268387]
[115.91117859 -44.55585480]
[101.66600037 -49.25424576]
[91.60539246 -60.37891769]
[102.66371918 -46.75246048]
[95.02598572 -29.99696732]
[96.80845642 -15.10324955]
[106.00332642 -3.38558865]
[99.96073914 11.23623371]
[101.74320221 26.12995148]
[103.52566528 41.02367020]
[105.30813599 55.91738510]
[107.09059906 70.81110382]
[114.43802643 57.73382187]
[127.28903198 49.99742889]
[142.28437805 49.62420273]
[155.50434875 56.71170044]
[163.49324036 69.40727234]
[164.16279602 84.39231873]
[157.33799744 97.74979401]
[144.80282593 105.98807526]
[129.83393860 106.95370483]
[116.34416962 100.39426422]
[107.86001587 88.02521515]
[114.31759644 100.42647552]
[107.13333130 112.42139435]
[106.68672180 127.41474152]
[106.24011993 142.40809631]
[105.79351044 157.40144348]
[116.09687042 166.07643127]
[119.47340393 178.91424561]
[114.90712738 191.17112732]
[104.27507782 198.45048523]
[103.60529327 213.43553162]
[102.93550873 228.42056274]
[102.26572418 243.40560913]
[101.59593964 258.39065552]
[100.92615509 273.37567139]
[100.47955322 288.36901855]
[100.25622559 303.36737061]
[100.03289795 318.36569214]
[109.37233734 334.23568726]
[99.79164124 348.93865967]
[99.79164124 363.93865967]
[99.79164124 378.93865967]
[99.79164124 393.93865967]
[107.52894592 407.73883057]
[99.79164124 420.46609497]
[107.52894592 434.26626587]
[99.79164124 446.99353027]
[99.79164124 461.99353027]
[99.79164124 476.99353027]
[107.52894592 490.79373169]
[99.79164124 503.52099609]
[99.79164124 518.52099609]
[99.79164124 533.52099609]
[107.52894592 547.32116699]
[99.79164124 560.04846191]
[99.79164124 575.04846191]
[99.79164124 590.04846191]
[99.79164124 605.04846191]
[113.37351990 612.10473633]
[122.11093903 624.67120361]
[123.99609375 639.86016846]
[118.59580994 654.18133545]
[107.15100861 664.34375000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 205]
[7 204]
[8 203]
[9 202]
[11 200]
[12 199]
[13 198]
[15 196]
[16 195]
[17 194]
[19 192]
[21 190]
[22 189]
[23 188]
[24 187]
[27 185]
[28 184]
[29 183]
[32 182]
[33 181]
[34 180]
[35 179]
[36 178]
[37 177]
[40 173]
[41 172]
[42 171]
[43 170]
[45 168]
[46 157]
[47 156]
[48 155]
[49 154]
[50 153]
[52 151]
[53 150]
[56 148]
[57 137]
[58 136]
[59 135]
[60 134]
[61 133]
[72 132]
[73 131]
[74 130]
[75 129]
[76 128]
[78 126]
[79 125]
[80 124]
[86 118]
[87 117]
[88 116]
[92 115]
[93 114]
[94 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
