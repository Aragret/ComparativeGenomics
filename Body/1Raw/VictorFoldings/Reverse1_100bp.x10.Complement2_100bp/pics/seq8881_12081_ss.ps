%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[98.59199524 556.86212158]
[87.18920898 547.04058838]
[77.92184448 535.18298340]
[71.14612579 521.74511719]
[67.12248993 507.24353027]
[66.00559235 492.23556519]
[67.83836365 477.29812622]
[72.55035400 463.00537109]
[79.96045685 449.90664673]
[89.78384399 438.50543213]
[101.64292908 429.23999023]
[115.08187103 422.46646118]
[129.58413696 418.44515991]
[128.46847534 403.48669434]
[127.35283661 388.52825928]
[126.23718262 373.56979370]
[125.12153625 358.61135864]
[124.00588989 343.65289307]
[115.34340668 331.53634644]
[122.03286743 317.19891357]
[120.91722107 302.24047852]
[119.80156708 287.28201294]
[111.13909149 275.16546631]
[117.82855225 260.82806396]
[109.16606903 248.71150208]
[115.85552979 234.37408447]
[114.73988342 219.41563416]
[113.62422943 204.45716858]
[110.65415192 200.71716309]
[110.00199127 195.07165527]
[112.70483398 189.03790283]
[112.03504181 174.05287170]
[111.36525726 159.06782532]
[110.69547272 144.08279419]
[106.83116913 129.58909607]
[99.95175934 116.25966644]
[89.09020233 112.05634308]
[83.82598877 101.66744232]
[86.85994720 90.42304993]
[80.17974854 76.99267578]
[73.49955750 63.56229782]
[66.81935883 50.13191986]
[53.74584579 41.22159958]
[55.00545883 26.38035202]
[48.32526779 12.94997501]
[41.64507294 -0.48040080]
[34.96487808 -13.91077709]
[28.28468132 -27.34115219]
[21.60448837 -40.77153015]
[4.92120981 -46.03342819]
[-2.64576030 -61.43004608]
[3.14771771 -77.21846771]
[-10.05700684 -85.93315887]
[-9.01849747 -100.79151917]
[-15.89791012 -114.12094879]
[-22.77732277 -127.45037079]
[-23.62226868 -112.47418976]
[-30.06472015 -98.92816162]
[-41.14897919 -88.82176971]
[-55.23075485 -83.65422821]
[-70.22110748 -84.19210815]
[-83.89630890 -90.35562897]
[-94.22771454 -101.23046875]
[-99.68272400 -115.20339966]
[-99.45213318 -130.20162964]
[-93.57012939 -144.00024414]
[-82.90928650 -154.55232239]
[-69.05106354 -160.29252625]
[-54.05126190 -160.36930847]
[-40.13500595 -154.77130127]
[-29.36777496 -144.33049011]
[-33.33987045 -158.79501343]
[-37.31196594 -173.25953674]
[-41.28406143 -187.72406006]
[-46.57423019 -195.17066956]
[-45.20590591 -202.43354797]
[-48.96220398 -216.95561218]
[-52.71850586 -231.47766113]
[-56.47480774 -245.99972534]
[-71.45931244 -244.74566650]
[-86.44020081 -246.04220581]
[-100.98643494 -249.85205078]
[-114.67951202 -256.06558228]
[-127.12543488 -264.50399780]
[-137.96611023 -274.92453003]
[-146.88964844 -287.02737427]
[-153.63928223 -300.46426392]
[-158.02081299 -314.84863281]
[-159.90818787 -329.76660156]
[-159.24710083 -344.78897095]
[-156.05656433 -359.48345947]
[-150.42837524 -373.42733765]
[-142.52447510 -386.21939087]
[-132.57226562 -397.49154663]
[-120.85810852 -406.91949463]
[-107.71903229 -414.23199463]
[-93.53307343 -419.21862793]
[-78.70838928 -421.73593140]
[-63.67152023 -421.71148682]
[-48.85510635 -419.14596558]
[-34.68544388 -414.11322021]
[-21.57022285 -406.75799561]
[-9.88679409 -397.29199219]
[0.02868638 -385.98751831]
[7.89093113 -373.16983032]
[13.47372723 -359.20770264]
[16.61644554 -344.50289917]
[17.22866631 -329.47848511]
[15.29277325 -314.56674194]
[10.86446476 -300.19668579]
[4.07115412 -286.78182983]
[-4.89170313 -274.70806885]
[-15.76622677 -264.32284546]
[-28.23953629 -255.92497253]
[-41.95274734 -249.75602722]
[-38.19644547 -235.23396301]
[-34.44014740 -220.71191406]
[-30.68384552 -206.18984985]
[-26.81954002 -191.69615173]
[-22.84744263 -177.23162842]
[-18.87534714 -162.76710510]
[-14.90325069 -148.30258179]
[-9.44789410 -134.32978821]
[-2.56848121 -121.00035858]
[4.31093121 -107.67092896]
[17.02359390 -99.90965271]
[16.47714615 -84.09788513]
[29.17974091 -81.93602753]
[38.45632172 -72.71501160]
[40.76218414 -59.64239120]
[35.03486252 -47.45172501]
[41.71505737 -34.02134705]
[48.39525223 -20.59097099]
[55.07544708 -7.16059542]
[61.75564194 6.26978064]
[68.43583679 19.70015717]
[81.03153992 27.64984894]
[80.24973297 43.45172501]
[86.92993164 56.88210297]
[93.61012268 70.31247711]
[100.29032135 83.74285126]
[114.50398254 92.65060425]
[113.28118896 109.38025665]
[120.16059875 122.70968628]
[119.89692688 107.71199799]
[122.61669922 92.96063232]
[128.21160889 79.04312134]
[136.45878601 66.51380157]
[147.02976990 55.87170410]
[159.50352478 47.54069901]
[173.38320923 41.85261154]
[188.11601257 39.03399277]
[203.11512756 39.19710922]
[217.78314209 42.33546448]
[231.53584290 48.32405853]
[243.82545471 56.92436600]
[254.16250610 67.79383850]
[262.13525391 80.49955750]
[267.42614746 94.53544617]
[269.82449341 109.34247589]
[269.23471069 124.33087921]
[265.68032837 138.90367126]
[259.30288696 152.48042297]
[250.35641479 164.52038574]
[239.19725037 174.54402161]
[226.26985168 182.15206909]
[212.08912659 187.04150391]
[197.21984863 189.01759338]
[182.25430298 188.00164795]
[167.78852844 184.03408813]
[154.39869690 177.27297974]
[142.61814880 167.98759460]
[132.91606140 156.54777527]
[125.68051147 143.41300964]
[126.35029602 158.39804077]
[127.02008057 173.38308716]
[127.68987274 188.36811829]
[128.58268738 203.34152222]
[129.69833374 218.29997253]
[130.81398010 233.25843811]
[139.55625916 246.44490051]
[132.78700256 259.71240234]
[141.52928162 272.89886475]
[134.76002502 286.16638184]
[135.87567139 301.12481689]
[136.99131775 316.08328247]
[145.73359680 329.26974487]
[138.96434021 342.53723145]
[140.07998657 357.49569702]
[141.19563293 372.45416260]
[142.31129456 387.41259766]
[143.42694092 402.37106323]
[144.54258728 417.32949829]
[159.48091125 419.15502930]
[173.77597046 423.86007690]
[186.87829590 431.26382446]
[198.28427124 441.08166504]
[207.55546570 452.93624878]
[214.33552551 466.37191772]
[218.36386108 480.87222290]
[219.48562622 495.87982178]
[217.65768433 510.81784058]
[212.95031738 525.11212158]
[205.54444885 538.21325684]
[195.72476196 549.61761475]
[183.86868286 558.88690186]
[170.43193054 565.66479492]
[155.93096924 569.69079590]
[140.92318726 570.81011963]
[125.98545837 568.97979736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 193]
[14 192]
[15 191]
[16 190]
[17 189]
[18 188]
[20 186]
[21 185]
[22 184]
[24 182]
[26 180]
[27 179]
[28 178]
[31 177]
[32 176]
[33 175]
[34 174]
[35 144]
[36 143]
[39 141]
[40 140]
[41 139]
[42 138]
[44 136]
[45 135]
[46 134]
[47 133]
[48 132]
[49 131]
[52 127]
[54 125]
[55 124]
[56 123]
[71 122]
[72 121]
[73 120]
[74 119]
[76 118]
[77 117]
[78 116]
[79 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
