%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[53.67575836 734.68890381]
[49.77426529 749.31964111]
[41.33151627 761.88934326]
[29.26331902 771.03472900]
[14.87874222 775.76361084]
[-0.26188314 775.56317139]
[-14.51621532 770.45507812]
[-26.33805084 760.99340820]
[-34.44504547 748.20452881]
[-37.95781708 733.47570801]
[-36.49531937 718.40454102]
[-30.21619606 704.62585449]
[-19.80156136 693.63433838]
[-6.38111496 686.62213135]
[8.58939266 684.35003662]
[11.25518799 669.58880615]
[13.92098331 654.82757568]
[16.58677864 640.06634521]
[19.25257492 625.30517578]
[21.91836929 610.54394531]
[7.61606550 604.78240967]
[-5.18549490 596.17749023]
[-15.92859840 585.10113525]
[-24.14462471 572.03326416]
[-29.47448921 557.54046631]
[-31.68433762 542.25189209]
[-30.67580032 526.83178711]
[-26.49037552 511.95046997]
[-19.30772400 498.25534058]
[-9.43795681 486.34280396]
[2.69175076 476.73205566]
[16.55564880 469.84268188]
[31.55219650 465.97622681]
[47.03017426 465.30300903]
[49.47590256 450.50372314]
[51.92162704 435.70446777]
[54.36735535 420.90518188]
[56.81308365 406.10592651]
[59.25881195 391.30664062]
[61.48392868 376.47259521]
[63.48794174 361.60708618]
[65.49195862 346.74154663]
[67.49597168 331.87600708]
[69.49998474 317.01049805]
[57.62807083 308.01477051]
[51.81422424 294.19247437]
[53.71213531 279.21704102]
[62.91144562 267.12283325]
[77.02126312 261.21856689]
[79.02527618 246.35304260]
[81.02928925 231.48751831]
[83.03330231 216.62199402]
[85.03731537 201.75645447]
[87.04132843 186.89093018]
[89.04534149 172.02540588]
[91.04935455 157.15988159]
[92.16500854 142.20141602]
[92.38833618 127.20308685]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[92.50000000 72.79650116]
[92.50000000 57.79650116]
[92.27667236 42.79816437]
[91.83006287 27.80481339]
[91.38346100 12.81146336]
[90.93685150 -2.18188667]
[80.86252594 -8.49413681]
[75.14468384 -18.78039742]
[75.10267639 -30.42909622]
[80.63126373 -40.54593277]
[90.25545502 -46.67301559]
[90.25545502 -61.67301559]
[90.25545502 -76.67301178]
[90.25545502 -91.67301178]
[89.69725037 -106.66262817]
[88.58159637 -121.62107849]
[87.46595001 -136.57952881]
[86.35030365 -151.53797913]
[73.31828308 -159.75216675]
[67.68769836 -173.89959717]
[71.42311859 -188.47734070]
[82.88897705 -197.94686890]
[81.77333069 -212.90531921]
[80.65768433 -227.86378479]
[79.54203033 -242.82223511]
[78.42638397 -257.78070068]
[75.85543823 -261.27984619]
[74.65267181 -265.03723145]
[74.73125458 -268.59100342]
[75.86328888 -271.55496216]
[77.71671295 -273.65805054]
[69.77481079 -287.34149170]
[77.32176208 -300.18255615]
[77.09843445 -315.18087769]
[76.87510681 -330.17922974]
[76.65177917 -345.17755127]
[76.42845154 -360.17590332]
[76.20512390 -375.17422485]
[62.51969147 -382.02752686]
[53.59614944 -394.46252441]
[51.48505402 -409.62173462]
[56.67152786 -424.02169800]
[67.96375275 -434.35342407]
[82.76685333 -438.24270630]
[97.67919159 -434.79589844]
[109.27402496 -424.80496216]
[114.88694000 -410.56579590]
[113.22812653 -395.35043335]
[104.67877197 -382.65527344]
[91.20346069 -375.39755249]
[91.42678833 -360.39923096]
[91.65011597 -345.40087891]
[91.87344360 -330.40255737]
[92.09677124 -315.40420532]
[92.32009888 -300.40588379]
[100.24603271 -287.79522705]
[92.71504974 -273.88137817]
[93.38484192 -258.89633179]
[94.50048828 -243.93788147]
[95.61613464 -228.97943115]
[96.73178101 -214.02098083]
[97.84743500 -199.06251526]
[110.59116364 -191.39862061]
[116.44773102 -177.53627014]
[112.97808838 -162.71011353]
[101.30875397 -152.65364075]
[102.42440033 -137.69517517]
[103.54005432 -122.73672485]
[104.65570068 -107.77827454]
[116.27277374 -117.26740265]
[130.96627808 -114.25064087]
[137.90470886 -100.95183563]
[131.97331238 -87.17437744]
[117.54449463 -83.07448578]
[105.25545502 -91.67301178]
[105.25545502 -76.67301178]
[105.25545502 -61.67301559]
[105.25545502 -46.67301559]
[118.95555115 -34.53121948]
[119.43820190 -15.91187572]
[105.93020630 -2.62849259]
[106.37680817 12.36485767]
[106.82341766 27.35820770]
[107.27001953 42.35155869]
[110.07013702 46.22045898]
[110.46956635 51.88945007]
[107.50000000 57.79650116]
[107.50000000 72.79650116]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[110.62940979 120.78514099]
[107.38667297 127.42641449]
[107.16334534 142.42474365]
[117.20539093 131.28216553]
[131.85467529 128.05746460]
[145.64735413 133.95336914]
[153.43911743 146.77087402]
[152.32382202 161.72935486]
[142.71745300 173.24967957]
[128.20294189 177.03501892]
[114.19384003 171.67358398]
[105.91488647 159.16389465]
[103.91087341 174.02941895]
[101.90686035 188.89494324]
[99.90284729 203.76046753]
[97.89882660 218.62600708]
[95.89481354 233.49153137]
[93.89080048 248.35705566]
[91.88678741 263.22259521]
[103.92942047 272.65243530]
[109.59770966 286.75094604]
[107.46227264 301.69436646]
[98.19574738 313.48367310]
[84.36550903 319.01449585]
[82.36149597 333.88003540]
[80.35748291 348.74557495]
[78.35346985 363.61108398]
[76.34945679 378.47662354]
[78.50321198 384.72744751]
[77.34998322 390.29226685]
[74.05808258 393.75238037]
[71.61235809 408.55163574]
[69.16662598 423.35092163]
[66.72090149 438.15017700]
[64.27516937 452.94946289]
[61.82944489 467.74871826]
[75.47692108 472.96438599]
[87.83599091 480.74673462]
[98.42997742 490.79330444]
[106.85073090 502.71435547]
[112.77436066 516.04803467]
[115.97368622 530.27807617]
[116.32692719 544.85412598]
[113.82238770 559.21270752]
[108.55879211 572.79913330]
[100.74140167 585.08892822]
[90.67401886 595.60815430]
[78.74719238 603.95153809]
[65.42302704 609.79815674]
[51.21731949 612.92388916]
[36.67958832 613.20971680]
[34.01379013 627.97094727]
[31.34799576 642.73217773]
[28.68220139 657.49340820]
[26.01640511 672.25457764]
[23.35061073 687.01580811]
[36.58069992 694.38085938]
[46.70067215 705.64428711]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 208]
[16 207]
[17 206]
[18 205]
[19 204]
[20 203]
[34 188]
[35 187]
[36 186]
[37 185]
[38 184]
[39 183]
[40 180]
[41 179]
[42 178]
[43 177]
[44 176]
[49 171]
[50 170]
[51 169]
[52 168]
[53 167]
[54 166]
[55 165]
[56 164]
[57 155]
[58 154]
[59 152]
[61 150]
[62 149]
[63 148]
[64 145]
[65 144]
[66 143]
[67 142]
[72 139]
[73 138]
[74 137]
[75 136]
[76 130]
[77 129]
[78 128]
[79 127]
[83 123]
[84 122]
[85 121]
[86 120]
[87 119]
[92 118]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
