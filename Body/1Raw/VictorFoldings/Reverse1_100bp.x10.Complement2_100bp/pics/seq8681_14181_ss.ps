%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[190.35983276 630.48321533]
[200.67153931 619.41418457]
[213.90007019 612.07513428]
[211.01480103 597.35522461]
[208.12953186 582.63537598]
[205.24426270 567.91546631]
[202.35897827 553.19555664]
[198.81930542 538.61920166]
[194.63229370 524.21539307]
[190.44528198 509.81164551]
[186.25827026 495.40786743]
[182.07125854 481.00408936]
[168.76728821 469.55981445]
[173.30564880 451.71368408]
[159.83276367 440.46875000]
[164.10491943 422.55703735]
[159.49090576 408.28430176]
[154.87689209 394.01156616]
[141.90600586 393.30465698]
[129.91787720 388.21945190]
[120.34788513 379.34124756]
[114.34986877 367.71087646]
[112.65702820 354.70266724]
[115.49238586 341.86218262]
[122.53964996 330.72238159]
[132.97836304 322.62084961]
[128.79135132 308.21707153]
[124.60433960 293.81329346]
[120.41732788 279.40951538]
[116.23031616 265.00573730]
[112.04330444 250.60194397]
[107.85629272 236.19816589]
[96.87391663 226.13652039]
[100.45158386 210.72512817]
[96.26457214 196.32135010]
[92.07756042 181.91757202]
[89.36824799 196.67085266]
[82.98087311 210.24293518]
[73.33907318 221.73362732]
[61.08237076 230.38076782]
[47.02370071 235.61085510]
[32.09552002 237.07698059]
[17.28796959 234.68188477]
[3.58317685 228.58445740]
[-8.10986900 219.18910217]
[-17.01560974 207.11898804]
[-22.54335785 193.17466736]
[-24.32648087 178.28103638]
[-22.24670792 163.42591858]
[-16.44198227 149.59460449]
[-7.29731417 137.70448303]
[4.58076572 128.54417419]
[18.40442657 122.72125244]
[33.25679779 120.62193298]
[48.15276718 122.38545990]
[62.10434723 127.89485168]
[74.18617249 136.78469849]
[83.59690857 148.46537781]
[89.71383667 162.16705322]
[90.38362122 147.18200684]
[91.05340576 132.19697571]
[91.72319031 117.21193695]
[82.02297211 106.44847870]
[82.66996765 91.97340393]
[93.29177094 82.11827850]
[93.96155548 67.13323975]
[94.63134003 52.14820099]
[95.30112457 37.16316223]
[95.97090912 22.17812538]
[96.52912140 7.18851519]
[96.97573090 -7.80483484]
[89.65274048 -21.82925797]
[97.76554871 -34.32051849]
[98.21215057 -49.31386948]
[86.10541534 -58.83926010]
[81.97721100 -73.49570465]
[87.20894623 -87.60572815]
[99.59775543 -95.83102417]
[100.04436493 -110.82437134]
[100.49096680 -125.81772614]
[100.93757629 -140.81108093]
[101.38417816 -155.80442810]
[101.83078766 -170.79777527]
[92.72866058 -186.80505371]
[102.52719879 -201.36373901]
[102.75052643 -216.36207581]
[102.97385406 -231.36041260]
[103.19718170 -246.35874939]
[100.19588470 -254.98603821]
[103.53714752 -261.57830811]
[103.98374939 -276.57165527]
[104.43035889 -291.56500244]
[104.87696075 -306.55834961]
[92.77022552 -316.08374023]
[88.64202118 -330.74017334]
[93.87375641 -344.85021973]
[106.26256561 -353.07550049]
[106.70917511 -368.06884766]
[107.15577698 -383.06219482]
[93.27706146 -389.26296997]
[82.83135986 -400.30633545]
[77.41156769 -414.50823975]
[77.84416962 -429.70303345]
[84.06318665 -443.57357788]
[95.12027740 -454.00473022]
[109.32930756 -459.40585327]
[124.52350616 -458.95324707]
[138.38586426 -452.71597290]
[148.80247498 -441.64517212]
[154.18487549 -427.42907715]
[153.71231079 -412.23547363]
[147.45681763 -398.38134766]
[136.37231445 -387.97930908]
[122.14913177 -382.61560059]
[121.70252228 -367.62225342]
[121.25591278 -352.62890625]
[133.13317871 -343.68078613]
[137.51579285 -329.28436279]
[132.52255249 -314.89962769]
[119.87031555 -306.11172485]
[119.42370605 -291.11837769]
[118.97710419 -276.12503052]
[118.53049469 -261.13168335]
[118.19551849 -246.13542175]
[117.97219086 -231.13708496]
[117.74886322 -216.13874817]
[117.52553558 -201.14041138]
[125.72296143 -192.24497986]
[125.65965271 -179.74778748]
[116.82413483 -170.35116577]
[116.37753296 -155.35781860]
[115.93092346 -140.36447144]
[115.48432159 -125.37111664]
[115.03771210 -110.37776947]
[114.59111023 -95.38441467]
[126.46837616 -86.43631744]
[130.85099792 -72.03990173]
[125.85774231 -57.65515900]
[113.20550537 -48.86726379]
[112.75889587 -33.87391281]
[120.11383057 -20.92191505]
[111.96907806 -7.35822916]
[111.52246857 7.63512087]
[114.46542358 14.41456032]
[110.95594788 22.84790993]
[110.28616333 37.83295059]
[109.61637878 52.81798935]
[108.94659424 67.80302429]
[108.27680969 82.78806305]
[117.97702789 93.55152130]
[117.33003235 108.02659607]
[106.70822906 117.88172150]
[106.03844452 132.86676025]
[105.36865997 147.85179138]
[104.69887543 162.83683777]
[106.48133850 177.73056030]
[110.66835022 192.13433838]
[114.85536194 206.53811646]
[126.13722229 217.63002014]
[122.26007843 232.01115417]
[126.44709015 246.41493225]
[130.63409424 260.81872559]
[134.82110596 275.22250366]
[139.00811768 289.62628174]
[143.19512939 304.03005981]
[147.38214111 318.43383789]
[164.36892700 320.95153809]
[178.50073242 330.60986328]
[186.96171570 345.42578125]
[188.09162903 362.39450073]
[181.71145630 378.09884644]
[169.14962769 389.39755249]
[173.76364136 403.67028809]
[178.37765503 417.94302368]
[189.48489380 424.49984741]
[193.03407288 436.48263550]
[187.64549255 447.31268311]
[198.65388489 454.03414917]
[202.02427673 466.06845093]
[196.47505188 476.81707764]
[200.66206360 491.22085571]
[204.84907532 505.62463379]
[209.03608704 520.02838135]
[213.22309875 534.43218994]
[221.37779236 521.84246826]
[236.01686096 518.57177734]
[248.75437927 526.49359131]
[252.29370117 541.07006836]
[244.60734558 553.95104980]
[230.09841919 557.75781250]
[217.07887268 550.31030273]
[219.96414185 565.03021240]
[222.84942627 579.75006104]
[225.73469543 594.46997070]
[228.61996460 609.18988037]
[243.64022827 610.99176025]
[257.36767578 617.34887695]
[268.45742798 627.63830566]
[275.82299805 640.85205078]
[278.74285889 655.69555664]
[276.93084717 670.71459961]
[270.56457520 684.43780518]
[260.26770020 695.52069092]
[247.04902649 702.87738037]
[232.20356750 705.78729248]
[217.18572998 703.96520996]
[203.46681213 697.58978271]
[192.39086914 687.28546143]
[185.04298401 674.06182861]
[182.14305115 659.21447754]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 195]
[4 194]
[5 193]
[6 192]
[7 191]
[8 184]
[9 183]
[10 182]
[11 181]
[12 180]
[14 177]
[16 174]
[17 173]
[18 172]
[26 166]
[27 165]
[28 164]
[29 163]
[30 162]
[31 161]
[32 160]
[34 158]
[35 157]
[36 156]
[59 155]
[60 154]
[61 153]
[62 152]
[65 149]
[66 148]
[67 147]
[68 146]
[69 145]
[70 143]
[71 142]
[73 140]
[74 139]
[78 135]
[79 134]
[80 133]
[81 132]
[82 131]
[83 130]
[85 127]
[86 126]
[87 125]
[88 124]
[90 123]
[91 122]
[92 121]
[93 120]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
