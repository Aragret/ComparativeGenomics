%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[78.65608215 663.44488525]
[69.54135895 675.64495850]
[56.24925613 683.07727051]
[41.08271790 684.45422363]
[26.66943550 679.53723145]
[15.50659752 669.17810059]
[9.52823544 655.17169189]
[9.77013397 639.94470215]
[16.19038391 626.13531494]
[27.67663765 616.13598633]
[42.23883438 611.67926025]
[44.02130127 596.78558350]
[45.80376434 581.89184570]
[47.58623123 566.99810791]
[49.36869812 552.10443115]
[51.15116501 537.21069336]
[41.77202988 525.69689941]
[43.36753845 510.56716919]
[55.50785828 500.80752563]
[57.29032516 485.91381836]
[58.96186447 471.00723267]
[60.52238846 456.08862305]
[49.38354874 443.48843384]
[50.83272934 426.39413452]
[64.45983124 415.42501831]
[65.79806519 400.48483276]
[67.13629913 385.54467773]
[68.02911377 370.57125854]
[68.47572327 355.57791138]
[65.53276825 348.79846191]
[69.04224396 340.36511230]
[69.71202850 325.38006592]
[70.38181305 310.39505005]
[71.05159760 295.41000366]
[71.72138214 280.42495728]
[68.87969208 273.60244751]
[72.51434326 265.22229004]
[70.75667572 263.03854370]
[69.75811005 260.02697754]
[69.83828735 256.47326660]
[71.20763397 252.77334595]
[73.93225861 249.39245605]
[75.71472931 234.49874878]
[77.49719238 219.60502625]
[79.27966309 204.71130371]
[81.06212616 189.81759644]
[74.89204407 176.26106262]
[84.21440887 163.47810364]
[85.99687958 148.58439636]
[83.67048645 141.56942749]
[87.91835785 133.48280334]
[89.92237091 118.61727905]
[81.09319305 109.52336121]
[79.04158783 97.01558685]
[84.50299835 85.57763672]
[95.51965332 79.30970764]
[97.74476624 64.47566223]
[92.14020538 49.68041611]
[101.67987823 38.24171448]
[103.90499878 23.40767097]
[93.25122070 9.53264618]
[95.87684631 -7.42084789]
[109.67447662 -17.03667450]
[111.67848969 -31.90220261]
[113.68250275 -46.76773071]
[115.68651581 -61.63325882]
[117.69052887 -76.49878693]
[119.69454193 -91.36431122]
[121.69856262 -106.22984314]
[119.54480743 -112.48067474]
[120.69802856 -118.04547882]
[123.98993683 -121.50559998]
[126.43566132 -136.30487061]
[128.55027771 -151.15507507]
[130.33274841 -166.04878235]
[128.24528503 -174.94149780]
[132.25422668 -181.15037537]
[134.25823975 -196.01589966]
[136.26225281 -210.88142395]
[130.43803406 -225.59159851]
[139.80635071 -237.17105103]
[141.81036377 -252.03659058]
[143.81437683 -266.90209961]
[136.42695618 -283.76947021]
[147.68693542 -297.22976685]
[149.46940613 -312.12347412]
[151.14094543 -327.03005981]
[152.70146179 -341.94866943]
[154.26199341 -356.86727905]
[155.82250977 -371.78588867]
[157.38304138 -386.70446777]
[157.82963562 -401.69784546]
[157.15985107 -416.68286133]
[156.49006653 -431.66790771]
[155.82028198 -446.65295410]
[155.15049744 -461.63800049]
[140.75761414 -466.45559692]
[129.07946777 -476.15020752]
[121.69543457 -489.41067505]
[119.60413361 -504.44366455]
[123.08840942 -519.21606445]
[131.67703247 -531.73010254]
[144.20848083 -540.29321289]
[158.98794556 -543.74743652]
[174.01666260 -541.62554932]
[187.26208496 -534.21453857]
[196.93290710 -522.51672363]
[201.72122192 -508.11404419]
[200.97944641 -492.95443726]
[194.80789185 -479.08804321]
[184.04122925 -468.39022827]
[170.13554382 -462.30776978]
[170.80532837 -447.32272339]
[171.47511292 -432.33770752]
[172.14489746 -417.35266113]
[172.81468201 -402.36761475]
[181.11439514 -414.86221313]
[194.50521851 -421.62133789]
[209.48680115 -420.87823486]
[222.14299011 -412.82711792]
[229.16551208 -399.57250977]
[228.71867371 -384.57919312]
[220.91929626 -371.76632690]
[207.80610657 -364.48315430]
[192.80685425 -364.63354492]
[179.84233093 -372.17813110]
[172.30163574 -385.14395142]
[170.74111938 -370.22534180]
[169.18058777 -355.30676270]
[167.62007141 -340.38815308]
[166.05955505 -325.46954346]
[168.49012756 -318.48999023]
[164.36311340 -310.34103394]
[162.58065796 -295.44729614]
[169.80816650 -285.74731445]
[168.44505310 -273.32452393]
[158.67990112 -264.89810181]
[156.67588806 -250.03257751]
[154.67187500 -235.16703796]
[160.63943481 -221.52015686]
[151.12779236 -208.87741089]
[149.12377930 -194.01188660]
[147.11976624 -179.14636230]
[145.22647095 -164.26632690]
[143.44400024 -149.37260437]
[145.32414246 -146.38973999]
[145.85290527 -142.34803772]
[144.54837036 -137.89253235]
[141.23492432 -133.85914612]
[138.78919983 -119.05987549]
[136.56408691 -104.22583008]
[134.56007385 -89.36029816]
[132.55606079 -74.49477386]
[130.55204773 -59.62924576]
[128.54803467 -44.76371765]
[126.54402161 -29.89818764]
[124.54000854 -15.03266048]
[133.70912170 -5.97965765]
[136.02441406 6.89362812]
[130.42008972 18.92700005]
[118.73904419 25.63278770]
[116.51392365 40.46683121]
[122.27764130 54.20105362]
[112.57881165 66.70078278]
[110.35369873 81.53482819]
[120.46397400 94.57898712]
[118.13738251 110.91773224]
[104.78790283 120.62129211]
[102.78388214 135.48681641]
[100.89059448 150.36685181]
[99.10812378 165.26057434]
[105.15071869 179.88240051]
[95.95584106 191.60005188]
[94.17337799 206.49377441]
[92.39091492 221.38749695]
[90.60844421 236.28120422]
[88.82598114 251.17492676]
[87.48774719 266.11511230]
[86.70642090 281.09475708]
[86.03663635 296.07977295]
[85.36685181 311.06481934]
[84.69706726 326.04986572]
[84.02728271 341.03491211]
[83.46907043 356.02450562]
[83.02246857 371.01785278]
[85.21543121 374.76550293]
[86.02076721 378.62762451]
[85.57289886 382.15393066]
[84.13864136 384.98403931]
[82.07648468 386.88290405]
[80.73825073 401.82308960]
[79.40001678 416.76327515]
[89.16875458 426.03613281]
[91.77519226 439.05218506]
[86.48746490 451.01553345]
[75.44099426 457.64916992]
[73.88047028 472.56774902]
[76.10010529 481.42840576]
[72.18404388 487.69628906]
[70.40157318 502.58999634]
[79.89597321 514.93884277]
[77.87613678 530.01782227]
[66.04488373 538.99316406]
[64.26241302 553.88690186]
[62.47994995 568.78057861]
[60.69748306 583.67431641]
[58.91501617 598.56805420]
[57.13255310 613.46173096]
[70.23179626 621.22894287]
[79.03404999 633.65637207]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 208]
[12 207]
[13 206]
[14 205]
[15 204]
[16 203]
[19 200]
[20 199]
[21 197]
[22 196]
[25 192]
[26 191]
[27 190]
[28 185]
[29 184]
[31 183]
[32 182]
[33 181]
[34 180]
[35 179]
[37 178]
[42 177]
[43 176]
[44 175]
[45 174]
[46 173]
[48 171]
[49 170]
[51 169]
[52 168]
[56 165]
[57 164]
[59 162]
[60 161]
[63 157]
[64 156]
[65 155]
[66 154]
[67 153]
[68 152]
[69 151]
[72 150]
[73 149]
[74 145]
[75 144]
[77 143]
[78 142]
[79 141]
[81 139]
[82 138]
[83 137]
[85 134]
[86 133]
[87 131]
[88 130]
[89 129]
[90 128]
[91 127]
[92 116]
[93 115]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
