%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[62.63167191 573.59283447]
[52.16061401 562.82745361]
[43.03633881 550.89916992]
[35.38693619 537.97546387]
[29.31979179 524.23767090]
[24.92008018 509.87875366]
[22.24956512 495.10025024]
[21.34573746 480.10958862]
[22.22128296 465.11727905]
[24.86391258 450.33374023]
[29.23652840 435.96652222]
[35.27774429 422.21734619]
[42.90275192 409.27920532]
[52.00450897 397.33370972]
[62.45523834 386.54861450]
[74.10823059 377.07525635]
[86.79988861 369.04669189]
[100.35205841 362.57559204]
[114.57447052 357.75280762]
[104.37086487 346.90219116]
[109.08486176 331.79959106]
[105.98075104 317.12426758]
[102.87664032 302.44897461]
[99.77252960 287.77368164]
[97.49934387 286.13333130]
[95.73894501 283.49371338]
[94.87521362 280.04559326]
[95.21591187 276.11514282]
[96.94799805 272.13345337]
[94.72287750 257.29940796]
[92.49776459 242.46537781]
[90.27264404 227.63133240]
[84.10354614 241.30401611]
[72.66886139 251.01214600]
[58.17644882 254.88125610]
[43.42456436 252.16427612]
[31.26157379 243.38580322]
[24.03595161 230.24082947]
[23.14285660 215.26744080]
[28.75473022 201.35676575]
[39.78800583 191.19473267]
[54.11233521 186.74348450]
[68.96190643 188.86247253]
[81.46951294 197.14256287]
[89.22052002 209.98620605]
[89.66712952 194.99285889]
[90.11373138 179.99949646]
[82.75880432 167.04750061]
[90.90355682 153.48382568]
[83.54862213 140.53181458]
[91.69337463 126.96813965]
[92.13998413 111.97478485]
[85.68240356 99.57352448]
[92.86666870 87.57860565]
[93.31327820 72.58525848]
[93.75988007 57.59190750]
[94.20648956 42.59855652]
[94.65309143 27.60520744]
[81.17751312 20.52212524]
[72.15036011 8.34027481]
[69.31908417 -6.49225903]
[73.19263458 -21.02348709]
[82.95097351 -32.38501358]
[96.61794281 -38.35824585]
[97.06454468 -53.35159302]
[97.51115417 -68.34494781]
[97.06454468 -83.33829498]
[95.72631073 -98.27848053]
[94.38807678 -113.21866608]
[93.04984283 -128.15884399]
[91.71160889 -143.09902954]
[81.28753662 -132.31298828]
[66.29270935 -131.91918945]
[55.31684113 -142.14318848]
[54.64741516 -157.12825012]
[64.66790771 -168.29022217]
[79.63812256 -169.23504639]
[90.98200989 -159.42230225]
[90.98200989 -174.42230225]
[90.98200989 -189.42230225]
[90.98200989 -204.42230225]
[90.98200989 -219.42230225]
[90.53540802 -234.41566467]
[89.64258575 -249.38906860]
[88.74977112 -264.36245728]
[80.20478821 -277.67764282]
[87.17082977 -290.84289551]
[86.27801514 -305.81628418]
[85.38520050 -320.78970337]
[84.49238586 -335.76309204]
[72.95449066 -346.22802734]
[72.26235199 -361.42590332]
[82.31016541 -372.36102295]
[81.41735077 -387.33444214]
[66.77248383 -391.12692261]
[54.01741409 -399.26101685]
[44.40176010 -410.93981934]
[38.86756897 -425.01916504]
[37.95701599 -440.11968994]
[41.75931549 -454.76202393]
[49.90195084 -467.51162720]
[61.58719635 -477.11947632]
[75.67024231 -482.64422607]
[90.77138519 -483.54464722]
[105.41115570 -479.73254395]
[118.15531158 -471.58135986]
[127.75530243 -459.88967896]
[133.27062988 -445.80294800]
[134.16093445 -430.70120239]
[130.33901978 -416.06399536]
[122.17930603 -403.32528687]
[110.48119354 -393.73312378]
[96.39075470 -388.22726440]
[97.28356934 -373.25384521]
[108.55963135 -363.59020996]
[109.67837524 -348.41775513]
[99.46578979 -336.65591431]
[100.35860443 -321.68249512]
[101.25141907 -306.70910645]
[102.14423370 -291.73568726]
[110.62535858 -279.49151611]
[103.72317505 -265.25527954]
[104.61599731 -250.28187561]
[105.50881195 -235.30847168]
[107.51351929 -233.34906006]
[108.86287689 -230.47750854]
[109.20555878 -226.93943787]
[108.28558350 -223.10299683]
[105.98200989 -219.42230225]
[105.98200989 -204.42230225]
[105.98200989 -189.42230225]
[105.98200989 -174.42230225]
[105.98200989 -159.42230225]
[106.65179443 -144.43727112]
[107.99002838 -129.49708557]
[109.32826233 -114.55690002]
[110.66649628 -99.61671448]
[112.00473022 -84.67652893]
[120.83306885 -96.80337524]
[135.06736755 -101.53461456]
[149.39859009 -97.10561371]
[158.48155212 -85.16827393]
[158.92851257 -70.17493439]
[150.57278442 -57.71773911]
[136.53083801 -52.44290924]
[122.03997803 -56.31783295]
[112.50450134 -67.89833832]
[112.05789948 -52.90498734]
[111.61128998 -37.91164017]
[124.89849854 -31.13552666]
[133.96327209 -19.21331596]
[136.96505737 -4.47729301]
[133.25595093 10.16042328]
[123.51972961 21.78337097]
[109.64643860 28.05181313]
[109.19983673 43.04516220]
[108.75322723 58.03851318]
[108.30662537 73.03186035]
[107.86001587 88.02521515]
[114.31759644 100.42647552]
[107.13333130 112.42139435]
[106.68672180 127.41474152]
[114.00971222 141.43916321]
[105.89690399 153.93041992]
[113.21989441 167.95484924]
[105.10708618 180.44610596]
[104.66047668 195.43945312]
[104.21387482 210.43281555]
[105.10668945 225.40621948]
[107.33180237 240.24026489]
[109.55692291 255.07429504]
[111.78203583 269.90835571]
[114.44783783 284.66955566]
[117.55194092 299.34487915]
[120.65605164 314.02017212]
[123.76016235 328.69546509]
[134.18579102 340.59576416]
[129.24977112 354.64868164]
[144.20690918 353.29943848]
[159.21864319 353.72872925]
[174.07421875 355.93054199]
[188.56510925 359.87393188]
[202.48788452 365.50357056]
[215.64707947 372.74044800]
[227.85795593 381.48291016]
[238.94909668 391.60827637]
[248.76480103 402.97436523]
[257.16726685 415.42166138]
[264.03854370 428.77536011]
[269.28219604 442.84805298]
[272.82455444 457.44216919]
[274.61590576 472.35281372]
[274.63113403 487.37066650]
[272.87002563 502.28491211]
[269.35723877 516.88616943]
[264.14218140 530.96948242]
[257.29797363 544.33709717]
[248.92076111 556.80139160]
[239.12812805 568.18737793]
[228.05754089 578.33520508]
[215.86441040 587.10241699]
[202.71992493 594.36596680]
[188.80859375 600.02380371]
[174.32572937 603.99658203]
[159.47463989 606.22851562]
[144.46380615 606.68823242]
[129.50396729 605.36932373]
[114.80513763 602.29028320]
[100.57364655 597.49432373]
[87.00930023 591.04882812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 178]
[21 176]
[22 175]
[23 174]
[24 173]
[29 172]
[30 171]
[31 170]
[32 169]
[45 168]
[46 167]
[47 166]
[49 164]
[51 162]
[52 161]
[54 159]
[55 158]
[56 157]
[57 156]
[58 155]
[64 149]
[65 148]
[66 147]
[67 138]
[68 137]
[69 136]
[70 135]
[71 134]
[78 133]
[79 132]
[80 131]
[81 130]
[82 129]
[83 124]
[84 123]
[85 122]
[87 120]
[88 119]
[89 118]
[90 117]
[93 114]
[94 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
