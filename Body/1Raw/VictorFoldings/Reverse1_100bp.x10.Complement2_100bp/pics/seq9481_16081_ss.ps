%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[156.83172607 563.89916992]
[153.03277588 578.64660645]
[143.55885315 590.56988525]
[130.05134583 597.60321045]
[114.85054016 598.52801514]
[100.59004211 593.18402100]
[89.74058533 582.49713135]
[84.18190002 568.31896973]
[84.87705231 553.10589600]
[91.70561218 539.49377441]
[103.48449707 529.84088135]
[118.17292786 525.81970215]
[120.39804077 510.98565674]
[122.62316132 496.15164185]
[124.84827423 481.31759644]
[127.07339478 466.48355103]
[129.29850769 451.64950562]
[122.36301422 441.73861694]
[124.09539032 429.36193848]
[134.10710144 421.22998047]
[136.44258118 406.41290283]
[138.66769409 391.57885742]
[140.89282227 376.74481201]
[143.11793518 361.91076660]
[145.34304810 347.07672119]
[145.56637573 332.07839966]
[143.78390503 317.18469238]
[142.00144958 302.29095459]
[140.21897888 287.39724731]
[138.43650818 272.50354004]
[135.55123901 257.78363037]
[131.57914734 243.31910706]
[120.74778748 233.09506226]
[124.55450439 217.73864746]
[120.58241272 203.27412415]
[109.75106049 193.05009460]
[113.55777740 177.69367981]
[102.72641754 167.46963501]
[106.53313446 152.11322021]
[91.59159088 151.84368896]
[77.33077240 147.37695312]
[64.90523529 139.07463074]
[55.32093048 127.60887146]
[49.35379028 113.90793610]
[47.48690796 99.08102417]
[49.87142944 84.32850647]
[56.31430054 70.84474182]
[66.29391479 59.72135544]
[79.00234222 51.85887909]
[75.03024292 37.39435577]
[71.05814362 22.92983246]
[64.52552032 36.43260193]
[51.35865021 43.61824417]
[36.46844101 41.80668640]
[25.40858269 31.67359543]
[22.30412292 16.99836731]
[28.31295204 3.25449681]
[41.19392395 -4.43189240]
[56.14275360 -3.19396639]
[67.58451843 6.50755024]
[65.35939789 -8.32649326]
[63.13428116 -23.16053772]
[60.90916443 -37.99457932]
[58.68404770 -52.82862473]
[56.45893097 -67.66266632]
[54.12344360 -82.47973633]
[51.67771530 -97.27900696]
[49.23199081 -112.07827759]
[46.35911179 -115.33412933]
[44.82592392 -118.96921539]
[44.58714676 -122.51581573]
[45.45023727 -125.56896210]
[47.10864258 -127.82901001]
[45.54811859 -142.74761963]
[36.03818893 -151.46105957]
[35.04555511 -163.91891479]
[42.55866241 -173.39941406]
[41.22042847 -188.33959961]
[32.28279114 -201.39445496]
[38.85376740 -214.76126099]
[34.97122192 -223.02949524]
[37.60852432 -229.93357849]
[36.49287415 -244.89202881]
[35.37722778 -259.85049438]
[34.26157761 -274.80892944]
[19.86957169 -279.61996460]
[8.44674778 -289.54779053]
[1.71333349 -303.05612183]
[0.66752553 -318.07257080]
[5.43762350 -332.30673218]
[15.26721287 -343.59939575]
[28.63492775 -350.25024414]
[27.51927948 -365.20867920]
[26.40363121 -380.16714478]
[11.75074100 -383.98440552]
[-0.86737245 -392.35470581]
[-10.08199024 -404.37008667]
[-14.89357853 -418.72723389]
[-14.78021431 -433.86874390]
[-9.75419235 -448.15225220]
[-0.36069956 -460.02832031]
[12.38132858 -468.20874023]
[27.08973312 -471.80618286]
[42.16905594 -470.43038940]
[55.98360443 -464.23065186]
[67.03488159 -453.87939453]
[74.12412262 -440.49951172]
[76.48234558 -425.54232788]
[73.85374451 -410.63027954]
[66.52345276 -397.38092041]
[55.28660202 -387.23144531]
[41.36208344 -381.28277588]
[42.47773361 -366.32434082]
[43.59337997 -351.36587524]
[57.79978943 -346.77160645]
[69.19580078 -337.06201172]
[76.02462769 -323.69296265]
[77.21794891 -308.68750000]
[72.56287384 -294.32977295]
[62.73913574 -282.81729126]
[49.22003174 -275.92459106]
[50.33568192 -260.96612549]
[51.45132828 -246.00769043]
[52.56697845 -231.04922485]
[53.79395294 -216.09950256]
[62.63587189 -204.11326599]
[56.16061401 -189.67784119]
[57.49884796 -174.73765564]
[68.35307312 -160.94805908]
[60.46672440 -144.30813599]
[62.02724838 -129.38952637]
[64.03125763 -114.52400208]
[66.47698975 -99.72473145]
[68.92271423 -84.92546082]
[73.11474609 -78.83870697]
[71.29297638 -69.88778687]
[73.51808929 -55.05374146]
[75.74320984 -40.21969986]
[77.96832275 -25.38565445]
[80.19344330 -10.55161095]
[82.41856384 4.28243303]
[85.52267456 18.95773506]
[89.49476624 33.42226028]
[93.46686554 47.88678360]
[108.40840912 48.15631485]
[122.66922760 52.62305069]
[135.09475708 60.92536926]
[144.67907715 72.39112854]
[150.64620972 86.09206390]
[152.51309204 100.91897583]
[150.12857056 115.67149353]
[143.68569946 129.15525818]
[133.70608521 140.27864075]
[120.99765778 148.14111328]
[132.11312866 159.39976501]
[128.02229309 173.72157288]
[139.13775635 184.98022461]
[135.04693604 199.30203247]
[139.01902771 213.76655579]
[150.13449097 225.02519226]
[146.04367065 239.34701538]
[150.01576233 253.81153870]
[155.34199524 239.78901672]
[166.90319824 230.23188782]
[181.67727661 227.63835144]
[195.80235291 232.68637085]
[205.58613586 244.05641174]
[208.47119141 258.77633667]
[203.70335388 272.99841309]
[192.52894592 283.00503540]
[177.86891174 286.18048096]
[163.55535889 281.69470215]
[153.33023071 270.72106934]
[155.11270142 285.61477661]
[156.89515686 300.50848389]
[158.67762756 315.40222168]
[160.46009827 330.29592896]
[165.83889771 316.29348755]
[175.23251343 304.59902954]
[187.74560547 296.32723999]
[202.18548584 292.26647949]
[217.17585754 292.80383301]
[231.28793335 297.88809204]
[243.17662048 307.03460693]
[251.70878601 319.37164307]
[256.07119751 333.72326660]
[255.84803772 348.72161865]
[251.06060791 362.93710327]
[242.16517639 375.01483154]
[230.00962830 383.80361938]
[215.75254822 388.46575928]
[200.75282288 388.55691528]
[186.44013977 384.06838989]
[174.17868042 375.42797852]
[165.13714600 363.45922852]
[160.17709351 349.30184937]
[157.95198059 364.13589478]
[155.72685242 378.96994019]
[153.50173950 393.80398560]
[151.27662659 408.63803101]
[153.09840393 417.58895874]
[148.90637207 423.67568970]
[155.78829956 440.75552368]
[144.13255310 453.87460327]
[141.90744019 468.70864868]
[139.68232727 483.54269409]
[137.45719910 498.37673950]
[135.23208618 513.21081543]
[133.00697327 528.04486084]
[145.86915588 536.19860840]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 209]
[13 208]
[14 207]
[15 206]
[16 205]
[17 204]
[20 202]
[21 200]
[22 199]
[23 198]
[24 197]
[25 196]
[26 177]
[27 176]
[28 175]
[29 174]
[30 173]
[31 162]
[32 161]
[34 159]
[35 158]
[37 156]
[39 154]
[49 144]
[50 143]
[51 142]
[60 141]
[61 140]
[62 139]
[63 138]
[64 137]
[65 136]
[66 134]
[67 133]
[68 132]
[73 131]
[74 130]
[77 128]
[78 127]
[80 125]
[82 124]
[83 123]
[84 122]
[85 121]
[92 114]
[93 113]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
