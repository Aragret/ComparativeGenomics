%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[60.25178909 812.12060547]
[45.33240891 813.72204590]
[30.34149742 814.37402344]
[15.33941555 814.07391357]
[0.38657215 812.82293701]
[-14.45682240 810.62609863]
[-29.13099861 807.49224854]
[-43.57686996 803.43395996]
[-57.73626328 798.46765137]
[-71.55216980 792.61334229]
[-84.96894836 785.89453125]
[-97.93257904 778.33825684]
[-110.39086914 769.97503662]
[-122.29364014 760.83850098]
[-133.59297180 750.96545410]
[-144.24336243 740.39556885]
[-154.20191956 729.17150879]
[-163.42855835 717.33843994]
[-171.88612366 704.94396973]
[-179.54054260 692.03808594]
[-186.36100769 678.67266846]
[-192.32005310 664.90161133]
[-197.39367676 650.78033447]
[-201.56146240 636.36566162]
[-204.80662537 621.71569824]
[-207.11608887 606.88946533]
[-208.48056030 591.94653320]
[-208.89453125 576.94714355]
[-208.35635376 561.95172119]
[-206.86819458 547.02062988]
[-204.43603516 532.21392822]
[-201.06967163 517.59136963]
[-196.78265381 503.21173096]
[-191.59225464 489.13293457]
[-185.51937866 475.41168213]
[-178.58845520 462.10324097]
[-170.82742310 449.26116943]
[-162.26751709 436.93719482]
[-152.94320679 425.18090820]
[-142.89202881 414.03970337]
[-132.15447998 403.55841064]
[-120.77377319 393.77926636]
[-108.79575348 384.74157715]
[-96.26863098 376.48181152]
[-83.24286652 369.03317261]
[-69.77091217 362.42572021]
[-55.90699768 356.68597412]
[-41.70696259 351.83709717]
[-27.22797966 347.89862061]
[-12.52835560 344.88641357]
[2.33272290 342.81253052]
[17.29541397 341.68542480]
[32.29946518 341.50955200]
[47.28446579 342.28564453]
[62.19006729 344.01062012]
[64.85586548 329.24938965]
[67.52165985 314.48815918]
[70.18745422 299.72695923]
[72.85324860 284.96572876]
[64.17606354 272.91409302]
[66.66928101 257.90615845]
[79.36898041 248.88642883]
[82.03477478 234.12521362]
[73.35758209 222.07357788]
[75.85079956 207.06562805]
[88.55049896 198.04591370]
[91.21629333 183.28468323]
[93.88208771 168.52346802]
[94.88635254 153.55712891]
[94.21656799 138.57208252]
[93.54678345 123.58705139]
[92.87699890 108.60201263]
[92.09567261 93.62237549]
[83.55068970 80.30720520]
[90.51673126 67.14196014]
[89.62391663 52.16855621]
[88.73110199 37.19515228]
[87.83828735 22.22174454]
[86.94546509 7.24833918]
[86.05265045 -7.72506666]
[73.14437866 -16.13236427]
[67.72505188 -30.36206245]
[71.67709351 -44.88257599]
[83.28267670 -54.18034363]
[82.38985443 -69.15374756]
[71.89592743 -84.28514099]
[80.35652924 -99.65996552]
[79.24088287 -114.61841583]
[78.12523651 -129.57687378]
[77.00958252 -144.53532410]
[62.12700653 -146.90293884]
[48.19182968 -152.63945007]
[35.95556259 -161.43550110]
[26.07809067 -172.81672668]
[19.09209251 -186.16935730]
[15.37431335 -200.77328491]
[15.12525082 -215.84095764]
[18.35833549 -230.55978394]
[24.89920998 -244.13600159]
[34.39513397 -255.83746338]
[46.33400726 -265.03311157]
[60.07197571 -271.22705078]
[74.86817169 -274.08523560]
[89.92465973 -273.45355225]
[104.42945099 -269.36605835]
[117.60032654 -262.04315186]
[128.72700500 -251.87980652]
[137.20941162 -239.42407227]
[142.59013367 -225.34768677]
[144.57899475 -210.40977478]
[143.06871033 -195.41592407]
[138.14074707 -181.17471313]
[130.06085205 -168.45417786]
[119.26478577 -157.94030762]
[106.33473969 -150.20008850]
[91.96804047 -145.65097046]
[93.08368683 -130.69252014]
[94.19933319 -115.73406982]
[95.31498718 -100.77561188]
[104.27333069 -92.64698792]
[105.32521820 -80.19398499]
[97.36326599 -70.04656982]
[98.25608063 -55.07316208]
[110.88429260 -47.22037506]
[116.53382111 -33.27236938]
[112.84381866 -18.49951363]
[101.02605438 -8.61788273]
[101.91887665 6.35552311]
[102.81169128 21.32892799]
[103.70450592 36.30233383]
[104.59732056 51.27574158]
[105.49013519 66.24914551]
[113.97126007 78.49332428]
[107.06907654 92.72956085]
[110.65433502 99.94887543]
[107.86203766 107.93222809]
[108.53182220 122.91726685]
[109.20160675 137.90229797]
[109.87139130 152.88734436]
[116.70493317 139.53433228]
[127.85204315 129.49731445]
[141.84613037 124.09681702]
[156.84603882 124.04336548]
[170.87826538 129.34399414]
[182.09661865 139.30133057]
[189.02516174 152.60528564]
[190.75228882 167.50552368]
[187.05079651 182.04164124]
[178.40765381 194.30117798]
[165.96003723 202.67117310]
[151.34564209 206.05041504]
[136.48722839 203.99429321]
[123.33968353 196.77334595]
[113.63279724 185.33760071]
[108.64331055 171.18927002]
[105.97751617 185.95048523]
[103.31171417 200.71170044]
[112.05426788 213.60377502]
[109.14048767 228.53578186]
[96.79598999 236.79101562]
[94.13019562 251.55223083]
[102.87274170 264.44430542]
[99.95896912 279.37631226]
[87.61447144 287.63153076]
[84.94866943 302.39276123]
[82.28287506 317.15396118]
[79.61708069 331.91519165]
[76.95128632 346.67639160]
[91.51868439 350.27410889]
[105.82856750 354.78851318]
[119.82331848 360.20138550]
[133.44659424 366.49099731]
[146.64352417 373.63195801]
[159.36096191 381.59558105]
[171.54772949 390.34976196]
[183.15472412 399.85922241]
[194.13522339 410.08572388]
[204.44500732 420.98803711]
[214.04255676 432.52230835]
[222.88923645 444.64208984]
[230.94943237 457.29855347]
[238.19065857 470.44073486]
[244.58378601 484.01574707]
[250.10304260 497.96887207]
[254.72624207 512.24395752]
[258.43472290 526.78356934]
[261.21359253 541.52911377]
[263.05163574 556.42120361]
[263.94146729 571.39984131]
[263.87951660 586.40478516]
[262.86599731 601.37561035]
[260.90499878 616.25201416]
[258.00442505 630.97406006]
[254.17597961 645.48254395]
[249.43502808 659.71899414]
[243.80070496 673.62603760]
[237.29568481 687.14776611]
[229.94615173 700.22973633]
[221.78169250 712.81915283]
[212.83522034 724.86541748]
[203.14271545 736.32006836]
[192.74324036 747.13684082]
[181.67864990 757.27233887]
[169.99349976 766.68560791]
[157.73484802 775.33880615]
[144.95205688 783.19708252]
[131.69659424 790.22882080]
[118.02184296 796.40570068]
[103.98285675 801.70281982]
[89.63616943 806.09887695]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 168]
[56 167]
[57 166]
[58 165]
[59 164]
[62 161]
[63 160]
[66 157]
[67 156]
[68 155]
[69 139]
[70 138]
[71 137]
[72 136]
[73 134]
[75 132]
[76 131]
[77 130]
[78 129]
[79 128]
[80 127]
[84 123]
[85 122]
[87 119]
[88 118]
[89 117]
[90 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
