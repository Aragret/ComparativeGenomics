%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[72.49749756 642.53338623]
[60.38709259 651.42828369]
[47.13404465 658.50903320]
[33.00815964 663.63159180]
[18.29703331 666.69152832]
[3.30015683 667.62670898]
[-11.67714882 666.41796875]
[-26.32996559 663.08990479]
[-40.35998154 657.71038818]
[-53.48156357 650.38885498]
[-65.42757416 641.27435303]
[-75.95480347 630.55255127]
[-84.84893036 618.44158936]
[-91.92889404 605.18811035]
[-97.05053711 591.06188965]
[-100.10960388 576.35058594]
[-101.04380798 561.35363770]
[-99.83413696 546.37640381]
[-96.50521088 531.72381592]
[-91.12480927 517.69409180]
[-83.80245972 504.57296753]
[-74.68724823 492.62753296]
[-63.96474075 482.10095215]
[-51.85323715 473.20758057]
[-38.59931183 466.12844849]
[-24.47279549 461.00765991]
[-9.76128769 457.94952393]
[5.23570442 457.01623535]
[20.21286011 458.22683716]
[23.53512001 443.59939575]
[18.80887032 429.47451782]
[29.41052437 417.73077393]
[32.73278427 403.10330200]
[26.64650726 386.64352417]
[39.26893997 373.23623657]
[42.37305069 358.56094360]
[45.47716141 343.88562012]
[48.58127213 329.21032715]
[51.68538284 314.53503418]
[54.78949356 299.85974121]
[57.67476273 285.13983154]
[60.34056091 270.37863159]
[63.00635529 255.61740112]
[56.19118118 239.44581604]
[68.20236206 225.48826599]
[70.64808655 210.68899536]
[73.09381104 195.88972473]
[75.53954315 181.09045410]
[73.79447937 178.02661133]
[73.44670868 173.96531677]
[74.94888306 169.57250977]
[78.43911743 165.69110107]
[81.54322815 151.01580811]
[84.64733887 136.34049988]
[79.71131897 122.28756714]
[90.13694763 110.38728333]
[85.98612213 97.03578949]
[95.18775177 86.50860596]
[98.29186249 71.83330536]
[101.39597321 57.15800476]
[104.50007629 42.48270035]
[107.60418701 27.80739975]
[110.70829773 13.13209629]
[111.04327393 -1.86416245]
[108.59754944 -16.66343307]
[96.58637238 -30.62098122]
[103.40154266 -46.79257202]
[100.73574829 -61.55379105]
[98.06995392 -76.31501007]
[87.93828583 -84.29699707]
[86.02182770 -96.64653015]
[92.80900574 -106.65956116]
[90.36327362 -121.45883179]
[87.91754913 -136.25810242]
[83.43079376 -144.21466064]
[85.54728699 -151.29577637]
[83.32217407 -166.12982178]
[81.09705353 -180.96386719]
[78.87193298 -195.79791260]
[64.61610413 -205.93647766]
[62.15201950 -222.91419983]
[72.52113342 -236.15505981]
[70.07540894 -250.95433044]
[60.19155121 -263.30828857]
[65.75014496 -277.12680054]
[63.30442047 -291.92605591]
[48.26480484 -292.71600342]
[33.74674225 -296.72097778]
[20.42926598 -303.75369263]
[8.93526459 -313.48519897]
[-0.19767094 -325.46029663]
[-6.54237556 -339.11895752]
[-9.80209541 -353.82229614]
[-9.82436848 -368.88262939]
[-6.60815287 -383.59555054]
[-0.30387601 -397.27291870]
[8.79359913 -409.27499390]
[20.25876617 -419.04046631]
[33.55538177 -426.11251831]
[48.06153488 -430.16043091]
[63.09874725 -430.99484253]
[77.96370697 -428.57678223]
[91.96114349 -423.01925659]
[104.43637848 -414.58230591]
[114.80591583 -403.66046143]
[122.58476257 -390.76455688]
[127.40908051 -376.49783325]
[129.05323792 -361.52749634]
[127.44031525 -346.55377197]
[122.64577484 -332.27697754]
[114.89384460 -319.36489868]
[104.54711151 -308.42144775]
[92.08950806 -299.95846558]
[78.10369110 -294.37179565]
[80.54941559 -279.57250977]
[90.25833893 -268.27709961]
[84.87467957 -253.40005493]
[87.32040405 -238.60078430]
[98.74213409 -232.63642883]
[104.73255157 -221.00900269]
[102.90547180 -207.86091614]
[93.70597839 -198.02302551]
[95.93109894 -183.18899536]
[98.15621185 -168.35494995]
[100.38133240 -153.52090454]
[102.71681976 -138.70382690]
[105.16254425 -123.90456390]
[107.60827637 -109.10529327]
[119.45805359 -96.16119385]
[112.83116913 -78.98080444]
[115.49696350 -64.21958160]
[118.16276550 -49.45836639]
[127.91815948 -42.30583191]
[130.25988770 -30.02983475]
[123.39682007 -19.10916138]
[125.84254456 -4.30988979]
[130.19868469 -18.66342735]
[137.70643616 -31.64933205]
[147.97195435 -42.58638763]
[160.45672607 -50.90085983]
[174.50582886 -56.15658951]
[189.38227844 -58.07786560]
[204.30567932 -56.56390762]
[218.49317932 -51.69413376]
[231.20054626 -43.72400284]
[241.76115417 -33.07160950]
[249.62103271 -20.29575920]
[254.36785889 -6.06664753]
[255.75262451 8.86929607]
[253.70268250 23.72856140]
[248.32559204 37.73166275]
[239.90339661 50.14402008]
[228.87791443 60.31451035]
[215.82754517 67.70960999]
[201.43684387 71.94139099]
[186.46073914 72.78784943]
[171.68486023 70.20458984]
[157.88430786 64.32713318]
[145.78302002 55.46378326]
[136.01582336 44.07950592]
[129.09507751 30.77149010]
[125.38360596 16.23620605]
[122.27949524 30.91150856]
[119.17538452 45.58681107]
[116.07127380 60.26211548]
[112.96716309 74.93741608]
[109.86305237 89.61271667]
[114.01387787 102.96421051]
[104.81224823 113.49139404]
[109.52624512 128.59399414]
[99.32264709 139.44461060]
[96.21853638 154.11991882]
[93.11442566 168.79521179]
[90.33881378 183.53617859]
[87.89308167 198.33544922]
[85.44735718 213.13471985]
[83.00163269 227.93399048]
[89.86469269 238.85466003]
[87.52297211 251.13066101]
[77.76757050 258.28320312]
[75.10177612 273.04440308]
[72.43598175 287.80563354]
[74.30847168 294.14639282]
[72.90791321 299.65417480]
[69.46479797 302.96383667]
[66.36068726 317.63912964]
[63.25657272 332.31445312]
[60.15246201 346.98974609]
[57.04835510 361.66503906]
[53.94424438 376.34036255]
[60.31283188 387.55657959]
[57.42528915 399.71575928]
[47.36024475 406.42556763]
[44.03798294 421.05303955]
[48.52660370 436.22415161]
[38.16257858 446.92163086]
[34.84032059 461.54910278]
[48.87100220 466.92691040]
[61.99348831 474.24682617]
[73.94062805 483.35980225]
[84.46918488 494.08035278]
[93.36481476 506.19021606]
[100.44641113 519.44281006]
[105.56980896 533.56835938]
[108.63069153 548.27935791]
[109.56675720 563.27612305]
[108.35894012 578.25354004]
[105.03182220 592.90655518]
[99.65316010 606.93688965]
[92.33243561 620.05895996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 197]
[30 196]
[32 194]
[33 193]
[35 190]
[36 189]
[37 188]
[38 187]
[39 186]
[40 185]
[41 182]
[42 181]
[43 180]
[45 177]
[46 176]
[47 175]
[48 174]
[52 173]
[53 172]
[54 171]
[56 169]
[58 167]
[59 166]
[60 165]
[61 164]
[62 163]
[63 162]
[64 136]
[65 135]
[67 132]
[68 131]
[69 130]
[72 128]
[73 127]
[74 126]
[76 125]
[77 124]
[78 123]
[79 122]
[82 118]
[83 117]
[85 115]
[86 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
