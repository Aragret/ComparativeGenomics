%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[-32.63640213 389.18817139]
[-26.31414413 402.90698242]
[-24.11438179 417.85147095]
[-26.21544075 432.81015015]
[-32.44699860 446.57037354]
[-42.30388641 458.01672363]
[-54.98705673 466.22122192]
[-69.46833801 470.51879883]
[-84.57379150 470.56106567]
[-99.07890320 466.34460449]
[-111.80779266 458.21121216]
[-121.72858429 446.82022095]
[-128.03706360 433.09509277]
[-130.22180176 418.14837646]
[-128.10572815 403.19183350]
[-121.86034393 389.43783569]
[-111.99195862 378.00143433]
[-99.30056000 369.80966187]
[-84.81496429 365.52664185]
[-69.70947266 365.49954224]
[-65.52246094 351.09576416]
[-61.33544922 336.69198608]
[-57.14844131 322.28817749]
[-67.31386566 333.31832886]
[-79.87515259 341.51675415]
[-94.06417084 346.38211060]
[-109.01325989 347.61688232]
[-123.80828094 345.14556885]
[-137.54450989 339.11929321]
[-149.38195801 329.90655518]
[-158.59678650 318.07070923]
[-164.62548828 304.33554077]
[-167.09941101 289.54095459]
[-165.86726379 274.59164429]
[-161.00440979 260.40179443]
[-152.80819702 247.83905029]
[-141.77983093 237.67169189]
[-128.59371948 230.52142334]
[-114.05617523 226.82550049]
[-99.05618286 226.80993652]
[-84.51100159 230.47566223]
[-71.31006622 237.59854126]
[-60.26062393 247.74299622]
[-52.03835297 260.28866577]
[-47.14604950 274.46844482]
[-45.88287354 289.41516113]
[-48.32608414 304.21487427]
[-39.54548264 292.05340576]
[-30.76487923 279.89196777]
[-21.98427582 267.73049927]
[-13.38571167 255.43966675]
[-4.97109365 243.02217102]
[3.44352508 230.60467529]
[11.85814381 218.18717957]
[12.59262657 203.31068420]
[26.73936462 196.22688293]
[35.15398407 183.80938721]
[43.56860352 171.39189148]
[51.98322296 158.97439575]
[48.10694885 142.60939026]
[57.44989777 128.22105408]
[74.64024353 124.97893524]
[82.86904907 112.43753815]
[79.14554596 96.35949707]
[88.09621429 82.49395752]
[104.28134918 79.26761627]
[112.32251740 66.60509491]
[113.18891144 50.80762482]
[126.54330444 44.21146393]
[134.58447266 31.54893875]
[134.93389893 13.13808823]
[150.79345703 5.62535143]
[158.64521790 -7.15549088]
[166.49697876 -19.93633270]
[174.34872437 -32.71717453]
[182.20048523 -45.49802017]
[177.82484436 -62.43534470]
[186.87443542 -77.00996399]
[203.33442688 -80.46068573]
[210.99502563 -93.35701752]
[218.65562439 -106.25334167]
[220.34779358 -115.22966003]
[226.52749634 -119.28343964]
[234.37925720 -132.06428528]
[242.23100281 -144.84512329]
[250.08276367 -157.62596130]
[250.22346497 -162.84394836]
[252.15815735 -167.06416321]
[255.20637512 -169.77035522]
[258.58132935 -170.79113770]
[266.99594116 -183.20863342]
[275.41055298 -195.62612915]
[283.82519531 -208.04362488]
[292.23980713 -220.46112061]
[300.65441895 -232.87861633]
[289.14154053 -242.51419067]
[278.66253662 -253.26509094]
[269.32498169 -265.02096558]
[261.22467041 -277.66122437]
[254.44471741 -291.05612183]
[249.05471802 -305.06823730]
[245.10997009 -319.55374146]
[242.65097046 -334.36401367]
[241.70294189 -349.34707642]
[242.27558899 -364.34918213]
[244.36306763 -379.21636963]
[247.94395447 -393.79611206]
[252.98149109 -407.93875122]
[259.42398071 -421.49917603]
[267.20532227 -434.33822632]
[276.24566650 -446.32418823]
[286.45223999 -457.33404541]
[297.72030640 -467.25482178]
[309.93426514 -475.98468018]
[322.96871948 -483.43408203]
[336.68997192 -489.52658081]
[350.95718384 -494.19964600]
[365.62399292 -497.40530396]
[380.53982544 -499.11068726]
[395.55169678 -499.29827881]
[410.50549316 -497.96618652]
[425.24783325 -495.12802124]
[439.62734985 -490.81295776]
[453.49658203 -485.06527710]
[466.71313477 -477.94390869]
[479.14141846 -469.52200317]
[490.65386963 -459.88589478]
[501.13241577 -449.13455200]
[510.46945190 -437.37826538]
[518.56921387 -424.73764038]
[525.34857178 -411.34243774]
[530.73791504 -397.33010864]
[534.68206787 -382.84442139]
[537.14038086 -368.03402710]
[538.08776855 -353.05093384]
[537.51446533 -338.04885864]
[535.42633057 -323.18176270]
[531.84478760 -308.60220337]
[526.80664062 -294.45977783]
[520.36352539 -280.89962769]
[512.58166504 -268.06091309]
[503.54077148 -256.07534790]
[493.33370972 -245.06593323]
[482.06521606 -235.14567566]
[469.85089111 -226.41633606]
[456.81607056 -218.96749878]
[443.09457397 -212.87562561]
[428.82714844 -208.20318604]
[414.16021729 -204.99816895]
[399.24429321 -203.29344177]
[384.23242188 -203.10650635]
[369.27865601 -204.43927002]
[354.53646851 -207.27807617]
[340.15710449 -211.59376526]
[326.28814697 -217.34207153]
[313.07192993 -224.46400452]
[304.65728760 -212.04650879]
[296.24267578 -199.62901306]
[287.82806396 -187.21151733]
[279.41345215 -174.79402161]
[270.99880981 -162.37652588]
[262.86361694 -149.77421570]
[255.01185608 -136.99336243]
[247.16009521 -124.21252441]
[239.30833435 -111.43168640]
[231.55195618 -98.59274292]
[223.89135742 -85.69641876]
[216.23075867 -72.80008698]
[221.12678528 -60.88126373]
[218.22064209 -48.12836075]
[208.35487366 -39.24707794]
[194.98132324 -37.64626312]
[187.12956238 -24.86542130]
[179.27781677 -12.08457851]
[171.42605591 0.69626439]
[163.57431030 13.47710705]
[166.07913208 25.31148148]
[159.64230347 36.02367020]
[147.24700928 39.59011078]
[139.20582581 52.25263596]
[138.91459656 67.14439392]
[124.98504639 74.64626312]
[116.94387054 87.30879211]
[121.15699768 99.26300049]
[117.78591919 111.48140717]
[108.03907776 119.58404541]
[95.41045380 120.66634369]
[87.18164062 133.20774841]
[91.41975403 145.99261475]
[87.57679749 158.69860840]
[77.27020264 166.75193787]
[64.40071869 167.38900757]
[55.98609924 179.80650330]
[47.57147980 192.22399902]
[39.15686035 204.64149475]
[37.82050705 220.40615845]
[24.27563858 226.60179138]
[15.86102009 239.01928711]
[7.44640207 251.43678284]
[-0.96821666 263.85427856]
[-1.82361913 270.41018677]
[-5.33443642 274.87908936]
[-9.82282066 276.51110840]
[-18.60342407 288.67254639]
[-27.38402748 300.83401489]
[-36.16463089 312.99548340]
[-42.74465942 326.47518921]
[-46.93166733 340.87899780]
[-51.11867905 355.28277588]
[-55.30569077 369.68655396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 210]
[21 209]
[22 208]
[23 207]
[47 206]
[48 205]
[49 204]
[50 203]
[51 200]
[52 199]
[53 198]
[54 197]
[56 195]
[57 194]
[58 193]
[59 192]
[62 188]
[63 187]
[66 183]
[67 182]
[69 180]
[70 179]
[72 176]
[73 175]
[74 174]
[75 173]
[76 172]
[79 168]
[80 167]
[81 166]
[83 165]
[84 164]
[85 163]
[86 162]
[90 161]
[91 160]
[92 159]
[93 158]
[94 157]
[95 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
