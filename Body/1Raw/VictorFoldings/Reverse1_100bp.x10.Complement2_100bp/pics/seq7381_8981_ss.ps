%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[87.85422516 518.80157471]
[89.33759308 503.78616333]
[94.65759277 489.66668701]
[103.45149994 477.40579224]
[115.11972809 467.83944702]
[128.86672974 461.61993408]
[126.42099762 446.82064819]
[123.97526550 432.02139282]
[114.32744598 424.72439575]
[112.16874695 412.41488647]
[119.19364929 401.59762573]
[116.96852875 386.76358032]
[114.74340820 371.92953491]
[112.40792847 357.11245728]
[109.96219635 342.31320190]
[107.32418060 339.97369385]
[105.68824768 336.24023438]
[105.69724274 331.59768677]
[107.75312805 326.79974365]
[105.97065735 311.90600586]
[103.85288239 310.06939697]
[102.33499908 307.28323364]
[101.78233337 303.77185059]
[102.47232819 299.88745117]
[104.55274200 296.07617188]
[103.65991974 281.10278320]
[102.76710510 266.12936401]
[101.87429047 251.15596008]
[100.98147583 236.18255615]
[89.70542145 226.51890564]
[88.58667755 211.34645081]
[98.79925537 199.58460999]
[97.90644073 184.61120605]
[86.63038635 174.94755554]
[85.51164246 159.77511597]
[95.72422791 148.01327515]
[94.83140564 133.03987122]
[93.82714844 118.07352448]
[82.91663361 108.53901672]
[81.83895111 94.08962250]
[91.21439362 83.04212952]
[90.09874725 68.08367157]
[79.51524353 78.71331787]
[64.51621246 78.88383484]
[53.69378281 68.49754333]
[53.24753571 53.50418472]
[63.43310165 42.49263382]
[78.41572571 41.77080536]
[89.61225891 51.75134659]
[89.83558655 36.75300980]
[90.05891418 21.75467300]
[82.52793884 7.84083319]
[90.45386505 -4.76983118]
[90.67719269 -19.76816940]
[90.90052032 -34.76650620]
[91.12384796 -49.76484299]
[76.83472443 -54.69214249]
[64.78450775 -63.78250885]
[56.14573669 -76.13564301]
[51.75411987 -90.53456116]
[52.02770615 -105.56545258]
[56.92712402 -119.75653076]
[65.96065521 -131.72212219]
[78.23358917 -140.29797363]
[92.53677368 -144.65455627]
[92.76010132 -159.65289307]
[92.98342896 -174.65124512]
[93.20675659 -189.64958191]
[93.43008423 -204.64791870]
[79.72581482 -217.72871399]
[79.93119812 -236.35317993]
[93.44899750 -248.69760132]
[93.22566986 -263.69592285]
[93.00234222 -278.69427490]
[92.66736603 -293.69052124]
[92.22076416 -308.68386841]
[91.77415466 -323.67724609]
[91.21594238 -338.66683960]
[90.54615784 -353.65188599]
[80.27867889 -368.93783569]
[88.96724701 -384.18499756]
[88.07443237 -399.15838623]
[86.84745789 -414.10812378]
[85.28693390 -429.02673340]
[83.72640991 -443.94534302]
[82.16589355 -458.86395264]
[67.17488861 -460.15481567]
[52.69917297 -464.25970459]
[39.26202393 -471.03021240]
[27.34919167 -480.22155762]
[17.39131546 -491.50149536]
[9.74836731 -504.46228027]
[4.69663382 -518.63537598]
[2.41873312 -533.50842285]
[2.99700928 -548.54376221]
[6.41055822 -563.19793701]
[12.53598213 -576.94116211]
[21.15184975 -589.27661133]
[31.94670486 -599.75836182]
[44.53031921 -608.00756836]
[58.44780350 -613.72595215]
[73.19605255 -616.70684814]
[88.24191284 -616.84252930]
[103.04150391 -614.12799072]
[117.05982208 -608.66143799]
[129.79011536 -600.64044189]
[140.77218628 -590.35498047]
[149.60903931 -578.17687988]
[155.98123169 -564.54632568]
[159.65843201 -549.95611572]
[160.50767517 -534.93359375]
[158.49827576 -520.02191162]
[153.70288086 -505.76004028]
[146.29484558 -492.66357422]
[136.54194641 -481.20593262]
[124.79676056 -471.80130005]
[111.48385620 -464.78964233]
[97.08449554 -460.42446899]
[98.64501953 -445.50585938]
[100.20554352 -430.58724976]
[101.76606750 -415.66864014]
[104.26015472 -413.17630005]
[105.67096710 -409.35208130]
[105.38565826 -404.71829224]
[103.04784393 -400.05120850]
[103.94065857 -385.07778931]
[112.77698517 -376.81671143]
[113.64334869 -364.34942627]
[105.53119659 -354.32165527]
[106.20098114 -339.33663940]
[109.64002228 -332.79486084]
[106.76750946 -324.12384033]
[107.21411133 -309.13049316]
[107.66072083 -294.13714600]
[111.00197601 -287.54489136]
[108.00067902 -278.91760254]
[108.22400665 -263.91925049]
[108.44733429 -248.92092896]
[118.16168976 -242.93780518]
[123.84028625 -232.90440369]
[123.97171783 -221.25637817]
[118.40765381 -210.88612366]
[108.42842102 -204.42459106]
[108.20509338 -189.42625427]
[107.98176575 -174.42791748]
[107.75843811 -159.42956543]
[107.53511047 -144.43122864]
[121.70224762 -139.65072632]
[133.71440125 -130.71325684]
[142.38766479 -118.48400879]
[146.86239624 -104.15335083]
[146.68833923 -89.12097931]
[141.86994934 -74.85919952]
[132.86721802 -62.76874542]
[120.55168915 -54.04119110]
[106.12219238 -49.54151535]
[105.89886475 -34.54317856]
[105.67553711 -19.54484177]
[105.45220947 -4.54650354]
[112.99916077 8.29455471]
[105.05725098 21.97800064]
[104.83392334 36.97633743]
[104.61059570 51.97467422]
[105.05720520 66.96802521]
[106.17285156 81.92647552]
[117.08336639 91.46098328]
[118.16104889 105.91037750]
[108.78560638 116.95787048]
[112.54461670 125.28298950]
[109.80481720 132.14704895]
[110.69763184 147.12045288]
[122.23552704 157.58538818]
[122.92766571 172.78326416]
[112.87984467 183.71839905]
[113.77266693 198.69180298]
[125.31055450 209.15672302]
[126.00270081 224.35461426]
[115.95487976 235.28973389]
[116.84769440 250.26313782]
[117.74050903 265.23654175]
[118.63333130 280.20996094]
[119.52614594 295.18334961]
[120.86437988 310.12353516]
[122.64684296 325.01727295]
[124.76146698 339.86746216]
[127.20719910 354.66671753]
[131.69395447 362.62329102]
[129.57745361 369.70440674]
[131.80256653 384.53845215]
[134.02769470 399.37249756]
[145.82972717 413.50732422]
[138.77453613 429.57565308]
[141.22026062 444.37493896]
[143.66600037 459.17419434]
[158.68309021 460.64016724]
[172.80874634 465.94381714]
[185.07981873 474.72351074]
[194.65966797 486.38064575]
[200.89511108 500.12042236]
[203.36100769 515.00604248]
[201.88923645 530.02258301]
[196.58013916 544.14617920]
[187.79571533 556.41387939]
[176.13487244 565.98919678]
[162.39268494 572.21936035]
[147.50610352 574.67950439]
[132.49014282 573.20196533]
[118.36859894 567.88739014]
[106.10430908 559.09820557]
[96.53346252 547.43371582]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 194]
[7 193]
[8 192]
[11 190]
[12 189]
[13 188]
[14 186]
[15 185]
[19 184]
[20 183]
[25 182]
[26 181]
[27 180]
[28 179]
[29 178]
[32 175]
[33 174]
[36 171]
[37 170]
[38 168]
[41 165]
[42 164]
[49 163]
[50 162]
[51 161]
[53 159]
[54 158]
[55 157]
[56 156]
[65 147]
[66 146]
[67 145]
[68 144]
[69 143]
[72 138]
[73 137]
[74 136]
[75 134]
[76 133]
[77 132]
[78 130]
[79 129]
[81 126]
[82 125]
[83 121]
[84 120]
[85 119]
[86 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
