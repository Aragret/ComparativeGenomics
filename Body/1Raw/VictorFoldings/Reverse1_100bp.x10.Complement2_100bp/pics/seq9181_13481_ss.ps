%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[42.51785660 804.59143066]
[26.72933197 803.88574219]
[16.12596893 792.16632080]
[16.99855423 776.38610840]
[28.82939911 765.90728760]
[29.49918365 750.92224121]
[29.94578934 735.92889404]
[30.16911697 720.93054199]
[30.39244461 705.93218994]
[30.61577225 690.93389893]
[30.83909988 675.93554688]
[31.06242752 660.93719482]
[18.24643326 656.79644775]
[7.10150051 649.20440674]
[-1.46478081 638.76788330]
[-6.75159121 626.32574463]
[-8.32221222 612.88159180]
[-6.04008627 599.52276611]
[-0.08063396 587.33227539]
[9.08219242 577.30126953]
[20.71359062 570.24810791]
[33.87682724 566.75195312]
[34.54661560 551.76690674]
[35.21640015 536.78192139]
[35.88618469 521.79687500]
[36.55596924 506.81182861]
[29.39468956 493.75173950]
[37.74048233 480.31082153]
[38.41026688 465.32580566]
[39.08005142 450.34075928]
[36.57544708 446.27432251]
[36.59877014 440.59130859]
[39.99945450 434.92147827]
[41.11510086 419.96304321]
[42.23075104 405.00457764]
[40.21930313 402.10864258]
[39.51058960 398.09457397]
[40.61486816 393.58526611]
[43.74490738 389.40795898]
[45.52737045 374.51425171]
[47.30983734 359.62051392]
[49.09230423 344.72680664]
[39.06347275 337.88589478]
[32.85813141 327.36798096]
[31.70674706 315.13787842]
[35.88891602 303.51080322]
[44.66872406 294.71401978]
[56.42343903 290.46026611]
[58.64855576 275.62622070]
[60.87367249 260.79217529]
[63.09879303 245.95812988]
[65.32390594 231.12408447]
[67.54902649 216.29003906]
[69.77413940 201.45599365]
[68.21830750 199.12414551]
[67.49240875 196.03550720]
[67.88931274 192.50311279]
[69.58329010 188.94010925]
[72.59867859 185.81578064]
[75.70278931 171.14048767]
[78.80690002 156.46517944]
[76.99884033 152.04478455]
[77.94845581 146.44163513]
[82.22808838 141.40216064]
[85.76776123 126.82578278]
[89.30743408 112.24941254]
[83.85837555 101.95625305]
[86.69087219 90.65943146]
[96.35169983 84.15484619]
[100.10800171 69.63278198]
[94.77729034 52.00709152]
[107.55699158 39.98019409]
[111.09665680 25.40382004]
[114.63632965 10.82744408]
[113.14456940 4.38646793]
[114.87047577 -1.02816832]
[118.50448608 -4.12703848]
[122.47657776 -18.59156227]
[126.44867706 -33.05608749]
[130.31298828 -47.54977798]
[134.06929016 -62.07183838]
[137.82557678 -76.59389496]
[133.79064941 -91.89193726]
[144.46858215 -102.27610779]
[148.22488403 -116.79816437]
[151.98118591 -131.32022095]
[146.65048218 -148.94592285]
[159.43017578 -160.97280884]
[162.96984863 -175.54919434]
[158.70759583 -190.78546143]
[169.22975159 -201.32745361]
[172.76942444 -215.90382385]
[175.32525635 -230.68447876]
[176.88577271 -245.60308838]
[174.66613770 -254.46372986]
[178.58219910 -260.73159790]
[180.36466980 -275.62533569]
[182.14714050 -290.51904297]
[183.92959595 -305.41275024]
[170.03894043 -311.34793091]
[158.38395691 -320.95721436]
[149.90946960 -333.46160889]
[145.30247498 -347.84744263]
[144.93643188 -362.94851685]
[148.84100342 -377.54064941]
[156.69969177 -390.44097900]
[167.87539673 -400.60366821]
[181.46217346 -407.20486450]
[196.35859680 -409.70950317]
[211.35708618 -407.91448975]
[225.24177551 -401.96536255]
[236.88710022 -392.34439087]
[245.34901428 -379.83151245]
[249.94155884 -365.44104004]
[250.29243469 -350.33959961]
[246.37319946 -335.75137329]
[238.50157166 -322.85897827]
[227.31565857 -312.70751953]
[213.72225952 -306.11996460]
[198.82331848 -303.63027954]
[197.04084778 -288.73657227]
[195.25839233 -273.84286499]
[193.47592163 -258.94912720]
[191.80438232 -244.04257202]
[190.24385071 -229.12396240]
[200.73271179 -239.84701538]
[215.32966614 -243.30082703]
[229.51171875 -238.41516113]
[238.88438416 -226.70391846]
[240.54344177 -211.79595947]
[233.97482300 -198.31065369]
[221.21388245 -190.42658997]
[206.21473694 -190.58673096]
[193.62504578 -198.74143982]
[187.34579468 -212.36415100]
[183.80612183 -197.78778076]
[188.32154846 -183.59411621]
[177.54621887 -172.00952148]
[174.00654602 -157.43313599]
[180.03019714 -146.94303894]
[177.20053101 -134.77024841]
[166.50325012 -127.56392670]
[162.74694824 -113.04186249]
[158.99064636 -98.51980591]
[163.29425049 -84.26048279]
[152.34764099 -72.83760071]
[148.59133911 -58.31553650]
[144.83503723 -43.79347992]
[146.20336914 -36.53059387]
[140.91320801 -29.08399010]
[136.94110107 -14.61946583]
[132.96900940 -0.15494233]
[129.21270752 14.36711693]
[125.67303467 28.94349289]
[122.13336182 43.51986694]
[128.15699768 54.00997543]
[125.32733917 66.18276215]
[114.63005829 73.38908386]
[110.87375641 87.91114807]
[115.77153015 103.95446014]
[103.88380432 115.78908539]
[100.34413147 130.36546326]
[96.80445862 144.94183350]
[93.48220062 159.56929016]
[90.37808990 174.24459839]
[87.27397919 188.91989136]
[84.60818481 203.68112183]
[82.38307190 218.51515198]
[80.15795135 233.34919739]
[77.93283844 248.18324280]
[75.70771790 263.01730347]
[73.48259735 277.85131836]
[71.25748444 292.68536377]
[84.55646515 305.00994873]
[87.76688385 322.69531250]
[79.78901672 338.62655640]
[63.98601913 346.50927734]
[62.20355606 361.40298462]
[60.42108917 376.29669189]
[58.63862228 391.19042969]
[57.18920517 406.12023926]
[56.07355499 421.07867432]
[54.95790863 436.03713989]
[54.06509018 451.01052856]
[53.39530563 465.99557495]
[52.72552109 480.98062134]
[59.83889389 495.11251831]
[51.54100800 507.48159790]
[50.87122345 522.46661377]
[50.20143890 537.45166016]
[49.53165436 552.43670654]
[48.86186600 567.42175293]
[64.30747223 573.60852051]
[76.68245697 584.69226074]
[84.50287628 599.32019043]
[86.83903503 615.71618652]
[83.42598724 631.89599609]
[74.69344330 645.90777588]
[61.71175766 656.06732178]
[46.06076431 661.16052246]
[45.83743668 676.15887451]
[45.61410904 691.15722656]
[45.39078140 706.15551758]
[45.16745377 721.15386963]
[44.94412613 736.15222168]
[47.82541275 742.10284424]
[47.34162903 747.76525879]
[44.48422241 751.59204102]
[43.81443787 766.57702637]
[54.66322708 778.06964111]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 209]
[6 208]
[7 205]
[8 204]
[9 203]
[10 202]
[11 201]
[12 200]
[22 192]
[23 191]
[24 190]
[25 189]
[26 188]
[28 186]
[29 185]
[30 184]
[33 183]
[34 182]
[35 181]
[39 180]
[40 179]
[41 178]
[42 177]
[48 173]
[49 172]
[50 171]
[51 170]
[52 169]
[53 168]
[54 167]
[59 166]
[60 165]
[61 164]
[64 163]
[65 162]
[66 161]
[69 159]
[70 158]
[72 155]
[73 154]
[74 153]
[77 152]
[78 151]
[79 150]
[80 148]
[81 147]
[82 146]
[84 144]
[85 143]
[86 142]
[88 139]
[89 138]
[91 136]
[92 135]
[93 125]
[94 124]
[96 123]
[97 122]
[98 121]
[99 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
