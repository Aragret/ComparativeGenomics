%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[58.88381958 550.62591553]
[60.98069763 535.72326660]
[65.94493866 521.51611328]
[73.58573151 508.55059814]
[83.60937500 497.32504272]
[95.63059998 488.27096558]
[109.18733215 481.73635864]
[105.43103027 467.21429443]
[101.67473602 452.69223022]
[97.91843414 438.17019653]
[93.20008087 432.48168945]
[94.21602631 423.40393066]
[90.67635345 408.82754517]
[87.13668060 394.25119019]
[83.59700775 379.67480469]
[80.05734253 365.09841919]
[76.63826752 379.70358276]
[69.45402527 392.87121582]
[59.02324677 403.65075684]
[46.09893417 411.26403809]
[31.61410904 415.16146851]
[16.61444283 415.06164551]
[2.18277121 410.97180176]
[-10.63906765 403.18716431]
[-20.92545509 392.26974487]
[-27.93380928 379.00762939]
[-31.15818787 364.35830688]
[-30.36582375 349.37924194]
[-25.61391449 335.15182495]
[-17.24550819 322.70312500]
[-5.86472654 312.93185425]
[7.70684338 306.54339600]
[22.48945808 303.99893188]
[37.41594696 305.48214722]
[51.40875244 310.88598633]
[63.45772552 319.82031250]
[72.69303894 331.64016724]
[78.44828796 345.49337769]
[79.56393433 330.53491211]
[80.67958069 315.57647705]
[78.95462036 313.36679077]
[78.00100708 310.34069824]
[78.13408661 306.78857422]
[79.55836487 303.10943604]
[82.33303070 299.76950073]
[84.33704376 284.90396118]
[86.34105682 270.03845215]
[80.37349701 256.39157104]
[89.88514709 243.74880981]
[91.88916016 228.88328552]
[93.89317322 214.01776123]
[94.78599548 199.04435730]
[94.56266785 184.04602051]
[94.33934021 169.04768372]
[84.54080200 154.48898315]
[93.64292908 138.48170471]
[93.19631958 123.48835754]
[92.74971008 108.49501038]
[92.19150543 93.50539398]
[91.52172089 78.52035522]
[90.85192871 63.53532028]
[90.18214417 48.55028152]
[81.20771027 39.28624725]
[80.95834351 26.79138565]
[89.02242279 17.77488899]
[88.57581329 2.78153920]
[88.12921143 -12.21181107]
[87.68260193 -27.20516014]
[76.46140289 -38.00897980]
[76.22206879 -53.22072983]
[86.59101105 -63.85184479]
[86.14440155 -78.84519958]
[72.44007874 -83.02766418]
[60.71495438 -91.22576904]
[52.10779953 -102.62712860]
[47.44955826 -116.10905457]
[47.18313217 -130.34910583]
[51.32132721 -143.95480347]
[59.44688034 -155.59977722]
[70.75449371 -164.15309143]
[84.13063812 -168.78904724]
[83.90731049 -183.78738403]
[75.96540070 -197.47084045]
[83.51235962 -210.31188965]
[83.28903198 -225.31022644]
[70.51551819 -237.26249695]
[70.34176636 -254.41722107]
[82.38690948 -266.15405273]
[81.94030762 -281.14739990]
[81.49369812 -296.14074707]
[81.04709625 -311.13409424]
[68.39485931 -319.92199707]
[63.40160751 -334.30673218]
[67.78422546 -348.70315552]
[79.66149139 -357.65127563]
[79.21488190 -372.64462280]
[64.81486511 -377.37908936]
[52.90448380 -386.75558472]
[44.92197418 -399.64181519]
[41.83126068 -414.48175049]
[44.00556183 -429.48336792]
[51.18232727 -442.83514404]
[62.49491882 -452.92477417]
[76.57729340 -458.53393555]
[91.72892761 -458.98526001]
[106.12019348 -454.22424316]
[118.01328278 -444.82580566]
[125.97203064 -431.92489624]
[129.03538513 -417.07928467]
[126.83344269 -402.08172607]
[119.63208771 -388.74319458]
[108.30091858 -378.67440796]
[94.20823669 -373.09121704]
[94.65483856 -358.09786987]
[107.04364777 -349.87258911]
[112.27538300 -335.76254272]
[108.14718628 -321.10610962]
[96.04044342 -311.58071899]
[96.48705292 -296.58737183]
[96.93365479 -281.59402466]
[97.38026428 -266.60064697]
[107.90275574 -259.16381836]
[112.28603363 -246.84030151]
[108.71873474 -234.05418396]
[98.28736877 -225.53355408]
[98.51069641 -210.53521729]
[106.43663025 -197.92456055]
[98.90564728 -184.01071167]
[99.12897491 -169.01237488]
[114.06641388 -164.03620911]
[126.41790009 -154.22929382]
[134.67863464 -140.76293945]
[137.83416748 -125.25573730]
[135.48495483 -109.57894135]
[127.89688110 -95.63069153]
[115.97123718 -85.10623169]
[101.13775635 -79.29180145]
[101.58435822 -64.29845428]
[112.56769562 -54.30335236]
[113.23419952 -39.10432816]
[102.67594910 -27.65176582]
[103.12255859 -12.65841675]
[103.56916809 2.33493328]
[104.01576996 17.32828331]
[114.02997589 31.73947906]
[105.16718292 47.88049698]
[105.83696747 62.86553574]
[106.50675964 77.85057068]
[107.17654419 92.83560944]
[110.65391541 100.10750580]
[107.74306488 108.04840088]
[108.18966675 123.04174805]
[108.63627625 138.03509521]
[117.47178650 147.43171692]
[117.53510284 159.92890930]
[109.33767700 168.82435608]
[109.56100464 183.82269287]
[109.78433228 198.82102966]
[118.45237732 186.57908630]
[132.03849792 180.22163391]
[146.99131775 181.41047668]
[159.40219116 189.83485413]
[166.02696228 203.29264832]
[165.13391113 218.26603699]
[156.95651245 230.84101868]
[143.63227844 237.73049927]
[128.64416504 237.13360596]
[115.91000366 229.20634460]
[108.75870514 216.02177429]
[106.75469208 230.88729858]
[104.75067902 245.75282288]
[110.57489777 260.46298218]
[101.20658875 272.04244995]
[99.20257568 286.90798950]
[97.19856262 301.77352905]
[95.63803864 316.69210815]
[94.52238464 331.65057373]
[93.40673828 346.60903931]
[94.63371277 361.55874634]
[98.17338562 376.13513184]
[101.71305847 390.71151733]
[105.25273132 405.28787231]
[108.79240417 419.86425781]
[112.44049072 434.41387939]
[116.19679260 448.93594360]
[119.95309448 463.45800781]
[123.70939636 477.98007202]
[138.73435974 477.12167358]
[153.63803101 479.21133423]
[167.84756470 484.16867065]
[180.81678772 491.80316162]
[192.04719543 501.82135010]
[201.10711670 513.83819580]
[207.64831543 527.39172363]
[211.41935730 541.96105957]
[212.27529907 556.98614502]
[210.18324280 571.88952637]
[205.22360229 586.09826660]
[197.58702087 599.06622314]
[187.56700134 610.29504395]
[175.54870605 619.35296631]
[161.99409485 625.89196777]
[147.42414856 629.66070557]
[132.39891052 630.51422119]
[117.49591064 628.41973877]
[103.28797913 623.45776367]
[90.32122803 615.81909180]
[79.09406281 605.79724121]
[70.03803253 593.77752686]
[63.50122833 580.22180176]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 187]
[8 186]
[9 185]
[10 184]
[12 183]
[13 182]
[14 181]
[15 180]
[16 179]
[38 178]
[39 177]
[40 176]
[45 175]
[46 174]
[47 173]
[49 171]
[50 170]
[51 169]
[52 158]
[53 157]
[54 156]
[56 153]
[57 152]
[58 151]
[59 149]
[60 148]
[61 147]
[62 146]
[65 144]
[66 143]
[67 142]
[68 141]
[71 138]
[72 137]
[81 129]
[82 128]
[84 126]
[85 125]
[88 121]
[89 120]
[90 119]
[91 118]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
