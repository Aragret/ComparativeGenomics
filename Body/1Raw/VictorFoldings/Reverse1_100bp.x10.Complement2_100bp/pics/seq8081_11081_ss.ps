%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[90.37683105 647.40100098]
[76.02644348 651.83886719]
[61.22635651 654.40515137]
[46.21960831 655.05767822]
[31.25262070 653.78582764]
[16.57116890 650.61041260]
[2.41633153 645.58355713]
[-10.97945309 638.78790283]
[-23.39621544 630.33496094]
[-34.63006210 620.36352539]
[-44.49652100 609.03741455]
[-52.83357620 596.54254150]
[-59.50432968 583.08410645]
[-64.39923096 568.88311768]
[-67.43791962 554.17272949]
[-68.57048035 539.19458008]
[-67.77832031 524.19458008]
[-65.07444763 509.41897583]
[-60.50326920 495.11050415]
[-54.13983917 481.50405884]
[-46.08865738 468.82308960]
[-36.48192596 457.27584839]
[-25.47739792 447.05191040]
[-13.25577831 438.31921387]
[-0.01775772 431.22109985]
[14.01928425 425.87414551]
[28.62484741 422.36618042]
[43.55909348 420.75479126]
[58.57678986 421.06643677]
[52.81307220 407.33221436]
[62.51190186 394.83245850]
[64.73702240 379.99841309]
[66.96213531 365.16439819]
[57.92996979 353.37643433]
[59.97523880 338.30090332]
[72.40075684 328.90707397]
[74.62587738 314.07302856]
[76.74050140 299.22283936]
[78.74451447 284.35729980]
[80.74852753 269.49179077]
[82.75254059 254.62625122]
[84.42407990 239.71968079]
[85.76231384 224.77949524]
[87.10054779 209.83930969]
[88.43878174 194.89912415]
[89.77701569 179.95893860]
[90.66983795 164.98553467]
[91.11643982 149.99217224]
[91.56304932 134.99882507]
[92.00965118 120.00547791]
[92.45626068 105.01213074]
[90.23620605 101.85875702]
[89.41690063 97.74213409]
[90.39736176 93.30978394]
[93.27247620 89.36344910]
[94.38812256 74.40499878]
[95.50377655 59.44654083]
[96.61942291 44.48808670]
[97.73506927 29.52963448]
[98.85072327 14.57118130]
[87.54208374 24.42586517]
[72.54757690 24.83167267]
[60.72247696 15.60307217]
[57.47306824 0.95925665]
[64.28493500 -12.40481853]
[78.04377747 -18.37927818]
[92.45924377 -14.23268032]
[100.94124603 -1.85900044]
[103.60704041 -16.62021828]
[96.98015594 -33.80060959]
[108.82994080 -46.74470520]
[111.27566528 -61.54397583]
[113.72139740 -76.34324646]
[114.61421204 -91.31665039]
[113.94442749 -106.30168915]
[101.16275787 -114.90024567]
[95.95588684 -129.20904541]
[100.12368011 -143.66911316]
[111.86640167 -152.79306030]
[111.19661713 -167.77810669]
[110.52683258 -182.76313782]
[109.85704803 -197.74818420]
[109.18726349 -212.73321533]
[97.29280853 -203.59417725]
[82.69564056 -207.04708862]
[76.15623474 -220.54656982]
[82.49520874 -234.14132690]
[97.03970337 -237.80979919]
[109.06728363 -228.84919739]
[109.51389313 -243.84254456]
[109.96049500 -258.83590698]
[107.76753998 -262.58355713]
[106.96219635 -266.44564819]
[107.41006470 -269.97195435]
[108.84432220 -272.80206299]
[110.90647888 -274.70092773]
[112.24471283 -289.64111328]
[113.58294678 -304.58129883]
[114.92118073 -319.52148438]
[101.00092316 -325.44445801]
[89.59358978 -335.38064575]
[81.81677246 -348.35662842]
[78.43235016 -363.10116577]
[79.77190399 -378.16967773]
[85.70420074 -392.08596802]
[95.64804077 -403.48663330]
[108.62923431 -411.25476074]
[123.37602234 -414.62930298]
[138.44364929 -413.27966309]
[152.35597229 -407.33804321]
[163.74996948 -397.38656616]
[171.50938416 -384.40017700]
[174.87405396 -369.65112305]
[173.51429749 -354.58441162]
[167.56336975 -340.67608643]
[157.60426331 -329.28872681]
[144.61265564 -321.53802490]
[129.86137390 -318.18325806]
[128.52313232 -303.24307251]
[127.18489838 -288.30288696]
[125.84666443 -273.36270142]
[124.95384979 -258.38928223]
[124.50724030 -243.39593506]
[124.06063843 -228.40258789]
[124.17230225 -213.40299988]
[124.84208679 -198.41796875]
[125.51187134 -183.43292236]
[126.18165588 -168.44789124]
[126.85144043 -153.46284485]
[139.36134338 -145.42291260]
[144.80258179 -131.39234924]
[140.89303589 -116.67606354]
[128.92945862 -106.97148132]
[129.59924316 -91.98644257]
[136.63404846 -105.23451996]
[148.15409851 -114.84120178]
[162.45048523 -119.38138580]
[177.40242004 -118.18156433]
[190.79188538 -111.41972351]
[200.63259888 -100.09893799]
[205.46478271 -85.89859009]
[204.57160950 -70.92520142]
[198.08555603 -57.40000153]
[186.96879578 -47.32936096]
[172.87045288 -42.20720673]
[157.88191223 -42.79337311]
[144.22663879 -49.00091553]
[133.93031311 -59.90897369]
[128.52066040 -73.89752197]
[126.07493591 -59.09825134]
[123.62921143 -44.29898071]
[130.41638184 -34.28594589]
[128.49992371 -21.93641281]
[118.36826324 -13.95442200]
[115.70246887 0.80679500]
[113.80917358 15.68683052]
[112.69352722 30.64528275]
[111.57787323 45.60373688]
[110.46222687 60.56219101]
[109.34658051 75.52064514]
[108.23092651 90.47909546]
[107.44960785 105.45873260]
[107.00299835 120.45208740]
[106.55639648 135.44543457]
[106.10978699 150.43878174]
[105.66318512 165.43212891]
[107.85614777 169.17977905]
[108.66149139 173.04190063]
[108.21361542 176.56820679]
[106.77936554 179.39831543]
[104.71720123 181.29716492]
[103.37896729 196.23735046]
[102.04073334 211.17753601]
[100.70249939 226.11772156]
[99.36426544 241.05790710]
[101.56209564 245.79252625]
[101.70930481 250.43275452]
[100.18526459 254.21327209]
[97.61807251 256.63024902]
[95.61405182 271.49578857]
[93.61003876 286.36132812]
[91.60602570 301.22683716]
[93.56086731 310.14965820]
[89.45992279 316.29815674]
[87.23480225 331.13220215]
[96.35732269 343.75823975]
[93.88941956 358.77038574]
[81.79618073 367.38949585]
[79.57106018 382.22354126]
[77.34594727 397.05758667]
[82.95050812 411.85284424]
[73.41083527 423.29153442]
[87.85903168 427.39981079]
[101.66323853 433.32199097]
[114.59676361 440.96084595]
[126.44724274 450.19094849]
[137.02008057 460.86068726]
[146.14163208 472.79489136]
[153.66215515 485.79760742]
[159.45812988 499.65527344]
[163.43438721 514.14038086]
[165.52563477 529.01501465]
[165.69752502 544.03497314]
[163.94725037 558.95355225]
[160.30354309 573.52581787]
[154.82623291 587.51251221]
[147.60527039 600.68395996]
[138.75921631 612.82379150]
[128.43333435 623.73272705]
[116.79720306 633.23156738]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 192]
[31 190]
[32 189]
[33 188]
[36 185]
[37 184]
[38 182]
[39 181]
[40 180]
[41 179]
[42 175]
[43 174]
[44 173]
[45 172]
[46 171]
[47 166]
[48 165]
[49 164]
[50 163]
[51 162]
[55 161]
[56 160]
[57 159]
[58 158]
[59 157]
[60 156]
[68 155]
[69 154]
[71 151]
[72 150]
[73 149]
[74 134]
[75 133]
[79 129]
[80 128]
[81 127]
[82 126]
[83 125]
[89 124]
[90 123]
[91 122]
[96 121]
[97 120]
[98 119]
[99 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
