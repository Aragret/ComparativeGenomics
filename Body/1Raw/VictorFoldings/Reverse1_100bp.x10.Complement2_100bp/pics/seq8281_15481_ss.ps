%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[63.18489075 641.89038086]
[64.32761383 626.91015625]
[67.49956512 612.22503662]
[72.64167023 598.10864258]
[79.65811920 584.82391357]
[88.41821289 572.61840820]
[98.75874329 561.71948242]
[110.48708344 552.33013916]
[123.38473511 544.62530518]
[117.51577759 530.82110596]
[111.64681244 517.01696777]
[105.77785492 503.21276855]
[99.90888977 489.40859985]
[97.68309784 504.24252319]
[89.68503571 516.93231201]
[77.26251984 525.33953857]
[62.50895691 528.04736328]
[47.91058731 524.59954834]
[35.92749023 515.57702637]
[28.57902527 502.50036621]
[27.10354233 487.57308960]
[31.74968529 473.31079102]
[41.73449707 462.11688232]
[55.37535858 455.87774658]
[70.37355042 455.64477539]
[84.20160675 461.45724487]
[94.53013611 472.33706665]
[91.42602539 457.66174316]
[88.32191467 442.98645020]
[85.21781158 428.31115723]
[82.11370087 413.63583374]
[79.00959015 398.96054077]
[75.90547943 384.28524780]
[72.80136871 369.60992432]
[69.69725800 354.93463135]
[65.77706909 369.41329956]
[57.98572540 382.23107910]
[46.93769455 392.37704468]
[33.50426102 399.05111694]
[18.74485016 401.72689819]
[3.82344699 400.19335938]
[-10.08318615 394.57147217]
[-21.87831116 385.30459595]
[-30.63171768 373.12356567]
[-35.65307617 358.98898315]
[-36.54637909 344.01562500]
[-33.24117661 329.38427734]
[-25.99813080 316.24890137]
[-15.38846111 305.64538574]
[-2.24888849 298.40994263]
[12.38434505 295.11318970]
[27.35720253 296.01516724]
[41.48886108 301.04470825]
[53.66484070 309.80514526]
[62.92488861 321.60562134]
[68.53955841 335.51889038]
[69.87779236 320.57870483]
[71.21602631 305.63851929]
[72.55426025 290.69833374]
[73.89249420 275.75814819]
[75.23072815 260.81796265]
[76.56896210 245.87777710]
[77.90719604 230.93759155]
[79.24542999 215.99740601]
[80.58366394 201.05722046]
[78.26313782 196.88299561]
[78.54019165 191.20671082]
[82.19065857 185.69438171]
[83.97312164 170.80067444]
[85.75559235 155.90695190]
[87.53805542 141.01322937]
[89.32051849 126.11951447]
[91.10298920 111.22579956]
[85.77754974 98.29786682]
[94.00329590 86.99173737]
[95.78575897 72.09801483]
[82.60806274 66.29811859]
[71.61150360 57.02943802]
[63.68196869 45.05039597]
[59.45493698 31.33726311]
[59.26457977 17.00460625]
[63.11735916 3.21470881]
[70.69223785 -8.91669178]
[81.36738586 -18.41067505]
[94.27125549 -24.50412560]
[108.35369873 -26.71107292]
[110.35771179 -41.57659912]
[112.36172485 -56.44212723]
[114.36573792 -71.30765533]
[116.25903320 -86.18769073]
[108.62129974 -102.94318390]
[119.67962646 -116.56964111]
[121.24015045 -131.48825073]
[122.80067444 -146.40686035]
[124.36119843 -161.32545471]
[125.81061554 -176.25526428]
[127.14884949 -191.19544983]
[128.48709106 -206.13563538]
[114.42587280 -211.65460205]
[102.48995209 -220.91259766]
[93.64692688 -233.15913391]
[88.61364746 -247.40142822]
[87.79814148 -262.48492432]
[91.26653290 -277.18685913]
[98.73763275 -290.31542969]
[109.60581207 -300.80633545]
[122.99002075 -307.80917358]
[137.80526733 -310.75619507]
[152.85055542 -309.40856934]
[166.90621948 -303.87545776]
[178.83282471 -294.60546875]
[187.66354370 -282.35006714]
[192.68251038 -268.10272217]
[193.48286438 -253.01843262]
[189.99971008 -238.31999207]
[182.51542664 -225.19892883]
[171.63671875 -214.71893311]
[158.24546814 -207.72955322]
[143.42727661 -204.79740906]
[142.08903503 -189.85722351]
[140.75080872 -174.91703796]
[143.28501892 -167.97444153]
[139.27980042 -159.76493835]
[137.71928406 -144.84632874]
[136.15875244 -129.92771912]
[134.59823608 -115.00912476]
[141.96936035 -105.41781616]
[140.79135132 -92.97611237]
[131.15275574 -84.40522766]
[133.47914124 -77.39026642]
[129.23126221 -69.30364227]
[127.22725677 -54.43811417]
[125.22324371 -39.57258606]
[123.21923065 -24.70705795]
[137.40597534 -18.06908989]
[148.86126709 -7.35873890]
[156.45556641 6.38433504]
[159.43493652 21.82063484]
[157.49595642 37.44138336]
[150.81649780 51.71599197]
[140.03953552 63.24203491]
[126.21125031 70.88302612]
[110.67948151 73.88048553]
[108.89701080 88.77420044]
[114.22245026 101.70213318]
[105.99670410 113.00826263]
[104.21424103 127.90198517]
[102.43177032 142.79570007]
[100.64930725 157.68942261]
[98.86683655 172.58312988]
[97.08437347 187.47685242]
[95.52384949 202.39546204]
[94.18561554 217.33564758]
[92.84738159 232.27583313]
[91.50914764 247.21600342]
[90.17091370 262.15618896]
[88.83267975 277.09637451]
[87.49444580 292.03656006]
[86.15621185 306.97674561]
[84.81797791 321.91693115]
[83.47974396 336.85711670]
[84.37255859 351.83053589]
[87.47666931 366.50582886]
[90.58078003 381.18112183]
[93.68489075 395.85644531]
[96.78900146 410.53173828]
[99.89311218 425.20703125]
[102.99722290 439.88235474]
[106.10133362 454.55764771]
[109.20544434 469.23294067]
[113.71306610 483.53964233]
[119.58203125 497.34381104]
[125.45098877 511.14797974]
[131.31994629 524.95214844]
[137.18891907 538.75634766]
[151.68620300 534.81396484]
[166.58529663 532.88244629]
[181.60862732 532.99774170]
[196.47631836 535.15771484]
[210.91140747 539.32208252]
[224.64495850 545.41333008]
[237.42112732 553.31799316]
[249.00190735 562.88873291]
[259.17156982 573.94732666]
[267.74063110 586.28765869]
[274.54946899 599.67999268]
[279.47122192 613.87469482]
[282.41424561 628.60736084]
[283.32366943 643.60363770]
[282.18255615 658.58398438]
[279.01220703 673.26947021]
[273.87164307 687.38641357]
[266.85662842 700.67187500]
[258.09783936 712.87829590]
[247.75849915 723.77838135]
[236.03117371 733.16900635]
[223.13435364 740.87524414]
[209.30830383 746.75347900]
[194.81057739 750.69427490]
[179.91127014 752.62420654]
[164.88795471 752.50726318]
[150.02049255 750.34570312]
[135.58587646 746.17974854]
[121.85298157 740.08697510]
[109.07765961 732.18096924]
[97.49791718 722.60900879]
[87.32946777 711.54931641]
[78.76173401 699.20800781]
[71.95434570 685.81500244]
[67.03411865 671.61975098]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 175]
[10 174]
[11 173]
[12 172]
[13 171]
[27 170]
[28 169]
[29 168]
[30 167]
[31 166]
[32 165]
[33 164]
[34 163]
[35 162]
[56 161]
[57 160]
[58 159]
[59 158]
[60 157]
[61 156]
[62 155]
[63 154]
[64 153]
[65 152]
[68 151]
[69 150]
[70 149]
[71 148]
[72 147]
[73 146]
[75 144]
[76 143]
[86 134]
[87 133]
[88 132]
[89 131]
[90 129]
[92 126]
[93 125]
[94 124]
[95 123]
[96 121]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
