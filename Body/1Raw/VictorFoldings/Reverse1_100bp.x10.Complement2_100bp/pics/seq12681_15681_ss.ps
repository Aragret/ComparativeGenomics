%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAUGCGGGAGAGUCGGCUACUUGUCAACCUUAUCCAACAAUCGCCAUUGAUUCUAAUCAUACCAUUAAUCCUUCUACUCAUCUAUAAACUUCUUGACxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[68.84232330 544.59735107]
[63.44662094 530.50665283]
[61.88268661 515.49945068]
[64.25715637 500.59893799]
[70.40812683 486.82113647]
[79.91622925 475.10540771]
[92.13317108 466.25054932]
[106.22598267 460.86026001]
[104.66546631 445.94168091]
[103.10494232 431.02307129]
[101.54441833 416.10446167]
[99.98389435 401.18585205]
[88.65449524 411.01666260]
[73.87767792 408.43872070]
[66.54637146 395.35238647]
[72.06493378 381.40444946]
[86.36528778 376.87677002]
[98.90489197 385.10559082]
[98.45828247 370.11224365]
[98.01167297 355.11889648]
[97.56507111 340.12554932]
[97.11846161 325.13220215]
[84.69241333 319.46560669]
[75.87779999 308.94744873]
[72.43852997 295.59378052]
[75.10098267 281.99636841]
[83.40152740 270.81973267]
[95.76605988 264.27902222]
[95.54273224 249.28067017]
[95.31940460 234.28233337]
[87.39347076 221.67167664]
[94.92445374 207.75782776]
[94.70112610 192.75949097]
[94.47779846 177.76115417]
[94.25447083 162.76281738]
[93.91949463 147.76655579]
[93.47288513 132.77320862]
[93.02628326 117.77986145]
[82.55238342 107.76768494]
[82.12097931 93.28458405]
[91.98036957 82.66674042]
[91.53376007 67.67339325]
[80.31256866 56.86957550]
[80.07322693 41.65782547]
[90.44216919 31.02670860]
[89.99556732 16.03335762]
[89.54895782 1.04000819]
[89.10235596 -13.95334148]
[86.35748291 -18.39324570]
[85.65990448 -22.98309326]
[86.72390747 -26.91793060]
[88.98569489 -29.62285995]
[89.20902252 -44.62119675]
[89.43235016 -59.61953354]
[89.65567780 -74.61787415]
[89.87901306 -89.61621094]
[90.10234070 -104.61454773]
[88.31987000 -119.50826263]
[84.56356812 -134.03031921]
[80.80726624 -148.55238342]
[77.05097198 -163.07444763]
[73.29467010 -177.59649658]
[62.59739304 -184.80282593]
[59.76772690 -196.97561646]
[65.79136658 -207.46571350]
[62.25169373 -222.04209900]
[47.38653564 -219.94592285]
[32.38750076 -219.31689453]
[17.39903259 -220.16108704]
[2.56548762 -222.47035217]
[-11.97027779 -226.22245789]
[-26.06827164 -231.38127136]
[-39.59272003 -237.89710999]
[-52.41337204 -245.70719910]
[-64.40675354 -254.73635864]
[-75.45735931 -264.89761353]
[-85.45876312 -276.09307861]
[-94.31464386 -288.21496582]
[-101.93971252 -301.14651489]
[-108.26053619 -314.76321411]
[-113.21623230 -328.93386841]
[-116.75907898 -343.52206421]
[-118.85495758 -358.38726807]
[-119.48368073 -373.38629150]
[-118.63919067 -388.37475586]
[-116.32962799 -403.20825195]
[-112.57723236 -417.74395752]
[-107.41813660 -431.84182739]
[-100.90203094 -445.36614990]
[-93.09167480 -458.18664551]
[-84.06227875 -470.17984009]
[-73.90081787 -481.23025513]
[-62.70513916 -491.23144531]
[-50.58307266 -500.08706665]
[-37.65136719 -507.71188354]
[-24.03455734 -514.03240967]
[-9.86378956 -518.98785400]
[4.72446203 -522.53039551]
[19.58970070 -524.62597656]
[34.58876419 -525.25439453]
[49.57719803 -524.40960693]
[64.41065216 -522.09973145]
[78.94626617 -518.34704590]
[93.04405212 -513.18768311]
[106.56824493 -506.67132568]
[119.38858032 -498.86068726]
[131.38160706 -489.83105469]
[142.43179321 -479.66937256]
[152.43275452 -468.47351074]
[161.28814697 -456.35125732]
[168.91270447 -443.41940308]
[175.23298645 -429.80245972]
[180.18811035 -415.63159180]
[183.73037720 -401.04327393]
[185.82565308 -386.17800903]
[186.45378113 -371.17892456]
[185.60868835 -356.19049072]
[183.29853821 -341.35708618]
[179.54556274 -326.82156372]
[174.38589478 -312.72387695]
[167.86924744 -299.19982910]
[160.05838013 -286.37963867]
[151.02851868 -274.38677979]
[140.86660767 -263.33679199]
[129.67053223 -253.33605957]
[117.54811096 -244.48091125]
[104.61609650 -236.85661316]
[90.99903107 -230.53662109]
[76.82807159 -225.58177185]
[80.36773682 -211.00538635]
[93.14743805 -198.97850037]
[87.81672668 -181.35279846]
[91.57302856 -166.83074951]
[95.32933044 -152.30868530]
[99.08563232 -137.78662109]
[102.84192657 -123.26456451]
[106.30177307 -137.86009216]
[114.04878998 -150.70469666]
[125.34457397 -160.57409668]
[139.11248779 -166.52763367]
[154.04026794 -167.99781799]
[168.70509338 -164.84454346]
[181.70918274 -157.36834717]
[191.81311035 -146.28182983]
[198.05378723 -132.64167786]
[199.83642578 -117.74798584]
[196.99111938 -103.02031708]
[189.78903198 -89.86242676]
[178.91665649 -79.52844238]
[165.41024780 -73.00332642]
[150.55717468 -70.90901947]
[135.77311707 -73.44513702]
[122.46721649 -80.36994171]
[111.90769958 -91.02342224]
[105.10067749 -104.39122009]
[104.87734985 -89.39288330]
[104.65402222 -74.39454651]
[104.43069458 -59.39620590]
[104.20736694 -44.39786911]
[103.98403931 -29.39953232]
[104.09570312 -14.39994812]
[104.54230499 0.59340227]
[104.98891449 15.58675194]
[105.43552399 30.58010292]
[116.41885376 40.57519913]
[117.08536530 55.77422714]
[106.52711487 67.22679138]
[106.97371674 82.22013855]
[117.44761658 92.23231506]
[117.87902069 106.71541595]
[108.01963043 117.33325958]
[108.46623993 132.32659912]
[108.91284180 147.31996155]
[112.29637146 155.80462646]
[109.25280762 162.53948975]
[109.47613525 177.53782654]
[109.69946289 192.53616333]
[109.92279053 207.53450012]
[117.86469269 221.21795654]
[110.31774139 234.05900574]
[110.54106903 249.05734253]
[110.76439667 264.05569458]
[125.28749084 271.95959473]
[133.79417419 286.02841187]
[134.04368591 302.37329102]
[126.06262970 316.53161621]
[112.11181641 324.68557739]
[112.55841827 339.67892456]
[113.00502777 354.67227173]
[113.45162964 369.66564941]
[113.89823914 384.65899658]
[114.90249634 399.62533569]
[116.46302032 414.54394531]
[118.02354431 429.46252441]
[119.58406830 444.38113403]
[121.14459229 459.29974365]
[136.04780579 461.65695190]
[149.83273315 467.79196167]
[161.55947876 477.28649902]
[170.42849731 489.49316406]
[175.83506775 503.57971191]
[177.41059875 518.58575439]
[175.04763794 533.48803711]
[168.90730286 547.27056885]
[159.40826416 558.99365234]
[147.19815063 567.85797119]
[133.10951233 573.25909424]
[118.10289764 574.82885742]
[103.20149994 572.46014404]
[89.42131805 566.31445312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 196]
[9 195]
[10 194]
[11 193]
[12 192]
[18 191]
[19 190]
[20 189]
[21 188]
[22 187]
[28 182]
[29 181]
[30 180]
[32 178]
[33 177]
[34 176]
[35 175]
[36 173]
[37 172]
[38 171]
[41 168]
[42 167]
[45 164]
[46 163]
[47 162]
[48 161]
[52 160]
[53 159]
[54 158]
[55 157]
[56 156]
[57 155]
[58 136]
[59 135]
[60 134]
[61 133]
[62 132]
[65 130]
[66 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
