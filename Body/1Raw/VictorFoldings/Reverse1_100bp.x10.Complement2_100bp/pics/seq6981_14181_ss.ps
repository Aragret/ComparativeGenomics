%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[88.41661072 674.72045898]
[73.41621399 675.48950195]
[58.43772507 674.37237549]
[43.71736908 671.38665771]
[29.48730659 666.57952881]
[15.97197151 660.02673340]
[3.38451695 651.83166504]
[-8.07653427 642.12353516]
[-18.23042488 631.05548096]
[-26.91701126 618.80206299]
[-33.99929810 605.55651855]
[-39.36558151 591.52777100]
[-42.93123245 576.93701172]
[-44.64001465 562.01446533]
[-44.46497726 546.99536133]
[-42.40887833 532.11669922]
[-38.50415039 517.61303711]
[-32.81237411 503.71313477]
[-25.42331696 490.63623047]
[-16.45351410 478.58859253]
[-6.04443359 467.76019287]
[5.63975811 458.32180786]
[18.41478539 450.42233276]
[32.07916641 444.18630981]
[46.41739655 439.71209717]
[61.20333862 437.07031250]
[76.20379639 436.30255127]
[77.31944275 421.34408569]
[78.43509674 406.38565063]
[79.55074310 391.42718506]
[80.66638947 376.46871948]
[81.78204346 361.51028442]
[82.89768982 346.55181885]
[84.01333618 331.59338379]
[85.12899017 316.63491821]
[86.24463654 301.67645264]
[87.36028290 286.71801758]
[88.14160919 271.73837280]
[88.58821106 256.74502563]
[89.03482056 241.75167847]
[89.48142242 226.75831604]
[77.60415649 217.81021118]
[73.22154236 203.41380310]
[78.21479034 189.02906799]
[90.86702728 180.24116516]
[91.31363678 165.24781799]
[82.17494965 150.26611328]
[91.98275757 134.68124390]
[92.20608521 119.68289948]
[80.44373322 108.10642242]
[80.56659698 91.60330963]
[92.50000000 80.20323944]
[92.50000000 65.20323944]
[92.50000000 50.20324326]
[92.50000000 35.20324326]
[92.50000000 20.20324135]
[76.81551361 13.98643494]
[64.74825287 2.24788213]
[58.12973404 -13.19138432]
[57.94933319 -29.95172882]
[64.20648193 -45.46167755]
[75.91508484 -57.35244370]
[91.25882721 -63.81970978]
[90.81221771 -78.81305695]
[90.36561584 -93.80641174]
[89.91900635 -108.79975891]
[89.47239685 -123.79310608]
[89.02579498 -138.78645325]
[86.36000061 -153.54768372]
[81.53400421 -167.75013733]
[76.70800018 -181.95259094]
[70.98398590 -189.07112122]
[71.91759491 -196.40257263]
[60.31048965 -207.15364075]
[63.75773239 -221.64384460]
[59.14372253 -235.91658020]
[54.52971649 -250.18931580]
[49.91570663 -264.46203613]
[45.30169678 -278.73477173]
[30.36806107 -276.89547729]
[15.35622406 -277.91589355]
[0.80885339 -281.75912476]
[-12.74817181 -288.28625488]
[-24.82477379 -297.26135254]
[-34.98439407 -308.35995483]
[-42.85976028 -321.18081665]
[-48.16619492 -335.26052856]
[-50.71186447 -350.09011841]
[-50.40474701 -365.13345337]
[-47.25594330 -379.84677124]
[-41.37928391 -393.69815063]
[-32.98720551 -406.18695068]
[-22.38307571 -416.86163330]
[-9.95022774 -425.33633423]
[3.86190033 -431.30471802]
[18.55400658 -434.55102539]
[33.59498215 -434.95788574]
[48.44110489 -432.51062012]
[62.55569839 -427.29766846]
[75.42852783 -419.50750732]
[86.59424591 -409.42172241]
[95.64921570 -397.40490723]
[102.26612091 -383.89144897]
[106.20574951 -369.36990356]
[107.32569122 -354.36514282]
[105.58545685 -339.41964722]
[101.04796600 -325.07363892]
[93.87723541 -311.84576416]
[84.33248901 -300.21414185]
[72.75875854 -290.59930420]
[59.57442856 -283.34878540]
[64.18843842 -269.07604980]
[68.80245209 -254.80331421]
[73.41645813 -240.53057861]
[78.03046417 -226.25785828]
[89.30754852 -216.52764893]
[86.19032288 -201.01657104]
[90.91046143 -186.77857971]
[95.73645782 -172.57612610]
[100.56245422 -158.37367249]
[102.73435211 -173.21560669]
[108.94734192 -186.86839294]
[118.71143341 -198.25534058]
[131.25659180 -206.47840881]
[145.59346008 -210.88909912]
[160.59136963 -211.13957214]
[175.06752014 -207.21006775]
[187.88026428 -199.41047668]
[198.01913452 -188.35591125]
[204.68453979 -174.91819763]
[207.35081482 -160.15705872]
[205.80769348 -145.23664856]
[200.17686462 -131.33363342]
[190.90238953 -119.54447174]
[178.71571350 -110.79891205]
[164.57792664 -105.78665161]
[149.60397339 -104.90298462]
[134.97477722 -108.21760559]
[121.84405518 -115.46910095]
[111.24736023 -126.08559418]
[104.01914215 -139.23306274]
[104.46575165 -124.23971558]
[104.91235352 -109.24636841]
[105.35896301 -94.25301361]
[105.80556488 -79.25966644]
[106.25217438 -64.26631927]
[118.92286682 -60.36157227]
[129.79248047 -52.72942734]
[137.79516602 -42.10112762]
[142.14091492 -29.50252342]
[142.39353943 -16.15508080]
[138.51443481 -3.35745382]
[130.86767578 7.64087915]
[120.18585205 15.76159382]
[107.50000000 20.20324135]
[107.50000000 35.20324326]
[107.50000000 50.20324326]
[107.50000000 65.20323944]
[107.50000000 80.20323944]
[117.46498108 88.03604889]
[121.16924286 100.15760040]
[117.28491974 112.22265625]
[107.20442200 119.90622711]
[106.98109436 134.90457153]
[115.38821411 144.68634033]
[114.89343262 157.17388916]
[106.30698395 165.69442749]
[105.86037445 180.68777466]
[117.96711731 190.21316528]
[122.09532166 204.86961365]
[116.86357880 218.97962952]
[104.47477722 227.20492554]
[104.02816772 242.19827271]
[103.58156586 257.19161987]
[103.13495636 272.18496704]
[105.61069489 276.78039551]
[106.03384399 281.40362549]
[104.73751831 285.26815796]
[102.31874084 287.83364868]
[101.20308685 302.79211426]
[100.08744049 317.75057983]
[98.97179413 332.70901489]
[97.85614014 347.66748047]
[96.74049377 362.62591553]
[95.62484741 377.58438110]
[94.50919342 392.54284668]
[93.39354706 407.50128174]
[92.27790070 422.45974731]
[91.16225433 437.41818237]
[105.88285828 440.40264893]
[120.11332703 445.20858765]
[133.62921143 451.76022339]
[146.21736145 459.95425415]
[157.67922974 469.66140747]
[167.83404541 480.72857666]
[176.52166748 492.98129272]
[183.60507202 506.22622681]
[188.97253418 520.25451660]
[192.53941345 534.84497070]
[194.24945068 549.76739502]
[194.07566833 564.78649902]
[192.02082825 579.66534424]
[188.11732483 594.16937256]
[182.42671204 608.06970215]
[175.03875732 621.14721680]
[166.06996155 633.19567871]
[155.66180420 644.02490234]
[143.97840881 653.46429443]
[131.20404053 661.36486816]
[117.54018402 667.60198975]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 189]
[28 188]
[29 187]
[30 186]
[31 185]
[32 184]
[33 183]
[34 182]
[35 181]
[36 180]
[37 179]
[38 175]
[39 174]
[40 173]
[41 172]
[45 168]
[46 167]
[48 164]
[49 163]
[52 159]
[53 158]
[54 157]
[55 156]
[56 155]
[63 146]
[64 145]
[65 144]
[66 143]
[67 142]
[68 141]
[69 120]
[70 119]
[71 118]
[73 117]
[75 115]
[76 114]
[77 113]
[78 112]
[79 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
