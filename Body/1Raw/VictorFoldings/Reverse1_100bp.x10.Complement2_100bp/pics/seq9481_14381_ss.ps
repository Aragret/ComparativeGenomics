%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[111.60076904 512.58587646]
[117.49846649 498.71817017]
[126.43579102 486.58471680]
[137.93077087 476.83987427]
[151.36349487 470.00915527]
[147.82382202 455.43276978]
[144.28414917 440.85638428]
[140.74447632 426.28002930]
[130.83004761 437.53631592]
[115.84129333 436.95568848]
[106.82736206 424.96612549]
[110.43299103 410.40594482]
[124.00024414 404.00830078]
[137.52680969 410.48806763]
[135.08108521 395.68881226]
[132.63536072 380.88952637]
[122.92643738 369.59411621]
[128.31010437 354.71707153]
[125.86437225 339.91781616]
[116.15544891 328.62240601]
[121.53910828 313.74536133]
[119.09338379 298.94607544]
[116.64765930 284.14682007]
[114.09181976 269.36614990]
[111.42602539 254.60493469]
[109.20268250 252.89762878]
[107.52165985 250.20677185]
[106.76097107 246.73448181]
[107.21854401 242.81591797]
[109.06841278 238.88755798]
[107.28594208 223.99385071]
[105.50347900 209.10012817]
[96.30860901 197.38246155]
[102.35119629 182.76065063]
[100.56872559 167.86692810]
[98.78626251 152.97320557]
[97.00379944 138.07949829]
[82.67196655 134.04063416]
[70.97330475 124.82893372]
[63.68555069 111.84423828]
[61.91614914 97.05968475]
[65.93398285 82.72193909]
[75.12849426 71.00977325]
[88.10248566 63.70297241]
[86.32002258 48.80925369]
[84.53755188 33.91553879]
[82.75508881 19.02182007]
[80.97262573 4.12810326]
[79.19015503 -10.76561356]
[67.04983521 -20.52524376]
[65.45433044 -35.65498352]
[74.83345795 -47.16877747]
[73.05099487 -62.06249619]
[71.26853180 -76.95621490]
[69.48606110 -91.84992981]
[67.70359802 -106.74364471]
[65.92112732 -121.63736725]
[64.13866425 -136.53108215]
[62.24537277 -151.41111755]
[60.24135971 -166.27664185]
[58.23734665 -181.14216614]
[56.23332977 -196.00770569]
[54.00821304 -210.84175110]
[51.56248856 -225.64102173]
[49.11676025 -240.44029236]
[45.57708740 -255.01666260]
[40.96307755 -269.28939819]
[36.34906769 -283.56213379]
[31.73505974 -297.83486938]
[27.12104988 -312.10760498]
[18.07128525 -300.14508057]
[3.08085799 -299.60928345]
[-6.79984856 -310.89520264]
[-4.28714418 -325.68325806]
[8.76669884 -333.07223511]
[22.73774147 -327.61648560]
[19.19806862 -342.19287109]
[15.65839672 -356.76922607]
[9.91701794 -342.91149902]
[-1.92360365 -333.70285034]
[-16.76835823 -331.55035400]
[-30.73686409 -337.01669312]
[-40.17778778 -348.67297363]
[-42.62329102 -363.47225952]
[-37.43412781 -377.54611206]
[-25.96673203 -387.21557617]
[-11.21865368 -389.95312500]
[2.95499396 -385.04318237]
[12.84885979 -373.76995850]
[3.46971393 -382.62402344]
[2.66266966 -395.09527588]
[10.31609535 -404.46286011]
[9.20044708 -419.42132568]
[8.08479881 -434.37976074]
[6.96914959 -449.33822632]
[-7.56079197 -453.72515869]
[-19.52240562 -463.06774902]
[-27.29798317 -476.10250854]
[-29.83594131 -491.06658936]
[-26.79304123 -505.93618774]
[-18.58081055 -518.70031738]
[-6.30988503 -527.63281250]
[8.36019230 -531.52551270]
[23.44541359 -529.85205078]
[36.90562820 -522.83868408]
[46.92045212 -511.43395996]
[52.13545990 -497.18026733]
[51.84536743 -482.00527954]
[46.08940887 -467.96130371]
[35.64602661 -456.94766235]
[21.92760277 -450.45385742]
[23.04325104 -435.49542236]
[24.15890121 -420.53695679]
[25.27454948 -405.57849121]
[35.92226410 -391.62884521]
[27.78904533 -375.10818481]
[30.23477173 -360.30889893]
[33.77444458 -345.73254395]
[37.31411743 -331.15615845]
[41.39378357 -316.72161865]
[46.00779343 -302.44888306]
[50.62180328 -288.17614746]
[55.23581314 -273.90341187]
[59.84981918 -259.63067627]
[64.54460907 -273.87704468]
[75.66752625 -283.94085693]
[90.31106567 -287.19149780]
[104.64744568 -282.77923584]
[114.92917633 -271.85742188]
[118.46862793 -257.28100586]
[114.34059906 -242.86019897]
[103.62415314 -232.36459351]
[89.12052917 -228.53770447]
[74.62095642 -232.37988281]
[63.91603088 -242.88601685]
[66.36175537 -228.08674622]
[68.80748749 -213.28747559]
[72.09938812 -209.82734680]
[73.25261688 -204.26254272]
[71.09886169 -198.01171875]
[73.10287476 -183.14617920]
[75.10688782 -168.28065491]
[77.11090088 -153.41513062]
[81.11985016 -147.20625305]
[79.03237915 -138.31355286]
[80.81484985 -123.41983032]
[82.59731293 -108.52611542]
[84.37978363 -93.63239288]
[86.16224670 -78.73867798]
[87.94470978 -63.84495926]
[89.72718048 -48.95124435]
[101.55843353 -39.97588730]
[103.57826996 -24.89693260]
[94.08386993 -12.54807949]
[95.86634064 2.34563732]
[97.64880371 17.23935509]
[99.43127441 32.13307190]
[101.21373749 47.02679062]
[102.99620056 61.92050552]
[117.32803345 65.95937347]
[129.02668762 75.17106628]
[136.31445312 88.15576172]
[138.08384705 102.94031525]
[134.06602478 117.27806091]
[124.87150574 128.99021912]
[111.89751434 136.29702759]
[113.67997742 151.19075012]
[115.46244812 166.08445740]
[117.24491119 180.97817993]
[126.56727600 193.76113892]
[120.39719391 207.31765747]
[122.17966461 222.21138000]
[123.96212769 237.10510254]
[126.18724823 251.93914795]
[128.85304260 266.70034790]
[133.45776367 274.58923340]
[131.44692993 281.70108032]
[133.89265442 296.50036621]
[136.33837891 311.29962158]
[146.22224426 323.65356445]
[140.66363525 337.47207642]
[143.10937500 352.27136230]
[152.99322510 364.62530518]
[147.43463135 378.44381714]
[149.88035583 393.24307251]
[152.32608032 408.04235840]
[155.32086182 422.74035645]
[158.86053467 437.31671143]
[162.40020752 451.89309692]
[165.93988037 466.46948242]
[181.00933838 466.37881470]
[195.69335938 469.76647949]
[209.20005798 476.44970703]
[220.80104065 486.06811523]
[229.87068176 498.10299683]
[235.91986084 511.90533447]
[238.62234497 526.73077393]
[237.83241272 541.77978516]
[233.59265137 556.24078369]
[226.13169861 569.33392334]
[215.85194397 580.35314941]
[203.30772400 588.70416260]
[189.17555237 593.93658447]
[174.21755981 595.76831055]
[159.24040222 594.10046387]
[145.05178833 589.02307129]
[132.41690063 580.80993652]
[122.01709747 569.90393066]
[114.41324615 556.89324951]
[110.01541138 542.47949219]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 190]
[6 189]
[7 188]
[8 187]
[14 186]
[15 185]
[16 184]
[18 182]
[19 181]
[21 179]
[22 178]
[23 177]
[24 175]
[25 174]
[30 173]
[31 172]
[32 171]
[34 169]
[35 168]
[36 167]
[37 166]
[44 159]
[45 158]
[46 157]
[47 156]
[48 155]
[49 154]
[52 151]
[53 150]
[54 149]
[55 148]
[56 147]
[57 146]
[58 145]
[59 143]
[60 142]
[61 141]
[62 140]
[63 137]
[64 136]
[65 135]
[66 124]
[67 123]
[68 122]
[69 121]
[70 120]
[76 119]
[77 118]
[78 117]
[89 116]
[92 114]
[93 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
