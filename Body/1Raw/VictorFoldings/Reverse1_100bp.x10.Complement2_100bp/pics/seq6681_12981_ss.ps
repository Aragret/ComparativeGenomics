%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[170.70211792 518.65722656]
[171.17083740 503.59973145]
[174.97891235 489.02416992]
[181.93533325 475.66171265]
[191.69117737 464.18252563]
[203.75709534 455.16247559]
[217.52784729 449.05395508]
[214.64257812 434.33407593]
[211.75730896 419.61416626]
[201.71638489 408.61285400]
[206.65470886 393.58209229]
[203.76943970 378.86221313]
[199.47531128 364.48999023]
[193.81253052 350.59997559]
[188.14973450 336.70993042]
[176.18020630 327.84542847]
[178.13513184 312.14547729]
[166.16558838 303.28097534]
[168.12051392 287.58102417]
[156.15097046 278.71652222]
[158.10589600 263.01657104]
[152.44309998 249.12652588]
[137.56556702 250.68734741]
[122.83615875 247.98997498]
[109.45012665 241.24461365]
[98.49615479 230.99028015]
[90.86782074 218.05178833]
[87.19071198 203.47335815]
[87.77111053 188.43435669]
[92.57052612 174.15393066]
[101.20810699 161.79211426]
[112.99084473 152.35563660]
[107.32805634 138.46560669]
[101.66527557 124.57558441]
[96.22923279 119.56845856]
[96.02327728 110.43635559]
[90.46405029 96.50455475]
[84.80126190 82.61452484]
[79.03523254 68.76704407]
[73.16626740 54.96286392]
[67.29730988 41.15868759]
[61.42834854 27.35451126]
[55.55938721 13.55033493]
[49.69042587 -0.25384235]
[44.16088104 13.68976212]
[31.02244377 20.92726898]
[16.28183365 18.14978600]
[6.67825747 6.62714100]
[6.60234213 -8.37266731]
[16.08879471 -19.99192810]
[30.80053520 -22.91847229]
[44.01279449 -15.81294632]
[39.61179733 -30.15279388]
[35.21080017 -44.49264145]
[23.76505089 -55.41534042]
[27.42765045 -69.85260773]
[25.00321579 -55.04983139]
[19.77533531 -40.99034119]
[11.93945408 -28.19976234]
[1.78852355 -17.15627480]
[-10.29795647 -8.27274990]
[-23.86812210 -1.88130438]
[-38.41464615 1.77911198]
[-53.39369583 2.57165241]
[-68.24526215 0.46668738]
[-82.41411591 -4.45708752]
[-95.37054443 -12.01559353]
[-106.63015747 -21.92625046]
[-115.77201080 -33.81854248]
[-122.45432281 -47.24786377]
[-126.42727661 -61.71215057]
[-127.54233551 -76.67064667]
[-125.75781250 -91.56411743]
[-121.14043427 -105.83576202]
[-113.86280823 -118.95201874]
[-104.19702911 -130.42253113]
[-92.50444794 -139.81846619]
[-79.22219849 -146.78854370]
[-64.84686279 -151.07218933]
[-49.91585922 -152.50924683]
[-34.98740005 -151.04600525]
[-20.61959457 -146.73715210]
[-7.34959412 -139.74380493]
[4.32649183 -130.32737732]
[13.97214508 -118.83993530]
[21.22675514 -105.71092987]
[25.81780624 -91.43717194]
[28.04292297 -106.27121735]
[30.26803970 -121.10526276]
[24.66347694 -135.90051270]
[34.20315170 -147.33921814]
[36.42826843 -162.17326355]
[37.43252945 -177.13960266]
[37.20920181 -192.13793945]
[36.98587418 -207.13627625]
[36.76254654 -222.13461304]
[28.82063866 -235.81805420]
[36.36759186 -248.65911865]
[36.14426422 -263.65747070]
[22.45883369 -270.51074219]
[13.53528976 -282.94573975]
[11.42419624 -298.10494995]
[16.61066818 -312.50491333]
[27.90289116 -322.83663940]
[42.70599365 -326.72595215]
[57.61833572 -323.27911377]
[69.21316528 -313.28817749]
[74.82608032 -299.04901123]
[73.16726685 -283.83367920]
[64.61791229 -271.13848877]
[51.14260101 -263.88079834]
[51.36592865 -248.88244629]
[59.29186249 -236.27177429]
[51.76088333 -222.35794067]
[51.98421097 -207.35960388]
[52.20753860 -192.36126709]
[52.43086624 -177.36293030]
[60.70340347 -189.87553406]
[73.79850006 -197.19116211]
[88.79067993 -197.67549133]
[102.33065033 -191.22032166]
[111.39354706 -179.26774597]
[113.95469666 -164.48802185]
[109.44193268 -150.18295288]
[98.86341095 -139.54833984]
[84.58241272 -134.95997620]
[69.78933716 -137.44291687]
[57.78900528 -146.44247437]
[51.26231384 -159.94813538]
[49.03719330 -145.11408997]
[54.80091476 -131.37988281]
[45.10208511 -118.88014221]
[42.87696457 -104.04610443]
[40.65184784 -89.21205902]
[41.76749802 -74.25360107]
[52.89845657 -64.35658264]
[49.55064774 -48.89363861]
[53.95164490 -34.55379105]
[58.35264206 -20.21394348]
[63.49460220 -6.12280321]
[69.36356354 7.68137360]
[75.23252106 21.48554993]
[81.10148621 35.28972626]
[86.97044373 49.09390259]
[92.83940887 62.89808273]
[98.34939575 67.82371521]
[98.69129181 76.95174408]
[104.35408020 90.84176636]
[110.07139587 96.52373505]
[109.99607086 104.98099518]
[115.55529785 118.91279602]
[121.21808624 132.80282593]
[126.88087463 146.69285583]
[141.90270996 145.20144653]
[156.72119141 148.00051880]
[170.13697815 154.85484314]
[181.06671143 165.20130920]
[188.63049316 178.19520569]
[192.22271729 192.77915955]
[191.56056213 207.76924133]
[186.70623779 221.95095825]
[178.06123352 234.17778015]
[166.33312988 243.46374512]
[171.99591064 257.35375977]
[184.37049866 267.21179199]
[182.01052856 281.91824341]
[194.38511658 291.77624512]
[192.02514648 306.48269653]
[204.39973450 316.34069824]
[202.03976440 331.04714966]
[207.70256042 344.93719482]
[213.36534119 358.82720947]
[215.81173706 344.02804565]
[223.99784851 331.45874023]
[236.54415894 323.23742676]
[251.33641052 320.74954224]
[265.88183594 324.41433716]
[277.72927856 333.61422729]
[284.88223267 346.79888916]
[286.13528442 361.74645996]
[281.27731323 375.93801880]
[271.12695312 386.98202515]
[257.39471436 393.01736450]
[242.39471436 393.02700806]
[228.65472412 387.00930786]
[218.48933411 375.97692871]
[221.37460327 390.69683838]
[231.62190247 402.75100708]
[226.47720337 416.72891235]
[229.36247253 431.44879150]
[232.24774170 446.16867065]
[247.30557251 446.62646484]
[261.88388062 450.42395020]
[275.25140381 457.37063599]
[286.73767090 467.11813354]
[295.76647949 479.17749023]
[301.88500977 492.94381714]
[304.78631592 507.72656250]
[304.32492065 522.78430176]
[300.52389526 537.36169434]
[293.57394409 550.72753906]
[283.82366943 562.21142578]
[271.76211548 571.23730469]
[257.99432373 577.35253906]
[243.21086121 580.25024414]
[228.15325928 579.78515625]
[213.57679749 575.98065186]
[200.21263123 569.02746582]
[188.73110962 559.27435303]
[179.70811462 547.21063232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 191]
[8 190]
[9 189]
[11 187]
[12 186]
[13 172]
[14 171]
[15 170]
[17 168]
[19 166]
[21 164]
[22 163]
[32 153]
[33 152]
[34 151]
[36 150]
[37 148]
[38 147]
[39 145]
[40 144]
[41 143]
[42 142]
[43 141]
[44 140]
[52 139]
[53 138]
[54 137]
[56 135]
[87 134]
[88 133]
[89 132]
[91 130]
[92 129]
[93 117]
[94 116]
[95 115]
[96 114]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
