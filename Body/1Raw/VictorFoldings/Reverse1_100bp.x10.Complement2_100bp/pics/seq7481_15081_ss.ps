%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[146.74562073 539.54595947]
[151.03839111 525.14855957]
[157.25167847 511.46978760]
[165.26976013 498.76449585]
[174.94323730 487.26937866]
[186.09191895 477.19860840]
[198.50810242 468.73974609]
[191.82791138 455.30938721]
[185.14772034 441.87899780]
[178.46751404 428.44863892]
[164.30937195 423.96728516]
[157.34338379 410.44213867]
[162.13981628 395.62216187]
[155.45962524 382.19177246]
[148.77943420 368.76141357]
[142.09922791 355.33102417]
[135.41903687 341.90066528]
[128.73884583 328.47027588]
[122.05864716 315.03991699]
[122.01441956 330.03985596]
[118.14074707 344.53103638]
[110.69455719 357.55233765]
[100.16973877 368.24008179]
[87.26435089 375.88540649]
[72.83437347 379.98123169]
[57.83688354 380.25585938]
[43.26662445 376.69110107]
[30.08997726 369.52340698]
[19.18090820 359.22814941]
[11.26297474 346.48822021]
[6.86134481 332.14855957]
[6.26796293 317.16027832]
[9.52218628 302.51754761]
[16.40817261 289.19149780]
[26.46920013 278.06607056]
[39.03796005 269.87908936]
[53.28080368 265.17364502]
[68.25305939 264.26177979]
[82.96167755 267.20401001]
[96.43107605 273.80514526]
[107.76789093 283.62741089]
[116.22249603 296.02386475]
[114.21848297 281.15835571]
[112.21446991 266.29281616]
[110.21045685 251.42729187]
[107.02303314 247.87069702]
[106.03600311 242.27401733]
[108.37491608 236.09008789]
[106.81439209 221.17147827]
[105.14285278 206.26490784]
[95.94797516 194.54724121]
[101.99057007 179.92541504]
[100.20809937 165.03170776]
[91.01322937 153.31404114]
[97.05581665 138.69221497]
[95.27335358 123.79850769]
[93.49088287 108.90478516]
[82.30910492 118.90318298]
[67.49555206 116.54553223]
[59.97021484 103.56980896]
[65.28050232 89.54123688]
[79.51186371 84.80115509]
[92.17258453 92.84236908]
[80.79177856 82.20681763]
[80.32598877 67.00032043]
[90.53549957 56.21599960]
[89.86571503 41.23096085]
[89.19593048 26.24592400]
[80.75818634 19.38202858]
[77.55683136 9.21681404]
[80.41854858 -0.82105976]
[88.16624451 -7.48335648]
[87.94291687 -22.48169327]
[87.71958923 -37.48003006]
[84.46276093 -46.01413345]
[87.60626221 -52.70294189]
[87.60626221 -67.70294189]
[84.47685242 -76.28458405]
[87.71958923 -82.92585754]
[87.94291687 -97.92419434]
[88.16624451 -112.92253113]
[88.38957214 -127.92086792]
[88.61290741 -142.91920471]
[88.05469513 -157.90881348]
[79.11705780 -170.96366882]
[85.68803406 -184.33047485]
[84.34980011 -199.27066040]
[83.01155853 -214.21084595]
[68.06301880 -216.00935364]
[53.81518936 -220.87692261]
[40.89093781 -228.60073853]
[29.85525513 -238.84317017]
[21.19057083 -251.15644836]
[15.27567101 -265.00231934]
[12.36912632 -279.77545166]
[12.59800148 -294.83004761]
[15.95228863 -309.50802612]
[22.28535461 -323.16766357]
[31.32034302 -335.21185303]
[42.66228485 -345.11407471]
[55.81535721 -352.44146729]
[70.20456696 -356.87365723]
[85.20088196 -358.21691895]
[100.14871979 -356.41250610]
[114.39462280 -351.53933716]
[127.31583405 -343.81045532]
[138.34748840 -333.56365967]
[147.00732422 -321.24697876]
[152.91677856 -307.39880371]
[155.81752014 -292.62451172]
[155.58271790 -277.57000732]
[152.22265625 -262.89337158]
[145.88421631 -249.23620605]
[136.84449768 -237.19557190]
[125.49865723 -227.29780579]
[112.34269714 -219.97561646]
[97.95174408 -215.54908752]
[99.28997803 -200.60890198]
[100.62821198 -185.66871643]
[109.47013092 -173.68247986]
[102.99488068 -159.24705505]
[112.54538727 -170.81372070]
[127.27307892 -173.65892029]
[140.44464111 -166.48188782]
[146.03822327 -152.56384277]
[141.49650574 -138.26794434]
[128.89590454 -130.13006592]
[113.99724579 -131.87075806]
[103.61124420 -142.69587708]
[103.38791656 -127.69754028]
[103.16458893 -112.69920349]
[102.94126129 -97.70086670]
[102.71793365 -82.70252991]
[102.60626221 -67.70294189]
[102.60626221 -52.70294189]
[102.71793365 -37.70335770]
[102.94126129 -22.70502090]
[103.16458893 -7.70668411]
[114.26860046 8.12328243]
[104.18096924 25.57613945]
[104.85075378 40.56117630]
[105.52053833 55.54621506]
[116.65146637 65.37667847]
[117.54419708 80.56410217]
[107.15762329 92.17258453]
[108.38460541 107.12232208]
[110.16706848 122.01603699]
[111.94953156 136.90975952]
[121.27190399 149.69271851]
[115.10182190 163.24923706]
[116.88428497 178.14295959]
[126.20664978 190.92591858]
[120.03656769 204.48243713]
[124.16356659 212.63140869]
[121.73299408 219.61096191]
[123.29351807 234.52955627]
[125.07598877 249.42327881]
[127.08000183 264.28881836]
[129.08401489 279.15432739]
[131.08802795 294.01986694]
[135.48902893 308.35971069]
[142.16921997 321.79010010]
[148.84941101 335.22045898]
[155.52960205 348.65084839]
[162.20980835 362.08120728]
[168.88999939 375.51159668]
[175.57019043 388.94195557]
[190.28282166 394.05825806]
[196.86616516 407.77374268]
[191.89790344 421.76843262]
[198.57809448 435.19882202]
[205.25828552 448.62918091]
[211.93847656 462.05957031]
[226.17541504 457.26129150]
[240.93312073 454.44638062]
[255.93669128 453.66726685]
[270.90658569 454.93847656]
[285.56393433 458.23629761]
[299.63571167 463.49929810]
[312.85971069 470.62945557]
[324.98962402 479.49395752]
[335.79946899 489.92761230]
[345.08782959 501.73605347]
[352.68173218 514.69934082]
[358.43966675 528.57592773]
[362.25436401 543.10736084]
[364.05477905 558.02282715]
[363.80734253 573.04461670]
[361.51669312 587.89270020]
[357.22549438 602.29058838]
[351.01367188 615.97003174]
[342.99697876 628.67620850]
[333.32473755 640.17236328]
[322.17715454 650.24432373]
[309.76187134 658.70452881]
[296.31021118 665.39532471]
[282.07275391 670.19201660]
[267.31472778 673.00537109]
[252.31109619 673.78283691]
[237.34133911 672.51000977]
[222.68434143 669.21063232]
[208.61314392 663.94610596]
[195.38990784 656.81451416]
[183.26095581 647.94866943]
[172.45225525 637.51385498]
[163.16514587 625.70440674]
[155.57266235 612.74029541]
[149.81623840 598.86309814]
[146.00311279 584.33123779]
[144.20431519 569.41558838]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 173]
[8 172]
[9 171]
[10 170]
[13 167]
[14 166]
[15 165]
[16 164]
[17 163]
[18 162]
[19 161]
[42 160]
[43 159]
[44 158]
[45 157]
[48 156]
[49 155]
[50 153]
[52 151]
[53 150]
[55 148]
[56 147]
[57 146]
[63 145]
[66 142]
[67 141]
[68 140]
[72 138]
[73 137]
[74 136]
[76 135]
[77 134]
[79 133]
[80 132]
[81 131]
[82 130]
[83 129]
[84 121]
[86 119]
[87 118]
[88 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
