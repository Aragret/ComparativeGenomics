%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCUUAUUACUACAUACGAAACAAAGACAACUCACACCCAAAUCAUUACCCCAAACACCCCAAAAGAAGAUUCGGAAGAGGAUAAAUACCCCCAAAUCAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[40.15580750 506.58615112]
[51.00459671 495.09356689]
[50.33481216 480.10852051]
[49.66502762 465.12350464]
[40.95267105 456.73175049]
[40.27202225 444.25296021]
[48.53257370 434.34707642]
[48.08596802 419.35372925]
[47.63936234 404.36038208]
[39.52655411 391.86911011]
[46.84954071 377.84469604]
[46.40293503 362.85134888]
[35.35534286 372.99780273]
[20.36366081 372.49841309]
[10.01579952 361.63925171]
[10.23948669 346.64089966]
[20.90658379 336.09515381]
[35.90649414 336.04306030]
[46.64620590 346.51358032]
[47.53902435 331.54019165]
[48.43183899 316.56677246]
[49.32465363 301.59338379]
[46.88087082 297.49008179]
[46.98880005 291.80807495]
[50.47352219 286.18951416]
[51.81175613 271.24932861]
[53.14999390 256.30914307]
[54.48822784 241.36894226]
[46.97511673 231.88845825]
[47.96775055 219.43058777]
[57.47768021 210.71714783]
[59.03820419 195.79853821]
[60.59872818 180.87994385]
[52.41495514 193.45077515]
[41.05862045 203.25045776]
[27.42533493 209.50613403]
[12.59027481 211.72445679]
[-2.27660465 209.73049927]
[-16.00284004 203.68148804]
[-27.50592232 194.05448914]
[-35.87866974 181.60873413]
[-40.46077728 167.32572937]
[-40.89087677 152.33189392]
[-37.13504410 137.80970764]
[-29.48949051 124.90445709]
[-18.55716896 114.63390350]
[-5.20024967 107.80801392]
[9.52788448 104.96511841]
[24.46571159 106.32941437]
[38.43517303 111.79331207]
[50.33457947 120.92590332]
[59.22549057 133.00694275]
[64.40673828 147.08369446]
[65.46945190 162.04943848]
[71.33841705 148.24526978]
[77.20737457 134.44108582]
[83.07633972 120.63690948]
[88.94529724 106.83273315]
[94.40065765 92.85993958]
[99.43756866 78.73090363]
[103.94519806 64.42421722]
[107.91729736 49.95969772]
[111.88939667 35.49517059]
[115.86148834 21.03064919]
[119.83358765 6.56612492]
[123.80567932 -7.89839935]
[127.77777863 -22.36292267]
[126.53111267 -26.52222443]
[126.65988922 -30.46531296]
[127.92724609 -33.78633881]
[129.98883057 -36.19807053]
[132.44084167 -37.55667114]
[118.03714752 -33.36937714]
[105.69537354 -41.89467621]
[104.51342773 -56.84803772]
[115.36259460 -67.20639801]
[130.24526978 -65.33396149]
[138.19030762 -52.61265945]
[144.05926514 -66.41683197]
[149.92823792 -80.22100830]
[155.79719543 -94.02518463]
[161.66615295 -107.82936859]
[159.94519043 -123.55669403]
[172.04539490 -132.24200439]
[177.91435242 -146.04617310]
[183.78330994 -159.85035706]
[189.65226746 -173.65452576]
[195.52122498 -187.45870972]
[200.76794434 -201.51118469]
[205.38195801 -215.78392029]
[209.99597168 -230.05664062]
[204.82881165 -241.87457275]
[208.96566772 -253.66737366]
[219.67414856 -259.29364014]
[224.50015259 -273.49609375]
[229.22029114 -287.73410034]
[233.83428955 -302.00683594]
[238.44830322 -316.27957153]
[243.06231689 -330.55230713]
[247.67631531 -344.82504272]
[234.49198914 -352.07553101]
[222.91825867 -361.69039917]
[213.37351990 -373.32199097]
[206.20278931 -386.54989624]
[201.66529846 -400.89587402]
[199.92506409 -415.84140015]
[201.04499817 -430.84613037]
[204.98463440 -445.36770630]
[211.60153198 -458.88113403]
[220.65650940 -470.89794922]
[231.82221985 -480.98376465]
[244.69505310 -488.77392578]
[258.80963135 -493.98687744]
[273.65576172 -496.43414307]
[288.69674683 -496.02728271]
[303.38885498 -492.78097534]
[317.20098877 -486.81259155]
[329.63381958 -478.33786011]
[340.23794556 -467.66317749]
[348.63003540 -455.17440796]
[354.50668335 -441.32299805]
[357.65548706 -426.60968018]
[357.96261597 -411.56634521]
[355.41693115 -396.73678589]
[350.11050415 -382.65707397]
[342.23513794 -369.83618164]
[332.07553101 -358.73760986]
[319.99893188 -349.76251221]
[306.44189453 -343.23538208]
[291.89453125 -339.39212036]
[276.88269043 -338.37170410]
[261.94906616 -340.21102905]
[257.33505249 -325.93829346]
[252.72103882 -311.66555786]
[248.10702515 -297.39282227]
[243.49301147 -283.12008667]
[244.42662048 -275.78863525]
[238.70260620 -268.67010498]
[233.87660217 -254.46765137]
[238.21746826 -237.46400452]
[224.26870728 -225.44264221]
[219.65469360 -211.16990662]
[215.04067993 -196.89717102]
[228.85392761 -202.74476624]
[242.80741882 -197.24024963]
[248.90798950 -183.53684998]
[243.66093445 -169.48449707]
[230.07200623 -163.13302612]
[215.92556763 -168.12083435]
[209.32540894 -181.58975220]
[203.45645142 -167.78556824]
[197.58747864 -153.98139954]
[191.71852112 -140.17721558]
[185.84956360 -126.37303925]
[187.99031067 -111.63307953]
[175.47032166 -101.96040344]
[169.60136414 -88.15622711]
[163.73240662 -74.35205078]
[157.86344910 -60.54787445]
[151.99449158 -46.74369812]
[146.64329529 -32.73067474]
[142.24229431 -18.39082718]
[138.27020264 -3.92630291]
[134.29811096 10.53822136]
[130.32601929 25.00274467]
[126.35391998 39.46726990]
[122.38182068 53.93179321]
[118.40972137 68.39631653]
[132.53865051 63.35912323]
[145.36598206 71.13471222]
[147.43586731 85.99121094]
[137.22247314 96.97695923]
[122.25474548 95.99367523]
[113.56660461 83.76782227]
[108.52968597 97.89685059]
[109.59792328 100.75138855]
[109.65112305 104.05770111]
[108.51995087 107.44058228]
[106.17606354 110.46753693]
[102.74947357 112.70169830]
[96.88051605 126.50587463]
[91.01155090 140.31004333]
[85.14259338 154.11422729]
[79.27363586 167.91839600]
[75.51733398 182.44046021]
[73.95681000 197.35906982]
[72.39628601 212.27766418]
[80.28263092 228.91758728]
[69.42841339 242.70718384]
[68.09017944 257.64736938]
[66.75194550 272.58755493]
[65.41371155 287.52774048]
[64.29805756 302.48620605]
[63.40524292 317.45959473]
[62.51242828 332.43301392]
[61.61961365 347.40640259]
[61.39628601 362.40475464]
[61.84289169 377.39810181]
[69.98764038 390.96179199]
[62.63271332 403.91378784]
[63.07931900 418.90713501]
[63.52592468 433.90048218]
[73.56468201 449.33761597]
[64.65006256 464.45370483]
[65.31985474 479.43875122]
[65.98963928 494.42379761]
[77.82048035 504.90264893]
[78.69306946 520.68286133]
[68.08969879 532.40222168]
[52.30117798 533.10791016]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 206]
[3 205]
[4 204]
[7 202]
[8 201]
[9 200]
[11 198]
[12 197]
[19 196]
[20 195]
[21 194]
[22 193]
[25 192]
[26 191]
[27 190]
[28 189]
[31 187]
[32 186]
[33 185]
[54 184]
[55 183]
[56 182]
[57 181]
[58 180]
[59 175]
[60 174]
[61 168]
[62 167]
[63 166]
[64 165]
[65 164]
[66 163]
[67 162]
[72 161]
[78 160]
[79 159]
[80 158]
[81 157]
[82 156]
[84 154]
[85 153]
[86 152]
[87 151]
[88 150]
[89 143]
[90 142]
[91 141]
[94 139]
[95 138]
[96 136]
[97 135]
[98 134]
[99 133]
[100 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
