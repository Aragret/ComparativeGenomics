%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[11.17589378 633.37377930]
[-1.75071621 641.11010742]
[-16.07488060 645.77551270]
[-31.07810783 647.13598633]
[-46.00783920 645.12329102]
[-60.11520767 639.83843994]
[-72.69259644 631.54644775]
[-83.10912323 620.66326904]
[-90.84230042 607.73480225]
[-95.50423431 593.40948486]
[-96.86109161 578.40594482]
[-94.84480286 563.47668457]
[-89.55651093 549.37060547]
[-81.26147461 536.79522705]
[-70.37576294 526.38134766]
[-57.44540787 518.65130615]
[-43.11898422 513.99279785]
[-28.11509895 512.63958740]
[-26.11108589 497.77407837]
[-24.10707092 482.90853882]
[-30.07463264 469.26165771]
[-20.56298065 456.61892700]
[-18.55896759 441.75338745]
[-16.55495262 426.88784790]
[-14.55093956 412.02233887]
[-12.54692650 397.15679932]
[-21.75359535 385.50463867]
[-19.93300629 370.40032959]
[-7.64872408 360.82254028]
[-5.64471054 345.95700073]
[-3.64069676 331.09149170]
[-12.35461044 343.30081177]
[-24.37744141 352.27029419]
[-38.56325150 357.14498901]
[-53.55993652 357.46032715]
[-67.93811035 353.18618774]
[-80.32733917 344.73001099]
[-89.54675293 332.89776611]
[-94.71762085 318.81719971]
[-95.34709167 303.83041382]
[-91.37516785 289.36584473]
[-83.18041992 276.80215454]
[-71.54392242 267.33685303]
[-57.57480240 261.87210083]
[-42.60449219 260.92874146]
[-28.05987740 264.59674072]
[-15.32725239 272.52645874]
[-5.62021065 283.96206665]
[0.13603327 297.81362915]
[1.39275086 312.76202393]
[7.26171160 298.95782471]
[5.12096500 284.21786499]
[17.64094734 274.54519653]
[23.50990868 260.74102783]
[29.37886810 246.93684387]
[35.24782944 233.13267517]
[41.11679077 219.32849121]
[30.59962082 208.73045349]
[24.92589760 194.87570190]
[24.98902130 179.86367798]
[30.81051636 165.98211670]
[41.53199387 155.35838318]
[55.54158783 149.63349915]
[70.71623993 149.70866394]
[76.58519745 135.90449524]
[82.45416260 122.10031128]
[88.32312012 108.29613495]
[86.81798553 94.39555359]
[97.87270355 85.83489990]
[103.74166107 72.03072357]
[109.61062622 58.22654724]
[114.64753723 44.09751892]
[118.83454895 29.69373703]
[123.02156067 15.28995514]
[127.20857239 0.88617265]
[122.40500641 -16.89042091]
[135.53712463 -28.53148651]
[139.50921631 -42.99600983]
[143.48132324 -57.46053314]
[147.45341492 -71.92505646]
[139.48815918 -82.78642273]
[139.23641968 -96.05846405]
[146.56608582 -106.89164734]
[158.61564636 -111.45649719]
[162.80265808 -125.86027527]
[166.98966980 -140.26405334]
[163.41200256 -155.67544556]
[174.39437866 -165.73709106]
[178.58139038 -180.14086914]
[182.76840210 -194.54466248]
[186.74049377 -209.00918579]
[190.49679565 -223.53123474]
[194.25309753 -238.05329895]
[198.00939941 -252.57536316]
[184.20251465 -258.51425171]
[171.46408081 -266.49127197]
[160.09269714 -276.31939697]
[150.35490417 -287.76821899]
[142.47900391 -300.56942749]
[136.64958191 -314.42288208]
[133.00332642 -329.00387573]
[131.62568665 -343.97058105]
[132.54896545 -358.97216797]
[135.75151062 -373.65701294]
[141.15826416 -387.68081665]
[148.64247131 -400.71490479]
[158.02870178 -412.45367432]
[169.09690857 -422.62200928]
[181.58766174 -430.98153687]
[195.20816040 -437.33627319]
[209.63909912 -441.53729248]
[224.54220581 -443.48605347]
[239.56813049 -443.13693237]
[254.36465454 -440.49810791]
[268.58489990 -435.63140869]
[281.89556885 -428.65093994]
[293.98458862 -419.72033691]
[304.56860352 -409.04891968]
[313.39950562 -396.88687134]
[320.27029419 -383.51925659]
[325.01989746 -369.25946045]
[327.53695679 -354.44174194]
[327.76251221 -339.41345215]
[325.69125366 -324.52685547]
[321.37173462 -310.13095093]
[314.90518188 -296.56320190]
[306.44323730 -284.14160156]
[296.18423462 -273.15737915]
[284.36868286 -263.86798096]
[271.27349854 -256.49121094]
[257.20568848 -251.19996643]
[242.49502563 -248.11828613]
[227.48634338 -247.31838989]
[212.53146362 -248.81906128]
[208.77516174 -234.29699707]
[205.01885986 -219.77494812]
[201.26255798 -205.25288391]
[202.87142944 -200.75614929]
[201.67257690 -195.20100403]
[197.17218018 -190.35765076]
[192.98516846 -175.95387268]
[188.79815674 -161.55007935]
[192.67530823 -147.16894531]
[181.39344788 -136.07704163]
[177.20643616 -121.67326355]
[173.01942444 -107.26948547]
[181.74163818 -92.89027405]
[177.27754211 -76.32565308]
[161.91793823 -67.95296478]
[157.94584656 -53.48843765]
[153.97373962 -39.02391434]
[150.00164795 -24.55939102]
[155.71028137 -13.89458752]
[152.51945496 -1.81144655]
[141.61235046 5.07318401]
[137.42533875 19.47696495]
[133.23832703 33.88074875]
[129.05131531 48.28453064]
[141.68551636 40.19891357]
[156.66575623 40.96855164]
[168.40478516 50.30638504]
[172.52424622 64.72962952]
[167.48765564 78.85877991]
[155.17356873 87.42401123]
[140.17481995 87.23069763]
[128.08555603 78.35094452]
[123.41480255 64.09551239]
[117.54583740 77.89968872]
[111.67687988 91.70386505]
[113.18201447 105.60444641]
[102.12729645 114.16510010]
[96.25833893 127.96927643]
[90.38937378 141.77345276]
[84.52041626 155.57762146]
[95.10309601 166.45339966]
[100.70056152 180.51438904]
[100.48878479 195.60639954]
[94.53115845 209.43008423]
[83.76413727 219.89126587]
[69.85015106 225.41813660]
[54.92096710 225.19744873]
[49.05200577 239.00163269]
[43.18304443 252.80580139]
[37.31408310 266.60998535]
[31.44512367 280.41415405]
[33.16608429 296.14147949]
[21.06588936 304.82678223]
[15.19692802 318.63098145]
[11.22483158 333.09548950]
[9.22081757 347.96102905]
[7.21680403 362.82656860]
[16.52629471 375.31539917]
[14.28217411 390.36260986]
[2.31860209 399.16082764]
[0.31458843 414.02633667]
[-1.68942523 428.89187622]
[-3.69343901 443.75741577]
[-5.69745255 458.62292480]
[0.12676893 473.33309937]
[-9.24154282 484.91256714]
[-11.24555683 499.77807617]
[-13.24957085 514.64361572]
[0.86035752 519.92163086]
[13.44176006 528.20751953]
[23.86355782 539.08569336]
[31.60300064 552.01043701]
[36.27187729 566.33343506]
[37.63600540 581.33636475]
[35.62695312 596.26654053]
[30.34549713 610.37524414]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 202]
[19 201]
[20 200]
[22 198]
[23 197]
[24 196]
[25 195]
[26 194]
[29 191]
[30 190]
[31 189]
[50 188]
[51 187]
[53 185]
[54 184]
[55 183]
[56 182]
[57 181]
[64 174]
[65 173]
[66 172]
[67 171]
[69 169]
[70 168]
[71 167]
[72 158]
[73 157]
[74 156]
[75 155]
[77 152]
[78 151]
[79 150]
[80 149]
[84 146]
[85 145]
[86 144]
[88 142]
[89 141]
[90 140]
[91 137]
[92 136]
[93 135]
[94 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
