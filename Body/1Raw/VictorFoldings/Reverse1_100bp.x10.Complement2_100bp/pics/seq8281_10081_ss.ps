%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[136.96981812 667.31890869]
[129.05909729 654.49829102]
[124.20004272 640.23864746]
[122.63641357 625.25518799]
[124.44662476 610.29956055]
[129.53988647 596.12188721]
[137.66070557 583.43334961]
[148.40177917 572.87030029]
[161.22430420 564.96270752]
[175.48512268 560.10711670]
[173.92459106 545.18847656]
[172.36407471 530.26989746]
[170.80354309 515.35125732]
[169.24302673 500.43267822]
[167.68249512 485.51406860]
[165.67848206 470.64855957]
[163.23275757 455.84927368]
[160.78703308 441.05001831]
[158.34130859 426.25073242]
[146.12107849 417.81262207]
[143.42994690 402.83889771]
[152.36346436 390.07839966]
[149.91773987 375.27914429]
[147.47201538 360.47985840]
[145.02629089 345.68060303]
[127.46842957 335.21575928]
[123.28501129 314.90826416]
[135.62207031 297.87979126]
[132.29980469 283.25234985]
[128.97755432 268.62487793]
[118.61352539 257.92739868]
[123.10214233 242.75627136]
[119.77988434 228.12881470]
[116.45762634 213.50135803]
[111.91073608 207.67489624]
[113.19651031 198.63142395]
[110.09239960 183.95611572]
[106.98828888 169.28080750]
[94.40347290 161.39677429]
[91.04640961 146.55815125]
[99.40123749 133.41149902]
[96.29712677 118.73619843]
[84.21060181 110.74481964]
[81.21212769 96.56894684]
[89.02757263 84.36791229]
[85.92346191 69.69261169]
[82.81935120 55.01731110]
[72.39372253 43.11702728]
[77.32974243 29.06409264]
[64.70731354 15.65679359]
[70.79358673 -0.80298114]
[67.47132874 -15.43044090]
[64.14906311 -30.05790138]
[59.19668198 -37.73329926]
[60.88795090 -44.92783737]
[57.78384018 -59.60314178]
[54.67972946 -74.27844238]
[50.29537582 -59.93349838]
[41.32453537 -47.91168594]
[28.82109261 -39.62531281]
[14.25394535 -36.04785156]
[-0.66557574 -37.59958649]
[-14.18474007 -44.09821701]
[-24.71533012 -54.78028870]
[-31.02022362 -68.39088440]
[-32.35872269 -83.33104706]
[-28.57358932 -97.84561920]
[-20.10949326 -110.22943878]
[-7.96078777 -119.02767181]
[6.44530869 -123.20671844]
[21.41638184 -122.27561188]
[35.19364548 -116.34375000]
[46.15856171 -106.10799408]
[53.02344894 -92.76934052]
[53.47005463 -107.76269531]
[53.91666031 -122.75604248]
[54.36326599 -137.74938965]
[54.80987167 -152.74273682]
[42.26863480 -144.51368713]
[27.96870613 -149.04270935]
[22.45146370 -162.99119568]
[29.78401184 -176.07682800]
[44.56106949 -178.65336609]
[55.88887787 -168.82299805]
[57.44940186 -183.74160767]
[59.00992203 -198.66021729]
[51.12357330 -215.30014038]
[61.97779846 -229.08972168]
[63.31603241 -244.02990723]
[64.65426636 -258.97009277]
[65.99250031 -273.91027832]
[58.33620071 -284.29025269]
[59.75839233 -296.70642090]
[68.95478821 -304.56472778]
[70.51531219 -319.48333740]
[72.07583618 -334.40191650]
[73.63636017 -349.32052612]
[75.19688416 -364.23913574]
[76.75740814 -379.15774536]
[62.84873962 -385.07723999]
[51.30387115 -394.83465576]
[43.14936447 -407.56240845]
[39.11030960 -422.12872314]
[39.54585648 -437.23837280]
[44.41728210 -451.54782104]
[53.29141998 -463.78469849]
[65.37918091 -472.86090088]
[79.60574341 -477.96939087]
[94.70607758 -478.65588379]
[109.33747864 -474.85937500]
[122.19892883 -466.91741943]
[132.14680481 -455.53625488]
[138.29653931 -441.72784424]
[140.10130310 -426.72003174]
[137.40061951 -411.84732056]
[130.43463135 -398.43215942]
[119.82276154 -387.66741943]
[106.50859070 -380.51031494]
[91.67601013 -377.59722900]
[90.11548615 -362.67861938]
[88.55496216 -347.76000977]
[86.99443817 -332.84140015]
[85.43392181 -317.92279053]
[83.87339783 -303.00421143]
[91.87248230 -287.38427734]
[80.93268585 -272.57205200]
[79.59445190 -257.63186646]
[78.25621796 -242.69168091]
[76.91798401 -227.75149536]
[84.43109131 -218.27099609]
[83.43846130 -205.81312561]
[73.92852783 -197.09968567]
[72.36800385 -182.18109131]
[70.80747986 -167.26248169]
[69.80322266 -152.29614258]
[69.35661316 -137.30279541]
[68.91001129 -122.30944061]
[68.46340179 -107.31608582]
[68.01679993 -92.32273865]
[69.35503387 -77.38255310]
[72.45914459 -62.70725250]
[75.56325531 -48.03194809]
[78.77652740 -33.38016129]
[82.09878540 -18.75270081]
[85.42104340 -4.12524080]
[95.48609161 2.58455992]
[98.37363434 14.74374866]
[92.00504303 25.95998192]
[102.20864868 36.81059265]
[97.49465179 51.91320038]
[100.59876251 66.58850098]
[103.70287323 81.26380157]
[115.78939819 89.25518036]
[118.78787231 103.43105316]
[110.97242737 115.63208771]
[114.07653809 130.30738831]
[127.03916168 138.94499207]
[129.97811890 153.87205505]
[121.66358948 166.17669678]
[124.76770020 180.85200500]
[127.87181091 195.52731323]
[131.08508301 210.17909241]
[134.40734863 224.80654907]
[137.72959900 239.43402100]
[148.33125305 251.17776489]
[143.60501099 265.30261230]
[146.92726135 279.93008423]
[150.24952698 294.55755615]
[159.60398865 297.13131714]
[167.33215332 302.90069580]
[172.39759827 311.03936768]
[174.14030457 320.40704346]
[172.36230469 329.70913696]
[167.34928894 337.67572021]
[159.82556152 343.23486328]
[162.27128601 358.03414917]
[164.71701050 372.83340454]
[167.16273499 387.63269043]
[179.72674561 396.84048462]
[181.99623108 411.88388062]
[173.14057922 423.80499268]
[175.58630371 438.60427856]
[178.03202820 453.40353394]
[180.47775269 468.20281982]
[183.35063171 471.45867920]
[184.88381958 475.09375000]
[185.12260437 478.64035034]
[184.25950623 481.69351196]
[182.60110474 483.95355225]
[184.16163635 498.87216187]
[185.72215271 513.79077148]
[187.28266907 528.70935059]
[188.84320068 543.62799072]
[190.40371704 558.54656982]
[205.36067200 560.34588623]
[219.54203796 565.42889404]
[232.23651123 573.54046631]
[242.80732727 584.27386475]
[250.72427368 597.09063721]
[255.59024048 611.34790039]
[257.16113281 626.33056641]
[255.35816956 641.28704834]
[250.27177429 655.46722412]
[242.15708923 668.15972900]
[231.42115784 678.72796631]
[218.60246277 686.64178467]
[204.34399414 691.50427246]
[189.36096191 693.07153320]
[174.40489197 691.26495361]
[160.22598267 686.17510986]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 194]
[11 193]
[12 192]
[13 191]
[14 190]
[15 189]
[16 184]
[17 183]
[18 182]
[19 181]
[22 178]
[23 177]
[24 176]
[25 175]
[28 168]
[29 167]
[30 166]
[32 164]
[33 163]
[34 162]
[36 161]
[37 160]
[38 159]
[41 156]
[42 155]
[45 152]
[46 151]
[47 150]
[49 148]
[51 145]
[52 144]
[53 143]
[55 142]
[56 141]
[57 140]
[74 139]
[75 138]
[76 137]
[77 136]
[78 135]
[84 134]
[85 133]
[86 132]
[88 129]
[89 128]
[90 127]
[91 126]
[94 124]
[95 123]
[96 122]
[97 121]
[98 120]
[99 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
