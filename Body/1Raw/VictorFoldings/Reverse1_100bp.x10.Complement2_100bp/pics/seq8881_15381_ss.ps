%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[63.04020691 656.79235840]
[49.72412872 663.72491455]
[35.78395081 669.29718018]
[21.35822296 673.45373535]
[6.59031582 676.15332031]
[-8.37299538 677.36901855]
[-23.38299561 677.08874512]
[-38.29050446 675.31536865]
[-52.94735718 672.06652832]
[-67.20788574 667.37438965]
[-80.93036652 661.28570557]
[-93.97840118 653.86090088]
[-106.22232056 645.17388916]
[-117.54042816 635.31085205]
[-127.82024384 624.36993408]
[-136.95959473 612.45977783]
[-144.86764526 599.69885254]
[-151.46580505 586.21392822]
[-156.68849182 572.13909912]
[-160.48381042 557.61413574]
[-162.81401062 542.78344727]
[-163.65597534 527.79449463]
[-163.00131226 512.79614258]
[-160.85652161 497.93753052]
[-157.24293518 483.36630249]
[-152.19645691 469.22729492]
[-145.76725769 455.66101074]
[-138.01921082 442.80230713]
[-129.02934265 430.77896118]
[-118.88698578 419.71047974]
[-107.69295502 409.70684814]
[-95.55850220 400.86752319]
[-82.60422516 393.28033447]
[-68.95887756 387.02072144]
[-54.75806427 382.15084839]
[-40.14293289 378.71914673]
[-25.25873947 376.75970459]
[-10.25341225 376.29202271]
[4.72391701 377.32073975]
[19.52439117 379.83560181]
[23.49648666 365.37106323]
[27.36079216 350.87738037]
[31.11709404 336.35531616]
[26.81348801 322.09600830]
[37.76009750 310.67312622]
[41.51639938 296.15106201]
[45.27269745 281.62899780]
[49.02899933 267.10693359]
[36.67752457 258.69702148]
[27.93221283 246.54595947]
[23.86422920 232.10899353]
[24.98313332 217.12335205]
[31.17312622 203.39913940]
[41.70471191 192.60070801]
[55.32061386 186.04486084]
[70.38584900 184.54020691]
[74.14215088 170.01814270]
[66.38535309 157.35450745]
[69.98790741 142.57356262]
[83.32328796 134.52339172]
[87.07958984 120.00133514]
[90.83588409 105.47927094]
[93.06100464 90.64522552]
[93.73078918 75.66018677]
[94.40057373 60.67515182]
[95.07035828 45.69011307]
[95.74014282 30.70507431]
[96.18675232 15.71172333]
[96.41007996 0.71338600]
[96.63340759 -14.28495121]
[96.85673523 -29.28328896]
[97.08006287 -44.28162766]
[88.67294312 -54.06340408]
[89.16772461 -66.55095673]
[97.75417328 -75.07147980]
[98.20078278 -90.06483459]
[98.64738464 -105.05818176]
[99.09399414 -120.05153656]
[91.19012451 -127.52398682]
[88.75370026 -137.89915466]
[92.35407257 -147.69638062]
[100.57582855 -153.76397705]
[101.46864319 -168.73738098]
[102.36145782 -183.71078491]
[92.14888000 -195.47262573]
[93.26762390 -210.64506531]
[104.54367828 -220.30873108]
[105.43649292 -235.28213501]
[106.32930756 -250.25553894]
[107.22212219 -265.22894287]
[108.11494446 -280.20236206]
[105.50223541 -286.27566528]
[106.23838043 -291.91085815]
[109.26380920 -295.60623169]
[110.60204315 -310.54641724]
[111.94027710 -325.48660278]
[97.68057251 -330.37783813]
[85.00616455 -338.54010010]
[74.65392303 -349.49887085]
[67.22571564 -362.61700439]
[63.15340424 -377.13180542]
[62.67375183 -392.19943237]
[65.81464386 -406.94387817]
[72.39347076 -420.50787354]
[82.02775574 -432.10287476]
[94.15736389 -441.05474854]
[108.07710266 -446.84304810]
[122.97769165 -449.13122559]
[137.99284363 -447.78628540]
[152.24957275 -442.88638306]
[164.91903687 -434.71643066]
[175.26463318 -423.75140381]
[182.68489075 -410.62878418]
[186.74839783 -396.11148071]
[187.21891785 -381.04357910]
[184.06907654 -366.30105591]
[177.48202515 -352.74102783]
[167.84071350 -341.15188599]
[155.70568848 -332.20736694]
[141.78244019 -326.42752075]
[126.88046265 -324.14834595]
[125.54222870 -309.20816040]
[124.20399475 -294.26797485]
[123.08834839 -279.30953979]
[122.19553375 -264.33612061]
[121.30271912 -249.36271667]
[120.40989685 -234.38931274]
[119.51708221 -219.41590881]
[129.56489563 -208.48078918]
[128.87275696 -193.28289795]
[117.33486938 -182.81797791]
[116.44204712 -167.84455872]
[115.54923248 -152.87115479]
[125.44511414 -136.25915527]
[114.08734131 -119.60492706]
[113.64073944 -104.61157990]
[113.19412994 -89.61822510]
[112.74752808 -74.62487793]
[121.88620758 -59.64317703]
[112.07839966 -44.05830002]
[111.85507202 -29.05996132]
[111.63174438 -14.06162357]
[111.40841675 0.93671376]
[111.18508911 15.93505096]
[113.80965424 19.92512512]
[113.95555115 25.60629845]
[110.72518158 31.37485886]
[110.05539703 46.35989761]
[109.38561249 61.34493637]
[108.71582794 76.32997131]
[108.04604340 91.31501007]
[116.23471832 78.74737549]
[128.56590271 70.20677185]
[143.21034241 66.96015167]
[157.99560547 69.48913574]
[170.72840881 77.41856384]
[179.51989746 89.57214355]
[183.06591797 104.14698029]
[180.84043884 118.98096466]
[173.17359924 131.87358093]
[161.20271301 140.91227722]
[146.70359802 144.75621033]
[131.82713318 142.83517456]
[118.78011322 135.43411255]
[109.49802399 123.65096283]
[105.35794830 109.23557281]
[101.60164642 123.75762939]
[97.84534454 138.27969360]
[105.60481262 151.78630066]
[101.58851624 166.46022034]
[88.66420746 173.77444458]
[84.90790558 188.29650879]
[97.35408020 196.91731262]
[106.08345032 209.25303650]
[110.05820465 223.80368042]
[108.81722260 238.80801392]
[102.52952576 252.45669556]
[91.97151947 263.11047363]
[78.43121338 269.49713135]
[63.55105972 270.86322021]
[59.79475784 285.38528442]
[56.03845596 299.90734863]
[52.28215790 314.42941284]
[56.31708527 329.72744751]
[45.63915253 340.11163330]
[41.88285065 354.63366699]
[42.76353455 363.72555542]
[37.96100998 369.34317017]
[33.98891449 383.80767822]
[47.99805832 389.20422363]
[61.40026093 395.96881104]
[74.06231689 404.03421021]
[85.85838318 413.32031250]
[96.67121887 423.73477173]
[106.39336395 435.17410278]
[114.92819214 447.52462769]
[122.19087982 460.66357422]
[128.10923767 474.46038818]
[132.62445068 488.77789307]
[135.69165039 503.47384644]
[137.28033447 518.40216064]
[137.37472534 533.41448975]
[135.97387695 548.36163330]
[133.09172058 563.09497070]
[128.75691223 577.46813965]
[123.01250458 591.33825684]
[115.91561127 604.56750488]
[107.53676605 617.02435303]
[97.95922852 628.58508301]
[87.27820587 639.13464355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 189]
[41 188]
[42 186]
[43 185]
[45 183]
[46 182]
[47 181]
[48 180]
[56 172]
[57 171]
[60 168]
[61 167]
[62 166]
[63 151]
[64 150]
[65 149]
[66 148]
[67 147]
[68 144]
[69 143]
[70 142]
[71 141]
[72 140]
[75 138]
[76 137]
[77 136]
[78 135]
[82 133]
[83 132]
[84 131]
[87 128]
[88 127]
[89 126]
[90 125]
[91 124]
[94 123]
[95 122]
[96 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
