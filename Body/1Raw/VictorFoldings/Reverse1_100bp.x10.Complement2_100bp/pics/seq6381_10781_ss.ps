%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[48.26811981 506.66009521]
[44.04041290 521.09039307]
[37.43462372 534.59863281]
[28.64082146 546.79602051]
[17.91201591 557.33172607]
[5.55689716 565.90252686]
[-8.06905270 572.26190186]
[-22.57378769 576.22686768]
[-37.53997803 577.68328857]
[-52.53701782 576.58923340]
[-67.13340759 572.97631836]
[-80.90918732 566.94836426]
[-93.46799469 558.67889404]
[-104.44849396 548.40582275]
[-113.53474426 536.42462158]
[-120.46532440 523.08020020]
[-125.04082489 508.75631714]
[-127.12960052 493.86520386]
[-126.67155457 478.83529663]
[-123.67985535 464.09902954]
[-118.24059296 450.08038330]
[-110.51026154 437.18270874]
[-100.71128082 425.77709961]
[-89.12557983 416.19171143]
[-76.08650970 408.70236206]
[-61.96922684 403.52447510]
[-47.17991257 400.80709839]
[-32.14408493 400.62838745]
[-17.29435730 402.99346924]
[-12.46835995 388.79098511]
[-7.64236259 374.58853149]
[-2.81636477 360.38607788]
[2.00963283 346.18362427]
[6.83563042 331.98117065]
[-5.45373631 324.98504639]
[-16.24141121 315.83511353]
[-25.15458679 304.84548950]
[-31.88485527 292.39395142]
[-36.19887924 278.90887451]
[-37.94646835 264.85452271]
[-37.06583405 250.71502686]
[-33.58574677 236.97782898]
[-27.62461281 224.11674500]
[-19.38643837 212.57566833]
[-9.15385723 202.75328064]
[2.72157168 194.98922729]
[15.83144188 189.55241394]
[29.72454262 186.63165283]
[43.92238998 186.32919312]
[57.93571091 188.65699768]
[63.18243027 174.60452271]
[68.42914581 160.55204773]
[67.82383728 153.18623352]
[73.86000824 146.33039856]
[79.31536102 132.35758972]
[84.77072144 118.38479614]
[76.88905334 105.98462677]
[77.76160431 91.31752777]
[87.05785370 79.93927765]
[101.25647736 76.15984344]
[106.71183777 62.18704987]
[112.16719818 48.21425247]
[117.62255096 34.24145126]
[114.42409515 16.10719299]
[128.54240417 5.68413830]
[133.78912354 -8.36833286]
[139.03584290 -22.42080498]
[144.28256226 -36.47327423]
[149.52928162 -50.52574539]
[154.77600098 -64.57821655]
[160.02272034 -78.63069153]
[165.26943970 -92.68315887]
[170.51615906 -106.73563385]
[175.76287842 -120.78810120]
[180.69445801 -134.95423889]
[185.30847168 -149.22697449]
[189.92248535 -163.49971008]
[194.53649902 -177.77244568]
[189.36933899 -189.59036255]
[193.50619507 -201.38316345]
[204.21467590 -207.00944519]
[209.04067993 -221.21189880]
[213.86666870 -235.41435242]
[218.69267273 -249.61680603]
[205.00257874 -255.77520752]
[191.95986938 -263.20706177]
[179.68266296 -271.84509277]
[168.28216553 -281.61102295]
[157.86161804 -292.41641235]
[148.51538086 -304.16345215]
[140.32809448 -316.74569702]
[133.37393188 -330.04925537]
[127.71585083 -343.95358276]
[123.40509033 -358.33282471]
[120.48070526 -373.05670166]
[118.96916962 -387.99188232]
[118.88417816 -403.00314331]
[120.22649384 -417.95449829]
[122.98397064 -432.71054077]
[127.13162231 -447.13766479]
[132.63189697 -461.10519409]
[139.43498230 -474.48663330]
[147.47924805 -487.16079712]
[156.69187927 -499.01287842]
[166.98941040 -509.93560791]
[178.27859497 -519.83001709]
[190.45718384 -528.60650635]
[203.41490173 -536.18554688]
[217.03439331 -542.49859619]
[231.19230652 -547.48840332]
[245.76042175 -551.10980225]
[260.60681152 -553.33001709]
[275.59704590 -554.12890625]
[290.59530640 -553.49926758]
[305.46582031 -551.44677734]
[320.07388306 -547.98999023]
[334.28723145 -543.16033936]
[347.97708130 -537.00140381]
[361.01953125 -529.56909180]
[373.29641724 -520.93060303]
[384.69656372 -511.16427612]
[395.11672974 -500.35848999]
[404.46252441 -488.61114502]
[412.64935303 -476.02856445]
[419.60302734 -462.72476196]
[425.26058960 -448.82022095]
[429.57083130 -434.44082642]
[432.49468994 -419.71685791]
[434.00567627 -404.78158569]
[434.09011841 -389.77035522]
[432.74725342 -374.81906128]
[429.98925781 -360.06307983]
[425.84106445 -345.63613892]
[420.34027100 -331.66879272]
[413.53671265 -318.28762817]
[405.49197388 -305.61373901]
[396.27893066 -293.76199341]
[385.98098755 -282.83963013]
[374.69143677 -272.94564819]
[362.51254272 -264.16961670]
[349.55453491 -256.59103394]
[335.93481445 -250.27848816]
[321.77673340 -245.28919983]
[307.20846558 -241.66831970]
[292.36199951 -239.44865417]
[277.37176514 -238.65029907]
[262.37350464 -239.28050232]
[247.50306702 -241.33354187]
[232.89512634 -244.79081726]
[228.06912231 -230.58836365]
[223.24313354 -216.38589478]
[218.41712952 -202.18344116]
[222.75799561 -185.17980957]
[208.80921936 -173.15843201]
[204.19522095 -158.88569641]
[199.58120728 -144.61296082]
[194.96719360 -130.34022522]
[196.23846436 -127.05142975]
[195.97993469 -122.98347473]
[193.84274292 -118.86210632]
[189.81533813 -115.54138184]
[184.56861877 -101.48891449]
[179.32189941 -87.43643951]
[174.07519531 -73.38397217]
[168.82847595 -59.33150101]
[163.58175659 -45.27902985]
[158.33503723 -31.22655678]
[153.08831787 -17.17408562]
[147.84159851 -3.12161469]
[142.59487915 10.93085670]
[147.32928467 22.06243134]
[143.07316589 33.81271744]
[131.59535217 39.69681168]
[126.13999176 53.66960907]
[120.68463898 67.64240265]
[115.22927856 81.61520386]
[123.11094666 94.01537323]
[122.23839569 108.68247223]
[112.94214630 120.06072235]
[98.74352264 123.84015656]
[93.28816223 137.81295776]
[87.83280182 151.78575134]
[82.48162079 165.79876709]
[77.23490143 179.85124207]
[71.98818207 193.90371704]
[85.45191956 202.36822510]
[96.87117767 213.42927551]
[105.75424957 226.60740662]
[111.71927643 241.33212280]
[114.51068878 256.96646118]
[114.01012421 272.83468628]
[110.24146271 288.25140381]
[103.36969757 302.55114746]
[93.69371796 315.11718750]
[81.63329315 325.40811157]
[67.71086884 332.98107910]
[52.52894974 337.51092529]
[36.74400330 338.80416870]
[21.03808594 336.80715942]
[16.21208954 351.00964355]
[11.38609123 365.21209717]
[6.56009340 379.41455078]
[1.73409557 393.61700439]
[-3.09190202 407.81945801]
[10.12450218 414.99124146]
[21.93865585 424.29360962]
[32.01064301 435.45886230]
[40.05067062 448.16580200]
[45.82741547 462.04876709]
[49.17466354 476.70837402]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 204]
[30 203]
[31 202]
[32 201]
[33 200]
[34 199]
[50 185]
[51 184]
[52 183]
[54 182]
[55 181]
[56 180]
[60 176]
[61 175]
[62 174]
[63 173]
[65 170]
[66 169]
[67 168]
[68 167]
[69 166]
[70 165]
[71 164]
[72 163]
[73 162]
[74 161]
[75 157]
[76 156]
[77 155]
[78 154]
[81 152]
[82 151]
[83 150]
[84 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
