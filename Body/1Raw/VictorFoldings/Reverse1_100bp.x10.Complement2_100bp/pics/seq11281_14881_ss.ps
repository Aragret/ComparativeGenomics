%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[53.24534988 680.50268555]
[39.27939606 686.00341797]
[24.87657928 690.23016357]
[10.15286064 693.14874268]
[-4.77320957 694.73577881]
[-19.78145218 694.97845459]
[-34.75102997 693.87481689]
[-49.56140900 691.43371582]
[-64.09334564 687.67486572]
[-78.22984314 682.62854004]
[-91.85706329 676.33526611]
[-104.86529541 668.84582520]
[-117.14981079 660.22045898]
[-128.61167908 650.52862549]
[-139.15864563 639.84832764]
[-148.70574951 628.26562500]
[-157.17616272 615.87377930]
[-164.50164795 602.77252197]
[-170.62326050 589.06732178]
[-175.49168396 574.86853027]
[-179.06773376 560.29052734]
[-181.32260132 545.45068359]
[-182.23815918 530.46844482]
[-181.80700684 515.46441650]
[-180.03262329 500.55944824]
[-176.92930603 485.87353516]
[-172.52203369 471.52496338]
[-166.84629822 457.62918091]
[-159.94779968 444.29812622]
[-151.88206482 431.63912964]
[-142.71405029 419.75411987]
[-132.51756287 408.73876953]
[-121.37471008 398.68179321]
[-109.37520599 389.66412354]
[-96.61566925 381.75839233]
[-83.19882202 375.02828979]
[-69.23270416 369.52795410]
[-54.82975388 365.30166626]
[-40.10594940 362.38348389]
[-25.17983055 360.79690552]
[-10.17157936 360.55468750]
[4.79796267 361.65881348]
[19.60826874 364.10034180]
[23.36457062 349.57827759]
[27.12087059 335.05621338]
[30.66054344 320.47982788]
[33.98280334 305.85238647]
[37.30506134 291.22491455]
[32.57881165 277.10006714]
[43.18046570 265.35632324]
[46.50272369 250.72885132]
[49.82498550 236.10139465]
[48.44689560 233.66027832]
[47.95272827 230.52621460]
[48.61126328 227.03311157]
[50.56554794 223.60597229]
[53.80496216 220.71458435]
[57.99197388 206.31080627]
[56.51769638 201.76815796]
[57.88142395 196.25115967]
[62.52402115 191.54396057]
[67.13803101 177.27122498]
[71.75203705 162.99848938]
[76.36605072 148.72575378]
[80.98005676 134.45301819]
[71.33821106 126.96795654]
[64.45362091 116.88857269]
[60.98859787 105.18450928]
[61.27646255 92.98169708]
[65.28953552 81.45404816]
[72.64174652 71.71051788]
[82.62582397 64.68843079]
[94.28129578 61.06331635]
[106.48690796 61.18391037]
[111.73362732 47.13143921]
[116.98034668 33.07896805]
[122.22705841 19.02649689]
[127.47377777 4.97402525]
[132.72050476 -9.07844543]
[137.86245728 -23.16958618]
[142.89936829 -37.29861450]
[147.93629456 -51.42764664]
[152.97320557 -65.55667877]
[157.37420654 -79.89652252]
[161.13050842 -94.41857910]
[164.88681030 -108.94064331]
[168.64311218 -123.46269989]
[172.39941406 -137.98475647]
[176.15570068 -152.50682068]
[179.91200256 -167.02888489]
[183.66830444 -181.55093384]
[187.42460632 -196.07299805]
[191.18090820 -210.59506226]
[193.95652771 -225.33601379]
[195.73898315 -240.22973633]
[197.52145386 -255.12345886]
[199.30392456 -270.01718140]
[200.97546387 -284.92373657]
[202.53598022 -299.84234619]
[188.62731934 -305.76184082]
[177.08244324 -315.51925659]
[168.92793274 -328.24700928]
[164.88888550 -342.81332397]
[165.32443237 -357.92297363]
[170.19586182 -372.23245239]
[179.06999207 -384.46932983]
[191.15776062 -393.54550171]
[205.38432312 -398.65399170]
[220.48464966 -399.34048462]
[235.11605835 -395.54397583]
[247.97750854 -387.60202026]
[257.92538452 -376.22085571]
[264.07510376 -362.41244507]
[265.87988281 -347.40463257]
[263.17919922 -332.53192139]
[256.21322632 -319.11676025]
[245.60133362 -308.35202026]
[232.28717041 -301.19491577]
[217.45458984 -298.28182983]
[215.89405823 -283.36322021]
[218.32463074 -276.38366699]
[214.19763184 -268.23471069]
[212.41517639 -253.34098816]
[210.63270569 -238.44726562]
[208.85023499 -223.55355835]
[219.49757385 -234.11926270]
[234.14434814 -237.35534668]
[248.25207520 -232.25907898]
[257.44934082 -220.40959167]
[258.88626099 -205.47857666]
[252.11759949 -192.09257507]
[239.24069214 -184.39936829]
[224.24559021 -184.78280640]
[211.77870178 -193.12405396]
[205.70297241 -206.83876038]
[201.94667053 -192.31669617]
[198.19036865 -177.79463196]
[194.43406677 -163.27258301]
[190.67776489 -148.75051880]
[186.92146301 -134.22845459]
[183.16516113 -119.70639801]
[179.40885925 -105.18434143]
[175.65255737 -90.66227722]
[171.89627075 -76.14022064]
[185.33695984 -82.79962921]
[199.59335327 -78.13539124]
[206.49874878 -64.81940460]
[202.09741211 -50.47966003]
[188.91062927 -43.33062363]
[174.49238586 -47.46758270]
[167.10223389 -60.51976013]
[162.06532288 -46.39072800]
[157.02839661 -32.26169968]
[151.99148560 -18.13267136]
[152.70639038 -10.77667332]
[146.77296448 -3.83172774]
[141.52624512 10.22074318]
[136.27954102 24.27321434]
[131.03282166 38.32568741]
[125.78609467 52.37815857]
[120.53937531 66.43062592]
[133.14372253 78.78060150]
[139.08427429 95.39688873]
[137.16665649 112.93865967]
[127.77640533 127.87902069]
[112.80152130 137.21411133]
[95.25279236 139.06703186]
[90.63878632 153.33976746]
[86.02477264 167.61250305]
[81.41076660 181.88522339]
[76.79675293 196.15795898]
[72.39575958 210.49780273]
[68.20874786 224.90159607]
[64.45244598 239.42364502]
[61.13018417 254.05111694]
[57.80792618 268.67855835]
[62.29654694 283.84970093]
[51.93252182 294.54718018]
[48.61026382 309.17465210]
[45.28800201 323.80209351]
[46.87549591 330.22015381]
[45.23040009 335.65988159]
[41.64292908 338.81253052]
[37.88662720 353.33456421]
[34.13032913 367.85662842]
[48.26697540 372.90258789]
[61.89439011 379.19540405]
[74.90285492 386.68447876]
[87.18762970 395.30947876]
[98.64980316 405.00094604]
[109.19708252 415.68090820]
[118.74454498 427.26330566]
[127.21533203 439.65490723]
[134.54122925 452.75595093]
[140.66325378 466.46096802]
[145.53210449 480.65957642]
[149.10859680 495.23745728]
[151.36392212 510.07727051]
[152.27993774 525.05950928]
[151.84924316 540.06353760]
[150.07531738 554.96850586]
[146.97245789 569.65454102]
[142.56562805 584.00323486]
[136.89030457 597.89916992]
[129.99220276 611.23046875]
[121.92686462 623.88970947]
[112.75920868 635.77502441]
[102.56306458 646.79064941]
[91.42051697 656.84802246]
[79.42128754 665.86602783]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 185]
[44 184]
[45 183]
[46 180]
[47 179]
[48 178]
[50 176]
[51 175]
[52 174]
[57 173]
[58 172]
[61 171]
[62 170]
[63 169]
[64 168]
[65 167]
[74 161]
[75 160]
[76 159]
[77 158]
[78 157]
[79 156]
[80 154]
[81 153]
[82 152]
[83 151]
[84 144]
[85 143]
[86 142]
[87 141]
[88 140]
[89 139]
[90 138]
[91 137]
[92 136]
[93 135]
[94 125]
[95 124]
[96 123]
[97 122]
[98 120]
[99 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
