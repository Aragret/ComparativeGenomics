%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAG\
) } def
/len { sequence length } bind def

/coor [
[83.67924500 563.29162598]
[70.60350037 570.73620605]
[56.35506821 575.57135010]
[41.44903183 577.62231445]
[26.42422676 576.81500244]
[11.82379627 573.17852783]
[-1.82446635 566.84436035]
[-14.02718449 558.04156494]
[-24.34323692 547.08819580]
[-32.39970398 534.38031006]
[-37.90535355 520.37731934]
[-40.66115570 505.58535767]
[-40.56748962 490.53918457]
[-37.62774277 475.78268433]
[-31.94818878 461.84930420]
[-23.73413467 449.24270630]
[-13.28251457 438.41867065]
[-0.97114855 429.76840210]
[12.75491524 423.60467529]
[27.39948845 420.15026855]
[42.43317795 419.53002930]
[44.65829468 404.69598389]
[46.88341141 389.86196899]
[41.11969376 376.12774658]
[50.81852341 363.62799072]
[53.04364014 348.79394531]
[47.27992249 335.05975342]
[56.97875214 322.55999756]
[59.20386887 307.72595215]
[61.42898560 292.89190674]
[55.66526794 279.15771484]
[65.36409760 266.65795898]
[67.58921814 251.82392883]
[69.81433105 236.98988342]
[60.78216553 225.20193481]
[62.82743454 210.12641907]
[75.25295258 200.73257446]
[77.47807312 185.89852905]
[79.70318604 171.06448364]
[81.81781006 156.21429443]
[83.82182312 141.34875488]
[85.82584381 126.48323059]
[75.43770599 137.30389404]
[61.05882645 141.57563782]
[46.44779968 138.18182373]
[35.42391586 128.00961304]
[30.86879158 113.71797943]
[33.97312164 99.04272461]
[43.92544937 87.81992340]
[58.12425232 82.98319244]
[72.85800171 85.79684448]
[84.27532959 95.52539062]
[89.39169312 109.62493134]
[86.24539948 96.00170135]
[96.20452118 86.18805695]
[92.62686157 70.77667236]
[103.60923767 60.71502304]
[107.79624939 46.31124115]
[111.98326111 31.90745926]
[116.17027283 17.50367737]
[120.35727692 3.09989500]
[113.00339508 -10.63175297]
[117.45481110 -25.17959023]
[130.59115601 -32.10577011]
[134.77816772 -46.50955200]
[125.44253540 -58.76321030]
[125.11612701 -73.98644257]
[133.71459961 -86.33675385]
[147.76844788 -91.19756317]
[151.95545959 -105.60134888]
[156.14247131 -120.00512695]
[160.32948303 -134.40890503]
[164.51649475 -148.81269836]
[168.70350647 -163.21647644]
[172.89051819 -177.62025452]
[174.45103455 -192.53886414]
[173.22406006 -207.48858643]
[171.88583374 -222.42877197]
[170.54759216 -237.36895752]
[167.92483521 -240.82946777]
[166.66625977 -244.56852722]
[166.69192505 -248.12306213]
[167.77970886 -251.10354614]
[169.60160828 -253.23399353]
[169.15501404 -268.22735596]
[168.59680176 -283.21694946]
[167.92701721 -298.20199585]
[167.25723267 -313.18704224]
[166.58744812 -328.17208862]
[165.91766357 -343.15710449]
[165.24787903 -358.14215088]
[150.44238281 -360.95184326]
[136.68418884 -367.10070801]
[124.71523285 -376.25717163]
[115.18099976 -387.92742920]
[108.59565735 -401.48214722]
[105.31433868 -416.19027710]
[105.51400757 -431.25869751]
[109.18389130 -445.87472534]
[116.12608337 -459.25018311]
[125.96619415 -470.66372681]
[138.17356873 -479.49984741]
[152.08985901 -485.28201294]
[166.96459961 -487.69839478]
[181.99559021 -486.61871338]
[196.37225342 -482.10113525]
[209.31925964 -474.38934326]
[220.13839722 -463.89923096]
[228.24621582 -451.19644165]
[233.20544434 -436.96609497]
[234.74864197 -421.97561646]
[232.79261780 -407.03335571]
[227.44282532 -392.94519043]
[218.98777771 -380.47085571]
[207.88345337 -370.28308105]
[194.72869873 -362.93130493]
[180.23291016 -358.81195068]
[180.90269470 -343.82690430]
[181.57247925 -328.84185791]
[182.24226379 -313.85681152]
[182.91204834 -298.87179565]
[183.58183289 -283.88674927]
[187.02087402 -277.34497070]
[184.14836121 -268.67395020]
[184.59497070 -253.68060303]
[185.48777771 -238.70719910]
[186.82601929 -223.76701355]
[188.16424561 -208.82682800]
[191.89196777 -202.44514465]
[189.40950012 -193.65451050]
[195.04689026 -207.55485535]
[203.80709839 -219.73101807]
[215.19468689 -229.49435425]
[228.56564331 -236.29270935]
[243.16375732 -239.74159241]
[258.16345215 -239.64598083]
[272.71643066 -236.01124573]
[285.99960327 -229.04296875]
[297.26181030 -219.13523865]
[305.86605835 -206.84838867]
[311.32577515 -192.87728882]
[313.33215332 -178.01208496]
[311.77175903 -163.09347534]
[306.73281860 -148.96516418]
[298.50033569 -136.42617798]
[287.53985596 -126.18568420]
[274.47125244 -118.82280731]
[260.03366089 -114.75395966]
[245.04354858 -114.20925140]
[230.34869385 -117.21949768]
[216.78018188 -123.61444855]
[205.10536194 -133.03244019]
[195.98449707 -144.94082642]
[189.93342590 -158.66615295]
[187.29429626 -173.43324280]
[183.10728455 -159.02946472]
[178.92027283 -144.62568665]
[174.73326111 -130.22189331]
[170.54624939 -115.81811523]
[166.35923767 -101.41433716]
[162.17222595 -87.01055145]
[171.43026733 -75.37325287]
[172.06809998 -60.33805466]
[163.63171387 -47.66205978]
[149.18194580 -42.32254028]
[144.99493408 -27.91876030]
[152.37124634 -15.02978802]
[148.33021545 -0.36265966]
[134.76106262 7.28690624]
[130.57405090 21.69068909]
[126.38703918 36.09447098]
[122.20002747 50.49825287]
[118.01301575 64.90203094]
[121.89015961 79.28316498]
[110.60830688 90.37506866]
[113.75460052 103.99829865]
[103.79547882 113.81194305]
[100.69136810 128.48724365]
[98.68735504 143.35276794]
[96.68334198 158.21830750]
[98.63818359 167.14109802]
[94.53723145 173.28959656]
[92.31211853 188.12364197]
[90.08699799 202.95768738]
[99.20951843 215.58375549]
[96.74161530 230.59588623]
[84.64837646 239.21499634]
[82.42325592 254.04904175]
[80.19814301 268.88308716]
[85.80270386 283.67834473]
[76.26303101 295.11703491]
[74.03791046 309.95108032]
[71.81279755 324.78512573]
[77.41735840 339.58038330]
[67.87768555 351.01907349]
[65.65256500 365.85311890]
[71.25713348 380.64837646]
[61.71745682 392.08706665]
[59.49234009 406.92111206]
[57.26721954 421.75515747]
[71.45730591 426.75897217]
[84.44384003 434.35806274]
[95.75737762 444.27777100]
[104.98893738 456.15945435]
[111.80480194 469.57363892]
[115.95858765 484.03540039]
[117.30013275 499.02197266]
[115.78094482 513.99157715]
[111.45593262 528.40301514]
[104.48146057 541.73547363]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 200]
[22 199]
[23 198]
[25 196]
[26 195]
[28 193]
[29 192]
[30 191]
[32 189]
[33 188]
[34 187]
[37 184]
[38 183]
[39 182]
[40 180]
[41 179]
[42 178]
[53 177]
[55 175]
[57 173]
[58 172]
[59 171]
[60 170]
[61 169]
[64 166]
[65 165]
[69 161]
[70 160]
[71 159]
[72 158]
[73 157]
[74 156]
[75 155]
[76 130]
[77 128]
[78 127]
[79 126]
[84 125]
[85 124]
[86 122]
[87 121]
[88 120]
[89 119]
[90 118]
[91 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
