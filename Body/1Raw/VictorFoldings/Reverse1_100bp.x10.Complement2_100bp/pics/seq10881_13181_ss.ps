%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[122.47611237 587.86212158]
[114.32616425 575.08111572]
[111.04211426 560.28277588]
[113.02052307 545.25408936]
[120.02249146 531.80981445]
[131.20249939 521.57348633]
[145.21049500 515.78106689]
[144.54071045 500.79605103]
[143.87092590 485.81100464]
[143.20114136 470.82595825]
[142.53135681 455.84091187]
[134.40084839 449.65158081]
[130.94673157 439.80184937]
[133.53736877 429.46411133]
[141.55160522 422.11016846]
[141.32827759 407.11181641]
[141.10494995 392.11346436]
[140.88162231 377.11514282]
[140.65829468 362.11679077]
[139.65403748 347.15045166]
[137.87156677 332.25674438]
[136.08911133 317.36303711]
[133.97132874 315.52642822]
[132.45344543 312.74026489]
[131.90077209 309.22885132]
[132.59077454 305.34448242]
[134.67118835 301.53320312]
[133.77836609 286.55978394]
[132.88554382 271.58636475]
[131.99273682 256.61297607]
[121.25348663 249.49272156]
[116.50522614 237.30517578]
[119.69026184 224.41851807]
[129.86331177 215.59107971]
[129.19352722 200.60604858]
[126.08941650 185.93074036]
[120.63406372 171.95794678]
[115.17870331 157.98515320]
[109.72334290 144.01234436]
[104.16412354 130.08055115]
[98.50133514 116.19052124]
[88.05809784 111.03494263]
[83.74172211 100.21781921]
[87.76675415 89.28894043]
[82.31140137 75.31613922]
[76.85604095 61.34334564]
[70.81987000 54.48751068]
[71.42517853 47.12168503]
[66.17846680 33.06921387]
[54.10287857 22.84713936]
[56.89966202 8.21746922]
[51.65294266 -5.83500242]
[39.22423553 -5.74967623]
[27.39198303 -9.47404861]
[17.29280090 -16.63463211]
[9.89199352 -26.52862167]
[5.89129972 -38.19284439]
[5.66236925 -50.49752426]
[9.21228886 -62.25570297]
[16.18434334 -72.33773041]
[25.89380836 -79.77982330]
[21.27979851 -94.05255127]
[10.17256069 -100.60938263]
[6.62337542 -112.59217072]
[12.01195145 -123.42221069]
[7.61095333 -137.76205444]
[3.20995545 -152.10189819]
[-1.19104266 -166.44175720]
[-5.59204054 -180.78160095]
[-9.99303913 -195.12144470]
[-17.95939827 -182.41172791]
[-32.54814529 -178.92340088]
[-45.40218735 -186.65473938]
[-49.15813828 -201.17687988]
[-41.66442490 -214.17089844]
[-27.21378326 -218.19320679]
[-14.08479500 -210.94039917]
[-17.18890572 -225.61569214]
[-27.43408012 -214.65957642]
[-42.39890671 -215.68623352]
[-51.05186844 -227.93882751]
[-47.01432800 -242.38522339]
[-33.26260376 -248.37606812]
[-19.93496323 -241.49644470]
[-21.93897629 -256.36196899]
[-31.45063019 -269.00473022]
[-25.48306656 -282.65161133]
[-27.48708153 -297.51712036]
[-29.49109459 -312.38265991]
[-31.49510765 -327.24819946]
[-46.44724274 -329.33056641]
[-60.28263855 -335.37078857]
[-71.97460938 -344.92068481]
[-80.65554047 -357.27154541]
[-85.68125153 -371.50689697]
[-86.67879486 -386.57034302]
[-83.57414246 -401.34408569]
[-76.59769440 -414.73184204]
[-66.26713562 -425.74011230]
[-53.34906769 -433.55203247]
[-38.80210114 -437.58789062]
[-23.70570946 -437.54824829]
[-9.18015003 -433.43597412]
[3.69668484 -425.55627441]
[13.96924877 -414.49386597]
[20.87524986 -401.06964111]
[23.90221596 -386.27978516]
[22.82552719 -371.22177124]
[17.72508049 -357.01303101]
[8.97936344 -344.70794678]
[-2.76263523 -335.21963501]
[-16.62957954 -329.25219727]
[-14.62556648 -314.38668823]
[-12.62155247 -299.52114868]
[-10.61753941 -284.65560913]
[-1.24922693 -273.07614136]
[-7.07344866 -258.36599731]
[-5.06943464 -243.50045776]
[-2.51360250 -228.71980286]
[0.59050763 -214.04450989]
[4.34680843 -199.52244568]
[8.74780655 -185.18260193]
[13.14880466 -170.84274292]
[17.54980278 -156.50289917]
[21.95079994 -142.16305542]
[26.35179901 -127.82320404]
[39.82469177 -116.57829285]
[35.55253220 -98.66656494]
[40.16654205 -84.39382935]
[57.77500916 -82.64518738]
[72.88885498 -73.34110260]
[82.43719482 -58.31753922]
[84.45620728 -40.57799530]
[78.49283600 -23.69305420]
[65.70541382 -11.08172035]
[70.95213318 2.97075081]
[82.65244293 12.18769646]
[80.23093414 27.82249451]
[85.47765350 41.87496567]
[90.82884216 55.88798904]
[96.28419495 69.86078644]
[101.73955536 83.83358002]
[115.10182190 93.97389984]
[112.39135742 110.52774048]
[118.05414581 124.41776276]
[124.19171906 131.18296814]
[123.69614410 138.55699158]
[129.15150452 152.52978516]
[134.60685730 166.50259399]
[140.06221008 180.47538757]
[141.44450378 165.53921509]
[146.59556580 151.45140076]
[155.17376709 139.14633179]
[166.61012268 129.44018555]
[180.14613342 122.97669983]
[194.88398743 120.18460083]
[209.84616089 121.24906921]
[224.04029846 126.09950256]
[236.52491760 134.41418457]
[246.47200012 145.64164734]
[253.22175598 159.03720093]
[256.32650757 173.71235657]
[255.58033752 188.69378662]
[251.03273010 202.98782349]
[242.98530579 215.64637756]
[231.97183228 225.82986450]
[218.72279358 232.86285400]
[204.11694336 236.27885437]
[189.12304688 235.85131836]
[174.73556519 231.60859680]
[161.90881348 223.83207703]
[151.49349976 213.03756714]
[144.17855835 199.93626404]
[144.84835815 214.92129517]
[157.97206116 226.48794556]
[158.65649414 243.62989807]
[146.96614075 255.72015381]
[147.85896301 270.69357300]
[148.75177002 285.66696167]
[149.64459229 300.64038086]
[150.98281860 315.58056641]
[152.76528931 330.47427368]
[154.54776001 345.36798096]
[163.74964905 333.52209473]
[178.38609314 330.23965454]
[191.76550293 337.02136230]
[197.77099609 350.76666260]
[193.65693665 365.19146729]
[181.30421448 373.70089722]
[166.36033630 372.40457153]
[155.65663147 361.89346313]
[155.87995911 376.89181519]
[156.10328674 391.89013672]
[156.32661438 406.88848877]
[156.54994202 421.88684082]
[167.65850830 438.70831299]
[157.51638794 455.17114258]
[158.18617249 470.15618896]
[158.85595703 485.14120483]
[159.52574158 500.12625122]
[160.19552612 515.11126709]
[174.66444397 519.63085938]
[186.71310425 528.82897949]
[194.88659668 541.59497070]
[198.19790649 556.38720703]
[196.24719238 571.41949463]
[189.27001953 584.87664795]
[178.10890198 595.13360596]
[164.11160278 600.95184326]
[148.96835327 601.62866211]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 201]
[8 200]
[9 199]
[10 198]
[11 197]
[15 195]
[16 194]
[17 193]
[18 192]
[19 191]
[20 183]
[21 182]
[22 181]
[27 180]
[28 179]
[29 178]
[30 177]
[34 174]
[35 173]
[36 150]
[37 149]
[38 148]
[39 147]
[40 145]
[41 144]
[44 142]
[45 141]
[46 140]
[48 139]
[49 138]
[51 136]
[52 135]
[61 129]
[62 128]
[65 126]
[66 125]
[67 124]
[68 123]
[69 122]
[70 121]
[77 120]
[78 119]
[84 118]
[85 117]
[87 115]
[88 114]
[89 113]
[90 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
