%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[78.67563629 645.12487793]
[65.15676880 638.56298828]
[52.73742676 630.10266113]
[41.68233871 619.92407227]
[32.22714233 608.24432373]
[24.57337379 595.31225586]
[18.88417435 581.40362549]
[15.28080940 566.81481934]
[13.84008598 551.85681152]
[14.59271240 536.84838867]
[17.52264786 522.10955811]
[22.56743813 507.95443726]
[29.61955452 494.68469238]
[38.52868271 482.58325195]
[49.10491943 471.90798950]
[61.12283707 462.88647461]
[74.32626343 455.71102905]
[88.43378448 450.53454590]
[103.14467621 447.46740723]
[102.25186157 432.49398804]
[101.35904694 417.52059937]
[100.46623230 402.54718018]
[91.98510742 390.30300903]
[98.88729095 376.06677246]
[97.77163696 361.10830688]
[96.43340302 346.16812134]
[95.09516907 331.22793579]
[93.75693512 316.28775024]
[87.52645111 329.93258667]
[76.83863831 340.45733643]
[63.09964752 346.47732544]
[48.11708832 347.20050049]
[33.86217880 342.53173828]
[22.21038628 333.08526611]
[14.69471359 320.10394287]
[12.30397224 305.29568481]
[15.35270691 290.60879517]
[23.43980408 277.97552490]
[35.50126648 269.05807495]
[49.95019913 265.02963257]
[64.88560486 266.42022705]
[78.34246063 273.04693604]
[88.55030060 284.03784180]
[94.16657257 297.94924927]
[96.17058563 283.08374023]
[98.17459869 268.21820068]
[100.17861176 253.35267639]
[100.73682404 238.36306763]
[99.84400940 223.38966370]
[98.95118713 208.41624451]
[98.05837250 193.44284058]
[89.57725525 181.19866943]
[96.47943115 166.96243286]
[87.99830627 154.71826172]
[94.90048981 140.48202515]
[94.00767517 125.50861359]
[93.11486053 110.53520966]
[91.88788605 95.58547974]
[90.32736206 80.66687012]
[88.76683807 65.74826813]
[87.20631409 50.82966232]
[83.63832855 45.26360321]
[83.44580841 39.58382034]
[85.82823181 35.44460297]
[84.71258545 20.48614883]
[83.59693146 5.52769566]
[82.48128510 -9.43075752]
[71.33133698 -16.98676872]
[66.63754272 -29.40364075]
[69.90390015 -42.06906509]
[79.72094727 -50.41502762]
[78.82813263 -65.38843536]
[69.71675873 -74.51782227]
[69.28139496 -87.00758362]
[77.21033478 -96.14315033]
[76.54055023 -111.12818909]
[63.65136337 -113.97789001]
[51.83264923 -119.83404541]
[41.77350235 -128.34962463]
[34.05908585 -139.02270508]
[29.13657951 -151.22601318]
[27.28927803 -164.24389648]
[28.62027740 -177.31416321]
[33.04674149 -189.67280579]
[40.30503082 -200.59860229]
[49.96641541 -209.45523071]
[61.46237564 -215.72833252]
[74.11807251 -219.05537415]
[74.11807251 -234.05537415]
[74.11807251 -249.05537415]
[74.00640869 -264.05496216]
[73.78308105 -279.05328369]
[73.55975342 -294.05163574]
[73.33642578 -309.04995728]
[73.11309814 -324.04830933]
[72.88976288 -339.04663086]
[72.66643524 -354.04498291]
[69.40960693 -362.57907104]
[72.55310822 -369.26788330]
[72.55310822 -384.26788330]
[59.21198273 -391.87774658]
[51.47701263 -405.14672852]
[51.42886734 -420.50555420]
[59.08050156 -433.82275391]
[72.37366486 -441.51608276]
[87.73255920 -441.51608276]
[101.02571869 -433.82275391]
[108.67735291 -420.50555420]
[108.62920380 -405.14672852]
[100.89424133 -391.87774658]
[87.55310822 -384.26788330]
[87.55310822 -369.26788330]
[87.66477966 -354.26831055]
[87.88810730 -339.26995850]
[88.11143494 -324.27163696]
[88.33476257 -309.27328491]
[88.55809021 -294.27496338]
[88.78141785 -279.27661133]
[89.00474548 -264.27828979]
[92.24748230 -257.63702393]
[89.11807251 -249.05537415]
[89.11807251 -234.05537415]
[89.11807251 -219.05537415]
[105.28755188 -214.18746948]
[119.18402863 -204.56236267]
[129.44796753 -191.10823059]
[135.07106018 -175.12855530]
[135.49530029 -158.17573547]
[130.66830444 -141.90039062]
[121.04954529 -127.89054871]
[107.56656647 -117.51675415]
[91.52558899 -111.79797363]
[92.19537354 -96.81293488]
[102.42302704 -82.55242920]
[93.80153656 -66.28125000]
[94.69435120 -51.30784225]
[107.73857880 -40.69242859]
[109.09598541 -23.59060860]
[97.43974304 -10.54640579]
[98.55538940 4.41204739]
[99.67103577 19.37050056]
[100.78668976 34.32895279]
[102.12492371 49.26913834]
[103.68544006 64.18774414]
[105.24596405 79.10634613]
[106.80648804 94.02495575]
[109.42793274 96.85345459]
[110.78987885 100.82371521]
[110.41037750 105.34732056]
[108.08826447 109.64239502]
[108.98107910 124.61579895]
[109.87389374 139.58920288]
[118.41888428 152.90437317]
[111.45283508 166.06961060]
[119.99782562 179.38479614]
[113.03178406 192.55003357]
[113.92459869 207.52343750]
[114.81741333 222.49684143]
[115.71022797 237.47024536]
[122.78793335 224.24504089]
[134.58276367 214.97778320]
[149.10705566 211.23014832]
[163.91323853 213.63369751]
[176.50619507 221.78338623]
[184.76379395 234.30584717]
[187.29449463 249.09083557]
[183.67181396 263.64678955]
[174.50624084 275.52081299]
[161.34234619 282.71191406]
[146.39846802 284.00823975]
[132.19291687 279.19137573]
[121.11956787 269.07302856]
[115.04413605 255.35668945]
[113.04012299 270.22222900]
[111.03610992 285.08773804]
[109.03209686 299.95327759]
[108.69712067 314.94952393]
[110.03535461 329.88970947]
[111.37358856 344.82989502]
[112.71182251 359.77008057]
[116.19654846 365.38864136]
[116.30448151 371.07067871]
[113.86069489 375.17395020]
[122.40567780 388.48913574]
[115.43963623 401.65435791]
[116.33245087 416.62777710]
[117.22526550 431.60119629]
[118.11808014 446.57458496]
[133.08921814 447.87188721]
[147.71189880 451.33526611]
[161.67443848 456.89093018]
[174.67924500 464.42041016]
[186.44909668 473.76324463]
[196.73312378 484.72027588]
[205.31213379 497.05795288]
[212.00325012 510.51330566]
[216.66384888 524.79956055]
[219.19461060 539.61218262]
[219.54156494 554.63537598]
[217.69734192 569.54901123]
[213.70123291 584.03521729]
[207.63842773 597.78509521]
[199.63813782 610.50567627]
[189.87091064 621.92584229]
[178.54492188 631.80206299]
[165.90159607 639.92388916]
[152.21041870 646.11816406]
[137.76321411 650.25292969]
[122.86792755 652.23999023]
[107.84206390 652.03704834]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 188]
[20 187]
[21 186]
[22 185]
[24 183]
[25 180]
[26 179]
[27 178]
[28 177]
[44 176]
[45 175]
[46 174]
[47 173]
[48 159]
[49 158]
[50 157]
[51 156]
[53 154]
[55 152]
[56 151]
[57 150]
[58 146]
[59 145]
[60 144]
[61 143]
[64 142]
[65 141]
[66 140]
[67 139]
[71 136]
[72 135]
[75 133]
[76 132]
[88 123]
[89 122]
[90 121]
[91 119]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
[97 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
