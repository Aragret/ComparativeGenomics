%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[134.71743774 674.40368652]
[121.01834106 680.56951904]
[106.61962128 684.85443115]
[91.77824402 687.18188477]
[76.75907135 687.51031494]
[61.83013153 685.83392334]
[47.25786209 682.18255615]
[33.30231094 676.62145996]
[20.21253777 669.24981689]
[8.22214222 660.19915771]
[-2.45489407 649.63110352]
[-11.62802505 637.73413086]
[-19.13354683 624.72064209]
[-24.83751297 610.82287598]
[-28.63813019 596.28881836]
[-30.46757126 581.37786865]
[-30.29319000 566.35614014]
[-28.11809540 551.49163818]
[-23.98110771 537.04974365]
[-17.95605278 523.28814697]
[-10.15045834 510.45239258]
[-0.70362216 498.77160645]
[10.21586514 488.45422363]
[22.41313362 479.68438721]
[35.67050552 472.61859131]
[49.75139236 467.38293457]
[64.40449524 464.07086182]
[79.36832428 462.74145508]
[94.37583160 463.41848755]
[97.04162598 448.65725708]
[99.70742035 433.89605713]
[102.37321472 419.13482666]
[105.03900909 404.37359619]
[106.71054840 389.46704102]
[107.38033295 374.48199463]
[108.05011749 359.49694824]
[108.71990967 344.51193237]
[109.38969421 329.52688599]
[110.05947876 314.54183960]
[110.39445496 299.54559326]
[109.72467041 284.56054688]
[108.38643646 269.62036133]
[99.54451752 257.63412476]
[106.01976776 243.19869995]
[104.68153381 228.25851440]
[103.34329987 213.31832886]
[102.00506592 198.37814331]
[100.66683197 183.43795776]
[99.32859802 168.49777222]
[85.97409821 158.27543640]
[84.10810089 141.22161865]
[95.37081146 127.83614349]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[89.71058655 73.72438049]
[88.15006256 58.80577469]
[86.58953857 43.88716888]
[85.02901459 28.96856308]
[83.46849060 14.04995918]
[81.90796661 -0.86864597]
[65.63903046 -6.36513376]
[53.44866943 -18.38123131]
[47.75546646 -34.46497726]
[49.65921021 -51.36436462]
[58.72879410 -65.68484497]
[73.09864807 -74.57120514]
[71.09463501 -89.43673706]
[61.58298111 -102.07948303]
[67.55054474 -115.72636414]
[65.54652405 -130.59188843]
[63.54251480 -145.45742798]
[61.09678650 -160.25669861]
[58.21151352 -174.97657776]
[55.32624054 -189.69647217]
[52.33146667 -204.39448547]
[49.22735596 -219.06977844]
[46.12324524 -233.74508667]
[40.41200638 -219.87490845]
[28.96862030 -210.17703247]
[14.34956551 -206.81797791]
[-0.17922181 -210.54817200]
[-11.37197304 -220.53427124]
[-16.72820091 -234.54537964]
[-15.05130768 -249.45133972]
[-6.71591711 -261.92214966]
[6.41582346 -269.17181396]
[21.41024971 -269.58068848]
[34.91756821 -263.05749512]
[43.92021942 -251.05944824]
[43.25043488 -266.04449463]
[42.58064651 -281.02951050]
[41.91086197 -296.01455688]
[27.20413017 -299.42257690]
[13.96279144 -306.67306519]
[3.16944075 -317.22796631]
[-4.37498426 -330.30407715]
[-8.11063671 -344.93103027]
[-7.76030588 -360.02340698]
[-3.34998918 -374.46124268]
[4.79303885 -387.17318726]
[16.06451225 -397.21594238]
[29.62800980 -403.84420776]
[44.47703552 -406.56616211]
[59.50968552 -405.17984009]
[73.61044312 -399.78805542]
[85.73294067 -390.79095459]
[94.97760010 -378.85620117]
[100.65840912 -364.86938477]
[102.35382080 -349.86843872]
[99.93801880 -334.96655273]
[93.59027100 -321.26950073]
[83.78161621 -309.79376221]
[71.23993683 -301.39083862]
[56.89590073 -296.68435669]
[57.56568527 -281.69931030]
[58.23547363 -266.71426392]
[58.90525818 -251.72923279]
[60.79854965 -236.84919739]
[63.90266037 -222.17388916]
[67.00676727 -207.49859619]
[71.46640778 -201.60508728]
[70.04613495 -192.58174133]
[72.93140411 -177.86186218]
[75.81668091 -163.14196777]
[78.06519318 -161.46795654]
[79.78609467 -158.80241394]
[80.59839630 -155.34184265]
[80.19921875 -151.41690063]
[78.40804291 -147.46144104]
[80.41205597 -132.59590149]
[82.41606903 -117.73037720]
[91.78437805 -106.15091705]
[85.96015930 -91.44075012]
[87.96417236 -76.57521820]
[100.60295105 -73.57437897]
[111.49650574 -66.43959808]
[119.33631897 -56.00194931]
[123.17191315 -43.49074554]
[122.52598572 -30.38877487]
[117.45375061 -18.25657845]
[108.53891754 -8.54657173]
[96.82657623 -2.42916894]
[98.38710022 12.48943615]
[99.94762421 27.40804100]
[101.50814056 42.32664490]
[103.06866455 57.24525070]
[104.62918854 72.16385651]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[110.28941345 126.27561951]
[121.65938568 133.49630737]
[126.72080231 145.76792908]
[123.83299255 158.52497864]
[114.26878357 167.15953064]
[115.60701752 182.09971619]
[116.94525146 197.03990173]
[118.28348541 211.98008728]
[119.62171936 226.92027283]
[120.95995331 241.86045837]
[129.89759827 254.91531372]
[123.32662201 268.28213501]
[124.66485596 283.22232056]
[135.08892822 272.43627930]
[150.08375549 272.04244995]
[161.05961609 282.26647949]
[161.72904968 297.25152588]
[151.70855713 308.41351318]
[136.73834229 309.35830688]
[125.39445496 299.54559326]
[128.00592041 304.06524658]
[128.56652832 308.67382812]
[127.38584137 312.57522583]
[125.04451752 315.21163940]
[124.37473297 330.19665527]
[123.70494843 345.18170166]
[123.03515625 360.16674805]
[122.36537170 375.15179443]
[121.69558716 390.13681030]
[131.52760315 378.80847168]
[145.89309692 374.49197388]
[160.34080505 378.52484131]
[170.39392090 389.65744019]
[172.93737793 404.44021606]
[167.18307495 418.29257202]
[154.91401672 426.92221069]
[139.93194580 427.65512085]
[126.87918091 420.26422119]
[119.80022430 407.03939819]
[117.13442993 421.80062866]
[114.46863556 436.56182861]
[111.80284119 451.32305908]
[109.13704681 466.08425903]
[123.43334961 470.69937134]
[136.98693848 477.17886353]
[149.55592346 485.40710449]
[160.91600037 495.23724365]
[170.86444092 506.49389648]
[179.22370911 518.97613525]
[185.84460449 532.46118164]
[190.60897827 546.70843506]
[193.43179321 561.46362305]
[194.26271057 576.46337891]
[193.08685303 591.44006348]
[189.92524719 606.12640381]
[184.83427429 620.26025391]
[177.90483093 633.58935547]
[169.26055908 645.87597656]
[159.05570984 656.90069580]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 194]
[30 193]
[31 192]
[32 191]
[33 190]
[34 180]
[35 179]
[36 178]
[37 177]
[38 176]
[39 175]
[40 171]
[41 164]
[42 163]
[44 161]
[45 160]
[46 159]
[47 158]
[48 157]
[49 156]
[52 152]
[53 151]
[55 149]
[56 148]
[57 147]
[58 146]
[59 145]
[60 144]
[61 143]
[67 135]
[68 134]
[70 132]
[71 131]
[72 130]
[73 125]
[74 124]
[75 123]
[76 121]
[77 120]
[78 119]
[90 118]
[91 117]
[92 116]
[93 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
