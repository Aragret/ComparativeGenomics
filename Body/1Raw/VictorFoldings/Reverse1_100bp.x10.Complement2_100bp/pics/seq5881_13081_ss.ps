%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[79.70996857 384.41552734]
[73.46722412 398.62142944]
[60.04977417 406.41577148]
[44.61689758 404.80145264]
[33.10285568 394.39920044]
[29.93502808 379.20892334]
[36.33150864 365.07159424]
[49.83272171 357.42324829]
[51.39324570 342.50466919]
[52.95376968 327.58605957]
[54.51428986 312.66744995]
[56.07481384 297.74884033]
[54.15047836 294.79431152]
[53.56159592 290.76092529]
[54.79964447 286.28649902]
[58.05266953 282.20422363]
[60.27778625 267.37017822]
[62.50290298 252.53613281]
[60.71241379 249.49861145]
[60.30421829 245.44294739]
[61.74082565 241.02825928]
[65.17288971 237.09532166]
[60.02818298 223.11743164]
[70.27548218 211.06324768]
[73.16075134 196.34335327]
[76.04602814 181.62345886]
[78.93129730 166.90356445]
[81.81657410 152.18368530]
[84.70184326 137.46379089]
[87.58712006 122.74389648]
[90.47238922 108.02400208]
[81.19973755 119.81459045]
[69.01440430 128.56202698]
[54.87737656 133.57646179]
[39.90356445 134.46243286]
[25.27386284 131.15005493]
[12.14202881 123.90058136]
[1.54369485 113.28571320]
[-5.68530989 100.14260101]
[-8.97487640 85.50775146]
[-8.06557465 70.53533936]
[-3.02911782 56.40614700]
[5.73729944 44.23446274]
[17.54232025 34.98019409]
[31.45495224 29.37317276]
[46.37798691 27.85559464]
[61.13452911 30.54713821]
[74.56082153 37.23553848]
[85.59800720 47.39332199]
[93.37564850 60.21940231]
[97.28036499 74.70226288]
[97.00366974 89.70314026]
[104.08077240 76.47761536]
[111.15788269 63.25208664]
[118.23498535 50.02656174]
[108.04288483 40.60013199]
[100.41645050 29.01138878]
[95.79750824 15.94035339]
[94.45155334 2.15265989]
[96.45254517 -11.54528618]
[101.67881012 -24.35347366]
[109.82044220 -35.52501297]
[120.39768982 -44.40968704]
[132.78923035 -50.49179077]
[146.26861572 -53.42007446]
[160.04692078 -53.02801514]
[173.31889343 -49.34327698]
[180.78663635 -62.35223007]
[180.94676208 -78.17263031]
[193.99330139 -85.35851288]
[201.46104431 -98.36746979]
[208.92878723 -111.37641907]
[197.37077332 -122.69448090]
[189.12805176 -136.60119629]
[184.75350952 -152.15290833]
[184.53778076 -168.29600525]
[188.48989868 -183.93826294]
[196.33714294 -198.02279663]
[207.54379272 -209.59944153]
[221.34770203 -217.88885498]
[236.81213379 -222.33496094]
[252.88935852 -222.64228821]
[268.49157715 -218.79557800]
[275.56869507 -232.02110291]
[282.64581299 -245.24662781]
[289.72290039 -258.47216797]
[296.80001831 -271.69769287]
[303.87710571 -284.92321777]
[310.95422363 -298.14874268]
[298.43994141 -306.43893433]
[286.75698853 -315.86456299]
[276.00799561 -326.34283447]
[266.28744507 -337.78158569]
[257.68075562 -350.08035278]
[250.26356506 -363.13101196]
[244.10107422 -376.81890869]
[239.24743652 -391.02371216]
[235.74530029 -405.62060547]
[233.62544250 -420.48132324]
[232.90649414 -435.47525024]
[233.59475708 -450.47058105]
[235.68421936 -465.33560181]
[239.15649414 -479.93963623]
[243.98106384 -494.15435791]
[250.11553955 -507.85482788]
[257.50601196 -520.92065430]
[266.08749390 -533.23699951]
[275.78463745 -544.69561768]
[286.51217651 -555.19580078]
[298.17584229 -564.64532471]
[310.67312622 -572.96112061]
[323.89419556 -580.07006836]
[337.72290039 -585.90972900]
[352.03765869 -590.42883301]
[366.71270752 -593.58752441]
[381.61904907 -595.35815430]
[396.62573242 -595.72515869]
[411.60079956 -594.68530273]
[426.41271973 -592.24768066]
[440.93124390 -588.43371582]
[455.02886963 -583.27703857]
[468.58163452 -576.82281494]
[481.47048950 -569.12786865]
[493.58212280 -560.25976562]
[504.81008911 -550.29650879]
[515.05572510 -539.32556152]
[524.22900391 -527.44342041]
[532.24932861 -514.75451660]
[539.04614258 -501.37026978]
[544.55981445 -487.40838623]
[548.74182129 -472.99154663]
[551.55535889 -458.24642944]
[552.97583008 -443.30264282]
[552.99066162 -428.29150391]
[551.59973145 -413.34494019]
[548.81530762 -398.59429932]
[544.66180420 -384.16921997]
[539.17578125 -370.19644165]
[532.40539551 -356.79882812]
[524.41015625 -344.09405518]
[515.26037598 -332.19381714]
[505.03643799 -321.20266724]
[493.82818604 -311.21722412]
[481.73410034 -302.32522583]
[468.86050415 -294.60479736]
[455.32049561 -288.12384033]
[441.23309326 -282.93927002]
[426.72210693 -279.09664917]
[411.91506958 -276.62976074]
[396.94204712 -275.56030273]
[381.93469238 -275.89764404]
[367.02487183 -277.63882446]
[352.34362793 -280.76852417]
[338.01995850 -285.25930786]
[324.17974854 -291.07162476]
[317.10263062 -277.84609985]
[310.02554321 -264.62057495]
[302.94842529 -251.39505005]
[295.87133789 -238.16952515]
[288.79421997 -224.94400024]
[281.71713257 -211.71847534]
[292.12918091 -202.52682495]
[300.22930908 -191.23512268]
[305.60534668 -178.41203308]
[307.98226929 -164.70429993]
[307.23651123 -150.80416870]
[303.40225220 -137.41436768]
[296.66992188 -125.21260834]
[287.37673950 -114.81729889]
[275.98977661 -106.75617981]
[263.08251953 -101.43954468]
[249.30603027 -99.13935089]
[235.35600281 -99.97531128]
[221.93774414 -103.90867615]
[214.47000122 -90.89972687]
[207.00225830 -77.89076996]
[207.37626648 -63.00086594]
[193.79557800 -54.88449097]
[186.32783508 -41.87553787]
[197.68327332 -30.35477829]
[205.34979248 -16.09468651]
[208.70246887 -0.24105939]
[207.46337891 15.92975521]
[201.72457886 31.11362076]
[191.94132996 44.08377838]
[178.89599609 53.78997803]
[163.63549805 59.44349289]
[147.38725281 60.58123779]
[131.46051025 57.10366440]
[124.38340759 70.32919312]
[117.30630493 83.55471802]
[110.22919464 96.78025055]
[105.19228363 110.90927887]
[102.30700684 125.62916565]
[99.42173767 140.34906006]
[96.53646088 155.06895447]
[93.65119171 169.78884888]
[90.76591492 184.50872803]
[87.88064575 199.22862244]
[84.99536896 213.94851685]
[89.93370056 228.97926331]
[79.89277649 239.98059082]
[77.33694458 254.76124573]
[75.11183167 269.59527588]
[72.88671112 284.42932129]
[70.99341583 299.30935669]
[69.43289948 314.22796631]
[67.87237549 329.14657593]
[66.31185150 344.06518555]
[64.75132751 358.98379517]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 210]
[9 209]
[10 208]
[11 207]
[12 206]
[16 205]
[17 204]
[18 203]
[22 202]
[24 200]
[25 199]
[26 198]
[27 197]
[28 196]
[29 195]
[30 194]
[31 193]
[52 192]
[53 191]
[54 190]
[55 189]
[67 179]
[68 178]
[70 176]
[71 175]
[72 174]
[83 161]
[84 160]
[85 159]
[86 158]
[87 157]
[88 156]
[89 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
