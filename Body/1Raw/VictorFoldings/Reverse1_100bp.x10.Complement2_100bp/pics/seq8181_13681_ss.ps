%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[131.42192078 490.40545654]
[134.14459229 475.52453613]
[141.33424377 462.21423340]
[152.28651428 451.77859497]
[165.92842102 445.23995972]
[163.92440796 430.37442017]
[161.92039490 415.50888062]
[159.91638184 400.64337158]
[157.91236877 385.77783203]
[155.90835571 370.91232300]
[153.79373169 356.06210327]
[151.56861877 341.22805786]
[149.34349060 326.39401245]
[146.74060059 324.01553345]
[145.16044617 320.25811768]
[145.23855591 315.61621094]
[147.36564636 310.84939575]
[145.80511475 295.93078613]
[144.24459839 281.01217651]
[142.68408203 266.09359741]
[133.66467285 254.24032593]
[139.92430115 239.71008301]
[138.36376953 224.79147339]
[136.80325317 209.87287903]
[135.24272156 194.95426941]
[131.27062988 180.48974609]
[124.99327087 166.86642456]
[118.71591187 153.24311829]
[112.03571320 139.81274414]
[104.95861053 126.58721161]
[97.88150024 113.36168671]
[98.36844635 128.35377502]
[95.86859131 143.14399719]
[90.48152161 157.14326477]
[82.42179108 169.79399109]
[72.01042175 180.59230042]
[59.66209412 189.10809326]
[45.86863327 195.00219727]
[31.17943382 198.03985596]
[16.17955399 198.10006714]
[1.46643698 195.18045044]
[-12.37390041 189.39727783]
[-24.79020119 180.98089600]
[-35.28793335 170.26652527]
[-43.44897079 157.68092346]
[-48.94826508 143.72535706]
[-51.56678009 128.95568848]
[-51.20022583 113.96015930]
[-47.86319351 99.33605957]
[-41.68860626 85.66586304]
[-32.92238617 73.49403381]
[-21.91369629 63.30537415]
[-9.10100365 55.50570297]
[5.00536680 50.40567017]
[19.84356308 48.20841217]
[34.82258606 49.00144577]
[49.34582520 52.75318146]
[62.83482742 59.31418610]
[74.75232697 68.42314911]
[84.62366486 79.71724701]
[92.05395508 92.74284363]
[91.16114044 77.76943207]
[90.26832581 62.79602814]
[81.15695953 53.66664124]
[80.72158813 41.17687607]
[88.65052795 32.04131699]
[87.98074341 17.05627632]
[73.73835754 11.81888866]
[62.61618805 1.55534577]
[56.28795242 -12.14746761]
[55.68970490 -27.18840218]
[60.88149261 -41.27421570]
[71.04294586 -52.26922607]
[84.60276031 -58.51909256]
[83.93296814 -73.50413513]
[83.26318359 -88.48917389]
[82.59339905 -103.47421265]
[81.92361450 -118.45925140]
[70.54280853 -129.09480286]
[70.07701874 -144.30130005]
[80.28652954 -155.08561707]
[79.61674500 -170.07066345]
[76.10726929 -178.50401306]
[79.05022430 -185.28344727]
[78.60361481 -200.27679443]
[70.45886230 -213.84048462]
[77.81379700 -226.79248047]
[77.36718750 -241.78582764]
[76.92058563 -256.77917480]
[76.47397614 -271.77252197]
[76.02737427 -286.76586914]
[61.24568558 -289.67269897]
[47.48164368 -295.79632568]
[35.42564774 -304.82962036]
[25.68241501 -316.31948853]
[18.74066544 -329.68960571]
[14.94859505 -344.26931763]
[14.49641132 -359.32733154]
[17.40679741 -374.10830688]
[23.53376579 -387.87084961]
[32.56999588 -399.92465210]
[44.06222916 -409.66510010]
[57.43402100 -416.60360718]
[72.01464844 -420.39215088]
[87.07275391 -420.84069824]
[101.85302734 -417.92672729]
[115.61410522 -411.79641724]
[127.66571808 -402.75726318]
[137.40338135 -391.26269531]
[144.33865356 -377.88922119]
[148.12365723 -363.30764771]
[148.56854248 -348.24945068]
[145.65100098 -333.46987915]
[139.51736450 -319.71029663]
[130.47529602 -307.66085815]
[118.97834015 -297.92599487]
[105.60318756 -290.99395752]
[91.02072144 -287.21249390]
[91.46733093 -272.21914673]
[91.91393280 -257.22579956]
[92.36054230 -242.23243713]
[92.80714417 -227.23908997]
[100.91995239 -214.74783325]
[93.59696960 -200.72340393]
[94.04357147 -185.73005676]
[94.60178375 -170.74044800]
[95.27156830 -155.75540161]
[106.40249634 -145.92494202]
[107.29521942 -130.73751831]
[96.90865326 -119.12903595]
[97.57843781 -104.14399719]
[98.24822235 -89.15895844]
[98.91800690 -74.17391968]
[99.58779907 -59.18887711]
[113.65111542 -54.17367935]
[124.75298309 -44.12907410]
[131.18074036 -30.56261826]
[131.92675781 -15.52828979]
[126.84626770 -1.31554115]
[116.68411255 9.89934635]
[102.96578217 16.38649178]
[103.63556671 31.37153053]
[113.86322784 45.63203049]
[105.24172974 61.90321350]
[106.13454437 76.87661743]
[107.02736664 91.85002899]
[111.10703278 106.28457642]
[118.18413544 119.51010895]
[125.26123810 132.73562622]
[129.02888489 134.89407349]
[131.65008545 137.84260559]
[133.01722717 141.12380981]
[133.18231201 144.29229736]
[132.33921814 146.96575928]
[138.61659241 160.58906555]
[144.89395142 174.21238708]
[145.38476562 159.22041321]
[149.68817139 144.85098267]
[157.51875305 132.05715942]
[168.35711670 121.68750000]
[181.48442078 114.42980957]
[196.02995300 110.76544189]
[211.02896118 110.93746185]
[225.48663330 114.93444061]
[238.44401550 122.49128723]
[249.04173279 133.10678101]
[256.57684326 146.07682800]
[260.54956055 160.54118347]
[260.69644165 175.54046631]
[257.00769043 190.07981873]
[249.72798157 203.19493103]
[239.34016418 214.01589966]
[226.53321838 221.82501221]
[212.15660095 226.10432434]
[197.16381836 226.56999207]
[182.54933167 223.19114685]
[169.28244019 216.19187927]
[158.24310303 206.03643799]
[150.16133118 193.39375305]
[151.72184753 208.31234741]
[153.28237915 223.23095703]
[154.84289551 238.14956665]
[163.97390747 251.06990051]
[157.60267639 264.53305054]
[159.16320801 279.45166016]
[160.72372437 294.37026978]
[162.28424072 309.28887939]
[164.17753601 324.16891479]
[166.40266418 339.00296021]
[168.62777710 353.83700562]
[172.99557495 361.85946655]
[170.77388000 368.90829468]
[172.77789307 383.77383423]
[174.78190613 398.63934326]
[176.78591919 413.50488281]
[178.78993225 428.37042236]
[180.79394531 443.23593140]
[195.68032837 445.92868042]
[209.00505066 453.09158325]
[219.46270752 464.02285767]
[226.02874756 477.65158081]
[228.05989075 492.64254761]
[225.35717773 507.52713013]
[218.18536377 520.84704590]
[207.24708557 531.29736328]
[193.61395264 537.85430908]
[178.62161255 539.87536621]
[163.73886108 537.16271973]
[150.42375183 529.98193359]
[139.98075867 519.03668213]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 197]
[6 196]
[7 195]
[8 194]
[9 193]
[10 192]
[11 190]
[12 189]
[13 188]
[17 187]
[18 186]
[19 185]
[20 184]
[22 182]
[23 181]
[24 180]
[25 179]
[26 156]
[27 155]
[28 154]
[29 149]
[30 148]
[31 147]
[61 146]
[62 145]
[63 144]
[66 142]
[67 141]
[74 134]
[75 133]
[76 132]
[77 131]
[78 130]
[81 127]
[82 126]
[84 125]
[85 124]
[87 122]
[88 121]
[89 120]
[90 119]
[91 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
