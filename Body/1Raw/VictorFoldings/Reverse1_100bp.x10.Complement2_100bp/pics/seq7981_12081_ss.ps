%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[119.48088837 456.56072998]
[112.43428040 443.31109619]
[106.38543701 429.57727051]
[101.36740112 415.43417358]
[97.40756989 400.95913696]
[94.52758026 386.23117065]
[92.74316406 371.33074951]
[92.06405640 356.33920288]
[92.49397278 341.33847046]
[94.03056335 326.41043091]
[96.66543579 311.63665771]
[100.38420105 297.09780884]
[105.16654205 282.87329102]
[110.98635101 269.04083252]
[117.81182861 255.67594910]
[125.60571289 242.85165405]
[134.32540894 230.63796997]
[143.92332458 219.10162354]
[154.34701538 208.30561829]
[165.53956604 198.30889893]
[156.40075684 186.41427612]
[147.26196289 174.51963806]
[138.12315369 162.62500000]
[128.98434448 150.73037720]
[119.84555054 138.83573914]
[107.89627075 136.95388794]
[100.18524170 127.11906433]
[101.27543640 114.26705170]
[88.51278687 108.55683136]
[86.69519043 94.69364929]
[72.24625397 88.24858856]
[70.84822845 73.41973877]
[61.88753510 61.39036179]
[47.68960571 67.70179749]
[32.45170212 70.70267487]
[16.93479729 70.24629974]
[1.91309333 66.35852814]
[-11.86460114 59.23635483]
[-23.71219826 49.23792648]
[-33.04049683 36.86452484]
[-39.38648605 22.73544884]
[-42.43631744 7.55700827]
[-42.04084396 -7.91278458]
[-38.22288513 -22.90206528]
[-31.17595863 -36.66362762]
[-21.25445747 -48.51218414]
[-30.39325905 -60.40681839]
[-39.53206253 -72.30145264]
[-48.67086411 -84.19608307]
[-57.80966568 -96.09071350]
[-66.94847107 -107.98535156]
[-76.08727264 -119.87998199]
[-85.22607422 -131.77461243]
[-94.36487579 -143.66925049]
[-107.16110992 -135.81596375]
[-120.70813751 -129.34327698]
[-134.85754395 -124.32213593]
[-149.45429993 -120.80753326]
[-164.33848572 -118.83798981]
[-179.34698486 -118.43507385]
[-194.31539917 -119.60321045]
[-209.07969666 -122.32958984]
[-223.47811890 -126.58435822]
[-237.35292053 -132.32087708]
[-250.55206299 -139.47630310]
[-262.93093872 -147.97224426]
[-274.35394287 -157.71560669]
[-284.69586182 -168.59963989]
[-293.84344482 -180.50508118]
[-301.69644165 -193.30149841]
[-308.16876221 -206.84869385]
[-313.18957520 -220.99822998]
[-316.70382690 -235.59506226]
[-318.67300415 -250.47929382]
[-319.07556152 -265.48779297]
[-317.90707397 -280.45617676]
[-315.18032837 -295.22042847]
[-310.92520142 -309.61874390]
[-305.18835449 -323.49340820]
[-298.03259277 -336.69238281]
[-289.53634644 -349.07104492]
[-279.79272461 -360.49380493]
[-268.90844727 -370.83547974]
[-257.00277710 -379.98275757]
[-244.20616150 -387.83541870]
[-230.65881348 -394.30743408]
[-216.50915527 -399.32791138]
[-201.91223145 -402.84179688]
[-187.02795410 -404.81060791]
[-172.01942444 -405.21279907]
[-157.05108643 -404.04394531]
[-142.28691101 -401.31683350]
[-127.88869476 -397.06137085]
[-114.01417542 -391.32418823]
[-100.81536865 -384.16812134]
[-88.43690491 -375.67156982]
[-77.01438904 -365.92764282]
[-66.67298126 -355.04312134]
[-57.52598953 -343.13723755]
[-49.67362976 -330.34042358]
[-43.20193863 -316.79293823]
[-38.18182373 -302.64315796]
[-34.66828918 -288.04614258]
[-32.69982529 -273.16183472]
[-32.29800797 -258.15328979]
[-33.46723175 -243.18496704]
[-36.19469452 -228.42085266]
[-40.45050430 -214.02273560]
[-46.18803787 -200.14836121]
[-53.34442902 -186.94973755]
[-61.84126663 -174.57147217]
[-71.58545685 -163.14920044]
[-82.47024536 -152.80804443]
[-73.33144379 -140.91342163]
[-64.19263458 -129.01878357]
[-55.05383682 -117.12415314]
[-45.91503143 -105.22952271]
[-36.77622986 -93.33488464]
[-27.63742828 -81.44025421]
[-18.49862671 -69.54562378]
[-9.35982418 -57.65098953]
[3.73791504 -63.87264633]
[17.85074043 -67.22884369]
[32.35921478 -67.56966400]
[46.62599945 -64.87760925]
[60.02383423 -59.26845932]
[71.96313477 -50.98631287]
[81.91793060 -40.39294434]
[89.44902802 -27.95202827]
[94.22339630 -14.20881653]
[96.02890015 0.23373483]
[94.78369904 14.74143410]
[90.53997803 28.67669487]
[83.48175812 41.42655945]
[73.91690826 52.42966461]
[82.87760925 64.45904541]
[96.68561554 70.04367828]
[98.72456360 85.73294830]
[111.48721313 91.44316864]
[113.30480957 105.30635071]
[130.37960815 112.20077515]
[131.74018860 129.69692993]
[140.87898254 141.59156799]
[150.01779175 153.48620605]
[159.15658569 165.38082886]
[168.29539490 177.27546692]
[177.43418884 189.17010498]
[189.97689819 180.93070984]
[203.09385681 173.64012146]
[216.71343994 167.33818054]
[230.76123047 162.05929565]
[245.16052246 157.83229065]
[259.83267212 154.68025208]
[274.69754028 152.62040710]
[289.67395020 151.66401672]
[304.68008423 151.81626892]
[319.63397217 153.07635498]
[334.45397949 155.43740845]
[349.05917358 158.88648987]
[363.36972046 163.40480042]
[377.30749512 168.96765137]
[390.79638672 175.54464722]
[403.76272583 183.09988403]
[416.13568115 191.59208679]
[427.84765625 200.97488403]
[438.83468628 211.19702148]
[449.03680420 222.20266724]
[458.39825439 233.93170166]
[466.86791992 246.32008362]
[474.39953613 259.30014038]
[480.95196533 272.80099487]
[486.48941040 286.74890137]
[490.98165894 301.06765747]
[494.40417480 315.67907715]
[496.73822021 330.50335693]
[497.97106934 345.45953369]
[498.09600830 360.46594238]
[497.11233521 375.44055176]
[495.02545166 390.30166626]
[491.84671021 404.96804810]
[487.59347534 419.35961914]
[482.28903198 433.39776611]
[475.96228027 447.00585938]
[468.64782715 460.10949707]
[460.38562012 472.63720703]
[451.22076416 484.52047729]
[441.20330811 495.69445801]
[430.38796997 506.09811401]
[418.83383179 515.67462158]
[406.60400391 524.37164307]
[393.76525879 532.14172363]
[380.38775635 538.94238281]
[366.54452515 544.73651123]
[352.31115723 549.49249268]
[337.76544189 553.18426514]
[322.98681641 555.79174805]
[308.05593872 557.30065918]
[293.05444336 557.70275879]
[278.06417847 556.99584961]
[263.16708374 555.18377686]
[248.44448853 552.27648926]
[233.97680664 548.28979492]
[219.84307861 543.24554443]
[206.12046814 537.17120361]
[192.88392639 530.10003662]
[180.20578003 522.07061768]
[168.15524292 513.12683105]
[156.79814148 503.31747437]
[146.19650269 492.69613647]
[136.40821838 481.32086182]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 147]
[21 146]
[22 145]
[23 144]
[24 143]
[25 142]
[28 140]
[30 138]
[32 136]
[33 135]
[46 121]
[47 120]
[48 119]
[49 118]
[50 117]
[51 116]
[52 115]
[53 114]
[54 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
