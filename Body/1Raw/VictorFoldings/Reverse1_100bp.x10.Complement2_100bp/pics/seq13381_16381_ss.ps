%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACGAUUACGAUCCGACGGUUACCACUCCCUCCAACUUCACUCUCCAUACCAAAACUCAUCAGGAGGAUAAAAAGCUUAUAGAACAAGUAACAAUUCCAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[146.71865845 515.80816650]
[145.39500427 500.83801270]
[146.31744385 485.83776855]
[149.46533203 471.14260864]
[154.76835632 457.08074951]
[162.10806274 443.96640015]
[171.32046509 432.09249878]
[182.19973755 421.72433472]
[194.50286865 413.09353638]
[207.95497131 406.39288330]
[203.34097290 392.12017822]
[192.06388855 382.38995361]
[195.18110657 366.87887573]
[190.56709290 352.60614014]
[185.95309448 338.33343506]
[167.03712463 330.58889771]
[159.88755798 311.12664795]
[169.56208801 292.45651245]
[164.10673523 278.48370361]
[148.15338135 277.56668091]
[134.14607239 269.75582886]
[124.91383362 256.57064819]
[122.34654999 240.62167358]
[127.00830841 225.09390259]
[138.01441956 213.11061096]
[132.35162354 199.22058105]
[126.68884277 185.33055115]
[114.71929932 176.46604919]
[116.67422485 160.76608276]
[111.01143646 146.87606812]
[105.34864807 132.98603821]
[99.68585968 119.09600830]
[86.37151337 113.37985992]
[80.90144348 99.96253967]
[86.42411041 86.56678009]
[80.76132202 72.67675018]
[75.09853363 58.78672409]
[69.43575287 44.89669800]
[52.27920914 44.15989685]
[37.21928787 36.02415848]
[27.26285553 22.16887474]
[24.37373352 5.40980434]
[29.08548737 -10.87310123]
[40.40368271 -23.41736221]
[34.32984924 -37.13262939]
[28.25601387 -50.84789658]
[22.18218040 -64.56316376]
[15.84590244 -71.14263153]
[16.12170601 -78.52813721]
[10.25274563 -92.33231354]
[4.38378477 -106.13648987]
[-1.48517585 -119.94066620]
[-7.35413647 -133.74484253]
[-22.29170227 -131.67016602]
[-37.24567413 -133.53138733]
[-51.19742966 -139.19569397]
[-63.19818878 -148.27140808]
[-72.43351746 -160.13507080]
[-78.27861786 -173.97427368]
[-80.34057617 -188.84333801]
[-78.48479462 -203.72782898]
[-72.84373474 -217.61390686]
[-63.80747986 -229.55722046]
[-51.99680328 -238.74729919]
[-57.86576462 -252.55146790]
[-64.10337830 -259.22454834]
[-63.71764755 -266.60513306]
[-69.38043213 -280.49514771]
[-75.04322052 -294.38519287]
[-80.70600891 -308.27520752]
[-86.36879730 -322.16525269]
[-100.94814301 -318.52883911]
[-115.89661407 -317.00439453]
[-130.90988159 -317.62292480]
[-145.68228149 -320.37185669]
[-159.91310120 -325.19525146]
[-173.31257629 -331.99484253]
[-185.60794067 -340.63226318]
[-196.54885864 -350.93164062]
[-205.91259766 -362.68328857]
[-213.50851440 -375.64794922]
[-219.18197632 -389.56170654]
[-222.81748962 -404.14126587]
[-224.34100342 -419.08984375]
[-223.72154236 -434.10305786]
[-220.97167969 -448.87530518]
[-216.14743042 -463.10580444]
[-209.34698486 -476.50488281]
[-200.70881653 -488.79971313]
[-190.40876770 -499.73999023]
[-178.65653992 -509.10299683]
[-165.69140625 -516.69812012]
[-151.77729797 -522.37072754]
[-137.19750977 -526.00531006]
[-122.24884033 -527.52789307]
[-107.23564911 -526.90753174]
[-92.46358490 -524.15673828]
[-78.23337555 -519.33160400]
[-64.83473206 -512.53033447]
[-52.54044342 -503.89141846]
[-41.60079956 -493.59069824]
[-32.23851395 -481.83789062]
[-24.64419556 -468.87228394]
[-18.97245407 -454.95782471]
[-15.33875751 -440.37780762]
[-13.81708431 -425.42904663]
[-14.43841362 -410.41589355]
[-17.19009590 -395.64398193]
[-22.01611137 -381.41409302]
[-28.81820679 -368.01586914]
[-37.45790100 -355.72210693]
[-47.75930405 -344.78311157]
[-59.51268387 -335.42153931]
[-72.47876740 -327.82803345]
[-66.81597900 -313.93798828]
[-61.15319443 -300.04797363]
[-55.49040604 -286.15795898]
[-49.82762146 -272.26791382]
[-44.06158829 -258.42044067]
[-38.19262695 -244.61625671]
[-23.37991333 -246.74534607]
[-8.50942707 -244.96617126]
[5.40444946 -239.39404297]
[17.41102028 -230.40324402]
[26.68823624 -218.60180664]
[32.59898376 -204.79051208]
[34.73482132 -189.90844727]
[32.94421387 -174.96922302]
[27.34325409 -160.99191284]
[18.30816841 -148.93153381]
[6.45004034 -139.61380005]
[12.31900120 -125.80963135]
[18.18796158 -112.00545502]
[24.05692291 -98.20127869]
[29.92588425 -84.39710236]
[35.89744568 -70.63699341]
[41.97127914 -56.92173004]
[48.04511261 -43.20646286]
[54.11894989 -29.49119568]
[67.09300232 -30.13754654]
[79.54511261 -26.32712173]
[89.98681641 -18.49270630]
[97.16225433 -7.54943705]
[100.19921112 5.21205711]
[98.71510315 18.27785683]
[92.86499786 30.09034729]
[83.32577515 39.23390961]
[88.98856354 53.12393570]
[94.65135193 67.01396179]
[100.31414032 80.90399170]
[113.62848663 86.62014008]
[119.09855652 100.03746033]
[113.57588959 113.43321991]
[119.23867798 127.32324982]
[124.90146637 141.21327209]
[130.56425476 155.10330200]
[142.93882751 164.96130371]
[140.57887268 179.66777039]
[146.24165344 193.55778503]
[151.90443420 207.44781494]
[166.03372192 207.77978516]
[178.93020630 213.45469666]
[188.66011047 223.58557129]
[193.77822876 236.61996460]
[193.54257202 250.57789612]
[188.02172852 263.35256958]
[178.07952881 273.02835083]
[183.53489685 287.00115967]
[193.16764832 288.15881348]
[201.66613770 292.71795654]
[207.88285828 300.01516724]
[210.99589539 309.02069092]
[210.61744690 318.48361206]
[206.84165955 327.10571289]
[200.22583008 333.71942139]
[204.83982849 347.99215698]
[209.45384216 362.26489258]
[221.06094360 373.01596069]
[217.61369324 387.50616455]
[222.22770691 401.77890015]
[237.05656433 399.33700562]
[252.08374023 399.13262939]
[266.97351074 401.17031860]
[281.39324951 405.40454102]
[295.02081299 411.74072266]
[307.55175781 420.03729248]
[318.70611572 430.10894775]
[328.23474121 441.73062134]
[335.92471313 454.64270020]
[341.60424805 468.55673218]
[345.14645386 483.16186523]
[346.47222900 498.13183594]
[345.55194092 513.13220215]
[342.40615845 527.82781982]
[337.10513306 541.89044189]
[329.76730347 555.00585938]
[320.55657959 566.88104248]
[309.67877197 577.25079346]
[297.37689209 585.88330078]
[283.92572021 592.58587646]
[269.62582397 597.20867920]
[254.79661560 599.64843750]
[239.76942444 599.85064697]
[224.87992859 597.81085205]
[210.46080017 593.57458496]
[196.83413696 587.23645020]
[184.30438232 578.93811035]
[173.15144348 568.86486816]
[163.62449646 557.24182129]
[155.93635559 544.32867432]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 180]
[11 179]
[13 177]
[14 176]
[15 175]
[18 168]
[19 167]
[25 160]
[26 159]
[27 158]
[29 156]
[30 155]
[31 154]
[32 153]
[35 150]
[36 149]
[37 148]
[38 147]
[44 139]
[45 138]
[46 137]
[47 136]
[49 135]
[50 134]
[51 133]
[52 132]
[53 131]
[64 120]
[65 119]
[67 118]
[68 117]
[69 116]
[70 115]
[71 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
