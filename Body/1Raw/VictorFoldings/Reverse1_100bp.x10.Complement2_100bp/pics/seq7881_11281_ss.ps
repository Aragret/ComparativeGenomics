%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[133.74520874 731.59814453]
[120.90028381 723.83251953]
[108.79194641 714.96203613]
[97.51498413 705.05609131]
[87.15764618 694.19219971]
[77.80099487 682.45550537]
[69.51825714 669.93774414]
[62.37426758 656.73693848]
[56.42493057 642.95642090]
[51.71680832 628.70404053]
[48.28675461 614.09124756]
[46.16160965 599.23254395]
[45.35800934 584.24414062]
[45.88224030 569.24340820]
[47.73020172 554.34765625]
[50.88743210 539.67358398]
[55.32921600 525.33593750]
[61.02079391 511.44696045]
[67.91761780 498.11535645]
[75.96571350 485.44546509]
[85.10208893 473.53646851]
[95.25524139 462.48156738]
[106.34570312 452.36724854]
[118.28668213 443.27270508]
[130.98471069 435.26910400]
[144.34042358 428.41909790]
[158.24926758 422.77627563]
[172.60241699 418.38479614]
[169.49830627 403.70950317]
[166.39419556 389.03421021]
[163.29008484 374.35891724]
[158.83044434 368.46539307]
[160.25071716 359.44204712]
[157.36544800 344.72216797]
[154.48017883 330.00228882]
[150.94050598 315.42590332]
[146.75349426 301.02212524]
[142.56648254 286.61834717]
[138.37947083 272.21456909]
[134.19245911 257.81076050]
[130.00544739 243.40699768]
[125.81843567 229.00320435]
[121.52430725 214.63099670]
[117.12331390 200.29115295]
[114.71283722 198.86015320]
[112.72396851 196.38810730]
[111.55606079 193.03080750]
[111.54473877 189.08564758]
[112.91468811 184.96530151]
[109.37501526 170.38893127]
[105.83534241 155.81254578]
[102.29566956 141.23617554]
[98.75599670 126.65979767]
[95.21632385 112.08342743]
[91.24423218 97.61889648]
[86.84323120 83.27905273]
[75.39748383 72.35635376]
[79.06008148 57.91908646]
[74.65908051 43.57923889]
[69.93894958 29.34124947]
[64.90203094 15.21222115]
[59.86511612 1.08319128]
[54.03574753 -5.94932413]
[54.86009979 -13.29386234]
[43.65646744 -19.68459892]
[39.92927170 -31.61321068]
[45.15600586 -42.52227783]
[40.54199600 -56.79501343]
[35.92798996 -71.06774902]
[32.05288696 -74.56498718]
[30.10185814 -78.77767944]
[30.02522278 -82.85311127]
[31.44207382 -86.08187103]
[27.46997833 -100.54639435]
[23.49788094 -115.01091766]
[19.52578545 -129.47544861]
[4.60268736 -127.69814301]
[-10.41862202 -128.16496277]
[-25.20256042 -130.86547852]
[-39.41884995 -135.73936462]
[-52.74989700 -142.67771912]
[-64.89787292 -151.52557373]
[-75.59140015 -162.08522034]
[-84.59156799 -174.12077332]
[-91.69731140 -187.36335754]
[-96.74989319 -201.51712036]
[-99.63642883 -216.26586914]
[-100.29244232 -231.28010559]
[-98.70326233 -246.22441101]
[-94.90441132 -260.76492310]
[-88.98073578 -274.57678223]
[-81.06459045 -287.35147095]
[-71.33281708 -298.80355835]
[-60.00283051 -308.67718506]
[-47.32773972 -316.75183105]
[-33.59071732 -322.84707642]
[-19.09865189 -326.82672119]
[-4.17530060 -328.60189819]
[10.84594250 -328.13293457]
[25.62949753 -325.43032837]
[39.84509277 -320.55441284]
[53.17514801 -313.61416626]
[65.32186890 -304.76458740]
[76.01388550 -294.20339966]
[85.01233673 -282.16656494]
[92.11620331 -268.92297363]
[97.16676331 -254.76849365]
[100.05120087 -240.01933289]
[100.70507050 -225.00500488]
[99.11376953 -210.06092834]
[95.31284332 -195.52096558]
[89.38720703 -181.70993042]
[81.46923828 -168.93638611]
[71.73583221 -157.48568726]
[60.40443802 -147.61364746]
[47.72819901 -139.54081726]
[33.99031067 -133.44754028]
[37.96240616 -118.98301697]
[41.93450165 -104.51849365]
[45.90659714 -90.05397034]
[50.20072174 -75.68175507]
[54.81473160 -61.40902328]
[59.42874146 -47.13628769]
[73.06755829 -36.09321213]
[69.06255341 -18.11985970]
[73.99414825 -3.95372486]
[79.03106689 10.17530441]
[84.06797791 24.30433464]
[87.07978058 26.13775063]
[89.35317230 29.52104950]
[90.16939545 34.09128952]
[88.99893188 39.17824173]
[93.39993286 53.51808929]
[104.53089142 63.41510773]
[101.18307495 78.87805176]
[105.58407593 93.21790314]
[108.14600372 94.86898041]
[110.16378784 97.48872375]
[111.27750397 100.87739563]
[111.20603943 104.70507812]
[109.79270172 108.54375458]
[113.33237457 123.12012482]
[116.87204742 137.69650269]
[120.41172028 152.27287292]
[123.95139313 166.84925842]
[127.49106598 181.42562866]
[131.46316528 195.89015198]
[135.86415100 210.22999573]
[141.37368774 217.51579285]
[140.22221375 224.81619263]
[144.40922546 239.21998596]
[148.59623718 253.62376404]
[152.78324890 268.02755737]
[156.97026062 282.43133545]
[161.15727234 296.83511353]
[165.34428406 311.23889160]
[173.49899292 298.64916992]
[188.13806152 295.37844849]
[200.87556458 303.30032349]
[204.41488647 317.87677002]
[196.72854614 330.75778198]
[182.21961975 334.56448364]
[169.20005798 327.11700439]
[172.08534241 341.83688354]
[174.97061157 356.55679321]
[177.96537781 371.25479126]
[181.06948853 385.93008423]
[184.17359924 400.60540771]
[187.27770996 415.28070068]
[202.17973328 413.48413086]
[217.18220520 413.01165771]
[232.16773987 413.86694336]
[247.01902771 416.04333496]
[261.61987305 419.52377319]
[275.85595703 424.28103638]
[289.61587524 430.27786255]
[302.79193115 437.46734619]
[315.28103638 445.79321289]
[326.98541260 455.19027710]
[337.81347656 465.58505249]
[347.68045044 476.89611816]
[356.50915527 489.03497314]
[364.23043823 501.90661621]
[370.78393555 515.41027832]
[376.11828613 529.44036865]
[380.19177246 543.88696289]
[382.97253418 558.63702393]
[384.43878174 573.57513428]
[384.57904053 588.58441162]
[383.39221191 603.54736328]
[380.88760376 618.34680176]
[377.08480835 632.86700439]
[372.01358032 646.99432373]
[365.71359253 660.61810303]
[358.23419189 673.63183594]
[349.63391113 685.93353271]
[339.98001099 697.42700195]
[329.34811401 708.02233887]
[317.82141113 717.63647461]
[305.49008179 726.19427490]
[292.45065308 733.62878418]
[278.80520630 739.88171387]
[264.66052246 744.90417480]
[250.12727356 748.65686035]
[235.31924438 751.11041260]
[220.35232544 752.24560547]
[205.34362793 752.05358887]
[190.41064453 750.53582764]
[175.67024231 747.70422363]
[161.23777771 743.58093262]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 169]
[29 168]
[30 167]
[31 166]
[33 165]
[34 164]
[35 163]
[36 156]
[37 155]
[38 154]
[39 153]
[40 152]
[41 151]
[42 150]
[43 148]
[44 147]
[49 146]
[50 145]
[51 144]
[52 143]
[53 142]
[54 141]
[55 136]
[56 135]
[58 133]
[59 132]
[60 128]
[61 127]
[62 126]
[64 125]
[67 123]
[68 122]
[69 121]
[73 120]
[74 119]
[75 118]
[76 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
