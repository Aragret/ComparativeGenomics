%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGUCUAAGUGUUAGACUACAAAACCAAUUUGAUAUAAAUGUUCUCCUUUUGGGCCAUUACUACAGCCCCAACUCCCUAUCCUCCUCUUACCCCCUAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[14.09123802 578.46459961]
[4.84734821 590.29956055]
[-5.70802212 600.98138428]
[-17.43212509 610.36547852]
[-30.16640282 618.32507324]
[-43.73864365 624.75244141]
[-57.96529388 629.56060791]
[-72.65395355 632.68469238]
[-87.60597992 634.08233643]
[-102.61916351 633.73468018]
[-117.49046326 631.64636230]
[-132.01876831 627.84576416]
[-146.00759888 622.38415527]
[-159.26776123 615.33538818]
[-171.61994934 606.79492188]
[-182.89707947 596.87811279]
[-192.94668579 585.71917725]
[-201.63281250 573.46893311]
[-208.83802795 560.29315186]
[-214.46485901 546.36999512]
[-218.43724060 531.88769531]
[-220.70143127 517.04217529]
[-221.22680664 502.03414917]
[-220.00627136 487.06661987]
[-217.05632019 472.34201050]
[-212.41687012 458.05941772]
[-206.15063477 444.41204834]
[-198.34239197 431.58441162]
[-189.09771729 419.75006104]
[-178.54162598 409.06896973]
[-166.81689453 399.68560791]
[-154.08209229 391.72689819]
[-140.50941467 385.30044556]
[-126.28244781 380.49319458]
[-111.59357452 377.37011719]
[-96.64145660 375.97348022]
[-81.62829590 376.32214355]
[-66.75713348 378.41140747]
[-52.22908401 382.21301270]
[-46.77372742 368.24023438]
[-41.31837082 354.26742554]
[-35.86301422 340.29461670]
[-30.40765572 326.32183838]
[-24.95229912 312.34902954]
[-19.49694252 298.37622070]
[-32.45089340 305.93899536]
[-47.44135284 305.40411377]
[-59.82336807 296.93737793]
[-65.76023102 283.16226196]
[-63.41234589 268.34716797]
[-53.50722504 257.08267212]
[-39.11408234 252.85923767]
[-24.69278717 256.98553467]
[-14.71193600 268.18295288]
[-12.26423359 282.98214722]
[-4.99100447 269.86346436]
[2.18436193 256.69097900]
[9.26146793 243.46545410]
[8.75915909 238.71606445]
[11.23505783 233.60070801]
[16.75127220 229.95613098]
[24.21901321 216.94717407]
[31.68675423 203.93821716]
[39.15449524 190.92927551]
[46.62223816 177.92031860]
[54.08997726 164.91136169]
[61.55772018 151.90242004]
[69.02545929 138.89346313]
[68.65144348 124.00355530]
[82.23213196 115.88717651]
[89.69987488 102.87822723]
[95.56883240 89.07405090]
[99.75584412 74.67026520]
[103.94285583 60.26648712]
[108.12986755 45.86270142]
[112.31687927 31.45892143]
[116.50389099 17.05513954]
[120.69090271 2.65135717]
[124.87791443 -11.75242519]
[126.88192749 -26.61795235]
[118.94001770 -40.30139923]
[126.48696899 -53.14245605]
[126.26364136 -68.14079285]
[126.04031372 -83.13912964]
[125.81698608 -98.13746643]
[125.59365845 -113.13580322]
[114.53456116 -124.10549164]
[114.52172852 -139.31912231]
[125.04780579 -149.79467773]
[124.82447815 -164.79301453]
[112.05096436 -176.74528503]
[111.87721252 -193.90000916]
[123.92236328 -205.63684082]
[123.47575378 -220.63018799]
[122.91754150 -235.61981201]
[122.24775696 -250.60484314]
[107.85487366 -255.42245483]
[96.17672729 -265.11703491]
[88.79268646 -278.37753296]
[86.70139313 -293.41052246]
[90.18566895 -308.18295288]
[98.77429199 -320.69692993]
[111.30573273 -329.26007080]
[126.08520508 -332.71429443]
[141.11392212 -330.59240723]
[154.35934448 -323.18142700]
[164.03016663 -311.48355103]
[168.81848145 -297.08090210]
[168.07670593 -281.92129517]
[161.90515137 -268.05490112]
[151.13848877 -257.35708618]
[137.23280334 -251.27462769]
[137.90258789 -236.28959656]
[141.34161377 -229.74781799]
[138.46910095 -221.07679749]
[138.91571045 -206.08345032]
[149.43820190 -198.64660645]
[153.82148743 -186.32308960]
[150.25418091 -173.53697205]
[139.82281494 -165.01634216]
[140.04614258 -150.01800537]
[150.87944031 -139.86048889]
[151.31959534 -124.65322876]
[140.59199524 -113.35913086]
[140.81532288 -98.36079407]
[141.03865051 -83.36245728]
[141.26197815 -68.36412048]
[141.48530579 -53.36578369]
[149.41123962 -40.75511932]
[141.88026428 -26.84127998]
[148.51225281 -40.29552841]
[158.62361145 -51.37525940]
[171.41693115 -59.20666885]
[185.88327026 -63.17214966]
[200.88174438 -62.95896149]
[215.22953796 -58.58391953]
[227.79510498 -50.39205933]
[237.58746338 -39.02941895]
[243.83436584 -25.39211082]
[246.04315186 -10.55562687]
[244.03962708 4.30996656]
[237.98178101 18.03230476]
[228.34738159 29.52919006]
[215.89624023 37.89392853]
[201.61027527 42.46683884]
[186.61618042 42.88728714]
[172.09642029 39.12211227]
[159.19609070 31.46825218]
[148.93257141 20.52932358]
[142.11528015 7.16801310]
[139.28169250 -7.56541348]
[135.09468079 6.83836842]
[130.90766907 21.24215126]
[126.72066498 35.64593124]
[122.53365326 50.04971313]
[118.34664154 64.45349884]
[114.15962982 78.85727692]
[109.97261810 93.26106262]
[120.60635376 82.68166351]
[134.18794250 76.31451416]
[149.12181091 74.90761566]
[163.65356445 78.62625122]
[176.07601929 87.03355408]
[184.92979431 99.14183807]
[189.17475891 113.52864838]
[188.31221008 128.50382996]
[182.44349670 142.30810547]
[172.25805664 153.31977844]
[158.95248413 160.24520874]
[144.08987427 162.27078247]
[129.41629028 159.15855408]
[116.65557098 151.27413940]
[107.30682373 139.54379272]
[102.46833801 125.34558105]
[102.70882416 110.34597015]
[95.24108887 123.35491943]
[95.08095551 139.17532349]
[82.03441620 146.36120605]
[74.56667328 159.37016296]
[67.09893036 172.37910461]
[59.63118744 185.38806152]
[52.16344833 198.39701843]
[44.69570541 211.40596008]
[37.22796631 224.41491699]
[29.76022530 237.42387390]
[22.48699570 250.54257202]
[15.40988922 263.76809692]
[14.12021542 272.81103516]
[8.12768936 277.13668823]
[0.85446030 290.25537109]
[-5.52414465 303.83160400]
[-10.97950172 317.80438232]
[-16.43485832 331.77719116]
[-21.89021683 345.75000000]
[-27.34557343 359.72277832]
[-32.80093002 373.69558716]
[-38.25628662 387.66836548]
[-24.99564934 394.71621704]
[-12.64290047 403.25588989]
[-1.36509705 413.17193604]
[8.68524170 424.33020020]
[17.37219429 436.57983398]
[24.57828331 449.75515747]
[30.20605278 463.67794800]
[34.17939377 478.15997314]
[36.44456863 493.00537109]
[36.97094727 508.01333618]
[35.75141144 522.98095703]
[32.80244827 537.70574951]
[28.16394615 551.98864746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 197]
[40 196]
[41 195]
[42 194]
[43 193]
[44 192]
[45 191]
[55 190]
[56 189]
[57 187]
[58 186]
[61 185]
[62 184]
[63 183]
[64 182]
[65 181]
[66 180]
[67 179]
[68 178]
[70 176]
[71 175]
[72 158]
[73 157]
[74 156]
[75 155]
[76 154]
[77 153]
[78 152]
[79 151]
[80 130]
[82 128]
[83 127]
[84 126]
[85 125]
[86 124]
[89 121]
[90 120]
[93 116]
[94 115]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
