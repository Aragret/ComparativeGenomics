%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[113.64361572 614.45751953]
[109.70424652 629.37347412]
[98.31065369 639.77490234]
[83.09850311 642.34277344]
[68.92192841 636.25769043]
[60.30462265 623.46136475]
[59.99634171 608.03704834]
[68.09545135 594.90667725]
[82.01756287 588.25994873]
[83.80002594 573.36627197]
[85.58248901 558.47253418]
[79.41240692 544.91601562]
[88.73477173 532.13305664]
[90.51724243 517.23931885]
[92.29970551 502.34561157]
[94.08217621 487.45190430]
[95.86463928 472.55816650]
[97.31405640 457.62835693]
[90.54479980 444.36087036]
[99.28707886 431.17440796]
[92.51782227 417.90689087]
[101.26010132 404.72042847]
[102.37574768 389.76196289]
[103.38000488 374.79562378]
[104.27282715 359.82223511]
[105.16564178 344.84881592]
[105.16564178 329.84881592]
[104.27282715 314.87539673]
[103.38000488 299.90200806]
[102.48719025 284.92858887]
[101.59437561 269.95520020]
[100.70156097 254.98178101]
[99.80874634 240.00837708]
[91.32762146 227.76420593]
[98.22980499 213.52796936]
[97.33699036 198.55456543]
[96.44416809 183.58116150]
[87.60784149 175.32005310]
[86.74147797 162.85276794]
[94.85363007 152.82502747]
[94.18384552 137.83998108]
[93.51406097 122.85494232]
[92.84426880 107.86990356]
[91.06180573 92.97618866]
[88.17653656 78.25629425]
[85.29125977 63.53640366]
[81.75158691 48.96002960]
[77.56457520 34.55624771]
[73.37756348 20.15246582]
[69.19055176 5.74868345]
[57.90869904 -5.34321690]
[61.78584290 -19.72435188]
[57.59883118 -34.12813187]
[44.01416779 -46.55948639]
[48.85936356 -63.42634583]
[44.45836639 -77.76618958]
[40.05736923 -92.10604095]
[28.61161995 -103.02873993]
[32.27421951 -117.46600342]
[27.87322235 -131.80584717]
[13.34556007 -136.92964172]
[4.72138739 -149.47862244]
[5.13529158 -164.52165222]
[14.21904182 -176.29550171]
[9.81804371 -190.63534546]
[5.41704512 -204.97520447]
[1.01604724 -219.31504822]
[-2.26605940 -222.15788269]
[-4.27115250 -225.55555725]
[-4.98162174 -229.03845215]
[-4.53416967 -232.17953491]
[-3.19257736 -234.64089966]
[-6.73224974 -249.21726990]
[-10.27192211 -263.79364014]
[-13.81159496 -278.37002563]
[-17.35126686 -292.94641113]
[-22.27594948 -278.77786255]
[-32.79891968 -268.08828735]
[-46.88835526 -262.94165039]
[-61.82380676 -264.33169556]
[-74.72147369 -271.99005127]
[-83.09101868 -284.43795776]
[-85.31641388 -299.27197266]
[-80.96797180 -313.62783813]
[-70.88529968 -324.73367310]
[-57.01521683 -330.44512939]
[-42.03580856 -329.65942383]
[-28.83937073 -322.52819824]
[-19.97341537 -310.42730713]
[-20.86623001 -325.40069580]
[-21.75904655 -340.37411499]
[-22.65186119 -355.34750366]
[-25.96775436 -361.06735229]
[-25.90646172 -366.75006104]
[-23.34159088 -370.77877808]
[-23.78819656 -385.77212524]
[-24.23480415 -400.76547241]
[-24.68140984 -415.75881958]
[-38.64496231 -421.92175293]
[-48.54515076 -433.53851318]
[-52.41629028 -448.30255127]
[-49.48975372 -463.28250122]
[-40.34661484 -475.50402832]
[-26.80224991 -482.54055786]
[-11.54589939 -482.99499512]
[2.39327645 -476.77709961]
[12.24764347 -465.12145996]
[16.06060982 -450.34228516]
[13.07510757 -435.37399292]
[3.88391185 -423.18856812]
[-9.68805885 -416.20541382]
[-9.24145317 -401.21206665]
[-8.79484749 -386.21871948]
[-8.34824181 -371.22537231]
[-7.67845631 -356.24032593]
[-6.78564072 -341.26693726]
[-5.89282465 -326.29351807]
[-5.00000858 -311.32009888]
[-2.77489161 -296.48608398]
[0.76478082 -281.90969849]
[4.30445337 -267.33331299]
[7.84412575 -252.75694275]
[11.38379860 -238.18057251]
[15.35589409 -223.71604919]
[19.75689316 -209.37619019]
[24.15789032 -195.03634644]
[28.55888939 -180.69650269]
[42.68354416 -176.04547119]
[51.46494675 -163.82455444]
[51.36523056 -148.59814453]
[42.21306992 -136.20684814]
[46.61406708 -121.86700439]
[57.74502945 -111.96998596]
[54.39721680 -96.50703430]
[58.79821396 -82.16719055]
[63.19921112 -67.82734680]
[73.73542786 -61.88473129]
[77.51933289 -49.97398758]
[72.00260925 -38.31514359]
[76.18962097 -23.91136169]
[87.17199707 -13.84971714]
[83.59433746 1.56167233]
[87.78134918 15.96545410]
[91.96836090 30.36923599]
[96.15537262 44.77301788]
[104.31007385 32.18330765]
[118.94914246 28.91257477]
[131.68664551 36.83443832]
[135.22596741 51.41090012]
[127.53962708 64.29189301]
[113.03070068 68.09860992]
[100.01115417 60.65113068]
[102.89642334 75.37102509]
[105.78170013 90.09091187]
[112.13613129 76.50337982]
[124.37612915 67.83259583]
[139.30220032 66.34510040]
[153.01268005 72.42971802]
[161.92370605 84.49593353]
[163.70594788 99.38967896]
[157.89352417 113.21775818]
[146.00581360 122.36554718]
[131.15020752 124.44184113]
[117.20993042 118.90389252]
[107.82930756 107.20011902]
[108.49909973 122.18515778]
[109.16888428 137.17019653]
[109.83866882 152.15524292]
[120.10614777 167.44119263]
[111.41757965 182.68833923]
[112.31039429 197.66174316]
[113.20320892 212.63514709]
[121.74819183 225.95033264]
[114.78215027 239.11557007]
[115.67496490 254.08897400]
[116.56777954 269.06237793]
[117.46059418 284.03579712]
[118.35341644 299.00918579]
[119.24623108 313.98260498]
[120.13904572 328.95599365]
[129.32453918 317.09738159]
[143.69338989 312.79205322]
[157.88639832 317.64578247]
[166.60989380 329.84826660]
[166.61026001 344.84826660]
[157.88732910 357.05114746]
[143.69456482 361.90554810]
[129.32550049 357.60092163]
[120.13904572 345.74163818]
[119.24623108 360.71502686]
[118.35341644 375.68844604]
[120.96648407 384.44113159]
[117.33419800 390.87762451]
[116.21855164 405.83605957]
[122.90801239 420.17349243]
[114.24552917 432.29003906]
[120.93498993 446.62747192]
[112.27251434 458.74401855]
[114.54058838 463.44537354]
[114.75687408 468.08288574]
[113.28928375 471.88568115]
[110.75835419 474.34063721]
[108.97589111 489.23434448]
[107.19342804 504.12808228]
[105.41095734 519.02178955]
[103.62849426 533.91552734]
[109.67108154 548.53735352]
[100.47621155 560.25500488]
[98.69374084 575.14868164]
[96.91127777 590.04241943]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 210]
[10 209]
[11 208]
[13 206]
[14 205]
[15 204]
[16 203]
[17 202]
[18 198]
[20 196]
[22 194]
[23 193]
[24 191]
[25 190]
[26 189]
[27 180]
[28 179]
[29 178]
[30 177]
[31 176]
[32 175]
[33 174]
[35 172]
[36 171]
[37 170]
[40 168]
[41 167]
[42 166]
[43 165]
[44 154]
[45 153]
[46 152]
[47 145]
[48 144]
[49 143]
[50 142]
[52 140]
[53 139]
[55 136]
[56 135]
[57 134]
[59 132]
[60 131]
[64 127]
[65 126]
[66 125]
[67 124]
[72 123]
[73 122]
[74 121]
[75 120]
[76 119]
[89 118]
[90 117]
[91 116]
[92 115]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
