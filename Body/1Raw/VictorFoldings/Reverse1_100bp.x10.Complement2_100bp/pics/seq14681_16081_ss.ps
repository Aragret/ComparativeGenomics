%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUAAUCCCCCAAUCAAAACGCAUAACCCCAGUAACCACAAGAACAUCAACUUUAUGUUGCUACCAAAAAGUAUAGUAACCAGCACCAACAUCAGGCACxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[88.65349579 595.84417725]
[83.57088470 610.03680420]
[75.23886871 622.60028076]
[64.14185333 632.80419922]
[50.92500687 640.05529785]
[36.35673523 643.93200684]
[21.28402138 644.20892334]
[6.58317041 640.86999512]
[-6.89112663 634.10931396]
[-18.35549164 624.31994629]
[-27.14340401 612.07104492]
[-32.74394226 598.07470703]
[-34.83150482 583.14465332]
[-33.28471756 568.14898682]
[-28.19350815 553.95941162]
[-19.85387611 541.40100098]
[-8.75067711 531.20385742]
[4.47056532 523.96075439]
[19.04118538 520.09289551]
[34.11406708 519.82507324]
[37.43632507 505.19763184]
[40.75858307 490.57015991]
[44.08084488 475.94268799]
[39.35459518 461.81784058]
[49.95624924 450.07409668]
[53.27850723 435.44662476]
[56.60076523 420.81918335]
[59.92302704 406.19171143]
[63.24528503 391.56423950]
[66.56754303 376.93679810]
[69.12337494 362.15612793]
[70.90584564 347.26242065]
[72.24407959 332.32223511]
[73.13689423 317.34881592]
[70.69310760 313.24554443]
[70.80104065 307.56350708]
[74.28575897 301.94494629]
[75.62400055 287.00476074]
[76.96223450 272.06457520]
[78.30046844 257.12438965]
[71.72949219 243.75759888]
[80.66712952 230.70274353]
[82.00536346 215.76255798]
[72.28758240 204.53311157]
[73.43190765 189.36257935]
[85.27626801 179.24581909]
[86.61450195 164.30563354]
[87.95273590 149.36544800]
[81.38175964 135.99864197]
[90.31939697 122.94378662]
[91.65763092 108.00360107]
[82.12824249 119.58766937]
[68.34311676 125.50125122]
[53.38190842 124.42324829]
[40.58697128 116.59447479]
[32.81673813 103.76390839]
[31.80709457 88.79792786]
[37.78359604 75.03997040]
[49.41108322 65.56359863]
[64.09193420 62.48585510]
[78.54642487 66.49432373]
[89.54537201 76.69349670]
[94.63159180 90.80487823]
[98.38789368 76.28282166]
[102.14419556 61.76075745]
[105.90048981 47.23870087]
[109.65679169 32.71664047]
[112.43240356 17.97567749]
[106.38981628 3.35385537]
[115.58468628 -8.36380577]
[117.36715698 -23.25752258]
[119.14962006 -38.15124130]
[120.93208313 -53.04495621]
[108.50158691 -44.64956284]
[93.74984741 -47.36731720]
[85.12733459 -59.64136505]
[87.57341766 -74.44057465]
[99.68686676 -83.28729248]
[114.52854919 -81.11370850]
[123.59622955 -69.16587067]
[126.70034027 -83.84117889]
[129.80444336 -98.51647949]
[132.90855408 -113.19178009]
[128.19456482 -128.29438782]
[138.39816284 -139.14500427]
[141.39294434 -153.84300232]
[144.27821350 -168.56289673]
[147.16348267 -183.28279114]
[138.61384583 -196.30358887]
[141.74961853 -211.19055176]
[154.21565247 -219.26107788]
[157.10093689 -233.98097229]
[159.98620605 -248.70086670]
[162.65199280 -263.46209717]
[165.09773254 -278.26135254]
[159.71406555 -293.13839722]
[169.42298889 -304.43380737]
[171.86871338 -319.23309326]
[157.96514893 -325.04580688]
[145.77722168 -333.90869141]
[135.96220398 -345.34381104]
[129.04940796 -358.73449707]
[125.41162872 -373.35855103]
[125.24505615 -388.42736816]
[128.55867004 -403.12826538]
[135.17376709 -416.66848755]
[144.73361206 -428.31777954]
[156.72264099 -437.44793701]
[170.49430847 -443.56658936]
[185.30593872 -446.34371948]
[200.35873413 -445.62963867]
[214.84092712 -441.46276855]
[227.97152710 -434.06790161]
[239.04238892 -423.84378052]
[247.45649719 -411.34179688]
[252.76007080 -397.23617554]
[254.66711426 -382.28759766]
[253.07478333 -367.30221558]
[248.06892395 -353.08822632]
[239.91952515 -340.41210938]
[229.06605530 -329.95748901]
[216.09384155 -322.28817749]
[201.70243835 -317.81777954]
[186.66798401 -316.78735352]
[184.22225952 -301.98806763]
[189.78085327 -288.16958618]
[179.89700317 -275.81561279]
[177.45126343 -261.01635742]
[179.45491028 -256.68109131]
[178.75643921 -251.04113770]
[174.70610046 -245.81559753]
[171.82081604 -231.09570312]
[168.93554688 -216.37580872]
[177.43234253 -204.19631958]
[174.71595764 -189.22715759]
[161.88337708 -180.39750671]
[158.99810791 -165.67762756]
[156.11283875 -150.95773315]
[157.91102600 -143.78916931]
[153.07347107 -136.04089355]
[158.00949097 -121.98795319]
[147.58386230 -110.08766937]
[144.47975159 -95.41236877]
[141.37564087 -80.73706818]
[138.27153015 -66.06175995]
[135.82580566 -51.26249313]
[134.04333496 -36.36877441]
[132.26087952 -21.47505760]
[130.47840881 -6.58133984]
[136.64848328 6.97518444]
[127.32611847 19.75814438]
[137.97346497 9.19243717]
[152.62022400 5.95634747]
[166.72795105 11.05261326]
[175.92521667 22.90209961]
[177.36213684 37.83311844]
[170.59347534 51.21912384]
[157.71656799 58.91232300]
[142.72148132 58.52889252]
[130.25457764 50.18764114]
[124.17885590 36.47294235]
[120.42255402 50.99499893]
[116.66625214 65.51705933]
[112.90995026 80.03911591]
[109.15364838 94.56118011]
[106.59781647 109.34183502]
[105.25958252 124.28202057]
[111.73484039 138.71745300]
[102.89292145 150.70367432]
[101.55468750 165.64385986]
[100.21645355 180.58404541]
[110.07431030 192.64474487]
[108.50432587 207.77714539]
[96.94554901 217.10078430]
[95.60731506 232.04096985]
[102.08256531 246.47640991]
[93.24065399 258.46264648]
[91.90241241 273.40283203]
[90.56417847 288.34301758]
[89.22594452 303.28320312]
[88.11029816 318.24163818]
[87.21748352 333.21505737]
[89.29788971 337.02633667]
[89.98788452 340.91070557]
[89.43521881 344.42211914]
[87.91734314 347.20828247]
[85.79956055 349.04489136]
[84.01709747 363.93859863]
[95.75448608 354.59869385]
[110.75215912 354.86285400]
[122.15338135 364.61026001]
[124.74567413 379.38455200]
[117.34386444 392.43115234]
[103.33197021 397.78527832]
[89.11603546 392.99911499]
[81.19500732 380.25906372]
[77.87274933 394.88650513]
[74.55048370 409.51397705]
[71.22822571 424.14141846]
[67.90596771 438.76889038]
[64.58370972 453.39636230]
[69.07232666 468.56747437]
[58.70830536 479.26495361]
[55.38604355 493.89242554]
[52.06378555 508.51986694]
[48.74152374 523.14733887]
[62.21991730 529.89984131]
[73.69021606 539.68225098]
[82.48555756 551.92584229]
[88.09458160 565.91876221]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 206]
[21 205]
[22 204]
[23 203]
[25 201]
[26 200]
[27 199]
[28 198]
[29 197]
[30 196]
[31 188]
[32 187]
[33 182]
[34 181]
[37 180]
[38 179]
[39 178]
[40 177]
[42 175]
[43 174]
[46 171]
[47 170]
[48 169]
[50 167]
[51 166]
[63 165]
[64 164]
[65 163]
[66 162]
[67 161]
[68 151]
[70 149]
[71 148]
[72 147]
[73 146]
[80 145]
[81 144]
[82 143]
[83 142]
[85 140]
[86 138]
[87 137]
[88 136]
[91 133]
[92 132]
[93 131]
[94 128]
[95 127]
[97 125]
[98 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
