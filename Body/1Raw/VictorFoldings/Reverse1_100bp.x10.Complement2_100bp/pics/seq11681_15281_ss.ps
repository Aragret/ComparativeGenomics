%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[98.22581482 589.39318848]
[94.28644562 604.30914307]
[82.89285278 614.71057129]
[67.68070221 617.27838135]
[53.50412750 611.19329834]
[44.88682556 598.39703369]
[44.57854080 582.97271729]
[52.67765045 569.84228516]
[66.59976196 563.19561768]
[68.38222504 548.30187988]
[70.16468811 533.40820312]
[71.94715881 518.51446533]
[73.06280518 503.55603027]
[65.70787048 490.60400391]
[73.85262299 477.04034424]
[66.49769592 464.08834839]
[74.64244843 450.52465820]
[75.08905029 435.53131104]
[75.53565979 420.53793335]
[73.71375275 418.40750122]
[72.62596893 415.42700195]
[72.60030365 411.87246704]
[73.85887909 408.13342285]
[76.48164368 404.67291260]
[77.81987762 389.73272705]
[79.15811157 374.79254150]
[80.49634552 359.85235596]
[81.83457947 344.91217041]
[83.17281342 329.97198486]
[84.06562805 314.99859619]
[84.51222992 300.00521851]
[84.95883942 285.01187134]
[85.40544128 270.01852417]
[85.74041748 255.02227783]
[85.96374512 240.02394104]
[83.78350067 237.25286865]
[82.83712006 233.28808594]
[83.67104340 228.72105408]
[86.54689026 224.36483765]
[87.43970490 209.39143372]
[88.33251953 194.41802979]
[89.11384583 179.43838501]
[89.78363037 164.45335388]
[90.45341492 149.46830750]
[91.12319946 134.48327637]
[91.79298401 119.49823761]
[92.46276855 104.51319885]
[90.60402679 102.09770966]
[89.58309937 98.95251465]
[89.67194366 95.38662720]
[91.02457428 91.80519867]
[93.64485168 88.66400146]
[95.20537567 73.74539948]
[96.76589966 58.82679367]
[98.32642365 43.90819168]
[99.44207001 28.94973755]
[100.11185455 13.96469784]
[100.78163910 -1.02034056]
[101.45142365 -16.00537872]
[93.33927155 -26.03313065]
[94.20563507 -38.50041580]
[103.04196930 -46.76151657]
[103.93478394 -61.73492050]
[94.46378326 -68.92079163]
[89.68643188 -79.67615509]
[90.68383789 -91.28214264]
[97.09296417 -100.86540222]
[107.22541046 -106.10942841]
[108.56364441 -121.04960632]
[109.90187836 -135.98979187]
[111.24011230 -150.92997742]
[98.78842926 -159.81269836]
[92.49626160 -173.64402771]
[93.96231079 -188.66790771]
[102.69317627 -200.85922241]
[116.26264954 -207.00209045]
[117.60088348 -221.94227600]
[115.40305328 -226.67689514]
[115.25584412 -231.31712341]
[116.77988434 -235.09764099]
[119.34707642 -237.51463318]
[121.35109711 -252.38015747]
[123.35511017 -267.24569702]
[125.35912323 -282.11120605]
[127.36313629 -296.97674561]
[120.17796326 -307.68823242]
[122.15314484 -320.02850342]
[131.69126892 -327.46832275]
[126.08670044 -342.26358032]
[135.62637329 -353.70230103]
[137.85148621 -368.53634644]
[128.72897339 -381.16238403]
[131.19686890 -396.17453003]
[143.29011536 -404.79364014]
[145.40473938 -419.64382935]
[147.40875244 -434.50936890]
[149.41276550 -449.37490845]
[151.41677856 -464.24041748]
[153.42079163 -479.10595703]
[155.42480469 -493.97146606]
[141.69854736 -500.30245972]
[130.44931030 -510.39929199]
[122.67737579 -523.36419678]
[119.07380676 -538.04431152]
[119.95903015 -553.13427734]
[125.25434113 -567.29235840]
[134.48887634 -579.25958252]
[146.84152222 -587.97186279]
[161.21386719 -592.65447998]
[176.32795715 -592.89111328]
[190.83982849 -588.66064453]
[203.45912170 -580.33929443]
[213.06372070 -568.66699219]
[218.79960632 -554.68157959]
[220.15672302 -539.62670898]
[217.01443481 -524.84100342]
[209.65211487 -511.63916016]
[198.72442627 -501.19515991]
[185.20306396 -494.43765259]
[170.29032898 -491.96746826]
[168.28631592 -477.10192871]
[166.28230286 -462.23641968]
[164.27828979 -447.37088013]
[162.27427673 -432.50534058]
[160.27026367 -417.63983154]
[162.49195862 -410.59100342]
[158.12416077 -402.56851196]
[167.15632629 -390.78057861]
[165.11105347 -375.70504761]
[152.68553162 -366.31121826]
[150.46041870 -351.47717285]
[156.22413635 -337.74295044]
[146.52529907 -325.24322510]
[153.81893921 -309.28170776]
[142.22866821 -294.97274780]
[140.22465515 -280.10720825]
[138.22064209 -265.24166870]
[136.21662903 -250.37614441]
[134.21260071 -235.51062012]
[132.54106140 -220.60404968]
[131.20283508 -205.66386414]
[143.46458435 -197.20719910]
[149.88983154 -183.65832520]
[148.66250610 -168.61305237]
[140.01240540 -156.12016296]
[126.18029785 -149.59175110]
[124.84206390 -134.65156555]
[123.50382996 -119.71137238]
[122.16559601 -104.77119446]
[134.72781372 -91.45555115]
[133.54740906 -72.86739349]
[118.90818787 -60.84210587]
[118.01537323 -45.86869812]
[126.70394897 -30.62154770]
[116.43646240 -15.33559418]
[115.76667786 -0.35055545]
[115.09689331 14.63448334]
[114.42710876 29.61952209]
[116.21709442 31.77685738]
[117.26038361 34.77321625]
[117.23312378 38.32774353]
[115.91902161 42.04764175]
[113.24502563 45.46871185]
[111.68450165 60.38731766]
[110.12397766 75.30592346]
[108.56346130 90.22452545]
[107.44780731 105.18298340]
[106.77802277 120.16802216]
[106.10823822 135.15306091]
[105.43845367 150.13809204]
[104.76866913 165.12313843]
[104.09888458 180.10816956]
[106.84197998 188.82099915]
[103.30593109 195.31083679]
[102.41311646 210.28425598]
[101.52029419 225.25765991]
[100.96208954 240.24726868]
[100.73876190 255.24560547]
[103.74005127 263.87289429]
[100.39879608 270.46514893]
[99.95218658 285.45849609]
[99.50558472 300.45184326]
[99.05897522 315.44519043]
[101.25193787 319.19284058]
[102.05728149 323.05496216]
[101.60940552 326.58126831]
[100.17515564 329.41137695]
[98.11299896 331.31021118]
[96.77476501 346.25039673]
[95.43653107 361.19058228]
[94.09829712 376.13076782]
[92.76006317 391.07095337]
[91.42182159 406.01113892]
[90.52900696 420.98455811]
[90.08240509 435.97790527]
[89.63579559 450.97125244]
[96.95878601 464.99566650]
[88.84597778 477.48693848]
[96.16896057 491.51135254]
[88.05615234 504.00262451]
[99.68808746 494.53170776]
[114.62346649 495.92254639]
[124.30663300 507.37838745]
[123.19062805 522.33679199]
[111.91474915 532.22894287]
[96.93833160 531.38812256]
[86.84087372 520.29693604]
[85.05841064 535.19067383]
[83.27593994 550.08435059]
[81.49347687 564.97808838]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 210]
[10 209]
[11 208]
[12 207]
[13 200]
[15 198]
[17 196]
[18 195]
[19 194]
[24 193]
[25 192]
[26 191]
[27 190]
[28 189]
[29 188]
[30 183]
[31 182]
[32 181]
[33 180]
[34 178]
[35 177]
[39 176]
[40 175]
[41 174]
[42 172]
[43 171]
[44 170]
[45 169]
[46 168]
[47 167]
[52 166]
[53 165]
[54 164]
[55 163]
[56 158]
[57 157]
[58 156]
[59 155]
[62 153]
[63 152]
[68 149]
[69 148]
[70 147]
[71 146]
[76 141]
[77 140]
[81 139]
[82 138]
[83 137]
[84 136]
[85 135]
[88 133]
[90 131]
[91 130]
[94 127]
[95 125]
[96 124]
[97 123]
[98 122]
[99 121]
[100 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
