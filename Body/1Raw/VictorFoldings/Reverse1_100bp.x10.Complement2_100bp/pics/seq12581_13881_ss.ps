%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUACAAACCCAGACUCAAAUAUAUAGUGUCACUCUUAAGAUACUACCUGGUACAUUGCUUGUUACGAUGUCCCUACUUAUAAUACCUCUUCAUCAGAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[81.72549438 565.02691650]
[70.17646027 574.63146973]
[57.49401474 582.68035889]
[43.88640213 589.04125977]
[29.57707787 593.60980225]
[14.80101013 596.31091309]
[-0.19916283 597.10034180]
[-15.17712498 595.96496582]
[-29.88692474 592.92358398]
[-44.08701324 588.02606201]
[-57.54421234 581.35284424]
[-70.03754425 573.01342773]
[-81.36185455 563.14489746]
[-91.33119202 551.90924072]
[-99.78184509 539.49090576]
[-106.57505035 526.09387207]
[-111.59925079 511.93807983]
[-114.77195740 497.25604248]
[-116.04106140 482.28881836]
[-115.38572693 467.28219604]
[-112.81671143 452.48257446]
[-108.37620544 438.13302612]
[-102.13712311 424.46911621]
[-94.20191193 411.71527100]
[-84.70088196 400.08087158]
[-73.79004669 389.75701904]
[-61.64857483 380.91320801]
[-48.47583389 373.69467163]
[-34.48813629 368.21997070]
[-19.91516876 364.57894897]
[-4.99623871 362.83142090]
[10.02367496 363.00610352]
[24.89793205 365.10009766]
[28.87002754 350.63555908]
[24.77919960 336.31375122]
[35.89466476 325.05511475]
[39.86676025 310.59057617]
[43.83885956 296.12606812]
[47.81095505 281.66152954]
[38.87561798 267.41378784]
[43.09260178 250.78453064]
[58.32584381 242.18408203]
[62.08214569 227.66201782]
[65.83844757 213.13996887]
[64.47011566 205.87707520]
[69.76028442 198.43048096]
[73.73238373 183.96595764]
[77.70448303 169.50143433]
[81.35256958 154.95181274]
[84.67482758 140.32434082]
[87.99708557 125.69688416]
[90.77269745 110.95592499]
[85.83453369 97.87516785]
[94.39325714 86.81896210]
[96.61837769 71.98491669]
[98.84349060 57.15087128]
[101.06861115 42.31682587]
[94.04371643 31.49954414]
[96.20240784 19.19004250]
[105.85023499 11.89305687]
[108.29595947 -2.90621400]
[110.74169159 -17.70548439]
[109.06907654 -21.71252060]
[108.78693390 -25.64760971]
[109.70191193 -29.08246422]
[111.50141144 -31.69558716]
[113.79877472 -33.30190659]
[117.12103271 -47.92936707]
[120.44329071 -62.55682755]
[123.76554871 -77.18428802]
[122.17805481 -83.60234070]
[123.82315063 -89.04207611]
[127.41062164 -92.19470215]
[131.16693115 -106.71676636]
[134.92321777 -121.23882294]
[138.67951965 -135.76087952]
[130.92005920 -149.26748657]
[134.93635559 -163.94142151]
[147.86065674 -171.25564575]
[151.61695862 -185.77769470]
[155.37326050 -200.29975891]
[158.47737122 -214.97506714]
[160.92309570 -229.77433777]
[163.36882019 -244.57360840]
[154.43530273 -257.33407593]
[157.12643433 -272.30780029]
[169.34666443 -280.74591064]
[171.79238892 -295.54519653]
[174.23811340 -310.34445190]
[176.68385315 -325.14373779]
[179.12957764 -339.94299316]
[181.57530212 -354.74227905]
[184.02102661 -369.54153442]
[169.81213379 -374.46246338]
[156.63934326 -381.71405029]
[144.88165283 -391.08767700]
[134.87738037 -402.31362915]
[126.91433716 -415.06896973]
[121.22165680 -428.98663330]
[117.96311951 -443.66619873]
[117.23249054 -458.68533325]
[119.05077362 -473.61187744]
[123.36567688 -488.01638794]
[130.05302429 -501.48437500]
[138.92042542 -513.62841797]
[149.71275330 -524.09899902]
[162.11947632 -532.59497070]
[175.78363037 -538.87182617]
[190.31208801 -542.74896240]
[205.28680420 -544.11486816]
[220.27696228 -542.93017578]
[234.85122681 -539.22900391]
[248.59030151 -533.11791992]
[261.09887695 -524.77264404]
[272.01705933 -514.43328857]
[281.03067017 -502.39743042]
[287.88043213 -489.01126099]
[292.36923218 -474.66000366]
[294.36791992 -459.75653076]
[293.81896973 -444.72967529]
[290.73822021 -430.01177979]
[285.21429443 -416.02627563]
[277.40609741 -403.17556763]
[267.53833008 -391.82943726]
[255.89486694 -382.31430054]
[242.81074524 -374.90390015]
[228.66241455 -369.81152344]
[213.85693359 -367.18362427]
[198.82029724 -367.09582520]
[196.37457275 -352.29653931]
[193.92884827 -337.49728394]
[191.48312378 -322.69799805]
[189.03738403 -307.89874268]
[186.59165955 -293.09945679]
[184.14593506 -278.30020142]
[193.00158691 -266.37908936]
[190.73210144 -251.33567810]
[178.16809082 -242.12788391]
[175.72236633 -227.32861328]
[173.27664185 -212.52934265]
[186.06962585 -220.36131287]
[200.68528748 -216.98756409]
[208.75114441 -204.34074402]
[205.64668274 -189.66551208]
[193.15028381 -181.36851501]
[178.42045593 -184.20265198]
[169.89532471 -196.54345703]
[166.13902283 -182.02140808]
[162.38272095 -167.49934387]
[170.13951111 -154.83570862]
[166.53697205 -140.05476379]
[153.20158386 -132.00457764]
[149.44528198 -117.48252106]
[145.68898010 -102.96046448]
[141.93267822 -88.43840790]
[138.39300537 -73.86203003]
[135.07075500 -59.23456955]
[131.74848938 -44.60710907]
[128.42623901 -29.97964859]
[125.54096222 -15.25975800]
[123.09523010 -0.46048671]
[120.64950562 14.33878422]
[127.70468903 30.40711403]
[115.90265656 44.54194260]
[113.67753601 59.37598801]
[111.45242310 74.21002960]
[109.22730255 89.04407501]
[114.16546631 102.12483215]
[105.60674286 113.18103790]
[119.03698730 106.50057983]
[132.69740295 112.69679260]
[136.51803589 127.20205688]
[127.68246460 139.32363892]
[112.70394135 140.12594604]
[102.62454987 129.01914978]
[99.30228424 143.64660645]
[95.98002625 158.27406311]
[97.52560425 163.25987244]
[97.05155945 167.87815857]
[95.03609467 171.42117310]
[92.16900635 173.47352600]
[88.19690704 187.93804932]
[84.22480774 202.40257263]
[80.36050415 216.89627075]
[76.60420227 231.41831970]
[72.84790039 245.94038391]
[80.97399139 256.68194580]
[81.42330170 269.94876099]
[74.25572968 280.88989258]
[62.27547836 285.63363647]
[58.30338287 300.09814453]
[54.33128738 314.56268311]
[50.35918808 329.02719116]
[54.16590500 344.38360596]
[43.33455276 354.60766602]
[39.36245728 369.07217407]
[53.22009277 374.86822510]
[66.22274780 382.38882446]
[78.15689850 391.51046753]
[88.82659149 402.08334351]
[98.05661011 413.93389893]
[105.69538879 426.86746216]
[111.61749268 440.67169189]
[115.72567749 455.11993408]
[117.95248413 469.97488403]
[118.26134491 484.99264526]
[116.64718628 499.92657471]
[113.13651276 514.53149414]
[107.78697968 528.56756592]
[100.68643188 541.80426025]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 196]
[34 195]
[36 193]
[37 192]
[38 191]
[39 190]
[42 186]
[43 185]
[44 184]
[46 183]
[47 182]
[48 181]
[49 177]
[50 176]
[51 175]
[52 169]
[54 167]
[55 166]
[56 165]
[57 164]
[60 162]
[61 161]
[62 160]
[67 159]
[68 158]
[69 157]
[70 156]
[73 155]
[74 154]
[75 153]
[76 152]
[79 149]
[80 148]
[81 147]
[82 140]
[83 139]
[84 138]
[87 135]
[88 134]
[89 133]
[90 132]
[91 131]
[92 130]
[93 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
