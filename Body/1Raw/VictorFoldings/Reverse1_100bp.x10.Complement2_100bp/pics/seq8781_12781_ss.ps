%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[93.77470398 618.95800781]
[82.96846771 629.41143799]
[70.58894348 637.94360352]
[56.97385406 644.32159424]
[42.49462509 648.37152100]
[27.54626465 649.98284912]
[12.53657246 649.11163330]
[-2.12497401 645.78161621]
[-16.03839874 640.08367920]
[-28.82413101 632.17327881]
[-40.13336945 622.26617432]
[-49.65758896 610.63262939]
[-57.13696289 597.59002686]
[-62.36744690 583.49420166]
[-65.20634460 568.72973633]
[-65.57621765 553.69934082]
[-63.46697617 538.81304932]
[-58.93615341 524.47705078]
[-52.10735703 511.08236694]
[-43.16688538 498.99444580]
[-32.35863495 488.54302979]
[-19.97746658 480.01330566]
[-6.36114693 473.63790894]
[8.11886120 469.59075928]
[23.06753159 467.98233032]
[38.07705307 468.85644531]
[41.39931488 454.22897339]
[44.72157288 439.60153198]
[36.59117126 427.17443848]
[39.75204086 412.29278564]
[52.84182739 403.84915161]
[56.16408539 389.22167969]
[59.48634720 374.59420776]
[54.76009750 360.46936035]
[65.36174774 348.72561646]
[68.68400574 334.09814453]
[71.23984528 319.31750488]
[73.02230835 304.42376709]
[74.80477142 289.53005981]
[76.58724213 274.63635254]
[70.41716003 261.07983398]
[79.73952484 248.29685974]
[81.52198792 233.40313721]
[83.30445862 218.50942993]
[84.75387573 203.57962036]
[85.86952209 188.62117004]
[86.98516846 173.66270447]
[88.10082245 158.70425415]
[89.21646881 143.74580383]
[90.33211517 128.78735352]
[91.44776917 113.82889557]
[83.77674103 98.91139984]
[93.37198639 85.15248871]
[94.26480103 70.17908478]
[84.26522064 81.35980225]
[69.83704376 85.46194458]
[55.45098877 81.21442413]
[45.56473923 69.93337250]
[43.24165344 55.11435699]
[49.20156479 41.34920120]
[61.59773254 32.90319824]
[76.58906555 32.39342499]
[89.53034210 39.97784424]
[96.41161346 53.30659485]
[99.29688263 38.58670044]
[102.18215942 23.86680984]
[105.06742859 9.14691925]
[107.95269775 -5.57297182]
[93.09273529 -14.95957470]
[82.99734497 -29.30430984]
[79.19263458 -46.39162827]
[82.23567200 -63.59507751]
[91.63309479 -78.28099823]
[105.92086029 -88.21169281]
[122.89229584 -91.88641357]
[125.11740875 -106.72045898]
[117.98194122 -123.69593048]
[129.44107056 -136.98709106]
[131.44508362 -151.85263062]
[133.44909668 -166.71815491]
[134.45335388 -181.68449402]
[134.45335388 -196.68449402]
[134.45335388 -211.68449402]
[134.45335388 -226.68449402]
[134.45335388 -241.68449402]
[134.45335388 -256.68450928]
[123.55880737 -267.81762695]
[123.77248383 -283.02975464]
[134.45335388 -293.34744263]
[134.45335388 -308.34744263]
[125.90153503 -318.00296021]
[126.21034241 -330.49649048]
[134.66897583 -339.14392090]
[134.89230347 -354.14224243]
[135.11563110 -369.14059448]
[135.33895874 -384.13894653]
[120.95764923 -388.79394531]
[108.58830261 -397.48248291]
[99.33080292 -409.43197632]
[94.00830841 -423.57983398]
[93.09410858 -438.66812134]
[96.66947937 -453.35510254]
[104.41650391 -466.33489990]
[115.64633179 -476.45333862]
[129.36039734 -482.81063843]
[144.33927917 -484.84161377]
[159.25103760 -482.36557007]
[172.76974487 -475.60275269]
[183.69332886 -465.15444946]
[191.05047607 -451.94976807]
[194.18696594 -437.16281128]
[192.82394409 -422.10845947]
[187.08256531 -408.12533569]
[177.47338867 -396.45678711]
[164.85084534 -388.14038086]
[150.33731079 -383.91561890]
[150.11398315 -368.91726685]
[149.89065552 -353.91891479]
[149.66732788 -338.92059326]
[159.02804565 -324.07659912]
[149.45335388 -308.34744263]
[149.45335388 -293.34744263]
[160.13423157 -283.02975464]
[160.34791565 -267.81762695]
[149.45335388 -256.68450928]
[149.45335388 -241.68449402]
[149.45335388 -226.68449402]
[149.45335388 -211.68449402]
[149.45335388 -196.68449402]
[149.45335388 -181.68449402]
[158.76972961 -193.44058228]
[172.92816162 -198.39422607]
[187.54151917 -195.01051331]
[198.08171082 -184.33790588]
[201.28271484 -169.68342590]
[196.15269470 -155.58793640]
[184.28121948 -146.41908264]
[169.34680176 -145.01791382]
[155.97703552 -151.81860352]
[148.31462097 -164.71414185]
[146.31060791 -149.84861755]
[144.30659485 -134.98307800]
[151.38888550 -125.17656708]
[149.84097290 -112.77545166]
[139.95144653 -104.49534607]
[137.72633362 -89.66130066]
[149.02180481 -84.11434937]
[158.31655884 -75.60467529]
[164.85473633 -64.81066895]
[168.10081482 -52.59701920]
[167.78346252 -39.94544601]
[163.91822815 -27.87580872]
[156.80700684 -17.36387444]
[147.01457214 -9.26244736]
[135.32369995 -4.23217773]
[122.67259216 -2.68769932]
[119.78732300 12.03219223]
[116.90204620 26.75208282]
[114.01677704 41.47197342]
[111.13150024 56.19186783]
[109.23821259 71.07189941]
[108.34539032 86.04530334]
[115.53700256 95.20619965]
[114.75726318 106.82658386]
[106.40621948 114.94454193]
[105.29057312 129.90299988]
[104.17491913 144.86145020]
[103.05927277 159.81990051]
[101.94362640 174.77835083]
[100.82798004 189.73681641]
[99.71232605 204.69526672]
[101.98040009 209.39663696]
[102.19668579 214.03414917]
[100.72909546 217.83694458]
[98.19817352 220.29188538]
[96.41571045 235.18560791]
[94.63323975 250.07933044]
[100.67582703 264.70114136]
[91.48095703 276.41882324]
[89.69849396 291.31253052]
[87.91602325 306.20623779]
[86.13356018 321.09997559]
[97.87094879 311.76007080]
[112.86862183 312.02420044]
[124.26984406 321.77160645]
[126.86213684 336.54592896]
[119.46032715 349.59249878]
[105.44843292 354.94662476]
[91.23249817 350.16049194]
[83.31147003 337.42041016]
[79.98921204 352.04788208]
[84.47782898 367.21899414]
[74.11380768 377.91647339]
[70.79154968 392.54394531]
[67.46928406 407.17138672]
[75.62745667 420.44097900]
[72.04983521 435.22799683]
[59.34903336 442.92376709]
[56.02677536 457.55123901]
[52.70451355 472.17871094]
[66.61903381 477.87396240]
[79.40629578 485.78192139]
[90.71743774 495.68685913]
[100.24390411 507.31854248]
[107.72578430 520.35968018]
[112.95898438 534.45446777]
[115.80072784 549.21844482]
[116.17350006 564.24877930]
[114.06712341 579.13543701]
[109.53906250 593.47235107]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 200]
[27 199]
[28 198]
[31 195]
[32 194]
[33 193]
[35 191]
[36 190]
[37 182]
[38 181]
[39 180]
[40 179]
[42 177]
[43 176]
[44 175]
[45 171]
[46 170]
[47 169]
[48 168]
[49 167]
[50 166]
[51 165]
[53 162]
[54 161]
[64 160]
[65 159]
[66 158]
[67 157]
[68 156]
[75 146]
[76 145]
[78 142]
[79 141]
[80 140]
[81 130]
[82 129]
[83 128]
[84 127]
[85 126]
[86 125]
[89 122]
[90 121]
[93 119]
[94 118]
[95 117]
[96 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
