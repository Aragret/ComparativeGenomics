%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[195.32046509 558.49261475]
[197.72831726 543.65954590]
[202.27030945 529.33514404]
[208.84962463 515.82476807]
[217.32603455 503.41638184]
[227.51885986 492.37445068]
[239.21084595 482.93435669]
[252.15275574 475.29730225]
[246.48997498 461.40725708]
[240.82719421 447.51724243]
[235.16439819 433.62722778]
[229.50161743 419.73718262]
[223.83883667 405.84716797]
[218.07279968 391.99966431]
[212.20384216 378.19549561]
[206.33486938 364.39132690]
[192.46856689 359.07522583]
[186.31994629 345.15942383]
[191.98999023 330.65121460]
[179.88978577 321.96591187]
[181.61074829 306.23858643]
[175.74179077 292.43438721]
[169.87283325 278.63021851]
[164.00386047 264.82604980]
[158.13490295 251.02186584]
[152.26594543 237.21769714]
[146.39698792 223.41351318]
[134.29678345 214.72821045]
[136.01774597 199.00088501]
[130.14878845 185.19670105]
[124.17722321 171.43659973]
[118.10339355 157.72132874]
[103.38971710 148.15708923]
[105.50313568 129.86460876]
[99.22577667 116.24129486]
[85.28363037 106.91429901]
[87.00399017 90.22847748]
[80.52449036 76.70012665]
[74.04499817 63.17178345]
[67.56549835 49.64343643]
[61.08600235 36.11509323]
[54.60650635 22.58674622]
[48.12701035 9.05840111]
[41.64751434 -4.46994400]
[35.11815262 -10.85784149]
[35.17393875 -18.24828529]
[28.89657974 -31.87160301]
[22.61921883 -45.49491882]
[9.81679535 -54.79053879]
[11.51772976 -69.58769989]
[5.24036932 -83.21102142]
[-11.27884579 -88.96730804]
[-18.38404655 -104.58239746]
[-12.12305641 -120.19132996]
[-18.60255241 -133.71968079]
[-25.08204842 -147.24801636]
[-29.38964272 -150.19619751]
[-31.88600159 -154.11045837]
[-32.50643158 -158.13911438]
[-31.53364754 -161.52822876]
[-44.05363083 -171.20089722]
[-41.91288376 -185.94085693]
[-47.78184509 -199.74504089]
[-53.65080643 -213.54920959]
[-66.63893127 -217.11616516]
[-75.07807922 -227.36268616]
[-76.06028748 -240.40559387]
[-69.45037842 -251.46627808]
[-75.11316681 -265.35629272]
[-80.77594757 -279.24633789]
[-86.43873596 -293.13635254]
[-92.10152435 -307.02636719]
[-106.70768738 -303.48834229]
[-121.67803192 -302.16687012]
[-136.67813110 -303.09146118]
[-151.37286377 -306.24145508]
[-165.43394470 -311.54650879]
[-178.54724121 -318.88812256]
[-190.41979980 -328.10223389]
[-200.78640747 -338.98300171]
[-209.41543579 -351.28738403]
[-216.11412048 -364.74044800]
[-220.73281860 -379.04168701]
[-223.16833496 -393.87158203]
[-223.36627197 -408.89883423]
[-221.32218933 -423.78775024]
[-217.08177185 -438.20565796]
[-210.73974609 -451.83050537]
[-202.43778992 -464.35787964]
[-192.36137390 -475.50793457]
[-180.73561096 -485.03155518]
[-167.82022095 -492.71597290]
[-153.90374756 -498.38955688]
[-139.29708862 -501.92550659]
[-124.32654572 -503.24487305]
[-109.32658386 -502.31814575]
[-94.63230896 -499.16601562]
[-80.57198334 -493.85897827]
[-67.45972443 -486.51550293]
[-55.58847046 -477.29971313]
[-45.22342300 -466.41744995]
[-36.59614944 -454.11184692]
[-29.89937592 -440.65780640]
[-25.28271866 -426.35592651]
[-22.84931183 -411.52569580]
[-22.65351868 -396.49838257]
[-24.69971466 -381.60977173]
[-28.94218636 -367.19247437]
[-35.28615570 -353.56851196]
[-43.58989716 -341.04232788]
[-53.66790009 -329.89370728]
[-65.29501343 -320.37176514]
[-78.21149445 -312.68917847]
[-72.54871368 -298.79913330]
[-66.88592529 -284.90911865]
[-61.22313690 -271.01907349]
[-55.56035233 -257.12905884]
[-39.79435349 -251.27482605]
[-33.00688934 -235.51902771]
[-39.84662628 -219.41818237]
[-33.97766876 -205.61399841]
[-28.10870743 -191.80981445]
[-16.00851250 -183.12451172]
[-17.72947121 -167.39718628]
[-11.55370235 -153.72750854]
[-5.07420683 -140.19917297]
[1.40528893 -126.67082214]
[14.03788567 -124.13172913]
[23.03580856 -114.63860321]
[24.95142746 -101.50312042]
[18.86368561 -89.48838043]
[25.14104652 -75.86506653]
[37.49446869 -67.54387665]
[36.24253464 -51.77227783]
[42.51989746 -38.14896393]
[48.79725647 -24.52564621]
[55.17586136 -10.94944000]
[61.65535736 2.57890558]
[68.13484955 16.10725212]
[74.61434937 29.63559723]
[81.09384155 43.16394424]
[87.57334137 56.69228745]
[94.05283356 70.22063446]
[100.53233337 83.74897766]
[111.26392365 88.27382660]
[116.21649170 98.81485748]
[112.84909058 109.96393585]
[119.12644958 123.58724976]
[130.93414307 128.77774048]
[135.88211060 140.25386047]
[131.81866455 151.64749146]
[137.89248657 165.36276245]
[144.22877502 171.94223022]
[143.95295715 179.32774353]
[149.82192993 193.13191223]
[162.34190369 202.80459595]
[160.20115662 217.54455566]
[166.07011414 231.34872437]
[171.93908691 245.15290833]
[177.80804443 258.95709229]
[183.67700195 272.76126099]
[189.54595947 286.56542969]
[195.41493225 300.36962891]
[207.93490601 310.04229736]
[205.79415894 324.78225708]
[220.17617798 330.76516724]
[225.93148804 344.84817505]
[220.13905334 358.52236938]
[226.00801086 372.32653809]
[231.87696838 386.13070679]
[238.11459351 392.80380249]
[237.72885132 400.18438721]
[243.39164734 414.07440186]
[249.05442810 427.96444702]
[254.71720886 441.85446167]
[260.38000488 455.74447632]
[266.04278564 469.63452148]
[280.63531494 466.04614258]
[295.59478760 464.62075806]
[310.60238647 465.38879395]
[325.33819580 468.33386230]
[339.48815918 473.39318848]
[352.75064087 480.45892334]
[364.84292603 489.38049316]
[375.50732422 499.96768188]
[384.51647949 511.99484253]
[391.67837524 525.20562744]
[396.84036255 539.31848145]
[399.89242554 554.03247070]
[400.76947021 569.03411865]
[399.45281982 584.00354004]
[395.97052002 598.62176514]
[390.39685059 612.57708740]
[382.85058594 625.57214355]
[373.49255371 637.32995605]
[362.52221680 647.59979248]
[350.17346191 656.16284180]
[336.70947266 662.83660889]
[322.41723633 667.47869873]
[307.60134888 669.99035645]
[292.57769775 670.31787109]
[277.66644287 668.45440674]
[263.18545532 664.43957520]
[249.44338989 658.35900879]
[236.73315430 650.34228516]
[225.32566833 640.56030273]
[215.46408081 629.22155762]
[207.35859680 616.56774902]
[201.18199158 602.86859131]
[197.06590271 588.41607666]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 177]
[9 176]
[10 175]
[11 174]
[12 173]
[13 172]
[14 170]
[15 169]
[16 168]
[19 165]
[21 163]
[22 162]
[23 161]
[24 160]
[25 159]
[26 158]
[27 157]
[29 155]
[30 154]
[31 152]
[32 151]
[34 148]
[35 147]
[37 144]
[38 143]
[39 142]
[40 141]
[41 140]
[42 139]
[43 138]
[44 137]
[46 136]
[47 135]
[48 134]
[50 132]
[51 131]
[54 127]
[55 126]
[56 125]
[60 124]
[62 122]
[63 121]
[64 120]
[68 117]
[69 116]
[70 115]
[71 114]
[72 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
