%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[164.11323547 498.37051392]
[160.16024780 483.89016724]
[157.52120972 469.11380005]
[156.21734619 454.16030884]
[156.25917053 439.15017700]
[157.64633179 424.20419312]
[160.36767578 409.44274902]
[164.40127563 394.98464966]
[169.71466064 380.94635010]
[176.26506042 367.44085693]
[183.99971008 354.57690430]
[192.85636902 342.45806885]
[202.76368713 331.18194580]
[213.64193726 320.83929443]
[225.40348816 311.51342773]
[217.17468262 298.97201538]
[208.94587708 286.43063354]
[200.71707153 273.88922119]
[184.64085388 266.85202026]
[183.74342346 248.45973206]
[175.32881165 236.04223633]
[166.91418457 223.62474060]
[154.04470825 222.98767090]
[143.73811340 214.93434143]
[139.89515686 202.22834778]
[144.13327026 189.44346619]
[135.90444946 176.90206909]
[127.67565155 164.36067200]
[119.44683838 151.81927490]
[111.21803284 139.27787781]
[110.46337128 154.25888062]
[102.40249634 166.90885925]
[89.14249420 173.92115784]
[74.14949799 173.46276855]
[61.34264374 165.65351868]
[54.06961441 152.53471375]
[54.23155594 137.53558350]
[61.78614426 124.57687378]
[74.75862122 117.04595184]
[89.75801849 116.91138458]
[102.86288452 124.20773315]
[96.58552551 110.58441162]
[90.38861084 124.24451447]
[76.39669800 129.65063477]
[62.62497330 123.70591736]
[56.96252060 109.81575012]
[62.65304565 95.93706512]
[76.43675232 90.02019501]
[90.41703033 95.45394135]
[85.38011169 81.32491302]
[80.34319305 67.19588470]
[75.30628204 53.06685257]
[70.26936340 38.93782425]
[64.43999481 31.90530968]
[65.26434326 24.56077194]
[53.49845886 13.98369503]
[56.72958374 -0.55621880]
[51.90358734 -14.75867462]
[47.07758713 -28.96113014]
[42.25159073 -43.16358566]
[34.66717911 -30.22230721]
[20.18875885 -26.30116653]
[7.11022663 -33.64636993]
[2.92356062 -48.05025101]
[10.02707291 -61.26161575]
[24.35154724 -65.71238708]
[37.69065857 -58.85369492]
[34.15098572 -73.43006897]
[30.61131477 -88.00644684]
[27.07164192 -102.58281708]
[23.53196907 -117.15919495]
[8.62626171 -115.33261871]
[-6.39071274 -115.24887848]
[-21.31586456 -116.90911102]
[-35.94734955 -120.29084778]
[-50.08729172 -125.34837341]
[-63.54446793 -132.01327515]
[-76.13687897 -140.19543457]
[-87.69423676 -149.78417969]
[-98.06022644 -160.64984131]
[-107.09467316 -172.64547729]
[-114.67539215 -185.60887146]
[-120.69986725 -199.36466980]
[-125.08661652 -213.72688293]
[-127.77631378 -228.50125122]
[-128.73258972 -243.48797607]
[-127.94250488 -258.48437500]
[-125.41675568 -273.28765869]
[-121.18949127 -287.69763184]
[-115.31787872 -301.51937866]
[-107.88133240 -314.56597900]
[-98.98042297 -326.66104126]
[-88.73551178 -337.64096069]
[-77.28516388 -347.35723877]
[-64.78423309 -355.67846680]
[-51.40176773 -362.49215698]
[-37.31875992 -367.70611572]
[-22.72566414 -371.24984741]
[-7.81983280 -373.07543945]
[7.19714689 -373.15817261]
[22.12218857 -371.49694824]
[36.75344849 -368.11422729]
[50.89305115 -363.05575562]
[64.34978485 -356.38995361]
[76.94165039 -348.20697021]
[88.49835968 -338.61743164]
[98.86363220 -327.75106812]
[107.89727783 -315.75485229]
[115.47713470 -302.79095459]
[121.50068665 -289.03472900]
[125.88647461 -274.67224121]
[128.57519531 -259.89770508]
[129.53045654 -244.91090393]
[128.73937988 -229.91455078]
[126.21263885 -215.11143494]
[121.98441315 -200.70176697]
[116.11188507 -186.88040161]
[108.67446899 -173.83427429]
[99.77274323 -161.73982239]
[89.52710724 -150.76060486]
[78.07611084 -141.04508972]
[65.57462311 -132.72467041]
[52.19169998 -125.91188812]
[38.10834503 -120.69886780]
[41.64801788 -106.12248993]
[45.18769073 -91.54611969]
[48.72736359 -76.96974182]
[52.26703644 -62.39336395]
[56.45404434 -47.98958206]
[61.28004456 -33.78712845]
[66.10604095 -19.58467293]
[70.93203735 -5.38221645]
[82.35273743 4.17900515]
[79.46679688 19.73477364]
[84.39839172 33.90090942]
[89.43531036 48.02993774]
[94.47222137 62.15896606]
[99.50914001 76.28799438]
[104.54605865 90.41703033]
[110.20883942 104.30705261]
[116.48620605 117.93036652]
[123.75942993 131.04905701]
[131.98823547 143.59046936]
[140.21705627 156.13186646]
[148.44586182 168.67326355]
[156.67466736 181.21466064]
[173.86500549 184.45678711]
[183.20796204 198.84512329]
[179.33168030 215.21012878]
[187.74630737 227.62762451]
[196.16091919 240.04512024]
[208.65690613 243.24092102]
[215.40982056 253.75671387]
[213.25846863 265.66043091]
[221.48727417 278.20181274]
[229.71607971 290.74322510]
[237.94488525 303.28460693]
[251.18222046 296.20794678]
[265.00061035 290.34634399]
[279.28881836 285.74700928]
[293.93176270 282.44702148]
[308.81158447 280.47290039]
[323.80847168 279.84054565]
[338.80166626 280.55508423]
[353.67044067 282.61071777]
[368.29507446 285.99093628]
[382.55786133 290.66848755]
[396.34390259 296.60571289]
[409.54226685 303.75485229]
[422.04663086 312.05828857]
[433.75631714 321.44918823]
[444.57708740 331.85195923]
[454.42175293 343.18280029]
[463.21112061 355.35052490]
[470.87438965 368.25714111]
[477.34982300 381.79873657]
[482.58535767 395.86627197]
[486.53875732 410.34649658]
[489.17825317 425.12280273]
[490.48257446 440.07623291]
[490.44122314 455.08639526]
[489.05450439 470.03240967]
[486.33361816 484.79394531]
[482.30047607 499.25213623]
[476.98751831 513.29064941]
[470.43753052 526.79632568]
[462.70324707 539.66052246]
[453.84698486 551.77960205]
[443.94000244 563.05603027]
[433.06207275 573.39898682]
[421.30078125 582.72521973]
[408.75085449 590.95965576]
[395.51330566 598.03594971]
[381.69476318 603.89709473]
[367.40640259 608.49597168]
[352.76336670 611.79553223]
[337.88348389 613.76922607]
[322.88656616 614.40112305]
[307.89340210 613.68609619]
[293.02468872 611.63000488]
[278.40014648 608.24938965]
[264.13751221 603.57135010]
[250.35163879 597.63372803]
[237.15350342 590.48419189]
[224.64939880 582.18035889]
[212.93998718 572.78912354]
[202.11955261 562.38598633]
[192.27520752 551.05487061]
[183.48622131 538.88684082]
[175.82336426 525.97998047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 157]
[16 156]
[17 155]
[18 154]
[20 151]
[21 150]
[22 149]
[26 146]
[27 145]
[28 144]
[29 143]
[30 142]
[41 141]
[42 140]
[49 139]
[50 138]
[51 137]
[52 136]
[53 135]
[55 134]
[57 132]
[58 131]
[59 130]
[60 129]
[67 128]
[68 127]
[69 126]
[70 125]
[71 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
