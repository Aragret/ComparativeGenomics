%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[125.89310455 597.64190674]
[110.78023529 596.96636963]
[96.61649323 591.65191650]
[84.78949738 582.21911621]
[76.45793915 569.59216309]
[72.43806458 555.00805664]
[73.12368774 539.89562988]
[78.44764709 525.73547363]
[87.88835144 513.91479492]
[100.52090454 505.59170532]
[115.10768127 501.58160400]
[115.77746582 486.59655762]
[116.44725800 471.61151123]
[117.11704254 456.62649536]
[117.78682709 441.64144897]
[118.45661163 426.65640259]
[111.29532623 413.59634399]
[119.64112091 400.15542603]
[120.31090546 385.17037964]
[120.53423309 370.17205811]
[120.31090546 355.17370605]
[120.08757782 340.17538452]
[119.30625916 325.19573975]
[117.96802521 310.25555420]
[116.62979126 295.31536865]
[115.29155731 280.37518311]
[113.62001801 265.46859741]
[111.61599731 250.60307312]
[109.61198425 235.73754883]
[107.60797119 220.87202454]
[105.60395813 206.00648499]
[94.36487579 199.70471191]
[88.72330475 187.90408325]
[90.94104767 174.81622314]
[100.42936707 165.25660706]
[98.64690399 150.36288452]
[96.86443329 135.46916199]
[95.08197021 120.57545471]
[93.29950714 105.68173218]
[91.07179260 103.60163879]
[89.55170441 100.66499329]
[89.05795288 97.13233948]
[89.80853271 93.37828827]
[91.88158417 89.85189819]
[90.98876190 74.87849426]
[90.09594727 59.90508652]
[86.66488647 45.30276489]
[80.79592896 31.49858856]
[74.92696381 17.69441223]
[69.05800629 3.89023495]
[63.18904495 -9.91394234]
[58.51896667 4.34054422]
[46.43013763 13.22087288]
[31.43139458 13.41489983]
[19.11689377 4.85025978]
[14.07964134 -9.27865028]
[18.19840813 -23.70209503]
[29.93699646 -33.04048538]
[44.91720200 -33.81083679]
[57.55252457 -25.72492027]
[53.36551285 -40.12870407]
[49.17850113 -54.53248596]
[44.67087173 -68.83917236]
[39.84487534 -83.04162598]
[35.01887894 -97.24407959]
[30.19287872 -111.44654083]
[25.15418434 -97.31814575]
[13.34229946 -88.07263947]
[-1.58273351 -86.57484436]
[-14.99623108 -93.28886414]
[-22.74187469 -106.13429260]
[-22.41959190 -121.13082886]
[-14.12924767 -133.63163757]
[-0.43969294 -139.76319885]
[14.40721321 -137.62559509]
[25.81113815 -127.88095856]
[22.92586517 -142.60084534]
[20.04059219 -157.32073975]
[9.79329395 -169.37492371]
[14.93799877 -183.35281372]
[12.05272675 -198.07270813]
[9.16745377 -212.79260254]
[6.28218126 -227.51248169]
[3.39690852 -242.23237610]
[-6.85038996 -254.28656006]
[-1.70568526 -268.26446533]
[-4.59095764 -282.98434448]
[-19.64781570 -283.84564209]
[-34.01718521 -288.42517090]
[-46.79579544 -296.43502808]
[-57.18037415 -307.37173462]
[-64.51813507 -320.54779053]
[-68.34782410 -335.13491821]
[-68.42869568 -350.21615601]
[-64.75567627 -364.84353638]
[-57.55965042 -378.09750366]
[-47.29296875 -389.14495850]
[-34.60099792 -397.29141235]
[-20.28157043 -402.02478027]
[-5.23481655 -403.04751587]
[9.59341240 -400.29534912]
[23.27100182 -393.94128418]
[34.93816376 -384.38470459]
[43.86149597 -372.22637939]
[49.48006821 -358.23056030]
[51.44068909 -343.27706909]
[49.62011719 -328.30590820]
[44.13279343 -314.25811768]
[35.32365417 -302.01681519]
[23.74644852 -292.35144043]
[10.12893391 -285.86962891]
[13.01420593 -271.14971924]
[23.05513000 -260.14840698]
[18.11680031 -245.11764526]
[21.00207329 -230.39776611]
[23.88734436 -215.67787170]
[26.77261734 -200.95797729]
[29.65789032 -186.23808289]
[39.69881439 -175.23675537]
[34.76048279 -160.20600891]
[37.64575577 -145.48611450]
[40.53102875 -130.76623535]
[44.39533615 -116.27253723]
[49.22133255 -102.07008362]
[54.04732895 -87.86762238]
[58.87332916 -73.66516876]
[61.85749435 -71.78711700]
[64.08026886 -68.37034607]
[64.82835388 -63.78845978]
[63.58228302 -58.71949768]
[67.76929474 -44.31571579]
[71.95630646 -29.91193199]
[76.99322510 -15.78290272]
[82.86218262 -1.97872591]
[88.73114014 11.82545090]
[94.60010529 25.62962723]
[100.46906281 39.43380356]
[101.36442566 24.46055031]
[105.90667725 10.16481972]
[113.81806183 -2.57920051]
[124.61479187 -12.99220753]
[137.63662720 -20.43744087]
[152.08731079 -24.45962334]
[167.08314514 -24.81279755]
[181.70715332 -21.47536469]
[195.06506348 -14.65141010]
[206.34002686 -4.75822258]
[214.84259033 7.59922647]
[220.05279541 21.66527367]
[221.65205383 36.57977676]
[219.54257202 51.43070221]
[213.85334778 65.30992126]
[204.93225098 77.36870575]
[193.32484436 86.86965179]
[179.74092102 93.23178864]
[165.01112366 96.06605530]
[150.03619385 95.19914246]
[135.73185730 90.68405151]
[122.97282410 82.79689789]
[112.53932953 72.01997375]
[105.06935120 59.01227188]
[105.96217346 73.98567963]
[106.85498810 88.95908356]
[108.19322205 103.89926910]
[109.97568512 118.79298401]
[111.75815582 133.68670654]
[113.54061890 148.58041382]
[115.32308197 163.47413635]
[129.27073669 174.03265381]
[131.22824097 191.07621765]
[120.46949005 204.00247192]
[122.47350311 218.86801147]
[124.47751617 233.73353577]
[126.48152924 248.59906006]
[128.48554993 263.46459961]
[131.67742920 267.59484863]
[132.84872437 272.08721924]
[132.19984436 276.11138916]
[130.23173523 279.03695679]
[131.56997681 293.97714233]
[132.90820312 308.91732788]
[134.24644470 323.85751343]
[145.72094727 314.19647217]
[160.45774841 316.99411011]
[167.59341431 330.18814087]
[161.86779785 344.05239868]
[147.50161743 348.36666870]
[135.08592224 339.95205688]
[135.30924988 354.95037842]
[135.53257751 369.94873047]
[137.89068604 373.59469604]
[138.86767578 377.41702271]
[138.57771301 380.95980835]
[137.27125549 383.85113525]
[135.29594421 385.84017944]
[134.62615967 400.82519531]
[141.73953247 414.95709229]
[133.44165039 427.32620239]
[132.77186584 442.31121826]
[132.10208130 457.29626465]
[131.43229675 472.28131104]
[130.76251221 487.26635742]
[130.09272766 502.25137329]
[144.26358032 507.54687500]
[156.10319519 516.96380615]
[164.45167542 529.57958984]
[168.49108887 544.15826416]
[167.82571411 559.27160645]
[162.52073669 573.43890381]
[153.09588623 585.27221680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 203]
[12 202]
[13 201]
[14 200]
[15 199]
[16 198]
[18 196]
[19 195]
[20 190]
[21 189]
[22 188]
[23 182]
[24 181]
[25 180]
[26 179]
[27 175]
[28 174]
[29 173]
[30 172]
[31 171]
[35 168]
[36 167]
[37 166]
[38 165]
[39 164]
[44 163]
[45 162]
[46 161]
[47 137]
[48 136]
[49 135]
[50 134]
[51 133]
[60 132]
[61 131]
[62 130]
[63 126]
[64 125]
[65 124]
[66 123]
[76 122]
[77 121]
[78 120]
[80 118]
[81 117]
[82 116]
[83 115]
[84 114]
[86 112]
[87 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
