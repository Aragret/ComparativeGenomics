%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[54.73455811 571.38043213]
[44.58168030 582.43487549]
[33.51608658 592.57556152]
[21.61970711 601.72747803]
[8.98061562 609.82281494]
[-4.30760860 616.80169678]
[-18.14658356 622.61242676]
[-32.43384933 627.21191406]
[-47.06362152 630.56616211]
[-61.92758942 632.65039062]
[-76.91570282 633.44909668]
[-91.91699219 632.95635986]
[-106.82038879 631.17584229]
[-121.51555634 628.12078857]
[-135.89369202 623.81372070]
[-149.84834290 618.28662109]
[-163.27619934 611.58032227]
[-176.07783508 603.74456787]
[-188.15846252 594.83728027]
[-199.42866516 584.92443848]
[-209.80497742 574.07946777]
[-219.21057129 562.38262939]
[-227.57583618 549.92053223]
[-234.83882141 536.78540039]
[-240.94575500 523.07458496]
[-245.85142517 508.88955688]
[-249.51950073 494.33526611]
[-251.92283630 479.51956177]
[-253.04364014 464.55209351]
[-252.87359619 449.54367065]
[-251.41398621 434.60543823]
[-248.67559814 419.84796143]
[-244.67871094 405.38055420]
[-239.45292664 391.31027222]
[-233.03694153 377.74133301]
[-225.47822571 364.77416992]
[-216.83277893 352.50479126]
[-207.16458130 341.02404785]
[-196.54522705 330.41693115]
[-185.05332947 320.76199341]
[-172.77400208 312.13067627]
[-159.79812622 304.58694458]
[-146.22178650 298.18658447]
[-132.14549255 292.97705078]
[-117.67346191 288.99685669]
[-102.91284943 286.27548218]
[-87.97293854 284.83312988]
[-72.96434021 284.68038940]
[-57.99816895 285.81845093]
[-43.18523407 288.23886108]
[-28.63521194 291.92373657]
[-14.45582104 296.84576416]
[-0.75204557 302.96850586]
[6.52118397 289.84982300]
[13.79441357 276.73110962]
[21.06764221 263.61242676]
[28.34087181 250.49372864]
[27.74521255 235.61103821]
[41.20355225 227.29338074]
[48.08296585 213.96394348]
[54.56246185 200.43559265]
[61.04195404 186.90725708]
[67.52145386 173.37890625]
[73.08068085 159.44711304]
[77.69468689 145.17437744]
[82.30869293 130.90164185]
[86.92270660 116.62890625]
[91.53671265 102.35617828]
[90.38395691 99.53471375]
[90.23234558 96.23144531]
[91.26229095 92.81638336]
[93.51501465 89.72098541]
[96.87356567 87.38579559]
[102.32892609 73.41300201]
[107.78427887 59.44020081]
[113.23963928 45.46740341]
[118.69499207 31.49460602]
[117.90612030 26.33468819]
[119.05999756 21.83781624]
[121.57874298 18.63297653]
[124.71855927 17.02864456]
[130.79238892 3.31337762]
[136.86622620 -10.40188885]
[142.94006348 -24.11715508]
[149.01390076 -37.83242416]
[155.08772278 -51.54768753]
[161.16156006 -65.26295471]
[167.23539734 -78.97822571]
[173.30923462 -92.69348907]
[178.13522339 -106.89594269]
[181.67489624 -121.47232056]
[185.21456909 -136.04869080]
[188.42784119 -150.70048523]
[191.31312561 -165.42037964]
[194.19839478 -180.14025879]
[197.08366394 -194.86015320]
[192.14533997 -209.89091492]
[202.18626404 -220.89222717]
[205.07153320 -235.61212158]
[191.34719849 -241.83622742]
[179.42855835 -251.05807495]
[169.95834351 -262.78036499]
[163.44731140 -276.37091064]
[160.24655151 -291.09680176]
[160.52871704 -306.16387939]
[164.27856445 -320.75961304]
[171.29386902 -334.09686279]
[181.19630432 -345.45635986]
[193.45187378 -354.22552490]
[207.39961243 -359.93142700]
[222.28735352 -362.26635742]
[237.31221008 -361.10437012]
[251.66392517 -356.50817871]
[264.56854248 -348.72564697]
[275.33007812 -338.17642212]
[283.36822510 -325.42947388]
[288.24948120 -311.17218018]
[289.71060181 -296.17346191]
[287.67279053 -281.24215698]
[282.24594116 -267.18347168]
[273.72274780 -254.75561523]
[262.56283569 -244.62878418]
[249.36801147 -237.34912109]
[234.84989929 -233.30917358]
[219.79142761 -232.72685242]
[216.90614319 -218.00695801]
[222.05085754 -204.02906799]
[211.80355835 -191.97488403]
[208.91828918 -177.25498962]
[206.03300476 -162.53509521]
[203.14773560 -147.81521606]
[204.80081177 -144.70077515]
[205.02749634 -140.63093567]
[203.39520264 -136.28479004]
[199.79095459 -132.50901794]
[196.25128174 -117.93264771]
[192.71160889 -103.35626984]
[203.58590698 -113.68824768]
[217.83944702 -118.36119080]
[232.72010803 -116.47283173]
[245.35466003 -108.38777924]
[253.30357361 -95.66712952]
[255.03202820 -80.76705170]
[250.20629883 -66.56450653]
[239.75814819 -55.80178452]
[225.70495605 -50.55699921]
[210.76017761 -51.84284210]
[197.80940247 -59.41102600]
[189.35322571 -71.80026245]
[187.02449036 -86.61965179]
[180.95066833 -72.90438843]
[174.87683105 -59.18912125]
[168.80299377 -45.47385406]
[162.72915649 -31.75858879]
[156.65533447 -18.04332161]
[150.58149719 -4.32805538]
[144.50765991 9.38721180]
[138.43382263 23.10247803]
[132.66778564 36.94996262]
[127.21243286 50.92276001]
[121.75708008 64.89556122]
[116.30171967 78.86835480]
[110.84636688 92.84115601]
[105.80944824 106.97018433]
[101.19544220 121.24291992]
[96.58142853 135.51565552]
[91.96742249 149.78839111]
[87.35340881 164.06111145]
[99.83425140 155.74075317]
[114.82997131 155.38241577]
[127.69398499 163.09715271]
[134.44023132 176.49447632]
[132.97831726 191.42306519]
[123.76123047 203.25714111]
[109.64498901 208.32978821]
[95.00366211 205.06918335]
[84.37402344 194.48567200]
[81.04979706 179.85839844]
[74.57030487 193.38674927]
[68.09080505 206.91510010]
[61.61130905 220.44343567]
[62.09893799 224.75808716]
[61.27144623 228.61552429]
[59.43405533 231.65844727]
[56.97667313 233.66540527]
[54.32224655 234.56660461]
[54.39767456 250.38763428]
[41.45956802 257.76696777]
[34.18633652 270.88565063]
[26.91310692 284.00436401]
[19.63987732 297.12304688]
[12.36664867 310.24172974]
[24.81953812 318.62069702]
[36.50602722 328.03915405]
[47.33958817 338.42739868]
[57.24001694 349.70849609]
[66.13401031 361.79891968]
[73.95571899 374.60916138]
[80.64723969 388.04437256]
[86.15901184 402.00509644]
[90.45024872 416.38793945]
[93.48916626 431.08645630]
[95.25326538 445.99182129]
[95.72949219 460.99365234]
[94.91431427 475.98086548]
[92.81376648 490.84252930]
[89.44340515 505.46859741]
[84.82818604 519.75079346]
[79.00227356 533.58337402]
[72.00880432 546.86395264]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 192]
[54 191]
[55 190]
[56 189]
[57 188]
[59 186]
[60 181]
[61 180]
[62 179]
[63 178]
[64 168]
[65 167]
[66 166]
[67 165]
[68 164]
[73 163]
[74 162]
[75 161]
[76 160]
[77 159]
[81 158]
[82 157]
[83 156]
[84 155]
[85 154]
[86 153]
[87 152]
[88 151]
[89 150]
[90 137]
[91 136]
[92 135]
[93 131]
[94 130]
[95 129]
[96 128]
[98 126]
[99 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
