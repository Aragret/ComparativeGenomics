%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[146.96911621 375.27661133]
[135.16682434 384.85650635]
[120.59543610 389.18582153]
[105.47698975 387.60440063]
[92.11692810 380.35336304]
[82.55257416 368.53848267]
[78.24242401 353.96139526]
[79.84374237 338.84506226]
[87.11232758 325.49453735]
[98.93978882 315.94573975]
[113.52252197 311.65478516]
[115.08304596 296.73617554]
[116.64356995 281.81756592]
[118.20408630 266.89895630]
[119.76461029 251.98034668]
[121.32513428 237.06175232]
[122.88565826 222.14314270]
[121.65868378 207.19340515]
[117.68658447 192.72888184]
[113.71449280 178.26435852]
[99.73457336 173.19485474]
[91.32093048 160.71789551]
[91.87394714 145.50120544]
[101.39098358 133.38789368]
[97.41889191 118.92337799]
[84.87813568 111.66557312]
[81.04122162 97.69329834]
[88.11658478 85.04872131]
[84.14449310 70.58419800]
[80.17239380 56.11967468]
[76.20029449 41.65514755]
[70.91012573 34.20854187]
[72.27845764 26.94565964]
[68.52215576 12.42360115]
[64.76585388 -2.09845805]
[61.00955582 -16.62051773]
[57.25325394 -31.14257622]
[53.49695206 -45.66463470]
[47.11834717 -59.24084473]
[38.33774567 -71.40229797]
[29.55714226 -83.56375122]
[20.77653885 -95.72521210]
[11.99593544 -107.88666534]
[4.43525696 -113.01248169]
[3.17672896 -120.29518890]
[-5.42183495 -132.58602905]
[-14.02039909 -144.87686157]
[-22.61896324 -157.16770935]
[-31.21752739 -169.45854187]
[-39.81608963 -181.74937439]
[-52.82715988 -174.26541138]
[-66.44875336 -167.96066284]
[-80.57425690 -162.88447571]
[-95.09312439 -159.07658386]
[-109.89172363 -156.56677246]
[-124.85423279 -155.37471008]
[-139.86354065 -155.50970459]
[-154.80218506 -156.97070312]
[-169.55325317 -159.74627686]
[-184.00126648 -163.81471252]
[-198.03318787 -169.14414978]
[-211.53918457 -175.69288635]
[-224.41352844 -183.40966797]
[-236.55548096 -192.23410034]
[-247.87001038 -202.09710693]
[-258.26855469 -212.92152405]
[-267.66973877 -224.62260437]
[-276.00000000 -237.10877991]
[-283.19409180 -250.28233337]
[-289.19577026 -264.04016113]
[-293.95800781 -278.27456665]
[-297.44357300 -292.87417603]
[-299.62518311 -307.72470093]
[-300.48571777 -322.70993042]
[-300.01849365 -337.71258545]
[-298.22717285 -352.61520386]
[-295.12573242 -367.30120850]
[-290.73846436 -381.65563965]
[-285.09970093 -395.56616211]
[-278.25360107 -408.92385864]
[-270.25369263 -421.62423706]
[-261.16265869 -433.56787109]
[-251.05157471 -444.66128540]
[-239.99963379 -454.81765747]
[-228.09330750 -463.95751953]
[-215.42578125 -472.00930786]
[-202.09620667 -478.91003418]
[-188.20889282 -484.60568237]
[-173.87254333 -489.05163574]
[-159.19935608 -492.21316528]
[-144.30416870 -494.06549072]
[-129.30355835 -494.59408569]
[-114.31494141 -493.79489136]
[-99.45560455 -491.67407227]
[-84.84185791 -488.24829102]
[-70.58806610 -483.54434204]
[-56.80580139 -477.59902954]
[-43.60291672 -470.45889282]
[-31.08275223 -462.17984009]
[-19.34329224 -452.82659912]
[-8.47641945 -442.47244263]
[1.43281770 -431.19836426]
[10.30686569 -419.09262085]
[18.07627106 -406.24996948]
[24.68022537 -392.77090454]
[30.06704330 -378.76092529]
[34.19456863 -364.32965088]
[37.03049088 -349.59008789]
[38.55261993 -334.65753174]
[38.74903870 -319.64889526]
[37.61821365 -304.68164062]
[35.16899109 -289.87289429]
[31.42054558 -275.33856201]
[26.40221024 -261.19241333]
[20.15326118 -247.54512024]
[12.72260666 -234.50354004]
[4.16840267 -222.16970825]
[-5.44240141 -210.64018250]
[-16.03458595 -200.00518799]
[-27.52525330 -190.34794617]
[-18.92668915 -178.05711365]
[-10.32812500 -165.76626587]
[-1.72956097 -153.47543335]
[6.86900282 -141.18458557]
[15.46756744 -128.89375305]
[24.15739059 -116.66726685]
[32.93799591 -104.50581360]
[41.71859741 -92.34436035]
[50.49920273 -80.18289948]
[59.27980423 -68.02144623]
[56.78781891 -82.81299591]
[57.72671890 -97.78358459]
[62.04725647 -112.14788055]
[69.52278137 -125.15235901]
[79.76114655 -136.11483765]
[92.22526550 -144.46023560]
[106.26129150 -149.75079346]
[121.13293457 -151.70895386]
[136.06004333 -150.23199463]
[150.25958252 -145.39741516]
[162.98666382 -137.45881653]
[173.57365417 -126.83264923]
[181.46517944 -114.07632446]
[186.24728394 -99.85902405]
[187.66908264 -84.92655945]
[185.65599060 -70.06225586]
[180.31362915 -56.04586792]
[171.92224121 -43.61266327]
[160.92201233 -33.41486740]
[147.89001465 -25.98742867]
[133.50985718 -21.71998405]
[118.53590393 -20.83638954]
[103.75365448 -23.38299942]
[89.93856812 -29.22622490]
[77.81534576 -38.05953979]
[68.01901245 -49.42093658]
[71.77531433 -34.89887619]
[75.53161621 -20.37681770]
[79.28791809 -5.85475874]
[83.04421234 8.66730022]
[86.80051422 23.18935966]
[90.66482544 37.68305206]
[94.63691711 52.14757538]
[98.60901642 66.61209869]
[102.58110809 81.07662201]
[115.12186432 88.33442688]
[118.95877838 102.30670166]
[111.88341522 114.95127869]
[115.85550690 129.41580200]
[130.22418213 134.96986389]
[138.47090149 147.77006531]
[137.60928345 162.79409790]
[128.17901611 174.29226685]
[132.15110779 188.75679016]
[136.12319946 203.22131348]
[138.96244812 188.49247742]
[145.07846069 174.79597473]
[154.15043640 162.85028076]
[165.70246887 153.28207397]
[179.12855530 146.59327698]
[193.72441101 143.13475037]
[208.72433472 143.08793640]
[223.34147644 146.45529175]
[236.80905151 153.06016541]
[248.42057800 162.55609131]
[257.56692505 174.44491577]
[263.76834106 188.10298157]
[266.69943237 202.81381226]
[266.20651245 217.80570984]
[262.31539917 232.29222107]
[255.23022461 245.51342773]
[245.32266235 256.77575684]
[233.11244202 265.48843384]
[219.24009705 271.19439697]
[204.43331909 273.59429932]
[189.46887207 272.56225586]
[175.13172913 268.15243530]
[162.17402649 260.59613037]
[151.27545166 250.28974915]
[143.00776672 237.77395630]
[137.80426025 223.70365906]
[136.24374390 238.62226868]
[134.68321228 253.54087830]
[133.12269592 268.45947266]
[131.56216431 283.37808228]
[130.00164795 298.29669189]
[128.44113159 313.21530151]
[141.82020569 320.43115234]
[151.41561890 332.22082520]
[155.76409912 346.78649902]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 207]
[12 206]
[13 205]
[14 204]
[15 203]
[16 202]
[17 201]
[18 175]
[19 174]
[20 173]
[24 169]
[25 168]
[28 165]
[29 164]
[30 163]
[31 162]
[33 161]
[34 160]
[35 159]
[36 158]
[37 157]
[38 156]
[39 130]
[40 129]
[41 128]
[42 127]
[43 126]
[45 125]
[46 124]
[47 123]
[48 122]
[49 121]
[50 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
