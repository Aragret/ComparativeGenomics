%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUAGGAAAUUUUCAACUCUUUCGGUACAACAAUCUGUACCCCCGUACUCAAUCGUCAAGAACACUCGAAAGAGCCAUUUAUUCCCCAGCAUUCGGAGAxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[123.81434631 772.26184082]
[108.83372498 773.17864990]
[93.82855988 772.85522461]
[78.90135193 771.29382324]
[64.15407562 768.50506592]
[49.68746185 764.50793457]
[35.60034180 759.32989502]
[21.98894119 753.00616455]
[8.94624329 745.58001709]
[-3.43865561 737.10217285]
[-15.08115387 727.63055420]
[-25.90172005 717.22985840]
[-35.82643509 705.97106934]
[-44.78750610 693.93121338]
[-52.72371674 681.19244385]
[-59.58085251 667.84179688]
[-65.31207275 653.97052002]
[-69.87822723 639.67333984]
[-73.24813080 625.04791260]
[-75.39875031 610.19415283]
[-76.31539917 595.21350098]
[-75.99182129 580.20831299]
[-74.43021393 565.28112793]
[-71.64126587 550.53393555]
[-67.64401245 536.06732178]
[-62.46575928 521.98028564]
[-56.14188385 508.36895752]
[-48.71558762 495.32635498]
[-40.23759842 482.94155884]
[-30.76583099 471.29916382]
[-20.36498642 460.47872925]
[-9.10611343 450.55413818]
[2.93387532 441.59320068]
[15.67273331 433.65716553]
[29.02344131 426.80017090]
[42.89479828 421.06912231]
[57.19204712 416.50314331]
[71.81752014 413.13342285]
[86.67131042 410.98297119]
[101.65195465 410.06649780]
[116.65711212 410.39025879]
[118.21763611 395.47164917]
[119.77815247 380.55303955]
[121.33867645 365.63442993]
[122.89920044 350.71585083]
[124.45972443 335.79724121]
[116.46063995 320.17733765]
[127.40043640 305.36508179]
[128.73866272 290.42489624]
[127.84585571 275.45150757]
[124.74174500 260.77618408]
[121.63763428 246.10089111]
[117.17799377 240.20738220]
[118.59826660 231.18405151]
[115.71299744 216.46415710]
[112.82772064 201.74426270]
[109.94245148 187.02436829]
[107.05718231 172.30447388]
[104.17190552 157.58459473]
[101.28663635 142.86470032]
[98.29186249 128.16668701]
[95.18775177 113.49139404]
[85.98612213 102.96421051]
[90.13694763 89.61271667]
[87.03283691 74.93741608]
[83.81956482 60.28562927]
[80.49730682 45.65816879]
[76.63299561 31.16447639]
[71.12346649 23.87867928]
[72.27494049 16.57827568]
[68.08792877 2.17449403]
[63.90091705 -12.22928810]
[52.61906052 -23.32118797]
[56.49620438 -37.70232391]
[52.30919266 -52.10610580]
[48.12218094 -66.50988770]
[43.93516922 -80.91366577]
[39.74816132 -95.31745148]
[24.80763817 -93.61780548]
[9.79478836 -94.46773529]
[-4.85843706 -97.84278870]
[-18.73043633 -103.64585876]
[-31.42208481 -111.70998383]
[-42.56821823 -121.80313110]
[-51.84814072 -133.63491821]
[-58.99485016 -146.86489868]
[-63.80272293 -161.11244202]
[-66.13342285 -175.96760559]
[-65.91989136 -191.00297546]
[-63.16828156 -205.78596497]
[-57.95774841 -219.89122009]
[-50.43822098 -232.91291809]
[-40.82604218 -244.47639465]
[-29.39778137 -254.24896240]
[-16.48224831 -261.94940186]
[-2.45104861 -267.35620117]
[12.29211140 -270.31378174]
[27.32304192 -270.73703003]
[42.20927048 -268.61380005]
[56.52249527 -264.00515747]
[69.85089874 -257.04370117]
[81.81098175 -247.92973328]
[92.05864716 -236.92549133]
[100.29903412 -224.34757996]
[106.29505920 -210.55787659]
[109.87419891 -195.95315552]
[110.93347931 -180.95362854]
[109.44242859 -165.99084473]
[105.44393158 -151.49533081]
[99.05303955 -137.88414001]
[90.45363617 -125.54889679]
[79.89314270 -114.84450531]
[67.67539978 -106.07896423]
[54.15194321 -99.50446320]
[58.33895111 -85.10067749]
[62.52596283 -70.69689941]
[66.71297455 -56.29311752]
[70.89998627 -41.88933563]
[81.88236237 -31.82768822]
[78.30470276 -16.41629982]
[82.49171448 -2.01251721]
[86.67872620 12.39126492]
[90.97284698 26.76347733]
[100.19971466 14.93702602]
[115.19645691 14.62448406]
[124.90803528 26.05624771]
[122.17543793 40.80524445]
[109.01303101 47.99906158]
[95.12476349 42.33591080]
[98.44702148 56.96337128]
[102.99391937 62.78982162]
[101.70813751 71.83330536]
[104.81224823 86.50860596]
[114.01387787 97.03578949]
[109.86305237 110.38728333]
[112.96716309 125.06258392]
[117.80471802 132.81086731]
[116.00652313 139.97943115]
[118.89179993 154.69931030]
[121.77706909 169.41920471]
[124.66234589 184.13909912]
[127.54761505 198.85899353]
[130.43289185 213.57888794]
[133.31816101 228.29876709]
[136.31294250 242.99678040]
[139.41703796 257.67208862]
[142.52114868 272.34738159]
[146.44134521 257.86871338]
[154.23268127 245.05094910]
[165.28071594 234.90495300]
[178.71415710 228.23091125]
[193.47355652 225.55513000]
[208.39495850 227.08865356]
[222.30160522 232.71054077]
[234.09672546 241.97741699]
[242.85012817 254.15846252]
[247.87149048 268.29302979]
[248.76478577 283.26641846]
[245.45959473 297.89773560]
[238.21653748 311.03311157]
[227.60687256 321.63665771]
[214.46730042 328.87210083]
[199.83406067 332.16882324]
[184.86120605 331.26684570]
[170.72955322 326.23733521]
[158.55357361 317.47686768]
[149.29351807 305.67639160]
[143.67884827 291.76312256]
[142.34062195 306.70330811]
[149.99691772 317.08328247]
[148.57472229 329.49945068]
[139.37832642 337.35775757]
[137.81781006 352.27636719]
[136.25727844 367.19497681]
[134.69676208 382.11355591]
[133.13623047 397.03216553]
[131.57571411 411.95077515]
[146.32305908 414.73919678]
[160.78976440 418.73593140]
[174.87701416 423.91369629]
[188.48857117 430.23709106]
[201.53143311 437.66290283]
[213.91653442 446.14044189]
[225.55926514 455.61181641]
[236.38008118 466.01226807]
[246.30506897 477.27078247]
[255.26641846 489.31045532]
[263.20294189 502.04901123]
[270.06039429 515.39947510]
[275.79193115 529.27062988]
[280.35842896 543.56774902]
[283.72866821 558.19305420]
[285.87966919 573.04681396]
[286.79666138 588.02740479]
[286.47344971 603.03259277]
[284.91220093 617.95977783]
[282.12359619 632.70709229]
[278.12667847 647.17376709]
[272.94876099 661.26092529]
[266.62521362 674.87243652]
[259.19924927 687.91522217]
[250.72154236 700.30023193]
[241.25004578 711.94281006]
[230.84945679 722.76348877]
[219.59082031 732.68835449]
[207.55105591 741.64959717]
[194.81237793 749.58593750]
[181.46183777 756.44323730]
[167.59062195 762.17462158]
[153.29347229 766.74096680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 177]
[42 176]
[43 175]
[44 174]
[45 173]
[46 172]
[48 169]
[49 168]
[50 147]
[51 146]
[52 145]
[54 144]
[55 143]
[56 142]
[57 141]
[58 140]
[59 139]
[60 138]
[61 136]
[62 135]
[64 133]
[65 132]
[66 130]
[67 129]
[68 123]
[70 122]
[71 121]
[72 120]
[74 118]
[75 117]
[76 116]
[77 115]
[78 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
