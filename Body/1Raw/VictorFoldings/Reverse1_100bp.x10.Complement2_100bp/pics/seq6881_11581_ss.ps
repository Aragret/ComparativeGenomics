%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[45.92282486 727.95178223]
[31.39746475 724.11407471]
[17.52998543 718.33422852]
[4.57872677 710.71984863]
[-7.21503592 701.41284180]
[-17.63159180 690.58654785]
[-26.47688675 678.44262695]
[-33.58613968 665.20733643]
[-38.82690811 651.12725830]
[-42.10155869 636.46472168]
[-43.34908676 621.49285889]
[-42.54625702 606.49053955]
[-39.70801926 591.73730469]
[-34.88724899 577.50793457]
[-28.17375755 564.06762695]
[-19.69261169 551.66662598]
[-9.60180855 540.53607178]
[1.91066492 530.88330078]
[14.63033867 522.88806152]
[28.32025337 516.69934082]
[42.72537231 512.43249512]
[57.57734299 510.16690063]
[57.35401535 495.16857910]
[57.13068771 480.17022705]
[42.23352051 470.68624878]
[35.95634842 454.01147461]
[40.98924255 436.75604248]
[55.49824142 425.88192749]
[54.82845688 410.89688110]
[54.15867233 395.91183472]
[53.48888779 380.92681885]
[52.81910324 365.94177246]
[46.65456009 379.61651611]
[37.07166290 391.15634155]
[24.76220131 399.72824097]
[10.61480904 404.71334839]
[-4.34920120 405.75180054]
[-19.04956627 402.76861572]
[-32.42505264 395.97918701]
[-43.51007080 385.87362671]
[-51.50439072 373.18148804]
[-55.83088684 358.81896973]
[-56.17723083 343.82296753]
[-52.51841736 329.27606201]
[-45.11857986 316.22836304]
[-34.51192093 305.62179565]
[-21.46414375 298.22210693]
[-6.91717768 294.56344604]
[8.07881927 294.90997314]
[22.44127274 299.23660278]
[35.13334656 307.23107910]
[45.23878479 318.31619263]
[52.02807236 331.69174194]
[55.01115799 346.39331055]
[58.98325348 331.92877197]
[62.95534897 317.46426392]
[66.92744446 302.99972534]
[70.89954376 288.53521729]
[74.87163544 274.07067871]
[78.51972961 259.52105713]
[80.74484253 244.68702698]
[81.86048889 229.72857666]
[82.97614288 214.77012634]
[84.09178925 199.81166077]
[85.20743561 184.85321045]
[86.32308960 169.89476013]
[83.68578339 162.99067688]
[87.56832886 154.72244263]
[88.90656281 139.78225708]
[90.24479675 124.84207153]
[91.58303070 109.90188599]
[92.47584534 94.92848206]
[92.92245483 79.93512726]
[90.04994202 71.26411438]
[93.48897552 64.72234344]
[94.15876007 49.73730087]
[94.82854462 34.75226212]
[92.12570953 28.71850777]
[92.77787018 23.07300377]
[95.74794769 19.33299446]
[96.86359406 4.37454081]
[97.97924805 -10.58391285]
[84.83338165 -18.26164627]
[76.35917664 -30.83443069]
[74.19303894 -45.77859497]
[78.71157837 -60.12236404]
[88.96750641 -71.03682709]
[102.88755798 -76.39383698]
[104.00320435 -91.35228729]
[105.11885834 -106.31074524]
[106.23450470 -121.26919556]
[107.35015106 -136.22764587]
[98.97187042 -152.62539673]
[109.41071320 -166.73204041]
[110.30352783 -181.70544434]
[111.19634247 -196.67884827]
[111.97766876 -211.65847778]
[112.64745331 -226.64352417]
[98.55199432 -232.17495728]
[87.01793671 -241.98538208]
[79.29640961 -255.01062012]
[76.22499084 -269.83779907]
[78.13683319 -284.85855103]
[84.82456207 -298.44357300]
[95.56274414 -309.11926270]
[109.18657684 -315.72760010]
[124.21825409 -317.55172729]
[139.02725220 -314.39379883]
[152.00718689 -306.59637451]
[161.75010681 -295.00524902]
[167.19917297 -280.87774658]
[167.76330566 -265.74630737]
[163.38131714 -251.25227356]
[154.52853394 -238.96786499]
[142.16522217 -230.22558594]
[127.63249207 -225.97373962]
[126.96270752 -210.98869324]
[129.80439758 -204.16619873]
[126.16974640 -195.78602600]
[125.27693176 -180.81262207]
[124.38411713 -165.83921814]
[132.17616272 -156.58662415]
[131.55488586 -144.10472107]
[122.30860901 -135.11199951]
[121.19295502 -120.15354919]
[120.07730865 -105.19509125]
[118.96166229 -90.23664093]
[117.84600830 -75.27819061]
[130.81739807 -67.91552734]
[139.34077454 -55.60044479]
[141.68156433 -40.74508667]
[137.32255554 -26.28759003]
[127.07704926 -15.11098003]
[112.93769836 -9.46826363]
[111.82205200 5.49018955]
[110.70640564 20.44864273]
[109.81358337 35.42205048]
[109.14379883 50.40708923]
[108.47401428 65.39212799]
[107.91580200 80.38173676]
[107.46920013 95.37508392]
[109.36370087 97.76263428]
[110.43134308 100.89227295]
[110.39559174 104.45909119]
[109.09644318 108.06026459]
[106.52321625 111.24011993]
[105.18498230 126.18030548]
[103.84674835 141.12048340]
[102.50851440 156.06066895]
[101.28153992 171.01040649]
[100.16589355 185.96885681]
[99.05023956 200.92732239]
[97.93459320 215.88577271]
[96.81894684 230.84422302]
[95.70330048 245.80267334]
[105.42895508 234.38288879]
[119.52808380 229.26287842]
[134.31520081 231.78099060]
[145.92500305 241.27902222]
[151.32270813 255.27418518]
[149.09736633 270.10821533]
[139.83068848 281.90347290]
[125.94493866 287.57675171]
[111.06983948 285.64508057]
[99.09370422 276.61334229]
[93.14718628 262.84332275]
[94.69275665 267.82913208]
[94.21871948 272.44741821]
[92.20325470 275.99044800]
[89.33615875 278.04278564]
[85.36406708 292.50732422]
[81.39196777 306.97183228]
[77.41987610 321.43637085]
[73.44777679 335.90087891]
[69.47568512 350.36541748]
[67.80413818 365.27197266]
[68.47392273 380.25701904]
[69.14370728 395.24206543]
[69.81349945 410.22711182]
[70.48328400 425.21212769]
[81.73167419 430.66571045]
[89.54866791 440.32818604]
[92.49851990 452.32723999]
[90.08102417 464.37121582]
[82.81512451 474.18649292]
[72.12902069 479.94689941]
[72.35234833 494.94525146]
[72.57567596 509.94357300]
[87.48851776 511.76596069]
[102.01428986 515.60205078]
[115.88240051 521.38037109]
[128.83448792 528.99334717]
[140.62925720 538.29913330]
[151.04698181 549.12432861]
[159.89358521 561.26727295]
[167.00427246 574.50177002]
[172.24656677 588.58123779]
[175.52279663 603.24346924]
[176.77195740 618.21520996]
[175.97074890 633.21759033]
[173.13410950 647.97113037]
[168.31488037 662.20098877]
[161.60284424 675.64208984]
[153.12303162 688.04394531]
[143.03343201 699.17559814]
[131.52200317 708.82965088]
[118.80319977 716.82629395]
[105.11395264 723.01641846]
[90.70929718 727.28491211]
[75.85757446 729.55206299]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 188]
[23 187]
[24 186]
[28 180]
[29 179]
[30 178]
[31 177]
[32 176]
[54 175]
[55 174]
[56 173]
[57 172]
[58 171]
[59 170]
[60 166]
[61 155]
[62 154]
[63 153]
[64 152]
[65 151]
[66 150]
[68 149]
[69 148]
[70 147]
[71 146]
[72 141]
[73 140]
[75 139]
[76 138]
[77 137]
[80 136]
[81 135]
[82 134]
[88 128]
[89 127]
[90 126]
[91 125]
[92 124]
[94 121]
[95 120]
[96 119]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
