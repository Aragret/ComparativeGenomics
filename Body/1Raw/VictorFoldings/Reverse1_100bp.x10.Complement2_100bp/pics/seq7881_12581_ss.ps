%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[125.36132050 463.76815796]
[125.59228516 448.75061035]
[127.66702271 433.87530518]
[131.55407715 419.36770630]
[137.19453430 405.44775391]
[144.50286865 392.32647705]
[153.36831665 380.20281982]
[163.65644836 369.26049805]
[175.21130371 359.66546631]
[187.85774231 351.56317139]
[181.37823486 338.03482056]
[174.89874268 324.50646973]
[168.41925049 310.97811890]
[161.93975830 297.44976807]
[157.03833008 311.62637329]
[144.23617554 319.44332886]
[129.38624573 317.32681274]
[119.27774048 306.24447632]
[118.53211975 291.26303101]
[127.49028778 279.23178101]
[142.05667114 275.65124512]
[155.57302856 282.15969849]
[150.53611755 268.03067017]
[137.01080322 261.89868164]
[131.70138550 247.64157104]
[138.22491455 233.49656677]
[133.18798828 219.36753845]
[128.15107727 205.23851013]
[115.85118103 201.39895630]
[107.88970184 191.02124023]
[107.35102844 177.75775146]
[114.65568542 166.44154358]
[109.82968903 152.23908997]
[105.00369263 138.03663635]
[100.17769623 123.83417511]
[95.35169220 109.63172150]
[88.87220001 96.10337830]
[80.83102417 83.44084930]
[72.78985596 70.77832794]
[67.11640167 67.38369751]
[64.41455841 62.38399124]
[64.70429993 57.61690903]
[57.04369736 44.72058105]
[49.38310242 31.82425308]
[41.72250366 18.92792702]
[28.02248383 11.01464748]
[28.17476654 -3.87917924]
[20.51416779 -16.77550697]
[12.85357094 -29.67183304]
[5.19297361 -42.56816101]
[-9.69345188 -39.80778122]
[-24.59811211 -42.30239487]
[-37.72529602 -49.73188019]
[-47.50014877 -61.18274689]
[-52.75758362 -75.26042175]
[-52.88114166 -90.25906372]
[-47.87521362 -104.36827087]
[-38.36217499 -115.89160919]
[-46.02277374 -128.78793335]
[-53.68336868 -141.68426514]
[-61.34396744 -154.58059692]
[-69.00456238 -167.47691345]
[-76.66516113 -180.37324524]
[-90.43786621 -174.38026428]
[-104.85310364 -170.16076660]
[-119.68352509 -167.78129578]
[-134.69523621 -167.27938843]
[-149.65145874 -168.66294861]
[-164.31634521 -171.91015625]
[-178.45860291 -176.96981812]
[-191.85516357 -183.76211548]
[-204.29475403 -192.17993164]
[-215.58120728 -202.09049988]
[-225.53648376 -213.33752441]
[-234.00361633 -225.74360657]
[-240.84901428 -239.11311340]
[-245.96476746 -253.23516846]
[-249.27015686 -267.88705444]
[-250.71305847 -282.83767700]
[-250.27073669 -297.85125732]
[-247.95014954 -312.69100952]
[-243.78788757 -327.12286377]
[-237.84960938 -340.91925049]
[-230.22897339 -353.86254883]
[-221.04615784 -365.74865723]
[-210.44599915 -376.39007568]
[-198.59567261 -385.61898804]
[-185.68206787 -393.28985596]
[-171.90885925 -399.28167725]
[-157.49327087 -403.49996948]
[-142.66264343 -405.87817383]
[-127.65090179 -406.37881470]
[-112.69477844 -404.99398804]
[-98.03016663 -401.74554443]
[-83.88835144 -396.68472290]
[-70.49235535 -389.89129639]
[-58.05346298 -381.47241211]
[-46.76785278 -371.56091309]
[-36.81351471 -360.31304932]
[-28.34744072 -347.90625000]
[-21.50315475 -334.53616333]
[-16.38860130 -320.41366577]
[-13.08444214 -305.76150513]
[-11.64279079 -290.81076050]
[-12.08638382 -275.79721069]
[-14.40822506 -260.95767212]
[-18.57169533 -246.52615356]
[-24.51112938 -232.73027039]
[-32.13285828 -219.78761292]
[-41.31666946 -207.90228271]
[-51.91772842 -197.26176453]
[-63.76883316 -188.03384399]
[-56.10823822 -175.13751221]
[-48.44763947 -162.24118042]
[-40.78704071 -149.34486389]
[-33.12644577 -136.44853210]
[-25.46584702 -123.55220795]
[-10.79581642 -126.39394379]
[3.98902202 -124.04072571]
[17.10119820 -116.75750732]
[26.94878387 -105.40644836]
[32.32865906 -91.34490204]
[32.57348251 -76.26311493]
[27.63440514 -61.98104858]
[18.08930016 -50.22875595]
[25.74989891 -37.33243179]
[33.41049576 -24.43610382]
[41.07109451 -11.53977680]
[54.22317886 -4.54892921]
[54.61883163 11.26732922]
[62.27942657 24.16365623]
[69.94002533 37.05998230]
[77.60062408 49.95631027]
[85.45237732 62.73715210]
[93.49355316 75.39968109]
[101.53472137 88.06220245]
[100.62453461 73.08984375]
[104.82369232 58.68959808]
[113.63889313 46.55319595]
[126.03453064 38.10640335]
[140.55436707 34.34154892]
[155.49264526 35.70092010]
[169.09442139 42.02481842]
[179.76177979 52.57032013]
[186.24151611 66.09854889]
[187.77239990 81.02022552]
[184.17460632 95.58235931]
[175.87077332 108.07421112]
[163.83644104 117.02825165]
[149.48538208 121.39256287]
[134.50355530 120.65443420]
[120.65100098 114.90058136]
[109.55415344 104.80572510]
[114.38014984 119.00817871]
[119.20614624 133.21063232]
[124.03214264 147.41308594]
[128.85813904 161.61553955]
[144.68885803 169.05917358]
[150.13099670 185.32872009]
[142.28010559 200.20158386]
[147.31701660 214.33061218]
[152.35394287 228.45965576]
[166.35433960 235.28799438]
[171.26121521 249.68859863]
[164.66514587 262.99377441]
[169.70207214 277.12280273]
[175.46809387 290.97027588]
[181.94760132 304.49862671]
[188.42709351 318.02697754]
[194.90658569 331.55532837]
[201.38607788 345.08364868]
[215.62608337 340.30853271]
[230.34497070 337.31958008]
[245.31961060 336.16207886]
[260.32299805 336.85363770]
[275.12765503 339.38372803]
[289.50918579 343.71398926]
[303.24954224 349.77880859]
[316.14044189 357.48623657]
[327.98645020 366.71942139]
[338.60800171 377.33837891]
[347.84405518 389.18215942]
[355.55459595 402.07119751]
[361.62274170 415.81008911]
[365.95651245 430.19055176]
[368.49020386 444.99462891]
[369.18539429 459.99783325]
[368.03152466 474.97274780]
[365.04614258 489.69235229]
[360.27444458 503.93353271]
[353.78881836 517.48034668]
[345.68756104 530.12744141]
[336.09350586 541.68310547]
[325.15206909 551.97216797]
[313.02911377 560.83862305]
[299.90847778 568.14807129]
[285.98898315 573.78967285]
[271.48171997 577.67797852]
[256.60656738 579.75396729]
[241.58906555 579.98614502]
[226.65684509 578.37109375]
[212.03628540 574.93322754]
[197.94903564 569.72467041]
[184.60864258 562.82440186]
[172.21736145 554.33703613]
[160.96302795 544.39123535]
[151.01625061 533.13769531]
[142.52783203 520.74713135]
[135.62644958 507.40731812]
[130.41671753 493.32049561]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 171]
[11 170]
[12 169]
[13 168]
[14 167]
[22 166]
[23 165]
[26 162]
[27 161]
[28 160]
[32 157]
[33 156]
[34 155]
[35 154]
[36 153]
[37 136]
[38 135]
[39 134]
[42 133]
[43 132]
[44 131]
[45 130]
[47 128]
[48 127]
[49 126]
[50 125]
[58 117]
[59 116]
[60 115]
[61 114]
[62 113]
[63 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
