%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[30.95071983 570.59692383]
[15.92196751 569.92517090]
[1.27259409 566.50311279]
[-12.49844837 560.44726562]
[-24.92212296 551.96398926]
[-35.57528305 541.34204102]
[-44.09508896 528.94335938]
[-50.19135666 515.19018555]
[-53.65644836 500.55093384]
[-54.37234879 485.52420044]
[-52.31467056 470.62182617]
[-47.55349731 456.35137939]
[-40.25099564 443.19888306]
[-30.65588379 431.61233521]
[-19.09496880 421.98632812]
[-5.96201229 414.64874268]
[8.29568386 409.84948730]
[23.19250870 407.75204468]
[23.86229324 392.76702881]
[16.70101357 379.70693970]
[25.04680634 366.26602173]
[25.71659088 351.28100586]
[26.38637543 336.29595947]
[27.05616188 321.31091309]
[19.89488029 308.25085449]
[28.24067307 294.80993652]
[15.57830811 302.85134888]
[1.34739578 298.10992432]
[-3.96156311 284.08084106]
[3.56499815 271.10583496]
[18.37877846 268.74960327]
[29.55897141 278.74752808]
[31.34143639 263.85379028]
[33.12390137 248.96008301]
[24.59273338 261.29779053]
[12.70477676 270.44528198]
[-1.40688241 275.53067017]
[-16.39721107 276.06921387]
[-30.83742523 272.00964355]
[-43.35117722 263.73886108]
[-52.74573898 252.04516602]
[-58.12567139 238.04315186]
[-58.97820282 223.06739807]
[-55.22207260 208.54530334]
[-47.21529007 195.86100769]
[-35.72101212 186.22349548]
[-21.83479691 180.55136108]
[-6.88019419 179.38523865]
[7.71742105 182.83627319]
[20.56669617 190.57553101]
[30.44292068 201.86535645]
[36.40475464 215.62968445]
[37.88389206 230.55769348]
[43.54668045 216.66767883]
[49.20946884 202.77764893]
[54.56065369 188.76461792]
[59.59756851 174.63558960]
[64.63448334 160.50656128]
[69.67140198 146.37753296]
[56.57834244 153.69680786]
[41.67047119 152.03689575]
[30.50804901 142.01690674]
[27.25438690 127.37403107]
[33.12302017 113.56971741]
[45.92509079 105.75262451]
[60.88574600 106.83834076]
[72.42503357 116.42191315]
[76.23901367 130.93008423]
[82.91921234 117.49970245]
[89.59940338 104.06932831]
[96.17943573 90.58959198]
[102.65892792 77.06124878]
[101.64194489 61.27276230]
[114.11788940 53.13641739]
[120.59738922 39.60807419]
[121.48198700 30.51657677]
[127.27538300 25.92764091]
[133.95558167 12.49726391]
[140.63577271 -0.93311173]
[140.60763550 -7.54452181]
[143.48992920 -12.44242096]
[147.72003174 -14.65945148]
[154.79713440 -27.88497925]
[161.87425232 -41.11050797]
[153.89071655 -54.15698242]
[153.51187134 -69.34754944]
[160.73934937 -82.60009003]
[173.54420471 -90.40341187]
[188.43537903 -90.74732971]
[195.51248169 -103.97285461]
[202.58959961 -117.19838715]
[201.56871033 -135.58422852]
[216.82557678 -144.25573730]
[216.27912903 -160.06750488]
[228.99179077 -167.82878113]
[235.87120056 -181.15821838]
[242.75061035 -194.48764038]
[249.63002014 -207.81707764]
[237.29386902 -216.38879395]
[226.18214417 -226.49742126]
[216.48495483 -237.96997070]
[208.36824036 -250.61015320]
[201.97090149 -264.20166016]
[197.40238953 -278.51193237]
[194.74089050 -293.29608154]
[194.03195190 -308.30117798]
[195.28767395 -323.27041626]
[198.48660278 -337.94766235]
[203.57398987 -352.08178711]
[210.46276855 -365.43093872]
[219.03507996 -377.76669312]
[229.14422607 -388.87792969]
[240.61724854 -398.57458496]
[253.25781250 -406.69067383]
[266.84963989 -413.08737183]
[281.16012573 -417.65521240]
[295.94439697 -420.31600952]
[310.94952393 -421.02423096]
[325.91870117 -419.76779175]
[340.59579468 -416.56817627]
[354.72967529 -411.48010254]
[368.07849121 -404.59069824]
[380.41384888 -396.01779175]
[391.52459717 -385.90811157]
[401.22070312 -374.43463135]
[409.33621216 -361.79367065]
[415.73226929 -348.20156860]
[420.29940796 -333.89086914]
[422.95950317 -319.10644531]
[423.66702271 -304.10131836]
[422.40985107 -289.13217163]
[419.20953369 -274.45523071]
[414.12081909 -260.32159424]
[407.23074341 -246.97309875]
[398.65725708 -234.63816833]
[388.54705811 -223.52787781]
[377.07312012 -213.83233643]
[364.43179321 -205.71742249]
[350.83935547 -199.32202148]
[336.52844238 -194.75556946]
[321.74389648 -192.09617615]
[306.73870850 -191.38937378]
[291.76965332 -192.64724731]
[277.09286499 -195.84826660]
[262.95944214 -200.93765259]
[256.08004761 -187.60823059]
[249.20062256 -174.27879333]
[242.32121277 -160.94937134]
[243.35972595 -146.09101868]
[230.15499878 -137.37632751]
[233.53308105 -125.76103210]
[227.91082764 -114.59976196]
[215.81512451 -110.12127686]
[208.73802185 -96.89575195]
[201.66090393 -83.67022705]
[209.63635254 -71.09016418]
[210.24816895 -56.10745239]
[203.23200989 -42.74182892]
[190.38349915 -34.62935257]
[175.09977722 -34.03340149]
[168.02267456 -20.80787468]
[160.94555664 -7.58234644]
[154.06614685 5.74708271]
[147.38595581 19.17745972]
[140.70576477 32.60783386]
[134.12573242 46.08757019]
[127.64624023 59.61591339]
[129.12667847 74.43676758]
[116.18727112 83.54074097]
[109.70777893 97.06909180]
[109.34284973 105.12137604]
[103.02977753 110.74951935]
[96.34958649 124.17990112]
[89.66939545 137.61027527]
[83.80043030 151.41444397]
[78.76351166 165.54348755]
[73.72660065 179.67251587]
[68.68968201 193.80154419]
[69.63183594 198.93568420]
[68.61235809 203.46492004]
[66.19015503 206.74333191]
[63.09949493 208.44042969]
[57.43670654 222.33045959]
[51.77392197 236.22048950]
[48.01762009 250.74253845]
[46.23515320 265.63626099]
[44.45269012 280.52996826]
[43.22571182 295.47970581]
[50.33908463 309.61160278]
[42.04119873 321.98071289]
[41.37141418 336.96572876]
[40.70162964 351.95077515]
[40.03184509 366.93582153]
[47.14521790 381.06771851]
[38.84733200 393.43679810]
[38.17754745 408.42184448]
[52.82784271 411.83996582]
[66.60051727 417.89205933]
[79.02648163 426.37203979]
[89.68250275 436.99108887]
[98.20565033 449.38748169]
[104.30562592 463.13900757]
[107.77465820 477.77734375]
[108.49461365 492.80386353]
[106.44094849 507.70678711]
[101.68362427 521.97851562]
[94.38466644 535.13299561]
[84.79267883 546.72210693]
[73.23435974 556.35125732]
[60.10338211 563.69238281]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 196]
[19 195]
[21 193]
[22 192]
[23 191]
[24 190]
[26 188]
[32 187]
[33 186]
[34 185]
[53 184]
[54 183]
[55 182]
[56 178]
[57 177]
[58 176]
[59 175]
[68 174]
[69 173]
[70 172]
[71 170]
[72 169]
[74 167]
[75 166]
[77 165]
[78 164]
[79 163]
[82 162]
[83 161]
[84 160]
[89 155]
[90 154]
[91 153]
[93 150]
[95 148]
[96 147]
[97 146]
[98 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
