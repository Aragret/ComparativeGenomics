%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUGACUAUUAUUUCCACCUACGCUGUUACCUAAAAUGUAUUACCCCCAUACUCAAAAAAAACAAUCCCAAUUGCUCCCACCAUUCCUACCCCCCUUAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[-39.53973770 377.10064697]
[-36.68502045 391.84167480]
[-35.44084930 406.80493164]
[-35.82181168 421.81500244]
[-37.82344437 436.69589233]
[-41.42227554 451.27310181]
[-46.57611465 465.37579346]
[-53.22453308 478.83853149]
[-61.28957748 491.50354004]
[-70.67669678 503.22229004]
[-81.27582550 513.85742188]
[-92.96269989 523.28417969]
[-105.60029602 531.39208984]
[-119.04044342 538.08612061]
[-133.12556458 543.28771973]
[-147.69050598 546.93591309]
[-162.56452942 548.98797607]
[-177.57321167 549.41979980]
[-192.54060364 548.22637939]
[-207.29122925 545.42163086]
[-221.65211487 541.03851318]
[-235.45491028 535.12829590]
[-248.53778076 527.76043701]
[-260.74734497 519.02117920]
[-271.94042969 509.01309204]
[-281.98580933 497.85345459]
[-290.76568604 485.67312622]
[-298.17718506 472.61489868]
[-304.13336182 458.83187866]
[-308.56439209 444.48568726]
[-311.41830444 429.74450684]
[-312.66168213 414.78118896]
[-312.27990723 399.77114868]
[-310.27746582 384.89038086]
[-306.67785645 370.31332397]
[-301.52325439 356.21093750]
[-294.87411499 342.74853516]
[-286.80838013 330.08398438]
[-277.42062378 318.36572266]
[-266.82092285 307.73117065]
[-255.13354492 298.30502319]
[-242.49551392 290.19778442]
[-229.05500793 283.50451660]
[-214.96960449 278.30364990]
[-200.40446472 274.65621948]
[-185.53033447 272.60498047]
[-170.52162170 272.17395020]
[-155.55429077 273.36819458]
[-140.80383301 276.17373657]
[-126.44317627 280.55764771]
[-112.64069366 286.46856689]
[-99.55822754 293.83715820]
[-87.34914398 302.57705688]
[-77.35097504 291.39508057]
[-67.35279846 280.21310425]
[-57.35462952 269.03112793]
[-47.35645676 257.84915161]
[-48.84205627 247.73945618]
[-44.42499161 238.28228760]
[-35.34499359 232.70251465]
[-24.47350311 233.04803467]
[-14.14683437 222.16870117]
[-3.82016587 211.28936768]
[6.50650263 200.41003418]
[16.83317184 189.53070068]
[27.15983963 178.65136719]
[37.48650742 167.77203369]
[47.23247528 156.36956787]
[56.37127686 144.47492981]
[65.51007843 132.58030701]
[74.64888000 120.68566895]
[68.71694183 109.58886719]
[67.41143799 97.07397461]
[70.92543793 84.99180603]
[78.73925781 75.12918854]
[89.69731903 68.94470978]
[102.17904663 67.35298157]
[114.33850861 70.58940125]
[123.82740784 58.97213745]
[123.31217194 46.08425903]
[131.45466614 36.60356522]
[143.47604370 35.25714874]
[153.13685608 23.78244972]
[162.79766846 12.30774879]
[172.45848083 0.83304894]
[182.11929321 -10.64165115]
[191.60818481 -22.25891495]
[200.92306519 -34.01616669]
[210.23794556 -45.77341843]
[219.55284119 -57.53067017]
[228.86772156 -69.28791809]
[227.24197388 -84.77967834]
[236.85606384 -96.57051086]
[251.63511658 -98.02494812]
[260.95001221 -109.78219604]
[250.10827637 -120.16445923]
[240.28640747 -131.51634216]
[231.57070923 -143.73809814]
[224.03779602 -156.72230530]
[217.75384521 -170.35485840]
[212.77410889 -184.51596069]
[209.14231873 -199.08114624]
[206.89041138 -213.92240906]
[206.03817749 -228.90934753]
[206.59310913 -243.91023254]
[208.55032349 -258.79324341]
[211.89260864 -273.42755127]
[216.59060669 -287.68460083]
[222.60302734 -301.43905640]
[229.87702942 -314.57006836]
[238.34869385 -326.96221924]
[247.94355774 -338.50662231]
[258.57730103 -349.10180664]
[270.15649414 -358.65463257]
[282.57937622 -367.08120728]
[295.73672485 -374.30743408]
[309.51293945 -380.26983643]
[323.78695679 -384.91598511]
[338.43334961 -388.20507812]
[353.32336426 -390.10815430]
[368.32617188 -390.60858154]
[383.30990601 -389.70187378]
[398.14288330 -387.39605713]
[412.69479370 -383.71133423]
[426.83767700 -378.68017578]
[440.44732666 -372.34671021]
[453.40405273 -364.76666260]
[465.59405518 -356.00662231]
[476.91015625 -346.14355469]
[487.25296021 -335.26416016]
[496.53152466 -323.46405029]
[504.66433716 -310.84692383]
[511.57989502 -297.52365112]
[517.21746826 -283.61132812]
[521.52746582 -269.23223877]
[524.47204590 -254.51272583]
[526.02526855 -239.58215332]
[526.17358398 -224.57174683]
[524.91558838 -209.61340332]
[522.26245117 -194.83859253]
[518.23736572 -180.37715149]
[512.87573242 -166.35617065]
[506.22476196 -152.89888000]
[498.34283447 -140.12353516]
[489.29919434 -128.14241028]
[479.17337036 -117.06079865]
[468.05432129 -106.97608185]
[456.03979492 -97.97690582]
[443.23535156 -90.14234161]
[429.75350952 -83.54124451]
[415.71276855 -78.23162079]
[401.23651123 -74.26014709]
[386.45196533 -71.66171265]
[371.48907471 -70.45915985]
[356.47930908 -70.66305542]
[341.55459595 -72.27160645]
[326.84609985 -75.27067566]
[312.48306274 -79.63390350]
[298.59173584 -85.32295990]
[285.29415894 -92.28782654]
[272.70724487 -100.46731567]
[263.39236450 -88.71006012]
[265.35702515 -73.99015045]
[256.07788086 -61.93393326]
[240.62496948 -59.97303772]
[231.31008911 -48.21578598]
[221.99520874 -36.45853424]
[212.68031311 -24.70128250]
[203.36543274 -12.94403172]
[203.01568604 -8.18097401]
[199.67010498 -3.58705664]
[193.59399414 -0.98084068]
[183.93318176 10.49385929]
[174.27236938 21.96855927]
[164.61155701 33.44326019]
[154.95074463 44.91796112]
[152.81028748 62.33591843]
[135.44467163 68.46103668]
[125.95577240 80.07830048]
[132.46530151 95.92813110]
[130.07167053 112.89461517]
[119.43127441 126.32492828]
[103.46211243 132.53598022]
[86.54351044 129.82447815]
[77.40470886 141.71910095]
[68.26590729 153.61373901]
[59.12710571 165.50837708]
[73.98833466 163.47270203]
[86.74776459 171.35920715]
[91.57196045 185.56228638]
[86.25535583 199.58845520]
[73.22864532 207.02517700]
[58.44745255 204.47245789]
[48.66954803 193.09736633]
[48.36584091 178.09869385]
[38.03917313 188.97802734]
[27.71250534 199.85737610]
[17.38583755 210.73670959]
[7.05916834 221.61604309]
[-3.26750016 232.49537659]
[-13.59416866 243.37471008]
[-17.41303253 263.16812134]
[-36.17448425 267.84732056]
[-46.17265320 279.02929688]
[-56.17082596 290.21127319]
[-66.16899872 301.39324951]
[-76.16716766 312.57522583]
[-66.12118530 323.73431396]
[-57.34062958 335.91418457]
[-49.92844391 348.97201538]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 207]
[54 206]
[55 205]
[56 204]
[57 203]
[61 201]
[62 200]
[63 199]
[64 198]
[65 197]
[66 196]
[67 195]
[68 187]
[69 186]
[70 185]
[71 184]
[78 179]
[79 178]
[82 176]
[83 175]
[84 174]
[85 173]
[86 172]
[87 169]
[88 168]
[89 167]
[90 166]
[91 165]
[94 162]
[95 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
