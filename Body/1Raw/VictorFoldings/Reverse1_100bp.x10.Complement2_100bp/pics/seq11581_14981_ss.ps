%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[81.35840607 774.73724365]
[66.43908691 776.76397705]
[51.42443848 775.64416504]
[36.97083664 771.42669678]
[23.71012688 764.29595947]
[12.22201347 754.56372070]
[3.00870538 742.65533447]
[-3.52703023 729.09149170]
[-7.09947872 714.46514893]
[-7.55246878 699.41558838]
[-4.86619711 684.60083008]
[0.84190410 670.66845703]
[9.32230091 658.22747803]
[20.20426750 647.82189941]
[33.01208878 639.90649414]
[47.18586349 634.82739258]
[62.10597610 632.80651855]
[63.22162628 617.84802246]
[64.33727264 602.88958740]
[65.45292664 587.93115234]
[66.56857300 572.97265625]
[52.12946320 568.98693848]
[38.74116516 562.25854492]
[26.91907692 553.04443359]
[17.11871910 541.69720459]
[9.71817303 528.65185547]
[5.00349808 514.40875244]
[3.15767407 499.51477051]
[4.25350189 484.54211426]
[8.25073242 470.06631470]
[14.99754333 456.64428711]
[24.23630333 444.79272461]
[35.61341095 434.96826172]
[48.69282150 427.54989624]
[62.97277451 422.82440186]
[77.90502930 420.97515869]
[79.02067566 406.01669312]
[80.13632202 391.05825806]
[73.36706543 377.79074097]
[82.10934448 364.60427856]
[83.22499084 349.64581299]
[83.67160034 334.65246582]
[83.44827271 319.65414429]
[83.22494507 304.65579224]
[83.00161743 289.65747070]
[82.77828979 274.65911865]
[70.61700439 283.43997192]
[56.12911224 279.55398560]
[49.99453735 265.86578369]
[56.73546982 252.46577454]
[71.38273621 249.23197937]
[83.13819885 258.54672241]
[74.44962311 243.29956055]
[84.71710968 228.01361084]
[85.38689423 213.02857971]
[86.05667877 198.04353333]
[86.72646332 183.05850220]
[87.39624786 168.07345581]
[88.06603241 153.08842468]
[85.96925354 150.25366211]
[85.14134216 146.26246643]
[86.11087036 141.72227478]
[89.11515045 137.45362854]
[90.45338440 122.51344299]
[91.79161835 107.57325745]
[93.01859283 92.62351990]
[94.13423920 77.66506958]
[85.75595093 61.26733017]
[96.19480133 47.16068268]
[97.08761597 32.18727875]
[84.37697601 23.67922592]
[77.67578888 10.04137707]
[78.69387054 -5.01949596]
[87.05788422 -17.46534729]
[100.43844604 -24.00951767]
[101.33126068 -38.98292542]
[94.42908478 -53.21916199]
[102.91020203 -65.46333313]
[103.80302429 -80.43674469]
[104.69583893 -95.41014862]
[91.43711853 -102.89131165]
[82.77666473 -115.33653259]
[80.38826752 -130.24678040]
[84.69275665 -144.65623474]
[94.78504181 -155.72219849]
[108.62379456 -161.28585815]
[109.51660919 -176.25926208]
[110.40942383 -191.23266602]
[103.50724030 -205.46890259]
[111.98836517 -217.71307373]
[112.88117981 -232.68647766]
[113.77399445 -247.65989685]
[114.44377899 -262.64492798]
[114.89038849 -277.63827515]
[115.33699799 -292.63162231]
[115.78359985 -307.62496948]
[116.23020935 -322.61831665]
[116.67681122 -337.61169434]
[102.58412933 -343.19485474]
[91.25296021 -353.26364136]
[84.05160522 -366.60217285]
[81.84965515 -381.59976196]
[84.91301727 -396.44534302]
[92.87176514 -409.34628296]
[104.76484680 -418.74472046]
[119.15612030 -423.50570679]
[134.30775452 -423.05438232]
[148.39012146 -417.44525146]
[159.70272827 -407.35559082]
[166.87948608 -394.00381470]
[169.05378723 -379.00219727]
[165.96307373 -364.16229248]
[157.98056030 -351.27603149]
[146.07017517 -341.89956665]
[131.67016602 -337.16506958]
[131.22355652 -322.17172241]
[130.77694702 -307.17837524]
[130.33033752 -292.18502808]
[129.88374329 -277.19168091]
[129.43713379 -262.19833374]
[132.00199890 -258.16961670]
[132.06329346 -252.48689270]
[128.74740601 -246.76707458]
[127.85458374 -231.79367065]
[126.96176910 -216.82026672]
[133.92781067 -203.65502930]
[125.38282776 -190.33984375]
[124.49001312 -175.36643982]
[123.59719849 -160.39303589]
[136.67675781 -153.22431946]
[145.38255310 -141.03750610]
[147.94425964 -126.21864319]
[143.80097961 -111.69784546]
[133.72300720 -100.36993408]
[119.66924286 -94.51733398]
[118.77642822 -79.54393005]
[117.88361359 -64.57051849]
[124.84965515 -51.40528107]
[116.30467224 -38.09010696]
[115.41184998 -23.11670303]
[127.91995239 -15.02887440]
[134.74575806 -1.67730296]
[133.96691895 13.39783573]
[125.69261932 26.14274406]
[112.06101990 33.08009338]
[111.16820526 48.05350113]
[118.96025085 57.30609894]
[118.33897400 69.78799438]
[109.09268951 78.78071594]
[107.97704315 93.73917389]
[110.56565094 101.37275696]
[106.73179626 108.91149139]
[105.39356232 123.85167694]
[104.05532837 138.79185486]
[103.05107117 153.75820923]
[102.38128662 168.74324036]
[101.71150208 183.72828674]
[101.04171753 198.71331787]
[100.37193298 213.69836426]
[99.70214844 228.68339539]
[107.81430054 238.71115112]
[106.94793701 251.17843628]
[98.11160278 259.43954468]
[97.77662659 274.43579102]
[97.99995422 289.43414307]
[98.22328186 304.43246460]
[98.44660950 319.43081665]
[98.66993713 334.42913818]
[109.86737061 324.44827271]
[124.84996033 325.17083740]
[135.03498840 336.18286133]
[134.58802795 351.17620850]
[123.76510620 361.56198120]
[108.76608276 361.39074707]
[98.18344879 350.76147461]
[97.06780243 365.71990967]
[103.75725555 380.05734253]
[95.09477997 392.17388916]
[93.97912598 407.13235474]
[92.86347961 422.09078979]
[107.35620880 426.13464355]
[120.77718353 432.92617798]
[132.61143494 442.20266724]
[142.40530396 453.60614014]
[149.78376770 466.69708252]
[154.46490479 480.97143555]
[156.27055359 495.88000488]
[155.13319397 510.84957886]
[151.09840393 525.30499268]
[144.32304382 538.69110107]
[135.06921387 550.49432373]
[123.69403076 560.26220703]
[110.63591003 567.62066650]
[96.39763641 572.28857422]
[81.52702332 574.08831787]
[80.41137695 589.04681396]
[79.29573059 604.00524902]
[78.18007660 618.96368408]
[77.06443024 633.92211914]
[91.51969147 638.13391113]
[104.78320312 645.25946045]
[116.27514648 654.98718262]
[125.49314117 666.89190674]
[132.03421021 680.45318604]
[135.61241150 695.07812500]
[136.07131958 710.12750244]
[133.39088440 724.94335938]
[127.68826294 738.87799072]
[119.21276093 751.32220459]
[108.33488464 761.73211670]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 199]
[18 198]
[19 197]
[20 196]
[21 195]
[36 180]
[37 179]
[38 178]
[40 176]
[41 175]
[42 168]
[43 167]
[44 166]
[45 165]
[46 164]
[52 163]
[54 160]
[55 159]
[56 158]
[57 157]
[58 156]
[59 155]
[63 154]
[64 153]
[65 152]
[66 150]
[67 149]
[69 146]
[70 145]
[75 140]
[76 139]
[78 137]
[79 136]
[80 135]
[86 129]
[87 128]
[88 127]
[90 125]
[91 124]
[92 123]
[93 120]
[94 119]
[95 118]
[96 117]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
