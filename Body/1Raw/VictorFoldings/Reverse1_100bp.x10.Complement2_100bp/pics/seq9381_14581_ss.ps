%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[59.34980011 638.43225098]
[45.43379211 644.04534912]
[31.18046379 648.73626709]
[16.65085030 652.48498535]
[1.90716946 655.27532959]
[-12.98744297 657.09545898]
[-27.96920586 657.93750000]
[-42.97396469 657.79785156]
[-57.93746185 656.67718506]
[-72.79563141 654.58026123]
[-87.48484039 651.51605225]
[-101.94218445 647.49761963]
[-116.10575867 642.54229736]
[-129.91491699 636.67120361]
[-143.31050110 629.90954590]
[-156.23518372 622.28625488]
[-168.63360596 613.83392334]
[-180.45266724 604.58880615]
[-191.64176941 594.59051514]
[-202.15298462 583.88177490]
[-211.94129944 572.50854492]
[-220.96481323 560.51947021]
[-229.18489075 547.96582031]
[-236.56629944 534.90148926]
[-243.07746887 521.38238525]
[-248.69050598 507.46633911]
[-253.38134766 493.21298218]
[-257.12994385 478.68334961]
[-259.92022705 463.93963623]
[-261.74023438 449.04501343]
[-262.58221436 434.06326294]
[-262.44250488 419.05850220]
[-261.32174683 404.09500122]
[-259.22470093 389.23684692]
[-256.16040039 374.54766846]
[-252.14193726 360.09033203]
[-247.18650818 345.92678833]
[-241.31535339 332.11767578]
[-234.55360413 318.72213745]
[-226.93020630 305.79748535]
[-218.47782898 293.39910889]
[-209.23265076 281.58010864]
[-199.23426819 270.39108276]
[-188.52548218 259.87991333]
[-177.15217590 250.09165955]
[-165.16302490 241.06822205]
[-152.60937500 232.84822083]
[-139.54499817 225.46688843]
[-126.02583313 218.95579529]
[-112.10975647 213.34284973]
[-97.85636902 208.65208435]
[-83.32671356 204.90357971]
[-68.58300018 202.11338806]
[-53.68836594 200.29345703]
[-38.70659637 199.45158386]
[-23.70183945 199.59136963]
[-8.73835182 200.71221924]
[6.11979008 202.80934143]
[20.80895996 205.87373352]
[35.26625824 209.89228821]
[49.42977524 214.84779358]
[55.29873657 201.04362488]
[61.16769791 187.23944092]
[67.03665924 173.43527222]
[72.90561676 159.63108826]
[78.77458191 145.82691956]
[83.70616913 131.66078186]
[87.67826843 117.19625854]
[91.65036774 102.73172760]
[90.37277222 99.96455383]
[90.07381439 96.67135620]
[90.95024109 93.21370697]
[93.06250763 90.02081299]
[96.31343079 87.53797913]
[101.13942719 73.33552551]
[105.96542358 59.13307190]
[103.07949066 43.57730103]
[114.50018311 34.01608276]
[119.32617950 19.81362534]
[124.15218353 5.61116982]
[128.97817993 -8.59128571]
[133.48580933 -22.89797211]
[137.67282104 -37.30175400]
[141.85983276 -51.70553589]
[146.04684448 -66.10932159]
[150.23385620 -80.51309967]
[154.42086792 -94.91688538]
[140.55053711 -100.66816711]
[127.39710236 -107.91042328]
[115.12021637 -116.55573273]
[103.86892700 -126.49915314]
[93.77980042 -137.61997986]
[84.97531891 -149.78321838]
[77.56234741 -162.84120178]
[71.63088989 -176.63543701]
[67.25293732 -190.99847412]
[64.48163605 -205.75595093]
[63.35063171 -220.72872925]
[63.87364578 -235.73504639]
[66.04433441 -250.59274292]
[69.83634949 -265.12145996]
[75.20365143 -279.14486694]
[82.08110046 -292.49264526]
[90.38519287 -305.00286865]
[100.01513672 -316.52359009]
[110.85402679 -326.91500854]
[122.77029419 -336.05099487]
[135.61927795 -343.82058716]
[149.24502563 -350.12948608]
[163.48210144 -354.90115356]
[178.15769958 -358.07763672]
[193.09367371 -359.62036133]
[208.10870361 -359.51062012]
[223.02052307 -357.74972534]
[237.64813232 -354.35906982]
[251.81393433 -349.37982178]
[265.34600830 -342.87240601]
[278.08004761 -334.91580200]
[289.86148071 -325.60662842]
[300.54733276 -315.05789185]
[310.00784302 -303.39761353]
[318.12817383 -290.76736450]
[324.80978394 -277.32046509]
[329.97152710 -263.22012329]
[333.55078125 -248.63751221]
[335.50402832 -233.74967957]
[335.80764771 -218.73731995]
[334.45791626 -203.78266907]
[331.47119141 -189.06727600]
[326.88375854 -174.76977539]
[320.75128174 -161.06372070]
[313.14822388 -148.11547852]
[304.16690063 -136.08224487]
[293.91629028 -125.11008453]
[282.52084351 -115.33219147]
[270.11892700 -106.86725616]
[256.86102295 -99.81804657]
[242.90811157 -94.27011871]
[228.42955017 -90.29083252]
[213.60112000 -87.92848969]
[198.60279846 -87.21176147]
[183.61666870 -88.14934540]
[168.82464600 -90.72987366]
[164.63763428 -76.32608795]
[160.45062256 -61.92230606]
[156.26361084 -47.51852417]
[152.07659912 -33.11474228]
[147.88958740 -18.71096230]
[149.25820923 -15.46146774]
[149.12091064 -11.38762379]
[147.10737610 -7.20444632]
[143.18063354 -3.76528835]
[138.35462952 10.43716717]
[133.52864075 24.63962364]
[128.70263672 38.84207916]
[131.93376160 53.38199234]
[120.16788483 63.95906830]
[115.34188080 78.16152191]
[110.51588440 92.36398315]
[106.11489105 106.70382690]
[102.14279175 121.16835022]
[98.17069244 135.63287354]
[110.26756287 126.76350403]
[125.23233032 125.73593140]
[138.42799377 132.86857605]
[145.76573181 145.95129395]
[144.97186279 160.93026733]
[136.29240417 173.16410828]
[122.41674042 178.86201477]
[107.64442444 176.25843811]
[96.55281067 166.16011047]
[92.57875824 151.69587708]
[86.70979309 165.50004578]
[80.84083557 179.30422974]
[74.97187042 193.10839844]
[69.10291290 206.91258240]
[63.23395157 220.71676636]
[76.62963104 227.47827148]
[89.55439758 235.10142517]
[101.95291901 243.55358887]
[113.77208710 252.79855347]
[124.96130371 262.79675293]
[135.47264099 273.50534058]
[145.26110840 284.87847900]
[154.28475952 296.86746216]
[162.50497437 309.42095947]
[169.88655090 322.48522949]
[176.39787292 336.00427246]
[182.01106262 349.92025757]
[186.70208740 364.17355347]
[190.45085144 378.70315552]
[193.24130249 393.44680786]
[195.06149292 408.34140015]
[195.90362549 423.32315063]
[195.76411438 438.32791138]
[194.64352417 453.29144287]
[192.54667664 468.14959717]
[189.48254395 482.83883667]
[185.46423340 497.29620361]
[180.50897217 511.45980835]
[174.63798523 525.26898193]
[167.87638855 538.66461182]
[160.25315857 551.58935547]
[151.80091858 563.98785400]
[142.55587769 575.80694580]
[132.55763245 586.99609375]
[121.84897614 597.50738525]
[110.47577667 607.29577637]
[98.48673248 616.31933594]
[85.93318939 624.53948975]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 177]
[62 176]
[63 175]
[64 174]
[65 173]
[66 172]
[67 162]
[68 161]
[69 160]
[74 159]
[75 158]
[76 157]
[78 155]
[79 154]
[80 153]
[81 152]
[82 148]
[83 147]
[84 146]
[85 145]
[86 144]
[87 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
