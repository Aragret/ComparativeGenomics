%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[118.83138275 478.22286987]
[103.58348846 477.54132080]
[90.14538574 470.30389404]
[81.18521881 457.94760132]
[78.48204041 442.92578125]
[82.57256317 428.22100830]
[92.64460754 416.75292969]
[106.69837189 410.79855347]
[107.36815643 395.81350708]
[108.03794098 380.82849121]
[100.87666321 367.76840210]
[109.22245789 354.32748413]
[109.89224243 339.34246826]
[110.56202698 324.35742188]
[111.23181152 309.37237549]
[111.56678772 294.37612915]
[111.56678772 279.37612915]
[111.56678772 264.37612915]
[111.56678772 249.37611389]
[101.98609161 234.67315674]
[111.32553864 218.80317688]
[111.10221100 203.80482483]
[110.87888336 188.80648804]
[109.09641266 173.91278076]
[105.77415466 159.28532410]
[95.41013336 148.58782959]
[99.89875031 133.41670227]
[96.57649231 118.78924561]
[84.37232208 110.97870636]
[81.16312408 96.84904480]
[88.79605103 84.53301239]
[85.47379303 69.90554810]
[82.15152740 55.27809143]
[78.82926941 40.65063095]
[75.50701141 26.02317047]
[72.18475342 11.39570999]
[68.86249542 -3.23174977]
[65.54022980 -17.85920906]
[55.06225586 -25.38083649]
[52.59627533 -37.63247681]
[58.92957306 -47.93858719]
[55.82546234 -62.61388779]
[52.72135162 -77.28919220]
[49.61724472 -91.96449280]
[46.07757187 -106.54087067]
[42.10547256 -121.00539398]
[38.13337708 -135.46992493]
[34.05371094 -149.90446472]
[29.86669922 -164.30825806]
[25.67968941 -178.71203613]
[5.77877331 -184.51507568]
[-6.48256159 -201.05659485]
[-6.25108957 -221.50625610]
[6.21051931 -237.54586792]
[0.96380097 -251.59834290]
[-4.28291702 -265.65081787]
[-9.63410282 -279.66384888]
[-15.08946037 -293.63662720]
[-20.54481697 -307.60943604]
[-26.00017357 -321.58224487]
[-42.14748001 -328.31155396]
[-48.31065750 -344.32186890]
[-41.13171005 -359.53045654]
[-46.79449463 -373.42050171]
[-52.45728302 -387.31051636]
[-58.12006760 -401.20056152]
[-63.78285599 -415.09057617]
[-78.27181244 -411.13742065]
[-93.13162994 -408.95956421]
[-108.14562225 -408.58877563]
[-123.09483337 -410.03048706]
[-137.76126099 -413.26364136]
[-151.93101501 -418.24111938]
[-165.39747620 -424.89031982]
[-177.96424866 -433.11428833]
[-189.44808960 -442.79306030]
[-199.68151855 -453.78552246]
[-208.51528931 -465.93139648]
[-215.82061768 -479.05349731]
[-221.49092102 -492.96051025]
[-225.44355774 -507.44961548]
[-227.62084961 -522.30950928]
[-227.99105835 -537.32348633]
[-226.54879761 -552.27264404]
[-223.31509399 -566.93896484]
[-218.33708191 -581.10852051]
[-211.68737793 -594.57476807]
[-203.46295166 -607.14123535]
[-193.78373718 -618.62469482]
[-182.79089355 -628.85772705]
[-170.64471436 -637.69104004]
[-157.52232361 -644.99584961]
[-143.61511230 -650.66564941]
[-129.12585449 -654.61773682]
[-114.26587677 -656.79449463]
[-99.25185394 -657.16412354]
[-84.30275726 -655.72131348]
[-69.63657379 -652.48706055]
[-55.46718597 -647.50854492]
[-42.00122070 -640.85833740]
[-29.43505859 -632.63342285]
[-17.95194817 -622.95379639]
[-7.71934414 -611.96057129]
[1.11352944 -599.81402588]
[8.41786385 -586.69140625]
[14.08713913 -572.78393555]
[18.03868294 -558.29455566]
[20.21486855 -543.43450928]
[20.58395958 -528.42047119]
[19.14057732 -513.47137451]
[15.90576649 -498.80532837]
[10.92670345 -484.63613892]
[4.27599478 -471.17041016]
[-3.94937062 -458.60458374]
[-13.62944317 -447.12182617]
[-24.62306023 -436.88961792]
[-36.76990128 -428.05722046]
[-49.89282608 -420.75335693]
[-44.23004150 -406.86334229]
[-38.56725311 -392.97329712]
[-32.90446854 -379.08328247]
[-27.24168205 -365.19326782]
[-14.78261185 -361.90676880]
[-6.36568213 -351.89489746]
[-5.23529768 -338.66867065]
[-12.02737617 -327.03759766]
[-6.57201958 -313.06478882]
[-1.11666238 -299.09201050]
[4.33869457 -285.11920166]
[9.69958496 -280.03170776]
[9.76955414 -270.89752197]
[15.01627254 -256.84506226]
[20.26299095 -242.79258728]
[29.91884804 -242.56248474]
[39.08766174 -239.43321228]
[46.91696548 -233.67697144]
[52.67321777 -225.81108093]
[55.81052399 -216.55148315]
[56.02236557 -206.74760437]
[53.27145386 -197.30445862]
[47.79481506 -189.09907532]
[40.08346939 -182.89904785]
[44.27048111 -168.49526978]
[48.45749283 -154.09147644]
[53.34312057 -148.54598999]
[52.59790039 -139.44201660]
[56.56999969 -124.97749329]
[60.54209518 -110.51296234]
[62.90888977 -109.01082611]
[64.82328033 -106.48066711]
[65.89071655 -103.09008789]
[65.78456879 -99.14633179]
[64.29254150 -95.06860352]
[67.39665222 -80.39330292]
[70.50076294 -65.71800232]
[73.60487366 -51.04269791]
[86.02082062 -38.64063263]
[80.16769409 -21.18146896]
[83.48995209 -6.55400944]
[86.81221008 8.07345104]
[90.13446808 22.70091057]
[93.45673370 37.32837296]
[96.77899170 51.95582962]
[100.10124969 66.58329010]
[103.42350769 81.21075439]
[115.62767792 89.02129364]
[118.83687592 103.15095520]
[111.20394897 115.46698761]
[114.52620697 130.09445190]
[125.12786102 141.83819580]
[120.40161133 155.96305847]
[123.72387695 170.59051514]
[128.29223633 156.30310059]
[137.92161560 144.80201721]
[151.18353271 137.79335022]
[166.11068726 136.31681824]
[180.48870850 140.59146118]
[192.18470764 149.98313904]
[199.46365356 163.09866333]
[201.24575806 177.99241638]
[197.26664734 192.45501709]
[188.11660767 204.34100342]
[175.15299988 211.88717651]
[160.29887390 213.97410583]
[145.75778198 210.29219055]
[133.68678284 201.38763428]
[125.87722015 188.58316040]
[126.10054779 203.58149719]
[126.32387543 218.57984924]
[135.01850891 228.10696411]
[134.89573669 240.60371399]
[126.56678772 249.37611389]
[126.56678772 264.37612915]
[126.56678772 279.37612915]
[126.56678772 294.37612915]
[129.17825317 298.89578247]
[129.73886108 303.50436401]
[128.55816650 307.40576172]
[126.21685028 310.04217529]
[125.54706573 325.02719116]
[124.87728119 340.01223755]
[124.20749664 354.99728394]
[131.32086182 369.12918091]
[123.02297974 381.49826050]
[122.35319519 396.48330688]
[121.68341064 411.46835327]
[135.14990234 418.65277100]
[144.15866089 430.97369385]
[146.92097473 445.98477173]
[142.88839722 460.70553589]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 206]
[9 205]
[10 204]
[12 202]
[13 201]
[14 200]
[15 199]
[16 195]
[17 194]
[18 193]
[19 192]
[21 189]
[22 188]
[23 187]
[24 172]
[25 171]
[27 169]
[28 168]
[31 165]
[32 164]
[33 163]
[34 162]
[35 161]
[36 160]
[37 159]
[38 158]
[41 156]
[42 155]
[43 154]
[44 153]
[45 148]
[46 147]
[47 146]
[48 144]
[49 143]
[50 142]
[54 133]
[55 132]
[56 131]
[57 129]
[58 128]
[59 127]
[60 126]
[63 122]
[64 121]
[65 120]
[66 119]
[67 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
