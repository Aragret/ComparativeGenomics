%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[137.50425720 496.89724731]
[150.50842285 489.16763306]
[147.18615723 474.54016113]
[143.86389160 459.91268921]
[140.54164124 445.28524780]
[137.21937561 430.65777588]
[133.89712524 416.03030396]
[130.57485962 401.40286255]
[127.08283997 398.14480591]
[125.60044098 392.65850830]
[127.37831879 386.29055786]
[124.49304199 371.57067871]
[121.60777283 356.85079956]
[112.36238861 368.66275024]
[97.48989105 370.61441040]
[85.50993347 361.58776855]
[83.28517151 346.75366211]
[92.09004974 334.60977173]
[106.88073730 332.11267090]
[119.18394470 340.69198608]
[117.62342072 325.77337646]
[116.06289673 310.85479736]
[114.50237274 295.93618774]
[112.94184875 281.01757812]
[101.62185669 277.77078247]
[92.03153229 270.87686157]
[85.30783844 261.12438965]
[82.25754547 249.64241028]
[83.26048279 237.76985168]
[88.22244263 226.89933777]
[96.58344269 218.31381226]
[107.38086700 213.03520203]
[106.48805237 198.06178284]
[105.59523773 183.08837891]
[104.70242310 168.11497498]
[103.80960846 153.14157104]
[101.58448792 138.30752563]
[98.04481506 123.73115540]
[94.50514221 109.15477753]
[89.46823120 95.02574921]
[82.98873138 81.49740601]
[76.50923920 67.96905518]
[70.02973938 54.44071198]
[63.55024338 40.91236496]
[62.25977707 55.85675049]
[55.41686630 69.20495605]
[44.03661728 78.97685242]
[29.80722427 83.72283936]
[14.83953190 82.73887634]
[1.35390818 76.17092133]
[-8.64913464 64.99330902]
[-13.68570328 50.86415100]
[-13.00865555 35.87944031]
[-6.71842480 22.26206207]
[4.25186920 12.03207302]
[18.27484894 6.70703459]
[33.27028656 7.07688189]
[47.01370239 13.08675098]
[57.46529770 23.84351349]
[53.92562485 9.26713753]
[50.38595200 -5.30923796]
[47.11925507 9.33073044]
[40.71821976 22.89637566]
[31.49516487 34.72579956]
[19.90010643 44.24181747]
[6.49879217 50.98012543]
[-8.05489826 54.61194229]
[-23.05085754 54.96006393]
[-37.75740051 52.00750732]
[-51.45696259 45.89833069]
[-63.48110962 36.93061829]
[-73.24315643 25.54192162]
[-80.26679993 12.28792286]
[-84.20932770 -2.18468785]
[-84.87837982 -17.16975975]
[-82.24131775 -31.93613625]
[-76.42680359 -45.76333618]
[-67.71854401 -57.97669601]
[-56.54142761 -67.98030090]
[-43.44081879 -75.28605652]
[-29.05591965 -79.53749084]
[-14.08860397 -80.52716827]
[0.73084027 -78.20681000]
[14.67933941 -72.68962097]
[27.07631493 -64.24479675]
[37.31689072 -53.28438950]
[44.90140915 -40.34317017]
[49.45849991 -26.05906677]
[51.68361664 -40.89310837]
[49.62316895 -47.17531204]
[50.85911560 -52.72233582]
[54.20217133 -56.13306046]
[56.86796570 -70.89427948]
[51.70639801 -85.84983826]
[61.58241653 -96.99943542]
[64.24821472 -111.76065063]
[66.91400909 -126.52186584]
[69.57980347 -141.28308105]
[55.71962357 -147.18589783]
[43.52075577 -156.02531433]
[33.59508514 -167.35795593]
[26.44048309 -180.61538696]
[22.41581917 -195.13261414]
[21.72296715 -210.18145752]
[24.39668465 -225.00708008]
[30.30285645 -238.86582947]
[39.14523315 -251.06254578]
[50.48028183 -260.98547363]
[63.73944092 -268.13687134]
[78.25763702 -272.15802002]
[93.30664825 -272.84722900]
[108.13162231 -270.16992188]
[121.98893738 -264.26037598]
[134.18351746 -255.41505432]
[144.10369873 -244.07759094]
[151.25187683 -230.81669617]
[155.26950073 -216.29753113]
[155.95506287 -201.24835205]
[153.27415466 -186.42402649]
[147.36128235 -172.56814575]
[138.51298523 -160.37570190]
[127.17313385 -150.45828247]
[113.91050720 -143.31330872]
[99.39036560 -139.29919434]
[84.34101868 -138.61729431]
[81.67522430 -123.85607147]
[79.00942993 -109.09485626]
[76.34363556 -94.33364105]
[81.69587708 -80.43389893]
[71.62918091 -68.22847748]
[68.96338654 -53.46726227]
[66.51766205 -38.66799164]
[64.29254150 -23.83395004]
[64.96232605 -8.84891033]
[68.50199890 5.72746515]
[72.04167175 20.30384064]
[77.07859039 34.43286896]
[83.55808258 47.96121597]
[90.03758240 61.48955917]
[96.51707458 75.01790619]
[102.99657440 88.54624939]
[104.28704071 73.60186768]
[111.12995148 60.25366211]
[122.51020050 50.48176575]
[136.73959351 45.73577881]
[151.70729065 46.71974564]
[165.19290161 53.28769302]
[175.19595337 64.46530914]
[180.23252869 78.59446716]
[179.55546570 93.57917786]
[173.26524353 107.19655609]
[162.29495239 117.42654419]
[148.27197266 122.75158691]
[133.27653503 122.38173676]
[119.53311157 116.37186432]
[109.08152008 105.61510468]
[112.62119293 120.19148254]
[116.16086578 134.76785278]
[121.08554840 120.59931946]
[131.60852051 109.90973663]
[145.69795227 104.76310730]
[160.63340759 106.15316010]
[173.53106689 113.81150055]
[181.90061951 126.25942230]
[184.12600708 141.09342957]
[179.77757263 155.44929504]
[169.69490051 166.55514526]
[155.82481384 172.26660156]
[140.84541321 171.48086548]
[127.64896393 164.34967041]
[118.78301239 152.24874878]
[119.67582703 167.22216797]
[120.56864166 182.19557190]
[121.46145630 197.16897583]
[122.35427856 212.14237976]
[139.13511658 219.83848572]
[149.63763428 234.91789246]
[151.02510071 253.15644836]
[142.99954224 269.49822998]
[127.86045074 279.45706177]
[129.42097473 294.37564087]
[130.98150635 309.29425049]
[132.54202271 324.21286011]
[134.10253906 339.13146973]
[136.32766724 353.96551514]
[139.21293640 368.68539429]
[142.09820557 383.40530396]
[145.20231628 398.08059692]
[148.52458191 412.70806885]
[151.84683228 427.33551025]
[155.16909790 441.96298218]
[158.49136353 456.59045410]
[161.81361389 471.21789551]
[165.13587952 485.84536743]
[180.20312500 487.19927979]
[194.11375427 493.14480591]
[205.50494385 503.09951782]
[213.26069641 516.08813477]
[216.62118530 530.83807373]
[215.25717163 545.90441895]
[209.30230713 559.81109619]
[199.33998108 571.19561768]
[186.34619141 578.94262695]
[171.59394836 582.29327393]
[156.52851868 580.91912842]
[142.62586975 574.95495605]
[131.24803162 564.98498535]
[123.50970459 551.98602295]
[120.16898346 537.23156738]
[121.55318451 522.16705322]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 194]
[3 193]
[4 192]
[5 191]
[6 190]
[7 189]
[8 188]
[11 187]
[12 186]
[13 185]
[20 184]
[21 183]
[22 182]
[23 181]
[24 180]
[32 175]
[33 174]
[34 173]
[35 172]
[36 171]
[37 158]
[38 157]
[39 156]
[40 141]
[41 140]
[42 139]
[43 138]
[44 137]
[59 136]
[60 135]
[61 134]
[88 133]
[89 132]
[92 131]
[93 130]
[95 128]
[96 127]
[97 126]
[98 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
