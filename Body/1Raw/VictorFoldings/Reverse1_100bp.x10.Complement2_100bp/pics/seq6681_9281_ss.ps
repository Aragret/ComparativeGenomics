%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[186.99951172 596.71026611]
[196.23963928 584.64013672]
[209.39796448 577.02911377]
[207.39393616 562.16363525]
[205.38992310 547.29809570]
[203.38591003 532.43255615]
[201.38189697 517.56701660]
[199.37788391 502.70150757]
[197.37387085 487.83596802]
[195.36985779 472.97045898]
[193.14474487 458.13641357]
[190.69902039 443.33712769]
[188.25329590 428.53787231]
[185.80755615 413.73858643]
[170.84555054 413.07980347]
[156.34185791 409.32299805]
[142.93104553 402.62997437]
[131.20040894 393.29113770]
[121.66422272 381.71279907]
[114.74118042 368.39950562]
[110.73606110 353.93203735]
[109.82626343 338.94219971]
[112.05400085 324.08499146]
[117.32428741 310.01022339]
[125.40904236 297.33395386]
[135.95692444 286.61160278]
[148.50860596 278.31350708]
[162.51678467 272.80447388]
[160.07106018 258.00518799]
[157.62533569 243.20593262]
[155.17961121 228.40666199]
[150.45947266 214.16867065]
[143.58006287 200.83924866]
[136.70065308 187.50981140]
[129.82124329 174.18038940]
[122.94182587 160.85095215]
[116.06240845 147.52153015]
[103.34974670 139.76025391]
[103.89619446 123.94847870]
[97.01678467 110.61904907]
[90.03858948 123.89703369]
[75.33612823 126.86981964]
[63.74749374 117.34597778]
[63.81540298 102.34613037]
[75.48979950 92.92760468]
[90.16342926 96.03239441]
[84.29447174 82.22821808]
[78.42550659 68.42403412]
[72.55654907 54.61986160]
[69.15148163 69.22826385]
[58.97077179 80.24430847]
[44.67562866 84.78841400]
[30.00277138 81.67276764]
[18.78764725 71.71179199]
[13.96186447 57.50926590]
[16.78687096 42.77769089]
[26.52421570 31.36786461]
[40.62858200 26.26229095]
[55.41312027 28.79555321]
[67.01266479 38.30474472]
[63.25636673 23.78268623]
[59.50006866 9.26062679]
[55.74376678 -5.26143265]
[44.79715729 -16.68431854]
[49.10076141 -30.94363976]
[45.34446335 -45.46569824]
[41.58816147 -59.98775864]
[30.64155197 -71.41064453]
[34.94515610 -85.66996765]
[31.74391747 -71.01554871]
[24.75651741 -57.74240494]
[14.48738480 -46.80874634]
[1.67785609 -39.00387955]
[-12.74733734 -34.89123917]
[-27.74682999 -34.76773071]
[-42.23779297 -38.64226151]
[-55.17411041 -46.23512650]
[-65.62190247 -56.99819565]
[-72.82693481 -70.15447235]
[-76.26905823 -84.75418854]
[-75.69979858 -99.74338531]
[-71.16024780 -114.03997040]
[-62.97810745 -126.61186981]
[-51.74406815 -136.55149841]
[-38.26911545 -143.14132690]
[-23.52602386 -145.90559387]
[-8.57910633 -144.64477539]
[5.49260473 -139.44989014]
[17.67326164 -130.69593811]
[27.08353043 -119.01489258]
[33.04439163 -105.24889374]
[33.93721008 -120.22229767]
[34.83002472 -135.19570923]
[35.72283936 -150.16911316]
[36.61565399 -165.14251709]
[37.50847244 -180.11592102]
[23.18902397 -184.87153625]
[10.58887577 -193.17205811]
[0.56712687 -204.45155334]
[-6.19292355 -217.94094849]
[-9.23036480 -232.72055054]
[-8.33809757 -247.78262329]
[-3.57695889 -262.10025024]
[4.72842884 -274.69717407]
[16.01179123 -284.71456909]
[29.50380707 -291.46942139]
[44.28457260 -294.50115967]
[59.34630585 -293.60305786]
[73.66207886 -288.83639526]
[86.25581360 -280.52615356]
[96.26885223 -269.23892212]
[103.01847839 -255.74429321]
[106.04450989 -240.96235657]
[105.14060974 -225.90097046]
[100.36841583 -211.58705139]
[92.05329895 -198.99652100]
[80.76220703 -188.98783875]
[67.26497650 -182.24342346]
[52.48187637 -179.22309875]
[51.58906174 -164.24969482]
[50.69624710 -149.27629089]
[49.80342865 -134.30288696]
[48.91061401 -119.32948303]
[48.01779938 -104.35607910]
[49.46721649 -89.42626953]
[60.14514923 -79.04209900]
[56.11022186 -63.74406052]
[59.86651993 -49.22200012]
[63.62282181 -34.69993973]
[74.30075836 -24.31576920]
[70.26582336 -9.01773357]
[74.02212524 5.50432587]
[77.77842712 20.02638435]
[81.53472900 34.54844284]
[86.36072540 48.75090027]
[92.22968292 62.55507660]
[98.09864807 76.35925293]
[103.96760559 90.16342926]
[110.34621429 103.73963928]
[117.22562408 117.06906891]
[130.43034363 125.78376007]
[129.39184570 140.64212036]
[136.27125549 153.97154236]
[143.15066528 167.30096436]
[150.03007507 180.63040161]
[156.90948486 193.95982361]
[163.78890991 207.28926086]
[163.66491699 192.28976440]
[167.53898621 177.79869080]
[175.13145447 164.86212158]
[185.89419556 154.41400146]
[199.05023193 147.20855713]
[213.64984131 143.76596069]
[228.63905334 144.33474731]
[242.93579102 148.87385559]
[255.50794983 157.05558777]
[265.44793701 168.28932190]
[272.03817749 181.76405334]
[274.80291748 196.50706482]
[273.54257202 211.45402527]
[268.34811401 225.52589417]
[259.59457397 237.70683289]
[247.91381836 247.11746216]
[234.14912415 253.07844543]
[219.29417419 255.15945435]
[204.42135620 253.21023560]
[190.60437012 247.37152100]
[178.84065247 238.06480408]
[169.97888184 225.96093750]
[172.42460632 240.76020813]
[174.87033081 255.55947876]
[177.31605530 270.35873413]
[192.35188293 271.06796265]
[206.90596008 274.88656616]
[220.34275818 281.64520264]
[232.07601929 291.04635620]
[241.59440613 302.67712402]
[248.48374939 316.02764893]
[252.44506836 330.51321411]
[253.30755615 345.50003052]
[251.03593445 360.33282471]
[245.73191833 374.36367798]
[237.62960815 386.98010254]
[227.08522034 397.63195801]
[214.56137085 405.85534668]
[200.60682678 411.29284668]
[203.05256653 426.09213257]
[205.49829102 440.89138794]
[207.94401550 455.69067383]
[211.83697510 461.03448486]
[212.36721802 466.69274902]
[210.23538208 470.96643066]
[212.23941040 485.83197021]
[214.24342346 500.69747925]
[216.24743652 515.56298828]
[218.25144958 530.42852783]
[220.25546265 545.29406738]
[222.25947571 560.15960693]
[224.26348877 575.02514648]
[238.96751404 578.88000488]
[251.07403564 588.07244873]
[258.73687744 601.20062256]
[260.78756714 616.26257324]
[256.91333008 630.96154785]
[247.70500183 643.05596924]
[234.56675720 650.70153809]
[219.50209045 652.73242188]
[204.80825806 648.83880615]
[192.72596741 639.61456299]
[185.09767151 626.46630859]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 199]
[4 198]
[5 197]
[6 196]
[7 195]
[8 194]
[9 193]
[10 192]
[11 189]
[12 188]
[13 187]
[14 186]
[28 172]
[29 171]
[30 170]
[31 169]
[32 147]
[33 146]
[34 145]
[35 144]
[36 143]
[37 142]
[39 140]
[40 139]
[46 138]
[47 137]
[48 136]
[49 135]
[60 134]
[61 133]
[62 132]
[63 131]
[65 129]
[66 128]
[67 127]
[69 125]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
[96 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
