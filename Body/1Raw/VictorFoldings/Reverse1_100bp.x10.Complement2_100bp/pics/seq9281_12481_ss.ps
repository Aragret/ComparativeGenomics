%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[50.86433029 618.55090332]
[35.95526505 616.35626221]
[21.95442390 610.78192139]
[9.61685276 602.12854004]
[-0.39209828 590.86279297]
[-7.53265953 577.59216309]
[-11.41974926 563.03234863]
[-11.84374142 547.96862793]
[-8.78177071 533.21325684]
[-2.39896607 519.56201172]
[6.96045685 507.75106812]
[18.79175568 498.41741943]
[32.45688248 492.06439209]
[47.21889877 489.03457642]
[47.66550446 474.04122925]
[40.31056976 461.08923340]
[48.45532227 447.52554321]
[48.90193176 432.53219604]
[38.53298950 421.90109253]
[38.77232361 406.68933105]
[49.99352264 395.88552856]
[50.44012833 380.89215088]
[50.77510452 365.89590454]
[50.99843216 350.89758301]
[43.45148087 338.05651855]
[51.39338684 324.37307739]
[51.61671448 309.37472534]
[51.84004211 294.37640381]
[52.06336975 279.37805176]
[44.51641846 266.53698730]
[52.45832443 252.85354614]
[52.68165207 237.85520935]
[45.57471848 251.06472778]
[34.93217850 261.63528442]
[21.67471695 268.65237427]
[6.94923735 271.50900269]
[-7.97035980 269.95797729]
[-21.79338074 264.13354492]
[-33.32399368 254.53953552]
[-41.56468582 242.00595093]
[-45.80255890 227.61705017]
[-45.67098999 212.61761475]
[-41.18136215 198.30528259]
[-32.72207260 185.91816711]
[-21.02493477 176.52790833]
[-7.10186911 170.94685364]
[7.84264040 169.65780640]
[22.51574516 172.77229309]
[35.64807129 180.02087402]
[46.10354614 190.77647400]
[52.97766495 204.10864258]
[55.67562866 218.86047363]
[52.01302719 204.42320251]
[63.45877838 193.50050354]
[67.85977936 179.16065979]
[72.26077271 164.82081604]
[76.66177368 150.48095703]
[81.06276703 136.14111328]
[85.46376801 121.80126953]
[89.86476898 107.46142578]
[93.94443512 93.02687073]
[97.70073700 78.50481415]
[101.45703125 63.98274994]
[105.21333313 49.46069336]
[97.45387268 35.95408630]
[101.47016144 21.28016090]
[114.39447021 13.96593380]
[118.15077209 -0.55612582]
[121.90707397 -15.07818508]
[125.22933197 -29.70564461]
[128.11460876 -44.42553711]
[130.89021301 -59.16650009]
[133.55601501 -73.92771912]
[136.22180176 -88.68893433]
[131.06024170 -103.64449310]
[140.93624878 -114.79409027]
[143.60205078 -129.55531311]
[135.14295959 -149.24430847]
[149.13287354 -164.41819763]
[151.13688660 -179.28373718]
[153.14089966 -194.14926147]
[155.03417969 -209.02929688]
[156.81665039 -223.92301941]
[158.59912109 -238.81672668]
[160.38157654 -253.71044922]
[162.16404724 -268.60415649]
[163.94651794 -283.49789429]
[164.05818176 -298.49746704]
[162.49766541 -313.41607666]
[160.93713379 -328.33468628]
[156.93191528 -336.54418945]
[159.46614075 -343.48678589]
[158.12789917 -358.42697144]
[143.37660217 -361.78173828]
[130.38500977 -369.53244019]
[120.42590332 -380.91976929]
[114.47496796 -394.82809448]
[113.11522675 -409.89483643]
[116.47988129 -424.64389038]
[124.23930359 -437.63027954]
[135.63330078 -447.58175659]
[149.54560852 -453.52337646]
[164.61325073 -454.87301636]
[179.36003113 -451.49847412]
[192.34123230 -443.73034668]
[202.28507996 -432.32968140]
[208.21736145 -418.41339111]
[209.55691528 -403.34487915]
[206.17250061 -388.60034180]
[198.39567566 -375.62435913]
[186.98835754 -365.68814087]
[173.06808472 -359.76519775]
[174.40632629 -344.82501221]
[175.85574341 -329.89520264]
[177.41625977 -314.97659302]
[178.97679138 -300.05798340]
[185.00343323 -313.79406738]
[195.53337097 -324.47677612]
[209.18119812 -330.70065308]
[224.15133667 -331.64682007]
[238.47418213 -327.19079590]
[250.26531982 -317.91885376]
[257.97341919 -305.05087280]
[260.58438110 -290.27984619]
[257.75463867 -275.54916382]
[249.85653687 -262.79693604]
[237.92918396 -253.70086670]
[223.54182434 -249.45776367]
[208.58737183 -250.62583923]
[195.03334045 -257.05145264]
[184.66300964 -267.88916016]
[178.84024048 -281.71542358]
[177.05776978 -266.82168579]
[175.27529907 -251.92797852]
[173.49282837 -237.03427124]
[171.71037292 -222.14054871]
[169.92790222 -207.24682617]
[172.25428772 -200.23187256]
[168.00642395 -192.14524841]
[166.00241089 -177.27972412]
[163.99839783 -162.41418457]
[170.45973206 -156.32452393]
[173.43969727 -147.81484985]
[172.15049744 -138.75216675]
[166.75604248 -131.18699646]
[158.36326599 -126.88951111]
[155.69747925 -112.12829590]
[161.04971313 -98.22855377]
[150.98301697 -86.02313995]
[148.31723022 -71.26192474]
[145.65142822 -56.50070572]
[147.55615234 -49.35971069]
[142.83448792 -41.54026413]
[139.94921875 -26.82037354]
[141.39938354 -24.42137718]
[141.98664856 -21.30340767]
[141.43240356 -17.79225159]
[139.58102417 -14.30844307]
[136.42912292 -11.32188416]
[132.67283630 3.20017481]
[128.91653442 17.72223473]
[136.67332458 30.38587189]
[133.07077026 45.16681290]
[119.73539734 53.21699142]
[115.97909546 67.73905182]
[112.22279358 82.26110840]
[108.46649170 96.78317261]
[109.93298340 100.34992981]
[109.82017517 104.54577637]
[107.88237762 108.65089417]
[104.20461273 111.86241913]
[99.80361176 126.20227051]
[95.40261841 140.54211426]
[91.00161743 154.88195801]
[86.60062408 169.22181702]
[82.19962311 183.56166077]
[77.79862213 197.90150452]
[81.14643860 213.36445618]
[70.01547241 223.26147461]
[67.67999268 238.07853699]
[67.45666504 253.07687378]
[74.98764038 266.99072266]
[67.06170654 279.60137939]
[66.83837891 294.59973145]
[66.61505127 309.59805298]
[66.39172363 324.59640503]
[73.92269897 338.51022339]
[65.99677277 351.12091064]
[65.77344513 366.11923218]
[68.77473450 374.74652100]
[65.43347931 381.33877563]
[64.98686981 396.33212280]
[75.54512024 407.78466797]
[74.87861633 422.98370361]
[63.89527893 432.97882080]
[63.44867325 447.97216797]
[70.77165985 461.99658203]
[62.65885162 474.48785400]
[62.21224594 489.48120117]
[76.76775360 493.38427734]
[90.03050995 500.53939819]
[101.28528595 510.56069946]
[109.92511749 522.90777588]
[115.48406982 536.91473389]
[117.66235352 551.82617188]
[116.34250641 566.83801270]
[111.59569550 581.14062500]
[103.67790985 593.96270752]
[93.01615143 604.61273193]
[80.18539429 612.51641846]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 199]
[15 198]
[17 196]
[18 195]
[21 192]
[22 191]
[23 189]
[24 188]
[26 186]
[27 185]
[28 184]
[29 183]
[31 181]
[32 180]
[52 179]
[54 177]
[55 176]
[56 175]
[57 174]
[58 173]
[59 172]
[60 171]
[61 167]
[62 166]
[63 165]
[64 164]
[67 161]
[68 160]
[69 159]
[70 154]
[71 153]
[72 151]
[73 150]
[74 149]
[76 147]
[77 146]
[79 141]
[80 140]
[81 139]
[82 137]
[83 136]
[84 135]
[85 134]
[86 133]
[87 132]
[88 116]
[89 115]
[90 114]
[92 113]
[93 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
