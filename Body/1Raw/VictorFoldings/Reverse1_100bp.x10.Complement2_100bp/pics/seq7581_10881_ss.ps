%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[141.03330994 537.54327393]
[140.62997437 522.49920654]
[143.16963196 507.66555786]
[148.55467224 493.61254883]
[156.57810974 480.88027954]
[166.93153381 469.95816040]
[179.21699524 461.26599121]
[192.96228027 455.13790894]
[189.64002991 440.51046753]
[186.31776428 425.88299561]
[182.99551392 411.25552368]
[172.63148499 400.55804443]
[177.12010193 385.38693237]
[173.79783630 370.75946045]
[170.47558594 356.13201904]
[167.15332031 341.50454712]
[163.83106995 326.87707520]
[153.46704102 316.17959595]
[157.95565796 301.00848389]
[154.41598511 286.43209839]
[150.65968323 271.91003418]
[139.98175049 261.52587891]
[144.01667786 246.22784424]
[133.33874512 235.84365845]
[137.37368774 220.54562378]
[126.69574738 210.16145325]
[130.73068237 194.86341858]
[125.90467834 180.66096497]
[120.03572083 166.85679626]
[114.16675568 153.05261230]
[108.29779816 139.24842834]
[102.42883301 125.44425964]
[96.55987549 111.64008331]
[95.17337036 126.57586670]
[89.07245636 140.27909851]
[78.90097809 151.30366516]
[65.73236084 158.48611450]
[50.95631409 161.06845093]
[36.13219070 158.77816772]
[22.82441902 151.85694885]
[12.43739700 141.03521729]
[6.06729317 127.45502472]
[4.38635826 112.54950714]
[7.57198668 97.89168549]
[15.28799057 85.02842712]
[26.72008324 75.31723785]
[40.66180420 69.78295135]
[55.64185715 69.00961304]
[70.07935333 73.07884216]
[82.45068359 81.56119537]
[91.45034027 93.56168365]
[87.08254242 85.53920746]
[89.30422974 78.49038696]
[87.30021667 63.62485504]
[85.29620361 48.75932693]
[83.29219055 33.89379883]
[81.28817749 19.02827072]
[79.28416443 4.16274261]
[69.51902008 -4.26368856]
[68.15590668 -16.68647766]
[75.38341522 -26.38646126]
[73.60095215 -41.28017807]
[71.81848145 -56.17389679]
[69.26264954 -70.95455170]
[65.94039154 -85.58200836]
[53.11974335 -98.79989624]
[58.96028519 -115.34845734]
[55.42061234 -129.92483521]
[51.88093948 -144.50120544]
[48.34126663 -159.07759094]
[37.56594086 -170.66218567]
[42.08136749 -184.85585022]
[38.54169464 -199.43222046]
[35.43461609 -202.46537781]
[33.63531113 -205.97636414]
[33.13340759 -209.49539185]
[33.76702881 -212.60426331]
[35.25274277 -214.98139954]
[32.58694839 -229.74263000]
[29.92115402 -244.50384521]
[27.25535774 -259.26504517]
[21.79936409 -245.29251099]
[11.18935585 -234.68931580]
[-2.78669786 -229.24230957]
[-17.77358437 -229.86938477]
[-31.24575043 -236.46490479]
[-40.93289948 -247.91737366]
[-45.20257568 -262.29687500]
[-43.33526611 -277.18017578]
[-35.64564133 -290.05923462]
[-23.42954254 -298.76364136]
[-8.74559498 -301.82659912]
[5.93169880 -298.73190308]
[18.12895584 -290.00112915]
[25.79126167 -277.10391235]
[26.01458931 -292.10226440]
[26.23791695 -307.10058594]
[26.46124458 -322.09893799]
[26.68457222 -337.09725952]
[12.84834671 -343.45956421]
[2.80097842 -354.90377808]
[-1.71676350 -369.44714355]
[0.07784643 -384.56997681]
[7.87388134 -397.65206909]
[20.32063103 -406.42694092]
[35.26161957 -409.37426758]
[50.10823441 -405.98339844]
[62.28820419 -396.84182739]
[69.69128418 -383.53341675]
[71.03483582 -368.36386108]
[66.08608246 -353.96145630]
[55.70243073 -342.82144165]
[41.68291092 -336.87393188]
[41.45958328 -321.87561035]
[41.23625565 -306.87725830]
[41.01292801 -291.87893677]
[40.78960037 -276.88058472]
[42.01657486 -261.93084717]
[44.68236923 -247.16963196]
[47.34816742 -232.40841675]
[50.01396179 -217.64720154]
[53.11807251 -202.97189331]
[56.65774536 -188.39552307]
[67.17988586 -177.85353088]
[62.91764069 -162.61726379]
[66.45731354 -148.04087830]
[69.99698639 -133.46450806]
[73.53665924 -118.88813019]
[83.70048523 -112.32892609]
[86.76873779 -100.21408081]
[80.56785583 -88.90426636]
[83.89011383 -74.27680969]
[91.80969238 -87.01573944]
[106.02522278 -91.80307007]
[120.03756714 -86.45011139]
[127.44046021 -73.40414429]
[124.84941101 -58.62962723]
[113.44899750 -48.88125992]
[98.45134735 -48.61586761]
[86.71220398 -57.95636368]
[88.49466705 -43.06264496]
[90.27713776 -28.16892815]
[101.53710938 -14.70862293]
[94.14969635 2.15872884]
[96.15370941 17.02425766]
[98.15772247 31.88978577]
[100.16173553 46.75531387]
[102.16574860 61.62084198]
[104.16976166 76.48636627]
[106.28438568 91.33657074]
[110.36405182 105.77111816]
[116.23300934 119.57529449]
[122.10197449 133.37947083]
[127.97093201 147.18365479]
[133.83988953 160.98782349]
[139.70886230 174.79200745]
[143.11392212 160.18359375]
[153.29463196 149.16755676]
[167.58978271 144.62345886]
[182.26263428 147.73908997]
[193.47775269 157.70007324]
[198.30354309 171.90260315]
[195.47853088 186.63417053]
[185.74119568 198.04400635]
[171.63682556 203.14958191]
[156.85227966 200.61631775]
[145.25273132 191.10711670]
[156.19934082 202.53001404]
[151.89573669 216.78932190]
[162.84234619 228.21221924]
[158.53874207 242.47154236]
[169.48535156 253.89442444]
[165.18174744 268.15374756]
[168.93804932 282.67581177]
[173.29223633 287.65100098]
[174.32516479 293.23937988]
[172.58311462 297.68621826]
[183.18476868 309.42996216]
[178.45852661 323.55484009]
[181.78079224 338.18228149]
[185.10304260 352.80975342]
[188.42530823 367.43719482]
[191.74755859 382.06466675]
[202.34921265 393.80841064]
[197.62297058 407.93328857]
[200.94522095 422.56072998]
[204.26748657 437.18820190]
[207.58975220 451.81567383]
[222.63360596 451.40499878]
[237.46846008 453.93746948]
[251.52409363 459.31567383]
[264.26025391 467.33291626]
[275.18740845 477.68106079]
[283.88552856 489.96231079]
[290.02029419 503.70462036]
[293.35586548 518.37976074]
[293.76406860 533.42370605]
[291.22921753 548.25811768]
[285.84872437 562.31292725]
[277.82943726 575.04779053]
[267.47952271 585.97326660]
[255.19688416 594.66937256]
[241.45358276 600.80187988]
[226.77789307 604.13513184]
[211.73390198 604.54089355]
[196.89987183 602.00366211]
[182.84596252 596.62084961]
[170.11239624 588.59948730]
[159.18859863 578.24780273]
[150.49446106 565.96374512]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 188]
[9 187]
[10 186]
[11 185]
[13 183]
[14 182]
[15 181]
[16 180]
[17 179]
[19 177]
[20 174]
[21 173]
[23 171]
[25 169]
[27 167]
[28 156]
[29 155]
[30 154]
[31 153]
[32 152]
[33 151]
[51 150]
[53 149]
[54 148]
[55 147]
[56 146]
[57 145]
[58 144]
[61 142]
[62 141]
[63 140]
[64 132]
[65 131]
[67 128]
[68 127]
[69 126]
[70 125]
[72 123]
[73 122]
[78 121]
[79 120]
[80 119]
[81 118]
[95 117]
[96 116]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
