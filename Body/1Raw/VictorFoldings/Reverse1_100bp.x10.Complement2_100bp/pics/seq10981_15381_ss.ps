%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[82.85097504 410.55801392]
[93.31808472 399.65246582]
[106.53544617 392.31808472]
[103.43133545 377.64279175]
[100.32722473 362.96749878]
[97.22311401 348.29217529]
[94.11900330 333.61688232]
[91.01489258 318.94158936]
[87.91078186 304.26629639]
[84.80667114 289.59097290]
[81.70256042 274.91567993]
[78.59844971 260.24038696]
[74.67826080 274.71905518]
[66.88691711 287.53680420]
[55.83888626 297.68280029]
[42.40545654 304.35684204]
[27.64604568 307.03262329]
[12.72464085 305.49908447]
[-1.18199146 299.87722778]
[-12.97711754 290.61035156]
[-21.73052406 278.42929077]
[-26.75188065 264.29473877]
[-27.64518356 249.32135010]
[-24.33998108 234.69003296]
[-17.09693718 221.55464172]
[-6.48726702 210.95111084]
[6.65230560 203.71566772]
[21.28553963 200.41893005]
[36.25839615 201.32089233]
[50.39005661 206.35043335]
[62.56603241 215.11088562]
[71.82608795 226.91137695]
[77.44075012 240.82463074]
[78.77898407 225.88444519]
[76.24476624 218.94184875]
[80.24998474 210.73234558]
[81.81050873 195.81373596]
[83.37103271 180.89512634]
[76.99979401 167.43197632]
[86.13081360 154.51164246]
[87.69133759 139.59303284]
[89.25185394 124.67443085]
[90.81237793 109.75582123]
[82.81597900 122.44667053]
[72.38661957 133.22760010]
[59.96775436 141.64019775]
[46.08744049 147.32675171]
[31.33588028 150.04547119]
[16.34031487 149.68075562]
[1.73836374 146.24812317]
[-11.84909058 139.89350891]
[-23.84430313 130.88713074]
[-33.73723221 119.61193848]
[-41.10721970 106.54735565]
[-45.64089966 92.24890137]
[-47.14548874 77.32455444]
[-45.55701828 62.40889740]
[-40.94302750 48.13615799]
[-33.49970245 35.11322021]
[-23.54354286 23.89382362]
[-11.49788666 14.95502281]
[2.12507892 8.67690086]
[16.74609756 5.32640600]
[31.74347687 5.04600382]
[46.47951889 7.84761715]
[60.32764435 13.61211967]
[72.69902039 22.09440041]
[83.06760406 32.93379211]
[90.99253082 45.66939545]
[96.13681793 59.75968552]
[98.28173065 74.60553741]
[97.33604431 89.57587433]
[104.80377960 76.56691742]
[112.27152252 63.55796432]
[119.73926544 50.54901505]
[126.41945648 37.11863708]
[132.28842163 23.31446075]
[138.15737915 9.51028442]
[144.02633667 -4.29389286]
[149.89530945 -18.09807014]
[149.26040649 -23.27918816]
[150.54766846 -27.73971176]
[153.16070557 -30.86813927]
[156.34690857 -32.37827682]
[162.82640076 -45.90662003]
[169.30589294 -59.43496704]
[168.81826782 -63.74961472]
[169.64575195 -67.60704803]
[171.48315430 -70.64997101]
[173.94053650 -72.65692902]
[176.59495544 -73.55812836]
[183.86819458 -86.67682648]
[191.14141846 -99.79551697]
[198.41464233 -112.91420746]
[205.68788147 -126.03290558]
[212.96110535 -139.15159607]
[220.23432922 -152.27029419]
[227.50756836 -165.38899231]
[215.38696289 -174.25996399]
[204.47380066 -184.58013916]
[194.94018555 -196.18675232]
[186.93647766 -208.89674377]
[180.58892822 -222.50967407]
[175.99761963 -236.81083679]
[173.23498535 -251.57467651]
[172.34457397 -266.56835938]
[173.34045410 -281.55538940]
[176.20689392 -296.29943848]
[180.89869690 -310.56793213]
[187.34187317 -324.13586426]
[195.43479919 -336.78924561]
[205.04983521 -348.32849121]
[216.03533936 -358.57165527]
[228.21806335 -367.35711670]
[241.40583801 -374.54638672]
[255.39071655 -380.02603149]
[269.95211792 -383.70965576]
[284.86035156 -385.53918457]
[299.88037109 -385.48571777]
[314.77520752 -383.55010986]
[329.30999756 -379.76287842]
[343.25552368 -374.18380737]
[356.39178467 -366.90084839]
[368.51162720 -358.02883911]
[379.42395020 -347.70773315]
[388.95657349 -336.10031128]
[396.95919800 -323.38964844]
[403.30560303 -309.77618408]
[407.89572144 -295.47463989]
[410.65710449 -280.71057129]
[411.54626465 -265.71682739]
[410.54913330 -250.72985840]
[407.68142700 -235.98605347]
[402.98843384 -221.71795654]
[396.54409790 -208.15055847]
[388.45013428 -195.49787903]
[378.83410645 -183.95942688]
[367.84774780 -173.71720886]
[355.66427612 -164.93275452]
[342.47589111 -157.74461365]
[328.49057007 -152.26612854]
[313.92886353 -148.58372498]
[299.02044678 -146.75547791]
[284.00045776 -146.81021118]
[269.10577393 -148.74707031]
[254.57128906 -152.53549194]
[240.62626648 -158.11575317]
[233.35302734 -144.99707031]
[226.07980347 -131.87837219]
[218.80656433 -118.75967407]
[211.53334045 -105.64098358]
[204.26011658 -92.52228546]
[196.98687744 -79.40359497]
[189.71365356 -66.28489685]
[182.83424377 -52.95547104]
[176.35475159 -39.42712402]
[169.87524414 -25.89877892]
[163.69947815 -12.22910881]
[157.83052063 1.57506788]
[151.96156311 15.37924480]
[146.09259033 29.18342209]
[140.22363281 42.98759842]
[153.72912598 36.46060944]
[168.51177979 39.00490952]
[179.05799866 49.67153931]
[181.43434143 64.48210907]
[174.75447083 77.91265106]
[161.50981140 84.95388794]
[146.64030457 82.97962952]
[135.69189453 72.72621155]
[132.74821472 58.01675415]
[125.28047943 71.02571106]
[117.81273651 84.03466034]
[110.34499359 97.04360962]
[105.73098755 111.31634521]
[104.17046356 126.23494720]
[102.60993958 141.15354919]
[101.04941559 156.07215881]
[107.30902863 170.60240173]
[98.28963470 182.45565796]
[96.72911072 197.37426758]
[95.16859436 212.29286194]
[93.71916962 227.22267151]
[92.38093567 242.16285706]
[93.27375031 257.13626099]
[96.37786102 271.81155396]
[99.48197174 286.48687744]
[102.58608246 301.16217041]
[105.69019318 315.83746338]
[108.79430389 330.51278687]
[111.89841461 345.18807983]
[115.00252533 359.86337280]
[118.10663605 374.53869629]
[121.21074677 389.21398926]
[136.26589966 390.56817627]
[150.25241089 396.30130005]
[161.92662048 405.90362549]
[170.25044250 418.52127075]
[174.48374939 433.03231812]
[174.25010681 448.14645386]
[169.57029724 462.51971436]
[160.86045837 474.87405396]
[148.89503479 484.11093140]
[134.73799133 489.40902710]
[119.64817810 490.29721069]
[104.96736145 486.69653320]
[92.00094604 478.92712402]
[81.90190125 467.67987061]
[75.56822968 453.95486450]
[73.56311035 438.97250366]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 194]
[4 193]
[5 192]
[6 191]
[7 190]
[8 189]
[9 188]
[10 187]
[11 186]
[12 185]
[33 184]
[34 183]
[36 182]
[37 181]
[38 180]
[40 178]
[41 177]
[42 176]
[43 175]
[72 174]
[73 173]
[74 172]
[75 171]
[76 162]
[77 161]
[78 160]
[79 159]
[80 158]
[84 157]
[85 156]
[86 155]
[91 154]
[92 153]
[93 152]
[94 151]
[95 150]
[96 149]
[97 148]
[98 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
