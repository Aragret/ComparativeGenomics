%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[75.44094086 642.90686035]
[66.75532532 630.63214111]
[60.26922989 617.06610107]
[56.16927338 602.59893799]
[54.57342148 587.64697266]
[55.52758789 572.64038086]
[59.00431824 558.01092529]
[64.90357971 544.17956543]
[73.05564117 531.54425049]
[83.22595215 520.46844482]
[95.12189484 511.27093506]
[108.40119171 504.21624756]
[122.68177795 499.50744629]
[120.45665741 484.67340088]
[116.35571289 478.52490234]
[118.31054688 469.60211182]
[116.30653381 454.73657227]
[114.30252075 439.87103271]
[101.12522125 432.97924805]
[94.45394135 419.49008179]
[97.03496552 404.48367310]
[108.08502960 393.75045776]
[106.08101654 378.88491821]
[96.71270752 367.30545044]
[102.53692627 352.59530640]
[100.53291321 337.72976685]
[98.52890015 322.86422729]
[96.52488708 307.99871826]
[94.52087402 293.13317871]
[92.51686096 278.26766968]
[84.85463715 291.16302490]
[71.48493958 297.96383667]
[56.55051422 296.56280518]
[44.67895126 287.39407349]
[39.54878616 273.29861450]
[42.74965668 258.64413452]
[53.28973770 247.97142029]
[67.90306854 244.58755493]
[82.06155396 249.54107666]
[91.37812805 261.29730225]
[83.64083099 248.57002258]
[91.37812805 234.76985168]
[91.37812805 219.76985168]
[91.37812805 204.76985168]
[91.37812805 189.76985168]
[83.04917145 180.99745178]
[82.92640686 168.50070190]
[91.62104034 158.97357178]
[84.07408905 146.13252258]
[92.01599884 132.44906616]
[92.23932648 117.45073700]
[82.22293854 106.98085785]
[82.43866730 92.49294281]
[92.76233673 82.32593536]
[85.23136139 68.41209412]
[93.15729523 55.80143356]
[93.38062286 40.80309677]
[93.60395050 25.80475807]
[93.82727814 10.80642033]
[93.93894196 -4.19316387]
[93.93894196 -19.19316292]
[93.49234009 -34.18651199]
[92.59951782 -49.15991974]
[91.70670319 -64.13332367]
[90.81388855 -79.10672760]
[89.92107391 -94.08013916]
[83.08430481 -80.72878265]
[71.70855713 -70.95165253]
[57.48134613 -66.19911957]
[42.51320267 -67.17620087]
[29.02456093 -73.73793793]
[19.01637459 -84.91095734]
[13.97330475 -99.03778839]
[14.64345741 -114.02281189]
[20.92741966 -127.64308167]
[31.89300537 -137.87811279]
[45.91353226 -143.20960999]
[60.90914154 -142.84666443]
[74.65531921 -136.84312439]
[85.11290741 -126.08956909]
[90.73021698 -112.18310547]
[92.95533752 -127.01715088]
[95.18045807 -141.85119629]
[97.40557098 -156.68524170]
[99.63069153 -171.51928711]
[94.02612305 -186.31452942]
[103.56580353 -197.75323486]
[105.79091644 -212.58728027]
[108.01603699 -227.42132568]
[110.24114990 -242.25537109]
[112.46627045 -257.08941650]
[114.69138336 -271.92346191]
[116.91650391 -286.75750732]
[119.14162445 -301.59155273]
[113.53705597 -316.38677979]
[123.07672882 -327.82550049]
[125.30184937 -342.65954590]
[127.52696991 -357.49359131]
[129.64158630 -372.34378052]
[131.64559937 -387.20932007]
[117.91934967 -393.54028320]
[106.67011261 -403.63711548]
[98.89817047 -416.60202026]
[95.29460144 -431.28213501]
[96.17983246 -446.37210083]
[101.47514343 -460.53018188]
[110.70967865 -472.49743652]
[123.06231689 -481.20968628]
[137.43466187 -485.89233398]
[152.54875183 -486.12893677]
[167.06062317 -481.89846802]
[179.67991638 -473.57711792]
[189.28451538 -461.90478516]
[195.02040100 -447.91940308]
[196.37753296 -432.86453247]
[193.23522949 -418.07879639]
[185.87290955 -404.87698364]
[174.94523621 -394.43298340]
[161.42387390 -387.67547607]
[146.51113892 -385.20529175]
[144.50712585 -370.33975220]
[146.72880554 -363.29095459]
[142.36100769 -355.26846313]
[140.13589478 -340.43441772]
[137.91078186 -325.60037231]
[143.67449951 -311.86614990]
[133.97566223 -299.36642456]
[131.75054932 -284.53237915]
[129.52543640 -269.69833374]
[127.30031586 -254.86428833]
[125.07519531 -240.03024292]
[122.85008240 -225.19619751]
[120.62496185 -210.36216736]
[118.39984131 -195.52812195]
[124.16356659 -181.79389954]
[114.46472931 -169.29415894]
[112.23961639 -154.46012878]
[110.01449585 -139.62608337]
[107.78938293 -124.79203796]
[105.56426239 -109.95799255]
[104.89447784 -94.97295380]
[105.78729248 -79.99954987]
[106.68010712 -65.02613831]
[107.57292938 -50.05273438]
[108.46574402 -35.07933044]
[110.47045135 -33.11992264]
[111.81980896 -30.24836159]
[112.16249084 -26.71028709]
[111.24251556 -22.87385941]
[108.93894196 -19.19316292]
[108.93894196 -4.19316387]
[112.08244324 2.49564743]
[108.82561493 11.02974796]
[108.60228729 26.02808571]
[108.37895966 41.02642441]
[108.15563202 56.02476120]
[115.70258331 68.86582184]
[107.76067352 82.54926300]
[117.77706146 93.01914215]
[117.56133270 107.50705719]
[107.23766327 117.67406464]
[107.01433563 132.67239380]
[114.54531097 146.58624268]
[106.61937714 159.19689941]
[115.95882416 175.06689453]
[106.37812805 189.76985168]
[106.37812805 204.76985168]
[106.37812805 219.76985168]
[106.37812805 234.76985168]
[114.11542511 248.57002258]
[106.37812805 261.29730225]
[107.38238525 276.26364136]
[109.38639832 291.12918091]
[111.39041138 305.99468994]
[113.39443207 320.86022949]
[115.39844513 335.72576904]
[117.40245819 350.59127808]
[126.91410828 363.23403931]
[120.94654846 376.88092041]
[122.95056152 391.74642944]
[136.44839478 399.17037964]
[142.91105652 412.95758057]
[140.04995728 427.73184204]
[129.16804504 437.86703491]
[131.17205811 452.73254395]
[133.17607117 467.59808350]
[135.29069519 482.44827271]
[137.51582336 497.28231812]
[152.54948425 497.59399414]
[167.31419373 500.44201660]
[181.38514709 505.74450684]
[194.35748291 513.34887695]
[205.85798645 523.03631592]
[215.55574036 534.52813721]
[223.17173767 547.49365234]
[228.48683167 561.55981445]
[231.34811401 576.32196045]
[231.67326355 591.35534668]
[229.45291138 606.22741699]
[224.75094604 620.51025391]
[217.70265198 633.79290771]
[208.51081848 645.69323730]
[197.43992615 655.86889648]
[184.80848694 664.02697754]
[170.97994995 669.93292236]
[156.35218811 673.41662598]
[141.34605408 674.37799072]
[126.39333344 672.78930664]
[111.92421722 668.69628906]
[98.35503387 662.21673584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 188]
[14 187]
[16 186]
[17 185]
[18 184]
[22 180]
[23 179]
[25 177]
[26 176]
[27 175]
[28 174]
[29 173]
[30 172]
[40 171]
[42 169]
[43 168]
[44 167]
[45 166]
[48 164]
[50 162]
[51 161]
[54 158]
[56 156]
[57 155]
[58 154]
[59 153]
[60 151]
[61 150]
[62 145]
[63 144]
[64 143]
[65 142]
[66 141]
[81 140]
[82 139]
[83 138]
[84 137]
[85 136]
[87 134]
[88 133]
[89 132]
[90 131]
[91 130]
[92 129]
[93 128]
[94 127]
[96 125]
[97 124]
[98 123]
[99 121]
[100 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
