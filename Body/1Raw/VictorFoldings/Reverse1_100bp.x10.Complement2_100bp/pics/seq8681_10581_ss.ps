%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[82.55590820 656.36395264]
[79.13642883 641.70471191]
[78.73816681 626.65728760]
[81.37743378 611.83770752]
[86.94614410 597.85290527]
[95.21627808 585.27557373]
[105.84915924 574.62066650]
[118.40939331 566.32458496]
[132.38264465 560.72698975]
[129.71684265 545.96575928]
[127.05105591 531.20452881]
[124.38526154 516.44329834]
[114.62985992 509.29077148]
[112.28813171 497.01477051]
[119.15119934 486.09411621]
[116.70547485 471.29483032]
[114.25974274 456.49557495]
[111.81401825 441.69628906]
[109.36829376 426.89703369]
[106.92256165 412.09774780]
[104.47683716 397.29849243]
[98.15195465 410.89981079]
[86.28694916 420.07702637]
[71.53248596 422.77996826]
[57.18475342 418.40475464]
[46.44906998 407.92883301]
[41.72381210 393.69253540]
[44.06462097 378.87631226]
[52.94854736 366.79013062]
[66.39089966 360.13406372]
[81.38863373 360.39511108]
[94.59120178 367.51495361]
[103.04913330 379.90301514]
[103.04913330 364.90301514]
[103.04913330 349.90301514]
[102.60252380 334.90966797]
[101.70970917 319.93627930]
[100.81689453 304.96286011]
[99.92407990 289.98944092]
[99.03126526 275.01605225]
[98.13844299 260.04263306]
[97.24562836 245.06924438]
[88.40929413 236.80813599]
[87.54293823 224.34085083]
[95.65509033 214.31309509]
[94.98530579 199.32806396]
[94.31551361 184.34301758]
[93.64572906 169.35798645]
[92.97594452 154.37294006]
[92.30615997 139.38790894]
[90.33084869 137.39886475]
[89.02439880 134.50753784]
[88.73442841 130.96475220]
[89.71141815 127.14244843]
[92.06953430 123.49645996]
[92.29286194 108.49811554]
[83.26416779 120.47654724]
[69.49478149 126.42667389]
[54.58399582 124.79316711]
[42.42944336 116.00300598]
[36.20830536 102.35391998]
[37.54676437 87.41375732]
[46.09495544 75.08782959]
[59.61840057 68.59811401]
[74.58209991 69.64099884]
[87.07458496 77.94387817]
[93.83016205 91.33553314]
[96.27589417 76.53626251]
[98.72161865 61.73699188]
[101.16734314 46.93772125]
[94.30428314 36.01704788]
[96.64600372 23.74105072]
[106.40140533 16.58851433]
[109.06719971 1.82729757]
[111.73299408 -12.93391991]
[114.39878845 -27.69513702]
[116.84452057 -42.49440765]
[111.23995209 -57.28965759]
[120.77962494 -68.72835541]
[123.00474548 -83.56240082]
[125.22986603 -98.39644623]
[127.45497894 -113.23049164]
[129.68009949 -128.06452942]
[119.13201141 -117.39973450]
[104.69112396 -113.34254456]
[90.13224792 -116.95351410]
[79.26103210 -127.28872681]
[74.91919708 -141.64659119]
[78.24167633 -156.27400208]
[88.35998535 -167.34738159]
[102.62922668 -171.97218323]
[117.31945801 -168.93948364]
[128.59068298 -159.04202271]
[133.49655151 -144.86787415]
[137.89755249 -159.20771790]
[142.29855347 -173.54757690]
[146.69955444 -187.88742065]
[150.99366760 -202.25962830]
[155.18067932 -216.66340637]
[141.78633118 -223.51817322]
[129.93145752 -232.78414917]
[120.04462433 -244.12641907]
[112.48323059 -257.13494873]
[107.52061462 -271.33947754]
[105.33617401 -286.22656250]
[106.00887299 -301.25799561]
[109.51438904 -315.89041138]
[115.72601318 -329.59487915]
[124.41918945 -341.87597656]
[135.27966309 -352.28973389]
[147.91484070 -360.45971680]
[161.86796570 -366.09060669]
[176.63464355 -368.97882080]
[191.68106079 -369.01995850]
[206.46331787 -366.21252441]
[220.44702148 -360.65802002]
[233.12667847 -352.55725098]
[244.04393005 -342.20300293]
[252.80412292 -329.96963501]
[259.09057617 -316.29934692]
[262.67605591 -301.68630981]
[263.43093872 -286.65878296]
[261.32794189 -271.75997925]
[256.44305420 -257.52853394]
[248.95291138 -244.47885132]
[239.12823486 -233.08268738]
[227.32421875 -223.75201416]
[213.96752930 -216.82412720]
[199.54104614 -212.54946899]
[184.56623840 -211.08255005]
[169.58445740 -212.47639465]
[165.39746094 -198.07261658]
[166.54893494 -190.77221680]
[161.03939819 -183.48641968]
[156.63839722 -169.14657593]
[152.23739624 -154.80671692]
[147.83639526 -140.46687317]
[144.51414490 -125.83941650]
[142.28901672 -111.00537109]
[140.06390381 -96.17132568]
[137.83879089 -81.33728790]
[135.61367798 -66.50324249]
[141.37739563 -52.76902008]
[131.67855835 -40.26929092]
[133.74652100 -35.96434402]
[133.13209534 -30.31460762]
[129.16000366 -25.02934074]
[126.49420929 -10.26812458]
[123.82841492 4.49309301]
[121.16262054 19.25431061]
[127.97779083 35.42589951]
[115.96661377 49.38344955]
[113.52088928 64.18272400]
[111.07516479 78.98199463]
[108.62943268 93.78126526]
[107.29119873 108.72144318]
[107.06787109 123.71978760]
[107.29119873 138.71812439]
[107.96098328 153.70315552]
[108.63076782 168.68820190]
[109.30055237 183.67323303]
[109.97034454 198.65827942]
[110.64012909 213.64331055]
[120.90760803 228.92927551]
[112.21903229 244.17642212]
[113.11185455 259.14984131]
[114.00466919 274.12322998]
[114.89748383 289.09664917]
[115.79029846 304.07003784]
[116.68311310 319.04345703]
[117.57592773 334.01684570]
[120.09449768 337.55392456]
[121.24118805 341.32879639]
[121.10970306 344.88098145]
[119.93366241 347.82775879]
[118.04913330 349.90301514]
[118.04913330 364.90301514]
[118.04913330 379.90301514]
[119.27610779 394.85275269]
[121.72183228 409.65203857]
[124.16756439 424.45129395]
[126.61328888 439.25057983]
[129.05902100 454.04983521]
[131.50474548 468.84912109]
[133.95046997 483.64837646]
[145.96165466 497.60592651]
[139.14646912 513.77752686]
[141.81227112 528.53875732]
[144.47807312 543.29992676]
[147.14385986 558.06115723]
[162.19238281 558.41760254]
[176.86102295 561.79632568]
[190.54911804 568.05895996]
[202.69616699 576.94909668]
[212.80471802 588.10266113]
[220.46087646 601.06292725]
[225.35108948 615.29913330]
[227.27513123 630.22845459]
[226.15419006 645.23937988]
[222.03419495 659.71728516]
[215.08383179 673.06933594]
[205.58773804 684.74877930]
[193.93475342 694.27728271]
[180.60206604 701.26477051]
[166.13563538 705.42498779]
[151.12786865 706.58764648]
[136.19331360 704.70507812]
[121.94353485 699.85449219]
[108.96204376 692.23437500]
[97.78043365 682.15686035]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 190]
[10 189]
[11 188]
[12 187]
[15 185]
[16 184]
[17 183]
[18 182]
[19 181]
[20 180]
[21 179]
[33 178]
[34 177]
[35 176]
[36 171]
[37 170]
[38 169]
[39 168]
[40 167]
[41 166]
[42 165]
[45 163]
[46 162]
[47 161]
[48 160]
[49 159]
[50 158]
[55 157]
[56 156]
[67 155]
[68 154]
[69 153]
[70 152]
[73 150]
[74 149]
[75 148]
[76 147]
[77 144]
[79 142]
[80 141]
[81 140]
[82 139]
[83 138]
[94 137]
[95 136]
[96 135]
[97 134]
[98 132]
[99 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
