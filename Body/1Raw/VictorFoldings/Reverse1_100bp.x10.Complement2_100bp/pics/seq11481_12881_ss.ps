%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[23.68132973 484.65295410]
[29.65147591 498.53997803]
[31.26146317 513.56988525]
[28.36813545 528.40637207]
[21.22876549 541.73004150]
[10.47817802 552.35626221]
[-2.92768908 559.34008789]
[-17.79679680 562.06060791]
[-32.80699158 560.27581787]
[-46.62358093 554.14447021]
[-58.01800156 544.21179199]
[-65.97706604 531.36090088]
[-69.79306793 516.73461914]
[-69.12667847 501.63336182]
[-64.03716278 487.39999390]
[-54.97707748 475.30017090]
[-42.75203323 466.40972900]
[-28.44907570 461.51925659]
[-13.34001255 461.06356812]
[-9.36791706 446.59906006]
[-5.39582062 432.13452148]
[-1.42372429 417.67001343]
[-2.84057498 414.44125366]
[-2.76393962 410.36581421]
[-0.81290954 406.15310669]
[3.06218982 402.65588379]
[7.67619896 388.38314819]
[6.40493345 385.09432983]
[6.66346979 381.02639771]
[8.80066013 376.90502930]
[12.82805443 373.58428955]
[18.07477379 359.53182983]
[23.32149124 345.47937012]
[28.56820869 331.42687988]
[15.36763000 338.55041504]
[0.48612276 336.66873169]
[-10.52587891 326.48364258]
[-13.56116962 311.79397583]
[-7.48766232 298.07855225]
[5.42937613 290.45294189]
[20.37220955 291.76126099]
[31.76753044 301.51559448]
[35.36508560 316.07891846]
[42.24449921 302.74951172]
[49.12390900 289.42007446]
[56.00332260 276.09063721]
[62.88273621 262.76119995]
[69.76214600 249.43177795]
[74.26977539 235.12509155]
[76.27378845 220.25956726]
[78.27780151 205.39404297]
[80.28181458 190.52850342]
[82.28582764 175.66297913]
[84.28984833 160.79745483]
[78.32228088 147.15057373]
[87.83393860 134.50782776]
[89.83795166 119.64229584]
[91.84196472 104.77676392]
[89.68861389 99.99376678]
[90.36837769 94.34476471]
[94.13333893 89.50100708]
[96.57906342 74.70173645]
[99.02479553 59.90246582]
[97.35218048 55.89543152]
[97.07003784 51.96034241]
[97.98501587 48.52548599]
[99.78451538 45.91236496]
[102.08187866 44.30604172]
[105.40413666 29.67858124]
[108.72639465 15.05112171]
[112.04865265 0.42366132]
[114.93392944 -14.29623032]
[117.37965393 -29.09550095]
[119.82537842 -43.89477158]
[122.27111053 -58.69404221]
[111.54550934 -69.75151062]
[109.41242218 -84.82809448]
[116.48237610 -98.11266327]
[129.85902405 -104.60906219]
[132.30474854 -119.40833282]
[134.75047302 -134.20761108]
[137.19621277 -149.00688171]
[139.64193726 -163.80615234]
[142.08766174 -178.60542297]
[144.42315674 -193.42248535]
[145.09294128 -208.40753174]
[144.20011902 -223.38093567]
[143.30729675 -238.35433960]
[142.41448975 -253.32774353]
[141.52166748 -268.30114746]
[126.65999603 -270.76657104]
[112.71972656 -276.47766113]
[100.40012360 -285.14801025]
[90.31911469 -296.34271240]
[82.98236084 -309.50021362]
[78.75788116 -323.96054077]
[77.85756683 -338.99841309]
[80.32657623 -353.85949707]
[86.04106903 -367.79837036]
[94.71440125 -380.11587524]
[105.91152954 -390.19418335]
[119.07080841 -397.52774048]
[133.53218079 -401.74871826]
[148.57025146 -402.64538574]
[163.43072510 -400.17276001]
[177.36822510 -394.45489502]
[189.68362427 -385.77859497]
[199.75921631 -374.57901001]
[207.08958435 -361.41796875]
[211.30705261 -346.95556641]
[212.20008850 -331.91726685]
[209.72387695 -317.05740356]
[204.00262451 -303.12127686]
[195.32333374 -290.80798340]
[184.12132263 -280.73510742]
[170.95848083 -273.40792847]
[156.49507141 -269.19396973]
[157.38789368 -254.22056580]
[158.28071594 -239.24714661]
[159.17352295 -224.27374268]
[160.06634521 -209.30033875]
[166.90310669 -222.65168762]
[178.27885437 -232.42881775]
[192.50607300 -237.18135071]
[207.47421265 -236.20428467]
[220.96286011 -229.64253235]
[230.97103882 -218.46952820]
[236.01411438 -204.34269714]
[235.34396362 -189.35766602]
[229.05999756 -175.73739624]
[218.09440613 -165.50236511]
[204.07388306 -160.17086792]
[189.07827759 -160.53381348]
[175.33209229 -166.53735352]
[164.87451172 -177.29090881]
[159.25718689 -191.19737244]
[161.37368774 -184.11625671]
[156.88693237 -176.15969849]
[154.44120789 -161.36041260]
[151.99548340 -146.56114197]
[149.54974365 -131.76187134]
[147.10401917 -116.96260834]
[144.65829468 -102.16333771]
[155.23361206 -91.70863342]
[157.65356445 -76.85576630]
[150.78326416 -63.26708221]
[137.07037354 -56.24831390]
[134.62464905 -41.44904327]
[132.17892456 -26.64977264]
[129.73320007 -11.85050297]
[131.25413513 -9.49574757]
[131.93397522 -6.39664555]
[131.48452759 -2.87054372]
[129.73768616 0.66684228]
[126.67611694 3.74592090]
[123.35385132 18.37338066]
[120.03159332 33.00084305]
[116.70933533 47.62829971]
[113.82406616 62.34819412]
[111.37833405 77.14746094]
[108.93260956 91.94673157]
[106.70748901 106.78077698]
[104.70347595 121.64630890]
[102.69946289 136.51184082]
[108.52368927 151.22200012]
[99.15537262 162.80146790]
[97.15135956 177.66699219]
[95.14734650 192.53251648]
[93.14333344 207.39805603]
[91.13932037 222.26358032]
[89.13530731 237.12910461]
[97.55203247 224.71304321]
[108.75818634 214.74197388]
[122.06848907 207.82563782]
[136.66902161 204.38694763]
[151.66694641 204.63621521]
[166.14514160 208.55818176]
[179.21826172 215.91300964]
[190.08688354 226.25096130]
[198.08636475 238.93986511]
[202.72756958 253.20378113]
[203.72665405 268.17047119]
[201.02253723 282.92471313]
[194.78057861 296.56427002]
[185.38247681 308.25512695]
[173.40292358 317.28231812]
[159.57447815 323.09387207]
[144.74275208 325.33438110]
[129.81471252 323.86685181]
[115.70320892 318.78100586]
[103.27117920 310.38787842]
[93.27883148 299.20071411]
[86.33721924 285.90356445]
[82.87080383 271.30960083]
[83.09157562 256.31118774]
[76.21216583 269.64062500]
[69.33275604 282.97006226]
[62.45333862 296.29946899]
[55.57392883 309.62890625]
[48.69451523 322.95834351]
[42.62068176 336.67361450]
[37.37396240 350.72607422]
[32.12724304 364.77853394]
[26.88052559 378.83102417]
[21.94893265 392.99716187]
[17.33492279 407.26989746]
[13.04080009 421.64208984]
[9.06870365 436.10662842]
[5.09660721 450.57113647]
[1.12451100 465.03567505]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 210]
[20 209]
[21 208]
[22 207]
[26 206]
[27 205]
[31 204]
[32 203]
[33 202]
[34 201]
[43 200]
[44 199]
[45 198]
[46 197]
[47 196]
[48 195]
[49 171]
[50 170]
[51 169]
[52 168]
[53 167]
[54 166]
[56 164]
[57 163]
[58 162]
[61 161]
[62 160]
[63 159]
[68 158]
[69 157]
[70 156]
[71 155]
[72 150]
[73 149]
[74 148]
[75 147]
[79 143]
[80 142]
[81 141]
[82 140]
[83 139]
[84 138]
[85 136]
[86 121]
[87 120]
[88 119]
[89 118]
[90 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
