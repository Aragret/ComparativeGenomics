%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[65.19650269 562.72576904]
[56.33461380 574.86926270]
[45.63944244 585.43377686]
[33.38802338 594.14575195]
[19.89769173 600.77954102]
[5.51788139 605.16333008]
[-9.37893391 607.18347168]
[-24.40689278 606.78771973]
[-39.17673492 603.98626709]
[-53.30588531 598.85174561]
[-66.42836761 591.51715088]
[-78.20426941 582.17242432]
[-88.32857513 571.05957031]
[-96.53903961 558.46655273]
[-102.62298584 544.71948242]
[-106.42283630 530.17449951]
[-107.84015656 515.20825195]
[-106.83824158 500.20852661]
[-103.44303131 485.56378174]
[-97.74248505 471.65335083]
[-89.88424683 458.83758545]
[-80.07187653 447.44839478]
[-68.55952454 437.78082275]
[-55.64540100 430.08526611]
[-41.66400909 424.56106567]
[-26.97749519 421.35131836]
[-11.96628189 420.53912354]
[2.98080802 422.14559937]
[6.95290422 407.68106079]
[10.92500019 393.21655273]
[14.89709663 378.75201416]
[18.86919212 364.28750610]
[22.84128952 349.82296753]
[18.75046158 335.50115967]
[29.86592674 324.24252319]
[33.83802414 309.77798462]
[37.48611069 295.22836304]
[40.80836868 280.60089111]
[44.13063049 265.97344971]
[47.45288849 251.34599304]
[50.77514648 236.71852112]
[37.53868484 243.77516174]
[23.14973640 239.53746033]
[15.85094166 226.43296814]
[19.82338524 211.96853638]
[32.79146957 204.43005371]
[47.32648849 208.13589478]
[55.10197067 220.96224976]
[59.71598053 206.68951416]
[64.32998657 192.41677856]
[68.94400024 178.14405823]
[73.55800629 163.87132263]
[78.17201996 149.59858704]
[82.46614075 135.22637939]
[86.43824005 120.76184845]
[90.41033173 106.29732513]
[78.66967773 115.63311768]
[63.84899521 117.94553375]
[49.82236862 112.63010406]
[40.25632477 101.07628632]
[37.65141296 86.30419922]
[42.68854141 72.17524719]
[54.05102158 62.38269806]
[68.76873016 59.48630142]
[82.99448395 64.24316406]
[93.00971985 75.40986633]
[96.19651031 90.06655884]
[102.27033997 76.35128784]
[108.34417725 62.63602448]
[114.41800690 48.92075729]
[108.96461487 34.32972336]
[115.31972504 20.50701904]
[129.26365662 15.39795780]
[135.33747864 1.68269074]
[141.41131592 -12.03257561]
[147.48515320 -25.74784279]
[153.45671082 -39.50794601]
[159.32566833 -53.31212234]
[165.19464111 -67.11630249]
[171.06359863 -80.92047882]
[176.93255615 -94.72465515]
[177.41032410 -103.84658051]
[182.99302673 -108.68962860]
[189.06686401 -122.40489960]
[186.68133545 -140.66389465]
[201.25097656 -150.44613647]
[207.11993408 -164.25030518]
[212.98890686 -178.05448914]
[218.85786438 -191.85865784]
[213.18783569 -206.36688232]
[219.33644104 -220.28266907]
[233.20275879 -225.59877014]
[239.07171631 -239.40295410]
[244.94067383 -253.20712280]
[231.94506836 -260.73666382]
[219.97329712 -269.80618286]
[209.20681763 -280.27816772]
[199.80888367 -291.99389648]
[191.92193604 -304.77575684]
[185.66554260 -318.42996216]
[181.13456726 -332.74951172]
[178.39767456 -347.51736450]
[177.49638367 -362.50961304]
[178.44432068 -377.49896240]
[181.22715759 -392.25820923]
[185.80267334 -406.56359863]
[192.10151672 -420.19827271]
[200.02819824 -432.95550537]
[209.46255493 -444.64193726]
[220.26156616 -455.08038330]
[232.26150513 -464.11260986]
[245.28048706 -471.60165405]
[259.12112427 -477.43405151]
[273.57357788 -481.52130127]
[288.41879272 -483.80151367]
[303.43170166 -484.24011230]
[318.38470459 -482.83041382]
[333.05111694 -479.59378052]
[347.20861816 -474.57934570]
[360.64257812 -467.86306763]
[373.14932251 -459.54675293]
[384.53927612 -449.75653076]
[394.63977051 -438.64077759]
[403.29766846 -426.36804199]
[410.38171387 -413.12432861]
[415.78454590 -399.11044312]
[419.42422485 -384.53881836]
[421.24560547 -369.63034058]
[421.22103882 -354.61105347]
[419.35092163 -339.70864868]
[415.66360474 -325.14898682]
[410.21496582 -311.15283203]
[403.08764648 -297.93237305]
[394.38964844 -285.68801880]
[384.25286865 -274.60534668]
[372.83096313 -264.85241699]
[360.29708862 -256.57708740]
[346.84121704 -249.90476990]
[332.66738892 -244.93664551]
[317.99047852 -241.74801636]
[303.03292847 -240.38722229]
[288.02154541 -240.87489319]
[273.18386841 -243.20364380]
[258.74484253 -247.33816528]
[252.87588501 -233.53399658]
[247.00692749 -219.72981262]
[252.79936218 -206.05563354]
[247.04405212 -191.97262573]
[232.66203308 -185.98970032]
[226.79307556 -172.18551636]
[220.92411804 -158.38134766]
[215.05516052 -144.57716370]
[219.28779602 -133.24530029]
[214.51123047 -121.69677734]
[202.78213501 -116.33106232]
[196.70829773 -102.61579895]
[190.73674011 -88.85569000]
[184.86776733 -75.05151367]
[178.99880981 -61.24733734]
[173.12985229 -47.44316101]
[167.26089478 -33.63898468]
[167.53669739 -26.25347710]
[161.20042419 -19.67400932]
[155.12658691 -5.95874214]
[149.05274963 7.75652456]
[142.97891235 21.47179222]
[148.56712341 35.23069763]
[142.60276794 49.22645187]
[128.13327026 54.99459076]
[122.05944061 68.70985413]
[115.98561096 82.42512512]
[109.91177368 96.14038849]
[104.87485504 110.26942444]
[100.90276337 124.73394775]
[96.93066406 139.19847107]
[98.25206757 144.24832153]
[97.57228088 148.84083557]
[95.40062714 152.29031372]
[92.44474792 154.21260071]
[87.83074188 168.48532104]
[83.21673584 182.75805664]
[78.60272217 197.03079224]
[73.98871613 211.30352783]
[69.37470245 225.57626343]
[65.40261078 240.04078674]
[62.08034897 254.66824341]
[58.75809097 269.29571533]
[55.43582916 283.92315674]
[52.11357117 298.55062866]
[53.65914536 303.53643799]
[53.18510056 308.15472412]
[51.16963959 311.69772339]
[48.30254745 313.75009155]
[44.33045197 328.21459961]
[48.13716888 343.57101440]
[37.30581284 353.79507446]
[33.33371735 368.25958252]
[29.36161995 382.72412109]
[25.38952446 397.18862915]
[21.41742897 411.65316772]
[17.44533157 426.11767578]
[31.11659431 432.37011719]
[43.60778046 440.73471069]
[54.59534073 450.99481201]
[63.79467010 462.88464355]
[70.96748352 476.09625244]
[75.92799377 490.28744507]
[78.54769897 505.09060669]
[78.75875092 520.12231445]
[76.55568695 534.99316406]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 201]
[29 200]
[30 199]
[31 198]
[32 197]
[33 196]
[35 194]
[36 193]
[37 189]
[38 188]
[39 187]
[40 186]
[41 185]
[48 184]
[49 183]
[50 182]
[51 181]
[52 180]
[53 179]
[54 175]
[55 174]
[56 173]
[67 172]
[68 171]
[69 170]
[70 169]
[73 166]
[74 165]
[75 164]
[76 163]
[77 161]
[78 160]
[79 159]
[80 158]
[81 157]
[83 156]
[84 155]
[86 152]
[87 151]
[88 150]
[89 149]
[92 146]
[93 145]
[94 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
