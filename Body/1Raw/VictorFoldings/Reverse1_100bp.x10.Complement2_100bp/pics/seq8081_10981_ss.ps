%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[130.27017212 682.78643799]
[117.69310760 674.56872559]
[106.35221100 664.71484375]
[96.45876312 653.40850830]
[88.19706726 640.86029053]
[81.72103882 627.30395508]
[77.15131378 612.99200439]
[74.57303619 598.19110107]
[74.03422546 583.17700195]
[75.54492950 568.22937012]
[79.07699585 553.62670898]
[84.56462860 539.64099121]
[91.90559387 526.53283691]
[100.96313477 514.54638672]
[111.56851959 503.90499878]
[123.52417755 494.80685425]
[136.60737610 487.42147827]
[150.57437134 481.88647461]
[165.16499329 478.30490112]
[163.60447693 463.38629150]
[162.04394531 448.46768188]
[160.48342896 433.54910278]
[158.92289734 418.63049316]
[157.36238098 403.71188354]
[155.80184937 388.79327393]
[142.98875427 384.06658936]
[133.41625977 374.23318481]
[128.99331665 361.17230225]
[130.63706970 347.41452026]
[138.08334351 335.65145874]
[149.92715454 328.20922852]
[148.58891296 313.26904297]
[147.25068665 298.32885742]
[144.69483948 283.54821777]
[140.93855286 269.02615356]
[137.18225098 254.50408936]
[133.42594910 239.98202515]
[129.56164551 225.48834229]
[125.58954620 211.02381897]
[121.61744690 196.55929565]
[117.64534760 182.09477234]
[113.67325592 167.63023376]
[109.70115662 153.16571045]
[105.72906494 138.70118713]
[101.11505127 124.42845917]
[95.86833191 110.37599182]
[90.51715088 96.36296844]
[85.06179047 82.39016724]
[79.60643768 68.41737366]
[74.15107727 54.44457245]
[68.69571686 40.47177505]
[63.24036407 26.49897575]
[48.60080338 15.32916164]
[51.92189026 -1.90270722]
[46.25910187 -15.79273415]
[40.59631729 -29.68276024]
[34.93352890 -43.57278824]
[29.16749763 -57.42027283]
[23.29853630 -71.22444916]
[22.42726326 -56.24977493]
[18.69042587 -41.72269440]
[12.22773170 -28.18631554]
[3.28079176 -16.14670372]
[-7.81590605 -6.05396843]
[-20.64750290 1.71456468]
[-34.73428345 6.86846399]
[-49.54959488 9.21504688]
[-64.53956604 8.66658497]
[-79.14377594 5.24358320]
[-92.81624603 -0.92598754]
[-105.04581451 -9.61147308]
[-115.37527466 -20.48816109]
[-123.41844177 -33.14941788]
[-128.87463379 -47.12189102]
[-131.53984070 -61.88321304]
[-131.31445312 -76.88152313]
[-128.20686340 -91.55609131]
[-122.33328247 -105.35829926]
[-113.91328430 -117.77214813]
[-103.26165771 -128.33352661]
[-90.77661896 -136.64759827]
[-76.92493439 -142.40353394]
[-62.22445297 -145.38615417]
[-47.22477341 -145.48393250]
[-32.48666382 -142.69320679]
[-18.56111526 -137.11834717]
[-5.96875238 -128.96774292]
[4.81965494 -118.54611206]
[13.40077209 -106.24308777]
[19.45187950 -92.52441406]
[20.12166405 -107.50945282]
[20.79144859 -122.49449158]
[6.28244781 -133.36862183]
[1.24955535 -150.62403870]
[7.52672672 -167.29881287]
[22.42389297 -176.78280640]
[22.64722061 -191.78114319]
[22.87054825 -206.77947998]
[23.09387589 -221.77781677]
[9.25764942 -228.14010620]
[-0.78971845 -239.58432007]
[-5.30746031 -254.12770081]
[-3.51285052 -269.25051880]
[4.28318453 -282.33264160]
[16.72993469 -291.10748291]
[31.67092323 -294.05480957]
[46.51753616 -290.66394043]
[58.69750977 -281.52239990]
[66.10058594 -268.21395874]
[67.44413757 -253.04441833]
[62.49538422 -238.64199829]
[52.11173630 -227.50199890]
[38.09221268 -221.55448914]
[37.86888504 -206.55615234]
[37.64555740 -191.55781555]
[37.42222977 -176.55947876]
[48.10833359 -170.79904175]
[55.37423325 -160.98376465]
[57.79172516 -148.93981934]
[54.84186935 -136.94073486]
[47.02487946 -127.27828217]
[35.77648926 -121.82470703]
[35.10670471 -106.83966827]
[34.43691635 -91.85462952]
[37.10271454 -77.09341431]
[42.97167206 -63.28923416]
[48.48166275 -58.36360550]
[48.82355881 -49.23557281]
[54.48634338 -35.34554672]
[60.14913177 -21.45552063]
[65.81192017 -7.56549358]
[76.83629608 -2.58657384]
[81.66773224 8.93909168]
[77.21315765 21.04361916]
[82.66851807 35.01641846]
[88.12387848 48.98921585]
[93.57923126 62.96201324]
[99.03459167 76.93481445]
[104.48994446 90.90760803]
[110.12203979 96.67407227]
[109.92080688 105.12927246]
[115.16752625 119.18173981]
[122.36326599 106.02038574]
[136.71852112 101.66990662]
[150.00994873 108.62245178]
[154.62361145 122.89530182]
[147.91659546 136.31230164]
[133.73098755 141.18759155]
[120.19358826 134.72909546]
[124.16567993 149.19361877]
[128.13777161 163.65814209]
[132.10987854 178.12266541]
[136.08197021 192.58718872]
[140.05406189 207.05171204]
[144.02616882 221.51623535]
[149.31632996 228.96284485]
[147.94799805 236.22572327]
[151.70429993 250.74778748]
[155.46060181 265.26983643]
[159.21690369 279.79190063]
[164.30311584 265.68054199]
[175.30204773 255.48136902]
[189.75653076 251.47288513]
[204.43739319 254.55061340]
[216.06488037 264.02697754]
[222.04139709 277.78494263]
[221.03176880 292.75091553]
[213.26153564 305.58148193]
[200.46661377 313.41027832]
[185.50540161 314.48828125]
[171.72027588 308.57470703]
[162.19085693 296.99063110]
[163.52909851 311.93081665]
[164.86732483 326.87100220]
[179.93806458 333.67282104]
[189.46757507 347.07000732]
[190.93208313 363.35101318]
[184.02616882 378.06375122]
[170.72045898 387.23275757]
[172.28099060 402.15136719]
[173.84150696 417.06994629]
[175.40202332 431.98855591]
[176.96255493 446.90716553]
[178.52307129 461.82577515]
[180.08360291 476.74438477]
[195.09954834 477.22903442]
[209.90963745 479.75390625]
[224.23796082 484.27194214]
[237.81759644 490.69903564]
[250.39555359 498.91540527]
[261.73751831 508.76800537]
[271.63217163 520.07330322]
[279.89523315 532.62060547]
[286.37274170 546.17626953]
[290.94400024 560.48773193]
[293.52389526 575.28833008]
[294.06433105 590.30236816]
[292.55523682 605.25018311]
[289.02474976 619.85321045]
[283.53863525 633.83953857]
[276.19909668 646.94848633]
[267.14285278 658.93591309]
[256.53860474 669.57843018]
[244.58393860 678.67785645]
[231.50154114 686.06463623]
[217.53514099 691.60119629]
[202.94491577 695.18432617]
[188.00265503 696.74731445]
[172.98675537 696.26104736]
[158.17694092 693.73461914]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 185]
[20 184]
[21 183]
[22 182]
[23 181]
[24 180]
[25 179]
[31 174]
[32 173]
[33 172]
[34 160]
[35 159]
[36 158]
[37 157]
[38 155]
[39 154]
[40 153]
[41 152]
[42 151]
[43 150]
[44 149]
[45 142]
[46 141]
[47 139]
[48 138]
[49 137]
[50 136]
[51 135]
[52 134]
[54 131]
[55 130]
[56 129]
[57 128]
[58 126]
[59 125]
[90 124]
[91 123]
[92 122]
[96 116]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
