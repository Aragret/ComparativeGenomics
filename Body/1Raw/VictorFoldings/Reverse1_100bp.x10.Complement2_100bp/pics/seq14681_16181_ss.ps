%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUAAUCCCCCAAUCAAAACGCAUAACCCCAGUAACCACAAGAACAUCAACUUUAUGUUGCUACCAAAAAGUAUAGUAACCAGCACCAACAUCAGGCACxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[213.88192749 603.79937744]
[213.82412720 588.72973633]
[217.24375916 574.05316162]
[223.95643616 560.56103516]
[233.60011292 548.98101807]
[245.65473938 539.93768311]
[259.47021484 533.91857910]
[256.80441284 519.15734863]
[254.13862610 504.39614868]
[251.47282410 489.63494873]
[248.80703735 474.87371826]
[245.05073547 460.35165405]
[240.22473145 446.14920044]
[235.39874268 431.94674683]
[230.36181641 417.81771851]
[225.11509705 403.76525879]
[219.86837769 389.71276855]
[214.62165833 375.66030884]
[200.50334167 365.23724365]
[203.70181274 347.10299683]
[198.24644470 333.13018799]
[192.79109192 319.15737915]
[187.33573914 305.18460083]
[181.88038635 291.21179199]
[176.42501831 277.23901367]
[170.55606079 263.43481445]
[164.27870178 249.81150818]
[158.00134277 236.18818665]
[151.62274170 222.61198425]
[145.14323425 209.08363342]
[138.66374207 195.55529785]
[132.18424988 182.02694702]
[117.19232941 172.90502930]
[118.76017761 154.55772400]
[112.07998657 141.12734985]
[105.39978790 127.69697571]
[98.71959686 114.26660156]
[87.17493439 106.37911224]
[87.85002899 92.41358948]
[81.16983032 78.98321533]
[74.48963928 65.55284119]
[67.51118469 52.27499390]
[60.14049911 39.21080780]
[52.67275620 26.20185661]
[45.20501328 13.19290352]
[37.73727417 0.18395099]
[30.26953316 -12.82500172]
[22.80179214 -25.83395386]
[23.75145149 -10.86404610]
[21.39147758 3.94914150]
[15.83701515 17.88283920]
[7.35908079 30.25719261]
[-3.62866926 40.46842957]
[-16.59011841 48.01832199]
[-30.89284706 52.53849030]
[-45.83899689 53.80838776]
[-60.69930649 51.76605225]
[-74.74871826 46.51113510]
[-87.30171967 38.30003738]
[-97.74582672 27.53339386]
[-105.57144165 14.73653221]
[-110.39675140 0.53384131]
[-111.98630524 -14.38169861]
[-110.26255035 -29.28232384]
[-105.30958557 -43.44100189]
[-97.36908722 -56.16690063]
[-86.82847595 -66.83908844]
[-74.20207214 -74.93685913]
[-60.10592651 -80.06508636]
[-45.22783279 -81.97356415]
[-30.29372215 -80.56917572]
[-16.03226089 -75.92044067]
[-3.13930178 -68.25417328]
[7.75608206 -57.94443893]
[16.11921883 -45.50013733]
[6.60756540 -58.14288330]
[12.57512760 -71.78977203]
[10.57111359 -86.65529633]
[8.56709957 -101.52082825]
[-0.94455266 -114.16357422]
[5.02300930 -127.81045532]
[3.01899552 -142.67597961]
[-11.08431149 -153.02568054]
[-13.29534531 -170.03820801]
[-2.73024440 -183.12321472]
[-12.42907429 -195.62294006]
[-6.66535568 -209.35716248]
[-8.89047337 -224.19120789]
[-11.11559010 -239.02525330]
[-13.34070778 -253.85929871]
[-28.30716324 -255.90425110]
[-42.09067535 -262.08416748]
[-53.57387924 -271.89807129]
[-61.82587814 -284.55041504]
[-66.17771912 -299.01547241]
[-66.27662659 -314.12066650]
[-62.11457443 -328.64147949]
[-54.02896118 -341.40075684]
[-42.67525482 -351.36419678]
[-28.97385025 -357.72409058]
[-14.03545570 -359.96487427]
[0.92893827 -357.90487671]
[14.70623589 -351.71109009]
[26.17957306 -341.88565063]
[34.41885757 -329.22506714]
[38.75616837 -314.75561523]
[38.83989716 -299.65032959]
[34.66326141 -285.13372803]
[26.56483459 -272.38256836]
[15.20112419 -262.43054199]
[1.49333644 -256.08441162]
[3.71845365 -241.25036621]
[5.94357061 -226.41632080]
[8.16868782 -211.58227539]
[17.70836258 -200.14358521]
[12.10379982 -185.34832764]
[23.43546295 -179.21456909]
[29.25210381 -167.49925232]
[27.22946739 -154.37982178]
[17.88452339 -144.67999268]
[19.88853836 -129.81446838]
[29.25684929 -118.23500824]
[23.43262863 -103.52484131]
[25.43664169 -88.65930939]
[27.44065475 -73.79378510]
[36.80896759 -62.21431732]
[30.98474693 -47.50415039]
[35.81074524 -33.30169678]
[43.27848434 -20.29274178]
[50.74622726 -7.28379011]
[58.21396637 5.72516203]
[65.68170929 18.73411369]
[73.14945221 31.74306679]
[79.20571136 35.97903824]
[80.62988281 45.00176239]
[83.90030670 46.31957626]
[86.69493103 49.28692627]
[88.24539948 53.66292191]
[87.92001343 58.87264633]
[94.60021210 72.30302429]
[101.28040314 85.73339844]
[112.82506561 93.62088776]
[112.14997101 107.58641052]
[118.83016968 121.01678467]
[125.51036072 134.44715881]
[132.19055176 147.87753296]
[144.14755249 152.71417236]
[149.43501282 164.03788757]
[145.71260071 175.54745483]
[152.19209290 189.07579041]
[158.67158508 202.60414124]
[165.15107727 216.13249207]
[171.68045044 222.52038574]
[171.62466431 229.91082764]
[177.90202332 243.53414917]
[184.17938232 257.15747070]
[187.81187439 259.53631592]
[190.25291443 262.63565063]
[191.42233276 265.99240112]
[191.39854431 269.16510010]
[190.39782715 271.78363037]
[195.85317993 285.75643921]
[201.30853271 299.72924805]
[206.76388550 313.70202637]
[212.21925354 327.67483521]
[217.67460632 341.64764404]
[229.15242004 347.53173828]
[233.40853882 359.28201294]
[228.67413330 370.41357422]
[233.92085266 384.46606445]
[239.16757202 398.51852417]
[244.41429138 412.57101440]
[249.26245117 417.06622314]
[250.87115479 422.51681519]
[249.60119629 427.12075806]
[254.42718506 441.32321167]
[259.25317383 455.52566528]
[263.73535156 441.21096802]
[274.70718384 430.98266602]
[289.30072021 427.51434326]
[303.70120239 431.71267700]
[314.14440918 442.48022461]
[317.90048218 457.00231934]
[313.98760986 471.48300171]
[303.42861938 482.13699341]
[288.98358154 486.17938232]
[274.42840576 482.55349731]
[263.56823730 472.20791626]
[266.23403931 486.96914673]
[268.89984131 501.73034668]
[271.56564331 516.49157715]
[274.23144531 531.25280762]
[289.27957153 532.05926514]
[303.73593140 536.31488037]
[316.82089233 543.79022217]
[327.82879639 554.08209229]
[336.16604614 566.63543701]
[341.38296509 580.77337646]
[343.19824219 595.73333740]
[341.51394653 610.70867920]
[336.42098999 624.89172363]
[328.19393921 637.51757812]
[317.27651978 647.90539551]
[304.25747681 655.49493408]
[289.83892822 659.87695312]
[274.79843140 660.81506348]
[259.94711304 658.25878906]
[246.08586121 652.34582520]
[233.96221924 643.39520264]
[224.22999573 631.88952637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 192]
[8 191]
[9 190]
[10 189]
[11 188]
[12 177]
[13 176]
[14 175]
[15 172]
[16 171]
[17 170]
[18 169]
[20 166]
[21 165]
[22 164]
[23 163]
[24 162]
[25 161]
[26 156]
[27 155]
[28 154]
[29 152]
[30 151]
[31 150]
[32 149]
[34 146]
[35 145]
[36 144]
[37 143]
[39 141]
[40 140]
[41 139]
[42 135]
[43 133]
[44 132]
[45 131]
[46 130]
[47 129]
[48 128]
[75 127]
[77 125]
[78 124]
[79 123]
[81 121]
[82 120]
[85 116]
[87 114]
[88 113]
[89 112]
[90 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
