%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[-13.48692799 592.81127930]
[-11.83555317 607.79028320]
[-13.68367958 622.74627686]
[-18.93164062 636.87268066]
[-27.29642105 649.40771484]
[-38.32691574 659.67535400]
[-51.42826843 667.12194824]
[-65.89393616 671.34582520]
[-80.94380188 672.11920166]
[-95.76625824 669.40045166]
[-109.56192780 663.33612061]
[-121.58684540 654.25329590]
[-131.19250488 642.64172363]
[-137.86091614 629.12768555]
[-141.23242188 614.43994141]
[-141.12522888 599.37060547]
[-137.54510498 584.73229980]
[-130.68511963 571.31451416]
[-120.91523743 559.84082031]
[-108.76232147 550.92993164]
[-94.88176727 545.06250000]
[-80.02214050 542.55487061]
[-64.98479462 543.54229736]
[-60.58379745 529.20245361]
[-56.18280029 514.86260986]
[-51.78180313 500.52276611]
[-47.38080597 486.18292236]
[-42.97980499 471.84307861]
[-38.57880783 457.50323486]
[-34.17781067 443.16339111]
[-29.77681160 428.82354736]
[-34.62200928 411.95666504]
[-21.03734779 399.52532959]
[-24.91449165 385.14419556]
[-13.63263321 374.05230713]
[-9.44562244 359.64849854]
[-22.54879761 366.94964600]
[-37.30270767 364.24371338]
[-46.96205902 352.76779175]
[-47.11072922 337.76852417]
[-37.68074799 326.10339355]
[-22.98337555 323.10549927]
[-9.73805237 330.14550781]
[-4.00027323 344.00659180]
[1.66251326 330.11657715]
[7.22173929 316.18478394]
[4.64307785 301.51507568]
[16.86951828 291.47393799]
[22.32487488 277.50112915]
[27.78023148 263.52835083]
[23.21208191 252.32751465]
[27.64267540 240.64189148]
[39.20682526 234.92933655]
[44.86960983 221.03930664]
[50.53239822 207.14929199]
[56.19518280 193.25926208]
[61.85797119 179.36923218]
[57.83288193 160.45664978]
[73.94498444 148.34208679]
[79.19170380 134.28962708]
[84.43842316 120.23715210]
[89.68514252 106.18467712]
[94.72205353 92.05564880]
[99.54805756 77.85319519]
[91.52973938 62.30565643]
[97.12653351 46.08866882]
[112.41344452 39.07802582]
[117.02745819 24.80529404]
[121.64146423 10.53256035]
[126.25547791 -3.74017310]
[130.22756958 -18.20469666]
[133.54983521 -32.83215714]
[129.06120300 -48.00327682]
[139.42523193 -58.70076752]
[142.74749756 -73.32822418]
[146.06974792 -87.95568848]
[149.39201355 -102.58314514]
[152.71427917 -117.21060944]
[155.92755127 -131.86239624]
[159.03166199 -146.53768921]
[148.81048584 -158.06306458]
[147.35273743 -173.21984863]
[155.00883484 -186.17547607]
[168.66221619 -192.06809998]
[171.76632690 -206.74340820]
[174.87043762 -221.41870117]
[177.97454834 -236.09400940]
[181.07865906 -250.76931763]
[179.79287720 -259.81280518]
[184.33976746 -265.63925171]
[187.22505188 -280.35913086]
[189.67077637 -295.15841675]
[192.11650085 -309.95767212]
[194.56222534 -324.75695801]
[197.00794983 -339.55621338]
[199.45368958 -354.35549927]
[201.89941406 -369.15475464]
[204.34513855 -383.95404053]
[206.79086304 -398.75329590]
[209.23658752 -413.55258179]
[195.55346680 -419.93023682]
[184.09918213 -429.76394653]
[175.72370911 -442.32397461]
[171.04856873 -456.67825317]
[170.42068481 -471.76165771]
[173.88665771 -486.45483398]
[181.18928528 -499.66748047]
[191.78666687 -510.41912842]
[204.89241028 -517.91192627]
[219.53396606 -521.58990479]
[234.62484741 -521.18011475]
[249.04519653 -516.71289062]
[261.72494507 -508.51980591]
[271.72317505 -497.20883179]
[278.29791260 -483.61932373]
[280.96133423 -468.75967407]
[279.51571655 -453.73260498]
[274.06842041 -439.65319824]
[265.02359009 -427.56628418]
[253.05247498 -418.36874390]
[239.04336548 -412.74310303]
[224.03585815 -411.10684204]
[221.59013367 -396.30758667]
[219.14440918 -381.50830078]
[216.69868469 -366.70904541]
[214.25296021 -351.90975952]
[211.80722046 -337.11050415]
[209.36149597 -322.31121826]
[206.91577148 -307.51196289]
[204.47004700 -292.71267700]
[202.02432251 -277.91342163]
[203.54525757 -275.55865479]
[204.22509766 -272.45956421]
[203.77563477 -268.93344116]
[202.02880859 -265.39605713]
[198.96723938 -262.31698608]
[195.75396729 -247.66520691]
[192.64985657 -232.98989868]
[189.54574585 -218.31460571]
[186.44163513 -203.63929749]
[183.33752441 -188.96398926]
[193.43545532 -178.04751587]
[195.18978882 -163.10139465]
[187.71957397 -149.83303833]
[173.70695496 -143.43359375]
[170.60284424 -128.75828552]
[172.29411316 -121.56374359]
[167.34173584 -113.88834381]
[164.01947021 -99.26088715]
[160.69721985 -84.63343048]
[157.37495422 -70.00596619]
[154.05268860 -55.37850571]
[158.77894592 -41.25364304]
[148.17729187 -29.50989723]
[144.85502625 -14.88243771]
[158.09149170 -21.93906975]
[172.48043823 -17.70136833]
[179.77923584 -4.59688091]
[175.80679321 9.86754799]
[162.83871460 17.40603638]
[148.30369568 13.70019436]
[140.52821350 0.87383610]
[135.91419983 15.14656925]
[131.30018616 29.41930199]
[126.68618011 43.69203568]
[134.10043335 54.23045731]
[134.09103394 67.31028748]
[126.43736267 78.15610504]
[113.75051117 82.67919159]
[108.92451477 96.88164520]
[110.11763000 101.98952484]
[108.36396790 107.40229034]
[103.73760986 111.43139648]
[98.49089050 125.48387146]
[93.24417877 139.53634644]
[87.99745941 153.58880615]
[93.07694244 163.20689392]
[92.04579163 173.81430054]
[85.48474884 181.93225098]
[75.74800110 185.03201294]
[70.08521271 198.92204285]
[64.42242432 212.81207275]
[58.75963974 226.70210266]
[53.09685135 240.59213257]
[56.02496338 258.77200317]
[41.75302887 268.98370361]
[36.29767227 282.95648193]
[30.84231567 296.92929077]
[33.03077316 312.59841919]
[21.19453621 321.64013672]
[20.98858070 330.77224731]
[15.55253983 335.77935791]
[9.88975334 349.66937256]
[4.95815992 363.83551025]
[0.77114880 378.23931885]
[4.34880972 393.65069580]
[-6.63356495 403.71234131]
[-1.11684310 415.37118530]
[-4.90074587 427.28192139]
[-15.43696499 433.22454834]
[-19.83796310 447.56439209]
[-24.23896027 461.90423584]
[-28.63995934 476.24407959]
[-33.04095840 490.58392334]
[-37.44195557 504.92376709]
[-41.84295273 519.26361084]
[-46.24394989 533.60345459]
[-50.64495087 547.94329834]
[-37.64261246 555.56146240]
[-26.74803543 565.97320557]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 208]
[24 207]
[25 206]
[26 205]
[27 204]
[28 203]
[29 202]
[30 201]
[31 200]
[33 197]
[35 195]
[36 194]
[44 193]
[45 192]
[46 190]
[48 188]
[49 187]
[50 186]
[53 184]
[54 183]
[55 182]
[56 181]
[57 180]
[59 176]
[60 175]
[61 174]
[62 173]
[63 170]
[64 169]
[67 165]
[68 164]
[69 163]
[70 162]
[71 155]
[72 154]
[74 152]
[75 151]
[76 150]
[77 149]
[78 148]
[79 146]
[80 145]
[84 141]
[85 140]
[86 139]
[87 138]
[88 137]
[90 136]
[91 131]
[92 130]
[93 129]
[94 128]
[95 127]
[96 126]
[97 125]
[98 124]
[99 123]
[100 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
