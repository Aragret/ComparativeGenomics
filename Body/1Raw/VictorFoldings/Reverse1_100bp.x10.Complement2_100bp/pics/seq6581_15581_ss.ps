%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[68.80110931 656.80780029]
[60.61460495 644.17584229]
[55.13879776 630.15441895]
[52.59791183 615.31768799]
[53.09599686 600.27319336]
[56.61265564 585.63702393]
[63.00388718 572.00848389]
[72.00797272 559.94561768]
[83.25619507 549.94250488]
[96.28795624 542.40875244]
[110.56960297 537.65277100]
[108.78713989 522.75903320]
[107.00467682 507.86532593]
[105.22220612 492.97158813]
[103.43974304 478.07788086]
[99.52367401 471.80999756]
[101.74331665 462.94937134]
[100.18279266 448.03076172]
[98.62226868 433.11215210]
[97.06174469 418.19354248]
[95.50122070 403.27493286]
[93.94069672 388.35635376]
[92.38017273 373.43774414]
[83.36077881 361.58447266]
[89.62039948 347.05422974]
[81.57762909 359.71575928]
[68.01137543 366.11547852]
[53.12527847 364.27044678]
[41.53196716 354.75228882]
[36.82375336 340.51034546]
[40.45952225 325.95764160]
[51.31269836 315.60348511]
[66.02030182 312.65621948]
[80.02502441 318.02908325]
[88.98744202 330.05749512]
[89.43404388 315.06414795]
[89.88065338 300.07080078]
[90.32725525 285.07745361]
[90.77386475 270.08410645]
[91.22046661 255.09074402]
[91.66707611 240.09739685]
[92.11368561 225.10404968]
[92.56028748 210.11070251]
[93.00689697 195.11735535]
[93.45349884 180.12399292]
[93.90010834 165.13064575]
[94.34671021 150.13729858]
[94.23504639 135.13771057]
[93.56526184 120.15267944]
[92.89547729 105.16764069]
[90.82864380 102.92761230]
[89.53118134 99.88604736]
[89.30154419 96.32645416]
[90.32926178 92.63862610]
[92.65885162 89.27618408]
[92.88217926 74.27784729]
[93.10550690 59.27951050]
[93.32883453 44.28117371]
[90.88310242 29.48190498]
[78.96104431 19.08117676]
[81.97533417 4.49476767]
[76.93842316 -9.63426208]
[71.90150452 -23.76329041]
[59.97944641 -34.16401672]
[62.99373627 -48.75042725]
[57.95682144 -62.87945557]
[54.55104828 -65.57290649]
[52.39624023 -68.87765503]
[51.53096008 -72.32536316]
[51.83770752 -75.48329163]
[53.06805801 -78.00209808]
[48.88104630 -92.40587616]
[44.48004913 -106.74572754]
[39.86603928 -121.01845551]
[35.25202942 -135.29119873]
[30.63802147 -149.56391907]
[26.02401161 -163.83665466]
[11.14071751 -161.69293213]
[-3.89078069 -162.09548950]
[-18.63799858 -165.03277588]
[-32.67662811 -170.42024231]
[-45.60274887 -178.10292053]
[-57.04445267 -187.85972595]
[-66.67253876 -199.40997314]
[-74.20998383 -212.42131042]
[-79.43992615 -226.51937866]
[-82.21188354 -241.29856873]
[-82.44611359 -256.33361816]
[-80.13586426 -271.19198608]
[-75.34761047 -285.44613647]
[-68.21911621 -298.68594360]
[-58.95549011 -310.53048706]
[-47.82325745 -320.63897705]
[-35.14272308 -328.72055054]
[-21.27872276 -334.54272461]
[-6.63015795 -337.93792725]
[8.38150692 -338.80853271]
[23.32435417 -337.12945557]
[37.76845169 -332.94900513]
[51.29820633 -326.38748169]
[63.52434921 -317.63366699]
[74.09510803 -306.93939209]
[82.70632935 -294.61239624]
[89.11026764 -281.00735474]
[93.12266541 -266.51565552]
[94.62806702 -251.55432129]
[93.58316803 -236.55378723]
[90.01803589 -221.94564819]
[84.03523254 -208.15020752]
[75.80690765 -195.56439209]
[65.56980133 -184.55032349]
[53.61846161 -175.42489624]
[40.29674530 -168.45066833]
[44.91075516 -154.17793274]
[49.52476501 -139.90519714]
[54.13877106 -125.63246918]
[58.75278091 -111.35973358]
[62.52154160 -108.42622375]
[64.48749542 -103.09405518]
[63.28482819 -96.59288788]
[67.47183990 -82.18910980]
[72.08584595 -67.91637421]
[77.12276459 -53.78734207]
[88.68454742 -44.39722061]
[86.03053284 -28.80020714]
[91.06745148 -14.67117786]
[96.10436249 -0.54214835]
[107.66614532 8.84797573]
[105.01213074 24.44498825]
[106.76737976 9.54803753]
[111.99053955 -4.51320696]
[120.38621521 -16.94351578]
[131.47959900 -27.03989220]
[144.64329529 -34.23133850]
[159.13285828 -38.11114502]
[174.12879944 -38.45988846]
[188.78305054 -35.25784683]
[202.26683044 -28.68610764]
[213.81756592 -19.11633873]
[222.78199768 -7.08975458]
[228.65316772 6.71348286]
[231.09902954 21.51273346]
[229.98124695 36.47102737]
[225.36302185 50.74240112]
[217.50556946 63.51973724]
[206.85324097 74.08042145]
[194.00849915 81.82718658]
[179.69775391 86.32192230]
[164.73036194 87.31042480]
[149.95278931 84.73680115]
[136.20079041 78.74658203]
[124.25211334 69.67856598]
[114.78250122 58.04557419]
[108.32717133 44.50450134]
[108.10384369 59.50283813]
[107.88051605 74.50117493]
[107.65718842 89.49951172]
[107.88051605 104.49784851]
[108.55030060 119.48288727]
[109.22008514 134.46792603]
[121.11453247 125.32889557]
[135.71171570 128.78179932]
[142.25111389 142.28128052]
[135.91213989 155.87603760]
[121.36764526 159.54450989]
[109.34006500 150.58390808]
[108.89345551 165.57725525]
[108.44684601 180.57060242]
[108.00024414 195.56394958]
[107.55363464 210.55731201]
[107.10703278 225.55065918]
[106.66042328 240.54400635]
[106.21382141 255.53735352]
[105.76721191 270.53070068]
[105.32061005 285.52404785]
[104.87400055 300.51739502]
[104.42739868 315.51074219]
[103.98078918 330.50411987]
[104.53900146 345.49371338]
[113.67001343 358.41406250]
[107.29878235 371.87719727]
[108.85930634 386.79580688]
[110.41982269 401.71441650]
[111.98034668 416.63302612]
[113.54087067 431.55163574]
[115.10139465 446.47024536]
[116.66191864 461.38885498]
[118.33345795 476.29541016]
[120.11592865 491.18911743]
[121.89839172 506.08285522]
[123.68085480 520.97656250]
[125.46332550 535.87030029]
[140.46394348 537.12176514]
[154.90547180 541.36761475]
[168.19654846 548.43389893]
[179.79290771 558.03125000]
[189.21966553 569.76672363]
[196.09083557 583.15966797]
[200.12503052 597.66174316]
[201.15704346 612.67907715]
[199.14463806 627.59667969]
[194.17019653 641.80371094]
[186.43743896 654.71844482]
[176.26300049 665.81195068]
[164.06352234 674.62994385]
[150.33857727 680.81146240]
[135.65017700 684.10321045]
[120.59981537 684.37054443]
[105.80378723 681.60241699]
[91.86798859 675.91223145]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 192]
[12 191]
[13 190]
[14 189]
[15 188]
[17 187]
[18 186]
[19 185]
[20 184]
[21 183]
[22 182]
[23 181]
[25 179]
[35 178]
[36 177]
[37 176]
[38 175]
[39 174]
[40 173]
[41 172]
[42 171]
[43 170]
[44 169]
[45 168]
[46 167]
[47 166]
[48 160]
[49 159]
[50 158]
[55 157]
[56 156]
[57 155]
[58 154]
[59 129]
[61 127]
[62 126]
[63 125]
[65 123]
[66 122]
[71 121]
[72 120]
[73 117]
[74 116]
[75 115]
[76 114]
[77 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
