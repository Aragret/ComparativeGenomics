%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAUCAUCACCCCACUCCGAACCUAAUCGCAAAUCUUCCCGAUAAACAACACCCAGAGUACUCAACCUCACAUCCUAUUUAGUACGAUUCCGCUCCUACxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[84.14344788 704.18017578]
[96.38871765 694.79632568]
[95.05048370 679.85614014]
[93.71224976 664.91595459]
[92.37401581 649.97576904]
[91.03578186 635.03558350]
[89.69754791 620.09539795]
[87.63539124 618.19659424]
[86.20114136 615.36645508]
[85.75326538 611.84014893]
[86.55860901 607.97802734]
[88.75157166 604.23040771]
[88.30496216 589.23706055]
[87.85836029 574.24371338]
[87.41175079 559.25030518]
[86.96514893 544.25695801]
[86.51853943 529.26361084]
[86.07193756 514.27026367]
[85.62532806 499.27694702]
[74.64199829 489.28182983]
[73.97548676 474.08282471]
[84.53373718 462.63024902]
[84.08712769 447.63690186]
[83.64052582 432.64355469]
[73.62631226 418.23236084]
[82.48910522 402.09133911]
[81.81932068 387.10629272]
[81.14953613 372.12124634]
[80.47975159 357.13623047]
[72.18186951 344.76712036]
[79.29524231 330.63522339]
[78.62545776 315.65020752]
[77.95567322 300.66516113]
[67.89820862 311.79382324]
[53.05816269 313.97857666]
[40.22020721 306.22055054]
[35.25368118 292.06661987]
[40.42921066 277.98779297]
[53.38061523 270.42068481]
[68.18669128 272.82489014]
[78.07897186 284.10296631]
[78.97178650 269.12957764]
[69.15473938 260.78359985]
[65.88838196 248.11817932]
[70.58217621 235.70130920]
[81.73212433 228.14529419]
[82.84777069 213.18684387]
[83.96342468 198.22839355]
[77.19416046 184.96089172]
[85.93643951 171.77441406]
[87.05209351 156.81596375]
[88.16773987 141.85751343]
[89.28338623 126.89906311]
[87.55842590 124.68938446]
[86.60481262 121.66329193]
[86.73789215 118.11115265]
[88.16217041 114.43202972]
[90.93683624 111.09209442]
[85.80446625 98.08631134]
[94.19763184 86.90389252]
[96.20164490 72.03836823]
[94.24681091 63.11556244]
[98.34775543 56.96706772]
[100.57287598 42.13302231]
[102.79798889 27.29897881]
[105.02310944 12.46493530]
[107.24822235 -2.36910868]
[105.42645264 -11.32002735]
[109.61848450 -17.40678596]
[112.06420898 -32.20605850]
[106.68054962 -47.08311081]
[116.38947296 -58.37851334]
[118.83519745 -73.17778015]
[111.97213745 -84.09845734]
[114.31385803 -96.37445831]
[124.06925964 -103.52699280]
[126.73505402 -118.28820801]
[129.40084839 -133.04942322]
[116.49268341 -125.40879059]
[101.92886353 -128.99977112]
[94.05220032 -141.76527405]
[97.37480927 -156.39265442]
[109.99334717 -164.50268555]
[124.67934418 -161.44955444]
[133.01980591 -148.98318481]
[136.99189758 -163.44770813]
[140.96398926 -177.91223145]
[144.93609619 -192.37675476]
[147.16120911 -207.21080017]
[139.83822632 -221.23522949]
[147.95103455 -233.72648621]
[148.39762878 -248.71983337]
[141.07464600 -262.74426270]
[149.18745422 -275.23550415]
[149.63406372 -290.22888184]
[150.08067322 -305.22222900]
[150.52726746 -320.21557617]
[150.97387695 -335.20892334]
[136.88119507 -340.79211426]
[125.55002594 -350.86090088]
[118.34867096 -364.19943237]
[116.14672089 -379.19699097]
[119.21008301 -394.04260254]
[127.16883087 -406.94351196]
[139.06192017 -416.34194946]
[153.45318604 -421.10296631]
[168.60482788 -420.65164185]
[182.68719482 -415.04248047]
[193.99978638 -404.95281982]
[201.17654419 -391.60104370]
[203.35086060 -376.59945679]
[200.26014709 -361.75952148]
[192.27763367 -348.87329102]
[180.36724854 -339.49679565]
[165.96722412 -334.76229858]
[165.52062988 -319.76895142]
[165.07402039 -304.77560425]
[164.62741089 -289.78225708]
[164.18080139 -274.78890991]
[171.53573608 -261.83691406]
[163.39099121 -248.27322388]
[162.94438171 -233.27987671]
[170.29931641 -220.32788086]
[162.15455627 -206.76419067]
[169.80018616 -219.66940308]
[181.35455322 -229.23477173]
[195.46028137 -234.33659363]
[210.46023560 -234.37548828]
[224.59222412 -229.34689331]
[236.19606018 -219.84156799]
[243.90850830 -206.97619629]
[246.82353210 -192.26216125]
[244.59869385 -177.42808533]
[237.49533081 -164.21662903]
[226.34796143 -154.17988586]
[212.46615601 -148.49696350]
[197.48075867 -147.83546448]
[183.15220642 -152.27311707]
[171.16383362 -161.28858948]
[162.92399597 -173.82275391]
[159.40061951 -188.40466309]
[155.42851257 -173.94013977]
[151.45642090 -159.47561646]
[147.48432922 -145.01109314]
[144.16206360 -130.38363647]
[141.49627686 -115.62241364]
[138.83047485 -100.86119843]
[145.64564514 -84.68960571]
[133.63447571 -70.73205566]
[131.18873596 -55.93278503]
[136.74734497 -42.11427307]
[126.86348724 -29.76033020]
[124.41775513 -14.96105957]
[122.08226776 -0.14399144]
[119.85715485 14.69005203]
[117.63203430 29.52409554]
[115.40692139 44.35813904]
[113.18180084 59.19218445]
[111.06717682 74.04238129]
[109.06316376 88.90790558]
[114.19553375 101.91368866]
[105.80236816 113.09610748]
[104.24184418 128.01470947]
[103.12619019 142.97315979]
[102.01054382 157.93161011]
[100.89489746 172.89007568]
[107.58435822 187.22749329]
[98.92187500 199.34403992]
[97.80622864 214.30249023]
[96.69058228 229.26094055]
[108.34682465 242.30514526]
[106.98941803 259.40698242]
[93.94519043 270.02236938]
[93.05237579 284.99578857]
[92.94071198 299.99536133]
[93.61049652 314.98040771]
[94.28028107 329.96545410]
[102.62606812 343.40637207]
[95.46479034 356.46643066]
[96.13457489 371.45147705]
[96.80435944 386.43652344]
[97.47414398 401.42153931]
[106.44858551 410.68557739]
[106.69795227 423.18045044]
[98.63387299 432.19692993]
[99.08048248 447.19030762]
[99.52708435 462.18365479]
[110.74828339 472.98745728]
[110.98761749 488.19921875]
[100.61867523 498.83032227]
[101.06528473 513.82366943]
[101.51188660 528.81701660]
[101.95849609 543.81036377]
[102.40509796 558.80371094]
[102.85170746 573.79705811]
[103.29831696 588.79040527]
[103.74491882 603.78375244]
[104.63773346 618.75720215]
[105.97596741 633.69738770]
[107.31420135 648.63757324]
[108.65243530 663.57775879]
[109.99066925 678.51794434]
[111.32890320 693.45812988]
[125.04694366 700.51635742]
[132.75152588 713.88208008]
[131.98414612 729.29034424]
[122.98966217 741.82446289]
[108.63819885 747.48474121]
[93.50923920 744.46508789]
[82.43039703 733.72906494]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 203]
[3 202]
[4 201]
[5 200]
[6 199]
[7 198]
[12 197]
[13 196]
[14 195]
[15 194]
[16 193]
[17 192]
[18 191]
[19 190]
[22 187]
[23 186]
[24 185]
[26 182]
[27 181]
[28 180]
[29 179]
[31 177]
[32 176]
[33 175]
[41 174]
[42 173]
[46 170]
[47 169]
[48 168]
[50 166]
[51 165]
[52 164]
[53 163]
[58 162]
[60 160]
[61 159]
[63 158]
[64 157]
[65 156]
[66 155]
[67 154]
[69 153]
[70 152]
[72 150]
[73 149]
[76 147]
[77 146]
[78 145]
[85 144]
[86 143]
[87 142]
[88 141]
[89 124]
[91 122]
[92 121]
[94 119]
[95 118]
[96 117]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
