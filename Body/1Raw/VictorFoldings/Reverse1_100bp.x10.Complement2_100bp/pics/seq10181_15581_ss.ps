%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[119.65751648 705.19842529]
[112.87746429 691.73388672]
[109.51740265 677.03784180]
[109.77266693 661.96478271]
[113.62841797 647.39093018]
[120.86049652 634.16369629]
[131.04843140 623.05200195]
[143.59991455 614.70190430]
[157.78521729 609.59887695]
[156.22468567 594.68029785]
[154.66416931 579.76171875]
[153.10363770 564.84307861]
[151.43209839 549.93652344]
[149.64964294 535.04278564]
[147.86717224 520.14904785]
[138.67230225 508.43142700]
[144.71488953 493.80960083]
[142.71087646 478.94406128]
[140.48574829 464.11001587]
[138.26063538 449.27597046]
[128.72096252 437.83728027]
[134.32553101 423.04202271]
[132.10040283 408.20797729]
[129.87528992 393.37393188]
[127.65017700 378.53988647]
[125.42505646 363.70584106]
[111.72185516 362.31137085]
[98.74449921 357.66552734]
[87.25316620 350.03546143]
[77.92221069 339.86318970]
[71.30056000 327.74008179]
[67.77945709 314.37252808]
[67.56930542 300.54071045]
[70.68715668 287.05307007]
[76.95538330 274.69906616]
[86.01184082 264.20300293]
[97.33072662 256.18151855]
[110.25317383 251.10739136]
[108.47070312 236.21366882]
[96.63945007 227.23831177]
[94.61961365 212.15936279]
[104.11401367 199.81050110]
[102.33154297 184.91677856]
[100.54907990 170.02307129]
[98.76660919 155.12934875]
[96.98414612 140.23564148]
[95.20168304 125.34191895]
[93.41921234 110.44819641]
[88.14080048 124.48879242]
[79.00590515 136.38642883]
[66.80477905 145.11183167]
[52.59295654 149.91017151]
[37.59989548 150.36634827]
[23.12264442 146.44088745]
[10.41363335 138.47338867]
[0.57231611 127.15312195]
[-5.54993343 113.45939636]
[-7.42348003 98.57686615]
[-4.88624239 83.79300690]
[1.84228218 70.38677979]
[12.18000984 59.51795197]
[25.23262215 52.12678909]
[39.87094116 48.85269928]
[54.82860184 49.97892380]
[68.81161499 55.40803528]
[80.61032104 64.67035675]
[89.20400238 76.96460724]
[93.84864044 91.22374725]
[96.29436493 76.42447662]
[89.43129730 65.50379944]
[91.77302551 53.22780609]
[101.52841949 46.07526779]
[104.19422150 31.31405067]
[102.32172394 24.97328568]
[103.72228241 19.46552086]
[107.16540527 16.15584564]
[110.26951599 1.48054302]
[113.37362671 -13.19475937]
[116.47773743 -27.87006187]
[119.58184814 -42.54536438]
[122.68595886 -57.22066498]
[124.24648285 -72.13927460]
[124.24648285 -87.13927460]
[124.24648285 -102.13927460]
[124.13481140 -117.13885498]
[123.91148376 -132.13719177]
[123.68815613 -147.13552856]
[123.12994385 -162.12513733]
[122.23712921 -177.09854126]
[121.23287201 -192.06489563]
[120.11721802 -207.02334595]
[105.26940155 -209.66777039]
[91.54603577 -215.92237854]
[79.80978394 -225.39398193]
[70.79840851 -237.48719788]
[65.07836151 -251.44183350]
[63.00921631 -266.38070679]
[64.72103119 -281.36471558]
[70.10621643 -295.45196533]
[78.82623291 -307.75689697]
[90.33295441 -317.50607300]
[103.90304565 -324.08660889]
[118.68348694 -327.08483887]
[133.74516296 -326.31231689]
[148.14128113 -321.81759644]
[160.96688843 -313.88320923]
[171.41577148 -303.00793457]
[178.83108521 -289.87539673]
[182.74671936 -275.31109619]
[182.91650391 -260.23059082]
[179.32978821 -245.58181763]
[172.21203613 -232.28562927]
[162.01066589 -221.17785645]
[149.36694336 -212.95671082]
[135.07566833 -208.13899231]
[136.19132996 -193.18054199]
[139.82360840 -186.74406433]
[137.21054077 -177.99136353]
[138.10334778 -163.01795959]
[140.48367310 -160.41671753]
[141.72230530 -156.53330994]
[141.23037720 -151.91690063]
[138.68649292 -147.35885620]
[138.90982056 -132.36051941]
[139.13314819 -117.36218262]
[142.37588501 -110.72091675]
[139.24647522 -102.13927460]
[139.24647522 -87.13927460]
[139.24647522 -72.13927460]
[146.86581421 -85.06002045]
[158.80334473 -94.14272308]
[173.28819275 -98.04000854]
[188.17164612 -96.17374420]
[201.24581909 -88.82077789]
[210.57122803 -77.07187653]
[214.76451111 -62.66991806]
[213.20362854 -47.75135040]
[206.12010193 -34.52925491]
[194.56475830 -24.96504974]
[180.25175476 -20.47752762]
[165.30433655 -21.73238564]
[151.93986511 -28.54347420]
[142.14088440 -39.90040588]
[137.36125183 -54.11655807]
[134.25714111 -39.44125366]
[131.15304565 -24.76595116]
[128.04893494 -10.09064960]
[124.94481659 4.58465338]
[121.84070587 19.25995636]
[118.95543671 33.97984695]
[116.28964233 48.74106598]
[123.10481262 64.91265869]
[111.09363556 78.87020111]
[108.64791107 93.66947174]
[108.31293488 108.66573334]
[110.09539795 123.55944824]
[111.87786102 138.45317078]
[113.66033173 153.34687805]
[115.44279480 168.24060059]
[117.22526550 183.13432312]
[119.00772858 198.02803040]
[131.14805603 207.78767395]
[132.74356079 222.91740417]
[123.36442566 234.43119812]
[125.14688873 249.32492065]
[141.24772644 251.87789917]
[155.96949768 258.84704590]
[168.12882996 269.66351318]
[176.75076294 283.44949341]
[181.14692688 299.08953857]
[180.97052002 315.32073975]
[176.24357605 330.83483887]
[167.35467529 344.38345337]
[155.02690125 354.87878418]
[140.25910950 361.48074341]
[142.48422241 376.31478882]
[144.70933533 391.14883423]
[146.93444824 405.98287964]
[149.15957642 420.81692505]
[158.85839844 433.31665039]
[153.09468079 447.05087280]
[155.31979370 461.88491821]
[157.54492188 476.71896362]
[161.35787964 482.12014771]
[161.80381775 487.78567505]
[159.60859680 492.02713013]
[168.93096924 504.81008911]
[162.76089478 518.36663818]
[164.54335022 533.26031494]
[166.32582092 548.15405273]
[170.45281982 556.30303955]
[168.02224731 563.28259277]
[169.58276367 578.20117188]
[171.14329529 593.11975098]
[172.70381165 608.03839111]
[187.63807678 610.09539795]
[201.64582825 615.66729736]
[213.91268921 624.43017578]
[223.72547913 635.87451172]
[230.51368713 649.33496094]
[233.88265991 664.02893066]
[233.63653564 679.10217285]
[229.78961182 693.67834473]
[222.56556702 706.91003418]
[212.38436890 718.02783203]
[199.83795166 726.38555908]
[185.65574646 731.49713135]
[170.66229248 733.06549072]
[155.72927856 730.99945068]
[141.72491455 725.41900635]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 195]
[10 194]
[11 193]
[12 192]
[13 190]
[14 189]
[15 188]
[17 186]
[18 183]
[19 182]
[20 181]
[22 179]
[23 178]
[24 177]
[25 176]
[26 175]
[38 165]
[39 164]
[42 161]
[43 160]
[44 159]
[45 158]
[46 157]
[47 156]
[48 155]
[68 154]
[69 153]
[72 151]
[73 150]
[76 149]
[77 148]
[78 147]
[79 146]
[80 145]
[81 144]
[82 129]
[83 128]
[84 127]
[85 125]
[86 124]
[87 123]
[88 119]
[89 118]
[90 116]
[91 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
