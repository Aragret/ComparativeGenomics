%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[131.96340942 668.97033691]
[116.90477753 670.86822510]
[102.17837524 667.19433594]
[89.77581787 658.44555664]
[81.37445831 645.80511475]
[78.11050415 630.98242188]
[80.42539215 615.98223877]
[88.00603485 602.83319092]
[99.82723236 593.31353760]
[114.29024506 588.71075439]
[115.18305969 573.73730469]
[116.07587433 558.76391602]
[116.96868896 543.79052734]
[117.86151123 528.81713867]
[118.75432587 513.84368896]
[119.64714050 498.87030029]
[119.20053101 483.87695312]
[117.41806793 468.98324585]
[115.63560486 454.08950806]
[113.85313416 439.19580078]
[112.07067108 424.30209351]
[110.28820801 409.40835571]
[108.17358398 394.55816650]
[105.72785187 379.75891113]
[103.28212738 364.95962524]
[100.83639526 350.16036987]
[98.39067078 335.36108398]
[96.19299316 333.62088013]
[94.55221558 330.90527344]
[93.84331512 327.42205811]
[94.35916901 323.51074219]
[96.26732635 319.61035156]
[94.70680237 304.69174194]
[93.14627838 289.77313232]
[91.58575439 274.85452271]
[82.93894196 287.11148071]
[68.77665710 292.05413818]
[54.38108444 287.83898926]
[45.12141037 276.03820801]
[44.45127106 261.05319214]
[52.62060547 248.47296143]
[66.58245850 242.98965454]
[81.12940216 246.64839172]
[90.83623505 258.08566284]
[91.05956268 243.08731079]
[81.69883728 228.24333191]
[91.27352142 212.51416016]
[91.27352142 197.51416016]
[82.94456482 188.74176025]
[82.82180786 176.24501038]
[91.51644135 166.71788025]
[91.73976898 151.71954346]
[91.96309662 136.72120667]
[92.18642426 121.72286987]
[92.40975189 106.72453308]
[89.37137604 99.25855255]
[92.74971008 91.50498962]
[93.19631958 76.51164246]
[93.64292908 61.51829147]
[94.08953094 46.52494431]
[94.42450714 31.52868271]
[94.64783478 16.53034592]
[94.87116241 1.53200865]
[95.09449005 -13.46632862]
[95.09449005 -28.46632957]
[94.87116241 -43.46466446]
[93.97834778 -58.43807220]
[92.41782379 -73.35667419]
[83.28681183 -86.27701569]
[89.65804291 -99.74017334]
[88.09751892 -114.65877533]
[86.53700256 -129.57737732]
[84.97647858 -144.49598694]
[75.84545898 -157.41632080]
[82.21669769 -170.87948608]
[80.65617371 -185.79809570]
[76.65095520 -194.00759888]
[79.18517303 -200.95018005]
[77.84693909 -215.89036560]
[76.50870514 -230.83055115]
[75.17047119 -245.77073669]
[67.85149384 -232.67752075]
[55.33677673 -224.40818787]
[40.42214584 -222.81011963]
[26.43956566 -228.24035645]
[16.51278114 -239.48576355]
[12.85945892 -254.03405762]
[16.29576302 -268.63516235]
[26.05401230 -280.02709961]
[39.95419312 -285.66491699]
[54.89096451 -284.28912354]
[67.52741241 -276.20703125]
[75.04053497 -263.22421265]
[76.15618896 -278.18267822]
[77.27183533 -293.14111328]
[78.38748169 -308.09957886]
[79.50312805 -323.05801392]
[65.30558014 -328.18951416]
[53.01964951 -336.96209717]
[43.55702591 -348.72482300]
[37.61990356 -362.60476685]
[35.64885330 -377.57199097]
[37.79014587 -392.51580811]
[43.88488007 -406.32727051]
[53.48078537 -417.98150635]
[65.86578369 -426.61367798]
[80.12081909 -431.58322144]
[95.18808746 -432.52139282]
[109.94948578 -429.35852051]
[123.30962372 -422.32934570]
[134.27708435 -411.95547485]
[142.03802490 -399.00671387]
[146.01651001 -384.44393921]
[145.91732788 -369.34780884]
[141.74783325 -354.83859253]
[133.81742859 -341.99291992]
[122.71460724 -331.76403809]
[109.26326752 -324.91101074]
[94.46158600 -321.94238281]
[93.34593964 -306.98391724]
[92.23028564 -292.02548218]
[91.11463928 -277.06701660]
[89.99899292 -262.10855103]
[90.11065674 -247.10897827]
[91.44889069 -232.16879272]
[92.78712463 -217.22860718]
[94.12535858 -202.28842163]
[95.57477570 -187.35861206]
[97.13529968 -172.44000244]
[106.15469360 -160.58674622]
[99.89508057 -146.05651855]
[101.45560455 -131.13790894]
[103.01612854 -116.21929932]
[104.57665253 -101.30069733]
[113.59604645 -89.44743347]
[107.33642578 -74.91719818]
[108.89694977 -59.99859619]
[119.15928650 -70.93863678]
[134.14659119 -71.55565643]
[145.27345276 -61.49619293]
[146.16590881 -46.52276611]
[136.31271362 -35.21283340]
[121.35823059 -34.04523849]
[109.86949921 -43.68799210]
[110.09282684 -28.68965721]
[112.83502960 -24.77949524]
[113.15000916 -19.10518265]
[110.09282684 -13.24300098]
[109.86949921 1.75533640]
[109.64617157 16.75367355]
[109.42284393 31.75201035]
[112.46640778 38.48688507]
[109.08287811 46.97154999]
[108.63627625 61.96489716]
[108.18966675 76.95825195]
[107.74306488 91.95159912]
[107.40808868 106.94786072]
[107.18476105 121.94619751]
[106.96143341 136.94453430]
[106.73810577 151.94287109]
[106.51477814 166.94120789]
[115.85421753 182.81118774]
[106.27352142 197.51416016]
[106.27352142 212.51416016]
[114.82534790 222.16967773]
[114.51654053 234.66320801]
[106.05789948 243.31063843]
[105.83457184 258.30899048]
[106.50435638 273.29400635]
[108.06488037 288.21261597]
[109.62540436 303.13122559]
[111.18592834 318.04983521]
[113.18994141 332.91534424]
[115.63566589 347.71463013]
[118.08139801 362.51388550]
[120.52712250 377.31317139]
[122.97285461 392.11242676]
[126.28629303 396.14581299]
[127.59082031 400.60131836]
[127.06205750 404.64303589]
[125.18192291 407.62588501]
[126.96438599 422.51962280]
[128.74685669 437.41333008]
[130.52931213 452.30703735]
[132.31178284 467.20077515]
[134.09425354 482.09448242]
[140.66770935 468.61154175]
[152.38636780 459.24816895]
[166.98754883 455.81225586]
[181.65199280 458.96725464]
[193.54823303 468.10397339]
[200.37927246 481.45825195]
[200.82615662 496.45159912]
[194.80259705 510.18902588]
[183.47164917 520.01806641]
[169.02114868 524.04083252]
[154.24124146 521.48065186]
[141.98571777 512.83184814]
[134.62054443 499.76312256]
[133.72773743 514.73651123]
[132.83491516 529.70989990]
[131.94209290 544.68334961]
[131.04928589 559.65673828]
[130.15646362 574.63012695]
[129.26365662 589.60357666]
[143.07723999 595.89239502]
[153.68344116 606.74932861]
[159.64785767 620.70605469]
[160.16384888 635.87500000]
[155.16163635 650.20477295]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 205]
[11 204]
[12 203]
[13 202]
[14 201]
[15 200]
[16 199]
[17 186]
[18 185]
[19 184]
[20 183]
[21 182]
[22 181]
[23 177]
[24 176]
[25 175]
[26 174]
[27 173]
[32 172]
[33 171]
[34 170]
[35 169]
[44 168]
[45 167]
[47 164]
[48 163]
[51 161]
[52 160]
[53 159]
[54 158]
[55 157]
[57 156]
[58 155]
[59 154]
[60 153]
[61 151]
[62 150]
[63 149]
[64 148]
[65 145]
[66 144]
[67 137]
[68 136]
[70 134]
[71 133]
[72 132]
[73 131]
[75 129]
[76 128]
[78 127]
[79 126]
[80 125]
[81 124]
[93 123]
[94 122]
[95 121]
[96 120]
[97 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
