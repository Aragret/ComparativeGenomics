%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACAACAAACCUUCCCCCUACGCCCCCUUUACAACAAUCAUUACUCUUUAGGACGCUUAUCCGAAGGCCGACGGUCCGCAAAUUACCCCAAAUCAUCCCxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[44.23208618 409.57113647]
[46.70940399 390.34841919]
[46.93273163 375.35009766]
[47.15605927 360.35174561]
[47.37938690 345.35342407]
[47.60271454 330.35507202]
[47.82604218 315.35675049]
[39.62861633 306.46130371]
[39.69192886 293.96411133]
[48.52744293 284.56750488]
[48.97404861 269.57412720]
[49.42065430 254.58079529]
[49.86725998 239.58744812]
[42.80918884 252.82313538]
[33.33586502 264.45309448]
[21.80146217 274.04254150]
[8.63719654 281.23297119]
[-5.66477442 285.75555420]
[-20.56976128 287.44119263]
[-35.52052689 286.22686768]
[-49.95813370 282.15802002]
[-63.34281158 275.38674927]
[-75.17417145 266.16616821]
[-85.00988770 254.84103394]
[-92.48224640 241.83473206]
[-97.31188202 227.63351440]
[-99.31823730 212.76829529]
[-98.42631531 197.79483032]
[-94.66944122 183.27293396]
[-88.18807983 169.74546814]
[-79.22454071 157.71821594]
[-68.11392975 147.64079285]
[-55.27162933 139.88996887]
[-41.17775345 134.75550842]
[-26.35921860 132.42936707]
[-11.37001896 132.99850464]
[3.22945905 136.44165039]
[16.89340401 142.63006592]
[29.11097908 151.33241272]
[39.42542267 162.22334290]
[47.45111847 174.89569092]
[52.88802338 188.87567139]
[55.53287506 203.64065552]
[55.28747940 218.63258362]
[62.16689301 205.30314636]
[69.04630280 191.97372437]
[75.92572021 178.64428711]
[80.75171661 164.44183350]
[83.41751099 149.68061829]
[86.08330536 134.91940308]
[88.74909973 120.15818024]
[91.41490173 105.39696503]
[89.63449860 97.53549194]
[94.23183441 90.43652344]
[97.11711121 75.71662903]
[100.00238037 60.99674225]
[100.78369904 46.01710510]
[99.44546509 31.07691956]
[98.10723114 16.13673401]
[96.76899719 1.19654870]
[95.43076324 -13.74363613]
[94.09252930 -28.68382072]
[90.87925720 -43.33560944]
[85.84233856 -57.46463776]
[80.80542755 -71.59366608]
[75.76850891 -85.72269440]
[70.73159027 -99.85173035]
[58.80953598 -110.25245667]
[61.82382584 -124.83885956]
[56.78690720 -138.96789551]
[50.95753860 -146.00041199]
[51.78189087 -153.34494019]
[46.95589066 -167.54740906]
[42.12989426 -181.74986267]
[27.33904076 -179.08746338]
[12.31657791 -178.65937805]
[-2.60188794 -180.47514343]
[-17.08307266 -184.49421692]
[-30.80346107 -190.62681580]
[-43.45653534 -198.73590088]
[-54.75961685 -208.64033508]
[-64.46019745 -220.11886597]
[-72.34156036 -232.91502380]
[-78.22763062 -246.74296570]
[-81.98691559 -261.29376221]
[-83.53542328 -276.24230957]
[-82.83856201 -291.25473022]
[-79.91191101 -305.99554443]
[-74.82083893 -320.13552856]
[-67.67909241 -333.35873413]
[-58.64620972 -345.36975098]
[-47.92399979 -355.90026855]
[-35.75199127 -364.71502686]
[-22.40212059 -371.61709595]
[-8.17262077 -376.45227051]
[6.61861086 -379.11257935]
[21.64113426 -379.53851318]
[36.55934143 -377.72061157]
[51.03995514 -373.69949341]
[64.75946808 -367.56494141]
[77.41138458 -359.45404053]
[88.71305847 -349.54800415]
[98.41200256 -338.06808472]
[106.29154205 -325.27081299]
[112.17564392 -311.44204712]
[115.93285370 -296.89071655]
[117.47923279 -281.94192505]
[116.78024292 -266.92962646]
[113.85148621 -252.18920898]
[108.75839996 -238.04995728]
[101.61476898 -224.82777405]
[92.58017731 -212.81803894]
[81.85646820 -202.28904724]
[69.68320465 -193.47602844]
[56.33234787 -186.57585144]
[61.15834808 -172.37339783]
[65.98434448 -158.17094421]
[70.91593933 -144.00480652]
[75.95285797 -129.87577820]
[87.51464081 -120.48565674]
[84.86061859 -104.88864136]
[89.89753723 -90.75961304]
[94.93445587 -76.63058472]
[99.97137451 -62.50155258]
[105.00828552 -48.37252426]
[107.28132629 -63.19929886]
[114.18705750 -76.51511383]
[124.99669647 -86.91471863]
[138.56947327 -93.30061340]
[153.47302246 -94.99888611]
[168.13453674 -91.83031464]
[181.00675964 -84.12928009]
[190.73124695 -72.70848846]
[196.28175354 -58.77321625]
[197.07250977 -43.79407120]
[193.02008057 -29.35184860]
[184.55212402 -16.97066689]
[172.56228638 -7.95714092]
[158.31587219 -3.26249051]
[143.31634521 -3.38215327]
[129.14665222 -8.30350113]
[117.30213928 -17.50717163]
[109.03271484 -30.02205467]
[110.37094879 -15.08187008]
[111.70918274 -0.14168541]
[113.04741669 14.79850006]
[114.38565063 29.73868561]
[115.72388458 44.67887115]
[121.41800690 30.80165672]
[130.90309143 19.18128014]
[143.35858154 10.82301712]
[157.70697021 6.44994307]
[172.70697021 6.44037151]
[187.06092834 10.79513073]
[199.52708435 19.13748932]
[209.02699280 30.74575233]
[214.73881531 44.61568832]
[216.16842651 59.54740524]
[213.19213867 74.24916840]
[206.06744385 87.44911957]
[195.41069031 98.00533295]
[182.14379883 105.00459290]
[167.41448975 107.84139252]
[152.49699402 106.27032471]
[138.68182373 100.42729187]
[127.16412354 90.81778717]
[118.94029999 78.27311707]
[114.72227478 63.88201523]
[111.83699799 78.60190582]
[108.95172882 93.32180023]
[106.17611694 108.06275940]
[103.51032257 122.82397461]
[100.84452057 137.58518982]
[98.17872620 152.34640503]
[95.51293182 167.10763550]
[104.60901642 155.18029785]
[116.66275787 146.25241089]
[130.72355652 141.02804565]
[145.68252563 139.91923523]
[160.35992432 143.01342773]
[173.59823608 150.06658936]
[184.35342407 160.52249146]
[191.77731323 173.55651855]
[195.28440857 188.14076233]
[194.59812927 203.12506104]
[189.77258301 217.32766724]
[181.18836975 229.62852478]
[169.52243042 239.05752563]
[155.69482422 244.87106323]
[140.79603577 246.61065674]
[126.00105286 244.13911438]
[112.47666931 237.65135193]
[101.28947449 227.65901184]
[93.32173920 214.95016479]
[89.20182037 200.52703857]
[89.25514984 185.52369690]
[82.37573242 198.85313416]
[75.49632263 212.18255615]
[68.61691284 225.51199341]
[64.86061096 240.03404236]
[64.41400146 255.02740479]
[63.96739578 270.02075195]
[63.52079010 285.01409912]
[72.62291718 301.02136230]
[62.82437897 315.58007812]
[62.60105133 330.57839966]
[62.37772369 345.57675171]
[62.15439606 360.57507324]
[61.93106842 375.57342529]
[61.70774078 390.57174683]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 210]
[3 209]
[4 208]
[5 207]
[6 206]
[7 205]
[10 203]
[11 202]
[12 201]
[13 200]
[44 199]
[45 198]
[46 197]
[47 196]
[48 175]
[49 174]
[50 173]
[51 172]
[52 171]
[54 170]
[55 169]
[56 168]
[57 148]
[58 147]
[59 146]
[60 145]
[61 144]
[62 143]
[63 125]
[64 124]
[65 123]
[66 122]
[67 121]
[69 119]
[70 118]
[72 117]
[73 116]
[74 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
