%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[35.55239487 640.76568604]
[27.80258179 626.31329346]
[36.67263031 612.52001953]
[36.89595795 597.52166748]
[33.85239029 590.78680420]
[37.23591995 582.30212402]
[37.68252563 567.30877686]
[38.12913132 552.31542969]
[38.57573700 537.32208252]
[39.02234268 522.32873535]
[38.91067886 507.32913208]
[38.24089050 492.34408569]
[37.57110596 477.35906982]
[29.67478371 490.11242676]
[16.80330658 497.81469727]
[1.83219445 498.74517822]
[-11.89396667 492.69601440]
[-21.30871773 481.01858521]
[-24.30878067 466.32165527]
[-20.22393036 451.88854980]
[-9.96673584 440.94369507]
[4.17131996 435.93218994]
[19.03176117 437.97357178]
[31.29472351 446.61184692]
[38.22063828 459.91720581]
[40.00310516 445.02346802]
[41.78557205 430.12976074]
[43.56803894 415.23605347]
[37.39795303 401.67953491]
[46.72032166 388.89657593]
[48.28084564 373.97796631]
[49.61907959 359.03778076]
[50.95731354 344.09759521]
[52.29554749 329.15740967]
[53.63378143 314.21722412]
[54.97201538 299.27703857]
[56.31024933 284.33685303]
[57.64848328 269.39666748]
[47.32044601 280.27468872]
[32.77652359 283.94543457]
[18.52331161 279.27148438]
[8.97732353 267.70108032]
[7.09648514 252.81945801]
[13.46359539 239.23786926]
[26.10573769 231.16467285]
[41.10560226 231.10148621]
[53.81532288 239.06785583]
[60.29669571 252.59556580]
[63.61895370 237.96810913]
[66.94121552 223.34065247]
[70.26347351 208.71319580]
[64.17720032 192.25341797]
[76.79962921 178.84611511]
[79.79440308 164.14811707]
[82.67967987 149.42822266]
[85.56494904 134.70832825]
[88.45022583 119.98844147]
[91.33549500 105.26854706]
[89.67234039 97.38143921]
[94.37486267 90.35170746]
[89.66086578 75.24909210]
[99.86446381 64.39848328]
[102.96857452 49.72318268]
[106.07268524 35.04788208]
[109.06745911 20.34987831]
[111.95273590 5.62998676]
[114.83800507 -9.08990479]
[117.72328186 -23.80979538]
[112.78495026 -38.84054565]
[122.82587433 -49.84186935]
[125.71114349 -64.56175995]
[127.27166748 -79.48036194]
[127.16000366 -94.47994995]
[126.71339417 -109.47329712]
[126.26679230 -124.46665192]
[125.70858002 -139.45625305]
[125.03879547 -154.44129944]
[124.36901093 -169.42633057]
[123.58768463 -184.40597534]
[122.69487000 -199.37937927]
[112.76924896 -203.12673950]
[104.68495941 -209.93817139]
[99.34664917 -219.01818848]
[97.34056854 -229.31947327]
[98.87030792 -239.66352844]
[103.73641968 -248.87562561]
[111.36203766 -255.91812134]
[120.86112976 -260.00735474]
[120.86112976 -275.00735474]
[120.86112976 -290.00735474]
[120.86112976 -305.00735474]
[107.04312134 -314.76229858]
[101.81420135 -330.67327881]
[107.04689026 -346.40798950]
[120.49101257 -355.82781982]
[120.26768494 -370.82614136]
[120.04435730 -385.82449341]
[119.82102966 -400.82281494]
[119.59770203 -415.82116699]
[105.91226959 -422.67443848]
[96.98873138 -435.10943604]
[94.87763214 -450.26864624]
[100.06410980 -464.66860962]
[111.35633087 -475.00033569]
[126.15943146 -478.88964844]
[141.07177734 -475.44281006]
[152.66661072 -465.45187378]
[158.27951050 -451.21270752]
[156.62071228 -435.99737549]
[148.07135010 -423.30221558]
[134.59603882 -416.04449463]
[134.81936646 -401.04614258]
[135.04269409 -386.04782104]
[135.26602173 -371.04946899]
[135.48934937 -356.05114746]
[147.07202148 -349.41156006]
[153.91632080 -337.82278442]
[154.14241028 -324.25744629]
[147.58430481 -312.25704956]
[135.86112976 -305.00735474]
[135.86112976 -290.00735474]
[135.86112976 -275.00735474]
[135.86112976 -260.00735474]
[152.42353821 -249.60058594]
[159.38841248 -231.16767883]
[153.76451111 -212.13186646]
[137.66827393 -200.27220154]
[138.56109619 -185.29879761]
[142.09713745 -178.80894470]
[139.35404968 -170.09611511]
[140.02383423 -155.11108398]
[140.69361877 -140.12603760]
[144.13265991 -133.58427429]
[141.26014709 -124.91325378]
[141.70674133 -109.91990662]
[142.15335083 -94.92655945]
[144.45516968 -92.25559998]
[145.57763672 -88.33704376]
[144.94847107 -83.73731995]
[142.27000427 -79.25703430]
[150.58586121 -91.74089050]
[163.45042419 -99.45470428]
[178.37976074 -100.90907288]
[192.49122620 -95.82317352]
[203.06013489 -85.17901611]
[208.04579163 -71.03181458]
[206.48554993 -56.11318207]
[198.68066406 -43.30366898]
[186.13812256 -35.07658768]
[171.27972412 -33.02046204]
[156.97436523 -37.53229523]
[145.98419189 -47.74092865]
[140.43103027 -61.67648697]
[137.54576111 -46.95659637]
[142.69047546 -32.97871017]
[132.44317627 -20.92452431]
[129.55789185 -6.20463228]
[126.67262268 8.51525879]
[123.78735352 23.23515129]
[125.58554840 30.40371323]
[120.74799347 38.15199280]
[117.64388275 52.82729340]
[114.53977203 67.50259399]
[119.47579193 81.55552673]
[109.05016327 93.45581818]
[106.05538940 108.15381622]
[103.17011261 122.87371063]
[100.28484344 137.59359741]
[97.39956665 152.31349182]
[94.51429749 167.03338623]
[95.93457794 176.05671692]
[91.47493744 181.95022583]
[97.84352112 193.16645813]
[94.95597839 205.32565308]
[84.89093781 212.03544617]
[81.56867218 226.66290283]
[78.24641418 241.29037476]
[74.92415619 255.91783142]
[72.58866882 270.73489380]
[71.25043488 285.67507935]
[69.91220093 300.61526489]
[68.57396698 315.55545044]
[67.23573303 330.49563599]
[65.89749908 345.43582153]
[64.55926514 360.37600708]
[63.22103119 375.31619263]
[65.65174866 381.46463013]
[64.74815369 387.07537842]
[61.61404037 390.67901611]
[67.65662384 405.30084229]
[58.46175385 417.01852417]
[56.67928696 431.91223145]
[54.89682388 446.80593872]
[53.11435699 461.69967651]
[52.55614471 476.68927002]
[53.22592926 491.67431641]
[53.89571762 506.65936279]
[65.79016876 497.52032471]
[80.38734436 500.97320557]
[86.92674255 514.47271729]
[80.58776855 528.06744385]
[66.04327393 531.73596191]
[54.01569366 522.77532959]
[53.56908798 537.76867676]
[53.12248230 552.76202393]
[52.67587662 567.75537109]
[52.22927094 582.74871826]
[51.89429474 597.74499512]
[51.67096710 612.74334717]
[60.12640381 626.79455566]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 209]
[4 208]
[6 207]
[7 206]
[8 205]
[9 204]
[10 203]
[11 197]
[12 196]
[13 195]
[25 194]
[26 193]
[27 192]
[28 191]
[30 189]
[31 186]
[32 185]
[33 184]
[34 183]
[35 182]
[36 181]
[37 180]
[38 179]
[48 178]
[49 177]
[50 176]
[51 175]
[53 172]
[54 170]
[55 169]
[56 168]
[57 167]
[58 166]
[60 165]
[62 163]
[63 162]
[64 161]
[65 159]
[66 158]
[67 157]
[68 156]
[70 154]
[71 153]
[72 140]
[73 136]
[74 135]
[75 134]
[76 132]
[77 131]
[78 130]
[79 128]
[80 127]
[88 123]
[89 122]
[90 121]
[91 120]
[95 115]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
