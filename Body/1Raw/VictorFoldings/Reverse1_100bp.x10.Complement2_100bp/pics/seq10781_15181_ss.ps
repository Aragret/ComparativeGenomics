%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[68.47874451 580.43634033]
[61.14080429 593.55017090]
[51.97159958 605.45581055]
[41.16656876 615.89941406]
[28.95602798 624.65844727]
[15.60024261 631.54620361]
[1.38389397 636.41583252]
[-13.38999748 639.16351318]
[-28.40652466 639.73077393]
[-43.34560776 638.10546875]
[-57.88882446 634.32226562]
[-71.72618103 628.46173096]
[-84.56272888 620.64886475]
[-96.12486267 611.05023193]
[-106.16613770 599.87030029]
[-114.47251892 587.34741211]
[-120.86695099 573.74853516]
[-125.21314240 559.36352539]
[-127.41845703 544.49902344]
[-127.43587494 529.47180176]
[-125.26504517 514.60217285]
[-120.95221710 500.20712280]
[-114.58933258 486.59347534]
[-106.31201935 474.05139160]
[-96.29669952 462.84820557]
[-84.75685120 453.22274780]
[-71.93845367 445.38012695]
[-58.11472321 439.48754883]
[-43.58032227 435.67062378]
[-28.64504623 434.01068115]
[-13.62724495 434.54312134]
[1.15297830 437.25656128]
[5.97897577 423.05410767]
[2.74785066 408.51419067]
[14.51373482 397.93713379]
[19.33973312 383.73464966]
[24.16572952 369.53219604]
[28.99172783 355.32974243]
[33.81772614 341.12728882]
[38.64372253 326.92483521]
[29.91455078 314.88574219]
[29.94871902 299.83706665]
[38.94269943 287.55041504]
[53.61647415 282.86145020]
[58.44247055 268.65899658]
[63.26846695 254.45654297]
[67.66946411 240.11669922]
[71.64156342 225.65216064]
[75.61366272 211.18763733]
[78.05938721 196.38836670]
[78.95220184 181.41496277]
[79.84501648 166.44155884]
[80.73783112 151.46815491]
[72.13871002 163.75860596]
[59.32622528 171.55860901]
[44.45949936 173.55375671]
[30.04384804 169.40779114]
[18.50855446 159.81941223]
[11.79751968 146.40441895]
[11.04167175 131.42347717]
[16.36838531 117.40113831]
[26.88001251 106.70040131]
[40.80516052 101.12454224]
[55.79719925 101.61318970]
[69.32970428 108.08399200]
[79.12221527 119.44650269]
[83.52466583 133.78759766]
[87.28096771 119.26554108]
[91.03726959 104.74348450]
[89.84651184 96.77136993]
[94.95910645 90.03399658]
[98.93120575 75.56947327]
[102.57929230 61.01985168]
[105.90155029 46.39239120]
[109.22381592 31.76493073]
[112.54607391 17.13747215]
[111.39508057 8.07584667]
[116.02822113 2.31773591]
[119.56789398 -12.25863934]
[123.10756683 -26.83501434]
[126.64723206 -41.41138840]
[129.09295654 -56.21066284]
[130.43119812 -71.15084839]
[131.65817261 -86.10057831]
[132.77381897 -101.05903625]
[133.88946533 -116.01748657]
[134.55924988 -131.00251770]
[134.78257751 -146.00086975]
[135.00590515 -160.99920654]
[135.22923279 -175.99754333]
[135.45256042 -190.99588013]
[135.67588806 -205.99421692]
[135.56422424 -220.99378967]
[135.11761475 -235.98715210]
[134.67102051 -250.98049927]
[134.22441101 -265.97384644]
[133.77780151 -280.96719360]
[133.33119202 -295.96054077]
[119.36764526 -302.12350464]
[109.46745300 -313.74026489]
[105.59632111 -328.50430298]
[108.52285004 -343.48422241]
[117.66599274 -355.70574951]
[131.21035767 -362.74227905]
[146.46670532 -363.19671631]
[160.40588379 -356.97885132]
[170.26025391 -345.32318115]
[174.07321167 -330.54400635]
[171.08770752 -315.57571411]
[161.89651489 -303.39028931]
[148.32455444 -296.40716553]
[148.77114868 -281.41378784]
[149.21775818 -266.42044067]
[149.66436768 -251.42710876]
[150.11097717 -236.43374634]
[150.55757141 -221.44039917]
[152.85939026 -218.76943970]
[153.98185730 -214.85089111]
[153.35269165 -210.25115967]
[150.67422485 -205.77088928]
[150.45089722 -190.77255249]
[150.22756958 -175.77421570]
[150.00424194 -160.77587891]
[149.78091431 -145.77754211]
[149.55758667 -130.77919006]
[151.41101074 -128.67611694]
[152.54306030 -125.71214294]
[152.62164307 -122.15838623]
[151.41886902 -118.40100861]
[148.84793091 -114.90184021]
[147.73226929 -99.94338226]
[146.61662292 -84.98493195]
[149.25392151 -78.08084106]
[145.37138367 -69.81261444]
[144.03314209 -54.87242508]
[153.92774963 -66.14614868]
[168.10154724 -71.05567932]
[182.84954834 -68.31768036]
[194.31665039 -58.64785385]
[199.50538635 -44.57387161]
[197.05943298 -29.77463722]
[187.61814880 -18.11863708]
[173.64949036 -12.65272045]
[158.80479431 -14.80566502]
[146.96444702 -24.01469803]
[141.22361755 -37.87171936]
[137.68394470 -23.29534149]
[134.14427185 -8.71896744]
[130.60459900 5.85740852]
[127.17353058 20.45973015]
[123.85127258 35.08719254]
[120.52901459 49.71465302]
[117.20675659 64.34210968]
[118.76636505 67.50437927]
[118.87178040 71.57917786]
[117.11080170 75.87478638]
[113.39572906 79.54156494]
[109.42363739 94.00609589]
[105.55932617 108.49978638]
[101.80302429 123.02184296]
[98.04673004 137.54389954]
[95.71124268 152.36097717]
[94.81842041 167.33438110]
[93.92560577 182.30778503]
[93.03279114 197.28118896]
[101.40767670 184.83685303]
[113.86464691 176.48078918]
[128.55580139 173.45257568]
[143.30177307 176.20140076]
[155.91510010 184.31951904]
[164.52467346 196.60266113]
[167.85330200 211.22866821]
[165.40721130 226.02787781]
[157.54927063 238.80491638]
[145.44514465 247.66438293]
[130.89041138 251.29202271]
[116.04418182 249.14970398]
[103.10881042 241.55522156]
[94.00317383 229.63517761]
[90.07818604 215.15974426]
[86.10608673 229.62426758]
[82.13398743 244.08879089]
[83.38065338 248.24809265]
[83.25187683 252.19117737]
[81.98451996 255.51220703]
[79.92293549 257.92395020]
[77.47092438 259.28253174]
[72.64492798 273.48498535]
[67.81893158 287.68743896]
[76.59809875 300.34573364]
[76.24442291 315.56835938]
[67.10305023 327.52243042]
[52.84617996 331.75085449]
[48.02017975 345.95330811]
[43.19418335 360.15576172]
[38.36818695 374.35821533]
[33.54218674 388.56066895]
[28.71619034 402.76312256]
[31.60212898 418.31887817]
[20.18143082 427.88009644]
[15.35543346 442.08255005]
[28.72897339 448.93576050]
[40.96210861 457.66320801]
[51.79409027 468.07885742]
[60.99403381 479.96072388]
[68.36584473 493.05557251]
[73.75238037 507.08419800]
[77.03884125 521.74768066]
[78.15517426 536.73339844]
[77.07757568 551.72192383]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 201]
[33 200]
[35 198]
[36 197]
[37 196]
[38 195]
[39 194]
[40 193]
[44 189]
[45 188]
[46 187]
[47 182]
[48 181]
[49 180]
[50 165]
[51 164]
[52 163]
[53 162]
[67 161]
[68 160]
[69 159]
[71 158]
[72 157]
[73 153]
[74 152]
[75 151]
[76 150]
[78 149]
[79 148]
[80 147]
[81 146]
[82 135]
[83 134]
[84 132]
[85 131]
[86 130]
[87 125]
[88 124]
[89 123]
[90 122]
[91 121]
[92 120]
[93 116]
[94 115]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
