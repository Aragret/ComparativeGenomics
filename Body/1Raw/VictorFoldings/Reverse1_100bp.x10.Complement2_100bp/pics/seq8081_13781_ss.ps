%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[50.81829071 762.54864502]
[39.36434555 772.24896240]
[27.10854340 780.91412354]
[14.14415264 788.47808838]
[0.56984639 794.88336182]
[-13.51106644 800.08117676]
[-27.99141884 804.03198242]
[-42.76100540 806.70568848]
[-57.70742035 808.08190918]
[-72.71690369 808.15026855]
[-87.67523193 806.91015625]
[-102.46855927 804.37109375]
[-116.98428345 800.55230713]
[-131.11195374 795.48297119]
[-144.74401855 789.20153809]
[-157.77676392 781.75592041]
[-170.11096191 773.20275879]
[-181.65277100 763.60711670]
[-192.31433105 753.04211426]
[-202.01451111 741.58801270]
[-210.67947388 729.33209229]
[-218.24328613 716.36761475]
[-224.64836121 702.79321289]
[-229.84597778 688.71221924]
[-233.79656982 674.23181152]
[-236.47006226 659.46215820]
[-237.84611511 644.51574707]
[-237.91424561 629.50622559]
[-236.67395020 614.54791260]
[-234.13464355 599.75463867]
[-230.31568909 585.23895264]
[-225.24612427 571.11138916]
[-218.96452332 557.47937012]
[-211.51873779 544.44677734]
[-202.96539307 532.11267090]
[-193.36959839 520.57104492]
[-182.80438232 509.90960693]
[-171.35017395 500.20959473]
[-159.09413147 491.54479980]
[-146.12951660 483.98117065]
[-132.55503845 477.57626343]
[-118.47397614 472.37884521]
[-103.99351501 468.42846680]
[-89.22385406 465.75518799]
[-74.27739716 464.37933350]
[-59.26791000 464.31143188]
[-44.30961990 465.55194092]
[-29.51636696 468.09143066]
[-15.00074387 471.91061401]
[-0.87322307 476.98037720]
[5.40413761 463.35705566]
[11.68149853 449.73373413]
[17.95885849 436.11041260]
[24.23621941 422.48709106]
[22.53528595 407.68994141]
[35.33770752 398.39431763]
[41.61507034 384.77099609]
[47.89242935 371.14767456]
[52.29342651 356.80783081]
[54.73915482 342.00857544]
[57.18488312 327.20928955]
[59.63061142 312.41003418]
[62.07633972 297.61074829]
[56.51773834 283.79223633]
[66.40159607 271.43829346]
[68.84732819 256.63903809]
[71.29305267 241.83975220]
[73.73877716 227.04048157]
[66.68359375 210.97215271]
[78.48562622 196.83732605]
[80.71074677 182.00328064]
[82.93586731 167.16923523]
[85.16098022 152.33518982]
[77.86734009 136.37368774]
[89.45762634 122.06470490]
[91.46163940 107.19918060]
[93.35492706 92.31914520]
[95.13739777 77.42543030]
[89.09481049 62.80360413]
[98.28968048 51.08594513]
[99.40532684 36.12749100]
[99.85193634 21.13414001]
[100.29853821 6.14078999]
[100.41020966 -8.85879421]
[100.18688202 -23.85713196]
[99.96355438 -38.85546875]
[99.74022675 -53.85380554]
[99.51689911 -68.85214233]
[99.29357147 -83.85047913]
[99.07024384 -98.84881592]
[98.84691620 -113.84715271]
[90.15228271 -123.37428284]
[90.27503967 -135.87103271]
[98.60399628 -144.64343262]
[98.60399628 -159.64343262]
[90.86669922 -173.44360352]
[98.60399628 -186.17088318]
[90.86669922 -199.97105408]
[98.60399628 -212.69831848]
[98.60399628 -227.69831848]
[85.26287079 -235.30818176]
[77.52790070 -248.57714844]
[77.47975922 -263.93597412]
[85.13139343 -277.25317383]
[98.42455292 -284.94653320]
[113.78344727 -284.94653320]
[127.07660675 -277.25317383]
[134.72824097 -263.93597412]
[134.68009949 -248.57714844]
[126.94512939 -235.30818176]
[113.60399628 -227.69831848]
[113.60399628 -212.69831848]
[121.34130096 -199.97105408]
[113.60399628 -186.17088318]
[121.34130096 -173.44360352]
[113.60399628 -159.64343262]
[113.60399628 -144.64343262]
[123.18469238 -129.94046021]
[113.84525299 -114.07048035]
[114.06858063 -99.07214355]
[114.29190826 -84.07380676]
[114.51523590 -69.07546997]
[114.73856354 -54.07713318]
[114.96189117 -39.07879639]
[115.18521881 -24.08045959]
[115.40854645 -9.08212185]
[117.67033386 -6.37719202]
[118.73433685 -2.44235492]
[118.03676605 2.14749122]
[115.29189301 6.58739614]
[114.84528351 21.58074570]
[114.39868164 36.57409668]
[126.03060913 27.10318375]
[140.96598816 28.49401474]
[150.64915466 39.94985580]
[149.53314209 54.90828323]
[138.25726318 64.80043030]
[123.28085327 63.95962143]
[113.18339539 52.86840820]
[119.35347748 66.42493439]
[110.03111267 79.20789337]
[108.24864960 94.10160828]
[110.49381256 101.84317017]
[106.32716370 109.20319366]
[104.32315063 124.06871796]
[111.50832367 134.78021240]
[109.53314209 147.12049866]
[99.99502563 154.56031799]
[97.76990509 169.39434814]
[95.54479218 184.22839355]
[93.31967163 199.06243896]
[100.34457397 209.87973022]
[98.18587494 222.18922424]
[88.53804779 229.48620605]
[86.09232330 244.28547668]
[83.64659882 259.08474731]
[81.20086670 273.88403320]
[86.58453369 288.76107788]
[76.87561035 300.05648804]
[74.42987823 314.85574341]
[71.98415375 329.65502930]
[69.53842926 344.45428467]
[67.09269714 359.25357056]
[76.16626740 347.30908203]
[88.45082092 338.70156860]
[102.77548218 334.25137329]
[117.77490997 334.38269043]
[132.01945496 339.08300781]
[144.15141296 347.90432739]
[153.01445007 360.00582886]
[157.76379395 374.23410034]
[157.94677734 389.23300171]
[153.54594421 403.57287598]
[144.98075867 415.88702393]
[133.06761169 425.00167847]
[118.94197083 430.04809570]
[103.95021820 430.54528809]
[89.52125549 426.44586182]
[77.03037262 418.14059448]
[67.66811371 406.42102051]
[62.32683563 392.40423584]
[61.51574707 377.42504883]
[55.23838425 391.04837036]
[48.96102524 404.67169189]
[50.21295929 420.44326782]
[37.85953522 428.76446533]
[31.58217430 442.38778687]
[25.30481529 456.01110840]
[19.02745438 469.63439941]
[12.75009346 483.25772095]
[25.78303528 490.70297241]
[38.11748123 499.25579834]
[49.65955353 508.85110474]
[60.32141495 519.41589355]
[70.02191162 530.86968994]
[78.68722534 543.12536621]
[86.25139618 556.08966064]
[92.65686035 569.66387939]
[97.85487366 583.74468994]
[101.80586243 598.22497559]
[104.47976685 612.99456787]
[105.85623932 627.94091797]
[105.92478943 642.95043945]
[104.68491364 657.90875244]
[102.14603424 672.70214844]
[98.32747650 687.21789551]
[93.25830078 701.34564209]
[86.97709656 714.97778320]
[79.53166199 728.01062012]
[70.97866821 740.34497070]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 190]
[51 189]
[52 188]
[53 187]
[54 186]
[56 184]
[57 183]
[58 182]
[59 163]
[60 162]
[61 161]
[62 160]
[63 159]
[65 157]
[66 156]
[67 155]
[68 154]
[70 151]
[71 150]
[72 149]
[73 148]
[75 145]
[76 144]
[77 142]
[78 141]
[80 139]
[81 132]
[82 131]
[83 130]
[84 126]
[85 125]
[86 124]
[87 123]
[88 122]
[89 121]
[90 120]
[91 119]
[94 117]
[95 116]
[97 114]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
