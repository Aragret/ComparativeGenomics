%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUACAAACCCAGACUCAAAUAUAUAGUGUCACUCUUAAGAUACUACCUGGUACAUUGCUUGUUACGAUGUCCCUACUUAUAAUACCUCUUCAUCAGAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[52.66042328 516.11981201]
[47.35906219 502.03503418]
[44.90767288 487.18655396]
[45.40048599 472.14517212]
[48.81855011 457.48901367]
[55.03049469 443.78143311]
[63.79754257 431.54928589]
[74.78271484 421.26278687]
[87.56376648 413.31729126]
[101.64942932 408.01818848]
[99.20370483 393.21893311]
[96.75797272 378.41964722]
[94.31224823 363.62039185]
[91.86651611 348.82110596]
[76.37006378 339.07559204]
[72.85800934 320.78408813]
[84.01940918 305.47601318]
[81.13414001 290.75610352]
[78.24886322 276.03622437]
[75.36359406 261.31634521]
[71.38903046 275.78018188]
[63.98673630 288.82647705]
[53.60935211 299.65744019]
[40.89146423 307.61077881]
[26.61077309 312.20010376]
[11.64055061 313.14477539]
[-3.10376954 310.38705444]
[-16.72056580 304.09558105]
[-28.37716675 294.65502930]
[-37.36076355 282.64276123]
[-43.12201309 268.79327393]
[-45.30860519 253.95350647]
[-43.78683090 239.03089905]
[-38.64974976 224.93797302]
[-30.21149254 212.53652954]
[-18.98806572 202.58491516]
[-5.66578341 195.69166565]
[8.94069004 192.27832031]
[23.93816376 192.55360413]
[38.40953827 196.50067139]
[51.46987915 203.87817383]
[62.32054520 214.23495483]
[70.29801178 226.93771362]
[74.91445923 241.20968628]
[77.13957977 226.37564087]
[79.36470032 211.54159546]
[81.58981323 196.70755005]
[83.81493378 181.87350464]
[86.04004669 167.03947449]
[88.26516724 152.20542908]
[90.49028015 137.37138367]
[91.82851410 122.43119812]
[80.24058533 113.39765930]
[76.13734436 99.28920746]
[81.07305908 85.44999695]
[93.17813110 77.12220001]
[93.62474060 62.12884903]
[94.07134247 47.13549805]
[94.51795197 32.14214706]
[80.23007202 28.96264076]
[66.77684784 23.20567513]
[54.61868286 15.06992912]
[44.17137527 4.83546114]
[35.79185867 -7.14593077]
[29.76603889 -20.46279907]
[26.29902458 -34.65817642]
[25.50814247 -49.24525833]
[27.41897964 -63.72409058]
[31.96454620 -77.59871674]
[38.98763275 -90.39416504]
[48.24623871 -101.67268372]
[59.42191696 -111.04874420]
[72.13072205 -118.20222473]
[85.93641663 -122.88931274]
[100.36540222 -124.95082855]
[101.03518677 -139.93586731]
[101.70497131 -154.92089844]
[102.03994751 -169.91716003]
[102.03994751 -184.91716003]
[102.03994751 -199.91716003]
[102.03994751 -214.91716003]
[102.03994751 -229.91716003]
[102.03994751 -244.91716003]
[101.81661987 -259.91549683]
[101.37001801 -274.90884399]
[100.92340851 -289.90219116]
[100.47680664 -304.89553833]
[99.69548035 -319.87518311]
[98.57983398 -334.83364868]
[97.46418762 -349.79208374]
[96.34853363 -364.75054932]
[95.23288727 -379.70901489]
[94.11724091 -394.66744995]
[93.00159454 -409.62591553]
[78.34870148 -413.44317627]
[65.73059082 -421.81347656]
[56.51596832 -433.82885742]
[51.70438004 -448.18600464]
[51.81774521 -463.32751465]
[56.84376907 -477.61102295]
[66.23725891 -489.48709106]
[78.97928619 -497.66751099]
[93.68769073 -501.26495361]
[108.76701355 -499.88916016]
[122.58156586 -493.68942261]
[133.63284302 -483.33819580]
[140.72207642 -469.95828247]
[143.08030701 -455.00109863]
[140.45170593 -440.08905029]
[133.12141418 -426.83969116]
[121.88455963 -416.69021606]
[107.96004486 -410.74154663]
[109.07569122 -395.78311157]
[110.19134521 -380.82464600]
[111.30699158 -365.86621094]
[112.42263794 -350.90774536]
[113.53828430 -335.94927979]
[114.65393829 -320.99084473]
[117.07271576 -318.42532349]
[118.36904144 -314.56079102]
[117.94589233 -309.93756104]
[115.47015381 -305.34216309]
[115.91676331 -290.34881592]
[116.36336517 -275.35546875]
[116.80997467 -260.36212158]
[119.61009216 -256.49319458]
[120.00951385 -250.82421875]
[117.03994751 -244.91716003]
[117.03994751 -229.91716003]
[117.03994751 -214.91716003]
[117.03994751 -199.91716003]
[117.03994751 -184.91716003]
[117.03994751 -169.91716003]
[119.26121521 -167.17886353]
[120.26651764 -163.22862244]
[119.50068665 -158.64965820]
[116.69001007 -154.25111389]
[116.02022552 -139.26608276]
[115.35044098 -124.28104401]
[130.31111145 -120.67665100]
[144.28918457 -114.22920227]
[156.74998474 -105.18333435]
[167.21646118 -93.88311768]
[175.28750610 -80.75895691]
[180.65328979 -66.31123352]
[183.10714722 -51.09117126]
[182.55357361 -35.67986679]
[179.01190186 -20.66604996]
[172.61566162 -6.62363482]
[163.60751343 5.91024494]
[152.33009338 16.45577049]
[139.21295166 24.60880661]
[124.75615692 30.05639267]
[109.51129913 32.58875656]
[109.06469727 47.58210373]
[108.61808777 62.57545471]
[108.17148590 77.56880188]
[119.75941467 86.60234070]
[123.86265564 100.71079254]
[118.92694092 114.55000305]
[106.82186890 122.87779999]
[117.02870178 111.88596344]
[131.72436523 108.87972260]
[145.42773438 114.98033905]
[153.02780151 127.91242981]
[151.68992615 142.85264587]
[141.91310120 154.22865295]
[127.34383392 157.79748535]
[113.41611481 152.22805786]
[105.32432556 139.59649658]
[103.09921265 154.43054199]
[100.87409210 169.26458740]
[98.64897156 184.09863281]
[96.42385864 198.93267822]
[94.19873810 213.76672363]
[91.97362518 228.60075378]
[89.74850464 243.43479919]
[90.08348083 258.43106079]
[92.96875763 273.15093994]
[95.85402679 287.87084961]
[98.73930359 302.59072876]
[109.70801544 307.17590332]
[117.02650452 316.39224243]
[118.96725464 327.87820435]
[115.16217804 338.76107788]
[106.66578674 346.37539673]
[109.11151886 361.17465210]
[111.55724335 375.97393799]
[114.00297546 390.77319336]
[116.44869995 405.57247925]
[131.49032593 406.05798340]
[146.14814758 409.46893311]
[159.85874939 415.67422485]
[172.09513855 424.43533325]
[182.38697815 435.41549683]
[190.33868408 448.19268799]
[195.64460754 462.27578735]
[198.10079956 477.12344360]
[197.61285400 492.16500854]
[194.19953918 506.82226562]
[187.99203491 520.53186035]
[179.22894287 532.76684570]
[168.24710083 543.05688477]
[155.46862793 551.00653076]
[141.38467407 556.31018066]
[126.53660583 558.76397705]
[111.49514008 558.27355957]
[96.83842468 554.85791016]
[83.12982941 548.64819336]
[70.89627838 539.88311768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 190]
[11 189]
[12 188]
[13 187]
[14 186]
[17 181]
[18 180]
[19 179]
[20 178]
[44 177]
[45 176]
[46 175]
[47 174]
[48 173]
[49 172]
[50 171]
[51 170]
[52 161]
[56 157]
[57 156]
[58 155]
[59 154]
[75 139]
[76 138]
[77 137]
[78 133]
[79 132]
[80 131]
[81 130]
[82 129]
[83 128]
[84 125]
[85 124]
[86 123]
[87 122]
[88 118]
[89 117]
[90 116]
[91 115]
[92 114]
[93 113]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
