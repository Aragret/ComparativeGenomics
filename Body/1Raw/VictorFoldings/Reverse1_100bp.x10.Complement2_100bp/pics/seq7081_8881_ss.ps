%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[95.07530212 666.14239502]
[81.07092285 671.72277832]
[66.13791656 673.78887939]
[51.14446259 672.22052002]
[36.96226120 667.10888672]
[24.41584396 658.75122070]
[14.23464584 647.63336182]
[7.01058960 634.40173340]
[3.16367102 619.82556152]
[2.91754484 604.75231934]
[6.28652048 590.05828857]
[13.07473087 576.59783936]
[22.88751793 565.15350342]
[35.15437698 556.39068604]
[49.16213226 550.81878662]
[64.09638977 548.76171875]
[65.65691376 533.84313965]
[59.28567886 520.37994385]
[68.41669464 507.45962524]
[69.97721863 492.54101562]
[71.53774261 477.62240601]
[73.09825897 462.70382690]
[74.65878296 447.78521729]
[76.21930695 432.86660767]
[77.77983093 417.94799805]
[78.44961548 402.96295166]
[78.22628784 387.96463013]
[78.00296021 372.96627808]
[77.77963257 357.96795654]
[67.36903381 350.37527466]
[63.16971207 337.98785400]
[66.92698669 325.25625610]
[77.48405457 316.89190674]
[77.48405457 301.89190674]
[77.48405457 286.89190674]
[77.48405457 271.89190674]
[75.26278687 269.15359497]
[74.25749207 265.20333862]
[75.02332306 260.62438965]
[77.83399200 256.22586060]
[78.50377655 241.24081421]
[79.17356873 226.25576782]
[79.84335327 211.27073669]
[67.18098450 219.31214905]
[52.95007324 214.57072449]
[47.64111328 200.54165649]
[55.16767502 187.56663513]
[69.98145294 185.21038818]
[81.16164398 195.20831299]
[82.94411469 180.31460571]
[71.91252136 170.34254456]
[68.83176422 155.61253357]
[75.08844757 141.73063660]
[88.47425079 134.10655212]
[90.25671387 119.21283722]
[92.03917694 104.31912231]
[90.10931396 100.98026276]
[89.66053772 96.80695343]
[91.03252411 92.47975159]
[94.24825287 88.80566406]
[96.69397736 74.00639343]
[99.13970184 59.20712280]
[93.75604248 44.33006668]
[103.46496582 33.03466797]
[105.91069031 18.23539543]
[108.35642242 3.43612432]
[110.80214691 -11.36314678]
[109.11383820 -20.34019661]
[113.39603424 -26.36386871]
[116.06182861 -41.12508392]
[118.72762299 -55.88630295]
[117.17315674 -64.88749695]
[121.54456329 -70.84674072]
[124.42983246 -85.56663513]
[127.31510925 -100.28652191]
[130.20037842 -115.00641632]
[132.97598267 -129.74737549]
[135.09060669 -144.59757996]
[136.65113831 -159.51617432]
[138.21165466 -174.43478394]
[139.77218628 -189.35339355]
[140.66499329 -204.32679749]
[140.88832092 -219.32513428]
[141.11164856 -234.32347107]
[141.33497620 -249.32180786]
[141.55830383 -264.32015991]
[126.73990631 -266.83319092]
[112.47882843 -271.57891846]
[99.10935974 -278.44607544]
[86.94490814 -287.27368164]
[76.27062988 -297.85479736]
[67.33673859 -309.94140625]
[60.35265732 -323.25018311]
[55.48210526 -337.46911621]
[52.83925629 -352.26492310]
[52.48606110 -367.29074097]
[54.43080139 -382.19439697]
[58.62788391 -396.62646484]
[64.97892761 -410.24868774]
[73.33506012 -422.74169922]
[83.50038910 -433.81268311]
[95.23663330 -443.20208740]
[108.26867676 -450.68981934]
[122.29103088 -456.10037231]
[136.97499084 -459.30691528]
[151.97633362 -460.23425293]
[166.94342041 -458.86068726]
[181.52540588 -455.21835327]
[195.38044739 -449.39270020]
[208.18376160 -441.52026367]
[219.63525391 -431.78561401]
[229.46644592 -420.41687012]
[237.44691467 -407.68060303]
[243.38955688 -393.87533569]
[247.15509033 -379.32467651]
[248.65522766 -364.36975098]
[247.85481262 -349.36108398]
[244.77261353 -334.65054321]
[239.48086548 -320.58291626]
[232.10363770 -307.48800659]
[222.81384277 -295.67276001]
[211.82925415 -285.41412354]
[199.40736389 -276.95263672]
[185.83935547 -270.48657227]
[171.44329834 -266.16757202]
[156.55664062 -264.09683228]
[156.33331299 -249.09848022]
[156.10998535 -234.10014343]
[155.88665771 -219.10180664]
[155.66333008 -204.10346985]
[167.15296936 -213.74650574]
[182.10740662 -212.57820129]
[191.96005249 -201.26779175]
[191.06687927 -186.29441833]
[179.93952942 -176.23548889]
[164.95225525 -176.85322571]
[154.69078064 -187.79286194]
[153.13026428 -172.87426758]
[151.56974792 -157.95565796]
[150.00921631 -143.03704834]
[163.12776184 -150.31054688]
[177.05123901 -144.73048401]
[181.51576233 -130.41027832]
[173.23025513 -117.90626526]
[158.30249023 -116.43592834]
[147.73721313 -127.08158112]
[149.64193726 -119.94058990]
[144.92027283 -112.12114716]
[142.03500366 -97.40125275]
[139.14971924 -82.68135834]
[136.26445007 -67.96147156]
[133.48884583 -53.22050858]
[130.82304382 -38.45928955]
[128.15725708 -23.69807243]
[125.60141754 -8.91741943]
[123.15569305 5.88185167]
[120.70996094 20.68112183]
[118.26423645 35.48039246]
[123.82283020 49.29890442]
[113.93897247 61.65284729]
[111.49324799 76.45211792]
[109.04752350 91.25138855]
[106.93289948 106.10158539]
[105.15042877 120.99530792]
[103.36796570 135.88902283]
[114.57661438 146.45654297]
[117.38076782 161.42283630]
[110.91106415 175.00984192]
[97.83782959 182.09706116]
[96.05536652 196.99078369]
[94.82839203 211.94052124]
[94.15860748 226.92555237]
[93.48881531 241.91059875]
[92.81903076 256.89562988]
[92.48405457 271.89190674]
[92.48405457 286.89190674]
[92.48405457 301.89190674]
[92.48405457 316.89190674]
[105.07820129 329.03302002]
[104.99652863 346.18841553]
[92.77796936 357.74462891]
[93.00129700 372.74295044]
[93.22462463 387.74130249]
[93.44795227 402.73962402]
[103.15379333 391.30300903]
[117.70056152 387.64355469]
[131.66267395 393.12619019]
[139.83261108 405.70602417]
[139.16317749 420.69110107]
[129.90406799 432.49230957]
[115.50869751 436.70812988]
[101.34617615 431.76617432]
[92.69843292 419.50851440]
[91.13791656 434.42712402]
[89.57739258 449.34573364]
[88.01686859 464.26434326]
[86.45634460 479.18295288]
[84.89582062 494.10156250]
[83.33529663 509.02014160]
[89.59491730 523.55041504]
[80.57551575 535.40362549]
[79.01499939 550.32226562]
[93.20029449 555.42529297]
[105.75177765 563.77532959]
[115.93971252 574.88702393]
[123.17179108 588.11425781]
[127.02754211 602.68811035]
[127.28280640 617.76123047]
[123.92274475 632.45727539]
[117.14269257 645.92181396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 202]
[17 201]
[19 199]
[20 198]
[21 197]
[22 196]
[23 195]
[24 194]
[25 193]
[26 184]
[27 183]
[28 182]
[29 181]
[33 178]
[34 177]
[35 176]
[36 175]
[40 174]
[41 173]
[42 172]
[43 171]
[49 170]
[50 169]
[54 165]
[55 164]
[56 163]
[60 162]
[61 161]
[62 160]
[64 158]
[65 157]
[66 156]
[67 155]
[69 154]
[70 153]
[71 152]
[73 151]
[74 150]
[75 149]
[76 148]
[77 146]
[78 140]
[79 139]
[80 138]
[81 137]
[82 130]
[83 129]
[84 128]
[85 127]
[86 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
