%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[-66.77043915 418.57458496]
[-62.68967438 433.02487183]
[-60.22335434 447.83636475]
[-59.40142059 462.82928467]
[-60.23385239 477.82162476]
[-62.71053696 492.63137817]
[-66.80142212 507.07879639]
[-72.45683289 520.98852539]
[-79.60813141 534.19158936]
[-88.16849518 546.52789307]
[-98.03401947 557.84753418]
[-109.08494568 568.01318359]
[-121.18711853 576.90142822]
[-134.19363403 584.40429688]
[-147.94659424 590.43084717]
[-162.27906799 594.90783691]
[-177.01707458 597.78094482]
[-191.98167419 599.01525879]
[-206.99125671 598.59582520]
[-221.86358643 596.52770996]
[-236.41813660 592.83605957]
[-250.47822571 587.56567383]
[-263.87319946 580.78057861]
[-276.44039917 572.56298828]
[-288.02734375 563.01281738]
[-298.49331665 552.24591064]
[-307.71130371 540.39294434]
[-315.56942749 527.59790039]
[-321.97222900 514.01605225]
[-326.84204102 499.81222534]
[-330.11972046 485.15890503]
[-331.76550293 470.23394775]
[-331.75939941 455.21850586]
[-330.10147095 440.29489136]
[-326.81185913 425.64422607]
[-321.93051147 411.44439697]
[-315.51663208 397.86773682]
[-307.64813232 385.07907104]
[-298.42050171 373.23367310]
[-287.94577026 362.47528076]
[-276.35107422 352.93450928]
[-263.77716064 344.72717285]
[-250.37670898 337.95291138]
[-236.31233215 332.69396973]
[-221.75477600 329.01419067]
[-206.88076782 326.95819092]
[-191.87086487 326.55096436]
[-176.90725708 327.79745483]
[-162.17160034 330.68255615]
[-147.84277344 335.17120361]
[-134.09471130 341.20889282]
[-121.09430695 348.72241211]
[-108.99936676 357.62048340]
[-98.83582306 346.58859253]
[-88.67227173 335.55673218]
[-78.50872803 324.52484131]
[-68.34518433 313.49295044]
[-58.18163300 302.46109009]
[-48.60651398 290.91479492]
[-39.64581680 278.88540649]
[-30.68512154 266.85601807]
[-21.72442627 254.82664490]
[-12.76373005 242.79727173]
[-3.80303454 230.76789856]
[5.06786108 218.67214966]
[13.84846401 206.51068115]
[22.62906647 194.34922791]
[31.40966988 182.18777466]
[32.58675766 167.33975220]
[46.93813324 160.68028259]
[48.11521912 145.83226013]
[62.46659851 139.17279053]
[71.24720001 127.01134491]
[72.42428589 112.16332245]
[86.77566528 105.50385284]
[88.38666534 91.61514282]
[101.06288147 85.71554565]
[102.86801147 69.99765015]
[116.59133911 64.20805359]
[125.37194824 52.04660034]
[126.42216492 45.51907349]
[130.06448364 41.15667343]
[134.59945679 39.65902328]
[143.73826599 27.76438904]
[152.87707520 15.86975574]
[155.14938354 0.21258000]
[169.03900146 -5.16585779]
[178.17781067 -17.06049156]
[186.68463135 -29.41499901]
[194.53639221 -42.19584274]
[202.38815308 -54.97668457]
[210.23989868 -67.75753021]
[210.87098694 -83.56613922]
[224.12570190 -90.36039734]
[225.95133972 -99.31053162]
[232.19070435 -103.27185059]
[240.23187256 -115.93437958]
[248.27305603 -128.59690857]
[256.31420898 -141.25942993]
[244.69824219 -150.77920532]
[234.31445312 -161.62976074]
[225.31430054 -173.65284729]
[217.82904053 -186.67314148]
[211.96780396 -200.50077820]
[207.81610107 -214.93409729]
[205.43444824 -229.76261902]
[204.85757446 -244.77009583]
[206.09390259 -259.73770142]
[209.12541199 -274.44711304]
[213.90788269 -288.68386841]
[220.37156677 -302.24035645]
[228.42222595 -314.91885376]
[237.94244385 -326.53448486]
[248.79338074 -336.91787720]
[260.81680298 -345.91757202]
[273.83737183 -353.40234375]
[287.66522217 -359.26306152]
[302.09869385 -363.41421509]
[316.92730713 -365.79531860]
[331.93481445 -366.37164307]
[346.90237427 -365.13473511]
[361.61169434 -362.10269165]
[375.84826660 -357.31967163]
[389.40451050 -350.85549927]
[402.08270264 -342.80435181]
[413.69796753 -333.28372192]
[424.08093262 -322.43240356]
[433.08020020 -310.40863037]
[440.56448364 -297.38775635]
[446.42468262 -283.55969238]
[450.57531738 -269.12606812]
[452.95587158 -254.29737854]
[453.53161621 -239.28984070]
[452.29415894 -224.32234192]
[449.26153564 -209.61314392]
[444.47802734 -195.37673950]
[438.01330566 -181.82073975]
[429.96170044 -169.14285278]
[420.44064331 -157.52792358]
[409.58892822 -147.14537048]
[397.56481934 -138.14656067]
[384.54367065 -130.66275024]
[370.71539307 -124.80307770]
[356.28161621 -120.65298462]
[341.45281982 -118.27299500]
[326.44528198 -117.69780731]
[311.47781372 -118.93582153]
[296.76873779 -121.96897888]
[282.53250122 -126.75304413]
[268.97674561 -133.21826172]
[260.93557739 -120.55573273]
[252.89440918 -107.89320374]
[244.85322571 -95.23068237]
[236.90653992 -82.50864410]
[236.83706665 -67.61420441]
[223.02075195 -59.90577316]
[215.16899109 -47.12493134]
[207.31723022 -34.34408569]
[199.46548462 -21.56324387]
[214.03428650 -25.13394928]
[227.54495239 -18.61766624]
[233.82057190 -4.99355221]
[229.99203491 9.50963020]
[217.80969238 18.26122284]
[202.84313965 17.26011276]
[191.93487549 6.96399736]
[190.07244873 -7.92168856]
[180.93363953 3.97294450]
[179.31498718 18.77933693]
[164.77169800 25.00855827]
[155.63290405 36.90319061]
[146.49409485 48.79782486]
[137.53340149 60.82720184]
[128.75279236 72.98865509]
[127.57571411 87.83667755]
[113.22433472 94.49614716]
[111.61333466 108.38485718]
[98.93711853 114.28445435]
[97.13198853 130.00234985]
[83.40866089 135.79194641]
[74.62805176 147.95339966]
[72.82292175 163.67129517]
[59.09959030 169.46089172]
[57.29445648 185.17878723]
[43.57112503 190.96838379]
[34.79052353 203.12983704]
[26.00992012 215.29129028]
[17.22931671 227.45274353]
[14.74306011 236.24230957]
[8.22634315 239.72859192]
[-0.73435283 251.75796509]
[-9.69504833 263.78735352]
[-18.65574455 275.81671143]
[-27.61644173 287.84609985]
[-36.57713699 299.87548828]
[-21.74786568 297.61877441]
[-8.87243080 305.31445312]
[-3.83730912 319.44412231]
[-8.94449043 333.54788208]
[-21.85903931 341.17773438]
[-36.67659760 338.84536743]
[-46.62277985 327.61712646]
[-47.14975739 312.62463379]
[-57.31330490 323.65652466]
[-67.47685242 334.68838501]
[-77.64039612 345.72027588]
[-87.80394745 356.75213623]
[-97.96749115 367.78402710]
[-88.10989380 379.11056519]
[-79.55816650 391.45281982]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 208]
[54 207]
[55 206]
[56 205]
[57 204]
[58 203]
[59 195]
[60 194]
[61 193]
[62 192]
[63 191]
[64 190]
[65 188]
[66 187]
[67 186]
[68 185]
[70 183]
[72 181]
[73 180]
[75 178]
[77 176]
[79 174]
[80 173]
[83 172]
[84 171]
[85 170]
[87 168]
[88 167]
[89 159]
[90 158]
[91 157]
[92 156]
[94 154]
[96 153]
[97 152]
[98 151]
[99 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
