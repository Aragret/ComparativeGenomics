%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[85.23554993 539.11236572]
[83.58093262 524.18194580]
[83.88933563 509.16333008]
[86.15548706 494.31341553]
[90.34061432 479.88638306]
[96.37309265 466.12902832]
[104.14971161 453.27682495]
[113.53739929 441.54965210]
[124.37551117 431.14822388]
[136.47860718 422.25045776]
[149.63957214 415.00863647]
[144.18420410 401.03582764]
[138.72885132 387.06301880]
[133.27349854 373.09024048]
[127.71427155 359.15841675]
[122.05148315 345.26840210]
[116.38869476 331.37838745]
[110.72590637 317.48834229]
[99.70153046 312.50942993]
[94.87009430 300.98376465]
[99.32466888 288.87924194]
[93.86930847 274.90643311]
[92.58780670 289.85159302]
[88.05654144 304.15081787]
[80.49658966 317.10638428]
[70.27682495 328.08621216]
[57.89589691 336.55453491]
[43.95788956 342.09817505]
[29.14287567 344.44665527]
[14.17370987 343.48538208]
[-0.21922895 339.26126099]
[-13.33367729 331.98037720]
[-24.52975082 321.99798584]
[-33.26116943 309.80117798]
[-39.10190964 295.98501587]
[-41.76698685 281.22369385]
[-41.12636566 266.23736572]
[-37.21130371 251.75730896]
[-30.21282387 238.49000549]
[-20.47240257 227.08280945]
[-8.46529102 218.09230042]
[5.22265434 211.95713806]
[19.92356873 208.97668457]
[34.92016220 209.29635620]
[49.48071671 212.90054321]
[62.89479446 219.61341858]
[74.50788879 229.10740662]
[83.75336456 240.91931152]
[90.17797089 254.46653748]
[90.40129852 239.46820068]
[90.62462616 224.46986389]
[90.84795380 209.47152710]
[91.07128143 194.47319031]
[83.52433014 181.63212585]
[91.46623993 167.94868469]
[91.68956757 152.95034790]
[91.91289520 137.95201111]
[92.13622284 122.95367432]
[92.35955048 107.95533752]
[79.94222260 116.37020111]
[65.57644653 112.05458069]
[59.85214615 98.18978882]
[66.98905182 84.99643707]
[81.72611237 82.20017242]
[93.19902802 91.86078644]
[94.53726196 76.92060852]
[81.50716400 69.04799652]
[73.22109222 56.35044098]
[71.27767944 41.37568283]
[76.00928497 27.10077858]
[86.42656708 16.34021950]
[100.42483521 11.19105244]
[101.76306915 -3.74913263]
[103.10131073 -18.68931770]
[104.43954468 -33.62950134]
[102.47353363 -37.50103760]
[101.89949799 -41.40423965]
[102.55646515 -44.89763260]
[104.15662384 -47.63735962]
[106.32814789 -49.41010284]
[108.55326843 -64.24414825]
[110.77838135 -79.07819366]
[108.95661163 -88.02910614]
[113.14864349 -94.11586761]
[115.59436798 -108.91513824]
[118.04010010 -123.71440887]
[120.26521301 -138.54844666]
[122.26922607 -153.41398621]
[124.27323914 -168.27951050]
[126.27725220 -183.14503479]
[128.28126526 -198.01057434]
[113.89723969 -202.38044739]
[100.40051270 -209.00122070]
[88.14069366 -217.70138550]
[77.43534088 -228.25561523]
[68.56174469 -240.39050293]
[61.74975586 -253.79171753]
[57.17581558 -268.11218262]
[54.95840836 -282.98089600]
[55.15496445 -298.01278687]
[57.76039505 -312.81845093]
[62.70721054 -327.01443481]
[69.86727905 -340.23294067]
[79.05513763 -352.13168335]
[90.03279877 -362.40237427]
[102.51590729 -370.77899170]
[116.18113708 -377.04461670]
[130.67451477 -381.03689575]
[145.62062073 -382.65243530]
[160.63232422 -381.84939575]
[175.32078552 -378.64855957]
[189.30554199 -373.13287354]
[202.22433472 -365.44515991]
[213.74256897 -355.78460693]
[223.56185913 -344.40139771]
[231.42788696 -331.59039307]
[237.13690186 -317.68344116]
[240.54101562 -303.04074097]
[241.55206299 -288.04162598]
[240.14384460 -273.07455444]
[236.35284424 -258.52722168]
[230.27725220 -244.77645874]
[222.07444763 -232.17843628]
[211.95690918 -221.05947876]
[200.18669128 -211.70756531]
[187.06866455 -204.36495972]
[172.94264221 -199.22184753]
[158.17451477 -196.41145325]
[143.14680481 -196.00654602]
[141.14277649 -181.14102173]
[139.13876343 -166.27549744]
[137.13475037 -151.40997314]
[135.13073730 -136.54443359]
[137.26257324 -132.27075195]
[136.73233032 -126.61250305]
[132.83937073 -121.26868439]
[130.39364624 -106.46941376]
[127.94791412 -91.67014313]
[125.61242676 -76.85307312]
[123.38730621 -62.01902771]
[121.16219330 -47.18498611]
[119.37972260 -32.29126740]
[118.04148865 -17.35108376]
[116.70325470 -2.41089845]
[115.36502075 12.52928638]
[128.22534180 20.08425331]
[136.56443787 32.52487183]
[138.68379211 47.41343689]
[134.11000061 61.80443192]
[123.69923401 72.82726288]
[109.47744751 78.25884247]
[108.13920593 93.19902039]
[107.35788727 108.17866516]
[107.13455963 123.17700195]
[106.91123199 138.17533875]
[106.68790436 153.17367554]
[106.46457672 168.17201233]
[113.99555206 182.08584595]
[106.06962585 194.69651794]
[105.84629822 209.69485474]
[105.62297058 224.69319153]
[105.39964294 239.69152832]
[105.17631531 254.68986511]
[107.84210968 269.45108032]
[113.29746246 283.42388916]
[127.93702698 294.59368896]
[124.61593628 311.82556152]
[130.27871704 325.71557617]
[135.94151306 339.60562134]
[141.60429382 353.49563599]
[147.74186707 360.26086426]
[147.24629211 367.63485718]
[152.70164490 381.60766602]
[158.15701294 395.58047485]
[163.61236572 409.55325317]
[178.19854736 405.96185303]
[193.12872314 404.30511475]
[208.14741516 404.61135864]
[222.99765015 406.87539673]
[237.42529297 411.05847168]
[251.18348694 417.08898926]
[264.03680420 424.86376953]
[275.76531982 434.24975586]
[286.16830444 445.08639526]
[295.06781006 457.18820190]
[302.31149292 470.34814453]
[307.77545166 484.34100342]
[311.36618042 498.92736816]
[313.02221680 513.85760498]
[312.71524048 528.87628174]
[310.45050049 543.72644043]
[306.26675415 558.15386963]
[300.23559570 571.91174316]
[292.46020508 584.76470947]
[283.07363892 596.49279785]
[272.23651123 606.89526367]
[260.13424683 615.79418945]
[246.97398376 623.03723145]
[232.98086548 628.50054932]
[218.39433289 632.09057617]
[203.46400452 633.74591064]
[188.44532776 633.43823242]
[173.59532166 631.17279053]
[159.16807556 626.98834229]
[145.41046143 620.95648193]
[132.55787659 613.18048096]
[120.83026886 603.79339600]
[110.42829132 592.95574951]
[101.52995300 580.85308838]
[94.28750610 567.69244385]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 175]
[12 174]
[13 173]
[14 172]
[15 170]
[16 169]
[17 168]
[18 167]
[21 165]
[22 164]
[49 163]
[50 162]
[51 161]
[52 160]
[53 159]
[55 157]
[56 156]
[57 155]
[58 154]
[59 153]
[65 152]
[66 151]
[72 145]
[73 144]
[74 143]
[75 142]
[80 141]
[81 140]
[82 139]
[84 138]
[85 137]
[86 136]
[87 133]
[88 132]
[89 131]
[90 130]
[91 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
