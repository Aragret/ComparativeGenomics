%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[319.57876587 438.55496216]
[311.91818237 425.65863037]
[304.25756836 412.76229858]
[296.59698486 399.86596680]
[288.93637085 386.96966553]
[281.27578735 374.07333374]
[273.61517334 361.17700195]
[265.95458984 348.28067017]
[257.63265991 335.80087280]
[248.67195129 323.77151489]
[239.71125793 311.74212646]
[224.98207092 309.84829712]
[215.72328186 297.77645874]
[217.80955505 282.33996582]
[208.84886169 270.31057739]
[204.33666992 268.74557495]
[200.75971985 264.32943726]
[199.80679321 257.78698730]
[191.20823669 245.49617004]
[182.60966492 233.20532227]
[174.01110840 220.91448975]
[165.41253662 208.62365723]
[156.81398010 196.33280945]
[148.21540833 184.04197693]
[136.36209106 181.62843323]
[129.09788513 171.45910645]
[130.76086426 158.66859436]
[122.34625244 146.25109863]
[113.93163300 133.83360291]
[105.51701355 121.41609955]
[97.10239410 108.99861145]
[92.30906677 106.86835480]
[89.05049133 102.20413208]
[88.62856293 96.08376312]
[80.58738708 83.42123413]
[82.20638275 98.33361053]
[80.62600708 113.25012207]
[75.91815186 127.49217987]
[68.29700470 140.41184998]
[58.10926437 151.42140198]
[45.81840897 160.01994324]
[31.98359489 165.81629944]
[17.23420906 168.54679871]
[2.24125123 168.08720398]
[-12.31319809 164.45843506]
[-25.76700974 157.82557678]
[-37.50812531 148.49035645]
[-47.00239944 136.87748718]
[-53.81790924 123.51526642]
[-57.64459610 109.01159668]
[-58.30836487 94.02629089]
[-55.77902603 79.24108124]
[-50.17164230 65.32859802]
[-41.74131393 52.92176056]
[-30.87156296 42.58500290]
[-18.05689430 34.78857803]
[-3.88028646 29.88717079]
[11.01331806 28.10376167]
[25.94635963 29.51948357]
[40.23948288 34.06993103]
[53.24245071 41.54808807]
[64.36370850 51.61375046]
[73.09945679 63.81276703]
[70.65372467 49.01349640]
[68.20800018 34.21422577]
[63.72124481 26.25766754]
[65.83773804 19.17654800]
[63.61262131 4.34250498]
[61.38750458 -10.49153900]
[59.16238785 -25.32558250]
[44.81387711 -27.07500839]
[31.42003250 -32.47821045]
[19.89347839 -41.16025162]
[11.01784039 -52.52301025]
[5.39448500 -65.78639221]
[3.40177059 -80.04188538]
[5.16959715 -94.31478882]
[10.57095814 -107.63083649]
[19.23104477 -119.08274841]
[30.55324364 -127.89199829]
[43.76023865 -133.46176147]
[41.75622559 -148.32730103]
[39.75221252 -163.19282532]
[37.74819946 -178.05834961]
[25.46391869 -187.63615417]
[23.64332771 -202.74046326]
[32.84999847 -214.39262390]
[30.84598351 -229.25814819]
[28.84197044 -244.12367249]
[26.83795738 -258.98919678]
[24.83394241 -273.85473633]
[9.92120838 -276.32489014]
[-3.60015392 -283.08242798]
[-14.52783394 -293.52642822]
[-21.89015007 -306.72824097]
[-25.03244972 -321.51394653]
[-23.67532349 -336.56884766]
[-17.93944359 -350.55422974]
[-8.33484077 -362.22656250]
[4.28444910 -370.54791260]
[18.79632759 -374.77838135]
[33.91040802 -374.54177856]
[48.28275681 -369.85913086]
[60.63539505 -361.14685059]
[69.86993408 -349.17962646]
[75.16524506 -335.02154541]
[76.05046844 -319.93154907]
[72.44689941 -305.25146484]
[64.67496490 -292.28656006]
[53.42572784 -282.18972778]
[39.69947052 -275.85873413]
[41.70348358 -260.99322510]
[43.70749664 -246.12768555]
[45.71151352 -231.26216125]
[47.71552658 -216.39663696]
[59.67909622 -207.59841919]
[61.92321777 -192.55120850]
[52.61372757 -180.06236267]
[54.61774063 -165.19683838]
[56.62175369 -150.33131409]
[58.62577057 -135.46578979]
[74.06359863 -133.24804688]
[88.26609802 -126.76828766]
[100.08126068 -116.54312897]
[108.54818726 -103.39333344]
[112.97525024 -88.37796021]
[112.99657440 -72.70904541]
[108.60225677 -57.65379333]
[100.13983154 -44.43207550]
[88.28681183 -34.11759949]
[73.99642944 -27.55069923]
[76.22154999 -12.71665573]
[78.44666290 2.11738777]
[80.67178345 16.95143127]
[83.00727081 31.76849937]
[85.45299530 46.56777191]
[87.89872742 61.36704254]
[93.24990845 75.38006592]
[101.29108429 88.04258728]
[109.51988983 100.58399200]
[117.93450928 113.00148773]
[126.34912872 125.41898346]
[134.76374817 137.83647156]
[143.17835999 150.25396729]
[159.92826843 157.90394592]
[160.50625610 175.44340515]
[169.10481262 187.73425293]
[177.70338440 200.02508545]
[186.30194092 212.31591797]
[194.90051270 224.60676575]
[203.49906921 236.89759827]
[212.09764099 249.18844604]
[220.87823486 261.34988403]
[229.83892822 273.37927246]
[245.22662354 275.79937744]
[254.14266968 288.12652588]
[251.74063110 302.78143311]
[260.70132446 314.81079102]
[269.66201782 326.84017944]
[271.74502563 311.98550415]
[282.80450439 301.85202026]
[297.78424072 301.07260132]
[309.83569336 310.00360107]
[313.44909668 324.56185913]
[306.97244263 338.09158325]
[293.36679077 344.40713501]
[278.85092163 340.62008667]
[286.51150513 353.51638794]
[294.17211914 366.41271973]
[301.83270264 379.30905151]
[309.49331665 392.20538330]
[317.15390015 405.10171509]
[324.81451416 417.99804688]
[332.47509766 430.89437866]
[346.46319580 425.38717651]
[361.15359497 422.19528198]
[376.16580200 421.40136719]
[391.11093140 423.02600098]
[405.60186768 427.02709961]
[419.26327515 433.30102539]
[431.74130249 441.68524170]
[442.71270752 451.96261597]
[451.89331055 463.86691284]
[459.04534912 477.08981323]
[463.98352051 491.28875732]
[466.57995605 506.09600830]
[466.76736450 521.12805176]
[464.54092407 535.99542236]
[459.95825195 550.31304932]
[453.13812256 563.71014404]
[444.25714111 575.83966064]
[433.54537964 586.38732910]
[421.28027344 595.08007812]
[407.77951050 601.69262695]
[393.39282227 606.05377197]
[378.49285889 608.05047607]
[363.46554565 607.63110352]
[348.70013428 604.80645752]
[334.57907104 599.64971924]
[321.46813965 592.29443359]
[309.70693970 582.93121338]
[299.60012817 571.80249023]
[291.40948486 559.19653320]
[285.34716797 545.43994141]
[281.57019043 530.88897705]
[280.17642212 515.92053223]
[281.20193481 500.92239380]
[284.62014771 486.28302002]
[290.34259033 472.38156128]
[298.22094727 459.57815552]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 174]
[2 173]
[3 172]
[4 171]
[5 170]
[6 169]
[7 168]
[8 167]
[9 159]
[10 158]
[11 157]
[14 154]
[15 153]
[18 152]
[19 151]
[20 150]
[21 149]
[22 148]
[23 147]
[24 146]
[27 144]
[28 143]
[29 142]
[30 141]
[31 140]
[34 139]
[35 138]
[63 137]
[64 136]
[65 135]
[67 134]
[68 133]
[69 132]
[70 131]
[81 121]
[82 120]
[83 119]
[84 118]
[87 115]
[88 114]
[89 113]
[90 112]
[91 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
