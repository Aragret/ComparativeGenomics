%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAUGCGGGAGAGUCGGCUACUUGUCAACCUUAUCCAACAAUCGCCAUUGAUUCUAAUCAUACCAUUAAUCCUUCUACUCAUCUAUAAACUUCUUGACxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[102.55568695 621.82580566]
[88.42361450 616.75604248]
[74.89891052 610.23681641]
[62.12974167 602.33959961]
[50.25602722 593.15087891]
[39.40785980 582.77136230]
[29.70409393 571.31469727]
[21.25105286 558.90649414]
[14.14135075 545.68267822]
[8.45288658 531.78808594]
[4.24798536 517.37500000]
[1.57271910 502.60137939]
[0.45639902 487.62902832]
[0.91125625 472.62197876]
[2.93230700 457.74472046]
[6.49740791 443.16021729]
[11.56749725 429.02828979]
[18.08702469 415.50372314]
[25.98455811 402.73474121]
[35.17356873 390.86126709]
[45.55337906 380.01333618]
[57.01025391 370.30984497]
[69.41867828 361.85711670]
[82.64268494 354.74774170]
[96.53739166 349.05960083]
[110.95056152 344.85507202]
[125.72427368 342.18014526]
[124.60862732 327.22171021]
[123.49298096 312.26324463]
[122.37732697 297.30477905]
[121.26168060 282.34634399]
[120.14603424 267.38787842]
[111.48355103 255.27133179]
[118.17301178 240.93391418]
[116.27971649 226.05387878]
[113.61392212 211.29266357]
[110.94812775 196.53144836]
[108.28233337 181.77023315]
[105.50672150 167.02926636]
[102.62145233 152.30937195]
[99.73617554 137.58947754]
[96.85090637 122.86959076]
[93.96562958 108.14969635]
[89.44801331 101.47409821]
[91.14869690 93.18926239]
[88.48290253 78.42803955]
[85.81710052 63.66682434]
[76.39688110 75.33984375]
[61.49697876 77.06985474]
[49.65274048 67.86583710]
[47.64908218 53.00025940]
[56.63379288 40.98880386]
[71.46001434 38.71218109]
[83.63412476 47.47373581]
[82.29589081 32.53355026]
[80.95765686 17.59336472]
[69.11329651 7.47659922]
[67.96896362 -7.69393635]
[77.68674469 -18.92337608]
[76.34851074 -33.86355972]
[75.01027679 -48.80374527]
[73.67204285 -63.74393082]
[72.33380890 -78.68411255]
[68.68572235 -93.23373413]
[62.81676102 -107.03791046]
[56.94779968 -120.84208679]
[51.07884216 -134.64627075]
[45.20988083 -148.45043945]
[39.34091949 -162.25462341]
[27.69300079 -167.79437256]
[23.08891678 -179.41271973]
[27.48979568 -190.68032837]
[21.82700920 -204.57035828]
[16.16422272 -218.46037292]
[1.49807918 -215.15068054]
[-13.51280403 -214.30024719]
[-28.45891953 -215.93226624]
[-42.93252563 -220.00222778]
[-56.53877258 -226.39910889]
[-68.90647125 -234.94836426]
[-79.69821930 -245.41679382]
[-88.61961365 -257.51879883]
[-95.42726898 -270.92422485]
[-99.93547058 -285.26739502]
[-102.02123260 -300.15695190]
[-101.62765503 -315.18676758]
[-98.76546478 -329.94677734]
[-93.51275635 -344.03430176]
[-86.01281738 -357.06506348]
[-76.47026062 -368.68356323]
[-65.14540863 -378.57284546]
[-52.34720993 -386.46310425]
[-38.42481613 -392.13906860]
[-23.75803566 -395.44595337]
[-8.74698830 -396.29348755]
[6.19881248 -394.65856934]
[20.67163467 -390.58581543]
[34.27664566 -384.18634033]
[46.64269638 -375.63470459]
[57.43243027 -365.16418457]
[66.35149384 -353.06045532]
[73.15657043 -339.65371704]
[77.66201019 -325.30969238]
[79.74490356 -310.41970825]
[79.34841919 -295.38998413]
[76.48339081 -280.63055420]
[71.22796631 -266.54400635]
[63.72552109 -253.51469421]
[54.18072128 -241.89802551]
[42.85396576 -232.01095581]
[30.05425072 -224.12316895]
[35.71703720 -210.23313904]
[41.37982178 -196.34310913]
[55.80221176 -186.34503174]
[53.14509583 -168.12358093]
[59.01405716 -154.31939697]
[64.88301849 -140.51522827]
[70.75197601 -126.71105194]
[76.62094116 -112.90687561]
[82.48989868 -99.10269928]
[83.48186493 -114.06986237]
[88.42301178 -128.23266602]
[96.95661163 -140.56869507]
[108.46663666 -150.18739319]
[122.12216187 -156.39437866]
[136.93737793 -158.74156189]
[151.84277344 -157.05950928]
[165.76229858 -151.46963501]
[177.69110107 -142.37548828]
[186.76803589 -130.43356323]
[192.33782959 -116.50598907]
[193.99838257 -101.59818268]
[191.62982178 -86.78636932]
[185.40313721 -73.13981628]
[175.76783752 -61.64368057]
[163.41950989 -53.12788010]
[149.24958801 -48.20718002]
[134.28100586 -47.23680496]
[119.59436798 -50.28681183]
[106.24990845 -57.13701630]
[95.21096802 -67.29289246]
[87.27399445 -80.02234650]
[88.61222839 -65.08216095]
[89.95046234 -50.14197922]
[91.28869629 -35.20179367]
[92.62693024 -20.26161003]
[104.18571472 -10.93797207]
[105.75569916 4.19443703]
[95.89784241 16.25513077]
[97.23607635 31.19531631]
[98.57431030 46.13550186]
[100.57832336 61.00102997]
[103.24411774 75.76224518]
[105.90991211 90.52346039]
[108.68552399 105.26442719]
[111.57079315 119.98431396]
[114.45606995 134.70420837]
[117.34133911 149.42410278]
[120.22661591 164.14399719]
[124.94827271 171.96343994]
[123.04354858 179.10443115]
[125.70934296 193.86564636]
[128.37513733 208.62686157]
[131.04093933 223.38807678]
[139.52143860 211.01548767]
[153.93655396 206.86769104]
[167.69590759 212.84098816]
[174.50888062 226.20449829]
[171.26069641 240.84858704]
[159.43637085 250.07817078]
[144.44181824 249.67362976]
[133.13146973 239.81826782]
[141.87374878 253.00474548]
[135.10449219 266.27224731]
[136.22013855 281.23068237]
[137.33578491 296.18914795]
[138.45143127 311.14758301]
[139.56707764 326.10604858]
[140.68272400 341.06451416]
[155.68978882 341.51828003]
[170.56719971 343.53823853]
[185.15196228 347.10226440]
[199.28428650 352.17132568]
[212.80931091 358.68988037]
[225.57885742 366.58648682]
[237.45301819 375.77462769]
[248.30168152 386.15362549]
[258.00601196 397.60980225]
[266.45965576 410.01760864]
[273.57000732 423.24108887]
[279.25912476 437.13540649]
[283.46475220 451.54824829]
[286.14071655 466.32177734]
[287.25778198 481.29409790]
[286.80364990 496.30111694]
[284.78332520 511.17849731]
[281.21893311 525.76318359]
[276.14950562 539.89538574]
[269.63064575 553.42022705]
[261.73373413 566.18957520]
[252.54530334 578.06353760]
[242.16601562 588.91192627]
[230.70960999 598.61596680]
[218.30160522 607.06933594]
[205.07794189 614.17938232]
[191.18350220 619.86816406]
[176.77053833 624.07342529]
[161.99696350 626.74902344]
[147.02462769 627.86572266]
[132.01759338 627.41125488]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 179]
[28 178]
[29 177]
[30 176]
[31 175]
[32 174]
[34 172]
[35 164]
[36 163]
[37 162]
[38 161]
[39 159]
[40 158]
[41 157]
[42 156]
[43 155]
[45 154]
[46 153]
[47 152]
[54 151]
[55 150]
[56 149]
[59 146]
[60 145]
[61 144]
[62 143]
[63 142]
[64 120]
[65 119]
[66 118]
[67 117]
[68 116]
[69 115]
[72 113]
[73 112]
[74 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
