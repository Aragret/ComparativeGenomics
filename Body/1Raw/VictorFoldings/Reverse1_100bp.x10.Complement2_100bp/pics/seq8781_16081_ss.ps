%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[-104.43389893 566.79461670]
[-99.96697235 581.14398193]
[-97.68869781 595.99884033]
[-97.64997864 611.02734375]
[-99.85166931 625.89379883]
[-104.24459839 640.26599121]
[-110.73061371 653.82287598]
[-119.16482544 666.26159668]
[-129.35879517 677.30426025]
[-141.08480835 686.70416260]
[-154.08087158 694.25134277]
[-168.05667114 699.77716064]
[-182.69998169 703.15814209]
[-197.68365479 704.31884766]
[-212.67295837 703.23327637]
[-227.33302307 699.92565918]
[-241.33633423 694.46990967]
[-254.37005615 686.98797607]
[-266.14300537 677.64691162]
[-276.39218140 666.65545654]
[-284.88861084 654.25915527]
[-291.44247437 640.73492432]
[-295.90734863 626.38494873]
[-298.18350220 611.52972412]
[-298.22009277 596.50122070]
[-296.01626587 581.63513184]
[-291.62130737 567.26354980]
[-285.13336182 553.70758057]
[-276.69738770 541.27008057]
[-266.50183105 530.22888184]
[-254.77449036 520.83062744]
[-241.77734375 513.28527832]
[-227.80075073 507.76147461]
[-213.15696716 504.38253784]
[-198.17312622 503.22399902]
[-183.18397522 504.31170654]
[-168.52438354 507.62139893]
[-154.52185059 513.07910156]
[-147.05410767 500.07015991]
[-139.58636475 487.06121826]
[-132.11862183 474.05227661]
[-132.71984863 471.31427002]
[-132.27273560 468.17312622]
[-130.61830139 465.02697754]
[-127.74450684 462.32406616]
[-123.79932404 460.51034546]
[-115.57051086 447.96896362]
[-107.34170532 435.42755127]
[-107.28620148 417.87866211]
[-90.77148438 409.73336792]
[-82.73031616 397.07086182]
[-74.68914032 384.40832520]
[-66.64796448 371.74578857]
[-58.60679245 359.08328247]
[-50.56562042 346.42074585]
[-42.52444839 333.75820923]
[-53.31042862 322.63485718]
[-61.13201141 309.24981689]
[-65.53288269 294.37567139]
[-66.25431824 278.87219238]
[-63.25040436 263.63650513]
[-56.69091034 249.55126953]
[-46.95172501 237.43350220]
[-34.59330368 227.98718262]
[-20.32841492 221.76239014]
[-4.98104811 219.12322998]
[10.56119823 220.22656250]
[25.39844322 225.01269531]
[33.25019836 212.23184204]
[41.10195541 199.45100403]
[48.95370865 186.67016602]
[56.80546570 173.88931274]
[64.65721893 161.10847473]
[71.53663635 147.77905273]
[77.40559387 133.97486877]
[83.27455139 120.17069244]
[89.14351654 106.36651611]
[94.70274353 92.43471527]
[99.94946289 78.38224792]
[105.19617462 64.32977295]
[110.33813477 50.23863602]
[115.37505341 36.10960388]
[119.77605438 21.76975822]
[123.53234863 7.24769926]
[122.65167236 -1.84417725]
[127.45419312 -7.46178961]
[131.42628479 -21.92631340]
[135.39839172 -36.39083862]
[139.37048340 -50.85536194]
[143.12678528 -65.37741852]
[146.66645813 -79.95379639]
[150.20613098 -94.53017426]
[153.74580383 -109.10654449]
[157.28547668 -123.68292236]
[143.41229248 -129.46922302]
[130.61515808 -137.35464478]
[119.20919800 -147.14497375]
[109.47531128 -158.59913635]
[101.65319824 -171.43507385]
[95.93548584 -185.33665466]
[92.46297455 -199.96157837]
[91.32118225 -214.94966125]
[92.53821564 -229.93183899]
[96.08412170 -244.53912354]
[101.87157440 -258.41183472]
[109.75804138 -271.20831299]
[119.54931641 -282.61346436]
[131.00428772 -292.34640503]
[143.84086609 -300.16744995]
[157.74291992 -305.88403320]
[172.36813354 -309.35534668]
[187.35630798 -310.49588013]
[202.33837891 -309.27761841]
[216.94537354 -305.73049927]
[230.81761169 -299.94192505]
[243.61344910 -292.05438232]
[255.01777649 -282.26217651]
[264.74978638 -270.80639648]
[272.56976318 -257.96917725]
[278.28518677 -244.06663513]
[281.75527954 -229.44114685]
[282.89462280 -214.45288086]
[281.67510986 -199.47091675]
[278.12677002 -184.86419678]
[272.33703613 -170.99244690]
[264.44845581 -158.19726562]
[254.65530396 -146.79373169]
[243.19873047 -137.06268311]
[230.36087036 -129.24374390]
[216.45785522 -123.52947235]
[201.83207703 -120.06058502]
[186.84370422 -118.92250061]
[171.86184692 -120.14324951]
[168.32217407 -105.56687164]
[164.78250122 -90.99050140]
[161.24282837 -76.41412354]
[157.70315552 -61.83774948]
[159.37879944 -57.36547089]
[158.26278687 -51.79308319]
[153.83500671 -46.88326645]
[149.86291504 -32.41873932]
[145.89080811 -17.95421791]
[141.91871643 -3.48969340]
[138.05441284 11.00399971]
[134.29811096 25.52605820]
[147.73880005 18.86665344]
[161.99520874 23.53088951]
[168.90058899 36.84687805]
[164.49925232 51.18662262]
[151.31246948 58.33565903]
[136.89422607 54.19869995]
[129.50408936 41.14652252]
[124.46716309 55.27555084]
[125.18207550 62.63154984]
[119.24864960 69.57649231]
[114.00193024 83.62896729]
[108.75521088 97.68143463]
[109.84267426 101.38140869]
[109.29396820 105.54275513]
[106.93960571 109.42398834]
[102.94769287 112.23548126]
[97.07872772 126.03965759]
[91.20977020 139.84382629]
[85.34081268 153.64801025]
[98.22348022 145.96446228]
[113.22024536 145.65284729]
[126.41098022 152.79458618]
[134.34765625 165.52285767]
[134.95565796 180.51054382]
[128.07604980 193.83985901]
[115.50713348 202.02658081]
[100.53440857 202.93072510]
[87.07170105 196.31591797]
[78.63813019 183.91128540]
[77.43806458 168.96023560]
[69.58630371 181.74107361]
[61.73455048 194.52191162]
[53.88279724 207.30276489]
[46.03104019 220.08360291]
[38.17928696 232.86444092]
[48.50230408 243.10937500]
[56.27654648 255.39210510]
[61.11326218 269.09219360]
[62.77198792 283.51843262]
[61.17250061 297.94378662]
[56.39869690 311.64205933]
[48.69420242 323.92431641]
[38.44993210 334.17373657]
[26.18425560 341.87640381]
[12.51677799 346.64715576]
[-1.86296594 348.24890137]
[-16.23029900 346.60424805]
[-29.86192322 341.79940796]
[-37.90309525 354.46191406]
[-45.94426727 367.12445068]
[-53.98544312 379.78695679]
[-62.02661514 392.44949341]
[-70.06778717 405.11203003]
[-78.10896301 417.77453613]
[-76.06589508 430.50988770]
[-83.02409363 440.89099121]
[-94.80030823 443.65637207]
[-103.02911377 456.19775391]
[-111.25791931 468.73916626]
[-119.10967255 481.52001953]
[-126.57741547 494.52896118]
[-134.04516602 507.53790283]
[-141.51289368 520.54687500]
[-129.73861694 529.88623047]
[-119.48787689 540.87622070]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 208]
[39 207]
[40 206]
[41 205]
[46 204]
[47 203]
[48 202]
[50 199]
[51 198]
[52 197]
[53 196]
[54 195]
[55 194]
[56 193]
[68 180]
[69 179]
[70 178]
[71 177]
[72 176]
[73 175]
[74 164]
[75 163]
[76 162]
[77 161]
[78 157]
[79 156]
[80 155]
[81 153]
[82 152]
[83 145]
[84 144]
[86 143]
[87 142]
[88 141]
[89 140]
[90 137]
[91 136]
[92 135]
[93 134]
[94 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
