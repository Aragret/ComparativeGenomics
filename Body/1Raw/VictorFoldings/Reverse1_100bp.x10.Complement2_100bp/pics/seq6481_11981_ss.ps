%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[112.87252045 514.58862305]
[112.59967041 529.74450684]
[107.15674591 543.89196777]
[97.20102692 555.32257080]
[83.93469238 562.65612793]
[68.95973206 565.00689697]
[54.08444214 562.09118652]
[41.10508347 554.26098633]
[31.58897591 542.46185303]
[26.68523979 528.11859131]
[26.98602104 512.96319580]
[32.45500183 498.82583618]
[42.43177414 487.41357422]
[55.71159744 480.10452271]
[70.69086456 477.78128052]
[73.57613373 463.06140137]
[76.46141052 448.34152222]
[79.01724243 433.56085205]
[81.24235535 418.72680664]
[83.46747589 403.89276123]
[85.69259644 389.05871582]
[87.58588409 374.17868042]
[89.14640808 359.26007080]
[90.70693207 344.34149170]
[92.26745605 329.42288208]
[93.82798004 314.50427246]
[95.38850403 299.58566284]
[96.94902039 284.66705322]
[97.73034668 269.68743896]
[97.73034668 254.68742371]
[97.73034668 239.68742371]
[97.73034668 224.68742371]
[97.39537048 209.69116211]
[96.72558594 194.70613098]
[96.05580139 179.72108459]
[95.38601685 164.73605347]
[94.71623230 149.75100708]
[79.60945129 145.68705750]
[66.49629211 137.15620422]
[56.65885162 124.99251556]
[51.05894089 110.38527679]
[50.24407959 94.76264954]
[54.29394150 79.65209198]
[62.81255722 66.53097534]
[74.96705627 56.68218994]
[89.56906128 51.06865311]
[88.67624664 36.09524536]
[87.78343201 21.12184143]
[86.89060974 6.14843559]
[85.99779510 -8.82497025]
[84.88214874 -23.78342438]
[83.54391479 -38.72360992]
[82.20568085 -53.66379547]
[80.86744690 -68.60398102]
[79.52921295 -83.54416656]
[78.19097900 -98.48435211]
[68.81182861 -107.33840942]
[68.00479126 -119.80967712]
[75.65821075 -129.17726135]
[74.54256439 -144.13571167]
[73.42691803 -159.09416199]
[72.31127167 -174.05262756]
[68.55225372 -182.37774658]
[71.29205322 -189.24179077]
[70.39923859 -204.21520996]
[61.85425568 -217.53038025]
[68.82029724 -230.69561768]
[67.92748260 -245.66902161]
[67.03466797 -260.64242554]
[52.03129578 -261.09527588]
[37.12891769 -262.89120483]
[22.44751930 -266.01574707]
[8.10531139 -270.44375610]
[-5.78222990 -276.13958740]
[-19.10328865 -283.05737305]
[-31.75060654 -291.14141846]
[-43.62235641 -300.32659912]
[-54.62295151 -310.53900146]
[-64.66381836 -321.69638062]
[-73.66411591 -333.70892334]
[-81.55136871 -346.47988892]
[-88.26207733 -359.90643311]
[-93.74221802 -373.88049316]
[-97.94765472 -388.28955078]
[-100.84453583 -403.01754761]
[-102.40953064 -417.94595337]
[-102.63003540 -432.95452881]
[-101.50428772 -447.92248535]
[-99.04134369 -462.72924805]
[-95.26103210 -477.25561523]
[-90.19379425 -491.38464355]
[-83.88042450 -505.00253296]
[-76.37175751 -517.99969482]
[-67.72825623 -530.27148438]
[-58.01950455 -541.71899414]
[-47.32368088 -552.25018311]
[-35.72689819 -561.78021240]
[-23.32253456 -570.23229980]
[-10.21045685 -577.53845215]
[3.50375676 -583.63977051]
[17.70968628 -588.48724365]
[32.29295349 -592.04174805]
[47.13613892 -594.27471924]
[62.11973190 -595.16815186]
[77.12309265 -594.71484375]
[92.02541351 -592.91845703]
[106.70671844 -589.79345703]
[121.04878998 -585.36499023]
[134.93615723 -579.66876221]
[148.25700378 -572.75054932]
[160.90406799 -564.66613770]
[172.77554321 -555.48059082]
[183.77583313 -545.26782227]
[193.81634521 -534.11016846]
[202.81628418 -522.09735107]
[210.70314026 -509.32614136]
[217.41345215 -495.89938354]
[222.89315796 -481.92514038]
[227.09815979 -467.51599121]
[229.99458313 -452.78787231]
[231.55912781 -437.85943604]
[231.77917480 -422.85083008]
[230.65296936 -407.88293457]
[228.18957520 -393.07626343]
[224.40881348 -378.54998779]
[219.34114075 -364.42114258]
[213.02735901 -350.80340576]
[205.51829529 -337.80648804]
[196.87442017 -325.53497314]
[187.16532898 -314.08773804]
[176.46917725 -303.55688477]
[164.87210083 -294.02722168]
[152.46748352 -285.57553101]
[139.35517883 -278.26977539]
[125.64077759 -272.16882324]
[111.43470001 -267.32180786]
[96.85132599 -263.76776123]
[82.00807190 -261.53524780]
[82.90088654 -246.56184387]
[83.79370117 -231.58842468]
[92.27482605 -219.34425354]
[85.37264252 -205.10801697]
[86.26546478 -190.13461304]
[87.26972198 -175.16827393]
[88.38536835 -160.20982361]
[89.50102234 -145.25135803]
[90.61666870 -130.29290771]
[101.26438141 -116.34324646]
[93.13116455 -99.82258606]
[94.46939850 -84.88240051]
[95.80763245 -69.94221497]
[97.14586639 -55.00202942]
[98.48410034 -40.06184387]
[99.82233429 -25.12165833]
[102.84776306 -21.42628288]
[103.58390808 -15.79111385]
[100.97120667 -9.71778584]
[101.86402130 5.25561953]
[102.75683594 20.22902489]
[103.64965057 35.20243073]
[104.54246521 50.17583847]
[118.39340973 53.47297668]
[130.75469971 60.53824997]
[140.62522888 70.79945374]
[147.20559692 83.42556000]
[149.96289062 97.39398956]
[148.67376709 111.57347870]
[143.44265747 124.81565094]
[134.69320679 136.04804993]
[123.13403320 144.36099243]
[109.70127106 149.08122253]
[110.37105560 164.06626892]
[111.04084015 179.05130005]
[111.71062469 194.03634644]
[112.38040924 209.02137756]
[115.19107819 213.41992188]
[115.95691681 217.99887085]
[114.95161438 221.94912720]
[112.73034668 224.68742371]
[112.73034668 239.68742371]
[112.73034668 254.68742371]
[112.73034668 269.68743896]
[123.27469635 259.01895142]
[138.19749451 257.49902344]
[150.67623901 265.82254028]
[155.00579834 280.18411255]
[149.20677185 294.01782227]
[135.93040466 300.99908447]
[121.24645233 297.93612671]
[111.86763000 286.22760010]
[110.30710602 301.14617920]
[108.74658203 316.06478882]
[107.18605804 330.98339844]
[105.62553406 345.90200806]
[104.06501007 360.82061768]
[102.50449371 375.73922729]
[104.63158417 380.50604248]
[104.70969391 385.14791870]
[103.12953186 388.90533447]
[100.52663422 391.28384399]
[98.30152130 406.11788940]
[96.07640076 420.95193481]
[93.85128784 435.78598022]
[95.76340485 440.64300537]
[95.63417053 445.28378296]
[93.88780212 448.96688843]
[91.18129730 451.22677612]
[88.29602814 465.94668579]
[85.41075897 480.66656494]
[98.40452576 488.47283936]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 209]
[16 208]
[17 207]
[18 203]
[19 202]
[20 201]
[21 200]
[22 196]
[23 195]
[24 194]
[25 193]
[26 192]
[27 191]
[28 190]
[29 182]
[30 181]
[31 180]
[32 179]
[33 175]
[34 174]
[35 173]
[36 172]
[37 171]
[46 161]
[47 160]
[48 159]
[49 158]
[50 157]
[51 154]
[52 153]
[53 152]
[54 151]
[55 150]
[56 149]
[59 147]
[60 146]
[61 145]
[62 144]
[64 143]
[65 142]
[67 140]
[68 139]
[69 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
