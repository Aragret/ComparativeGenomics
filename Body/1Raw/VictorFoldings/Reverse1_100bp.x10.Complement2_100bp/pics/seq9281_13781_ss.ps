%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[56.76914978 730.21612549]
[42.17878342 733.86199951]
[27.17696762 734.91870117]
[12.21958733 733.35412598]
[-2.23881769 729.21582031]
[-15.75887394 722.62951660]
[-27.92972183 713.79541016]
[-38.38150024 702.98193359]
[-46.79659653 690.51770020]
[-52.91928482 676.78143311]
[-56.56349945 662.19067383]
[-57.61849976 647.18872070]
[-56.05222321 632.23156738]
[-51.91226959 617.77362061]
[-45.32444763 604.25427246]
[-36.48895264 592.08447266]
[-25.67428589 581.63391113]
[-13.20909119 573.22021484]
[0.52782667 567.09906006]
[15.11901855 563.45654297]
[30.12107468 562.40319824]
[31.68159676 547.48461914]
[33.24211884 532.56604004]
[26.87088585 519.10284424]
[36.00189972 506.18252563]
[37.56242371 491.26391602]
[39.12294388 476.34530640]
[40.68346786 461.42669678]
[42.24399185 446.50808716]
[43.80451584 431.58950806]
[45.36503601 416.67089844]
[46.92556000 401.75228882]
[45.00122452 398.79776001]
[44.41234207 394.76434326]
[45.65039062 390.28991699]
[48.90341568 386.20767212]
[51.12853241 371.37362671]
[53.35364914 356.53958130]
[51.28568649 352.23461914]
[51.90011215 346.58489990]
[55.87220383 341.29962158]
[58.53799820 326.53839111]
[61.20379257 311.77719116]
[63.86958694 297.01596069]
[61.96486282 289.87496948]
[66.68652344 282.05554199]
[69.57180023 267.33563232]
[72.45706940 252.61575317]
[75.34234619 237.89585876]
[78.22761536 223.17596436]
[80.56310272 208.35890198]
[82.34556580 193.46517944]
[84.12803650 178.57145691]
[85.79957581 163.66488647]
[87.36009979 148.74627686]
[88.92062378 133.82768250]
[90.48114777 118.90907288]
[81.38512421 110.08206940]
[78.96202850 97.64091492]
[84.08045959 86.04543304]
[94.90560913 79.45227814]
[96.68807983 64.55856323]
[98.47054291 49.66484451]
[99.80877686 34.72465897]
[100.70159149 19.75125313]
[101.59440613 4.77784729]
[102.48722839 -10.19555855]
[103.26854706 -25.17519569]
[103.93833160 -40.16023636]
[104.60811615 -55.14527512]
[105.27790070 -70.13031006]
[102.87085724 -74.76207733]
[102.51659393 -79.39109039]
[103.87030792 -83.23589325]
[106.32701874 -85.76510620]
[107.66525269 -100.70529175]
[108.89222717 -115.65502167]
[110.00787354 -130.61347961]
[101.62959290 -147.01121521]
[112.06843567 -161.11785889]
[112.96125031 -176.09126282]
[113.85406494 -191.06468201]
[114.74687958 -206.03808594]
[114.63521576 -221.03765869]
[113.51956177 -235.99612427]
[112.40391541 -250.95457458]
[111.28826904 -265.91302490]
[102.04198456 -274.90576172]
[101.42070770 -287.38763428]
[109.21275330 -296.64025879]
[108.31993866 -311.61364746]
[107.42712402 -326.58706665]
[106.53430939 -341.56045532]
[91.80997467 -344.93249512]
[78.63277435 -352.31750488]
[68.07091522 -363.11676025]
[60.98060608 -376.45483398]
[57.93662643 -391.25045776]
[59.18573380 -406.30422974]
[64.62667084 -420.39581299]
[73.81837463 -432.38287354]
[86.01569366 -441.29367065]
[100.22986603 -446.40579224]
[115.30860138 -447.30490112]
[130.02954102 -443.91806030]
[143.19932556 -436.51983643]
[153.75032043 -425.70999146]
[160.82722473 -412.36480713]
[163.85633850 -397.56610107]
[162.59211731 -382.51358032]
[157.13702393 -368.42745972]
[147.93328857 -356.44964600]
[135.72702026 -347.55114746]
[121.50771332 -342.45327759]
[122.40052795 -327.47985840]
[123.29335022 -312.50646973]
[124.18616486 -297.53305054]
[134.62500000 -283.42642212]
[126.24671936 -267.02868652]
[127.36237335 -252.07022095]
[128.47801208 -237.11177063]
[129.59367371 -222.15332031]
[138.00984192 -234.56974792]
[151.76063538 -240.56272888]
[166.58518982 -238.27528381]
[177.88996887 -228.41618347]
[182.17207336 -214.04037476]
[178.10462952 -199.60237122]
[166.94798279 -189.57594299]
[152.15914917 -187.06788635]
[138.32060242 -192.85534668]
[129.72029114 -205.14526367]
[128.82746887 -190.17185974]
[127.93465424 -175.19845581]
[127.04183960 -160.22505188]
[134.83389282 -150.97244263]
[134.21261597 -138.49055481]
[124.96633148 -129.49783325]
[123.85067749 -114.53937531]
[126.48798370 -107.63528442]
[122.60543823 -99.36705780]
[121.26720428 -84.42687225]
[120.26293945 -69.46052551]
[119.59315491 -54.47548676]
[118.92337036 -39.49044800]
[118.25358582 -24.50541115]
[121.09527588 -17.68290520]
[117.46063232 -9.30274200]
[116.56781769 5.67066336]
[115.67499542 20.64406967]
[114.78218079 35.61747360]
[116.53984833 37.80121994]
[117.53841400 40.81277847]
[117.45823669 44.36650848]
[116.08889008 48.06642914]
[113.36425781 51.44731140]
[111.58179474 66.34102631]
[109.79933167 81.23474121]
[120.29349518 93.97209930]
[118.45440674 110.37287903]
[105.39974976 120.46959686]
[103.83922577 135.38819885]
[102.27870178 150.30680847]
[100.71817780 165.22540283]
[102.93782043 174.08605957]
[99.02175140 180.35392761]
[97.23928833 195.24765015]
[95.45681763 210.14135742]
[108.68220520 203.06399536]
[122.52104950 208.85073853]
[126.77187347 223.23582458]
[118.30112457 235.61509705]
[103.35311890 236.86302185]
[92.94750977 226.06123352]
[90.06223297 240.78112793]
[87.17696381 255.50102234]
[84.29168701 270.22091675]
[81.40641785 284.94079590]
[78.63080597 299.68176270]
[75.96501160 314.44299316]
[73.29921722 329.20419312]
[70.63342285 343.96542358]
[68.18769073 358.76467896]
[65.96257782 373.59872437]
[63.73745728 388.43276978]
[61.84416580 403.31280518]
[60.28364182 418.23141479]
[58.72311783 433.15002441]
[57.16259766 448.06863403]
[55.60207367 462.98724365]
[54.04154968 477.90582275]
[52.48102570 492.82443237]
[50.92050552 507.74304199]
[57.18011856 522.27325439]
[48.16072464 534.12652588]
[46.60020065 549.04516602]
[45.03968048 563.96374512]
[59.49902344 568.09875488]
[73.02056885 574.68200684]
[85.19342041 583.51336670]
[95.64765930 594.32446289]
[104.06558228 606.78680420]
[110.19138336 620.52166748]
[113.83890533 635.11157227]
[114.89730835 650.11328125]
[113.33442688 665.07086182]
[109.19775391 679.52972412]
[102.61299896 693.05053711]
[93.78025818 705.22235107]
[82.96796417 715.67535400]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 197]
[22 196]
[23 195]
[25 193]
[26 192]
[27 191]
[28 190]
[29 189]
[30 188]
[31 187]
[32 186]
[36 185]
[37 184]
[38 183]
[41 182]
[42 181]
[43 180]
[44 179]
[46 178]
[47 177]
[48 176]
[49 175]
[50 174]
[51 168]
[52 167]
[53 166]
[54 164]
[55 163]
[56 162]
[57 161]
[61 158]
[62 157]
[63 156]
[64 151]
[65 150]
[66 149]
[67 148]
[68 146]
[69 145]
[70 144]
[71 143]
[75 142]
[76 141]
[77 139]
[78 138]
[80 135]
[81 134]
[82 133]
[83 132]
[84 122]
[85 121]
[86 120]
[87 119]
[90 117]
[91 116]
[92 115]
[93 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
