%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[46.08684921 426.08544922]
[50.44535446 440.47119141]
[52.49964905 455.36166382]
[52.19914627 470.39016724]
[49.55123901 485.18664551]
[44.62114334 499.38665771]
[37.53026199 512.64056396]
[28.45321465 524.62194824]
[17.61353302 535.03576660]
[5.27815437 543.62561035]
[-8.24915314 550.17987061]
[-22.63526726 554.53717041]
[-37.52591324 556.59027100]
[-52.55440140 556.28851318]
[-67.35063934 553.63940430]
[-81.55025482 548.70812988]
[-94.80357361 541.61614990]
[-106.78421021 532.53808594]
[-117.19714355 521.69757080]
[-125.78594208 509.36148071]
[-132.33909607 495.83361816]
[-136.69522095 481.44714355]
[-138.74707031 466.55633545]
[-138.44407654 451.52786255]
[-135.79373169 436.73184204]
[-130.86129761 422.53262329]
[-123.76822662 409.27990723]
[-114.68920135 397.30001831]
[-103.84780121 386.88796997]
[-91.51100159 378.30020142]
[-77.98261261 371.74816895]
[-63.59578323 367.39321899]
[-48.70479584 365.34262085]
[-33.67635727 365.64682007]
[-18.88055801 368.29840088]
[-4.68175650 373.23202515]
[2.39534926 360.00646973]
[9.47245502 346.78094482]
[16.54956055 333.55541992]
[23.62666512 320.32989502]
[30.70377159 307.10437012]
[37.78087616 293.87884521]
[44.85798264 280.65332031]
[50.41720581 266.72152710]
[54.38930511 252.25700378]
[58.36140060 237.79246521]
[62.22570419 223.29878235]
[65.87379456 208.74916077]
[69.41346741 194.17279053]
[72.95314026 179.59640503]
[68.43771362 165.40274048]
[79.21303558 153.81814575]
[82.75270844 139.24176025]
[86.29238129 124.66539001]
[89.83205414 110.08901978]
[86.08058929 96.61986542]
[95.59156799 86.37131500]
[99.13124084 71.79493713]
[101.24586487 56.94474030]
[101.91565704 41.95969772]
[102.58544159 26.97466087]
[103.25522614 11.98962212]
[103.92501068 -2.99541688]
[104.59479523 -17.98045540]
[97.48142242 -32.11235046]
[105.77930450 -44.48144150]
[106.44908905 -59.46648026]
[107.11887360 -74.45151520]
[106.89554596 -89.44985962]
[105.77989960 -104.40830994]
[104.66425323 -119.36676025]
[103.54859924 -134.32521057]
[102.43295288 -149.28367615]
[101.31730652 -164.24212646]
[85.31226349 -171.49966431]
[75.23889160 -185.79084778]
[73.79855347 -203.12663269]
[81.29814148 -218.72372437]
[95.59030151 -228.32438660]
[94.02977753 -243.24299622]
[92.46925354 -258.16159058]
[90.90872955 -273.08020020]
[89.34820557 -287.99880981]
[87.78768158 -302.91741943]
[86.22716522 -317.83602905]
[84.66664124 -332.75460815]
[69.67563629 -334.04550171]
[55.19992065 -338.15039062]
[41.76277161 -344.92089844]
[29.84993935 -354.11224365]
[19.89206505 -365.39218140]
[12.24911594 -378.35296631]
[7.19738293 -392.52606201]
[4.91948175 -407.39910889]
[5.49775839 -422.43447876]
[8.91130733 -437.08862305]
[15.03673077 -450.83181763]
[23.65259933 -463.16726685]
[34.44745636 -473.64904785]
[47.03107071 -481.89825439]
[60.94855499 -487.61663818]
[75.69680023 -490.59753418]
[90.74266815 -490.73318481]
[105.54225159 -488.01864624]
[119.56056976 -482.55209351]
[132.29086304 -474.53109741]
[143.27293396 -464.24563599]
[152.10978699 -452.06753540]
[158.48199463 -438.43701172]
[162.15917969 -423.84677124]
[163.00842285 -408.82427979]
[160.99902344 -393.91256714]
[156.20364380 -379.65072632]
[148.79559326 -366.55426025]
[139.04269409 -355.09661865]
[127.29750824 -345.69198608]
[113.98460388 -338.68032837]
[99.58524323 -334.31515503]
[101.14576721 -319.39654541]
[102.70629120 -304.47793579]
[104.26681519 -289.55932617]
[105.82733917 -274.64071655]
[107.38785553 -259.72210693]
[108.94837952 -244.80351257]
[110.50890350 -229.88490295]
[122.53471375 -226.01216125]
[132.23829651 -217.84875488]
[138.15538025 -206.58039856]
[139.37565613 -193.86465454]
[135.68264771 -181.58715820]
[127.59116364 -171.58201599]
[116.27575684 -165.35777283]
[117.39141083 -150.39932251]
[118.50705719 -135.44087219]
[119.62270355 -120.48241425]
[120.73834991 -105.52395630]
[121.85400391 -90.56550598]
[130.86190796 -102.55956268]
[145.16508484 -107.07835388]
[159.42877197 -102.43647003]
[168.33299255 -90.36522675]
[168.55667114 -75.36689758]
[160.01640320 -63.03548050]
[145.89747620 -57.97030258]
[131.46591187 -62.06054306]
[122.10391235 -73.78173065]
[121.43412781 -58.79669571]
[120.76434326 -43.81165695]
[127.92562866 -30.75158882]
[119.57983398 -17.31067085]
[118.91004944 -2.32563162]
[118.24026489 12.65940762]
[117.57048035 27.64444542]
[116.90069580 42.62948608]
[116.23090363 57.61452484]
[124.64608765 45.19741058]
[137.34103394 37.20750427]
[152.17639160 34.99124908]
[166.65217590 38.92211533]
[178.32894897 48.33768845]
[185.23896790 61.65127563]
[186.21777344 76.61930847]
[181.10043335 90.71940613]
[170.74928284 101.57545471]
[156.90869141 107.35801697]
[141.91104126 107.09263611]
[128.28369141 100.82403564]
[118.32310486 89.60857391]
[113.70761871 75.33460999]
[110.16794586 89.91098022]
[113.91941071 103.38013458]
[104.40843201 113.62868500]
[100.86875916 128.20506287]
[97.32908630 142.78143311]
[93.78941345 157.35781860]
[98.05165863 172.59408569]
[87.52951050 183.13607788]
[83.98983765 197.71246338]
[80.45017242 212.28883362]
[81.46611786 221.36659241]
[76.74776459 227.05508423]
[77.62844849 236.14695740]
[72.82592773 241.76457214]
[68.85382843 256.22909546]
[64.88172913 270.69360352]
[75.49134827 260.09002686]
[89.18539429 253.96850586]
[104.16218567 253.13442993]
[118.45127106 257.69754028]
[130.17266846 267.05749512]
[137.78424072 279.98284912]
[140.28453064 294.77297974]
[137.34460449 309.48205566]
[129.35125732 322.17483521]
[117.35613251 331.18133545]
[102.93741608 335.31661987]
[87.99212646 334.03662109]
[74.48657990 327.50973511]
[64.19766235 316.59469604]
[58.47905350 302.72753906]
[58.08350754 287.73043823]
[51.00640488 300.95596313]
[43.92929840 314.18148804]
[36.85219193 327.40701294]
[29.77508736 340.63253784]
[22.69798279 353.85806274]
[15.62087631 367.08358765]
[8.54377079 380.30911255]
[20.52590942 389.38516235]
[30.94063187 400.22399902]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 208]
[37 207]
[38 206]
[39 205]
[40 204]
[41 203]
[42 202]
[43 201]
[44 185]
[45 184]
[46 183]
[47 181]
[48 179]
[49 178]
[50 177]
[52 175]
[53 174]
[54 173]
[55 172]
[57 170]
[58 169]
[59 155]
[60 154]
[61 153]
[62 152]
[63 151]
[64 150]
[66 148]
[67 147]
[68 146]
[69 137]
[70 136]
[71 135]
[72 134]
[73 133]
[74 132]
[79 125]
[80 124]
[81 123]
[82 122]
[83 121]
[84 120]
[85 119]
[86 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
