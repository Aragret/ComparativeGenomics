%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[47.88683701 411.85522461]
[47.81407928 426.87783813]
[45.73958969 441.75665283]
[41.70038986 456.22622681]
[35.76856995 470.02828979]
[28.04998207 482.91653442]
[18.68238068 494.66094971]
[7.83293676 505.05197144]
[-4.30472565 513.90411377]
[-17.51399803 521.05944824]
[-31.55914307 526.39025879]
[-46.18951035 529.80133057]
[-61.14400101 531.23193359]
[-76.15573883 530.65649414]
[-90.95681763 528.08520508]
[-105.28310394 523.56402588]
[-118.87891388 517.17358398]
[-131.50161743 509.02801514]
[-142.92596436 499.27261353]
[-152.94805908 488.08148193]
[-161.38903809 475.65438843]
[-168.09828186 462.21304321]
[-172.95603943 447.99737549]
[-175.87562561 433.26101685]
[-176.80493164 418.26702881]
[-175.72738647 403.28295898]
[-172.66221619 388.57623291]
[-167.66410828 374.40927124]
[-160.82226562 361.03494263]
[-152.25880432 348.69192505]
[-142.12652588 337.60046387]
[-130.60627747 327.95852661]
[-117.90362549 319.93814087]
[-104.24527740 313.68252563]
[-89.87498474 309.30322266]
[-75.04920197 306.87844849]
[-60.03250885 306.45144653]
[-45.09289551 308.02987671]
[-30.49697685 311.58551025]
[-16.50523567 317.05493164]
[-9.23200703 303.93624878]
[-1.95877755 290.81756592]
[5.31445217 277.69885254]
[12.58768177 264.58016968]
[19.86091042 251.46147156]
[26.74032402 238.13204956]
[25.25988579 223.31120300]
[38.19928741 214.20721436]
[44.67878342 200.67887878]
[51.15827942 187.15052795]
[57.53688431 173.57432556]
[63.81424332 159.95100403]
[70.09160614 146.32768250]
[76.36896515 132.70437622]
[82.64632416 119.08105469]
[88.92369080 105.45774078]
[77.07662964 114.65812683]
[63.06536102 120.01390839]
[48.10200500 121.06175995]
[33.48104095 117.71103668]
[20.46732521 110.25159454]
[10.18667698 99.32876587]
[3.52847385 85.88747406]
[1.06871760 71.09052277]
[3.02020168 56.21800995]
[9.21410275 42.55654907]
[19.11458778 31.28798866]
[31.86516380 23.38717842]
[46.36277771 19.53761482]
[61.35324478 20.07232475]
[75.53973389 24.94504738]
[87.69498444 33.73424911]
[96.76742554 45.67956924]
[101.97222137 59.74762344]
[102.85908508 74.72138214]
[99.35262299 89.30220795]
[109.18320465 77.97261047]
[119.01378632 66.64302063]
[128.84437561 55.31342697]
[138.59033203 43.91096497]
[148.25114441 32.43626404]
[148.85952759 28.13698006]
[150.62663269 24.60967827]
[153.16748047 22.12382698]
[156.04914856 20.79619789]
[158.84468079 20.58843231]
[169.17135620 9.70909691]
[179.49801636 -1.17023706]
[189.74340820 -12.12614632]
[199.90695190 -23.15802383]
[210.07051086 -34.18989944]
[220.23405457 -45.22177887]
[230.39759827 -56.25365448]
[220.23658752 -67.29962158]
[211.02246094 -79.14695740]
[202.81816101 -91.71472931]
[195.67971802 -104.91709137]
[189.65591431 -118.66384888]
[184.78788757 -132.86109924]
[181.10890198 -147.41184998]
[178.64408875 -162.21672058]
[177.41026306 -177.17457581]
[177.41587830 -192.18322754]
[178.66090393 -207.14013672]
[181.13679504 -221.94316101]
[184.82667542 -236.49116516]
[189.70532227 -250.68476868]
[195.73941040 -264.42700195]
[202.88772583 -277.62402344]
[211.10144043 -290.18563843]
[220.32443237 -302.02609253]
[230.49371338 -313.06445312]
[241.53979492 -323.22531128]
[253.38725281 -332.43930054]
[265.95510864 -340.64346313]
[279.15756226 -347.78173828]
[292.90438843 -353.80538940]
[307.10168457 -358.67324829]
[321.65249634 -362.35205078]
[336.45739746 -364.81671143]
[351.41525269 -366.05032349]
[366.42391968 -366.04452515]
[381.38082886 -364.79934692]
[396.18380737 -362.32327271]
[410.73175049 -358.63320923]
[424.92532349 -353.75439453]
[438.66748047 -347.72015381]
[451.86441040 -340.57168579]
[464.42593384 -332.35781860]
[476.26626587 -323.13467407]
[487.30450439 -312.96527100]
[497.46524048 -301.91906738]
[506.67910767 -290.07150269]
[514.88311768 -277.50354004]
[522.02124023 -264.30099487]
[528.04467773 -250.55410767]
[532.91235352 -236.35675049]
[536.59100342 -221.80589294]
[539.05548096 -207.00096130]
[540.28894043 -192.04309082]
[540.28295898 -177.03443909]
[539.03759766 -162.07754517]
[536.56134033 -147.27458191]
[532.87115479 -132.72666931]
[527.99212646 -118.53318787]
[521.95770264 -104.79109192]
[514.80908203 -91.59424591]
[506.59509277 -79.03281403]
[497.37179565 -67.19260406]
[487.20227051 -56.15448380]
[476.15594482 -45.99386978]
[464.30825806 -36.78016281]
[451.74020386 -28.57630730]
[438.53759766 -21.43834305]
[424.79061890 -15.41503143]
[410.59320068 -10.54751587]
[396.04229736 -6.86904860]
[381.23733521 -4.40475750]
[366.27944946 -3.17147660]
[351.27081299 -3.17763042]
[336.31393433 -4.42317677]
[321.51098633 -6.89960718]
[306.96313477 -10.59000492]
[292.76971436 -15.46916103]
[279.02767944 -21.50374413]
[265.83090210 -28.65253258]
[253.26957703 -36.86669159]
[241.42947388 -46.09010696]
[231.26593018 -35.05823135]
[221.10238647 -24.02635384]
[210.93884277 -12.99447727]
[200.77528381 -1.96259964]
[198.55506897 5.08668423]
[190.37734985 9.15643120]
[180.05068970 20.03576660]
[169.72401428 30.91510010]
[159.72584534 42.09707642]
[150.06503296 53.57177353]
[148.16178894 60.71316528]
[140.17396545 65.14400482]
[130.34338379 76.47360229]
[120.51280212 87.80319214]
[110.68222046 99.13278961]
[102.54700470 111.73509979]
[96.26964569 125.35841370]
[89.99227905 138.98173523]
[83.71492004 152.60504150]
[77.43756104 166.22836304]
[71.16020203 179.85168457]
[70.41105652 188.95533752]
[64.68662262 193.63002014]
[58.20713043 207.15837097]
[51.72763443 220.68670654]
[52.74461365 236.47520447]
[40.26866913 244.61154175]
[40.75629807 248.92619324]
[39.92880630 252.78361511]
[38.09141541 255.82655334]
[35.63402939 257.83349609]
[32.97960663 258.73471069]
[25.70637512 271.85339355]
[18.43314552 284.97210693]
[11.15991688 298.09078979]
[3.88668704 311.20947266]
[-3.38654232 324.32818604]
[8.66480446 333.29748535]
[19.41308594 343.79309082]
[28.66648674 355.62771606]
[36.25986862 368.59011841]
[42.05772018 382.44897461]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 205]
[41 204]
[42 203]
[43 202]
[44 201]
[45 200]
[46 195]
[48 193]
[49 192]
[50 191]
[51 189]
[52 188]
[53 187]
[54 186]
[55 185]
[56 184]
[76 183]
[77 182]
[78 181]
[79 180]
[80 178]
[81 177]
[86 176]
[87 175]
[88 174]
[89 172]
[90 171]
[91 170]
[92 169]
[93 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
