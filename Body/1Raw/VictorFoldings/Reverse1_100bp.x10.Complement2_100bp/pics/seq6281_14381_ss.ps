%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[169.51144409 519.73010254]
[170.35623169 504.72784424]
[173.32754517 489.99856567]
[178.36488342 475.84207153]
[185.36570740 462.54663086]
[194.18748474 450.38287354]
[204.65060425 439.59844971]
[216.54206848 430.41290283]
[229.61976624 423.01327515]
[224.16441345 409.04046631]
[218.70904541 395.06768799]
[213.25369263 381.09487915]
[207.79833984 367.12210083]
[202.34298706 353.14929199]
[187.91151428 349.56167603]
[178.24548340 338.02774048]
[177.21243286 322.83609009]
[185.41763306 309.79840088]
[179.96228027 295.82562256]
[174.50691223 281.85281372]
[168.74089050 268.00534058]
[162.66705322 254.29006958]
[156.49128723 240.62039185]
[150.21391296 226.99708557]
[143.93655396 213.37376404]
[137.65919495 199.75044250]
[125.30577087 191.42926025]
[126.55770874 175.65766907]
[120.28034973 162.03434753]
[107.92692566 153.71316528]
[109.17886353 137.94155884]
[102.90149689 124.31824493]
[96.62413788 110.69493103]
[91.51219940 124.79698944]
[78.59506989 132.42247009]
[63.77830124 130.08509827]
[53.83591080 118.85350037]
[53.31343079 103.86260223]
[62.44972610 91.96604156]
[77.06781006 88.60277557]
[90.48577118 95.31176758]
[85.65977478 81.10931396]
[80.83377838 66.90686035]
[76.00778198 52.70440292]
[71.07618713 38.53826904]
[66.03926849 24.40923882]
[61.00235367 10.28020954]
[55.96543884 -3.84881997]
[50.92852020 -17.97784996]
[45.89160538 -32.10688019]
[43.27657700 -17.33658409]
[35.56491089 -4.47072887]
[23.77121162 4.79796028]
[9.44713688 9.25002861]
[-5.52273035 8.29972935]
[-19.16884804 2.07209134]
[-29.69583511 -8.61353302]
[-35.71868515 -22.35126495]
[-36.44498444 -37.33367157]
[-31.77918434 -51.58955765]
[-22.33514404 -63.24331665]
[-9.35539150 -70.76169586]
[5.45236206 -73.15552521]
[20.13990402 -70.10985565]
[32.77483368 -62.02539062]
[41.69585800 -49.96365356]
[39.91339111 -64.85736847]
[38.13092422 -79.75108337]
[36.23763275 -94.63111877]
[34.23361969 -109.49665070]
[32.22960663 -124.36217499]
[30.22559166 -139.22770691]
[27.66975975 -154.00836182]
[24.56564903 -168.68365479]
[21.46153831 -183.35896301]
[16.42398071 -169.23016357]
[6.13437080 -158.31576538]
[-7.67330837 -152.45506287]
[-22.67222023 -152.63565063]
[-36.33478546 -158.82711792]
[-46.35862350 -169.98609924]
[-51.05453873 -184.23208618]
[-49.63118744 -199.16439819]
[-42.32843399 -212.26667786]
[-30.37691116 -221.33096313]
[-15.79066944 -224.82975769]
[-1.02774191 -222.17344666]
[11.42405701 -213.80966187]
[19.46696281 -201.14631653]
[19.24363518 -216.14465332]
[19.02030754 -231.14299011]
[18.79697990 -246.14132690]
[18.57365227 -261.13967896]
[3.90955472 -264.66317749]
[-9.41719913 -271.72351074]
[-20.56887817 -281.87689209]
[-28.84447861 -294.48501587]
[-33.72378922 -308.75537109]
[-34.90009308 -323.79092407]
[-32.29944611 -338.64645386]
[-26.08532333 -352.38821411]
[-16.64835739 -364.15231323]
[-4.58175850 -373.19931030]
[9.35595512 -378.96047974]
[24.28864670 -381.07363892]
[39.27763748 -379.40600586]
[53.38070297 -374.06237793]
[65.71131134 -365.37866211]
[75.49436188 -353.90075684]
[82.11486816 -340.35009766]
[85.15666962 -325.57858276]
[84.42855072 -310.51467896]
[79.97628021 -296.10537720]
[72.07974243 -283.25643921]
[61.23531342 -272.77554321]
[48.12467957 -265.32153320]
[33.57199097 -261.36300659]
[33.79531860 -246.36465454]
[34.01864624 -231.36631775]
[34.24197388 -216.36798096]
[34.46530151 -201.36964417]
[36.13684082 -186.46307373]
[39.24095154 -171.78776550]
[42.34506226 -157.11247253]
[52.59023666 -168.06858826]
[67.55506134 -167.04193115]
[76.20802307 -154.78933716]
[72.17048645 -140.34294128]
[58.41876221 -134.35209656]
[45.09112167 -141.23171997]
[47.09513474 -126.36618805]
[49.09914780 -111.50066376]
[51.10316086 -96.63513184]
[55.11211014 -90.42626190]
[53.02464294 -81.53355408]
[54.80710983 -66.63983154]
[56.58957291 -51.74611664]
[60.02063370 -37.14379501]
[65.05754852 -23.01476669]
[70.09446716 -8.88573647]
[75.13138580 5.24329329]
[80.16829681 19.37232208]
[85.20521545 33.50135422]
[90.41225433 38.74620819]
[90.21023560 47.87840652]
[95.03623199 62.08086014]
[99.86222839 76.28331757]
[104.68823242 90.48577118]
[110.24745178 104.41757202]
[116.52481842 118.04088593]
[122.80217743 131.66419983]
[135.60459900 140.95982361]
[133.90367126 155.75698853]
[140.18103027 169.38031006]
[152.98344421 178.67591858]
[151.28251648 193.47308350]
[157.55987549 207.09640503]
[163.83723450 220.71972656]
[170.11459351 234.34303284]
[176.54812622 240.82743835]
[176.38230896 248.21623230]
[182.45614624 261.93148804]
[186.67405701 265.00662231]
[189.05276489 268.99346924]
[189.55297852 273.03881836]
[188.47972107 276.39746094]
[193.93507385 290.37026978]
[199.39042664 304.34304810]
[214.25894165 308.37213135]
[223.79257202 320.24493408]
[224.49867249 335.27706909]
[216.31578064 347.69393921]
[221.77113342 361.66671753]
[227.22648621 375.63952637]
[232.68185425 389.61233521]
[238.13720703 403.58511353]
[243.59255981 417.55792236]
[258.22442627 414.13897705]
[273.19393921 412.83728027]
[288.19635010 413.67926025]
[302.92617798 416.64782715]
[317.08358765 421.68255615]
[330.38037109 428.68090820]
[342.54574585 437.50042725]
[353.33212280 447.96154785]
[362.51986694 459.85128784]
[369.92190552 472.92761230]
[375.38760376 486.92431641]
[378.80563354 501.55639648]
[380.10641479 516.52600098]
[379.26348877 531.52832031]
[376.29400635 546.25799561]
[371.25842285 560.41510010]
[364.25924683 573.71142578]
[355.43896484 585.87628174]
[344.97717285 596.66198730]
[333.08685303 605.84899902]
[320.01007080 613.25024414]
[306.01306152 618.71502686]
[291.38076782 622.13214111]
[276.41110229 623.43200684]
[261.40881348 622.58819580]
[246.67932129 619.61779785]
[232.52253723 614.58129883]
[219.22663879 607.58129883]
[207.06233215 598.76031494]
[196.27726746 588.29785156]
[187.09098816 576.40692139]
[179.69055176 563.32971191]
[174.22660828 549.33233643]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 177]
[10 176]
[11 175]
[12 174]
[13 173]
[14 172]
[18 168]
[19 167]
[20 166]
[21 162]
[22 161]
[23 159]
[24 158]
[25 157]
[26 156]
[28 154]
[29 153]
[31 151]
[32 150]
[33 149]
[41 148]
[42 147]
[43 146]
[44 145]
[45 143]
[46 142]
[47 141]
[48 140]
[49 139]
[50 138]
[66 137]
[67 136]
[68 135]
[69 133]
[70 132]
[71 131]
[72 130]
[73 124]
[74 123]
[75 122]
[89 121]
[90 120]
[91 119]
[92 118]
[93 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
