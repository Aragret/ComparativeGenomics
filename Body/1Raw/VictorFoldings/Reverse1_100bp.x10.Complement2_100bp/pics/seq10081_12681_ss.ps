%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[22.86954880 494.37670898]
[23.84730530 479.10244751]
[31.82126045 466.03820801]
[44.95906067 458.18603516]
[44.06624603 443.21261597]
[43.17342758 428.23922729]
[39.63737488 421.74935913]
[42.38047409 413.03652954]
[34.08258820 400.66744995]
[41.19596100 386.53555298]
[40.52617645 371.55050659]
[39.85639191 356.56549072]
[33.78022385 370.27972412]
[24.52452087 382.08361816]
[12.65527058 391.25534058]
[-1.10171521 397.23410034]
[-15.90519333 399.65423584]
[-30.84992409 398.36776733]
[-45.02203369 393.45336914]
[-57.55488968 385.21154785]
[-67.68210602 374.14630127]
[-74.78439331 360.93429565]
[-78.42745209 346.38339233]
[-78.38850403 331.38345337]
[-74.66992950 316.85168457]
[-67.49912262 303.67672729]
[-57.31458282 292.66424561]
[-44.73909378 284.48760986]
[-30.54165649 279.64688110]
[-15.59044552 278.43804932]
[-0.79973531 280.93502808]
[12.92601681 286.98510742]
[24.74747658 296.21838379]
[33.94175720 308.07019043]
[39.94662094 321.81579590]
[42.39487457 336.61465454]
[46.79587173 322.27481079]
[51.19687271 307.93496704]
[55.59786987 293.59512329]
[59.99886703 279.25527954]
[56.33626556 264.81802368]
[67.78201294 253.89530945]
[72.18301392 239.55546570]
[76.58401489 225.21560669]
[79.57878876 210.51760864]
[81.13931274 195.59899902]
[82.69982910 180.68040466]
[84.26035309 165.76179504]
[85.82087708 150.84318542]
[83.56275177 146.63487244]
[83.92429352 140.96333313]
[87.65641785 135.50598145]
[89.66043091 120.64045715]
[91.66445160 105.77492523]
[89.53479004 98.00079346]
[93.81055450 90.70362854]
[96.03567505 75.86958313]
[94.30358887 71.88789368]
[93.96289062 67.95744324]
[94.82662201 64.50934601]
[96.58702087 61.86972046]
[98.86021423 60.22937012]
[101.96431732 45.55406952]
[105.06842804 30.87876701]
[108.17253876 16.20346451]
[111.16731262 1.50545955]
[114.05258942 -13.21443176]
[116.93785858 -27.93432236]
[110.40298462 -39.05449677]
[113.10917664 -51.25532913]
[123.07320404 -58.11423874]
[126.17731476 -72.78954315]
[129.28143311 -87.46484375]
[132.38554382 -102.14014435]
[135.48965454 -116.81544495]
[138.59375000 -131.49075317]
[141.69786072 -146.16604614]
[144.58314514 -160.88594055]
[147.24893188 -175.64715576]
[149.91473389 -190.40837097]
[152.58052063 -205.16960144]
[150.70803833 -211.51036072]
[152.10859680 -217.01812744]
[155.55171204 -220.32780457]
[158.65582275 -235.00309753]
[161.75993347 -249.67840576]
[164.86404419 -264.35369873]
[167.96815491 -279.02902222]
[171.07226562 -293.70431519]
[160.85110474 -305.22967529]
[159.39335632 -320.38647461]
[167.04943848 -333.34210205]
[180.70281982 -339.23471069]
[183.80693054 -353.91003418]
[185.92155457 -368.76022339]
[187.03720093 -383.71868896]
[188.15286255 -398.67712402]
[189.26850891 -413.63558960]
[175.18975830 -419.13833618]
[163.35949707 -428.54769897]
[154.82965088 -441.02700806]
[150.35868835 -455.46661377]
[150.34417725 -470.58255005]
[154.78739929 -485.03070068]
[163.29325867 -497.52636719]
[175.10543823 -506.95843506]
[189.17358398 -512.48822021]
[204.24679565 -513.62402344]
[218.98474121 -510.26480103]
[232.07695007 -502.70932007]
[242.35926819 -491.62936401]
[248.91740417 -478.01019287]
[251.16821289 -463.06277466]
[248.91154480 -448.11624146]
[242.34806824 -434.49960327]
[232.06140137 -423.42370605]
[218.96623230 -415.87335205]
[204.22695923 -412.51992798]
[203.11131287 -397.56149292]
[201.99566650 -382.60302734]
[200.88002014 -367.64456177]
[211.04495239 -378.67517090]
[225.53260803 -382.56204224]
[239.85382080 -378.10079956]
[249.57102966 -366.67382812]
[251.67321777 -351.82183838]
[245.50901794 -338.14697266]
[232.98847961 -329.88644409]
[217.99121094 -329.59994507]
[205.16429138 -337.37619019]
[198.48223877 -350.80590820]
[195.37812805 -336.13061523]
[205.47605896 -325.21411133]
[207.23039246 -310.26800537]
[199.76017761 -296.99966431]
[185.74757385 -290.60018921]
[182.64346313 -275.92489624]
[179.53935242 -261.24960327]
[176.43524170 -246.57429504]
[173.33113098 -231.89898682]
[170.22702026 -217.22369385]
[167.34175110 -202.50379944]
[164.67594910 -187.74258423]
[162.01014709 -172.98136902]
[159.34436035 -158.22015381]
[161.28323364 -153.85554504]
[160.50085449 -148.22660828]
[156.37316895 -143.06193542]
[153.26905823 -128.38664246]
[150.16494751 -113.71133423]
[147.06083679 -99.03603363]
[143.95672607 -84.36073303]
[140.85261536 -69.68543243]
[137.74850464 -55.01012802]
[144.07917786 -38.64279175]
[131.65774536 -25.04905128]
[128.77247620 -10.32915878]
[125.88720703 4.39073229]
[127.68540192 11.55929470]
[122.84784698 19.30757332]
[119.74373627 33.98287582]
[116.63962555 48.65818024]
[113.53551483 63.33348083]
[110.86972046 78.09469604]
[108.64459991 92.92874146]
[106.52997589 107.77893829]
[104.52596283 122.64447021]
[102.52194977 137.50999451]
[100.73948669 152.40371704]
[99.17896271 167.32231140]
[97.61843872 182.24092102]
[96.05791473 197.15953064]
[94.49739075 212.07812500]
[103.63673401 200.18391418]
[116.78472900 192.96379089]
[131.72570801 191.63447571]
[145.94186401 196.41999817]
[157.03750610 206.51388550]
[163.14283752 220.21516418]
[163.22898865 235.21492004]
[157.28146362 248.98542786]
[146.30250549 259.20611572]
[132.14227295 264.15463257]
[117.18700409 262.99703979]
[103.95693207 255.92842102]
[94.68155670 244.13998413]
[90.92385864 229.61660767]
[86.52285767 243.95645142]
[82.12186432 258.29629517]
[85.46967316 273.75924683]
[74.33871460 283.65628052]
[69.93771362 297.99612427]
[65.53672028 312.33596802]
[61.13571930 326.67581177]
[56.73472214 341.01565552]
[54.84143066 355.89569092]
[55.51121521 370.88073730]
[56.18099976 385.86578369]
[64.52679443 399.30670166]
[57.36551285 412.36676025]
[58.14683533 427.34640503]
[59.03964996 442.31979370]
[59.93246460 457.29321289]
[73.91026306 463.52856445]
[83.38015747 475.55270386]
[86.16603851 490.60253906]
[81.62773132 505.21972656]
[70.80810547 516.04534912]
[56.19343567 520.59179688]
[41.14205933 517.81427002]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 203]
[5 202]
[6 201]
[8 200]
[10 198]
[11 197]
[12 196]
[36 195]
[37 194]
[38 193]
[39 192]
[40 191]
[42 189]
[43 188]
[44 187]
[45 173]
[46 172]
[47 171]
[48 170]
[49 169]
[52 168]
[53 167]
[54 166]
[56 165]
[57 164]
[62 163]
[63 162]
[64 161]
[65 160]
[66 158]
[67 157]
[68 156]
[71 154]
[72 153]
[73 152]
[74 151]
[75 150]
[76 149]
[77 148]
[78 145]
[79 144]
[80 143]
[81 142]
[84 141]
[85 140]
[86 139]
[87 138]
[88 137]
[89 136]
[93 132]
[94 131]
[95 121]
[96 120]
[97 119]
[98 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
