%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[10.71115017 513.22784424]
[6.31331301 527.64160156]
[-1.29053724 540.65228271]
[-11.69033432 551.55828857]
[-24.32523155 559.77148438]
[-38.51384354 564.84887695]
[-53.49099350 566.51666260]
[-68.44898987 564.68499756]
[-82.58116150 559.45257568]
[-95.12537384 551.10156250]
[-105.40514374 540.08233643]
[-112.86608887 526.98913574]
[-117.10585022 512.52813721]
[-117.89579010 497.47912598]
[-115.19329834 482.65368652]
[-109.14411926 468.85137939]
[-100.07448578 456.81649780]
[-88.47350311 447.19808960]
[-74.96679688 440.51483154]
[-60.28276825 437.12719727]
[-45.21331406 437.21786499]
[-41.67364120 422.64147949]
[-38.13396835 408.06509399]
[-34.59429550 393.48873901]
[-31.05462456 378.91235352]
[-27.51495171 364.33596802]
[-23.97527885 349.75961304]
[-37.31533813 356.61837769]
[-51.63959885 352.16693115]
[-58.74247742 338.95520020]
[-54.55512238 324.55154419]
[-41.47623825 317.20697021]
[-26.99800491 321.12878418]
[-19.41434860 334.06948853]
[-14.58835030 319.86703491]
[-9.76235294 305.66458130]
[-14.82608891 294.67889404]
[-10.92170525 282.80709839]
[0.37583056 276.58389282]
[5.41274691 262.45486450]
[10.44966316 248.32582092]
[15.48657894 234.19679260]
[20.52349472 220.06776428]
[8.63332176 229.21237183]
[-6.02902985 232.37709045]
[-20.63248825 228.95086670]
[-32.35735703 219.59526062]
[-38.93974304 206.11666870]
[-39.10869217 191.11763000]
[-32.83158875 177.49418640]
[-21.32043457 167.87684631]
[-6.79785872 164.12254333]
[7.93205929 166.95617676]
[20.02520180 175.83062744]
[27.14657402 189.03237915]
[27.92093277 204.01362610]
[35.38867569 191.00466919]
[42.85641479 177.99572754]
[50.32415771 164.98677063]
[49.76099777 161.50607300]
[50.85576248 157.57969666]
[53.79956818 153.98980713]
[58.42697525 151.57440186]
[66.46814728 138.91186523]
[74.50932312 126.24934387]
[82.55049133 113.58682251]
[90.59166718 100.92429352]
[90.63758850 95.67912292]
[93.61901855 90.83305359]
[99.06550598 88.00945282]
[107.48012543 75.59195709]
[115.89474487 63.17445755]
[124.30935669 50.75696182]
[132.72398376 38.33946609]
[141.13859558 25.92197227]
[149.55322266 13.50447655]
[157.96783447 1.08698130]
[165.72422791 -11.75195885]
[172.80133057 -24.97748756]
[179.87843323 -38.20301437]
[186.85688782 -51.48086166]
[193.73629761 -64.81028748]
[200.61570740 -78.13971710]
[204.37200928 -92.66178131]
[204.81861877 -107.65512848]
[205.26522827 -122.64847565]
[205.71183777 -137.64183044]
[206.15843201 -152.63517761]
[206.60504150 -167.62852478]
[194.49830627 -177.15391541]
[190.37010193 -191.81036377]
[195.60183716 -205.92039490]
[207.99064636 -214.14569092]
[208.43725586 -229.13903809]
[208.88386536 -244.13238525]
[209.33045959 -259.12573242]
[194.96568298 -263.79797363]
[182.49989319 -272.32913208]
[172.94360352 -284.02758789]
[167.07153320 -297.94503784]
[165.35969543 -312.95324707]
[167.94685364 -327.83557129]
[174.62329102 -341.38555908]
[184.84776306 -352.50476074]
[197.79142761 -360.29180908]
[212.40499878 -364.11544800]
[227.50382996 -363.66567993]
[241.86390686 -358.97903442]
[254.32112122 -350.43536377]
[263.86566162 -338.72729492]
[269.72372437 -324.80395508]
[271.42050171 -309.79403687]
[268.81838989 -294.91430664]
[262.12835693 -281.37106323]
[251.89270020 -270.26211548]
[238.94122314 -262.48806763]
[224.32382202 -258.67913818]
[223.87721252 -243.68577576]
[223.43060303 -228.69242859]
[222.98399353 -213.69908142]
[234.86126709 -204.75097656]
[239.24388123 -190.35456848]
[234.25062561 -175.96981812]
[221.59838867 -167.18191528]
[221.15179443 -152.18856812]
[220.70518494 -137.19522095]
[220.25857544 -122.20187378]
[219.81196594 -107.20851898]
[219.36537170 -92.21517181]
[226.42343140 -105.45086670]
[235.89675903 -117.08083344]
[247.43116760 -126.67028809]
[260.59542847 -133.86070251]
[274.89739990 -138.38327026]
[289.80239868 -140.06890869]
[304.75314331 -138.85461426]
[319.19076538 -134.78575134]
[332.57543945 -128.01446533]
[344.40679932 -118.79389191]
[354.24252319 -107.46875763]
[361.71487427 -94.46245575]
[366.54449463 -80.26123810]
[368.55087280 -65.39602661]
[367.65893555 -50.42256927]
[363.90206909 -35.90065765]
[357.42071533 -22.37320518]
[348.45715332 -10.34594536]
[337.34655762 -0.26852694]
[324.50424194 7.48229885]
[310.41036987 12.61676216]
[295.59182739 14.94290638]
[280.60263062 14.37376690]
[266.00317383 10.93062305]
[252.33921814 4.74219799]
[240.12164307 -3.96014929]
[229.80720520 -14.85107517]
[221.78150940 -27.52341461]
[216.34460449 -41.50340271]
[213.69975281 -56.26838684]
[213.94514465 -71.26030731]
[207.06573486 -57.93087769]
[200.18632507 -44.60144806]
[199.91204834 -37.21588135]
[193.10395813 -31.12590981]
[186.02685547 -17.90038109]
[178.94975281 -4.67485380]
[193.28019714 -9.10637760]
[207.15476990 -3.40581679]
[214.23019409 9.82060909]
[211.27168274 24.52595711]
[199.63183594 33.98714066]
[184.63223267 33.87863159]
[173.13047791 24.25004005]
[170.38533020 9.50160027]
[161.97071838 21.91909599]
[153.55609131 34.33658981]
[145.14147949 46.75408554]
[136.72685242 59.17158127]
[128.31224060 71.58908081]
[119.89762115 84.00657654]
[111.48300171 96.42406464]
[103.25418854 108.96546936]
[95.21302032 121.62799072]
[87.17184448 134.29051208]
[79.13067627 146.95304871]
[71.08950043 159.61557007]
[63.33311081 172.45451355]
[55.86536789 185.46345520]
[48.39762497 198.47241211]
[40.92988586 211.48136902]
[34.65252304 225.10467529]
[29.61560822 239.23371887]
[24.57869339 253.36274719]
[19.54177666 267.49176025]
[14.50485992 281.62078857]
[18.24182701 299.65179443]
[4.44010305 310.49057007]
[-0.38589469 324.69302368]
[-5.21189213 338.89547729]
[-9.39890385 353.29928589]
[-12.93857574 367.87564087]
[-16.47824860 382.45202637]
[-20.01792145 397.02841187]
[-23.55759239 411.60476685]
[-27.09726524 426.18115234]
[-30.63693810 440.75753784]
[-17.20421410 447.58822632]
[-5.70923328 457.33309937]
[3.22809577 469.46655273]
[9.12579346 483.33428955]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 206]
[22 205]
[23 204]
[24 203]
[25 202]
[26 201]
[27 200]
[34 199]
[35 198]
[36 197]
[39 195]
[40 194]
[41 193]
[42 192]
[43 191]
[56 190]
[57 189]
[58 188]
[59 187]
[63 186]
[64 185]
[65 184]
[66 183]
[67 182]
[70 181]
[71 180]
[72 179]
[73 178]
[74 177]
[75 176]
[76 175]
[77 174]
[78 166]
[79 165]
[80 164]
[81 162]
[82 161]
[83 160]
[84 129]
[85 128]
[86 127]
[87 126]
[88 125]
[89 124]
[93 120]
[94 119]
[95 118]
[96 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
