%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUACAAACCCAGACUCAAAUAUAUAGUGUCACUCUUAAGAUACUACCUGGUACAUUGCUUGUUACGAUGUCCCUACUUAUAAUACCUCUUCAUCAGAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[207.46607971 405.67779541]
[216.45530701 393.62832642]
[227.26110840 383.17694092]
[239.60356140 374.59439087]
[233.12405396 361.06607056]
[226.64456177 347.53771973]
[220.16506958 334.00936890]
[205.30409241 333.00085449]
[192.86045837 324.63357544]
[186.23194885 311.07150269]
[187.28871155 295.91302490]
[195.84683228 283.23602295]
[189.36732483 269.70770264]
[182.88783264 256.17935181]
[176.40834045 242.65100098]
[169.92884827 229.12265015]
[163.44934082 215.59429932]
[156.17611694 202.47561646]
[148.13494873 189.81309509]
[140.09376526 177.15055847]
[125.54623413 174.16648865]
[117.21096039 161.43943787]
[120.43956757 146.20086670]
[112.39839935 133.53834534]
[104.35722351 120.87582397]
[98.11785126 116.91449738]
[96.29222107 107.96436310]
[93.39846039 107.00745392]
[90.78893280 104.97647858]
[88.86211395 101.97467804]
[87.97277069 98.25106049]
[88.37979126 94.18076324]
[81.30268860 80.95523834]
[74.22558594 67.72970581]
[67.14847565 54.50418091]
[60.07137299 41.27865219]
[46.08612442 41.55360794]
[33.40728760 35.80353546]
[24.48562050 25.20249367]
[21.01858330 11.85600471]
[23.62760162 -1.61699581]
[31.74754715 -12.59805107]
[24.86813545 -25.92748070]
[10.08096600 -30.82415199]
[3.29414654 -44.44008636]
[8.05350304 -58.50721741]
[1.33684242 -64.69787598]
[1.17256451 -72.08670807]
[-5.50763035 -85.51708221]
[-12.18782520 -98.94746399]
[-18.86801910 -112.37783813]
[-25.54821396 -125.80821228]
[-38.62172699 -134.71853638]
[-37.36211395 -149.55978394]
[-37.31521606 -134.55986023]
[-40.68248367 -119.94268799]
[-47.28728104 -106.47507477]
[-56.78313065 -94.86349487]
[-68.67189789 -85.71706390]
[-82.32993317 -79.51559448]
[-97.04074860 -76.58439636]
[-112.03264618 -77.07723999]
[-126.51918793 -80.96826935]
[-139.74043274 -88.05336761]
[-151.00283813 -97.96086121]
[-159.71556091 -110.17102814]
[-165.42160034 -124.04335022]
[-167.82157898 -138.85011292]
[-166.78964233 -153.81457520]
[-162.37989807 -168.15173340]
[-154.82366943 -181.10948181]
[-144.51736450 -192.00810242]
[-132.00160217 -200.27586365]
[-117.93296051 -205.47906494]
[-103.04943848 -207.34474182]
[-88.13179779 -205.77502441]
[-73.96258545 -200.85227966]
[-61.28509903 -192.83471680]
[-50.76436615 -182.14292908]
[-42.95158768 -169.33628845]
[-44.28982162 -184.27647400]
[-45.62805939 -199.21665955]
[-46.96629333 -214.15684509]
[-48.30452728 -229.09703064]
[-49.64276123 -244.03721619]
[-50.98099518 -258.97741699]
[-52.31922913 -273.91760254]
[-53.65746307 -288.85778809]
[-68.60601044 -290.65628052]
[-82.85383606 -295.52383423]
[-95.77808380 -303.24768066]
[-106.81376648 -313.49011230]
[-115.47845459 -325.80337524]
[-121.39335632 -339.64923096]
[-124.29989624 -354.42236328]
[-124.07102203 -369.47698975]
[-120.71673584 -384.15493774]
[-114.38366699 -397.81460571]
[-105.34867859 -409.85879517]
[-94.00673676 -419.76101685]
[-80.85366821 -427.08837891]
[-66.46445465 -431.52056885]
[-51.46814728 -432.86383057]
[-36.52030945 -431.05944824]
[-22.27439880 -426.18627930]
[-9.35318756 -418.45736694]
[1.67846632 -408.21060181]
[10.33830547 -395.89392090]
[16.24775887 -382.04574585]
[19.14849091 -367.27145386]
[18.91369247 -352.21691895]
[15.55363178 -337.54028320]
[9.21519279 -323.88314819]
[0.17546605 -311.84249878]
[-11.17037010 -301.94473267]
[-24.32632637 -294.62252808]
[-38.71727753 -290.19601440]
[-37.37904358 -275.25582886]
[-36.04080963 -260.31564331]
[-34.70257568 -245.37545776]
[-33.36434174 -230.43527222]
[-32.02610779 -215.49508667]
[-30.68787193 -200.55490112]
[-29.34963799 -185.61471558]
[-28.01140404 -170.67453003]
[-23.93173790 -156.23997498]
[-11.33603668 -148.29028320]
[-12.11783791 -132.48840332]
[-5.43764353 -119.05802917]
[1.24255121 -105.62765503]
[7.92274570 -92.19728088]
[14.60294056 -78.76689911]
[21.38293266 -65.38662720]
[35.60623169 -61.11658478]
[42.77281952 -47.69664764]
[38.19756317 -32.80689240]
[45.07697678 -19.47746277]
[61.23178864 -19.11067009]
[75.07698059 -10.59794807]
[82.78408813 3.81792545]
[82.16603851 20.24697113]
[73.29689789 34.20154953]
[80.37400818 47.42707443]
[87.45111084 60.65260315]
[94.52821350 73.87812805]
[101.60532379 87.10366058]
[109.07306671 100.11260986]
[117.01974487 112.83464813]
[125.06092072 125.49716949]
[133.10209656 138.15969849]
[148.26715088 141.71759033]
[156.24166870 154.67375183]
[152.75630188 169.10939026]
[160.79747009 181.77191162]
[168.83863831 194.43443298]
[171.12205505 179.60925293]
[181.60118103 168.87669373]
[196.36758423 166.23974609]
[209.91374207 172.68191528]
[217.18728638 185.80043030]
[215.47535706 200.70242310]
[205.41645813 211.82980347]
[190.76232910 215.03234863]
[176.97769165 209.11480713]
[183.45718384 222.64315796]
[189.93669128 236.17150879]
[196.41618347 249.69984436]
[202.89567566 263.22817993]
[209.37516785 276.75653076]
[224.61703491 278.03436279]
[237.09049988 286.71246338]
[243.50285339 300.37802124]
[242.22262573 315.31848145]
[233.69342041 327.52987671]
[240.17291260 341.05822754]
[246.65240479 354.58654785]
[253.13189697 368.11489868]
[267.55554199 363.87762451]
[282.47213745 362.00909424]
[297.49530029 362.55767822]
[312.23590088 365.50915527]
[326.31207275 370.78710938]
[339.35928345 378.25482178]
[351.03955078 387.71884155]
[361.05029297 398.93405151]
[369.13226318 411.60995483]
[375.07608032 425.41818237]
[378.72778320 440.00106812]
[379.99282837 454.98092651]
[378.83840942 469.96969604]
[375.29443359 484.57916260]
[369.45269775 498.43090820]
[361.46450806 511.16610718]
[351.53683472 522.45489502]
[339.92675781 532.00488281]
[326.93502808 539.56866455]
[312.89816284 544.95037842]
[298.17977905 548.01062012]
[283.16107178 548.67010498]
[268.23107910 546.91168213]
[253.77655029 542.78100586]
[240.17187500 536.38500977]
[227.76942444 527.88940430]
[216.89048767 517.51422119]
[207.81681824 505.52816772]
[200.78347778 492.24176025]
[195.97264099 477.99917603]
[193.50891113 463.16925049]
[193.45610046 448.13616943]
[195.81559753 433.28933716]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 177]
[5 176]
[6 175]
[7 174]
[12 169]
[13 168]
[14 167]
[15 166]
[16 165]
[17 164]
[18 155]
[19 154]
[20 153]
[23 150]
[24 149]
[25 148]
[27 147]
[32 146]
[33 145]
[34 144]
[35 143]
[36 142]
[42 137]
[43 136]
[46 133]
[48 132]
[49 131]
[50 130]
[51 129]
[52 128]
[54 126]
[80 125]
[81 124]
[82 123]
[83 122]
[84 121]
[85 120]
[86 119]
[87 118]
[88 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
