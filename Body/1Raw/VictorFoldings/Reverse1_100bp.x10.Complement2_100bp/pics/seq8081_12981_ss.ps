%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[-6.88520098 480.20666504]
[-0.94156820 494.02380371]
[2.43919754 508.68020630]
[3.14841914 523.70477295]
[1.16329753 538.61444092]
[-3.45235348 552.92999268]
[-10.55016041 566.19128418]
[-19.90195656 577.97192383]
[-31.20712280 587.89324951]
[-44.10224152 595.63635254]
[-58.17279053 600.95233154]
[-72.96646118 603.67022705]
[-88.00769806 603.70275879]
[-102.81298065 601.04882812]
[-116.90638733 595.79376221]
[-129.83486938 588.10650635]
[-141.18284607 578.23419189]
[-150.58549500 566.49407959]
[-157.74058533 553.26361084]
[-162.41810608 538.96813965]
[-164.46768188 524.06719971]
[-163.82344055 509.03970337]
[-160.50608826 494.36883545]
[-154.62226868 480.52612305]
[-146.36111450 467.95660400]
[-135.98818970 457.06430054]
[-123.83693695 448.19937134]
[-110.29797363 441.64678955]
[-95.80652618 437.61718750]
[-80.82843018 436.24011230]
[-65.84516907 437.55978394]
[-51.33838654 441.53384399]
[-44.85889053 428.00552368]
[-46.33932877 413.18466187]
[-33.39992905 404.08068848]
[-34.88036346 389.25982666]
[-21.94096375 380.15585327]
[-15.46146774 366.62750244]
[-8.98197174 353.09915161]
[-2.50247574 339.57083130]
[-3.98291349 324.74996948]
[8.95648861 315.64599609]
[7.47605085 300.82513428]
[20.41545296 291.72116089]
[26.89494896 278.19281006]
[33.37444305 264.66445923]
[39.85393906 251.13612366]
[45.82550430 237.37602234]
[51.28086090 223.40322876]
[56.73621750 209.43041992]
[62.19157410 195.45762634]
[67.64693451 181.48483276]
[72.68384552 167.35580444]
[77.29785919 153.08306885]
[81.59197998 138.71084595]
[85.56407928 124.24633026]
[89.53617096 109.78180695]
[86.18740082 96.20692444]
[95.99930573 86.24610138]
[92.19258881 70.88968658]
[103.02394104 60.66564178]
[106.99604034 46.20111847]
[97.00411224 30.10528564]
[101.86689758 12.12567997]
[118.04527283 3.55971026]
[121.58494568 -11.01666546]
[125.12461853 -25.59304047]
[120.86237335 -40.82930756]
[131.38452148 -51.37130737]
[134.92419434 -65.94768524]
[138.46386719 -80.52405548]
[140.90959167 -95.32332611]
[142.24781799 -110.26351166]
[143.58605957 -125.20369720]
[144.92428589 -140.14389038]
[146.26252747 -155.08406067]
[136.49377441 -164.35694885]
[133.88734436 -177.37297058]
[139.17507935 -189.33633423]
[150.22154236 -195.96995544]
[151.78207397 -210.88856506]
[153.34259033 -225.80717468]
[147.08297729 -240.33740234]
[156.10237122 -252.19065857]
[157.66288757 -267.10928345]
[159.22341919 -282.02786255]
[157.09632874 -286.79470825]
[157.01821899 -291.43658447]
[158.59837341 -295.19400024]
[161.20126343 -297.57250977]
[163.42639160 -312.40655518]
[165.65150452 -327.24060059]
[167.87661743 -342.07464600]
[153.61633301 -346.85119629]
[140.40223694 -354.03161621]
[128.63586426 -363.39770508]
[118.67479706 -374.66482544]
[110.82174683 -387.49063110]
[105.31534576 -401.48529053]
[102.32293701 -416.22354126]
[101.93544769 -431.25753784]
[104.16466522 -446.13040161]
[108.94283295 -460.39013672]
[116.12475586 -473.60342407]
[125.49217987 -485.36874390]
[136.76045227 -495.32852173]
[149.58711243 -503.18011475]
[163.58241272 -508.68493652]
[178.32101440 -511.67568970]
[193.35505676 -512.06146240]
[208.22766113 -509.83056641]
[222.48684692 -505.05078125]
[235.69932556 -497.86734009]
[247.46357727 -488.49859619]
[257.42208862 -477.22918701]
[265.27221680 -464.40164185]
[270.77545166 -450.40573120]
[273.76452637 -435.66677856]
[274.14859009 -420.63269043]
[271.91601562 -405.76034546]
[267.13461304 -391.50167847]
[259.94967651 -378.29003906]
[250.57958984 -366.52685547]
[239.30906677 -356.56961060]
[226.48062134 -348.72091675]
[212.48408508 -343.21929932]
[197.74479675 -340.23190308]
[182.71066284 -339.84951782]
[180.48554993 -325.01547241]
[178.26043701 -310.18142700]
[176.03530884 -295.34738159]
[174.14202881 -280.46734619]
[172.58149719 -265.54873657]
[171.02098083 -250.63014221]
[177.39221191 -237.16697693]
[168.26119995 -224.24664307]
[166.70066833 -209.32803345]
[165.14015198 -194.40943909]
[176.27899170 -181.80923462]
[174.82980347 -164.71495056]
[161.20271301 -153.74583435]
[159.86447144 -138.80564880]
[158.52624512 -123.86546326]
[157.18800354 -108.92527771]
[155.84977722 -93.98509216]
[165.74436951 -105.25881958]
[179.91816711 -110.16835022]
[194.66616821 -107.43035126]
[206.13327026 -97.76052094]
[211.32200623 -83.68653870]
[208.87605286 -68.88730621]
[199.43478394 -57.23130417]
[185.46611023 -51.76538849]
[170.62141418 -53.91833115]
[158.78108215 -63.12736511]
[153.04023743 -76.98438263]
[149.50056458 -62.40800858]
[145.96089172 -47.83163452]
[150.47631836 -33.63796616]
[139.70098877 -22.05336761]
[136.16131592 -7.47699261]
[132.62164307 7.09938288]
[140.52818298 15.32452583]
[143.51327515 26.46027374]
[140.72361755 37.77008057]
[132.73992920 46.41655350]
[121.46056366 50.17321396]
[117.48846436 64.63774109]
[121.57929230 78.95955658]
[110.46382904 90.21819305]
[113.81259918 103.79307556]
[104.00069427 113.75389862]
[100.02860260 128.21842957]
[96.05650330 142.68295288]
[97.37790680 147.73280334]
[96.69812012 152.32531738]
[94.52646637 155.77479553]
[91.57058716 157.69708252]
[86.95658112 171.96980286]
[88.01628113 176.18063354]
[87.71156311 180.11402893]
[86.29718018 183.37515259]
[84.12995911 185.69242859]
[81.61972809 186.94018555]
[76.16437531 200.91297913]
[70.70901489 214.88578796]
[65.25365448 228.85858154]
[59.79830170 242.83137512]
[74.37460327 239.29141235]
[86.32339478 248.35929871]
[86.83645630 263.35052490]
[75.53559113 273.21411133]
[60.75136566 270.67898560]
[53.38228607 257.61563110]
[46.90279007 271.14395142]
[40.42329407 284.67230225]
[33.94379807 298.20065308]
[34.96078110 313.98913574]
[22.48483467 322.12548828]
[23.50181580 337.91397095]
[11.02587032 346.05032349]
[4.54637384 359.57867432]
[-1.93312180 373.10699463]
[-8.41261768 386.63534546]
[-7.39563704 402.42382812]
[-19.87158203 410.56018066]
[-18.85460091 426.34866333]
[-31.33054543 434.48501587]
[-37.81004333 448.01336670]
[-25.62056923 456.82565308]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 209]
[33 208]
[35 206]
[37 204]
[38 203]
[39 202]
[40 201]
[42 199]
[44 197]
[45 196]
[46 195]
[47 194]
[48 188]
[49 187]
[50 186]
[51 185]
[52 184]
[53 179]
[54 178]
[55 174]
[56 173]
[57 172]
[59 170]
[61 168]
[62 167]
[65 162]
[66 161]
[67 160]
[69 158]
[70 157]
[71 156]
[72 145]
[73 144]
[74 143]
[75 142]
[76 141]
[80 138]
[81 137]
[82 136]
[84 134]
[85 133]
[86 132]
[90 131]
[91 130]
[92 129]
[93 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
