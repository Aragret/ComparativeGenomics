%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUAAUCCCCCAAUCAAAACGCAUAACCCCAGUAACCACAAGAACAUCAACUUUAUGUUGCUACCAAAAAGUAUAGUAACCAGCACCAACAUCAGGCACxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[157.15928650 571.52209473]
[149.42967224 558.65606689]
[142.83471680 545.17315674]
[137.42323303 531.17327881]
[133.23529053 516.76000977]
[130.30189514 502.04003906]
[128.64477539 487.12243652]
[128.27618408 472.11758423]
[129.19885254 457.13659668]
[131.40596008 442.29037476]
[134.88116455 427.68884277]
[139.59872437 413.44012451]
[145.52371216 399.64968872]
[152.61228943 386.41967773]
[160.81193542 373.84799194]
[170.06196594 362.02774048]
[180.29388428 351.04641724]
[191.43193054 340.98535156]
[203.39366150 331.91900635]
[216.09051514 323.91452026]
[209.21109009 310.58511353]
[202.33168030 297.25567627]
[195.45227051 283.92623901]
[188.27690125 270.75378418]
[180.80915833 257.74481201]
[173.34141541 244.73587036]
[165.87368774 231.72691345]
[158.40594482 218.71795654]
[143.60195923 217.31083679]
[132.33190918 207.33836365]
[129.05674744 192.46803284]
[135.23713684 178.35743713]
[127.76938629 165.34848022]
[120.30164337 152.33953857]
[108.71091461 148.87811279]
[102.38294983 138.10125732]
[105.18041229 125.51010895]
[97.90718079 112.39141846]
[98.47769928 127.38056183]
[95.03679657 141.98057556]
[87.83287811 155.13745117]
[77.38598633 165.90139771]
[64.45030975 173.49534607]
[49.95967102 177.37109375]
[34.96017075 177.24885559]
[20.53462982 173.13742065]
[7.72444439 165.33363342]
[-2.54560757 154.40083313]
[-9.53412342 141.12828064]
[-12.73659515 126.47412872]
[-11.92183399 111.49627686]
[-7.14865780 97.27597809]
[1.23835266 84.83982086]
[12.63373280 75.08557892]
[26.21483994 68.71740723]
[41.00124359 66.19504547]
[55.92549515 67.70058441]
[69.91020966 73.12532806]
[81.94580841 82.07765961]
[91.16402435 93.91231537]
[80.91672516 81.85813141]
[86.06143188 67.88024139]
[83.17615509 53.16035461]
[80.29088593 38.44046021]
[77.40560913 23.72056961]
[74.52033997 9.00067902]
[71.63506317 -5.71921253]
[66.38771057 8.33302021]
[55.93674088 19.09300423]
[42.04333496 24.74749565]
[27.04877281 24.34361076]
[13.47990322 17.94941330]
[3.62331724 6.64243650]
[-0.85997587 -7.67189455]
[0.78553694 -22.58136368]
[8.28255749 -35.57346344]
[20.36770821 -44.45879745]
[35.00442505 -47.74003220]
[49.72616577 -44.86421967]
[62.05206299 -36.31598282]
[69.90554047 -23.53429413]
[69.90554047 -38.53429413]
[69.90554047 -53.53429413]
[69.90554047 -68.53429413]
[59.01098633 -79.66741943]
[59.22466660 -94.87955475]
[69.90554047 -105.19723511]
[69.90554047 -120.19723511]
[55.09446716 -122.80554962]
[40.96140671 -127.94634247]
[27.93584061 -135.46337891]
[16.41360474 -145.12821960]
[6.74484253 -156.64715576]
[-0.77661997 -169.67016602]
[-5.92221498 -183.80148315]
[-8.53557396 -198.61166382]
[-8.53727913 -213.65065002]
[-5.92727995 -228.46142578]
[-0.78489017 -242.59390259]
[6.73361826 -255.61862183]
[16.39976692 -267.13977051]
[27.91981125 -276.80722046]
[40.94367218 -284.32720947]
[55.07556915 -289.47119141]
[69.88604736 -292.08285522]
[84.92503357 -292.08285522]
[99.73551178 -289.47119141]
[113.86740875 -284.32720947]
[126.89126587 -276.80722046]
[138.41131592 -267.13977051]
[148.07745361 -255.61862183]
[155.59596252 -242.59390259]
[160.73835754 -228.46142578]
[163.34835815 -213.65065002]
[163.34664917 -198.61166382]
[160.73329163 -183.80148315]
[155.58769226 -169.67016602]
[148.06623840 -156.64715576]
[138.39747620 -145.12821960]
[126.87523651 -135.46337891]
[113.84967041 -127.94634247]
[99.71660614 -122.80554962]
[84.90554047 -120.19723511]
[84.90554047 -105.19723511]
[95.58641052 -94.87955475]
[95.80009460 -79.66741943]
[84.90554047 -68.53429413]
[84.90554047 -53.53429413]
[84.90554047 -38.53429413]
[84.90554047 -23.53429413]
[86.35495758 -8.60448456]
[89.24022675 6.11540651]
[92.12550354 20.83529854]
[95.01077271 35.55518723]
[97.89604950 50.27508163]
[100.78131866 64.99497223]
[110.82224274 75.99629211]
[105.88391113 91.02704620]
[111.02587128 105.11818695]
[118.29910278 118.23687744]
[134.29972839 127.35070038]
[133.31059265 144.87179565]
[140.77833557 157.88073730]
[148.24607849 170.88969421]
[163.54777527 172.66859436]
[174.73715210 182.99578857]
[177.66531372 197.75688171]
[171.41488647 211.25021362]
[178.88262939 224.25917053]
[186.35037231 237.26812744]
[193.81811523 250.27706909]
[201.28585815 263.28604126]
[205.80079651 265.90563965]
[208.58137512 269.62341309]
[209.49972534 273.59475708]
[208.78169250 277.04684448]
[215.66111755 290.37625122]
[222.54052734 303.70568848]
[229.41993713 317.03512573]
[243.29992676 311.32308960]
[257.61959839 306.82543945]
[272.27285767 303.57540894]
[287.15130615 301.59710693]
[302.14471436 300.90515137]
[317.14212036 301.50466919]
[332.03247070 303.39120483]
[346.70550537 306.55084229]
[361.05261230 310.96017456]
[374.96755981 316.58651733]
[388.34732056 323.38821411]
[401.09283447 331.31497192]
[413.10974121 340.30804443]
[424.30908203 350.30087280]
[434.60791016 361.21945190]
[443.92999268 372.98297119]
[452.20629883 385.50430298]
[459.37557983 398.69076538]
[465.38473511 412.44473267]
[470.18927002 426.66436768]
[473.75363159 441.24438477]
[476.05142212 456.07681274]
[477.06561279 471.05191040]
[476.78872681 486.05871582]
[475.22277832 500.98620605]
[472.37939453 515.72375488]
[468.27960205 530.16235352]
[462.95376587 544.19506836]
[456.44134521 557.71801758]
[448.79049683 570.63104248]
[440.05789185 582.83856201]
[430.30819702 594.25012207]
[419.61358643 604.78137207]
[408.05325317 614.35424805]
[395.71276855 622.89788818]
[382.68350220 630.34906006]
[369.06195068 636.65258789]
[354.94891357 641.76177979]
[340.44891357 645.63885498]
[325.66931152 648.25500488]
[310.71951294 649.59100342]
[295.71017456 649.63684082]
[280.75250244 648.39227295]
[265.95718384 645.86645508]
[251.43376160 642.07806396]
[237.28977966 637.05517578]
[223.62994385 630.83502197]
[210.55538940 623.46362305]
[198.16293335 614.99554443]
[186.54431152 605.49346924]
[175.78555298 595.02783203]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 159]
[21 158]
[22 157]
[23 156]
[24 152]
[25 151]
[26 150]
[27 149]
[28 148]
[32 144]
[33 143]
[34 142]
[37 140]
[38 139]
[60 138]
[62 136]
[63 135]
[64 134]
[65 133]
[66 132]
[67 131]
[81 130]
[82 129]
[83 128]
[84 127]
[87 124]
[88 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
