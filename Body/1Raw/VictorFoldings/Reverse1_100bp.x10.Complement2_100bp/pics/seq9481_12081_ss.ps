%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[204.40837097 405.53457642]
[208.06979370 390.97607422]
[213.11924744 376.83895874]
[219.50956726 363.25515747]
[227.18109131 350.35156250]
[236.06219482 338.24859619]
[246.06996155 327.05929565]
[235.90641785 316.02743530]
[225.74287415 304.99554443]
[208.92509460 305.02578735]
[197.05529785 292.63937378]
[197.83120728 275.16317749]
[187.50453186 264.28384399]
[177.17787170 253.40451050]
[166.85119629 242.52517700]
[156.52453613 231.64584351]
[146.19786072 220.76651001]
[135.87118530 209.88717651]
[140.32281494 224.21138000]
[141.74180603 239.14411926]
[140.06784058 254.05041504]
[135.37208557 268.29647827]
[127.85420990 281.27651978]
[117.83388519 292.43862915]
[105.73717499 301.30822754]
[92.07843781 307.50814819]
[77.43844604 310.77474976]
[62.43970871 310.96914673]
[47.71997070 308.08309937]
[33.90512848 302.23928833]
[21.58259201 293.68618774]
[11.27632427 282.78753662]
[3.42455387 270.00671387]
[-1.63885951 255.88714600]
[-3.69861674 241.02923584]
[-2.66713572 226.06474304]
[1.41172433 211.62997437]
[8.36452866 198.33866882]
[17.89563942 186.75601196]
[29.59979057 177.37449646]
[42.97931290 170.59303284]
[57.46530533 166.69995117]
[72.44181824 165.86080933]
[87.27203369 168.11128235]
[101.32537079 173.35568237]
[114.00427246 181.37100220]
[124.76974487 191.81657410]
[119.73282623 177.68754578]
[114.69590759 163.55851746]
[109.65899658 149.42948914]
[104.62207794 135.30046082]
[93.06029510 125.91033936]
[95.71430969 110.31332397]
[90.57234955 96.22218323]
[85.32563019 82.16971588]
[80.07891083 68.11724091]
[68.00332642 57.89516830]
[70.80010986 43.26549911]
[65.55339050 29.21302605]
[60.30667496 15.16055489]
[55.05995560 1.10808396]
[43.67102051 -4.94624519]
[39.59031296 -16.75859451]
[44.48992920 -27.81844711]
[39.45301437 -41.94747925]
[34.41609573 -56.07650757]
[29.37918091 -70.20553589]
[24.13246155 -84.25801086]
[18.67710495 -98.23080444]
[13.22174835 -112.20360565]
[-1.37527966 -108.65251923]
[-16.31538582 -107.07877350]
[-31.33194542 -107.51045990]
[-46.15697479 -109.93986511]
[-60.52589798 -114.32363892]
[-74.18228149 -120.58354950]
[-86.88242340 -128.60787964]
[-98.39966583 -138.25343323]
[-108.52847290 -149.34805298]
[-117.08808899 -161.69375610]
[-123.92574310 -175.07022095]
[-128.91941833 -189.23873901]
[-131.98001099 -203.94642639]
[-133.05287170 -218.93083191]
[-132.11888123 -233.92453003]
[-129.19468689 -248.65995789]
[-124.33248138 -262.87411499]
[-117.61904144 -276.31335449]
[-109.17417145 -288.73782349]
[-99.14859009 -299.92581177]
[-87.72119904 -309.67764282]
[-75.09594727 -317.81930542]
[-61.49813461 -324.20547485]
[-47.17044067 -328.72216797]
[-32.36855698 -331.28881836]
[-17.35664177 -331.85958862]
[-2.40259719 -330.42434692]
[12.22670364 -327.00863647]
[26.27018166 -321.67346191]
[39.47721863 -314.51400757]
[51.61211395 -305.65808105]
[62.45830917 -295.26367188]
[71.82224274 -283.51632690]
[79.53679657 -270.62567139]
[85.46430969 -256.82174683]
[89.49898529 -242.35092163]
[91.56882477 -227.47143555]
[91.63689423 -212.44882202]
[89.70196533 -197.55119324]
[85.79858398 -183.04440308]
[79.99640656 -169.18733215]
[72.39897156 -156.22729492]
[63.14187241 -144.39558411]
[52.39031219 -133.90333557]
[40.33616257 -124.93778992]
[27.19454575 -117.65895844]
[32.64990234 -103.68616486]
[38.10525894 -89.71336365]
[42.04194260 -87.00937653]
[44.32179260 -81.80367279]
[43.50820923 -75.24245453]
[48.54512787 -61.11342239]
[53.58204269 -46.98439407]
[58.61895752 -32.85536575]
[72.58052826 -22.22326279]
[69.11242676 -4.13863420]
[74.35914612 9.91383743]
[79.60586548 23.96630859]
[84.85258484 38.01877975]
[96.55288696 47.23572540]
[94.13138580 62.87052155]
[99.37810516 76.92299652]
[104.62482452 90.97546387]
[110.17043304 96.82514191]
[109.84333801 105.27640533]
[121.76539612 115.67713165]
[118.75110626 130.26354980]
[123.78802490 144.39257812]
[128.82493591 158.52160645]
[133.86186218 172.65063477]
[138.89877319 186.77966309]
[146.75053406 199.56050110]
[157.07719421 210.43983459]
[167.40386963 221.31916809]
[177.73052979 232.19850159]
[188.05720520 243.07783508]
[198.38386536 253.95718384]
[208.71054077 264.83651733]
[222.12586975 263.63513184]
[233.61598206 270.28256226]
[239.09829712 282.15798950]
[236.77474976 294.83200073]
[246.93829346 305.86389160]
[257.10183716 316.89575195]
[269.07226562 307.83679199]
[281.86111450 299.97546387]
[295.34899902 293.38513184]
[309.40997314 288.12734985]
[323.91278076 284.25122070]
[338.72198486 281.79293823]
[353.69931030 280.77542114]
[368.70489502 281.20819092]
[383.59869385 283.08721924]
[398.24157715 286.39495850]
[412.49688721 291.10049438]
[426.23147583 297.15991211]
[439.31710815 304.51666260]
[451.63162231 313.10202026]
[463.06002808 322.83581543]
[473.49560547 333.62719727]
[482.84097290 345.37539673]
[491.00878906 357.97070312]
[497.92288208 371.29553223]
[503.51861572 385.22549438]
[507.74377441 399.63046265]
[510.55892944 414.37597656]
[511.93777466 429.32437134]
[511.86743164 444.33605957]
[510.34857178 459.27087402]
[507.39535522 473.98934937]
[503.03536987 488.35409546]
[497.30932617 502.23098755]
[490.27069092 515.49047852]
[481.98516846 528.00866699]
[472.53015137 539.66876221]
[461.99386597 550.36187744]
[450.47476196 559.98815918]
[438.08032227 568.45770264]
[424.92630005 575.69152832]
[411.13552856 581.62194824]
[396.83679199 586.19372559]
[382.16351318 589.36407471]
[367.25277710 591.10339355]
[352.24377441 591.39556885]
[337.27664185 590.23773193]
[322.49114990 587.64074707]
[308.02529907 583.62890625]
[294.01422119 578.23956299]
[280.58868408 571.52313232]
[267.87405396 563.54229736]
[255.98907471 554.37152100]
[245.04467773 544.09655762]
[235.14308167 532.81317139]
[226.37670898 520.62689209]
[218.82743835 507.65136719]
[212.56573486 494.00781250]
[207.65008545 479.82357788]
[204.12635803 465.23117065]
[202.02748108 450.36676025]
[201.37304688 435.36920166]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 154]
[8 153]
[9 152]
[12 148]
[13 147]
[14 146]
[15 145]
[16 144]
[17 143]
[18 142]
[47 141]
[48 140]
[49 139]
[50 138]
[51 137]
[53 135]
[54 133]
[55 132]
[56 131]
[58 129]
[59 128]
[60 127]
[61 126]
[64 124]
[65 123]
[66 122]
[67 121]
[68 118]
[69 117]
[70 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
