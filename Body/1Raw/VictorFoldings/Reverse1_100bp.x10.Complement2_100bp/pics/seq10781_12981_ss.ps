%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[125.05956268 523.44104004]
[122.46663666 508.23315430]
[128.52836609 494.04656982]
[141.31045532 485.40820312]
[140.86384583 470.41485596]
[140.41725159 455.42150879]
[139.97064209 440.42816162]
[139.52403259 425.43481445]
[139.07742310 410.44143677]
[137.62800598 395.51162720]
[135.18228149 380.71237183]
[132.73655701 365.91308594]
[130.29083252 351.11383057]
[127.84510040 336.31454468]
[125.39937592 321.51528931]
[122.95364380 306.71600342]
[113.24472046 295.42062378]
[118.62838745 280.54354858]
[116.18266296 265.74429321]
[102.83478546 263.94711304]
[90.51801300 258.45660400]
[80.23332214 249.70858765]
[72.81945801 238.40411377]
[68.88455200 225.45312500]
[68.75622559 211.90136719]
[72.45432281 198.84584045]
[79.68856812 187.34606934]
[89.88133240 178.33807373]
[102.21369171 172.55821228]
[100.20967865 157.69268799]
[98.20566559 142.82716370]
[96.20164490 127.96163177]
[94.19763184 113.09610748]
[85.80446625 101.91368866]
[90.93683624 88.90790558]
[88.93282318 74.04238129]
[86.92881012 59.17685318]
[79.77690125 72.36207581]
[67.04250336 80.28894806]
[52.05436707 80.88539124]
[38.73035049 73.99549866]
[30.55331993 61.42028046]
[29.66073036 46.44686127]
[36.28590393 32.98925781]
[48.69703674 24.56525803]
[63.64988708 23.37687111]
[77.23581696 29.73474121]
[85.90318298 41.97610474]
[86.12651062 26.97776794]
[79.28298187 40.32565689]
[69.92515564 52.04875183]
[58.42573929 61.68013000]
[45.24275589 68.83618164]
[30.90128136 73.23187256]
[15.97252941 74.69213104]
[1.05110610 73.15879822]
[-13.26867390 68.69293976]
[-26.41646004 61.47243118]
[-37.86857986 51.78486252]
[-47.16889954 40.01609039]
[-53.94699478 26.63485527]
[-57.93289185 12.17412758]
[-58.96783447 -2.79012632]
[-57.01060486 -17.66188622]
[-52.13915634 -31.84881592]
[-44.54751587 -44.78585815]
[-34.53805542 -55.95772934]
[-22.50945282 -64.91946411]
[-8.94079685 -71.31411743]
[5.62747574 -74.88699341]
[20.61511612 -75.49578094]
[35.42517471 -73.11624146]
[49.46776581 -67.84313965]
[62.18358612 -59.88651657]
[73.06616974 -49.56326675]
[81.68206024 -37.28457260]
[87.68809509 -23.53947830]
[90.84505463 -8.87545490]
[91.02756500 6.11927748]
[97.50706482 -7.40906763]
[103.98655701 -20.93741417]
[110.46605682 -34.46575928]
[116.94554901 -47.99410629]
[115.92856598 -63.78259277]
[128.40451050 -71.91893005]
[134.88400269 -85.44728088]
[141.36351013 -98.97562408]
[147.84300232 -112.50396729]
[154.32249451 -126.03231812]
[144.86918640 -137.96530151]
[141.54789734 -152.75909424]
[144.96513367 -167.46768188]
[154.39094543 -179.18583679]
[167.91403198 -185.62289429]
[182.82913208 -185.55046082]
[189.30862427 -199.07881165]
[195.78811646 -212.60714722]
[202.26762390 -226.13549805]
[208.74711609 -239.66384888]
[215.22660828 -253.19218445]
[202.79029846 -261.62997437]
[191.75056458 -271.82708740]
[182.35400391 -283.55578613]
[174.81056213 -296.55404663]
[169.28874207 -310.53140259]
[165.91192627 -325.17568970]
[164.75553894 -340.15969849]
[165.84542847 -355.14868164]
[169.15724182 -369.80780029]
[174.61697388 -383.80953979]
[182.10266113 -396.84112549]
[191.44709778 -408.61138916]
[202.44148254 -418.85742188]
[214.84022522 -427.35031128]
[228.36631775 -433.90026855]
[242.71760559 -438.36105347]
[257.57345581 -440.63293457]
[272.60198975 -440.66522217]
[287.46743774 -438.45715332]
[301.83773804 -434.05804443]
[315.39184570 -427.56622314]
[327.82696533 -419.12667847]
[338.86523438 -408.92794800]
[348.26013184 -397.19793701]
[355.80172729 -384.19860840]
[361.32153320 -370.22045898]
[364.69628906 -355.57568359]
[365.85052490 -340.59152222]
[364.75851440 -325.60269165]
[361.44461060 -310.94403076]
[355.98287964 -296.94308472]
[348.49533081 -283.91256714]
[339.14923096 -272.14361572]
[328.15338135 -261.89916992]
[315.75341797 -253.40805054]
[302.22640991 -246.86000061]
[287.87448120 -242.40127563]
[273.01831055 -240.13148499]
[257.98977661 -240.10136414]
[243.12463379 -242.31155396]
[228.75495911 -246.71269226]
[222.27545166 -233.18434143]
[215.79595947 -219.65600586]
[209.31646729 -206.12765503]
[202.83697510 -192.59930420]
[196.35746765 -179.07096863]
[205.76284790 -167.49493408]
[209.22367859 -152.92330933]
[206.00140381 -138.23393250]
[196.68284607 -126.35181427]
[183.07412720 -119.66677856]
[167.85084534 -119.55281830]
[161.37135315 -106.02447510]
[154.89184570 -92.49613190]
[148.41235352 -78.96778107]
[141.93286133 -65.43943787]
[143.41329956 -50.61858749]
[130.47389221 -41.51461029]
[123.99440002 -27.98626328]
[117.51490021 -14.45791721]
[111.03540802 -0.92957205]
[104.55590820 12.59877396]
[101.12484741 27.20109558]
[100.90151978 42.19943237]
[101.79433441 57.17284012]
[103.79835510 72.03836823]
[105.80236816 86.90389252]
[114.19553375 98.08631134]
[109.06316376 111.09209442]
[111.06717682 125.95761871]
[113.07118988 140.82315063]
[115.07520294 155.68867493]
[117.07921600 170.55419922]
[133.37846375 173.89749146]
[147.52624512 182.60548401]
[157.82185364 195.61076355]
[163.03469849 211.33053589]
[162.55146790 227.85937500]
[156.44808960 243.20004272]
[145.47860718 255.50494385]
[130.98193359 263.29855347]
[133.42765808 278.09783936]
[143.31150818 290.45178223]
[137.75291443 304.27029419]
[140.19863892 319.06954956]
[142.64437866 333.86883545]
[145.09010315 348.66809082]
[147.53582764 363.46737671]
[149.98155212 378.26663208]
[152.42727661 393.06591797]
[159.70216370 379.94815063]
[172.86344910 372.75225830]
[187.83296204 373.70800781]
[199.97225952 382.51922607]
[205.51982117 396.45568848]
[202.75668335 411.19900513]
[192.53904724 422.18078613]
[178.03294373 425.99822998]
[163.73324585 421.46847534]
[154.07078552 409.99484253]
[154.51737976 424.98818970]
[154.96398926 439.98153687]
[155.41059875 454.97488403]
[155.85720825 469.96823120]
[156.30380249 484.96160889]
[169.57740784 492.82385254]
[176.47279358 506.62448120]
[174.78964233 521.95977783]
[165.06507874 533.93621826]
[150.40214539 538.73229980]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 205]
[5 204]
[6 203]
[7 202]
[8 201]
[9 200]
[10 190]
[11 189]
[12 188]
[13 187]
[14 186]
[15 185]
[16 184]
[18 182]
[19 181]
[29 173]
[30 172]
[31 171]
[32 170]
[33 169]
[35 167]
[36 166]
[37 165]
[48 164]
[49 163]
[79 162]
[80 161]
[81 160]
[82 159]
[83 158]
[85 156]
[86 155]
[87 154]
[88 153]
[89 152]
[95 146]
[96 145]
[97 144]
[98 143]
[99 142]
[100 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
