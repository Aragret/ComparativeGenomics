%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[115.84159851 464.58489990]
[113.44441223 449.75888062]
[112.85182190 434.75201416]
[114.07247925 419.78314209]
[117.08856964 405.07055664]
[121.85612488 390.82879639]
[128.30561829 377.26553345]
[136.34297180 364.57861328]
[145.85101318 352.95303345]
[156.69107056 342.55828857]
[168.70506287 333.54598999]
[181.71778870 326.04757690]
[175.84883118 312.24340820]
[169.97987366 298.43923950]
[164.11091614 284.63504028]
[158.24195862 270.83087158]
[152.37298584 257.02670288]
[140.27279663 248.34138489]
[141.99375916 232.61405945]
[129.89355469 223.92875671]
[131.61451721 208.20141602]
[125.74555969 194.39724731]
[120.23557281 189.47161865]
[119.89367676 180.34358215]
[114.23088837 166.45355225]
[106.09592438 179.05603027]
[91.18686676 180.70527649]
[80.49411774 170.18551636]
[81.89997864 155.25154114]
[94.36809540 146.91212463]
[108.70622253 151.31364441]
[104.09221649 137.04090881]
[99.47820282 122.76817322]
[88.62564087 119.73033142]
[80.55834961 111.86104584]
[77.25181580 101.08730316]
[79.51571655 90.04730988]
[86.79567719 81.44446564]
[82.60866547 67.04068756]
[71.32680511 55.94878387]
[75.20394897 41.56764984]
[71.01693726 27.16386604]
[66.82992554 12.76008511]
[60.75609207 -0.95518178]
[52.90433884 -13.73602390]
[45.05258179 -26.51686668]
[29.76048851 -26.20205688]
[16.45188141 -33.53539276]
[8.65262604 -46.45970917]
[8.37158012 -61.45227432]
[15.58410263 -74.48474121]
[7.73234701 -87.26557922]
[-0.11940869 -100.04642487]
[-7.97116423 -112.82726288]
[-15.82291985 -125.60810852]
[-23.67467499 -138.38894653]
[-22.29625320 -123.45242310]
[-23.91134262 -108.53962708]
[-28.45561218 -94.24453735]
[-35.74806595 -81.13652039]
[-45.49824905 -69.73766327]
[-57.31781769 -60.50197601]
[-70.73600006 -53.79732132]
[-85.21835327 -49.89073563]
[-100.18804932 -48.93781662]
[-115.04886627 -50.97652054]
[-129.20887756 -55.92564774]
[-142.10412598 -63.58807373]
[-153.22097778 -73.65860748]
[-162.11665344 -85.73614502]
[-168.43684387 -99.33964539]
[-171.92982483 -113.92728424]
[-172.45646667 -128.91802979]
[-169.99578857 -143.71482849]
[-164.64581299 -157.72831726]
[-156.61962891 -170.40032959]
[-146.23689270 -181.22618103]
[-133.91116333 -189.77464294]
[-120.13335419 -195.70526123]
[-105.45224762 -198.78181458]
[-90.45258331 -198.88174438]
[-75.73178864 -196.00109863]
[-61.87617874 -190.25460815]
[-49.43763351 -181.87113953]
[-38.91156387 -171.18461609]
[-30.71914291 -158.62437439]
[-32.50160980 -173.51809692]
[-34.28407669 -188.41180420]
[-43.60644150 -201.19476318]
[-37.43635941 -214.75129700]
[-39.21882629 -229.64500427]
[-54.11775970 -232.13467407]
[-67.71116638 -238.72224426]
[-78.89707947 -248.87370300]
[-86.76871490 -261.76611328]
[-90.68795013 -276.35430908]
[-90.33707428 -291.45578003]
[-85.74452209 -305.84622192]
[-77.28260803 -318.35913086]
[-65.63728333 -327.98010254]
[-51.75259399 -333.92922974]
[-36.75410843 -335.72421265]
[-21.85768127 -333.21960449]
[-8.27090359 -326.61837769]
[2.90480757 -316.45568848]
[10.76348591 -303.55538940]
[14.66806507 -288.96322632]
[14.30201626 -273.86215210]
[9.69501591 -259.47631836]
[1.22053075 -246.97192383]
[-10.43444920 -237.36265564]
[-24.32510757 -231.42747498]
[-22.54264259 -216.53376770]
[-13.34776974 -204.81610107]
[-19.39035797 -190.19427490]
[-17.60789299 -175.30055237]
[-15.82542610 -160.40684509]
[-10.89383221 -146.24070740]
[-3.04207706 -133.45986938]
[4.80967855 -120.67902374]
[12.66143417 -107.89817810]
[20.51318932 -95.11734009]
[28.36494446 -82.33649445]
[43.25019455 -82.87953186]
[56.49680328 -75.85220337]
[64.50027466 -63.05333710]
[65.02626038 -47.86715698]
[57.83342361 -34.36862183]
[65.68518066 -21.58778000]
[73.53693390 -8.80693722]
[72.56218719 -23.77523232]
[76.19964600 -38.32751465]
[84.10262299 -51.07674789]
[95.51784515 -60.80776215]
[109.35729980 -66.59305573]
[124.30188751 -67.88121033]
[138.92718506 -64.54945374]
[151.83920288 -56.91534424]
[161.80726624 -45.70651245]
[167.88125610 -31.99131584]
[169.48225403 -17.07700157]
[166.45765686 -2.38510346]
[159.09576416 10.68403816]
[148.09825134 20.88475609]
[134.51333618 27.24478340]
[119.63583374 29.15792274]
[104.88378906 26.44182587]
[91.66326904 19.35537338]
[81.23371124 8.57307339]
[85.42072296 22.97685623]
[89.60773468 37.38063812]
[100.59010315 47.44228363]
[97.01244354 62.85367203]
[101.19945526 77.25745392]
[117.35161591 85.24928284]
[122.63901520 102.47731781]
[113.75093842 118.15416718]
[118.36495209 132.42689514]
[122.97895813 146.69963074]
[128.12091064 160.79077148]
[133.78370667 174.68080139]
[139.54974365 188.52828979]
[145.41870117 202.33245850]
[157.93867493 212.00514221]
[155.79792786 226.74510193]
[168.31791687 236.41777039]
[166.17716980 251.15773010]
[172.04612732 264.96191406]
[177.91508484 278.76608276]
[183.78405762 292.57025146]
[189.65301514 306.37445068]
[195.52197266 320.17861938]
[209.95046997 316.01016235]
[224.77621460 313.61132812]
[239.78302002 313.01705933]
[254.75204468 314.23602295]
[269.46496582 317.25045776]
[283.70727539 322.01641846]
[297.27124023 328.46438599]
[309.95907593 336.50033569]
[321.58572388 346.00708008]
[331.98168945 356.84594727]
[340.99533081 368.85894775]
[348.49517822 381.87081909]
[354.37191772 395.69186401]
[358.53985596 410.12051392]
[360.93814087 424.94635010]
[361.53186035 439.95318604]
[360.31231689 454.92214966]
[357.29733276 469.63497925]
[352.53082275 483.87710571]
[346.08236694 497.44082642]
[338.04592896 510.12835693]
[328.53875732 521.75463867]
[317.69949341 532.15020752]
[305.68618774 541.16339111]
[292.67401123 548.66278076]
[278.85275269 554.53900146]
[264.42395020 558.70635986]
[249.59800720 561.10412598]
[234.59115601 561.69726562]
[219.62223816 560.47717285]
[204.90951538 557.46160889]
[190.66758728 552.69458008]
[177.10409546 546.24560547]
[164.41687012 538.20874023]
[152.79092407 528.70111084]
[142.39578247 517.86145020]
[133.38304138 505.84780884]
[125.88414001 492.83535767]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 172]
[13 171]
[14 170]
[15 169]
[16 168]
[17 167]
[19 165]
[21 163]
[22 162]
[24 161]
[25 160]
[31 159]
[32 158]
[33 157]
[38 154]
[39 153]
[41 151]
[42 150]
[43 149]
[44 130]
[45 129]
[46 128]
[51 123]
[52 122]
[53 121]
[54 120]
[55 119]
[56 118]
[86 117]
[87 116]
[88 115]
[90 113]
[91 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
