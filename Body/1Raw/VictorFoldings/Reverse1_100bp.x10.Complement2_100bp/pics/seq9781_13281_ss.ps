%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[116.87788391 542.88647461]
[120.22512817 528.22686768]
[126.00186920 514.34387207]
[134.04190063 501.63696289]
[144.11389160 490.47171021]
[155.92803955 481.16937256]
[169.14443970 473.99755859]
[164.31845093 459.79510498]
[159.49244690 445.59265137]
[154.66645813 431.39019775]
[149.73486328 417.22406006]
[144.69793701 403.09503174]
[139.66102600 388.96600342]
[134.62411499 374.83697510]
[122.32421875 370.99743652]
[114.36273956 360.61972046]
[113.82405853 347.35620117]
[121.12872314 336.04000854]
[116.30271912 321.83755493]
[111.47672272 307.63510132]
[106.65072632 293.43264771]
[101.82472992 279.23019409]
[90.40402985 269.66897583]
[93.28997040 254.11318970]
[88.46397400 239.91073608]
[86.51824951 254.78401184]
[81.46253967 268.90631104]
[73.52682495 281.63522339]
[63.07214737 292.39160156]
[50.57411575 300.68612671]
[36.60131073 306.14144897]
[21.78939438 308.50939941]
[6.81221819 307.68225098]
[-7.64885998 303.69763184]
[-20.93595695 296.73681641]
[-32.44459915 287.11645508]
[-41.65121841 275.27423096]
[-48.13697815 261.74890137]
[-51.60681534 247.15573120]
[-51.90287781 232.15866089]
[-49.01169586 217.43992615]
[-43.06480408 203.66914368]
[-34.33273697 191.47279358]
[-23.21275330 181.40571594]
[-10.21073437 173.92591858]
[4.08181429 169.37365723]
[19.01467705 167.95603943]
[33.90850830 169.73756409]
[48.08573532 174.63717651]
[60.90139389 182.43197632]
[71.77245331 192.76734924]
[80.20435333 205.17311096]
[85.81468201 219.08906555]
[86.93032837 204.13059998]
[88.04598236 189.17214966]
[89.16162872 174.21369934]
[90.27727509 159.25524902]
[91.39292908 144.29679871]
[92.06271362 129.31175232]
[92.28604126 114.31341553]
[84.69254303 105.48278046]
[84.95262909 93.83917236]
[92.93286133 85.35641479]
[93.37946320 70.36306763]
[93.82607269 55.36971283]
[93.93773651 40.37012863]
[93.71440887 25.37179184]
[93.49108124 10.37345505]
[93.26775360 -4.62488222]
[92.93277740 -19.62114143]
[92.48617554 -34.61449051]
[92.03956604 -49.60784149]
[91.25824738 -64.58747864]
[90.14260101 -79.54592896]
[89.02694702 -94.50438690]
[87.91130066 -109.46283722]
[86.79565430 -124.42129517]
[85.68000031 -139.37974548]
[84.56435394 -154.33819580]
[83.44870758 -169.29664612]
[74.44079590 -157.30259705]
[60.13762665 -152.78379822]
[45.87393570 -157.42568970]
[36.96971893 -169.49693298]
[36.74603653 -184.49526978]
[45.28631210 -196.82667542]
[59.40523148 -201.89186096]
[73.83679199 -197.80162048]
[83.19879150 -186.08042908]
[83.86857605 -201.06546021]
[84.53836060 -216.05050659]
[85.20814514 -231.03553772]
[85.87792969 -246.02058411]
[86.43614197 -261.01019287]
[86.88275146 -276.00354004]
[87.32935333 -290.99688721]
[87.77596283 -305.99023438]
[73.52783966 -311.07415771]
[61.54932404 -320.31375122]
[53.01394653 -332.80386353]
[48.75791931 -347.32080078]
[49.19820404 -362.44235229]
[54.29166031 -376.68707275]
[63.53929520 -388.65939331]
[76.03511047 -397.18637085]
[90.55489349 -401.43267822]
[105.67614746 -400.98226929]
[119.91744232 -395.87927246]
[131.88356018 -386.62362671]
[140.40219116 -374.12210083]
[144.63876343 -359.59945679]
[144.17822266 -344.47851562]
[139.06567383 -330.24063110]
[129.80200195 -318.28073120]
[117.29477692 -309.77047729]
[102.76931000 -305.54364014]
[102.32270813 -290.55029297]
[101.87609863 -275.55694580]
[101.42949677 -260.56356812]
[104.37245178 -253.78414917]
[100.86296844 -245.35079956]
[100.19318390 -230.36575317]
[99.52339935 -215.38072205]
[98.85361481 -200.39567566]
[98.18383026 -185.41064453]
[98.40715790 -170.41230774]
[99.52280426 -155.45384216]
[100.63845825 -140.49539185]
[101.75410461 -125.53694153]
[102.86975098 -110.57849121]
[103.98540497 -95.62003326]
[105.10105133 -80.66158295]
[106.21669769 -65.70312500]
[108.63548279 -63.13761902]
[109.93180084 -59.27308655]
[109.50865936 -54.64985657]
[107.03292084 -50.05444717]
[107.47952271 -35.06109619]
[107.92613220 -20.06774712]
[111.26738739 -13.47549534]
[108.26609039 -4.84820986]
[108.48941803 10.15012741]
[108.71275330 25.14846420]
[108.93608093 40.14680099]
[111.19786835 42.85173035]
[112.26187134 46.78656769]
[111.56429291 51.37641525]
[108.81941986 55.81631851]
[108.37281799 70.80966949]
[107.92620850 85.80301666]
[116.25568390 100.36310577]
[107.28437805 114.53674316]
[107.06105042 129.53507996]
[109.30956268 133.24966431]
[110.17231750 137.09936523]
[109.77700043 140.63194275]
[108.38504028 143.48309326]
[106.35137939 145.41244507]
[105.23573303 160.37089539]
[104.12007904 175.32934570]
[103.00443268 190.28779602]
[101.88878632 205.24626160]
[100.77313995 220.20471191]
[102.66642761 235.08474731]
[107.49242401 249.28720093]
[119.25830841 259.86428833]
[116.02718353 274.40417480]
[120.85317993 288.60665894]
[125.67918396 302.80911255]
[130.50517273 317.01156616]
[135.33117676 331.21401978]
[151.16189575 338.65762329]
[156.60403442 354.92718506]
[148.75314331 369.80004883]
[153.79005432 383.92907715]
[158.82696533 398.05810547]
[163.86389160 412.18713379]
[169.69325256 419.21966553]
[168.86891174 426.56420898]
[173.69490051 440.76666260]
[178.52090454 454.96911621]
[183.34690857 469.17156982]
[198.19662476 466.80648804]
[213.23245239 466.98519897]
[228.02177429 469.70260620]
[242.13905334 474.88046265]
[255.17813110 482.36981201]
[266.76382446 491.95520020]
[276.56280518 503.36080933]
[284.29315186 516.25848389]
[289.73239136 530.27716064]
[292.72409058 545.01342773]
[293.18215942 560.04333496]
[291.09338379 574.93444824]
[286.51788330 589.25830078]
[279.58728027 602.60278320]
[270.50103760 614.58392334]
[259.52053833 624.85699463]
[246.96173096 633.12652588]
[233.18595886 639.15441895]
[218.58955383 642.76739502]
[203.59252930 643.86138916]
[188.62632751 642.40496826]
[174.12159729 638.44000244]
[160.49565125 632.08068848]
[148.14053345 623.50982666]
[137.41172791 612.97412109]
[128.61791992 600.77673340]
[122.01213074 587.26849365]
[117.78442383 572.83819580]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 182]
[8 181]
[9 180]
[10 179]
[11 177]
[12 176]
[13 175]
[14 174]
[18 171]
[19 170]
[20 169]
[21 168]
[22 167]
[24 165]
[25 164]
[53 163]
[54 162]
[55 161]
[56 160]
[57 159]
[58 158]
[59 153]
[60 152]
[63 150]
[64 149]
[65 148]
[66 144]
[67 143]
[68 142]
[69 141]
[70 139]
[71 138]
[72 137]
[73 133]
[74 132]
[75 131]
[76 130]
[77 129]
[78 128]
[79 127]
[80 126]
[89 125]
[90 124]
[91 123]
[92 122]
[93 121]
[94 119]
[95 118]
[96 117]
[97 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
