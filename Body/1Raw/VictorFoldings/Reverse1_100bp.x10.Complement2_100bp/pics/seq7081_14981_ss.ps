%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[95.72434998 556.98339844]
[87.00603485 544.75756836]
[79.71142578 531.63244629]
[73.93225861 517.77313232]
[69.74121857 503.35385132]
[67.19100189 488.55599976]
[66.31369019 473.56564331]
[67.12030792 458.57135010]
[69.60071564 443.76162720]
[73.72372437 429.32275391]
[79.43747711 415.43634033]
[86.67012024 402.27697754]
[95.33068848 390.01016235]
[105.31027222 378.79019165]
[116.48336792 368.75814819]
[128.70945740 360.04019165]
[141.83479309 352.74597168]
[155.69430542 346.96722412]
[151.50729370 332.56344604]
[147.32028198 318.15963745]
[143.13327026 303.75585938]
[138.83915710 289.38366699]
[134.43815613 275.04382324]
[130.03715515 260.70394897]
[125.63615417 246.36412048]
[123.22568512 244.93310547]
[121.23681641 242.46107483]
[120.06890106 239.10377502]
[120.05757904 235.15859985]
[121.42753601 231.03826904]
[117.88786316 216.46188354]
[113.25472260 210.70378113]
[114.40571594 201.64215088]
[111.08345795 187.01469421]
[107.76119232 172.38723755]
[103.21430206 166.56077576]
[104.50007629 157.51730347]
[101.39597321 142.84199524]
[98.29186249 128.16668701]
[95.18775177 113.49139404]
[85.98612213 102.96421051]
[90.13694763 89.61271667]
[87.03283691 74.93741608]
[82.63184357 60.59756851]
[76.96905518 46.70754242]
[71.30626678 32.81751633]
[64.72624207 19.33778191]
[57.25849915 6.32882881]
[49.79075623 -6.68012381]
[42.32301712 -19.68907547]
[34.85527420 -32.69802856]
[27.38753319 -45.70698166]
[19.91979218 -58.71593475]
[12.25919533 -71.61225891]
[4.40743971 -84.39310455]
[-3.44431591 -97.17394257]
[-11.29607105 -109.95478821]
[-11.02480030 -94.95723724]
[-16.44190025 -80.96956635]
[-26.74377632 -70.06675720]
[-40.40221024 -63.86616898]
[-55.39104843 -63.28763199]
[-69.48678589 -68.41696930]
[-80.59841156 -78.49326324]
[-87.07757568 -92.02177429]
[-87.96313477 -106.99560547]
[-83.12371826 -121.19349670]
[-73.27722931 -132.50926208]
[-59.88433456 -139.26428223]
[-44.93178940 -140.45649719]
[-30.63771248 -135.90902710]
[-19.12375450 -126.29797363]
[-24.16067123 -140.42700195]
[-29.19758606 -154.55603027]
[-43.95895004 -151.72714233]
[-58.97914505 -151.18482971]
[-73.90608215 -152.94180298]
[-88.38985443 -156.95689392]
[-102.09093475 -163.13595581]
[-114.68814850 -171.33415222]
[-125.88620758 -181.35931396]
[-135.42260742 -192.97644043]
[-143.07380676 -205.91319275]
[-148.66044617 -219.86633301]
[-152.05157471 -234.50875854]
[-153.16767883 -249.49723816]
[-151.98260498 -264.48043823]
[-148.52415466 -279.10711670]
[-142.87336731 -293.03439331]
[-135.16271973 -305.93579102]
[-125.57297516 -317.50891113]
[-114.32890320 -327.48245239]
[-101.69409180 -335.62258911]
[-87.96472931 -341.73855591]
[-73.46263885 -345.68695068]
[-58.52777100 -347.37521362]
[-43.51023102 -346.76379395]
[-28.76204109 -343.86700439]
[-14.62892342 -338.75277710]
[-1.44217944 -331.54095459]
[10.48907566 -322.40063477]
[20.88515472 -311.54605103]
[29.50236130 -299.23165894]
[36.13869476 -285.74612427]
[40.63858795 -271.40557861]
[42.89656067 -256.54617310]
[42.85967636 -241.51623535]
[40.52880859 -226.66809082]
[35.95859146 -212.34979248]
[29.25615501 -198.89700317]
[20.57861710 -186.62504578]
[10.12939072 -175.82162476]
[-1.84657848 -166.73995972]
[-15.06855679 -159.59294128]
[-10.03164101 -145.46391296]
[-4.99472475 -131.33488464]
[1.48477113 -117.80654144]
[9.33652687 -105.02570343]
[17.18828201 -92.24485779]
[25.04003716 -79.46401215]
[29.39460564 -77.50269318]
[32.56331635 -72.78503418]
[32.92874527 -66.18367767]
[40.39648438 -53.17472076]
[47.86422729 -40.16576767]
[55.33197021 -27.15681648]
[62.79970932 -14.14786434]
[70.26744843 -1.13891244]
[77.73519135 11.87003994]
[79.96217346 -2.96372342]
[89.77510071 -14.30861378]
[104.13332367 -18.64929199]
[118.58779144 -14.64075375]
[128.65962219 -3.52508736]
[131.22796631 11.25339794]
[125.49698639 25.11542511]
[113.24248505 33.76569748]
[98.26165771 34.52383423]
[85.19629669 27.15472794]
[90.85907745 41.04475403]
[96.52186584 54.93478394]
[99.29029083 40.19246674]
[108.11112976 28.06016541]
[121.28122711 20.88043404]
[136.25764465 20.03956795]
[150.14865112 25.69992256]
[160.27214050 36.76857376]
[164.67340088 51.10833740]
[162.50263977 65.95043182]
[154.17897034 78.42907715]
[141.30958557 86.13484955]
[126.37935638 87.57987976]
[112.27107239 82.48515320]
[101.70813751 71.83330536]
[104.81224823 86.50860596]
[114.01387787 97.03578949]
[109.86305237 110.38728333]
[112.96716309 125.06258392]
[116.07127380 139.73788452]
[119.17538452 154.41319275]
[122.38865662 169.06497192]
[125.71091461 183.69242859]
[129.03317261 198.31990051]
[132.46423340 212.92222595]
[136.00390625 227.49859619]
[139.97599792 241.96311951]
[144.37699890 256.30297852]
[148.77799988 270.64282227]
[153.17900085 284.98266602]
[158.68853760 292.26846313]
[157.53706360 299.56884766]
[161.72407532 313.97262573]
[165.91108704 328.37643433]
[170.09808350 342.78021240]
[184.89572144 340.22866821]
[199.88597107 339.35000610]
[214.88035583 340.15527344]
[229.69029236 342.63436890]
[244.12953186 346.75607300]
[258.01647949 352.46856689]
[271.17648315 359.70004272]
[283.44406128 368.35949707]
[294.66494751 378.33807373]
[304.69799805 389.51028442]
[313.41705322 401.73559570]
[320.71243286 414.86026001]
[326.49243164 428.71926880]
[330.68432617 443.13827515]
[333.23544312 457.93597412]
[334.11364746 472.92626953]
[333.30792236 487.92062378]
[330.82839966 502.73049927]
[326.70626831 517.16961670]
[320.99334717 531.05639648]
[313.76147461 544.21618652]
[305.10165405 556.48352051]
[295.12274170 567.70410156]
[283.95022583 577.73681641]
[271.72467041 586.45544434]
[258.59976196 593.75048828]
[244.74060059 599.53002930]
[230.32145691 603.72149658]
[215.52368164 606.27215576]
[200.53337097 607.14996338]
[185.53903198 606.34375000]
[170.72924805 603.86383057]
[156.29025269 599.74121094]
[142.40365601 594.02789307]
[129.24407959 586.79565430]
[116.97700500 578.13543701]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 174]
[19 173]
[20 172]
[21 171]
[22 169]
[23 168]
[24 167]
[25 166]
[30 165]
[31 164]
[33 163]
[34 162]
[35 161]
[37 160]
[38 159]
[39 158]
[40 157]
[42 155]
[43 154]
[44 141]
[45 140]
[46 139]
[47 129]
[48 128]
[49 127]
[50 126]
[51 125]
[52 124]
[53 123]
[54 120]
[55 119]
[56 118]
[57 117]
[72 116]
[73 115]
[74 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
