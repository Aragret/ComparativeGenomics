%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAUCAUCACCCCACUCCGAACCUAAUCGCAAAUCUUCCCGAUAAACAACACCCAGAGUACUCAACCUCACAUCCUAUUUAGUACGAUUCCGCUCCUACxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[77.45375061 571.79913330]
[71.05830383 558.21374512]
[66.19619751 544.00732422]
[62.92645264 529.35223389]
[61.28876877 514.42639160]
[61.30301666 499.41094971]
[62.96903229 484.48822021]
[66.26658630 469.83935547]
[71.15564728 455.64215088]
[77.57687378 442.06900024]
[85.45231628 429.28460693]
[94.68636322 417.44418335]
[105.16693878 406.69146729]
[116.76680756 397.15698242]
[129.34515381 388.95648193]
[142.74929810 382.18951416]
[137.50257874 368.13702393]
[132.25585938 354.08456421]
[127.00914764 340.03207397]
[121.65795898 326.01907349]
[116.20260620 312.04626465]
[110.26035309 325.81906128]
[96.91225433 332.66217041]
[82.26087952 329.44705200]
[73.00463104 317.64355469]
[73.37535095 302.64816284]
[83.20354462 291.31649780]
[97.99590302 288.82925415]
[110.99074554 296.32501221]
[107.01864624 281.86050415]
[103.04655457 267.39596558]
[97.17584991 281.19940186]
[84.83460999 289.72546387]
[69.84688568 290.33224487]
[56.85679626 282.83175659]
[49.88945770 269.54806519]
[51.10377884 254.59730530]
[60.12348557 242.61210632]
[74.15372467 237.30622864]
[88.84707642 240.32374573]
[99.65077209 250.72988892]
[97.64675903 235.86434937]
[95.64274597 220.99882507]
[93.63873291 206.13330078]
[85.97650909 219.02865601]
[72.60681152 225.82948303]
[57.67238617 224.42845154]
[45.80082321 215.25970459]
[40.67065811 201.16426086]
[43.87152863 186.50976562]
[54.41160965 175.83705139]
[69.02494049 172.45320129]
[83.18342590 177.40670776]
[92.50000000 189.16293335]
[92.50000000 174.16293335]
[81.81912994 163.84526062]
[81.60544586 148.63311768]
[92.50000000 137.50000000]
[92.50000000 122.50000000]
[92.50000000 107.50000000]
[91.83021545 92.51496124]
[90.49198151 77.57477570]
[89.15374756 62.63459015]
[85.27120209 54.36635971]
[87.90850067 47.46227264]
[86.79285431 32.50381851]
[85.67720795 17.54536629]
[84.56155396 2.58691239]
[83.11213684 -12.34289646]
[81.32967377 -27.23661423]
[79.54720306 -42.13032913]
[77.76473999 -57.02404785]
[74.11428070 -62.53636551]
[73.83721924 -68.21265411]
[76.15775299 -72.38688660]
[74.81951904 -87.32707214]
[62.97515869 -97.44383240]
[61.83082581 -112.61437225]
[71.54860687 -123.84381104]
[70.21037292 -138.78399658]
[68.87213898 -153.72418213]
[67.53390503 -168.66436768]
[65.97338104 -183.58297729]
[64.19091797 -198.47668457]
[62.40845108 -213.37040710]
[60.62598419 -228.26411438]
[58.84352112 -243.15783691]
[57.06105423 -258.05154419]
[42.07897949 -259.62802124]
[27.82350159 -264.49926758]
[15.00966549 -272.42095947]
[4.28021049 -282.99575806]
[-3.82667923 -295.69323730]
[-8.90436554 -309.87649536]
[-10.69815445 -324.83410645]
[-9.11806965 -339.81579590]
[-4.24336720 -354.07009888]
[3.68143940 -366.88201904]
[14.25884533 -377.60891724]
[26.95829201 -385.71273804]
[41.14278030 -390.78698730]
[56.10082245 -392.57714844]
[71.08213043 -390.99343872]
[85.33525085 -386.11526489]
[98.14524078 -378.18734741]
[108.86957550 -367.60736084]
[116.97030640 -354.90594482]
[122.04112244 -340.72021484]
[123.82765961 -325.76174927]
[122.24031830 -310.78082275]
[117.35870361 -296.52890015]
[109.42769623 -283.72082520]
[98.84509277 -272.99905396]
[86.14171600 -264.90139771]
[71.95477295 -259.83401489]
[73.73723602 -244.94030762]
[75.51969910 -230.04658508]
[77.30216980 -215.15287781]
[79.08463287 -200.25915527]
[80.86710358 -185.36543274]
[84.00122070 -181.76177979]
[84.90480804 -176.15103149]
[82.47409058 -170.00259399]
[83.81232452 -155.06240845]
[85.15055847 -140.12222290]
[86.48879242 -125.18204498]
[98.04756927 -115.85840607]
[99.61756134 -100.72599792]
[89.75969696 -88.66530609]
[91.09793091 -73.72512054]
[92.65845490 -58.80651474]
[94.44092560 -43.91279602]
[96.22338867 -29.01907921]
[98.00585175 -14.12536240]
[100.53678131 -11.67041492]
[102.00437164 -7.86762333]
[101.78808594 -3.23011112]
[99.52001190 1.47126365]
[100.63565826 16.42971611]
[101.75130463 31.38817024]
[102.86695862 46.34662247]
[104.09393311 61.29635620]
[105.43216705 76.23654175]
[106.77040100 91.17672729]
[117.19447327 80.39068604]
[132.18930054 79.99687958]
[143.16517639 90.22088623]
[143.83459473 105.20594025]
[133.81410217 116.36791992]
[118.84388733 117.31273651]
[107.50000000 107.50000000]
[107.50000000 122.50000000]
[107.50000000 137.50000000]
[118.39455414 148.63311768]
[118.18087006 163.84526062]
[107.50000000 174.16293335]
[107.50000000 189.16293335]
[108.50425720 204.12928772]
[110.50827026 218.99481201]
[112.51229095 233.86033630]
[114.51630402 248.72587585]
[117.51107788 263.42385864]
[121.48316956 277.88839722]
[125.45526886 292.35293579]
[130.17539978 306.59091187]
[135.63075256 320.56372070]
[141.66693115 327.41955566]
[141.06161499 334.78536987]
[146.30833435 348.83782959]
[151.55505371 362.89031982]
[156.80177307 376.94277954]
[171.36090088 373.26922607]
[186.23579407 371.21960449]
[201.24586487 370.81884766]
[216.20893860 372.07174683]
[230.94335938 374.96316528]
[245.27024841 379.45794678]
[259.01571655 385.50155640]
[272.01290894 393.02062988]
[284.10403442 401.92388916]
[295.14230347 412.10324097]
[304.99377441 423.43515015]
[313.53878784 435.78204346]
[320.67367554 448.99401855]
[326.31182861 462.91073608]
[330.38473511 477.36322021]
[332.84301758 492.17605591]
[333.65682983 507.16940308]
[332.81628418 522.16131592]
[330.33154297 536.96972656]
[326.23284912 551.41491699]
[320.56988525 565.32153320]
[313.41143799 578.52075195]
[304.84436035 590.85235596]
[294.97271729 602.16668701]
[283.91625977 612.32635498]
[271.80929565 621.20800781]
[258.79870605 628.70385742]
[245.04246521 634.72296143]
[230.70756531 639.19213867]
[215.96801758 642.05725098]
[201.00273132 643.28344727]
[185.99339294 642.85589600]
[171.12219238 640.77972412]
[156.56964111 637.08020020]
[142.51240540 631.80218506]
[129.12112427 625.00976562]
[116.55836487 616.78540039]
[104.97661591 607.22894287]
[94.51647186 596.45635986]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 171]
[17 170]
[18 169]
[19 168]
[20 166]
[21 165]
[29 164]
[30 163]
[31 162]
[41 161]
[42 160]
[43 159]
[44 158]
[54 157]
[55 156]
[58 153]
[59 152]
[60 151]
[61 144]
[62 143]
[63 142]
[65 141]
[66 140]
[67 139]
[68 138]
[69 134]
[70 133]
[71 132]
[72 131]
[75 130]
[76 129]
[79 126]
[80 125]
[81 124]
[82 123]
[83 120]
[84 119]
[85 118]
[86 117]
[87 116]
[88 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
