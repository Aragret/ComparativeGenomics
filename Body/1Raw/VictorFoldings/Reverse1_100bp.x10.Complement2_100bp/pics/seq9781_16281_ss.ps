%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[14.54687500 597.66668701]
[4.28143120 608.61700439]
[-6.89934301 618.63098145]
[-18.91035271 627.63238525]
[-31.66018677 635.55267334]
[-45.05180740 642.33160400]
[-58.98329544 647.91754150]
[-73.34862518 652.26806641]
[-88.03845978 655.34997559]
[-102.94100189 657.13983154]
[-117.94283295 657.62402344]
[-132.92977905 656.79882812]
[-147.78776550 654.67059326]
[-162.40373230 651.25549316]
[-176.66642761 646.57952881]
[-190.46731567 640.67828369]
[-203.70133972 633.59661865]
[-216.26780701 625.38848877]
[-228.07104492 616.11633301]
[-239.02124023 605.85070801]
[-249.03506470 594.66979980]
[-258.03628540 582.65869141]
[-265.95639038 569.90875244]
[-272.73513794 556.51702881]
[-278.32089233 542.58544922]
[-282.67120361 528.22003174]
[-285.75289917 513.53015137]
[-287.54254150 498.62759399]
[-288.02651978 483.62576294]
[-287.20114136 468.63882446]
[-285.07272339 453.78088379]
[-281.65740967 439.16494751]
[-276.98123169 424.90231323]
[-271.07974243 411.10153198]
[-263.99792480 397.86758423]
[-255.78959656 385.30123901]
[-246.51728821 373.49813843]
[-236.25152588 362.54809570]
[-225.07048035 352.53442383]
[-213.05921936 343.53338623]
[-200.30915833 335.61343384]
[-186.91734314 328.83486938]
[-172.98570251 323.24929810]
[-158.62025452 318.89923096]
[-143.93032837 315.81774902]
[-129.02774048 314.02828979]
[-114.02589417 313.54452515]
[-99.03897095 314.37011719]
[-84.18103790 316.49874878]
[-69.56517029 319.91427612]
[-55.30260086 324.59063721]
[-41.50188446 330.49230957]
[-34.42477798 317.26678467]
[-27.34767342 304.04125977]
[-20.27056885 290.81573486]
[-21.08774376 275.94354248]
[-7.75473404 267.42642212]
[-0.67762840 254.20089722]
[6.39947701 240.97537231]
[13.47658253 227.74984741]
[-1.41709971 229.53260803]
[-12.20367432 219.10908508]
[-10.93168068 204.16311646]
[1.46121514 195.71231079]
[15.83943176 199.98628235]
[21.60396385 213.83277893]
[29.64513779 201.17025757]
[37.68630981 188.50772095]
[30.43368340 172.40583801]
[34.33294678 155.02058411]
[48.00701904 143.35443115]
[66.10330200 142.22209167]
[73.76390076 129.32577515]
[81.42449951 116.42944336]
[89.08509827 103.53311157]
[75.29138947 109.42663574]
[60.38743591 107.73188782]
[48.26909637 98.89187622]
[42.10407257 85.21735382]
[43.50389099 70.28281403]
[52.10264206 57.99210358]
[65.65263367 51.55799103]
[80.61192322 52.66233444]
[93.07019806 61.01646042]
[99.77088928 74.43662262]
[98.96272278 89.41397858]
[108.45162201 77.79671478]
[117.94052124 66.17945099]
[127.42942047 54.56218719]
[136.91831970 42.94492340]
[146.05711365 31.05028915]
[154.83772278 18.88883400]
[152.52185059 3.48511696]
[161.59988403 -8.72324562]
[176.29924011 -10.83614731]
[178.10437012 -26.55403709]
[191.82769775 -32.34363556]
[200.60830688 -44.50509262]
[209.38891602 -56.66654968]
[198.27462769 -66.76370239]
[188.36076355 -78.04180145]
[179.77201843 -90.35900116]
[172.61637878 -103.56040192]
[166.98387146 -117.47998047]
[162.94529724 -131.94268799]
[160.55145264 -146.76664734]
[159.83245850 -161.76541138]
[160.79734802 -176.75036621]
[163.43397522 -191.53306580]
[167.70919800 -205.92759705]
[173.56924438 -219.75292969]
[180.94041443 -232.83520508]
[189.73001099 -245.00988770]
[199.82749939 -256.12387085]
[211.10589600 -266.03738403]
[223.42335510 -274.62579346]
[236.62496948 -281.78100586]
[250.54472351 -287.41311646]
[265.00753784 -291.45126343]
[279.83157349 -293.84463501]
[294.83035278 -294.56320190]
[309.81527710 -293.59786987]
[324.59790039 -290.96078491]
[338.99230957 -286.68515015]
[352.81747437 -280.82467651]
[365.89953613 -273.45312500]
[378.07394409 -264.66314697]
[389.18762207 -254.56532288]
[399.10079956 -243.28663635]
[407.68881226 -230.96893311]
[414.84365845 -217.76710510]
[420.47534180 -203.84718323]
[424.51306152 -189.38423157]
[426.90600586 -174.56013489]
[427.62411499 -159.56132507]
[426.65832520 -144.57641602]
[424.02081299 -129.79388428]
[419.74472046 -115.39960480]
[413.88385010 -101.57462311]
[406.51190186 -88.49279022]
[397.72158813 -76.31863403]
[387.62341309 -65.20525360]
[376.34442139 -55.29240417]
[364.02645874 -46.70475769]
[350.82443237 -39.55031586]
[336.90432739 -33.91904449]
[322.44125366 -29.88177109]
[307.61709595 -27.48926353]
[292.61825562 -26.77161217]
[277.63339233 -27.73784065]
[262.85092163 -30.37579918]
[248.45678711 -34.65231323]
[234.63197327 -40.51359940]
[221.55036926 -47.88594437]
[212.76976013 -35.72448730]
[203.98916626 -23.56303406]
[202.81207275 -8.71501255]
[188.46069336 -2.05554390]
[191.08065796 12.56195831]
[182.34912109 25.02048683]
[166.99917603 27.66943741]
[158.21858215 39.83089447]
[158.53169250 42.61658859]
[157.76020813 45.69416046]
[155.78744507 48.65111923]
[152.64804077 51.04040146]
[148.53558350 52.43382263]
[139.04667664 64.05108643]
[129.55778503 75.66835022]
[120.06888580 87.28561401]
[110.57998657 98.90287781]
[101.98142242 111.19371033]
[94.32082367 124.09004211]
[86.66023254 136.98635864]
[78.99963379 149.88269043]
[85.41257477 160.61311340]
[86.64760590 172.98013306]
[82.53141785 184.63073730]
[73.90301514 193.37440491]
[62.44350815 197.59490967]
[50.34883499 196.54890442]
[42.30766296 209.21142578]
[34.26648712 221.87394714]
[26.70211029 234.82695007]
[19.62500381 248.05247498]
[12.54789925 261.27801514]
[5.47079372 274.50354004]
[5.78176737 290.32168579]
[-7.04504108 297.89282227]
[-14.12214661 311.11834717]
[-21.19925117 324.34387207]
[-28.27635765 337.56939697]
[-15.70967102 345.77719116]
[-3.90616679 355.04901123]
[7.04432058 365.31430054]
[17.05845070 376.49493408]
[26.06000710 388.50582886]
[33.98048401 401.25555420]
[40.75959778 414.64706421]
[46.34575653 428.57849121]
[50.69644547 442.94375610]
[53.77854919 457.63354492]
[55.56861496 472.53607178]
[56.05301666 487.53787231]
[55.22806931 502.52484131]
[53.10005188 517.38287354]
[49.68515396 531.99890137]
[45.00937271 546.26165771]
[39.10829163 560.06262207]
[32.02682495 573.29675293]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 192]
[53 191]
[54 190]
[55 189]
[57 187]
[58 186]
[59 185]
[60 184]
[66 183]
[67 182]
[68 181]
[72 175]
[73 174]
[74 173]
[75 172]
[86 171]
[87 170]
[88 169]
[89 168]
[90 167]
[91 162]
[92 161]
[95 158]
[97 156]
[98 155]
[99 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
