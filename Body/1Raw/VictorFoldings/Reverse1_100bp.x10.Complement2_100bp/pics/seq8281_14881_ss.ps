%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[138.15924072 427.70401001]
[142.90982056 413.42718506]
[150.27670288 400.30749512]
[159.99357605 388.81930542]
[171.70916748 379.37783813]
[184.99998474 372.32440186]
[180.59898376 357.98455811]
[176.19798279 343.64471436]
[171.58398438 329.37197876]
[166.75798035 315.16952515]
[161.82638550 301.00338745]
[156.78947449 286.87435913]
[151.75256348 272.74533081]
[146.71563721 258.61630249]
[141.67872620 244.48727417]
[130.11694336 235.09715271]
[132.77095032 219.50013733]
[127.73403931 205.37110901]
[116.17225647 195.98098755]
[118.82627106 180.38397217]
[113.61923218 175.13911438]
[113.82125092 166.00692749]
[108.99525452 151.80447388]
[103.86688232 146.48266602]
[104.20484161 137.35449219]
[99.59083557 123.08175659]
[94.97682190 108.80902100]
[89.69794464 102.71755981]
[90.40208435 94.28932953]
[86.00108337 79.94947815]
[81.60009003 65.60963440]
[67.83184814 53.38191605]
[72.42538452 36.44478607]
[67.81137085 22.17205238]
[63.19736481 7.89931870]
[58.58335495 -6.37341499]
[56.35571289 8.46024990]
[50.55617142 22.29373550]
[41.53937531 34.28111649]
[29.85669899 43.68936539]
[16.22254753 49.94315720]
[1.47065449 52.66007614]
[-13.49689770 51.67397690]
[-27.76483536 47.04516220]
[-40.46067047 39.05668640]
[-50.80804825 28.19704628]
[-58.17422485 15.13031387]
[-62.10874939 0.65552539]
[-62.37102509 -14.34218121]
[-58.94501877 -28.94569016]
[-52.04022980 -42.26199341]
[-42.07888794 -53.47678757]
[-29.67013359 -61.90428925]
[-15.57276535 -67.02915192]
[-0.64884436 -68.53799438]
[14.18902588 -66.33853912]
[28.03350449 -60.56528854]
[40.03799438 -51.57127762]
[49.46842194 -39.90649796]
[55.74811554 -26.28422737]
[56.19472122 -41.27757645]
[56.64132690 -56.27092743]
[43.68301010 -64.39676666]
[36.57874680 -77.82904816]
[37.14795303 -92.91355896]
[45.13770294 -105.60292053]
[58.31748581 -112.54257965]
[58.76409149 -127.53592682]
[51.44110489 -141.56034851]
[59.55391312 -154.05160522]
[60.00051880 -169.04496765]
[60.44712448 -184.03831482]
[60.89373016 -199.03166199]
[61.34033585 -214.02500916]
[51.67808151 -202.55152893]
[37.37843323 -198.02162170]
[22.87229347 -201.83892822]
[12.65454578 -212.82063293]
[9.89127254 -227.56391907]
[15.43870354 -241.50041199]
[27.57790756 -250.31175232]
[42.54741669 -251.26765442]
[55.70877075 -244.07189941]
[62.98383713 -230.95393372]
[65.42956543 -245.75320435]
[67.87528992 -260.55249023]
[70.32101440 -275.35174561]
[72.43563843 -290.20196533]
[74.21810913 -305.09567261]
[76.00057220 -319.98937988]
[77.78304291 -334.88308716]
[75.93317413 -338.81146240]
[75.47560120 -342.73001099]
[76.23628998 -346.20230103]
[77.91731262 -348.89315796]
[80.14065552 -350.60046387]
[82.80644989 -365.36169434]
[85.47224426 -380.12292480]
[71.61206818 -386.02572632]
[59.41320038 -394.86514282]
[49.48752975 -406.19778442]
[42.33292770 -419.45520020]
[38.30826187 -433.97244263]
[37.61541367 -449.02127075]
[40.28913116 -463.84689331]
[46.19530106 -477.70565796]
[55.03767776 -489.90237427]
[66.37272644 -499.82528687]
[79.63188934 -506.97668457]
[94.15008545 -510.99783325]
[109.19909668 -511.68704224]
[124.02407074 -509.00973511]
[137.88137817 -503.10018921]
[150.07597351 -494.25488281]
[159.99613953 -482.91741943]
[167.14431763 -469.65652466]
[171.16195679 -455.13735962]
[171.84750366 -440.08816528]
[169.16661072 -425.26385498]
[163.25372314 -411.40795898]
[154.40544128 -399.21551514]
[143.06558228 -389.29809570]
[129.80294800 -382.15313721]
[115.28280640 -378.13903809]
[100.23346710 -377.45712280]
[97.56767273 -362.69589233]
[94.90187073 -347.93469238]
[92.67675781 -333.10064697]
[90.89428711 -318.20690918]
[89.11182404 -303.31320190]
[87.32936096 -288.41949463]
[89.20948792 -285.43661499]
[89.73825836 -281.39489746]
[88.43373108 -276.93942261]
[85.12028503 -272.90603638]
[82.67456055 -258.10675049]
[80.22883606 -243.30747986]
[77.78310394 -228.50820923]
[76.33368683 -213.57839966]
[75.88708496 -198.58505249]
[75.44047546 -183.59170532]
[74.99386597 -168.59835815]
[74.54726410 -153.60501099]
[81.90219879 -140.65299988]
[73.75744629 -127.08931732]
[73.31083679 -112.09597015]
[86.05419922 -104.38414001]
[93.27449799 -91.24171448]
[92.94485474 -76.15007782]
[85.05368042 -63.16445923]
[71.63467407 -55.82432175]
[71.18807220 -40.83097076]
[70.74146271 -25.83762169]
[72.85608673 -10.98742390]
[77.47010040 3.28530931]
[82.08410645 17.55804253]
[86.69812012 31.83077621]
[97.32164764 37.61585999]
[101.28246307 49.46894836]
[95.93993378 61.20863342]
[100.34093475 75.54848480]
[104.74192810 89.88832855]
[109.24955750 104.19501495]
[113.86357117 118.46775055]
[118.47757721 132.74047852]
[123.19770813 146.97846985]
[128.02371216 161.18092346]
[132.95530701 175.34706116]
[144.87736511 185.74778748]
[141.86306763 200.33419800]
[146.89999390 214.46322632]
[158.82203674 224.86395264]
[155.80775452 239.45036316]
[160.84466553 253.57939148]
[165.88159180 267.70843506]
[170.91850281 281.83746338]
[175.95541382 295.96649170]
[181.78479004 302.99899292]
[180.96043396 310.34353638]
[185.78643799 324.54598999]
[190.49859619 329.18356323]
[191.94432068 334.67962646]
[190.53784180 339.24371338]
[194.93884277 353.58355713]
[199.33982849 367.92343140]
[214.29919434 366.30667114]
[229.29417419 367.55047607]
[243.78271484 371.60986328]
[257.24105835 378.33813477]
[269.18270874 387.49203491]
[279.17593384 398.74063110]
[286.85955811 411.67736816]
[291.95578003 425.83450317]
[294.28036499 440.70034790]
[293.74932861 455.73745728]
[290.38180542 470.40225220]
[284.29956055 484.16461182]
[275.72247314 496.52706909]
[264.96060181 507.04269409]
[252.40295410 515.33135986]
[238.50349426 521.09344482]
[223.76467896 524.12060547]
[208.71931458 524.30352783]
[193.91127014 521.63549805]
[179.87586975 516.21295166]
[167.12045288 508.23199463]
[156.10612488 497.98107910]
[147.23106384 485.83078003]
[140.81610107 472.22033691]
[137.09310913 457.64172363]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 185]
[7 184]
[8 183]
[9 180]
[10 179]
[11 177]
[12 176]
[13 175]
[14 174]
[15 173]
[17 171]
[18 170]
[20 168]
[22 167]
[23 166]
[25 165]
[26 164]
[27 163]
[29 162]
[30 161]
[31 160]
[33 157]
[34 156]
[35 155]
[36 154]
[60 153]
[61 152]
[62 151]
[67 146]
[68 145]
[70 143]
[71 142]
[72 141]
[73 140]
[74 139]
[84 138]
[85 137]
[86 136]
[87 135]
[88 131]
[89 130]
[90 129]
[91 128]
[96 127]
[97 126]
[98 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
