%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[-2.63689184 527.54595947]
[4.64120626 540.74792480]
[8.54769230 555.30828857]
[8.85544777 570.38037109]
[5.54658127 585.08801270]
[-1.18653452 598.57611084]
[-10.95244503 610.06048584]
[-23.18337440 618.87341309]
[-37.16822815 624.50256348]
[-52.09395218 626.62060547]
[-67.09278107 625.10449219]
[-81.29269409 620.04229736]
[-93.86814117 611.72839355]
[-104.08799744 600.64605713]
[-111.35809326 587.43963623]
[-115.25574493 572.87695312]
[-115.55436707 557.80462646]
[-112.23657990 543.09899902]
[-105.49529266 529.61499023]
[-95.72241974 518.13659668]
[-83.48615265 509.33105469]
[-69.49788666 503.71038818]
[-54.57088089 501.60137939]
[-39.57297516 503.12658691]
[-34.53606033 488.99755859]
[-29.49914360 474.86853027]
[-24.56755066 460.70239258]
[-19.74155235 446.49993896]
[-28.47072411 434.46084595]
[-28.43655777 419.41217041]
[-19.44257736 407.12551880]
[-4.76880264 402.43655396]
[0.05719493 388.23410034]
[4.88319254 374.03164673]
[9.70919037 359.82919312]
[14.53518772 345.62673950]
[19.36118507 331.42428589]
[18.24453354 328.85302734]
[18.07909966 325.68457031]
[19.09746552 322.27893066]
[21.39768791 319.07369995]
[24.92033195 316.53500366]
[22.56036758 301.82855225]
[34.93494797 291.97055054]
[40.59773636 278.08053589]
[46.26052094 264.19049072]
[51.92330933 250.30047607]
[57.48253632 236.36866760]
[62.93789291 222.39587402]
[68.39324951 208.42308044]
[73.84860992 194.45027161]
[77.92827606 180.01571655]
[80.59407043 165.25450134]
[83.25986481 150.49328613]
[85.92565918 135.73207092]
[88.59145355 120.97085571]
[78.47177124 110.31829071]
[76.50679016 95.75725555]
[83.44082642 82.80332947]
[96.64733124 76.36334991]
[99.31312561 61.60213089]
[101.97891998 46.84091568]
[104.64471436 32.07969666]
[107.31050873 17.31848145]
[96.75072479 6.10254860]
[94.84234619 -9.00412178]
[102.10929871 -22.18195915]
[115.58119202 -28.47847939]
[118.24698639 -43.23969650]
[111.54727173 -54.26134109]
[114.07151031 -66.50111389]
[123.93231964 -73.50761414]
[126.81758881 -88.22750092]
[129.70286560 -102.94739532]
[117.73638916 -109.45104218]
[108.09786987 -119.04975128]
[101.56092072 -130.95971680]
[98.64646149 -144.21221924]
[99.58118439 -157.73231506]
[104.27996826 -170.42613220]
[112.35353851 -181.26928711]
[123.14068604 -189.38961792]
[135.76242065 -194.13728333]
[149.19360352 -195.13681030]
[152.51585388 -209.76426697]
[148.02723694 -224.93537903]
[158.39126587 -235.63287354]
[161.71353149 -250.26033020]
[164.48913574 -265.00131226]
[166.71424866 -279.83532715]
[168.93937683 -294.66937256]
[158.05032349 -305.56594849]
[155.69300842 -320.60910034]
[162.56439209 -333.99746704]
[175.84283447 -340.69229126]
[178.06796265 -355.52633667]
[180.29307556 -370.36038208]
[182.51818848 -385.19442749]
[168.57490540 -390.92575073]
[156.40878296 -399.82794189]
[146.72717285 -411.38345337]
[140.09294128 -424.92047119]
[136.89178467 -439.65191650]
[137.30982971 -454.72137451]
[141.32275391 -469.25271606]
[148.69726562 -482.40112305]
[159.00460815 -493.40209961]
[171.64553833 -501.61614990]
[185.88513184 -506.56564331]
[200.89549255 -507.96289062]
[215.80397034 -505.72659302]
[229.74377441 -499.98681641]
[241.90449524 -491.07723999]
[251.57910156 -479.51586914]
[258.20510864 -465.97485352]
[261.39733887 -451.24145508]
[260.97015381 -436.17224121]
[256.94842529 -421.64334106]
[249.56594849 -408.49942017]
[239.25193787 -397.50466919]
[226.60603333 -389.29830933]
[212.36344910 -384.35742188]
[197.35223389 -382.96929932]
[195.12712097 -368.13525391]
[192.90199280 -353.30120850]
[190.67687988 -338.46716309]
[201.40667725 -328.17108154]
[204.04750061 -313.35589600]
[197.38027954 -299.66641235]
[183.77340698 -292.44427490]
[181.54829407 -277.61022949]
[179.32318115 -262.77618408]
[192.75341797 -269.45663452]
[206.41383362 -263.26043701]
[210.23448181 -248.75515747]
[201.39891052 -236.63359070]
[186.42037964 -235.83126831]
[176.34098816 -246.93807983]
[173.01872253 -232.31062317]
[177.74497986 -218.18574524]
[167.14332581 -206.44200134]
[163.82106018 -191.81454468]
[177.82815552 -183.17189026]
[188.04579163 -170.23588562]
[193.22525024 -154.55912781]
[192.72381592 -138.03085327]
[186.58454895 -122.64920807]
[175.53309631 -110.27980042]
[160.89208984 -102.42932892]
[144.42276001 -100.06212616]
[141.53747559 -85.34223175]
[138.65220642 -70.62233734]
[145.22586060 -54.35107422]
[133.00820923 -40.57390213]
[130.34240723 -25.81268311]
[140.76089478 -15.20169163]
[142.95944214 -0.31443614]
[135.88758850 13.17045307]
[122.07172394 19.98427582]
[119.40592957 34.74549484]
[116.74013519 49.50671005]
[114.07434082 64.26792908]
[111.40854645 79.02914429]
[121.52822876 89.68170929]
[123.49320984 104.24274445]
[116.55917358 117.19667053]
[103.35266876 123.63665009]
[100.68687439 138.39787292]
[98.02108002 153.15908813]
[95.35528564 167.92030334]
[92.68949127 182.68151855]
[102.68817139 171.50000000]
[116.33676147 165.27777100]
[131.33522034 165.06340027]
[145.15606689 170.89300537]
[155.47023010 181.78421021]
[160.53959656 195.90162659]
[159.50988770 210.86624146]
[152.55462646 224.15625000]
[140.84590149 233.53205872]
[126.35683441 237.41366577]
[111.52909088 235.14695740]
[98.86139679 227.11392212]
[90.48849487 214.66827393]
[87.82140350 199.90563965]
[82.36605072 213.87843323]
[76.91069031 227.85122681]
[71.45532990 241.82402039]
[71.24937439 250.95613098]
[65.81333923 255.96325684]
[60.15055084 269.85327148]
[54.48776245 283.74331665]
[48.82497787 297.63333130]
[50.77990341 313.33331299]
[38.81035995 322.19778442]
[33.56364059 336.25027466]
[28.73764420 350.45272827]
[23.91164589 364.65518188]
[19.08564758 378.85763550]
[14.25965023 393.06008911]
[9.43365288 407.26254272]
[18.21282196 419.92083740]
[17.85914421 435.14346313]
[8.71777630 447.09750366]
[-5.53909731 451.32592773]
[-10.36509514 465.52838135]
[-10.16307545 474.66058350]
[-15.37011433 479.90545654]
[-20.40703011 494.03448486]
[-25.44394684 508.16351318]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 210]
[25 209]
[26 208]
[27 206]
[28 205]
[32 201]
[33 200]
[34 199]
[35 198]
[36 197]
[37 196]
[42 195]
[44 193]
[45 192]
[46 191]
[47 190]
[48 188]
[49 187]
[50 186]
[51 185]
[52 171]
[53 170]
[54 169]
[55 168]
[56 167]
[60 163]
[61 162]
[62 161]
[63 160]
[64 159]
[68 155]
[69 154]
[72 152]
[73 151]
[74 150]
[84 142]
[85 141]
[87 139]
[88 138]
[89 132]
[90 131]
[91 130]
[95 126]
[96 125]
[97 124]
[98 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
