%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[112.37231445 446.28314209]
[105.30848694 459.86108398]
[92.73717499 468.59152222]
[77.54715729 470.46826172]
[63.22900391 465.06002808]
[53.07291794 453.60958862]
[49.41268539 438.74816895]
[53.08941269 423.89083862]
[63.25820541 412.45169067]
[77.58235168 407.05935669]
[79.36482239 392.16564941]
[81.14728546 377.27191162]
[82.92975616 362.37820435]
[84.71221924 347.48449707]
[86.49468231 332.59075928]
[88.27715302 317.69705200]
[89.28141022 302.73071289]
[89.50473785 287.73236084]
[89.72806549 272.73403931]
[89.95139313 257.73568726]
[90.06306458 242.73611450]
[90.06306458 227.73611450]
[90.06306458 212.73611450]
[90.06306458 197.73611450]
[82.21703339 191.18991089]
[79.20618439 181.19575500]
[82.25582886 170.98400879]
[90.59045410 163.99523926]
[91.03705597 149.00189209]
[83.68212891 136.04989624]
[91.82688141 122.48620605]
[92.27348328 107.49285889]
[89.38821411 92.77296448]
[83.31437683 79.05770111]
[77.24054718 65.34243774]
[71.16670990 51.62716675]
[65.09287262 37.91189957]
[59.98575592 33.71322632]
[58.05546951 28.36804008]
[59.04915619 23.69667625]
[53.38636780 9.80665016]
[39.02781677 12.50639820]
[24.42352676 12.34476566]
[10.13797379 9.32994652]
[-3.27707124 3.58037448]
[-15.30384636 -4.67992544]
[-25.47858810 -15.13006687]
[-33.40940857 -27.36476707]
[-38.79138947 -40.91006470]
[-41.41831970 -55.24167633]
[-41.19056702 -69.80530548]
[-38.11888504 -84.03804779]
[-32.32390213 -97.39018250]
[-24.03139687 -109.34639740]
[-13.56349277 -119.44565582]
[-1.32615352 -127.29899597]
[-6.78151035 -141.27178955]
[-12.23686790 -155.24458313]
[-17.69222450 -169.21739197]
[-31.88972855 -175.62586975]
[-37.22319031 -189.87399292]
[-31.02618599 -203.36964417]
[-36.48154449 -217.34243774]
[-41.93690109 -231.31523132]
[-47.39225769 -245.28804016]
[-52.84761429 -259.26083374]
[-58.30297089 -273.23364258]
[-63.21751404 -277.65615845]
[-64.90720367 -283.08221436]
[-63.70592117 -287.70455933]
[-68.74283600 -301.83358765]
[-73.77975464 -315.96261597]
[-79.60912323 -322.99511719]
[-78.78477478 -330.33966064]
[-83.61077118 -344.54211426]
[-88.43676758 -358.74456787]
[-93.26276398 -372.94702148]
[-98.08876801 -387.14947510]
[-112.97894287 -385.00534058]
[-128.00955200 -385.63403320]
[-142.66867065 -389.01409912]
[-156.45701599 -395.03042603]
[-168.90493774 -403.47814941]
[-179.58850098 -414.06945801]
[-188.14379883 -426.44369507]
[-194.27943420 -440.17935181]
[-197.78646851 -454.80862427]
[-198.54542542 -469.83322144]
[-196.53044128 -484.74142456]
[-191.81018066 -499.02548218]
[-184.54539490 -512.19885254]
[-174.98352051 -523.81286621]
[-163.45024109 -533.47192383]
[-150.33836365 -540.84710693]
[-136.09448242 -545.68719482]
[-121.20372009 -547.82733154]
[-106.17327881 -547.19458008]
[-91.51506805 -543.81054688]
[-77.72835541 -537.79052734]
[-65.28269958 -529.33941650]
[-54.60200119 -518.74523926]
[-46.05004120 -506.36871338]
[-39.91809464 -492.63137817]
[-36.41501617 -478.00115967]
[-35.66011429 -462.97637939]
[-37.67910004 -448.06869507]
[-42.40321350 -433.78594971]
[-49.67155075 -420.61453247]
[-59.23655319 -409.00311279]
[-70.77244568 -399.34713745]
[-83.88630676 -391.97546387]
[-79.06031036 -377.77301025]
[-74.23431396 -363.57055664]
[-69.40831757 -349.36810303]
[-64.58232117 -335.16564941]
[-59.65072250 -320.99951172]
[-54.61380768 -306.87048340]
[-49.57689285 -292.74145508]
[-44.33017349 -278.68899536]
[-38.87481689 -264.71618652]
[-33.41946030 -250.74339294]
[-27.96410179 -236.77059937]
[-22.50874519 -222.79779053]
[-17.05338860 -208.82499695]
[-3.35150123 -203.09840393]
[2.38005424 -189.00572205]
[-3.71942687 -174.67274475]
[1.73593020 -160.69995117]
[7.19128752 -146.72714233]
[12.64664459 -132.75434875]
[27.84887123 -135.33177185]
[43.26078033 -134.70086670]
[58.21241760 -130.88668823]
[72.05334473 -124.05276489]
[84.18093872 -114.49401855]
[94.06664276 -102.62407684]
[101.27897644 -88.95734406]
[105.50240326 -74.08675385]
[106.55108643 -58.65798569]
[104.37712860 -43.34148407]
[99.07267761 -28.80329514]
[90.86610413 -15.67610455]
[80.11209869 -4.53171635]
[67.27639771 4.14386368]
[72.93917847 18.03388977]
[78.80814362 31.83806801]
[84.88197327 45.55333328]
[90.95581055 59.26860046]
[97.02964783 72.98386383]
[103.10347748 86.69913483]
[103.75170135 71.71315002]
[107.27184296 57.13204193]
[113.53227997 43.50094223]
[122.29898071 31.32945824]
[133.24418640 21.07262802]
[145.95869446 13.11391258]
[159.96717834 7.75085306]
[174.74591064 5.18395185]
[189.74238586 5.50917435]
[204.39595032 8.71436214]
[218.15875244 14.67968655]
[230.51628113 23.18212891]
[241.00653076 33.90382004]
[249.23731995 46.44392395]
[254.90092468 60.33361435]
[257.78561401 75.05361938]
[257.78353882 90.05361938]
[254.89479065 104.77282715]
[249.22735596 118.66095734]
[240.99311829 131.19879150]
[230.49990845 141.91758728]
[218.14004517 150.41662598]
[204.37559509 156.37815857]
[189.72114563 159.57929993]
[174.72457886 159.90039062]
[159.94656372 157.32942200]
[145.93955994 151.96249390]
[133.22723389 144.00027466]
[122.28485870 133.74043274]
[113.52152252 121.56652832]
[107.26683044 107.93946838]
[106.82022858 122.93281555]
[114.14321899 136.95724487]
[106.03041077 149.44850159]
[105.58380127 164.44184875]
[115.93016052 181.74258423]
[105.06306458 197.73611450]
[105.06306458 212.73611450]
[105.06306458 227.73611450]
[105.06306458 242.73611450]
[108.19246674 251.31776428]
[104.94972992 257.95901489]
[104.72640228 272.95736694]
[104.50307465 287.95568848]
[104.27974701 302.95404053]
[114.98177338 292.44372559]
[129.92553711 291.14614868]
[142.27897644 299.65454102]
[146.39424133 314.07897949]
[140.38989258 327.82482910]
[127.01104736 334.60763550]
[112.37432861 331.32641602]
[103.17086792 319.47952271]
[101.38840485 334.37322998]
[99.60593414 349.26696777]
[97.82347107 364.16067505]
[96.04100800 379.05438232]
[94.25853729 393.94812012]
[92.47607422 408.84182739]
[105.12320709 417.46206665]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 209]
[11 208]
[12 207]
[13 206]
[14 205]
[15 204]
[16 203]
[17 195]
[18 194]
[19 193]
[20 192]
[21 190]
[22 189]
[23 188]
[24 187]
[28 185]
[29 184]
[31 182]
[32 181]
[33 150]
[34 149]
[35 148]
[36 147]
[37 146]
[40 145]
[41 144]
[56 130]
[57 129]
[58 128]
[59 127]
[62 124]
[63 123]
[64 122]
[65 121]
[66 120]
[67 119]
[70 118]
[71 117]
[72 116]
[74 115]
[75 114]
[76 113]
[77 112]
[78 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
