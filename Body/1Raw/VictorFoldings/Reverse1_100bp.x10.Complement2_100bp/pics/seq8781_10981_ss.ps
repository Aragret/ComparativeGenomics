%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[182.65342712 510.30105591]
[178.11700439 495.99530029]
[174.71697998 481.37771606]
[172.47434998 466.53842163]
[171.40289307 451.56890869]
[171.50926208 436.56149292]
[172.79277039 421.60867310]
[175.24551392 406.80264282]
[178.85237122 392.23471069]
[183.59111023 377.99468994]
[189.43249512 364.17034912]
[196.34053040 350.84695435]
[204.27262878 338.10662842]
[213.17987061 326.02792358]
[223.00733948 314.68530273]
[233.69445801 304.14871216]
[224.03364563 292.67401123]
[214.37283325 281.19931030]
[204.71202087 269.72460938]
[195.05120850 258.24990845]
[185.39039612 246.77520752]
[178.67773438 243.68298340]
[175.67271423 235.05699158]
[174.25509644 249.98985291]
[163.65911865 260.60708618]
[148.72912598 262.05459595]
[136.29090881 253.67063904]
[132.03105164 239.28822327]
[137.89710999 225.48281860]
[151.20718384 218.56605530]
[165.87768555 221.70115662]
[157.64888000 209.15975952]
[149.42007446 196.61834717]
[141.19126892 184.07695007]
[132.96244812 171.53555298]
[130.24835205 170.83427429]
[127.64850616 169.01565552]
[125.58988190 166.11781311]
[124.47777557 162.33261108]
[124.64315033 157.99363708]
[117.17540741 144.98469543]
[109.70766449 131.97573853]
[102.23992157 118.96678925]
[88.28125000 115.08068848]
[81.06764984 102.51445770]
[84.75112152 88.50095367]
[77.28338623 75.49200439]
[69.81564331 62.48305130]
[62.34790039 49.47409821]
[54.88016129 36.46514511]
[55.82981873 51.43505096]
[53.46984482 66.24823761]
[47.91538239 80.18193817]
[39.43745041 92.55628967]
[28.44969940 102.76752472]
[15.48824978 110.31742096]
[1.18552065 114.83758545]
[-13.76062775 116.10748291]
[-28.62093925 114.06515503]
[-42.67034912 108.81023407]
[-55.22335052 100.59913635]
[-65.66745758 89.83248901]
[-73.49308014 77.03562927]
[-78.31838226 62.83293915]
[-79.90793610 47.91740036]
[-78.18418121 33.01677322]
[-73.23121643 18.85809517]
[-65.29071808 6.13219929]
[-54.75011063 -4.53999186]
[-42.12370300 -12.63775635]
[-28.02755928 -17.76598740]
[-13.14946461 -19.67446709]
[1.78464675 -18.27007675]
[16.04610634 -13.62133884]
[28.93906593 -5.95507622]
[39.83444977 4.35465765]
[48.19758606 16.79896164]
[46.19357300 1.93343341]
[34.61365128 -4.94552422]
[29.18911171 -17.06100273]
[31.69581604 -29.89838982]
[40.99869919 -38.81387329]
[39.21623230 -53.70759201]
[37.43376923 -68.60131073]
[35.65130234 -83.49502563]
[33.64728928 -98.36055756]
[31.42217064 -113.19459534]
[29.19705391 -128.02864075]
[26.97193718 -142.86268616]
[24.74682045 -157.69673157]
[9.78036308 -159.74168396]
[-4.00314951 -165.92161560]
[-15.48635197 -175.73551941]
[-23.73835182 -188.38783264]
[-28.09019470 -202.85290527]
[-28.18910027 -217.95809937]
[-24.02704620 -232.47891235]
[-15.94143486 -245.23820496]
[-4.58772945 -255.20164490]
[9.11367607 -261.56152344]
[24.05207062 -263.80230713]
[39.01646423 -261.74230957]
[52.79376221 -255.54853821]
[64.26709747 -245.72309875]
[72.50638580 -233.06250000]
[76.84369659 -218.59306335]
[76.92742157 -203.48777771]
[72.75078583 -188.97116089]
[64.65235901 -176.21998596]
[53.28865051 -166.26795959]
[39.58086395 -159.92184448]
[41.80598068 -145.08779907]
[44.03109741 -130.25375366]
[46.25621414 -115.41971588]
[48.48133087 -100.58567047]
[51.72135544 -97.07692719]
[52.79159927 -91.49556732]
[50.54502106 -85.27749634]
[52.32748413 -70.38377380]
[54.10995102 -55.49005890]
[55.89241791 -40.59634018]
[69.54535675 -30.77615356]
[71.91828156 -13.78544807]
[61.05910110 -0.07058025]
[63.06311417 14.79494762]
[67.88911438 28.99740410]
[75.35684967 42.00635529]
[82.82459259 55.01530838]
[90.29233551 68.02426147]
[97.76007843 81.03321075]
[111.71875000 84.91931152]
[118.93235016 97.48554230]
[115.24887848 111.49904633]
[122.71661377 124.50799561]
[130.18435669 137.51695251]
[137.65209961 150.52590942]
[145.50386047 163.30674744]
[153.73266602 175.84814453]
[161.96147156 188.38954163]
[170.19027710 200.93093872]
[178.41908264 213.47235107]
[187.28997803 225.56809998]
[196.86509705 237.11439514]
[206.52590942 248.58909607]
[216.18672180 260.06381226]
[225.84753418 271.53851318]
[235.50834656 283.01321411]
[245.16915894 294.48791504]
[257.37261963 285.75238037]
[270.22387695 278.00128174]
[283.64364624 271.28234863]
[297.54922485 265.63708496]
[311.85482788 261.10021973]
[326.47232056 257.69973755]
[341.31155396 255.45664978]
[356.28103638 254.38475037]
[371.28845215 254.49064636]
[386.24130249 255.77369690]
[401.04739380 258.22598267]
[415.61544800 261.83239746]
[429.85562134 266.57070923]
[443.68014526 272.41168213]
[457.00375366 279.31930542]
[469.74432373 287.25100708]
[481.82330322 296.15786743]
[493.16622925 305.98498535]
[503.70312500 316.67178345]
[513.36907959 328.15234375]
[522.10449219 340.35592651]
[529.85546875 353.20724487]
[536.57421875 366.62707520]
[542.21936035 380.53271484]
[546.75610352 394.83837891]
[550.15643311 409.45590210]
[552.39935303 424.29516602]
[553.47106934 439.26464844]
[553.36505127 454.27206421]
[552.08184814 469.22491455]
[549.62939453 484.03097534]
[546.02282715 498.59896851]
[541.28442383 512.83911133]
[535.44329834 526.66357422]
[528.53552246 539.98712158]
[520.60369873 552.72760010]
[511.69668579 564.80651855]
[501.86944580 576.14929199]
[491.18255615 586.68609619]
[479.70187378 596.35192871]
[467.49822998 605.08721924]
[454.64682007 612.83807373]
[441.22692871 619.55670166]
[427.32122803 625.20172119]
[413.01553345 629.73828125]
[398.39794922 633.13842773]
[383.55868530 635.38122559]
[368.58920288 636.45281982]
[353.58178711 636.34661865]
[338.62893677 635.06323242]
[323.82290649 632.61065674]
[309.25494385 629.00396729]
[295.01486206 624.26538086]
[281.19046021 618.42413330]
[267.86697388 611.51623535]
[255.12657166 603.58422852]
[243.04777527 594.67712402]
[231.70506287 584.84979248]
[221.16836548 574.16278076]
[211.50263977 562.68200684]
[202.76750183 550.47827148]
[195.01678467 537.62677002]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 148]
[17 147]
[18 146]
[19 145]
[20 144]
[21 143]
[23 142]
[31 141]
[32 140]
[33 139]
[34 138]
[35 137]
[40 136]
[41 135]
[42 134]
[43 133]
[46 130]
[47 129]
[48 128]
[49 127]
[50 126]
[77 125]
[78 124]
[82 121]
[83 120]
[84 119]
[85 118]
[86 115]
[87 114]
[88 113]
[89 112]
[90 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
