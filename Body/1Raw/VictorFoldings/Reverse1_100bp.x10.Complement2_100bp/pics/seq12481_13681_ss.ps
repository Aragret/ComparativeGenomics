%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUUCGAAUCCCUCUCGACCCAACAAACCCAACACCGAGUCACAGUCAAGCUCUAUUAUUGAAGAACCAGAUCCGUGUACUUAUAACAACACCCCUxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[80.13781738 610.58190918]
[92.06484985 600.65594482]
[90.94920349 585.69744873]
[89.83354950 570.73901367]
[88.71790314 555.78057861]
[87.60225677 540.82214355]
[86.48661041 525.86364746]
[85.37095642 510.90521240]
[83.33729553 508.97586060]
[81.94534302 506.12472534]
[81.55001831 502.59213257]
[82.41277313 498.74243164]
[84.66129303 495.02786255]
[84.43796539 480.02951050]
[84.21463013 465.03118896]
[83.99130249 450.03283691]
[83.76797485 435.03451538]
[83.54464722 420.03616333]
[83.32131958 405.03784180]
[82.98634338 390.04156494]
[82.53974152 375.04821777]
[74.42693329 362.55694580]
[81.74992371 348.53253174]
[81.30331421 333.53918457]
[80.85670471 318.54583740]
[79.74105835 303.58737183]
[77.95859528 288.69366455]
[76.17612457 273.79995728]
[74.39366150 258.90621948]
[72.61119843 244.01251221]
[67.33277893 258.05310059]
[58.19788361 269.95074463]
[45.99676132 278.67614746]
[31.78493881 283.47448730]
[16.79187584 283.93066406]
[2.31462598 280.00518799]
[-10.39438629 272.03768921]
[-20.23570251 260.71743774]
[-26.35795212 247.02371216]
[-28.23149872 232.14117432]
[-25.69426155 217.35731506]
[-18.96573639 203.95109558]
[-8.62800980 193.08226013]
[4.42460346 185.69110107]
[19.06292152 182.41700745]
[34.02058029 183.54324341]
[48.00359726 188.97235107]
[59.80229950 198.23466492]
[68.39598083 210.52891541]
[73.04061890 224.78805542]
[75.48634338 209.98878479]
[77.93207550 195.18951416]
[70.87688446 179.12118530]
[82.67892456 164.98635864]
[84.90403748 150.15231323]
[87.12915802 135.31826782]
[89.35427094 120.48422241]
[91.57939148 105.65018463]
[89.56571960 97.84520721]
[93.94965363 90.61250305]
[96.39537811 75.81323242]
[98.84111023 61.01396179]
[100.17934418 46.07377625]
[100.40267181 31.07543945]
[100.62599945 16.07710266]
[100.84932709 1.07876468]
[101.07265472 -13.91957283]
[101.29598236 -28.91790962]
[92.88886261 -38.69968796]
[93.38364410 -51.18723679]
[101.97009277 -59.70776749]
[102.41669464 -74.70111847]
[99.54418182 -83.37213135]
[102.98322296 -89.91390991]
[103.65300751 -104.89894867]
[103.98798370 -119.89520264]
[103.98798370 -134.89520264]
[103.98798370 -149.89520264]
[103.98798370 -164.89520264]
[103.98798370 -179.89520264]
[103.98798370 -194.89520264]
[95.13862610 -182.78367615]
[81.45935822 -176.62921143]
[66.52590179 -178.04054260]
[54.24182892 -186.64875793]
[47.81816101 -200.20370483]
[48.93403625 -215.16213989]
[57.29776382 -227.61396790]
[70.72309113 -234.30430603]
[85.70066071 -233.48432922]
[98.31537628 -225.36836243]
[105.26958466 -212.07878113]
[107.49470520 -226.91281128]
[100.35923004 -243.88829041]
[111.81836700 -257.17944336]
[113.82238007 -272.04498291]
[115.82639313 -286.91052246]
[117.83040619 -301.77603149]
[119.83441925 -316.64157104]
[105.96747589 -322.60900879]
[94.22547913 -332.09732056]
[85.47975922 -344.40240479]
[80.37931061 -358.61114502]
[79.30262756 -373.66912842]
[82.32958984 -388.45901489]
[89.23559570 -401.88320923]
[99.50815582 -412.94564819]
[112.38499451 -420.82534790]
[126.91055298 -424.93759155]
[142.00694275 -424.97726440]
[156.55390930 -420.94140625]
[169.47196960 -413.12948608]
[179.80253601 -402.12118530]
[186.77899170 -388.73345947]
[189.88363647 -373.95968628]
[188.88609314 -358.89624023]
[183.86038208 -344.66091919]
[175.17945862 -332.31002808]
[163.48747253 -322.76016235]
[149.65208435 -316.71990967]
[134.69995117 -314.63754272]
[132.69593811 -299.77203369]
[130.69192505 -284.90649414]
[128.68791199 -270.04098511]
[126.68389893 -255.17544556]
[133.76618958 -245.36892700]
[132.21826172 -232.96780396]
[122.32875061 -224.68769836]
[120.10363007 -209.85365295]
[118.98798370 -194.89520264]
[118.98798370 -179.89520264]
[118.98798370 -164.89520264]
[118.98798370 -149.89520264]
[118.98798370 -134.89520264]
[118.98798370 -119.89520264]
[121.20925140 -117.15689850]
[122.21455383 -113.20665741]
[121.44871521 -108.62770844]
[118.63804626 -104.22915649]
[117.96826172 -89.24411774]
[117.41004944 -74.25450897]
[116.96343994 -59.26116180]
[126.10212708 -44.27946091]
[116.29431915 -28.69458199]
[116.07099152 -13.69624519]
[115.84766388 1.30209243]
[115.62433624 16.30043030]
[115.40100861 31.29876709]
[115.17768097 46.29710388]
[124.20637512 34.31867981]
[137.97575378 28.36854744]
[152.88655090 30.00205994]
[165.04109192 38.79222107]
[171.26223755 52.44130325]
[169.92378235 67.38146973]
[161.37557983 79.70738983]
[147.85214233 86.19711304]
[132.88844299 85.15422821]
[120.39595795 76.85134125]
[113.64038086 63.45969009]
[111.19464874 78.25895691]
[108.74892426 93.05822754]
[106.41343689 107.87529755]
[104.18831635 122.70934296]
[101.96320343 137.54338074]
[99.73808289 152.37742615]
[97.51296997 167.21147156]
[104.53786469 178.02876282]
[102.37917328 190.33825684]
[92.73134613 197.63523865]
[90.28561401 212.43450928]
[87.83988953 227.23377991]
[87.50491333 242.23004150]
[89.28737640 257.12374878]
[91.06984711 272.01748657]
[92.85231018 286.91119385]
[94.63477325 301.80490112]
[104.73309326 290.71328735]
[119.70954895 289.87319946]
[130.98495483 299.76589966]
[132.10023499 314.72436523]
[122.41652679 326.17974854]
[107.48107910 327.56985474]
[95.85005951 318.09924316]
[96.29666138 333.09259033]
[96.74327087 348.08593750]
[104.88802338 361.64962769]
[97.53308868 374.60162354]
[97.97969818 389.59497070]
[101.36322784 398.07962036]
[98.31966400 404.81451416]
[98.54299164 419.81283569]
[98.76631927 434.81118774]
[98.98964691 449.80950928]
[99.21297455 464.80786133]
[99.43630219 479.80618286]
[99.65962982 494.80453491]
[100.32941437 509.78955078]
[101.44506073 524.74798584]
[102.56070709 539.70648193]
[103.67636108 554.66491699]
[104.79200745 569.62335205]
[105.90765381 584.58184814]
[107.02330017 599.54028320]
[120.29080963 607.58721924]
[126.26353455 621.90875244]
[122.64484406 636.99792480]
[110.82618713 647.05273438]
[95.35209656 648.20684814]
[82.17266083 640.01647949]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 204]
[3 203]
[4 202]
[5 201]
[6 200]
[7 199]
[8 198]
[13 197]
[14 196]
[15 195]
[16 194]
[17 193]
[18 192]
[19 191]
[20 189]
[21 188]
[23 186]
[24 185]
[25 184]
[26 177]
[27 176]
[28 175]
[29 174]
[30 173]
[50 172]
[51 171]
[52 170]
[54 167]
[55 166]
[56 165]
[57 164]
[58 163]
[60 162]
[61 161]
[62 160]
[63 149]
[64 148]
[65 147]
[66 146]
[67 145]
[68 144]
[71 142]
[72 141]
[74 140]
[75 139]
[76 135]
[77 134]
[78 133]
[79 132]
[80 131]
[81 130]
[92 129]
[93 128]
[95 125]
[96 124]
[97 123]
[98 122]
[99 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
