%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[81.14601135 617.08917236]
[66.19509888 618.52087402]
[51.18156815 618.10443115]
[36.33301544 615.84606934]
[21.87454796 611.78009033]
[8.02534962 605.96807861]
[-5.00463057 598.49816895]
[-17.01786041 589.48364258]
[-27.83222198 579.06109619]
[-37.28377151 567.38854980]
[-45.22922897 554.64300537]
[-51.54814148 541.01763916]
[-56.14471436 526.71899414]
[-58.94926453 511.96386719]
[-59.91928101 496.97592163]
[-59.04005051 481.98236084]
[-56.32490921 467.21051025]
[-51.81501770 452.88427734]
[-45.57873917 439.22088623]
[-37.71061707 426.42742920]
[-28.32992935 414.69790649]
[-17.57888603 404.21005249]
[-5.62046957 395.12292480]
[7.36403322 387.57427979]
[21.17778015 381.67849731]
[35.61135864 377.52502441]
[50.44596100 375.17678833]
[65.45669556 374.66940308]
[58.88571930 361.30258179]
[67.82335663 348.24774170]
[69.16159058 333.30755615]
[70.49982452 318.36737061]
[71.83805847 303.42718506]
[73.17629242 288.48699951]
[74.51452637 273.54681396]
[72.19400024 269.37258911]
[72.47105408 263.69628906]
[76.12152100 258.18395996]
[77.90398407 243.29025269]
[71.73390198 229.73373413]
[81.05626678 216.95077515]
[82.83873749 202.05705261]
[84.62120056 187.16333008]
[76.85556030 171.42605591]
[88.01467896 156.77833557]
[89.57519531 141.85974121]
[91.13571930 126.94113159]
[92.13998413 111.97478485]
[85.68240356 99.57352448]
[92.86666870 87.57860565]
[93.31327820 72.58525848]
[93.75988007 57.59190750]
[79.60420227 49.04740143]
[71.73421478 34.61275864]
[72.21477509 18.27305603]
[80.82008362 4.48521185]
[95.12107849 -3.03768492]
[95.34440613 -18.03602219]
[95.56773376 -33.03435898]
[95.79106140 -48.03269577]
[96.01438904 -63.03103638]
[96.23771667 -78.02937317]
[96.46104431 -93.02770996]
[94.78950500 -107.93428040]
[91.24983215 -122.51065826]
[87.71015930 -137.08703613]
[84.17048645 -151.66340637]
[79.10437775 -159.26422119]
[80.68833923 -166.48313904]
[77.36608124 -181.11061096]
[74.04382324 -195.73806763]
[70.72155762 -210.36552429]
[58.57410812 -216.18394470]
[52.09030914 -227.76715088]
[53.44171906 -240.77699280]
[61.91210556 -250.48687744]
[58.80799484 -265.16220093]
[55.70388794 -279.83749390]
[52.59977722 -294.51278687]
[49.49566650 -309.18807983]
[46.39155579 -323.86340332]
[35.96592331 -335.76367188]
[40.90195084 -349.81661987]
[37.79784012 -364.49191284]
[22.74149132 -364.50134277]
[8.01620197 -367.64132690]
[-5.73430443 -373.77459717]
[-17.90891266 -382.63308716]
[-27.97540474 -393.82949829]
[-35.49371338 -406.87435913]
[-40.13516998 -421.19744873]
[-41.69687271 -436.17257690]
[-40.11054993 -451.14514160]
[-35.44554520 -465.46057129]
[-27.90579987 -478.49304199]
[-17.82091331 -489.67288208]
[-5.63175488 -498.51132202]
[8.12881756 -504.62200928]
[22.85925102 -507.73779297]
[37.91559219 -507.72244263]
[52.63964462 -504.57666016]
[66.38774109 -498.43795776]
[78.55886078 -489.57470703]
[88.62094879 -478.37432861]
[96.13412476 -465.32650757]
[100.76994324 -451.00158691]
[102.32575226 -436.02584839]
[100.73354340 -421.05392456]
[96.06291199 -406.74032593]
[88.51803589 -393.71081543]
[78.42874908 -382.53494263]
[66.23611450 -373.70129395]
[52.47314072 -367.59603882]
[55.57725143 -352.92071533]
[65.78085327 -342.07012939]
[61.06686020 -326.96749878]
[64.17096710 -312.29220581]
[67.27507782 -297.61691284]
[70.37918854 -282.94158936]
[73.48329926 -268.26629639]
[76.58740997 -253.59098816]
[91.06201935 -245.02801514]
[94.94131470 -228.31677246]
[85.34902191 -213.68778992]
[88.67127991 -199.06031799]
[91.99353790 -184.43286133]
[95.31579590 -169.80540466]
[98.74685669 -155.20307922]
[102.28652954 -140.62670898]
[105.82620239 -126.05033112]
[109.36587524 -111.47395325]
[113.16909027 -125.98380280]
[121.42265320 -138.50892639]
[133.25555420 -147.72750854]
[147.41903687 -152.66671753]
[162.41839600 -152.80528259]
[176.67071533 -148.12860107]
[188.67190552 -139.13018799]
[197.15547180 -126.75968933]
[201.22608948 -112.32258606]
[200.45420837 -97.34246063]
[194.92127991 -83.40019989]
[185.21119690 -71.96716309]
[172.34869385 -64.24990845]
[157.69117737 -61.06285858]
[142.78549194 -62.74234390]
[129.20468140 -69.11112976]
[118.38194275 -79.49710083]
[111.45938110 -92.80438232]
[111.23605347 -77.80604553]
[111.01272583 -62.80770874]
[110.78939819 -47.80936813]
[110.56607056 -32.81103134]
[110.34274292 -17.81269455]
[110.11941528 -2.81435728]
[122.28004456 3.40143442]
[130.61621094 14.30268288]
[133.45578003 27.79660606]
[130.18881226 41.26156998]
[121.39749146 52.05641556]
[108.75322723 58.03851318]
[108.30662537 73.03186035]
[107.86001587 88.02521515]
[114.31759644 100.42647552]
[107.13333130 112.42139435]
[119.67456818 104.19233704]
[133.97450256 108.72135925]
[139.49174500 122.66983795]
[132.15919495 135.75547791]
[117.38213348 138.33201599]
[106.05432892 128.50164795]
[104.49380493 143.42025757]
[102.93328094 158.33886719]
[110.43418884 168.83168030]
[108.82729340 181.22529602]
[99.51491547 188.94580078]
[97.73245239 203.83952332]
[95.94998932 218.73323059]
[101.99257660 233.35505676]
[92.79770660 245.07272339]
[91.01523590 259.96643066]
[89.45471191 274.88504028]
[88.11647797 289.82522583]
[86.77824402 304.76541138]
[85.44001007 319.70559692]
[84.10177612 334.64578247]
[82.76354218 349.58596802]
[89.23880005 364.02139282]
[80.39688110 376.00762939]
[95.07849121 379.17465210]
[109.25961304 384.12188721]
[122.72527313 390.77438354]
[135.27133179 399.03128052]
[146.70758057 408.76736450]
[156.86067200 419.83508301]
[165.57667542 432.06665039]
[172.72346497 445.27661133]
[178.19268799 459.26470947]
[181.90142822 473.81890869]
[183.79348755 488.71856689]
[183.84016418 503.73782349]
[182.04074097 518.64892578]
[178.42251587 533.22589111]
[173.04032898 547.24774170]
[165.97576904 560.50189209]
[157.33595276 572.78735352]
[147.25184631 583.91796875]
[135.87631226 593.72491455]
[123.38181305 602.05963135]
[109.95776367 608.79565430]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 189]
[30 187]
[31 186]
[32 185]
[33 184]
[34 183]
[35 182]
[38 181]
[39 180]
[41 178]
[42 177]
[43 176]
[45 173]
[46 172]
[47 171]
[48 165]
[50 163]
[51 162]
[52 161]
[57 155]
[58 154]
[59 153]
[60 152]
[61 151]
[62 150]
[63 149]
[64 131]
[65 130]
[66 129]
[67 128]
[69 127]
[70 126]
[71 125]
[72 124]
[76 121]
[77 120]
[78 119]
[79 118]
[80 117]
[81 116]
[83 114]
[84 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
