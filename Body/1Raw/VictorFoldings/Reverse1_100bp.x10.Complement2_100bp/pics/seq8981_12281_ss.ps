%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[82.07333374 671.58557129]
[67.03888702 670.91357422]
[52.42449188 667.32116699]
[38.79188919 660.94628906]
[26.66508484 652.03411865]
[16.51019287 640.92718506]
[8.71754551 628.05236816]
[3.58666992 613.90454102]
[1.31478286 599.02758789]
[1.98920989 583.99322510]
[5.58402777 569.37945557]
[11.96106148 555.74786377]
[20.87519455 543.62249756]
[31.98379326 533.46942139]
[44.85987091 525.67883301]
[59.00850296 520.55023193]
[73.88585663 518.28076172]
[74.55564117 503.29574585]
[75.22542572 488.31069946]
[75.89521027 473.32565308]
[76.56499481 458.34060669]
[77.23478699 443.35559082]
[77.90457153 428.37054443]
[78.57435608 413.38549805]
[79.24414062 398.40045166]
[79.91392517 383.41543579]
[77.81714630 380.58065796]
[76.98923492 376.58947754]
[77.95876312 372.04928589]
[80.96303558 367.78063965]
[82.30126953 352.84045410]
[70.63662720 345.73739624]
[63.13435745 334.24633789]
[61.30628586 320.57858276]
[65.56567383 307.39389038]
[75.13553619 297.28283691]
[88.18969727 292.25772095]
[89.75022125 277.33914185]
[91.31074524 262.42053223]
[92.76016235 247.49070740]
[94.09839630 232.55053711]
[95.43663025 217.61035156]
[96.77486420 202.67016602]
[98.11309814 187.72998047]
[99.45133209 172.78979492]
[100.78956604 157.84960938]
[100.11978149 142.86456299]
[97.45398712 128.10334778]
[94.78819275 113.34213257]
[85.90407562 102.54564667]
[90.45059204 89.32366180]
[86.37092590 74.88911438]
[74.14448547 64.84796143]
[76.72314453 50.17826843]
[71.26778412 36.20547104]
[65.81243134 22.23267365]
[60.35707092 8.25987625]
[54.90171432 -5.71292114]
[38.66926956 -6.82718325]
[24.59813690 -14.87994576]
[15.48018456 -28.21498108]
[13.09894848 -44.13394165]
[17.88096809 -59.44230652]
[28.82042694 -71.09043121]
[23.15764046 -84.98046112]
[17.49485397 -98.87048340]
[11.83206749 -112.76051331]
[-2.97217298 -123.71112823]
[0.09199002 -140.99053955]
[-5.77697086 -154.79470825]
[-11.64593124 -168.59889221]
[-17.51489258 -182.40306091]
[-32.08170319 -178.70057678]
[-47.04299164 -177.26521301]
[-62.04804230 -178.13059998]
[-76.74511719 -181.27647400]
[-90.78968811 -186.62908936]
[-103.85253906 -194.06295776]
[-115.62744904 -203.40382385]
[-125.83840942 -214.43272400]
[-134.24604797 -226.89114380]
[-140.65328979 -240.48701477]
[-144.90992737 -254.90164185]
[-146.91619873 -269.79711914]
[-146.62504578 -284.82427979]
[-144.04330444 -299.63085938]
[-139.23150635 -313.86981201]
[-132.30244446 -327.20727539]
[-123.41853333 -339.33065796]
[-112.78804016 -349.95578003]
[-100.66014099 -358.83352661]
[-87.31914520 -365.75582886]
[-73.07777405 -370.56039429]
[-58.26987839 -373.13461304]
[-43.24256897 -373.41815186]
[-28.34810829 -371.40432739]
[-13.93564415 -367.14038086]
[-0.34302470 -360.72625732]
[12.11111832 -352.31228638]
[23.13484383 -342.09573364]
[32.46973801 -330.31607056]
[39.89697647 -317.24945068]
[45.24245834 -303.20217896]
[48.38087463 -288.50350952]
[49.23865509 -273.49801636]
[47.79569626 -258.53747559]
[44.08581924 -243.97253418]
[38.19599152 -230.14463806]
[30.26427841 -217.37796021]
[20.47661018 -205.97172546]
[9.06242371 -196.19334412]
[-3.71071553 -188.27201843]
[2.15824533 -174.46784973]
[8.02720642 -160.66366577]
[13.89616680 -146.85949707]
[24.99345207 -142.04525757]
[29.99595451 -130.59280396]
[25.72209358 -118.42330170]
[31.38488007 -104.53327179]
[37.04766846 -90.64324188]
[42.71045303 -76.75321960]
[56.58266449 -76.58012390]
[69.38153076 -71.11559296]
[79.16171265 -61.15430069]
[84.42304993 -48.17705536]
[84.34059906 -34.13074875]
[78.89378357 -21.13627243]
[68.87451172 -11.16827869]
[74.32987213 2.80451941]
[79.78522491 16.77731705]
[85.24058533 30.75011444]
[90.69593811 44.72291183]
[102.53218079 53.76463699]
[100.34371948 69.43375397]
[103.01018524 54.67265701]
[111.38253021 42.22661591]
[124.04985046 34.19300842]
[138.87748718 31.92563248]
[153.36674500 35.80658722]
[165.07589722 45.18186188]
[172.03175354 58.47155380]
[173.06214905 73.43612671]
[167.99342346 87.55377197]
[157.67974854 98.44543457]
[143.85917664 104.27566528]
[128.86068726 104.06197357]
[115.21182251 97.84037018]
[105.21180725 86.65786743]
[114.09592438 97.45435333]
[109.54940796 110.67633820]
[112.21520996 125.43755341]
[114.88100433 140.19877625]
[119.41683197 125.90100098]
[128.09771729 113.66817474]
[140.09628296 104.66624451]
[154.26885986 99.75321960]
[169.26464844 99.39737701]
[183.65431213 103.63263702]
[196.06634521 112.05532074]
[205.31768799 123.86262512]
[210.52658081 137.92915344]
[211.19654846 152.91418457]
[207.26371765 167.38943481]
[199.10295105 179.97521973]
[187.49206543 189.47193909]
[173.53776550 194.97441101]
[158.57005310 195.95819092]
[144.01557922 192.32951355]
[131.26158142 184.43424988]
[121.52367401 173.02490234]
[115.72975159 159.18783569]
[114.39151764 174.12802124]
[113.05328369 189.06820679]
[111.71504974 204.00839233]
[110.37681580 218.94857788]
[109.03858185 233.88876343]
[107.70034790 248.82894897]
[110.05166626 257.65557861]
[106.22934723 263.98104858]
[104.66883087 278.89965820]
[103.10830688 293.81826782]
[116.58926392 303.39193726]
[123.36385345 318.37194824]
[121.66932678 334.63064575]
[112.06237030 347.74026489]
[97.24145508 354.17868042]
[95.90322113 369.11886597]
[94.89896393 384.08520508]
[94.22917938 399.07025146]
[93.55939484 414.05529785]
[92.88961029 429.04031372]
[92.21982574 444.02536011]
[91.55003357 459.01040649]
[90.88024902 473.99545288]
[90.21046448 488.98046875]
[89.54067993 503.96551514]
[88.87089539 518.95056152]
[103.48645020 522.53826904]
[117.12111664 528.90869141]
[129.25080872 537.81695557]
[139.40928650 548.92059326]
[147.20611572 561.79290771]
[152.34156799 575.93902588]
[154.61827087 590.81530762]
[153.94869995 605.84985352]
[150.35862732 620.46484375]
[143.98599243 634.09844971]
[135.07579041 646.22668457]
[123.97048187 656.38336182]
[111.09692383 664.17810059]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 197]
[18 196]
[19 195]
[20 194]
[21 193]
[22 192]
[23 191]
[24 190]
[25 189]
[26 188]
[30 187]
[31 186]
[37 181]
[38 180]
[39 179]
[40 177]
[41 176]
[42 175]
[43 174]
[44 173]
[45 172]
[46 171]
[47 152]
[48 151]
[49 150]
[51 148]
[52 134]
[54 132]
[55 131]
[56 130]
[57 129]
[58 128]
[64 121]
[65 120]
[66 119]
[67 118]
[69 115]
[70 114]
[71 113]
[72 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
