%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUU\
) } def
/len { sequence length } bind def

/coor [
[86.86940002 567.11499023]
[83.26444244 581.70092773]
[77.66452789 595.64324951]
[70.17864990 608.67041016]
[60.95252991 620.52893066]
[50.16575241 630.98797607]
[38.02829361 639.84399414]
[24.77640343 646.92449951]
[10.66803646 652.09167480]
[-4.02218103 655.24505615]
[-19.00830269 656.32312012]
[-33.99861908 655.30499268]
[-48.70133591 652.21044922]
[-62.83026505 647.09973145]
[-76.11037445 640.07232666]
[-88.28318024 631.26501465]
[-99.11171722 620.84918213]
[-108.38520813 609.02764893]
[-115.92314911 596.03051758]
[-121.57881165 582.11077881]
[-125.24209595 567.53936768]
[-126.84170532 552.59985352]
[-126.34650421 537.58319092]
[-123.76612091 522.78155518]
[-119.15079498 508.48315430]
[-112.59035492 494.96624756]
[-104.21250916 482.49395752]
[-94.18032837 471.30908203]
[-82.68910217 461.62933350]
[-69.96250153 453.64309692]
[-56.24825287 447.50588989]
[-41.81331635 443.33709717]
[-26.93866348 441.21792603]
[-11.91384029 441.18960571]
[2.96869421 443.25268555]
[17.41924667 447.36700439]
[23.49308014 433.65173340]
[29.56691360 419.93649292]
[35.64074707 406.22122192]
[40.46674728 392.01876831]
[44.00641632 377.44238281]
[47.54608917 362.86599731]
[46.06978226 355.62429810]
[51.24849319 348.09976196]
[55.00479507 333.57769775]
[58.21806717 318.92590332]
[60.88386536 304.16470337]
[63.54965973 289.40347290]
[66.21545410 274.64227295]
[68.88124847 259.88104248]
[71.54704285 245.11982727]
[74.21284485 230.35861206]
[76.54833221 215.54153442]
[78.55234528 200.67601013]
[80.55635834 185.81048584]
[78.33467102 178.76165771]
[82.70246124 170.73918152]
[84.92758179 155.90513611]
[87.15270233 141.07109070]
[89.37781525 126.23705292]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[95.37081146 72.16385651]
[96.93133545 57.24525070]
[90.67171478 42.71501160]
[99.69110870 30.86175346]
[101.25163269 15.94314861]
[93.75072479 5.45033216]
[95.35762024 -6.94328117]
[104.66999817 -14.66378784]
[106.45246124 -29.55750465]
[108.23492432 -44.45122147]
[110.01739502 -59.34494019]
[111.79985809 -74.23865509]
[113.58232880 -89.13237762]
[115.36479187 -104.02609253]
[104.30262756 -117.57775879]
[106.42231750 -134.60191345]
[119.92753601 -144.62428284]
[121.48806000 -159.54289246]
[123.04857635 -174.46148682]
[110.74739075 -181.42048645]
[102.05400085 -192.50872803]
[98.25493622 -206.03176880]
[99.89199829 -219.93898010]
[106.68523407 -232.13452148]
[117.58015442 -240.79319763]
[130.91131592 -244.63356018]
[132.69377136 -259.52728271]
[134.47624207 -274.42098999]
[136.25871277 -289.31472778]
[137.59693909 -304.25491333]
[138.48976135 -319.22830200]
[139.38256836 -334.20172119]
[140.27539062 -349.17510986]
[133.37321472 -363.41134644]
[141.85433960 -375.65554810]
[142.74714661 -390.62893677]
[128.82695007 -396.62924194]
[117.80058289 -407.03094482]
[110.99955750 -420.57797241]
[109.24512482 -435.63446045]
[112.74913025 -450.38226318]
[121.08846283 -463.04049683]
[133.25610352 -472.08065796]
[147.78274536 -476.41107178]
[162.91423035 -475.50885010]
[176.82334900 -469.48287964]
[187.83052063 -459.06088257]
[194.60656738 -445.50134277]
[196.33325195 -430.44165039]
[192.80207825 -415.70034790]
[184.43942261 -403.05746460]
[172.25515747 -394.03976440]
[157.72055054 -389.73611450]
[156.82774353 -374.76272583]
[163.79377747 -361.59747314]
[155.24879456 -348.28231812]
[154.35598755 -333.30889893]
[153.46316528 -318.33547974]
[152.57034302 -303.36209106]
[154.32801819 -301.17834473]
[155.32658386 -298.16677856]
[155.24639893 -294.61306763]
[153.87705994 -290.91314697]
[151.15242004 -287.53225708]
[149.36996460 -272.63854980]
[147.58749390 -257.74481201]
[145.80502319 -242.85110474]
[159.43846130 -234.51564026]
[168.10353088 -221.02006531]
[170.02273560 -205.03881836]
[164.76148987 -189.76533508]
[153.32508850 -178.27391052]
[137.96717834 -172.90097046]
[136.40666199 -157.98236084]
[134.84614563 -143.06376648]
[144.28073120 -134.28776550]
[146.97828674 -121.48912811]
[141.73472595 -109.29422760]
[130.25851440 -102.24362946]
[128.47604370 -87.34990692]
[126.69358063 -72.45619202]
[124.91110992 -57.56247330]
[123.12864685 -42.66875839]
[121.34617615 -27.77503967]
[119.56371307 -12.88132191]
[127.32935333 2.85595107]
[116.17024231 17.50367165]
[114.60971832 32.42227554]
[120.98094940 45.88543320]
[111.84993744 58.80577469]
[110.28941345 73.72438049]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[108.31680298 117.68435669]
[108.39492035 122.32625580]
[106.81475067 126.08366394]
[104.21186066 128.46217346]
[101.98674011 143.29621887]
[99.76162720 158.13026428]
[97.53650665 172.96429443]
[95.42188263 187.81449890]
[93.41786957 202.68002319]
[91.41385651 217.54554749]
[93.39807892 222.37359619]
[93.33795166 227.01576233]
[91.64661407 230.72445679]
[88.97406006 233.02439880]
[86.30826569 247.78562927]
[83.64247131 262.54684448]
[80.97666931 277.30804443]
[78.31087494 292.06927490]
[75.64508057 306.83050537]
[72.97928619 321.59170532]
[86.60247803 315.31408691]
[100.07235718 321.91427612]
[103.45941925 336.52685547]
[94.26686096 348.38000488]
[79.27108765 348.73599243]
[69.52685547 337.33401489]
[65.77055359 351.85604858]
[62.12246704 366.40567017]
[58.58279419 380.98205566]
[55.04312134 395.55844116]
[65.91741943 385.22647095]
[80.17096710 380.55352783]
[95.05162811 382.44186401]
[107.68618011 390.52691650]
[115.63509369 403.24755859]
[117.36354828 418.14764404]
[112.53781891 432.35018921]
[102.08966827 443.11291504]
[88.03647614 448.35769653]
[73.09169006 447.07186890]
[60.14091492 439.50366211]
[51.68474197 427.11444092]
[49.35601425 412.29504395]
[43.28218079 426.01031494]
[37.20834732 439.72558594]
[31.13451195 453.44085693]
[43.89296722 461.37609863]
[55.42283630 471.00979614]
[65.49968719 482.15444946]
[73.92736816 494.59310913]
[80.54183960 508.08364868]
[85.21434784 522.36346436]
[87.85392761 537.15466309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 203]
[37 202]
[38 201]
[39 200]
[40 187]
[41 186]
[42 185]
[44 184]
[45 183]
[46 177]
[47 176]
[48 175]
[49 174]
[50 173]
[51 172]
[52 171]
[53 167]
[54 166]
[55 165]
[57 164]
[58 163]
[59 162]
[60 161]
[61 157]
[63 155]
[64 154]
[65 153]
[67 151]
[68 150]
[71 148]
[72 147]
[73 146]
[74 145]
[75 144]
[76 143]
[77 142]
[80 138]
[81 137]
[82 136]
[89 130]
[90 129]
[91 128]
[92 127]
[93 122]
[94 121]
[95 120]
[96 119]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
