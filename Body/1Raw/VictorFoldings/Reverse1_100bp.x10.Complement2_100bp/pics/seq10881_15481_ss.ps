%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[124.54966736 653.88281250]
[111.55776215 646.36315918]
[99.32710266 637.65997314]
[87.96517181 627.84973145]
[77.57182312 617.01861572]
[68.23840332 605.26190186]
[60.04692459 592.68273926]
[53.06937790 579.39184570]
[47.36708832 565.50592041]
[42.99016953 551.14709473]
[39.97707748 536.44140625]
[38.35430145 521.51824951]
[38.13610077 506.50869751]
[39.32439041 491.54467773]
[41.90872955 476.75765991]
[45.86640549 462.27761841]
[51.16263962 448.23184204]
[57.75088120 434.74371338]
[65.57324219 421.93179321]
[74.56096649 409.90866089]
[84.63507080 398.78002930]
[95.70702362 388.64364624]
[107.67951965 379.58859253]
[120.44734955 371.69448853]
[133.89830017 365.03067017]
[147.91415405 359.65570068]
[162.37174988 355.61685181]
[159.70596313 340.85565186]
[157.04016113 326.09442139]
[154.37437439 311.33322144]
[151.70857239 296.57199097]
[149.04278564 281.81076050]
[146.37698364 267.04956055]
[142.72889709 252.49993896]
[138.11488342 238.22720337]
[133.50088501 223.95446777]
[128.88687134 209.68173218]
[124.27285767 195.40899658]
[110.63404083 184.36592102]
[114.63904572 166.39257812]
[109.81304932 152.19012451]
[104.98705292 137.98765564]
[100.16105652 123.78520966]
[95.33505249 109.58274841]
[89.26122284 95.86748505]
[81.98799133 82.74878693]
[74.71475983 69.63009644]
[67.44153595 56.51140213]
[60.16830444 43.39270782]
[42.43737030 33.80226898]
[43.61241531 14.50184727]
[35.95181656 1.60552025]
[28.29121971 -11.29080677]
[20.63062286 -24.18713379]
[16.07718277 -26.73924446]
[13.24156475 -30.41518784]
[12.26418877 -34.37243271]
[12.93073273 -37.83481216]
[5.85362720 -51.06033707]
[-1.22347832 -64.28586578]
[-8.39884472 -77.45834351]
[-15.67207432 -90.57703400]
[-22.94530296 -103.69573212]
[-36.86183929 -98.04883575]
[-51.35757446 -94.12060547]
[-66.22112274 -91.96832275]
[-81.23572540 -91.62339020]
[-96.18243408 -93.09082031]
[-110.84326935 -96.34921265]
[-125.00444794 -101.35106659]
[-138.45944214 -108.02342987]
[-151.01205444 -116.26899719]
[-162.47921753 -125.96752930]
[-172.69371033 -136.97758484]
[-181.50657654 -149.13862610]
[-188.78929138 -162.27328491]
[-194.43566895 -176.19003296]
[-198.36335754 -190.68591309]
[-200.51509094 -205.54954529]
[-200.85946655 -220.56416321]
[-199.39147949 -235.51081848]
[-196.13252258 -250.17152405]
[-191.13014221 -264.33251953]
[-184.45727539 -277.78726196]
[-176.21124268 -290.33956909]
[-166.51228333 -301.80636597]
[-155.50183105 -312.02044678]
[-143.34046936 -320.83285522]
[-130.20553589 -328.11508179]
[-116.28858185 -333.76095581]
[-101.79255676 -337.68807983]
[-86.92884827 -339.83926392]
[-71.91421509 -340.18307495]
[-56.96762085 -338.71453857]
[-42.30702591 -335.45501709]
[-28.14622498 -330.45211792]
[-14.69172573 -323.77874756]
[-2.13973570 -315.53225708]
[9.32670212 -305.83285522]
[19.54037285 -294.82202148]
[28.35233116 -282.66033936]
[35.63407135 -269.52514648]
[41.27940750 -255.60797119]
[45.20600891 -241.11178589]
[47.35662079 -226.24800110]
[47.69987488 -211.23335266]
[46.23077011 -196.28681946]
[42.97072601 -181.62634277]
[37.96728516 -167.46572876]
[31.29341507 -154.01147461]
[23.04643822 -141.45979309]
[13.34662056 -129.99372864]
[2.33541203 -119.78046417]
[-9.82660961 -110.96895599]
[-2.55338001 -97.85026550]
[4.71984959 -84.73156738]
[10.71237469 -80.40589905]
[12.00204945 -71.36296844]
[19.07915497 -58.13744354]
[26.15625954 -44.91191483]
[33.52695084 -31.84773064]
[41.18754578 -18.95140457]
[48.84814453 -6.05507708]
[56.50874329 6.84124947]
[66.59759521 8.46236610]
[74.29026794 15.51723003]
[76.88352203 25.85431099]
[73.28699493 36.11948013]
[80.56022644 49.23817444]
[87.83345795 62.35686874]
[95.10668945 75.47556305]
[102.37991333 88.59425354]
[103.37687683 73.62742615]
[110.69351959 60.53289413]
[122.91712952 51.83901978]
[137.68750000 49.22444534]
[152.15272522 53.19401169]
[163.51977539 62.98125076]
[169.59387207 76.69640350]
[169.20217896 91.69129181]
[162.42034912 105.07062531]
[150.55783081 114.25108337]
[135.90510559 117.46004486]
[121.29136658 114.07792664]
[109.53751373 104.75675201]
[114.36351013 118.95920563]
[119.18950653 133.16166687]
[124.01550293 147.36412048]
[128.84150696 161.56657410]
[140.04513550 167.95730591]
[143.77232361 179.88592529]
[138.54559326 190.79499817]
[143.15960693 205.06773376]
[147.77360535 219.34045410]
[152.38761902 233.61318970]
[157.00163269 247.88592529]
[162.25012207 233.83412170]
[174.19834900 224.76550293]
[189.14402771 223.49008179]
[202.45606995 230.40306091]
[210.00961304 243.36238098]
[209.46408081 258.35247803]
[200.98854065 270.72845459]
[187.20921326 276.65551758]
[172.39578247 274.29711914]
[161.13819885 264.38375854]
[163.80400085 279.14498901]
[166.46978760 293.90618896]
[169.13558960 308.66741943]
[171.80137634 323.42861938]
[174.46717834 338.18984985]
[177.13298035 352.95104980]
[192.09002686 351.67779541]
[207.10057068 351.81072998]
[222.03273010 353.34872437]
[236.75524902 356.27822876]
[251.13873291 360.57351685]
[265.05682373 366.19683838]
[278.38714600 373.09878540]
[291.01257324 381.21865845]
[302.82217407 390.48516846]
[313.71215820 400.81680298]
[323.58679199 412.12283325]
[332.35928345 424.30386353]
[339.95260620 437.25283813]
[346.29998779 450.85598755]
[351.34561157 464.99374390]
[355.04519653 479.54183960]
[357.36618042 494.37246704]
[358.28820801 509.35528564]
[357.80316162 524.35858154]
[355.91528320 539.25054932]
[352.64120483 553.90026855]
[348.00964355 568.17901611]
[342.06134033 581.96136475]
[334.84857178 595.12609863]
[326.43472290 607.55755615]
[316.89373779 619.14654541]
[306.30941772 629.79113770]
[294.77487183 639.39776611]
[282.39138794 647.88214111]
[269.26782227 655.16955566]
[255.51951599 661.19604492]
[241.26728821 665.90863037]
[226.63638306 669.26586914]
[211.75538635 671.23828125]
[196.75508118 671.80859375]
[181.76728821 670.97167969]
[166.92372131 668.73492432]
[152.35482788 665.11804199]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 172]
[28 171]
[29 170]
[30 169]
[31 168]
[32 167]
[33 166]
[34 156]
[35 155]
[36 154]
[37 153]
[38 152]
[40 149]
[41 148]
[42 147]
[43 146]
[44 145]
[45 132]
[46 131]
[47 130]
[48 129]
[49 128]
[51 124]
[52 123]
[53 122]
[54 121]
[58 120]
[59 119]
[60 118]
[61 116]
[62 115]
[63 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
