%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[45.45506668 589.89038086]
[36.59317780 602.03387451]
[25.89800835 612.59838867]
[13.64658737 621.31036377]
[0.15625577 627.94415283]
[-14.22355366 632.32794189]
[-29.12036896 634.34808350]
[-44.14832687 633.95233154]
[-58.91817093 631.15087891]
[-73.04731750 626.01635742]
[-86.16979980 618.68176270]
[-97.94570160 609.33703613]
[-108.07000732 598.22418213]
[-116.28047180 585.63116455]
[-122.36442566 571.88409424]
[-126.16426849 557.33911133]
[-127.58158875 542.37286377]
[-126.57967377 527.37316895]
[-123.18446350 512.72839355]
[-117.48391724 498.81796265]
[-109.62567902 486.00219727]
[-99.81330872 474.61300659]
[-88.30096436 464.94543457]
[-75.38683319 457.24987793]
[-61.40544128 451.72567749]
[-46.71892929 448.51593018]
[-31.70771599 447.70373535]
[-16.76062775 449.31021118]
[-12.78853130 434.84567261]
[-8.81643486 420.38116455]
[-4.84433842 405.91662598]
[-6.26118946 402.68786621]
[-6.18455410 398.61242676]
[-4.23352385 394.39974976]
[-0.35842445 390.90249634]
[4.25558472 376.62976074]
[8.86959362 362.35702515]
[13.48360348 348.08428955]
[3.39493680 335.13455200]
[3.00909591 318.55706787]
[12.67617607 304.88046265]
[28.74814606 299.60906982]
[33.14914322 285.26922607]
[37.55014420 270.92938232]
[41.95114136 256.58950806]
[46.35213852 242.24967957]
[50.64626312 227.87745667]
[54.83327484 213.47367859]
[59.02028656 199.06990051]
[57.54600525 194.52726746]
[58.90973663 189.01026917]
[63.55233002 184.30305481]
[62.61872482 176.97160339]
[68.34274292 169.85307312]
[73.16873932 155.65061951]
[77.99473572 141.44816589]
[74.76361084 126.90824890]
[86.52949524 116.33117676]
[78.89836884 101.69786835]
[84.09163666 86.03269196]
[98.95312500 78.85607147]
[103.56713867 64.58333588]
[108.18114471 50.31060410]
[112.79515839 36.03787231]
[117.40916443 21.76513863]
[122.02317810 7.49240446]
[121.01460266 0.95831579]
[123.13844299 -4.31295633]
[126.99287415 -7.13295794]
[132.02978516 -21.26198769]
[121.51828766 -28.90442085]
[113.35349274 -38.99817657]
[108.08723450 -50.84993362]
[106.07256317 -63.64793396]
[107.44009399 -76.51758575]
[112.08951569 -88.58124542]
[119.69697571 -99.01803589]
[129.73759460 -107.11973572]
[141.52166748 -112.33882904]
[154.24209595 -114.32549286]
[167.02955627 -112.95102692]
[172.69233704 -126.84104919]
[178.35513306 -140.73107910]
[184.01791382 -154.62110901]
[187.12202454 -169.29640198]
[179.79904175 -183.32083130]
[187.91184998 -195.81208801]
[188.35845947 -210.80543518]
[188.80505371 -225.79879761]
[185.93254089 -234.46980286]
[189.37158203 -241.01158142]
[182.25820923 -255.14347839]
[190.55609131 -267.51257324]
[191.22587585 -282.49758911]
[191.89566040 -297.48263550]
[192.56544495 -312.46768188]
[193.01205444 -327.46102905]
[193.23538208 -342.45938110]
[179.15476990 -348.12512207]
[168.07435608 -358.49761963]
[161.49269104 -372.17410278]
[160.29988098 -387.30493164]
[164.65724182 -401.84375000]
[173.97549438 -413.82434082]
[186.99440002 -421.62643433]
[201.95326233 -424.19482422]
[216.82904053 -421.18218994]
[229.60987854 -412.99594116]
[238.56727600 -400.74322510]
[242.48983765 -386.08108521]
[240.84706116 -370.99249268]
[233.86111450 -357.51803589]
[222.47679138 -347.48004150]
[208.23371887 -342.23605347]
[208.01039124 -327.23770142]
[210.63496399 -323.24761963]
[210.78085327 -317.56646729]
[207.55049133 -311.79788208]
[206.88070679 -296.81286621]
[206.21092224 -281.82781982]
[205.54113770 -266.84277344]
[212.70240784 -253.78271484]
[204.35661316 -240.34179688]
[203.79840088 -225.35218811]
[203.35180664 -210.35884094]
[202.90519714 -195.36547852]
[210.26013184 -182.41348267]
[202.11537170 -168.84980774]
[209.16830444 -182.08824158]
[219.14772034 -193.28695679]
[231.48924255 -201.81260681]
[245.49490356 -207.18302917]
[260.37261963 -209.09448242]
[275.28097534 -207.43888855]
[289.37683105 -202.30987549]
[301.86300659 -193.99749756]
[312.03332520 -182.97186279]
[319.31262207 -169.85655212]
[323.28924561 -155.39326477]
[323.73825073 -140.39997864]
[320.63424683 -125.72465515]
[314.15283203 -112.19723511]
[304.66049194 -100.58276367]
[292.69412231 -91.53810883]
[278.93045044 -85.57476807]
[264.14788818 -83.03001404]
[249.18246460 -84.04776001]
[234.88052368 -88.57044983]
[222.05093384 -96.34229279]
[211.41926575 -106.92376709]
[203.58677673 -119.71643066]
[198.99645996 -133.99679565]
[197.90794373 -148.95831299]
[192.24516296 -135.06829834]
[186.58236694 -121.17826080]
[180.91958618 -107.28823853]
[193.88192749 -96.13342285]
[202.25915527 -81.19626617]
[205.02601624 -64.27033997]
[201.83210754 -47.39467239]
[193.04609680 -32.60807037]
[179.71331787 -21.70284462]
[163.43139648 -16.00753021]
[146.15882874 -16.22507095]
[141.12190247 -2.09604192]
[136.29591370 12.10641384]
[131.68190002 26.37914658]
[127.06788635 40.65188217]
[122.45388031 54.92461395]
[117.83987427 69.19734955]
[113.22586060 83.47007751]
[120.29831696 93.98834991]
[120.09438324 106.66162872]
[112.68717194 116.94689941]
[100.73195648 121.15717316]
[103.61788940 136.71293640]
[92.19719696 146.27415466]
[87.37120056 160.47662354]
[82.54519653 174.67907715]
[77.82506561 188.91706848]
[73.42406464 203.25691223]
[69.23705292 217.66069031]
[65.05004120 232.06446838]
[65.65963745 241.17854309]
[60.69198608 246.65066528]
[56.29098892 260.99050903]
[51.88999176 275.33035278]
[47.48899078 289.67022705]
[43.08799362 304.01007080]
[52.16817474 314.38027954]
[54.91673660 327.77667236]
[50.72052765 340.67868042]
[40.77730179 349.74929810]
[27.75633621 352.69830322]
[23.14232826 366.97103882]
[18.52831841 381.24377441]
[13.91430855 395.51651001]
[9.62018490 409.88873291]
[5.64808893 424.35324097]
[1.67599285 438.81777954]
[-2.29610348 453.28228760]
[11.37515831 459.53472900]
[23.86634445 467.89932251]
[34.85390472 478.15942383]
[44.05323410 490.04925537]
[51.22605133 503.26086426]
[56.18655777 517.45202637]
[58.80626678 532.25518799]
[59.01731873 547.28686523]
[56.81425095 562.15777588]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 201]
[29 200]
[30 199]
[31 198]
[35 197]
[36 196]
[37 195]
[38 194]
[42 189]
[43 188]
[44 187]
[45 186]
[46 185]
[47 183]
[48 182]
[49 181]
[52 180]
[54 179]
[55 178]
[56 177]
[58 175]
[61 171]
[62 170]
[63 169]
[64 168]
[65 167]
[66 166]
[69 165]
[70 164]
[81 156]
[82 155]
[83 154]
[84 153]
[85 128]
[87 126]
[88 125]
[89 124]
[91 123]
[93 121]
[94 120]
[95 119]
[96 118]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
