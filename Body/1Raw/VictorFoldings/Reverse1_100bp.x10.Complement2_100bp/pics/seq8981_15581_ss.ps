%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[168.80966187 645.90008545]
[174.08723450 631.77221680]
[182.71313477 619.40106201]
[194.14515686 609.56439209]
[207.66465759 602.88055420]
[204.56054688 588.20526123]
[201.45643616 573.52996826]
[198.35232544 558.85467529]
[188.38829041 551.99572754]
[185.68211365 539.79492188]
[192.21697998 528.67474365]
[189.33171082 513.95483398]
[186.44644165 499.23495483]
[183.45166016 484.53695679]
[180.34754944 469.86166382]
[177.24343872 455.18634033]
[174.13932800 440.51104736]
[171.03521729 425.83575439]
[167.93110657 411.16043091]
[164.82699585 396.48513794]
[161.72288513 381.80984497]
[158.61877441 367.13452148]
[155.29652405 352.50708008]
[144.77436829 341.96508789]
[149.03662109 326.72882080]
[145.49694824 312.15243530]
[129.95800781 311.90509033]
[115.00013733 307.64733887]
[101.64116669 299.66293335]
[90.79166412 288.48937988]
[83.19288635 274.88183594]
[79.36612701 259.76199341]
[79.57695007 244.15567017]
[83.81679535 229.12327576]
[91.80314636 215.68766785]
[102.99835205 204.76460266]
[116.64582062 197.10035706]
[112.88951874 182.57829285]
[109.13321686 168.05622864]
[105.37692261 153.53417969]
[100.65856934 147.84568787]
[101.67451477 138.76792908]
[98.13484192 124.19155121]
[94.59516907 109.61517334]
[84.68074036 120.87146759]
[69.69198608 120.29083252]
[60.67805099 108.30129242]
[64.28368378 93.74109650]
[77.85093689 87.34346771]
[91.37750244 93.82322693]
[88.93177032 79.02395630]
[86.48604584 64.22468567]
[73.92204285 55.01688385]
[71.65254974 39.97348022]
[80.50820923 28.05236816]
[78.06248474 13.25309753]
[75.61675262 -1.54617357]
[73.17102814 -16.34544373]
[61.15985107 -30.30299187]
[67.97502136 -46.47458267]
[65.30922699 -61.23580170]
[62.64343262 -75.99701691]
[59.97763443 -90.75823212]
[49.84597015 -98.74022675]
[47.92951202 -111.08975983]
[54.71668625 -121.10279083]
[52.27095795 -135.90206909]
[49.82522964 -150.70133972]
[47.37950516 -165.50061035]
[44.93377686 -180.29988098]
[42.48804855 -195.09915161]
[32.60419083 -207.45309448]
[38.16278839 -221.27160645]
[30.88790703 -208.15382385]
[17.72662354 -200.95794678]
[2.75710249 -201.91369629]
[-9.38218498 -210.72492981]
[-14.92974949 -224.66137695]
[-12.16661739 -239.40467834]
[-1.94897532 -250.38647461]
[12.55712891 -254.20393372]
[26.85682106 -249.67416382]
[36.51929092 -238.20053101]
[36.07268524 -253.19387817]
[35.62607956 -268.18722534]
[35.17947388 -283.18057251]
[22.52723885 -291.96847534]
[17.53398705 -306.35321045]
[21.91660500 -320.74963379]
[33.79386902 -329.69772339]
[33.34726334 -344.69110107]
[20.69502831 -353.47897339]
[15.70177650 -367.86373901]
[20.08439445 -382.26013184]
[31.96166039 -391.20825195]
[31.51505470 -406.20159912]
[31.06844902 -421.19494629]
[30.62184143 -436.18829346]
[16.65828896 -442.35125732]
[6.75809956 -453.96798706]
[2.88696289 -468.73205566]
[5.81349659 -483.71197510]
[14.95663548 -495.93350220]
[28.50100136 -502.97003174]
[43.75735092 -503.42446899]
[57.69652939 -497.20657349]
[67.55089569 -485.55093384]
[71.36386108 -470.77175903]
[68.37835693 -455.80346680]
[59.18716431 -443.61804199]
[45.61519241 -436.63488770]
[46.06179810 -421.64154053]
[46.50840378 -406.64819336]
[46.95500946 -391.65484619]
[59.34381866 -383.42956543]
[64.57555389 -369.31951904]
[60.44735336 -354.66308594]
[48.34061432 -345.13769531]
[48.78722000 -330.14434814]
[61.17602539 -321.91903687]
[66.40776825 -307.80902100]
[62.27956009 -293.15258789]
[50.17282486 -283.62719727]
[50.61943054 -268.63385010]
[51.06603622 -253.64048767]
[51.51264191 -238.64714050]
[52.96205902 -223.71733093]
[62.67098236 -212.42192078]
[57.28731918 -197.54487610]
[59.73304749 -182.74560547]
[62.17877579 -167.94633484]
[64.62450409 -153.14706421]
[67.07022858 -138.34779358]
[69.51595306 -123.54852295]
[81.36573792 -110.60442352]
[74.73885345 -93.42403412]
[77.40464783 -78.66281128]
[80.07044220 -63.90159607]
[82.73623657 -49.14038086]
[92.49163818 -41.98784256]
[94.83336639 -29.71184731]
[87.97029877 -18.79117203]
[90.41602325 -3.99190092]
[92.86175537 10.80737019]
[95.30747986 25.60663986]
[107.52770233 34.04475021]
[110.21884155 49.01847458]
[101.28531647 61.77895737]
[103.73104095 76.57823181]
[106.17677307 91.37750244]
[109.17154694 106.07550812]
[112.71121979 120.65187836]
[116.25089264 135.22825623]
[119.89897919 149.77787781]
[123.65528107 164.29994202]
[127.41158295 178.82199097]
[131.16787720 193.34405518]
[145.67057800 193.28302002]
[159.75578308 196.69839478]
[172.60305786 203.38656616]
[183.46514893 212.95341492]
[191.71154785 224.83757019]
[196.86499023 238.34327698]
[198.62916565 252.68122864]
[196.90567017 267.01458740]
[191.79953003 280.50793457]
[183.61279297 292.37585449]
[172.82669067 301.92871094]
[160.07331848 308.61276245]
[163.61299133 323.18914795]
[174.38832092 334.77374268]
[169.87289429 348.96740723]
[174.15252686 354.00686646]
[175.10214233 359.61001587]
[173.29408264 364.03042603]
[176.39819336 378.70571899]
[179.50230408 393.38104248]
[182.60641479 408.05633545]
[185.71052551 422.73162842]
[188.81463623 437.40695190]
[191.91874695 452.08224487]
[195.02285767 466.75753784]
[198.12696838 481.43283081]
[202.96452332 489.18112183]
[201.16632080 496.34970093]
[204.05160522 511.06958008]
[206.93687439 525.78948975]
[219.35829163 539.38323975]
[213.02763367 555.75054932]
[216.13174438 570.42584229]
[219.23585510 585.10113525]
[222.33996582 599.77642822]
[237.40797424 600.41351318]
[251.84393311 604.77856445]
[264.74038696 612.59729004]
[275.28665161 623.37817383]
[282.81976318 636.44348145]
[286.86621094 650.97198486]
[287.17160034 666.05035400]
[283.71676636 680.73077393]
[276.71887207 694.09045410]
[266.61779785 705.28955078]
[254.04853821 713.62402344]
[239.80116272 718.57006836]
[224.77131653 719.81677246]
[209.90374756 717.28564453]
[196.13307190 711.13592529]
[184.32492065 701.75408936]
[175.22155762 689.72998047]
[169.39523315 675.81939697]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 192]
[6 191]
[7 190]
[8 189]
[11 187]
[12 186]
[13 185]
[14 183]
[15 182]
[16 181]
[17 180]
[18 179]
[19 178]
[20 177]
[21 176]
[22 175]
[23 172]
[25 170]
[26 169]
[37 157]
[38 156]
[39 155]
[40 154]
[42 153]
[43 152]
[44 151]
[50 150]
[51 149]
[52 148]
[55 145]
[56 144]
[57 143]
[58 142]
[60 139]
[61 138]
[62 137]
[63 136]
[66 134]
[67 133]
[68 132]
[69 131]
[70 130]
[71 129]
[73 127]
[83 126]
[84 125]
[85 124]
[86 123]
[90 119]
[91 118]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
