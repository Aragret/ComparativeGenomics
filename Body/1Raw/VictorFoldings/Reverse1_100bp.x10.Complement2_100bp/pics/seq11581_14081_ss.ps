%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[27.18451881 737.39550781]
[12.14209270 738.13000488]
[-2.70646882 735.61315918]
[-16.66667175 729.96282959]
[-29.08557320 721.44311523]
[-39.38231659 710.45263672]
[-47.07530594 697.50531006]
[-51.80472946 683.20684814]
[-53.34937668 668.22595215]
[-51.63700485 653.26324463]
[-46.74770355 639.01861572]
[-38.91015625 626.15832520]
[-28.49094009 615.28387451]
[-15.97737789 606.90386963]
[-1.95475328 601.41021729]
[12.92107105 599.05993652]
[13.81388664 584.08654785]
[14.70670319 569.11309814]
[15.59951878 554.13970947]
[16.49233437 539.16632080]
[5.33167601 549.18823242]
[-9.65513039 549.81726074]
[-21.61631775 540.76574707]
[-25.08339119 526.17193604]
[-18.47125435 512.70794678]
[-4.80288506 506.52926636]
[9.67272186 510.46078491]
[18.33801079 522.70678711]
[20.78373718 507.90753174]
[23.22946548 493.10827637]
[25.67519188 478.30899048]
[28.12092018 463.50973511]
[26.11008644 456.39788818]
[30.71480560 448.50900269]
[33.38059998 433.74780273]
[36.04639816 418.98657227]
[38.71219254 404.22537231]
[41.37798691 389.46414185]
[44.04378128 374.70291138]
[37.40644073 364.58993530]
[39.50655365 352.27032471]
[49.75593567 344.44006348]
[52.64120865 329.72015381]
[46.15517044 319.50949097]
[48.43846893 307.22250366]
[58.80329895 299.54571533]
[61.90740585 284.87039185]
[65.01152039 270.19509888]
[67.67731476 255.43388367]
[69.90242767 240.59983826]
[72.12754822 225.76579285]
[74.35266113 210.93174744]
[76.57778168 196.09770203]
[74.46128845 189.01658630]
[78.94804382 181.06002808]
[81.39376831 166.26075745]
[83.83950043 151.46148682]
[86.28522491 136.66221619]
[88.73094940 121.86294556]
[91.17668152 107.06367493]
[79.59282684 116.59333038]
[64.62727356 117.60926819]
[51.86179352 109.73255920]
[46.05759811 95.90102386]
[49.37950897 81.27348328]
[60.58853531 71.30564880]
[75.50399017 69.71527863]
[88.56277466 77.09553528]
[94.89442444 90.69492340]
[99.08143616 76.29114532]
[95.50377655 60.87975693]
[106.48615265 50.81811142]
[105.24008179 45.74914551]
[105.98816681 41.16726303]
[108.21093750 37.75049210]
[111.19510651 35.87243652]
[116.02110291 21.66998100]
[120.84709930 7.46752596]
[125.67310333 -6.73493004]
[130.49909973 -20.93738556]
[125.50847626 -32.83093262]
[129.82044983 -44.56083679]
[140.61151123 -50.02705765]
[145.64842224 -64.15608215]
[139.12489319 -78.30110168]
[144.43432617 -92.55818939]
[157.95962524 -98.69020081]
[162.99655151 -112.81922913]
[148.53210449 -108.84684753]
[136.31863403 -117.55495453]
[135.35945129 -132.52426147]
[146.36163330 -142.71994019]
[161.21478271 -140.62612915]
[168.96954346 -127.78794861]
[175.04336548 -141.50321960]
[173.55676270 -157.25442505]
[185.78492737 -165.75860596]
[191.85876465 -179.47387695]
[197.93258667 -193.18914795]
[185.25057983 -201.25289917]
[173.91212463 -211.11682129]
[164.17051697 -222.56056213]
[156.24340820 -235.32843018]
[150.30789185 -249.13520813]
[146.49655151 -263.67245483]
[144.89456177 -278.61538696]
[145.53768921 -293.63018799]
[148.41156006 -308.38140869]
[153.45199585 -322.53948975]
[160.54637146 -335.78817749]
[169.53620911 -347.83145142]
[180.22065735 -358.40026855]
[192.36103821 -367.25854492]
[205.68612671 -374.20834351]
[219.89823914 -379.09442139]
[234.67985535 -381.80761719]
[249.70074463 -382.28735352]
[264.62536621 -380.52285767]
[279.12026978 -376.55355835]
[292.86166382 -370.46817017]
[305.54254150 -362.40258789]
[316.87957764 -352.53704834]
[326.61953735 -341.09194946]
[334.54483032 -328.32293701]
[340.47839355 -314.51531982]
[344.28765869 -299.97753906]
[345.88754272 -285.03436279]
[345.24227905 -270.01965332]
[342.36627197 -255.26885986]
[337.32382202 -241.11148071]
[330.22756958 -227.86381531]
[321.23602295 -215.82180786]
[310.55004883 -205.25451660]
[298.40841675 -196.39797974]
[285.08233643 -189.45007324]
[270.86953735 -184.56600952]
[256.08755493 -181.85491943]
[241.06657410 -181.37733459]
[226.14219666 -183.14396667]
[211.64785767 -187.11531067]
[205.57402039 -173.40003967]
[199.50019836 -159.68478394]
[201.42124939 -144.91458130]
[188.75863647 -135.42938232]
[182.68479919 -121.71411133]
[177.12557983 -107.78231812]
[172.08866882 -93.65328979]
[178.68473816 -80.34812164]
[173.77786255 -65.94752502]
[159.77745056 -59.11917114]
[154.74053955 -44.99013901]
[158.82775879 -27.92375374]
[144.70155334 -16.11138725]
[139.87554932 -1.90893233]
[135.04956055 12.29352379]
[130.22355652 26.49597931]
[125.39756012 40.69843292]
[120.88993073 55.00512314]
[124.76707458 69.38625336]
[113.48522186 80.47815704]
[109.29821014 94.88193512]
[105.97595215 109.50939941]
[103.53022003 124.30867004]
[101.08449554 139.10794067]
[98.63877106 153.90721130]
[96.19303894 168.70648193]
[93.74731445 183.50575256]
[91.41182709 198.32281494]
[89.18670654 213.15686035]
[86.96159363 227.99090576]
[84.73647308 242.82495117]
[82.51136017 257.65899658]
[84.24344635 261.64068604]
[84.58413696 265.57113647]
[83.72040558 269.01922607]
[81.96001434 271.65884399]
[79.68682098 273.29919434]
[76.58271027 287.97451782]
[73.47859955 302.64981079]
[79.59101868 320.01989746]
[67.36109924 332.60543823]
[64.47583008 347.32531738]
[70.84618378 364.60247803]
[58.80500031 377.36871338]
[56.13920593 392.12994385]
[53.47340775 406.89114380]
[50.80761337 421.65237427]
[48.14181900 436.41357422]
[45.47602463 451.17480469]
[42.92018890 465.95544434]
[40.47446442 480.75473022]
[38.02873611 495.55398560]
[35.58300781 510.35327148]
[33.13727951 525.15252686]
[31.46574020 540.05914307]
[30.57292366 555.03253174]
[29.68010902 570.00592041]
[28.78729248 584.97930908]
[27.89447594 599.95275879]
[42.38560867 604.05407715]
[55.65606308 611.17510986]
[67.08515167 620.98278809]
[76.13832092 633.01831055]
[82.39212799 646.71881104]
[85.55408478 661.44348145]
[85.47629547 676.50366211]
[82.16239166 691.19488525]
[75.76737976 704.83007812]
[66.59035492 716.77142334]
[55.06055832 726.46051025]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 199]
[17 198]
[18 197]
[19 196]
[20 195]
[28 194]
[29 193]
[30 192]
[31 191]
[32 190]
[34 189]
[35 188]
[36 187]
[37 186]
[38 185]
[39 184]
[42 182]
[43 181]
[46 179]
[47 178]
[48 177]
[49 172]
[50 171]
[51 170]
[52 169]
[53 168]
[55 167]
[56 166]
[57 165]
[58 164]
[59 163]
[60 162]
[69 161]
[70 160]
[72 158]
[76 157]
[77 156]
[78 155]
[79 154]
[80 153]
[83 151]
[84 150]
[87 147]
[88 146]
[94 145]
[95 144]
[97 142]
[98 141]
[99 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
