%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[64.00509644 496.96078491]
[76.25036621 487.57693481]
[74.91213226 472.63674927]
[73.57389832 457.69656372]
[72.23566437 442.75637817]
[63.39374542 430.77014160]
[69.86900330 416.33471680]
[68.53076935 401.39453125]
[67.19253540 386.45434570]
[65.85430145 371.51416016]
[57.01238251 359.52792358]
[63.48763657 345.09249878]
[62.14940262 330.15231323]
[55.17742920 343.43356323]
[43.18517685 352.44387817]
[28.48816681 355.44354248]
[13.92415905 351.85333252]
[2.30523491 342.36645508]
[-4.12517309 328.81469727]
[-4.12545300 313.81469727]
[2.30444813 300.26272583]
[13.92301750 290.77542114]
[28.48689270 287.18466187]
[43.18401337 290.18374634]
[55.17660141 299.19363403]
[62.14940262 312.47586060]
[63.48763657 297.53567505]
[64.82587433 282.59548950]
[57.31276321 273.11499023]
[58.30539703 260.65710449]
[67.81533051 251.94367981]
[69.37584686 237.02507019]
[70.93637085 222.10647583]
[57.81782150 229.37995911]
[43.89435577 223.79989624]
[39.42983627 209.47970581]
[47.71533966 196.97567749]
[62.64310074 195.50534058]
[73.20838165 206.15100098]
[75.87418365 191.38978577]
[78.53997803 176.62857056]
[81.20577240 161.86735535]
[83.87156677 147.10612488]
[86.53736115 132.34490967]
[81.18511963 118.44517517]
[91.25180817 106.23975372]
[91.25180817 91.23975372]
[88.58601379 76.47853851]
[85.92021942 61.71731949]
[83.25442505 46.95610428]
[80.47881317 32.21514130]
[77.59354401 17.49524879]
[74.70826721 2.77535844]
[64.46096802 -9.27882957]
[69.60567474 -23.25671577]
[66.72040558 -37.97660446]
[63.83512878 -52.69649887]
[53.58782959 -64.75068665]
[58.73253632 -78.72856903]
[55.84726334 -93.44846344]
[52.96199036 -108.16835022]
[40.54056931 -121.76210022]
[46.87123489 -138.12942505]
[43.76712418 -152.80473328]
[40.66301346 -167.48004150]
[37.55890274 -182.15533447]
[34.45479202 -196.83064270]
[30.69602203 -182.30921936]
[23.48878479 -169.15415955]
[13.27380848 -158.16987610]
[0.67574221 -150.02809143]
[-13.53503799 -145.22666931]
[-28.48953629 -144.05920410]
[-43.27328110 -146.59709167]
[-56.98223877 -152.68515015]
[-68.77809906 -161.95109558]
[-77.93955231 -173.82829285]
[-83.90635681 -187.59045410]
[-86.31364441 -202.39602661]
[-85.01422119 -217.33964539]
[-80.08753204 -231.50747681]
[-71.83484650 -244.03318787]
[-60.76082993 -254.15080261]
[-47.54265213 -261.24163818]
[-32.98862076 -264.87207031]
[-17.98870850 -264.82009888]
[-3.46017432 -261.08892822]
[9.70855999 -253.90669250]
[20.71222115 -243.71261597]
[28.87792969 -231.13003540]
[33.70635605 -216.92837524]
[35.71036911 -231.79389954]
[37.71438217 -246.65942383]
[39.71839523 -261.52496338]
[37.56464386 -267.77578735]
[38.71786880 -273.34060669]
[42.00977325 -276.80072021]
[44.45549774 -291.59997559]
[30.55193520 -297.41268921]
[18.36400414 -306.27560425]
[8.54898453 -317.71072388]
[1.63618743 -331.10140991]
[-2.00158787 -345.72546387]
[-2.16816092 -360.79428101]
[1.14545131 -375.49517822]
[7.76055002 -389.03540039]
[17.32039070 -400.68469238]
[29.30942345 -409.81484985]
[43.08109665 -415.93347168]
[57.89271927 -418.71063232]
[72.94551849 -417.99652100]
[87.42771912 -413.82968140]
[100.55830383 -406.43481445]
[111.62917328 -396.21069336]
[120.04328156 -383.70870972]
[125.34686279 -369.60305786]
[127.25390625 -354.65451050]
[125.66156769 -339.66912842]
[120.65571594 -325.45510864]
[112.50630951 -312.77899170]
[101.65283966 -302.32440186]
[88.68062592 -294.65509033]
[74.28923035 -290.18466187]
[59.25476837 -289.15426636]
[56.80904388 -274.35498047]
[54.58392334 -259.52093506]
[52.57991028 -244.65541077]
[50.57589722 -229.78988647]
[48.57188416 -214.92436218]
[49.13009644 -199.93475342]
[52.23420715 -185.25944519]
[55.33831406 -170.58415222]
[58.44242477 -155.90884399]
[61.54653549 -141.23353577]
[71.51056671 -134.37463379]
[74.21675873 -122.17379761]
[67.68188477 -111.05362701]
[70.56715393 -96.33373260]
[73.45243073 -81.61384583]
[83.49335480 -70.61251831]
[78.55502319 -55.58177185]
[81.44029236 -40.86187744]
[84.32556915 -26.14198685]
[94.36649323 -15.14066505]
[89.42816162 -0.10991429]
[92.31343079 14.60997677]
[95.19870758 29.32986832]
[99.57010651 35.28911591]
[98.01564026 44.29030991]
[100.68143463 59.05152512]
[103.34723663 73.81274414]
[106.01303101 88.57395935]
[110.17370605 74.16255188]
[117.61963654 61.14110184]
[127.92971039 50.24603653]
[140.52084351 42.09352875]
[154.68093872 37.14463806]
[169.60919189 35.67925262]
[184.46131897 37.78023911]
[198.39738464 43.32878876]
[210.62921143 52.01109314]
[220.46504211 63.33612823]
[227.34860229 76.66341400]
[230.89060974 91.23921967]
[230.89073181 106.23921967]
[227.34898376 120.81509399]
[220.46563721 134.14248657]
[210.63000488 145.46769714]
[198.39833069 154.15020752]
[184.46235657 159.69898987]
[169.61026001 161.80023193]
[154.68199158 160.33509827]
[140.52180481 155.38645935]
[127.93053436 147.23416138]
[117.62027740 136.33927917]
[110.17412567 123.31794739]
[106.01303101 108.90554810]
[111.17459869 123.86111450]
[101.29857635 135.01071167]
[98.63278198 149.77192688]
[95.96698761 164.53314209]
[93.30119324 179.29435730]
[90.63539886 194.05557251]
[87.96960449 208.81678772]
[85.85498047 223.66699219]
[84.29445648 238.58560181]
[82.73393250 253.50419617]
[90.62027740 270.14413452]
[79.76605988 283.93371582]
[78.42782593 298.87390137]
[77.08959198 313.81408691]
[77.08959198 328.81408691]
[78.42782593 343.75427246]
[87.36546326 356.80911255]
[80.79448700 370.17593384]
[82.13272095 385.11611938]
[83.47095490 400.05630493]
[84.80918884 414.99649048]
[93.74682617 428.05133057]
[87.17584991 441.41815186]
[88.51408386 456.35833740]
[89.85231781 471.29852295]
[91.19055176 486.23870850]
[104.90859222 493.29696655]
[112.61316681 506.66268921]
[111.84578705 522.07098389]
[102.85131073 534.60504150]
[88.49983978 540.26531982]
[73.37088776 537.24566650]
[62.29204178 526.50964355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 203]
[3 202]
[4 201]
[5 200]
[7 198]
[8 197]
[9 196]
[10 195]
[12 193]
[13 192]
[26 191]
[27 190]
[28 189]
[31 187]
[32 186]
[33 185]
[39 184]
[40 183]
[41 182]
[42 181]
[43 180]
[44 179]
[46 177]
[47 152]
[48 151]
[49 150]
[50 149]
[51 147]
[52 146]
[53 145]
[55 143]
[56 142]
[57 141]
[59 139]
[60 138]
[61 137]
[63 134]
[64 133]
[65 132]
[66 131]
[67 130]
[91 129]
[92 128]
[93 127]
[94 126]
[97 125]
[98 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
