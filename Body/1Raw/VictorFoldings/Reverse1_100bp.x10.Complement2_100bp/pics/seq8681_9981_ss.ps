%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[123.83764648 440.38366699]
[122.66663361 425.41006470]
[123.34461975 410.40606689]
[125.86133575 395.59912109]
[130.17861938 381.21368408]
[136.23101807 367.46786499]
[143.92678833 354.57000732]
[153.14926147 342.71563721]
[163.75862122 332.08450317]
[175.59403992 322.83776855]
[188.47610474 315.11557007]
[182.40226746 301.40029907]
[176.32843018 287.68502808]
[170.25460815 273.96975708]
[164.18077087 260.25451660]
[160.12727356 257.72900391]
[157.61724854 252.63027954]
[158.13705444 246.03927612]
[152.47425842 232.14924622]
[146.81147766 218.25923157]
[141.37542725 213.25210571]
[141.16947937 204.11999512]
[135.71412659 190.14720154]
[129.64028931 176.43193054]
[122.96009064 163.00155640]
[110.36438751 155.05186462]
[111.14619446 139.24998474]
[104.46599579 125.81961060]
[97.78580475 112.38923645]
[90.80735016 99.11138916]
[83.53411865 85.99269104]
[76.26089478 72.87400055]
[68.98766327 59.75530624]
[61.61697388 46.69112015]
[54.14923096 33.68216705]
[47.16284180 27.79759598]
[46.66880035 20.42347145]
[39.39556885 7.30477762]
[32.12234116 -5.81391668]
[24.84911156 -18.93261147]
[17.57588196 -32.05130386]
[1.57526410 -41.16512680]
[2.56438589 -58.68621445]
[-4.90335512 -71.69516754]
[-12.37109661 -84.70411682]
[-20.31778145 -97.42615509]
[-28.73239899 -109.84365082]
[-37.14701843 -122.26114655]
[-45.56163788 -134.67864990]
[-53.97625351 -147.09614563]
[-67.08810425 -139.79074097]
[-80.78677368 -133.65592957]
[-94.96799469 -128.73840332]
[-109.52385712 -125.07556152]
[-124.34356689 -122.69529724]
[-139.31433105 -121.61573029]
[-154.32221985 -121.84506989]
[-169.25300598 -123.38157654]
[-183.99307251 -126.21354675]
[-198.43020630 -130.31942749]
[-212.45455933 -135.66798401]
[-225.95938110 -142.21849060]
[-238.84188843 -149.92111206]
[-251.00404358 -158.71722412]
[-262.35327148 -168.53985596]
[-272.80322266 -179.31428528]
[-282.27432251 -190.95848083]
[-290.69451904 -203.38383484]
[-297.99972534 -216.49578857]
[-304.13433838 -230.19454956]
[-309.05169678 -244.37583923]
[-312.71432495 -258.93176270]
[-315.09436035 -273.75149536]
[-316.17373657 -288.72225952]
[-315.94418335 -303.73016357]
[-314.40747070 -318.66091919]
[-311.57528687 -333.40093994]
[-307.46920776 -347.83804321]
[-302.12045288 -361.86230469]
[-295.56976318 -375.36703491]
[-287.86694336 -388.24942017]
[-279.07067871 -400.41146851]
[-269.24789429 -411.76055908]
[-258.47332764 -422.21035767]
[-246.82897949 -431.68130493]
[-234.40350342 -440.10131836]
[-221.29144287 -447.40634155]
[-207.59260559 -453.54077148]
[-193.41123962 -458.45791626]
[-178.85528564 -462.12033081]
[-164.03550720 -464.50018311]
[-149.06471252 -465.57934570]
[-134.05682373 -465.34957886]
[-119.12608337 -463.81265259]
[-104.38610077 -460.98025513]
[-89.94907379 -456.87396240]
[-75.92488098 -451.52502441]
[-62.42024231 -444.97415161]
[-49.53794861 -437.27114868]
[-37.37604523 -428.47470093]
[-26.02708626 -418.65176392]
[-15.57744980 -407.87704468]
[-6.10666561 -396.23257446]
[2.31318784 -383.80697632]
[9.61802864 -370.69482422]
[15.75226212 -356.99591064]
[20.66920280 -342.81445312]
[24.33142662 -328.25845337]
[26.71106529 -313.43862915]
[27.79000282 -298.46783447]
[27.56003189 -283.45996094]
[26.02290344 -268.52923584]
[23.19031143 -253.78929138]
[19.08381844 -239.35231018]
[13.73467541 -225.32818604]
[7.18359375 -211.82365417]
[-0.51956695 -198.94146729]
[-9.31618118 -186.77967834]
[-19.13929939 -175.43086243]
[-29.91415977 -164.98138428]
[-41.55875778 -155.51075745]
[-33.14414215 -143.09326172]
[-24.72952271 -130.67576599]
[-16.31490326 -118.25827026]
[-7.90028524 -105.84077454]
[-2.54937577 -119.85390472]
[11.69565868 -124.55273438]
[24.33390808 -116.47345734]
[26.04892731 -101.57182312]
[15.57646561 -90.83275604]
[0.63785601 -92.17185974]
[8.10559750 -79.16291046]
[15.57333851 -66.15395355]
[27.16407394 -62.69253922]
[33.49203873 -51.91568375]
[30.69457626 -39.32453537]
[37.96780396 -26.20583916]
[45.24103546 -13.08714581]
[52.51426315 0.03154808]
[59.78749466 13.15024185]
[67.15818024 26.21442795]
[74.62592316 39.22338104]
[80.68218994 43.45935059]
[82.10635376 52.48207474]
[89.37958527 65.60076904]
[96.65281677 78.71946716]
[103.92604065 91.83815765]
[107.44519043 93.41549683]
[110.25198364 96.53635406]
[111.67266083 100.84781647]
[111.21617889 105.70903778]
[117.89636993 119.13941956]
[124.57656860 132.56979370]
[137.65008545 141.48011780]
[136.39047241 156.32136536]
[143.07066345 169.75173950]
[148.85810852 155.91319275]
[162.68287659 150.09286499]
[176.62548828 155.62492371]
[182.69898987 169.34033203]
[177.42420959 183.38229370]
[163.82276917 189.70693970]
[149.68692017 184.69184875]
[155.14227295 198.66464233]
[160.70150757 212.59643555]
[166.36428833 226.48646545]
[172.02706909 240.37649536]
[177.89604187 254.18066406]
[183.96986389 267.89593506]
[190.04370117 281.61120605]
[196.11753845 295.32647705]
[202.19137573 309.04174805]
[216.56723022 304.69268799]
[231.36859131 302.14331055]
[246.37106323 301.43218994]
[261.34719849 302.57012939]
[276.06997681 305.53988647]
[290.31619263 310.29644775]
[303.86990356 316.76766968]
[316.52560425 324.85546875]
[328.09146118 334.43725586]
[338.39212036 345.36776733]
[347.27145386 357.48129272]
[354.59481812 370.59417725]
[360.25122070 384.50765991]
[364.15490723 399.01077271]
[366.24667358 413.88369751]
[366.49484253 428.90097046]
[364.89566040 443.83489990]
[361.47332764 458.45910645]
[356.27975464 472.55187988]
[349.39364624 485.89959717]
[340.91943359 498.29989624]
[330.98556519 509.56478882]
[319.74264526 519.52349854]
[307.36108398 528.02508545]
[294.02862549 534.94061279]
[279.94735718 540.16528320]
[265.33071899 543.61993408]
[250.40037537 545.25207520]
[235.38259888 545.03710938]
[220.50509644 542.97814941]
[205.99337769 539.10650635]
[192.06744385 533.48083496]
[178.93841553 526.18646240]
[166.80532837 517.33386230]
[155.85209656 507.05737305]
[146.24479675 495.51272583]
[138.12905884 482.87490845]
[131.62791443 469.33554077]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 172]
[12 171]
[13 170]
[14 169]
[15 168]
[18 167]
[19 166]
[20 165]
[22 164]
[23 163]
[24 156]
[25 155]
[27 153]
[28 152]
[29 151]
[30 147]
[31 146]
[32 145]
[33 144]
[34 142]
[35 141]
[37 140]
[38 139]
[39 138]
[40 137]
[41 136]
[43 133]
[44 132]
[45 131]
[46 125]
[47 124]
[48 123]
[49 122]
[50 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
