%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[54.31127167 903.09448242]
[39.30996323 902.89697266]
[24.33318710 902.01696777]
[9.41198635 900.45617676]
[-5.42271090 898.21783447]
[-20.14015961 895.30664062]
[-34.70985413 891.72863770]
[-49.10159683 887.49114990]
[-63.28555679 882.60308838]
[-77.23233795 877.07446289]
[-90.91303253 870.91680908]
[-104.29929352 864.14282227]
[-117.36335754 856.76660156]
[-130.07815552 848.80346680]
[-142.41734314 840.26983643]
[-154.35533142 831.18341064]
[-165.86740112 821.56311035]
[-176.92965698 811.42877197]
[-187.51919556 800.80145264]
[-197.61405945 789.70312500]
[-207.19331360 778.15692139]
[-216.23713684 766.18664551]
[-224.72674561 753.81713867]
[-232.64457703 741.07403564]
[-239.97419739 727.98376465]
[-246.70043945 714.57348633]
[-252.80932617 700.87091064]
[-258.28823853 686.90454102]
[-263.12576294 672.70324707]
[-267.31192017 658.29650879]
[-270.83804321 643.71417236]
[-273.69677734 628.98645020]
[-275.88223267 614.14385986]
[-277.38986206 599.21716309]
[-278.21655273 584.23736572]
[-278.36059570 569.23547363]
[-277.82165527 554.24255371]
[-276.60089111 539.28967285]
[-274.70083618 524.40789795]
[-272.12536621 509.62796021]
[-268.87991333 494.98062134]
[-264.97113037 480.49615479]
[-260.40713501 466.20458984]
[-255.19738770 452.13558960]
[-249.35270691 438.31829834]
[-242.88519287 424.78131104]
[-235.80825806 411.55273438]
[-228.13655090 398.65997314]
[-219.88598633 386.12976074]
[-211.07366943 373.98803711]
[-201.71786499 362.25997925]
[-191.83795166 350.96994019]
[-181.45440674 340.14123535]
[-170.58876038 329.79638672]
[-159.26353455 319.95678711]
[-147.50219727 310.64285278]
[-135.32913208 301.87390137]
[-122.76956940 293.66809082]
[-109.84953308 286.04238892]
[-96.59580231 279.01266479]
[-83.03585815 272.59347534]
[-69.19779205 266.79809570]
[-55.11029816 261.63858032]
[-40.80256653 257.12557983]
[-26.30425644 253.26847839]
[-11.64541531 250.07525635]
[3.14357233 247.55253601]
[18.03205490 245.70553589]
[32.98917389 244.53810120]
[47.98392487 244.05265808]
[62.98523331 244.25018311]
[77.96200562 245.13027954]
[79.52252960 230.21168518]
[81.08305359 215.29307556]
[74.71181488 201.82991028]
[83.84283447 188.90957642]
[85.40335846 173.99096680]
[86.96387482 159.07237244]
[78.96479797 143.45245361]
[89.90458679 128.64021301]
[91.24282074 113.70003510]
[84.32715607 104.32907867]
[85.45252991 92.73706818]
[94.04157257 84.87134552]
[95.60209656 69.95273590]
[97.16262054 55.03413391]
[98.72314453 40.11552811]
[87.12611389 49.62914658]
[72.12616730 49.58832932]
[60.58108521 40.01174164]
[57.76911545 25.27767181]
[64.97586060 12.12233639]
[78.90648651 6.56017733]
[93.19210052 11.13413906]
[101.30193329 23.75487518]
[96.58793640 8.65226555]
[106.79154205 -2.19834304]
[109.89565277 -16.87364578]
[96.13267517 -22.97890663]
[83.94004059 -31.81255531]
[73.85075378 -42.98842239]
[66.30588531 -56.01795197]
[61.63525009 -70.33154297]
[60.04303741 -85.30346680]
[61.59884644 -100.27922058]
[66.23467255 -114.60411835]
[73.74784851 -127.65194702]
[83.80992889 -138.85231018]
[95.98105621 -147.71557617]
[109.72914886 -153.85427856]
[124.45320129 -157.00006104]
[139.50953674 -157.01539612]
[154.23997498 -153.89962769]
[168.00054932 -147.78895569]
[180.18971252 -138.95051575]
[190.27459717 -127.77066803]
[197.81434631 -114.73817444]
[202.47933960 -100.42275238]
[204.06565857 -85.45020294]
[202.50396729 -70.47505951]
[197.86250305 -56.15198517]
[190.34419250 -43.10710907]
[180.27770996 -31.91070747]
[168.10310364 -23.05223083]
[154.35258484 -16.91893959]
[139.62730408 -13.77895164]
[124.57095337 -13.76953506]
[121.46684265 0.90576702]
[126.40287018 14.95870018]
[115.97723389 26.85898399]
[113.64174652 41.67605209]
[112.08122253 56.59465790]
[110.52070618 71.51325989]
[108.96018219 86.43186951]
[116.18365479 101.57114410]
[106.18300629 115.03826904]
[104.84477234 129.97845459]
[112.50107574 140.35842896]
[111.07888031 152.77459717]
[101.88248444 160.63288879]
[100.32196045 175.55149841]
[98.76143646 190.47009277]
[105.02104950 205.00033569]
[96.00165558 216.85359192]
[94.44113159 231.77220154]
[92.88061523 246.69081116]
[107.71531677 248.92906189]
[122.43277740 251.84017944]
[137.00248718 255.41815186]
[151.39424133 259.65554810]
[165.57823181 264.54360962]
[179.52502441 270.07214355]
[193.20574951 276.22976685]
[206.59202576 283.00366211]
[219.65612793 290.37982178]
[232.37095642 298.34295654]
[244.71018982 306.87652588]
[256.64822388 315.96289062]
[268.16030884 325.58316040]
[279.22259521 335.71746826]
[289.81219482 346.34472656]
[299.90710449 357.44299316]
[309.48638916 368.98919678]
[318.53027344 380.95944214]
[327.01992798 393.32891846]
[334.93780518 406.07199097]
[342.26748657 419.16220093]
[348.99377441 432.57247925]
[355.10272217 446.27499390]
[360.58166504 460.24136353]
[365.41928101 474.44262695]
[369.60549927 488.84936523]
[373.13165283 503.43170166]
[375.99044800 518.15942383]
[378.17596436 533.00195312]
[379.68365479 547.92864990]
[380.51040649 562.90844727]
[380.65451050 577.91033936]
[380.11563110 592.90332031]
[378.89492798 607.85614014]
[376.99490356 622.73797607]
[374.41952515 637.51788330]
[371.17410278 652.16522217]
[367.26538086 666.64971924]
[362.70144653 680.94128418]
[357.49176025 695.01031494]
[351.64715576 708.82763672]
[345.17968750 722.36462402]
[338.10278320 735.59326172]
[330.43115234 748.48602295]
[322.18063354 761.01629639]
[313.36834717 773.15802002]
[304.01260376 784.88610840]
[294.13272095 796.17620850]
[283.74923706 807.00494385]
[272.88360596 817.34985352]
[261.55844116 827.18951416]
[249.79713440 836.50347900]
[237.62409973 845.27246094]
[225.06457520 853.47833252]
[212.14456177 861.10406494]
[198.89086914 868.13385010]
[185.33094788 874.55310059]
[171.49290466 880.34851074]
[157.40542603 885.50811768]
[143.09771729 890.02117920]
[128.59941101 893.87835693]
[113.94058990 897.07159424]
[99.15161133 899.59442139]
[84.26313782 901.44146729]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[72 146]
[73 145]
[74 144]
[76 142]
[77 141]
[78 140]
[80 137]
[81 136]
[84 134]
[85 133]
[86 132]
[87 131]
[95 130]
[97 128]
[98 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
