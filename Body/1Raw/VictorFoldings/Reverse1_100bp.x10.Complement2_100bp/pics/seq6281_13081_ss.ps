%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[62.18096161 496.45443726]
[62.79373550 511.58398438]
[58.45835876 526.09204102]
[49.64510727 538.40484619]
[37.30996704 547.18676758]
[22.79097176 551.48535156]
[7.66302729 550.83416748]
[-6.43289804 545.30395508]
[-17.96778488 535.49450684]
[-25.69041252 522.46990967]
[-28.76309204 507.64297485]
[-26.85251808 492.62207031]
[-20.16593742 479.03646851]
[-9.42866039 468.35986328]
[4.19461393 461.75039673]
[19.22613525 459.92498779]
[22.33024406 445.24969482]
[25.43435478 430.57440186]
[28.53846550 415.89907837]
[31.64257431 401.22378540]
[34.52784729 386.50390625]
[37.19364166 371.74267578]
[26.77515793 361.13168335]
[24.57660675 346.24441528]
[31.64846420 332.75955200]
[45.46432495 325.94570923]
[48.13011932 311.18450928]
[50.79591751 296.42327881]
[53.46171188 281.66204834]
[48.10946655 267.76232910]
[58.17616272 255.55690002]
[60.84195709 240.79568481]
[59.35623932 238.41854858]
[58.72262192 235.30967712]
[59.22452545 231.79064941]
[61.02383041 228.27966309]
[64.13090515 225.24650574]
[67.67057800 210.67013550]
[61.83003998 194.12156677]
[74.65068817 180.90368652]
[77.97295380 166.27622986]
[81.29521179 151.64875793]
[84.50848389 136.99697876]
[87.61259460 122.32167053]
[90.71670532 107.64636993]
[93.60197449 92.92648315]
[96.26776886 78.16526031]
[91.10620117 63.20970154]
[100.98222351 52.06010437]
[103.64801788 37.29888916]
[106.31381226 22.53767014]
[93.06611633 13.09137630]
[85.29194641 -1.13556802]
[84.50316620 -17.27056313]
[90.80700684 -32.08087158]
[102.89472198 -42.62130737]
[118.31297302 -46.81990051]
[120.75869751 -61.61917114]
[123.20442963 -76.41844177]
[114.27090454 -89.17892456]
[116.96203613 -104.15264893]
[129.18226624 -112.59075928]
[131.62799072 -127.39002991]
[134.07371521 -142.18930054]
[136.51943970 -156.98857117]
[138.96517944 -171.78784180]
[141.41090393 -186.58711243]
[143.85662842 -201.38638306]
[145.41714478 -216.30499268]
[146.08692932 -231.29002380]
[146.75671387 -246.27507019]
[147.42651367 -261.26010132]
[147.64984131 -276.25845337]
[147.42651367 -291.25677490]
[139.48460388 -304.94021606]
[147.03155518 -317.78128052]
[146.80822754 -332.77963257]
[146.58489990 -347.77795410]
[146.36157227 -362.77630615]
[146.13824463 -377.77462769]
[145.91491699 -392.77297974]
[145.69158936 -407.77130127]
[145.46826172 -422.76965332]
[145.24493408 -437.76797485]
[130.34664917 -439.73248291]
[115.89320374 -443.84536743]
[102.19265747 -450.01892090]
[89.53704071 -458.12158203]
[78.19610596 -467.98065186]
[68.41159058 -479.38595581]
[60.39205170 -492.09442139]
[54.30842590 -505.83514404]
[50.29038239 -520.31524658]
[48.42356873 -535.22607422]
[48.74777222 -550.24981689]
[51.25609207 -565.06622314]
[55.89505386 -579.35949707]
[62.56578445 -592.82495117]
[71.12609100 -605.17565918]
[81.39351654 -616.14825439]
[93.14920044 -625.50891113]
[106.14257812 -633.05804443]
[120.09669495 -638.63482666]
[134.71411133 -642.12036133]
[149.68327332 -643.44036865]
[164.68508911 -642.56665039]
[179.39979553 -639.51788330]
[193.51376343 -634.35900879]
[206.72615051 -627.20007324]
[218.75532532 -618.19360352]
[229.34489441 -607.53155518]
[238.26913452 -595.44122314]
[245.33782959 -582.18035889]
[250.40029907 -568.03149414]
[253.34863281 -553.29632568]
[254.12001038 -538.28894043]
[252.69798279 -523.32910156]
[249.11283875 -508.73580933]
[243.44102478 -494.82003784]
[235.80342102 -481.87844849]
[226.36282349 -470.18688965]
[215.32044983 -459.99453735]
[202.91169739 -451.51864624]
[189.40103149 -444.93991089]
[175.07644653 -440.39852905]
[160.24327087 -437.99130249]
[160.46659851 -422.99298096]
[160.68992615 -407.99462891]
[160.91325378 -392.99630737]
[161.13658142 -377.99795532]
[161.35990906 -362.99963379]
[161.58323669 -348.00128174]
[161.80656433 -333.00296021]
[162.02989197 -318.00460815]
[169.95582581 -305.39395142]
[162.42485046 -291.48010254]
[162.64817810 -276.48178101]
[164.56338501 -274.43481445]
[165.78317261 -271.50585938]
[165.96752930 -267.95599365]
[164.87716675 -264.16448975]
[162.41154480 -260.59033203]
[161.74176025 -245.60528564]
[161.07197571 -230.62023926]
[160.40219116 -215.63520813]
[170.77154541 -226.47386169]
[185.51033020 -229.26097107]
[199.12136841 -222.95701599]
[206.52804565 -209.91319275]
[204.96788025 -194.99455261]
[195.02276611 -183.76536560]
[180.40197754 -180.41384888]
[166.55871582 -186.19001770]
[158.65589905 -198.94065857]
[156.21017456 -184.14138794]
[153.76445007 -169.34211731]
[151.31871033 -154.54284668]
[148.87298584 -139.74357605]
[146.42726135 -124.94430542]
[143.98153687 -110.14503479]
[152.83718872 -98.22392273]
[150.56770325 -83.18051910]
[138.00369263 -73.97271729]
[135.55796814 -59.17344284]
[133.11224365 -44.37417221]
[144.84153748 -36.96527100]
[152.88647461 -25.60961914]
[156.00549316 -12.00259590]
[153.69551086 1.80879593]
[146.27272034 13.73387814]
[134.82975769 21.95476532]
[121.07502747 25.20346642]
[118.40923309 39.96468353]
[115.74343872 54.72589874]
[121.09568024 68.62564087]
[111.02899170 80.83105469]
[108.36319733 95.59227753]
[110.30081940 100.46665192]
[109.36949921 106.07967377]
[105.39200592 110.75048065]
[102.28789520 125.42578125]
[99.18378448 140.10108948]
[100.46956635 149.14457703]
[95.92266846 154.97102356]
[92.60041046 169.59848022]
[89.27815247 184.22593689]
[95.47904205 195.53575134]
[92.41078186 207.65060425]
[82.24695587 214.20980835]
[78.70728302 228.78617859]
[75.60317230 243.46148682]
[72.93737793 258.22268677]
[78.09894562 273.17825317]
[68.22293091 284.32785034]
[65.55713654 299.08908081]
[62.89133835 313.85028076]
[60.22554398 328.61151123]
[70.78532410 339.82745361]
[72.69370270 354.93411255]
[65.42675018 368.11193848]
[51.95486069 374.40847778]
[49.28906631 389.16967773]
[51.16155624 395.51046753]
[49.76099777 401.01821899]
[46.31787872 404.32788086]
[43.21376801 419.00320435]
[40.10965729 433.67849731]
[37.00554657 448.35379028]
[33.90143585 463.02911377]
[46.90637589 470.78475952]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 209]
[17 208]
[18 207]
[19 206]
[20 205]
[21 202]
[22 201]
[26 197]
[27 196]
[28 195]
[29 194]
[31 192]
[32 191]
[37 190]
[38 189]
[40 186]
[41 185]
[42 184]
[43 182]
[44 181]
[45 180]
[46 177]
[47 176]
[49 174]
[50 173]
[51 172]
[57 165]
[58 164]
[59 163]
[62 160]
[63 159]
[64 158]
[65 157]
[66 156]
[67 155]
[68 154]
[69 145]
[70 144]
[71 143]
[72 142]
[73 137]
[74 136]
[76 134]
[77 133]
[78 132]
[79 131]
[80 130]
[81 129]
[82 128]
[83 127]
[84 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
