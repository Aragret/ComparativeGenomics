%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[105.64620972 504.62405396]
[101.00770569 490.34115601]
[98.05874634 475.61633301]
[96.83921051 460.64874268]
[97.36558533 445.64074707]
[99.63076782 430.79537964]
[103.60410309 416.31335449]
[109.23187256 402.39053345]
[116.43796539 389.21520996]
[125.12491608 376.96560669]
[135.17524719 365.80731201]
[146.45306396 355.89126587]
[158.80580139 347.35159302]
[172.06645203 340.30377197]
[166.61108398 326.33096313]
[161.15573120 312.35815430]
[155.70037842 298.38537598]
[150.24501038 284.41256714]
[147.73478699 283.16482544]
[145.56756592 280.84753418]
[144.15318298 277.58642578]
[143.84846497 273.65301514]
[144.90815735 269.44219971]
[140.29415894 255.16946411]
[129.67062378 249.38438416]
[125.70980835 237.53129578]
[131.05233765 225.79161072]
[126.65133667 211.45175171]
[122.25034332 197.11190796]
[117.84934235 182.77206421]
[113.44834900 168.43222046]
[109.04734802 154.09236145]
[104.64634705 139.75251770]
[100.13871765 125.44583130]
[95.52471161 111.17310333]
[92.65652466 125.89633179]
[84.98504639 138.78619385]
[73.41152954 148.32839966]
[59.29560471 153.40193176]
[44.29560852 153.41076660]
[30.17371941 148.35386658]
[18.58896446 138.82530212]
[10.90230846 125.94449615]
[8.01677227 111.22465515]
[10.27134514 96.39505768]
[17.40116310 83.19787598]
[28.56862259 73.18349457]
[42.46178055 67.52838898]
[57.44848251 66.89692688]
[71.76810455 71.36328888]
[83.73839569 80.40276337]
[91.95372009 92.95484924]
[90.83807373 77.99639893]
[89.72241974 63.03794098]
[88.60677338 48.07949066]
[77.45682526 40.52347946]
[72.76303101 28.10660553]
[76.02938843 15.44117928]
[85.84643555 7.09521914]
[84.95362091 -7.87818623]
[84.06079865 -22.85159302]
[83.16798401 -37.82499695]
[74.05661774 -46.95438766]
[73.62124634 -59.44415283]
[81.55018616 -68.57971191]
[80.88040161 -83.56475067]
[80.21061707 -98.54978943]
[79.54083252 -113.53482819]
[78.87104797 -128.51986694]
[70.08891296 -116.35951996]
[56.16579056 -110.77860260]
[41.41590881 -113.50642395]
[30.40968132 -123.69773865]
[26.55750656 -138.19465637]
[31.05302429 -152.50515747]
[42.50324631 -162.19497681]
[57.36019897 -164.26159668]
[71.02029419 -158.06468201]
[79.25087738 -145.52413940]
[80.58911133 -160.46432495]
[81.92734528 -175.40451050]
[83.26557922 -190.34469604]
[72.42259979 -179.97987366]
[57.57405472 -177.85366821]
[44.25808716 -184.75909424]
[37.44122696 -198.12063599]
[39.66599274 -212.95472717]
[50.10260010 -223.72863770]
[64.85845184 -226.42396545]
[78.42998505 -220.03541565]
[85.75557709 -206.94462585]
[88.85968781 -221.61991882]
[91.96379852 -236.29522705]
[95.06790924 -250.97053528]
[81.07013702 -256.45797729]
[68.16655731 -264.17468262]
[56.70919418 -273.91012573]
[47.01061249 -285.39871216]
[39.33539200 -298.32699585]
[33.89292526 -312.34231567]
[30.83168030 -327.06234741]
[30.23517227 -342.08544922]
[32.11967468 -357.00183105]
[36.43378067 -371.40454102]
[43.05979156 -384.90069580]
[51.81694794 -397.12207031]
[62.46635056 -407.73529053]
[74.71746826 -416.45077515]
[88.23609161 -423.03079224]
[102.65341949 -427.29583740]
[117.57613373 -429.12954712]
[132.59713745 -428.48190308]
[147.30662537 -425.37054443]
[161.30334473 -419.88040161]
[174.20544434 -412.16119385]
[185.66091919 -402.42355347]
[195.35729980 -390.93313599]
[203.03002930 -378.00335693]
[208.46978760 -363.98696899]
[211.52819824 -349.26635742]
[212.12181091 -334.24313354]
[210.23443604 -319.32711792]
[205.91755676 -304.92523193]
[199.28894043 -291.43035889]
[190.52943420 -279.21066284]
[179.87799072 -268.59951782]
[167.62518311 -259.88638306]
[154.10530090 -253.30897522]
[139.68714905 -249.04670715]
[124.76408386 -247.21586609]
[109.74320984 -247.86642456]
[106.63909912 -233.19111633]
[103.53498840 -218.51580811]
[100.43088531 -203.84051514]
[98.20576477 -189.00646973]
[96.86753082 -174.06628418]
[95.52929688 -159.12609863]
[94.19106293 -144.18591309]
[93.85608673 -129.18965149]
[94.52587128 -114.20461273]
[95.19565582 -99.21957397]
[95.86544037 -84.23453522]
[96.53522491 -69.24949646]
[106.76288605 -54.98899460]
[98.14139557 -38.71781540]
[99.03421021 -23.74440765]
[99.92702484 -8.77100277]
[100.81983948 6.20240355]
[113.86406708 16.81781578]
[115.22147369 33.91963959]
[103.56522369 46.96384048]
[104.68087769 61.92229462]
[105.79652405 76.88074493]
[106.91217041 91.83920288]
[109.79744720 106.55908966]
[114.41145325 120.83182526]
[120.02885437 128.03479004]
[118.98619843 135.35151672]
[123.38719177 149.69137573]
[127.78819275 164.03121948]
[132.18919373 178.37106323]
[136.59019470 192.71090698]
[140.99118042 207.05076599]
[145.39218140 221.39060974]
[159.16043091 233.61831665]
[154.56689453 250.55545044]
[159.18089294 264.82818604]
[164.21781921 278.95721436]
[169.67317200 292.93002319]
[175.12852478 306.90280151]
[180.58389282 320.87561035]
[186.03924561 334.84841919]
[200.56729126 331.04678345]
[215.43846130 328.95751953]
[230.45161438 328.60885620]
[245.40373230 330.00549316]
[260.09259033 333.12857056]
[274.31958008 337.93585205]
[287.89224243 344.36227417]
[300.62704468 352.32098389]
[312.35177612 361.70434570]
[322.90786743 372.38543701]
[332.15255737 384.21981812]
[339.96078491 397.04742432]
[346.22702026 410.69479370]
[350.86648560 424.97738647]
[353.81643677 439.70199585]
[355.03695679 454.66952515]
[354.51156616 469.67755127]
[352.24740601 484.52307129]
[348.27502441 499.00537109]
[342.64819336 512.92852783]
[335.44296265 526.10437012]
[326.75683594 538.35455322]
[316.70724487 549.51348877]
[305.43011475 559.43029785]
[293.07791138 567.97076416]
[279.81774902 575.01953125]
[265.82891846 580.48114014]
[251.30062866 584.28179932]
[236.42932129 586.37005615]
[221.41613770 586.71771240]
[206.46411133 585.32006836]
[191.77545166 582.19604492]
[177.54879761 577.38781738]
[163.97656250 570.96044922]
[151.24227905 563.00091553]
[139.51817322 553.61676025]
[128.96281433 542.93499756]
[119.71891785 531.09997559]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 172]
[15 171]
[16 170]
[17 169]
[18 168]
[23 167]
[24 166]
[27 164]
[28 163]
[29 162]
[30 161]
[31 160]
[32 159]
[33 158]
[34 156]
[35 155]
[52 154]
[53 153]
[54 152]
[55 151]
[59 148]
[60 147]
[61 146]
[62 145]
[65 143]
[66 142]
[67 141]
[68 140]
[69 139]
[79 138]
[80 137]
[81 136]
[82 135]
[91 134]
[92 133]
[93 132]
[94 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
