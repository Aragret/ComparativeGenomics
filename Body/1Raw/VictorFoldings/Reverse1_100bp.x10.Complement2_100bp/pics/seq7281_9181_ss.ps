%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[192.82412720 583.72338867]
[199.67964172 570.32611084]
[209.01736450 558.52386475]
[220.47836304 548.77026367]
[233.62211609 541.44036865]
[229.00810242 527.16760254]
[224.39410400 512.89489746]
[213.77056885 507.10980225]
[209.80975342 495.25671387]
[215.15228271 483.51702881]
[210.75128174 469.17718506]
[206.35028076 454.83734131]
[201.94929504 440.49749756]
[197.54829407 426.15762329]
[192.93428040 411.88488770]
[188.10827637 397.68243408]
[183.28228760 383.47998047]
[178.45628357 369.27752686]
[173.63029480 355.07507324]
[170.64611816 353.19702148]
[168.42335510 349.78024292]
[167.67526245 345.19836426]
[168.92134094 340.12939453]
[164.73432922 325.72561646]
[160.54731750 311.32183838]
[156.36030579 296.91806030]
[152.17329407 282.51428223]
[147.98628235 268.11050415]
[143.79927063 253.70671082]
[139.18525696 239.43397522]
[134.14834595 225.30494690]
[129.11141968 211.17591858]
[124.07450867 197.04689026]
[118.86746979 191.80203247]
[119.06948853 182.66984558]
[108.36100769 177.04356384]
[104.22415924 165.25076294]
[109.39130402 153.43283081]
[98.11422729 143.70263672]
[101.23144531 128.19155884]
[96.61743927 113.91882324]
[86.37054443 104.40605164]
[89.10983276 90.69518280]
[84.49581909 76.42245483]
[72.88871765 65.67137146]
[76.33596039 51.18117523]
[65.22872162 44.62434387]
[61.67953873 32.64155960]
[67.06811523 21.81151962]
[55.62236404 10.88881779]
[59.28496552 -3.54844713]
[55.52800369 10.97344112]
[46.25315857 22.76230431]
[33.02340698 29.83151054]
[18.06819534 30.98977470]
[3.90773463 26.04190826]
[-7.07168531 15.82171631]
[-13.01984024 2.05147839]
[-12.93436146 -12.94827747]
[-6.82965326 -26.64982986]
[4.26553345 -36.74422836]
[18.48146439 -41.53038406]
[33.42250824 -40.20174789]
[46.57083130 -32.98222351]
[55.71143341 -21.08692551]
[54.15090942 -36.00553131]
[52.59038544 -50.92413712]
[42.32805634 -39.98409271]
[27.34075165 -39.36707306]
[16.21388245 -49.42653656]
[15.32142639 -64.39996338]
[25.17461967 -75.70989990]
[40.12910843 -76.87748718]
[51.61783981 -67.23473358]
[51.39451218 -82.23307800]
[51.17118454 -97.23141479]
[50.94785690 -112.22975159]
[36.41230392 -116.30377197]
[23.62659073 -124.30051422]
[13.62237072 -135.56465149]
[7.20402050 -149.17761230]
[4.88396740 -164.03256226]
[6.84178877 -178.92427063]
[12.91034317 -192.64700317]
[22.59000206 -204.09208679]
[35.08977509 -212.33750916]
[49.39194489 -216.72216797]
[49.16861725 -231.72050476]
[48.94528961 -246.71884155]
[41.00338364 -260.40228271]
[48.55033493 -273.24334717]
[40.60842896 -286.92678833]
[48.15538406 -299.76785278]
[47.93205643 -314.76620483]
[47.70872498 -329.76452637]
[47.48539734 -344.76287842]
[47.26206970 -359.76119995]
[33.01900482 -365.00518799]
[21.63467979 -375.04321289]
[14.64873028 -388.51766968]
[13.00594997 -403.60626221]
[16.92851067 -418.26837158]
[25.88591766 -430.52111816]
[38.66675568 -438.70736694]
[53.54252243 -441.72000122]
[68.50138855 -439.15161133]
[81.52030182 -431.34951782]
[90.83854675 -419.36892700]
[95.19591522 -404.83007812]
[94.00310516 -389.69924927]
[87.42143250 -376.02279663]
[76.34102631 -365.65026855]
[62.26041031 -359.98452759]
[62.48373795 -344.98620605]
[62.70706558 -329.98785400]
[62.93039322 -314.98953247]
[63.15372086 -299.99118042]
[71.07965088 -287.38052368]
[63.54867554 -273.46667480]
[71.47460938 -260.85601807]
[63.94362640 -246.94216919]
[64.16695404 -231.94383240]
[64.39028168 -216.94549561]
[78.81665802 -212.98861694]
[91.55638885 -205.11900330]
[101.57251740 -193.96719360]
[108.04695892 -180.43122864]
[110.44729614 -165.60441589]
[108.57055664 -150.68698120]
[102.56036377 -136.88894653]
[92.89595795 -125.33194733]
[80.35400391 -116.95807648]
[65.94618988 -112.45307922]
[66.16951752 -97.45474243]
[66.39284515 -82.45640564]
[66.61617279 -67.45806122]
[67.50899506 -52.48465729]
[69.06951141 -37.56605530]
[70.63003540 -22.64744949]
[73.62480927 -7.94944525]
[84.75577545 1.94757414]
[81.40795898 17.41052055]
[94.88085175 28.65543365]
[90.60869598 46.56716537]
[101.88577271 56.29736710]
[98.76855469 71.80844116]
[103.38256073 86.08117676]
[113.62945557 95.59394836]
[110.89016724 109.30481720]
[115.50418091 123.57754517]
[127.11128235 134.32862854]
[123.66403961 148.81881714]
[137.61280823 160.84019470]
[133.27194214 177.84384155]
[138.20353699 192.00997925]
[143.24044800 206.13900757]
[148.27737427 220.26803589]
[153.31428528 234.39706421]
[156.72006226 237.09051514]
[158.87486267 240.39526367]
[159.74014282 243.84297180]
[159.43339539 247.00090027]
[158.20304871 249.51969910]
[162.39006042 263.92349243]
[166.57707214 278.32727051]
[170.76408386 292.73104858]
[174.95109558 307.13482666]
[179.13810730 321.53860474]
[183.32511902 335.94238281]
[187.83274841 350.24908447]
[192.65873718 364.45153809]
[197.48474121 378.65399170]
[202.31074524 392.85644531]
[207.13673401 407.05889893]
[211.84890747 411.69647217]
[213.29461670 417.19256592]
[211.88813782 421.75662231]
[216.28913879 436.09649658]
[220.69013977 450.43634033]
[225.09112549 464.77618408]
[229.49212646 479.11602783]
[243.26037598 491.34375000]
[238.66683960 508.28088379]
[243.28083801 522.55358887]
[247.89485168 536.82635498]
[262.84207153 535.07519531]
[277.84371948 536.27404785]
[292.32312012 540.37683105]
[305.72375488 547.22583008]
[317.53054810 556.55780029]
[327.28967285 568.01409912]
[334.62597656 581.15429688]
[339.25753784 595.47332764]
[341.00625610 610.42083740]
[339.80499268 625.42230225]
[335.69985962 639.90100098]
[328.84866333 653.30053711]
[319.51477051 665.10583496]
[308.05691528 674.86309814]
[294.91555786 682.19726562]
[280.59576416 686.82653809]
[265.64794922 688.57281494]
[250.64671326 687.36914062]
[236.16862488 683.26165771]
[222.77020264 676.40826416]
[210.96643066 667.07250977]
[201.21102905 655.61303711]
[193.87896729 642.47052002]
[189.25205994 628.14996338]
[187.50816345 613.20184326]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 185]
[6 184]
[7 183]
[10 181]
[11 180]
[12 179]
[13 178]
[14 177]
[15 174]
[16 173]
[17 172]
[18 171]
[19 170]
[23 169]
[24 168]
[25 167]
[26 166]
[27 165]
[28 164]
[29 163]
[30 158]
[31 157]
[32 156]
[33 155]
[35 154]
[38 152]
[40 150]
[41 149]
[43 147]
[44 146]
[46 144]
[49 142]
[51 140]
[65 139]
[66 138]
[67 137]
[74 136]
[75 135]
[76 134]
[77 133]
[87 123]
[88 122]
[89 121]
[91 119]
[93 117]
[94 116]
[95 115]
[96 114]
[97 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
