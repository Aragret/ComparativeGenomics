%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[139.47196960 225.57089233]
[140.15351868 210.58007812]
[141.89080811 195.67468262]
[144.67518616 180.92897034]
[148.49276733 166.41638184]
[153.32455444 152.20924377]
[159.14646912 138.37834167]
[145.76620483 131.59834290]
[132.38592529 124.81835175]
[119.00565338 118.03836060]
[105.62538147 111.25836945]
[92.09703827 104.77886963]
[78.42736816 98.60310364]
[64.75769806 92.42733765]
[51.08802795 86.25156403]
[38.76790237 90.06958771]
[27.50954247 84.64436340]
[23.11161995 73.37560272]
[9.53541374 66.99700165]
[-4.04079390 60.61839676]
[-17.61700058 54.23979187]
[-24.89072609 67.36466217]
[-33.02485657 79.97438812]
[-41.98305893 92.01264954]
[-51.72533035 103.42568970]
[-62.20815659 114.16252899]
[-73.38471222 124.17520905]
[-85.20509338 133.41900635]
[-97.61649323 141.85266113]
[-110.56348419 149.43847656]
[-123.98824310 156.14259338]
[-137.83081055 161.93505859]
[-152.02935791 166.78999329]
[-166.52047729 170.68572998]
[-181.23944092 173.60487366]
[-196.12051392 175.53436279]
[-211.09722900 176.46559143]
[-226.10270691 176.39440918]
[-241.06991577 175.32112122]
[-255.93200684 173.25053406]
[-270.62261963 170.19189453]
[-285.07611084 166.15884399]
[-299.22796631 161.16941833]
[-313.01495361 155.24588013]
[-326.37551880 148.41470337]
[-339.24993896 140.70639038]
[-351.58078003 132.15536499]
[-363.31292725 122.79983521]
[-374.39398193 112.68156433]
[-384.77447510 101.84575653]
[-394.40802002 90.34080505]
[-403.25161743 78.21808624]
[-411.26574707 65.53176117]
[-418.41461182 52.33847046]
[-424.66629028 38.69715118]
[-429.99288940 24.66872406]
[-434.37057495 10.31584835]
[-437.77984619 -4.29737473]
[-440.20541382 -19.10567856]
[-441.63647461 -34.04292297]
[-442.06665039 -49.04239655]
[-441.49401855 -64.03710938]
[-439.92108154 -78.96008301]
[-437.35494995 -93.74467468]
[-433.80703735 -108.32485199]
[-429.29318237 -122.63549042]
[-423.83355713 -136.61268616]
[-417.45254517 -150.19400024]
[-410.17868042 -163.31877136]
[-402.04437256 -175.92839050]
[-393.08602905 -187.96655273]
[-383.34359741 -199.37947083]
[-372.86065674 -210.11616516]
[-361.68395996 -220.12870789]
[-349.86346436 -229.37237549]
[-337.45196533 -237.80586243]
[-324.50488281 -245.39151001]
[-311.08004761 -252.09545898]
[-297.23739624 -257.88775635]
[-283.03878784 -262.74252319]
[-268.54760742 -266.63806152]
[-253.82861328 -269.55700684]
[-238.94752502 -271.48632812]
[-223.97079468 -272.41735840]
[-208.96531677 -272.34600830]
[-193.99812317 -271.27252197]
[-179.13604736 -269.20175171]
[-164.44548035 -266.14291382]
[-149.99203491 -262.10968018]
[-135.84024048 -257.12008667]
[-122.05332947 -251.19636536]
[-108.69287109 -244.36502075]
[-95.81852722 -236.65655518]
[-83.48780823 -228.10537720]
[-71.75577545 -218.74969482]
[-60.67484283 -208.63128662]
[-50.29449081 -197.79534912]
[-40.66108704 -186.29026794]
[-31.81764793 -174.16744995]
[-23.80367851 -161.48101807]
[-16.65497017 -148.28764343]
[-10.40344810 -134.64624023]
[-5.07703590 -120.61774445]
[-0.69952196 -106.26481628]
[2.70954251 -91.65155029]
[5.13493156 -76.84321594]
[6.56581306 -61.90595245]
[6.99579620 -46.90647125]
[6.42295980 -31.91176987]
[4.84986353 -16.98881340]
[2.28353238 -2.20425272]
[-1.26457155 12.37587833]
[-5.77860117 26.68646240]
[-11.23839569 40.66358185]
[2.33781123 47.04218674]
[15.91401863 53.42079163]
[29.49022484 59.79939651]
[46.87169266 57.38039398]
[57.26379395 72.58189392]
[70.93346405 78.75766754]
[84.60313416 84.93343353]
[98.27280426 91.10919952]
[102.03728485 90.27189636]
[106.15255737 91.09797668]
[109.86745453 93.70690155]
[112.40537262 97.87809753]
[125.78564453 104.65808868]
[139.16592407 111.43807983]
[152.54618835 118.21807098]
[165.92646790 124.99806213]
[173.63644409 112.12385559]
[182.23536682 99.82558441]
[191.68037415 88.16449738]
[201.92440796 77.19871521]
[212.91645813 66.98284912]
[224.60173035 57.56779861]
[236.92204285 49.00047684]
[249.81599426 41.32355881]
[263.21932983 34.57529831]
[277.06533813 28.78930855]
[291.28494263 23.99441719]
[305.80740356 20.21451187]
[320.56030273 17.46842575]
[335.47015381 15.76983929]
[350.46267700 15.12721443]
[365.46319580 15.54375267]
[380.39694214 17.01737785]
[395.18957520 19.54075050]
[409.76733398 23.10129929]
[424.05764771 27.68128204]
[437.98928833 33.25788498]
[451.49282837 39.80332565]
[464.50103760 47.28499222]
[476.94909668 55.66561127]
[488.77499390 64.90342712]
[499.91979980 74.95243073]
[510.32797241 85.76254272]
[519.94769287 97.27991486]
[528.73101807 109.44716644]
[536.63421631 122.20367432]
[543.61785889 135.48590088]
[549.64721680 149.22764587]
[554.69226074 163.36048889]
[558.72772217 177.81398010]
[561.73364258 192.51614380]
[563.69500732 207.39370728]
[564.60198975 222.37255859]
[564.45019531 237.37809753]
[563.24023438 252.33552551]
[560.97821045 267.17034912]
[557.67535400 281.80868530]
[553.34820557 296.17755127]
[548.01824951 310.20538330]
[541.71203613 323.82232666]
[534.46099854 336.96047974]
[526.30126953 349.55444336]
[517.27355957 361.54147339]
[507.42269897 372.86181641]
[496.79788208 383.45907593]
[485.45202637 393.28048706]
[473.44161987 402.27709961]
[460.82650757 410.40408325]
[447.66955566 417.62097168]
[434.03628540 423.89181519]
[419.99465942 429.18533325]
[405.61459351 433.47521973]
[390.96777344 436.74002075]
[376.12710571 438.96353149]
[361.16659546 440.13464355]
[346.16070557 440.24752808]
[331.18426514 439.30163574]
[316.31182861 437.30166626]
[301.61752319 434.25759888]
[287.17456055 430.18457031]
[273.05487061 425.10290527]
[259.32879639 419.03790283]
[246.06475830 412.01977539]
[233.32881165 404.08349609]
[221.18440247 395.26861572]
[209.69204712 385.61901855]
[198.90899658 375.18280029]
[188.88896179 364.01196289]
[179.68186951 352.16213989]
[171.33358765 339.69235229]
[163.88572693 326.66476440]
[157.37536621 313.14425659]
[151.83494568 299.19821167]
[147.29206848 284.89605713]
[143.76937866 270.30908203]
[141.28442383 255.50997925]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 130]
[8 129]
[9 128]
[10 127]
[11 126]
[12 122]
[13 121]
[14 120]
[15 119]
[18 117]
[19 116]
[20 115]
[21 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
