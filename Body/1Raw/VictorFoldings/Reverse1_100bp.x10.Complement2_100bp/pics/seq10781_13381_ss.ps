%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[69.24297333 512.44073486]
[67.23785400 527.42309570]
[60.90418243 541.14813232]
[50.80513763 552.39538574]
[37.83872604 560.16479492]
[23.15790749 563.76550293]
[8.06809139 562.87725830]
[-6.08894444 557.57922363]
[-18.05436707 548.34228516]
[-26.76421928 535.98797607]
[-31.44402695 521.61468506]
[-31.67766571 506.50057983]
[-27.44435883 491.98953247]
[-19.12052917 479.37185669]
[-7.44632626 469.76956177]
[6.54018688 464.03640747]
[21.59533882 462.68225098]
[24.69944954 448.00692749]
[27.80356026 433.33163452]
[30.90766907 418.65634155]
[34.01177979 403.98101807]
[37.11589050 389.30572510]
[40.22000122 374.63043213]
[43.32411194 359.95513916]
[36.99081421 349.64901733]
[39.45679474 337.39736938]
[49.93476868 329.87576294]
[53.25703049 315.24829102]
[56.57928848 300.62081909]
[59.90154648 285.99337769]
[63.22380829 271.36590576]
[66.54606628 256.73843384]
[69.86832428 242.11099243]
[72.75360107 227.39109802]
[75.19932556 212.59182739]
[77.64505005 197.79255676]
[79.98053741 182.97547913]
[74.21681976 169.24127197]
[83.91564941 156.74153137]
[86.14076996 141.90748596]
[77.10860443 130.11955261]
[79.15386963 115.04402161]
[91.57939148 105.65018463]
[89.56571960 97.84520721]
[93.94965363 90.61250305]
[96.39537811 75.81323242]
[98.84111023 61.01396179]
[101.28683472 46.21469116]
[103.73255920 31.41542053]
[96.85062408 14.33559513]
[108.50637054 1.21650934]
[102.90180969 -13.57874107]
[112.44148254 -25.01744270]
[114.66660309 -39.85148621]
[116.89171600 -54.68552780]
[109.75624847 -71.66099548]
[121.21537781 -84.95217133]
[123.21939087 -99.81769562]
[125.22340393 -114.68322754]
[127.22741699 -129.54875183]
[125.27258301 -138.47155762]
[129.37353516 -144.62005615]
[131.59864807 -159.45410156]
[133.82376099 -174.28814697]
[136.04887390 -189.12219238]
[138.27400208 -203.95622253]
[136.36187744 -208.81327820]
[136.49111938 -213.45402527]
[138.23747253 -217.13713074]
[140.94398499 -219.39703369]
[143.82925415 -234.11692810]
[137.45889282 -251.39408875]
[149.50007629 -264.16030884]
[152.16587830 -278.92153931]
[154.83168030 -293.68273926]
[157.49746704 -308.44396973]
[143.01535034 -312.38827515]
[128.93211365 -317.57980347]
[115.35494995 -323.97900391]
[102.38717651 -331.53720093]
[90.12750244 -340.19686890]
[78.66921997 -349.89208984]
[68.09954834 -360.54907227]
[58.49892044 -372.08670044]
[49.94040680 -384.41720581]
[42.48914719 -397.44671631]
[36.20184708 -411.07608032]
[31.12636185 -425.20153809]
[27.30131531 -439.71560669]
[24.75582123 -454.50784302]
[23.50925255 -469.46563721]
[23.57109642 -484.47512817]
[24.94088173 -499.42214966]
[27.60818291 -514.19287109]
[31.55270195 -528.67492676]
[36.74441528 -542.75811768]
[43.14381409 -556.33520508]
[50.70219040 -569.30285645]
[59.36201859 -581.56243896]
[69.05739594 -593.02056885]
[79.71453094 -603.59008789]
[91.25231171 -613.19055176]
[103.58293152 -621.74890137]
[116.61254883 -629.19995117]
[130.24198914 -635.48706055]
[144.36752319 -640.56237793]
[158.88165283 -644.38720703]
[173.67390442 -646.93249512]
[188.63171387 -648.17883301]
[203.64123535 -648.11682129]
[218.58822632 -646.74682617]
[233.35893250 -644.07928467]
[247.84092712 -640.13458252]
[261.92401123 -634.94262695]
[275.50100708 -628.54309082]
[288.46856689 -620.98449707]
[300.72799683 -612.32452393]
[312.18600464 -602.62896729]
[322.75537109 -591.97167969]
[332.35568237 -580.43377686]
[340.91384888 -568.10302734]
[348.36474609 -555.07330322]
[354.65167236 -541.44378662]
[359.72674561 -527.31817627]
[363.55139160 -512.80401611]
[366.09646606 -498.01168823]
[367.34262085 -483.05386353]
[367.28036499 -468.04437256]
[365.91015625 -453.09738159]
[363.24243164 -438.32672119]
[359.29751587 -423.84478760]
[354.10540771 -409.76174927]
[347.70562744 -396.18484497]
[340.14688110 -383.21740723]
[331.48672485 -370.95809937]
[321.79101562 -359.50021362]
[311.13357544 -348.93099976]
[299.59552002 -339.33084106]
[287.26467896 -330.77285767]
[274.23486328 -323.32214355]
[260.60522461 -317.03543091]
[246.47955322 -311.96054077]
[231.96531677 -308.13610840]
[217.17298889 -305.59121704]
[202.21514893 -304.34527588]
[187.20564270 -304.40774536]
[172.25868225 -305.77816772]
[169.59289551 -291.01696777]
[166.92709351 -276.25573730]
[164.26130676 -261.49453735]
[170.89863586 -251.38154602]
[168.79852295 -239.06192017]
[158.54914856 -231.23165894]
[155.66387939 -216.51176453]
[153.10804749 -201.73110962]
[150.88291931 -186.89706421]
[148.65780640 -172.06301880]
[146.43269348 -157.22897339]
[144.20756531 -142.39494324]
[142.09294128 -127.54473877]
[140.08892822 -112.67921448]
[138.08491516 -97.81368256]
[136.08090210 -82.94815063]
[143.16319275 -73.14163971]
[141.61528015 -60.74052048]
[131.72575378 -52.46041107]
[129.50064087 -37.62636948]
[127.27552795 -22.79232407]
[133.03924561 -9.05810452]
[123.34041595 3.44162655]
[130.27590942 13.35249996]
[128.54353333 25.72919655]
[118.53182983 33.86114883]
[116.08610535 48.66041946]
[113.64038086 63.45969009]
[111.19464874 78.25895691]
[108.74892426 93.05822754]
[106.41343689 107.87529755]
[115.53595734 120.50135803]
[113.06805420 135.51348877]
[100.97481537 144.13261414]
[98.74969482 158.96665955]
[104.35425568 173.76190186]
[94.81458282 185.20060730]
[96.63636017 194.15151978]
[92.44432831 200.23828125]
[89.99859619 215.03755188]
[87.55287170 229.83682251]
[89.22547913 233.84385681]
[89.50762177 237.77894592]
[88.59264374 241.21380615]
[86.79315186 243.82691956]
[84.49578857 245.43324280]
[81.17353058 260.06069946]
[77.85126495 274.68817139]
[74.52900696 289.31561279]
[71.20674896 303.94308472]
[67.88449097 318.57055664]
[64.56223297 333.19799805]
[70.41535950 350.65716553]
[57.99941254 363.05923462]
[54.89530182 377.73452759]
[51.79119110 392.40985107]
[48.68708420 407.08514404]
[45.58297348 421.76043701]
[42.47886276 436.43576050]
[39.37475204 451.11105347]
[36.27064133 465.78634644]
[49.48800278 473.12069702]
[59.95511246 484.02627563]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 208]
[18 207]
[19 206]
[20 205]
[21 204]
[22 203]
[23 202]
[24 201]
[27 199]
[28 198]
[29 197]
[30 196]
[31 195]
[32 194]
[33 193]
[34 188]
[35 187]
[36 186]
[37 184]
[39 182]
[40 181]
[43 178]
[45 177]
[46 176]
[47 175]
[48 174]
[49 173]
[51 170]
[53 168]
[54 167]
[55 166]
[57 163]
[58 162]
[59 161]
[60 160]
[62 159]
[63 158]
[64 157]
[65 156]
[66 155]
[70 154]
[71 153]
[73 150]
[74 149]
[75 148]
[76 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
