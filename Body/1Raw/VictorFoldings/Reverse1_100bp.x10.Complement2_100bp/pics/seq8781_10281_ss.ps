%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[119.20113373 469.40652466]
[112.94042206 483.23287964]
[102.10509491 493.86114502]
[88.16053772 499.85394287]
[72.99263000 500.40081787]
[58.65271378 495.42776489]
[47.08013916 485.60736084]
[39.84001160 472.26776123]
[37.91148758 457.21304321]
[41.55539322 442.47918701]
[50.27891159 430.05883789]
[62.90226746 421.63177490]
[77.71824646 418.33767700]
[79.94336700 403.50363159]
[82.16848755 388.66958618]
[84.39360046 373.83554077]
[86.61872101 359.00149536]
[88.84383392 344.16748047]
[91.06895447 329.33343506]
[93.29406738 314.49938965]
[95.07653809 299.60565186]
[92.54232025 292.66308594]
[96.54753876 284.45355225]
[98.10805511 269.53497314]
[99.66857910 254.61634827]
[93.29734802 241.15319824]
[102.42835999 228.23286438]
[103.87777710 213.30305481]
[105.21601105 198.36286926]
[106.55424500 183.42268372]
[105.77292633 168.44303894]
[102.88764954 153.72314453]
[100.00238037 139.00326538]
[97.11711121 124.28337097]
[94.23183441 109.56347656]
[91.23706055 94.86547089]
[88.13294983 80.19017029]
[85.02883911 65.51486969]
[81.92472839 50.83956528]
[78.82061768 36.16426086]
[75.71650696 21.48896027]
[65.35168457 13.81216621]
[63.06838226 1.52516854]
[69.55442047 -8.68550587]
[66.66915131 -23.40539742]
[62.69705200 -37.86992264]
[57.66013718 -51.99895096]
[52.62321854 -66.12798309]
[47.58630371 -80.25701141]
[41.75693512 -87.28952789]
[42.58128357 -94.63406372]
[37.75528717 -108.83651733]
[32.92928696 -123.03897858]
[28.10329056 -137.24142456]
[23.27729225 -151.44389343]
[8.16329956 -151.28688049]
[-6.23971987 -155.80300903]
[-18.52499771 -164.53802490]
[-27.49669075 -176.62619019]
[-32.28627777 -190.87619019]
[-32.43663025 -205.88845825]
[-27.94560242 -220.19268799]
[-19.26502419 -232.39176941]
[-7.25526190 -241.29830933]
[-12.08125973 -255.50076294]
[-23.84714317 -266.07785034]
[-20.61601830 -280.61776733]
[-25.44201660 -294.82022095]
[-30.26801300 -309.02267456]
[-35.51473236 -323.07513428]
[-41.17751694 -336.96517944]
[-46.84030533 -350.85519409]
[-52.50309372 -364.74520874]
[-67.13811493 -361.31555176]
[-82.12947845 -360.21765137]
[-97.10801697 -361.47857666]
[-111.70486450 -365.06723022]
[-125.56056213 -370.89526367]
[-138.33390808 -378.81918335]
[-149.71032715 -388.64379883]
[-159.40968323 -400.12722778]
[-167.19311523 -412.98666382]
[-172.86894226 -426.90539551]
[-176.29740906 -441.54071045]
[-177.39407349 -456.53216553]
[-176.13192749 -471.51058960]
[-172.54206848 -486.10714722]
[-166.71287537 -499.96237183]
[-158.78791809 -512.73504639]
[-148.96234131 -524.11065674]
[-137.47811890 -533.80908203]
[-124.61805725 -541.59143066]
[-110.69884491 -547.26611328]
[-96.06325531 -550.69335938]
[-81.07170868 -551.78881836]
[-66.09337616 -550.52545166]
[-51.49711990 -546.93432617]
[-37.64238358 -541.10400391]
[-24.87035370 -533.17797852]
[-13.49555111 -523.35150146]
[-3.79809022 -511.86648560]
[3.98321915 -499.00576782]
[9.65675545 -485.08609009]
[13.08280277 -470.45022583]
[14.17699146 -455.45858765]
[12.91237640 -440.48034668]
[9.32009888 -425.88439941]
[3.48862362 -412.03015137]
[-4.43844509 -399.25875854]
[-14.26589584 -387.88476562]
[-25.75171852 -378.18826294]
[-38.61306381 -370.40802002]
[-32.95027924 -356.51797485]
[-27.28749084 -342.62796021]
[-21.62470436 -328.73791504]
[-19.09617805 -327.52767944]
[-16.89469337 -325.24295044]
[-15.43191528 -322.00323486]
[-15.06866932 -318.07479858]
[-16.06555748 -313.84866333]
[-11.23956013 -299.64620972]
[-6.41356277 -285.44375610]
[5.00713348 -275.88253784]
[2.12119603 -260.32678223]
[6.94719362 -246.12431335]
[21.89698601 -246.37863159]
[36.21280670 -241.99372864]
[48.48897934 -233.38699341]
[57.51603699 -221.39103699]
[62.39987183 -207.17306519]
[62.65029526 -192.12139893]
[58.23020172 -177.70991516]
[49.56043625 -165.35363770]
[37.47974777 -156.26988220]
[42.30574799 -142.06742859]
[47.13174438 -127.86497498]
[51.95774078 -113.66251373]
[56.78374100 -99.46006012]
[61.71533203 -85.29392242]
[66.75225067 -71.16489410]
[71.78916168 -57.03586578]
[76.82608032 -42.90683746]
[81.09461975 -57.28667068]
[91.91296387 -67.67721558]
[106.45323181 -71.36240387]
[120.91462708 -67.37893677]
[131.51698303 -56.76808548]
[135.48886108 -42.30350113]
[131.79202271 -27.76619148]
[121.39281464 -16.95617104]
[107.00956726 -12.69915676]
[92.40202332 -16.10791969]
[81.38903809 -26.29067039]
[84.27431488 -11.57077885]
[96.50423431 1.01476586]
[90.39181519 18.38484955]
[93.49592590 33.06015396]
[96.60002899 47.73545456]
[99.70413971 62.41075516]
[102.80825043 77.08605957]
[105.91236115 91.76136017]
[110.52886963 98.36896515]
[108.95172882 106.67819977]
[111.83699799 121.39809418]
[114.72227478 136.11798096]
[117.60754395 150.83787537]
[120.49281311 165.55776978]
[124.71231842 151.16346741]
[132.93701172 138.61936951]
[144.45536804 129.01065063]
[158.27095032 123.16857910]
[173.18855286 121.59854126]
[187.91766357 124.43635559]
[201.18406677 131.43653870]
[211.84010315 141.99348450]
[218.96388245 155.19392395]
[221.93914795 169.89588928]
[220.50851440 184.82751465]
[214.79573059 198.69705200]
[205.29502869 210.30465698]
[192.82829285 218.64616394]
[178.47404480 222.99992371]
[163.47404480 222.98931885]
[149.12596130 218.61524963]
[136.67103577 210.25613403]
[127.18675232 198.63510132]
[121.49443054 184.76091003]
[120.15619659 199.70109558]
[118.81796265 214.64128113]
[121.16928101 223.46789551]
[117.34696198 229.79338074]
[123.60658264 244.32362366]
[114.58718872 256.17687988]
[113.02666473 271.09548950]
[111.46614075 286.01409912]
[110.01672363 300.94390869]
[111.98273468 304.81542969]
[112.55677032 308.71862793]
[111.89980316 312.21203613]
[110.29963684 314.95175171]
[108.12811279 316.72448730]
[105.90299988 331.55853271]
[103.67787933 346.39257812]
[101.45275879 361.22662354]
[99.22764587 376.06066895]
[97.00252533 390.89471436]
[94.77741241 405.72875977]
[92.55229187 420.56280518]
[105.74973297 428.05892944]
[115.34503174 439.81881714]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 208]
[14 207]
[15 206]
[16 205]
[17 204]
[18 203]
[19 202]
[20 201]
[21 196]
[23 195]
[24 194]
[25 193]
[27 191]
[28 189]
[29 188]
[30 187]
[31 167]
[32 166]
[33 165]
[34 164]
[35 163]
[36 161]
[37 160]
[38 159]
[39 158]
[40 157]
[41 156]
[44 154]
[45 153]
[46 142]
[47 141]
[48 140]
[49 139]
[51 138]
[52 137]
[53 136]
[54 135]
[55 134]
[64 125]
[65 124]
[67 122]
[68 121]
[69 120]
[70 115]
[71 114]
[72 113]
[73 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
