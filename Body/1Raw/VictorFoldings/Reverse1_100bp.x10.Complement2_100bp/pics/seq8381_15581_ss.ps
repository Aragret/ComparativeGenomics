%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[57.70805740 475.54217529]
[54.02116776 460.89349365]
[54.61200714 445.79953003]
[59.43268204 431.48388672]
[68.09239960 419.10705566]
[79.88915253 409.67239380]
[93.86663818 403.94467163]
[92.30611420 389.02606201]
[90.74559784 374.10748291]
[89.18507385 359.18887329]
[87.62454987 344.27026367]
[75.92823792 335.11975098]
[74.13312531 320.01239014]
[83.81032562 307.80627441]
[82.24980164 292.88766479]
[78.42749023 286.56216431]
[80.77880096 277.73556519]
[79.44056702 262.79537964]
[72.46858978 276.07662964]
[60.47634125 285.08694458]
[45.77933121 288.08660889]
[31.21532249 284.49636841]
[19.59639931 275.00952148]
[13.16599178 261.45776367]
[13.16571140 246.45776367]
[19.59561157 232.90577698]
[31.21418190 223.41847229]
[45.77805710 219.82771301]
[60.47517776 222.82681274]
[72.46776581 231.83668518]
[79.44056702 245.11891174]
[72.86959076 231.75210571]
[81.80722809 218.69725037]
[83.14546204 203.75706482]
[84.48369598 188.81687927]
[85.82192993 173.87669373]
[76.10414886 162.64724731]
[77.24848175 147.47671509]
[89.09284210 137.35995483]
[90.43107605 122.41976929]
[91.76931000 107.47958374]
[79.59427643 116.24135590]
[64.76816559 113.96401978]
[55.78403091 101.95214081]
[57.78839874 87.08666229]
[69.63307953 77.88320160]
[84.53289795 79.61392975]
[93.95228577 91.28649139]
[96.61808777 76.52527618]
[99.28388214 61.76405716]
[101.94967651 47.00284195]
[104.61547089 32.24162292]
[107.28126526 17.48040771]
[109.94705963 2.71918988]
[112.61285400 -12.04202747]
[114.28440094 -26.94860077]
[114.95418549 -41.93363953]
[115.62397003 -56.91867828]
[116.29375458 -71.90371704]
[109.18038177 -86.03561401]
[117.47826385 -98.40470123]
[110.36489105 -112.53659821]
[118.66278076 -124.90568542]
[119.33256531 -139.89073181]
[120.00234985 -154.87576294]
[120.67213440 -169.86080933]
[121.34191895 -184.84584045]
[120.56060028 -199.82548523]
[118.33547974 -214.65953064]
[105.90995789 -224.05335999]
[103.86469269 -239.12889099]
[112.89685822 -250.91683960]
[110.67173767 -265.75088501]
[108.44662476 -280.58493042]
[103.58858490 -266.39340210]
[94.81197357 -254.22904968]
[82.87605286 -245.14424133]
[68.81339264 -239.92489624]
[53.84056091 -239.02252197]
[39.25285339 -242.51519775]
[26.31225586 -250.10076904]
[16.13825417 -261.12301636]
[9.61100578 -274.62838745]
[7.29518175 -289.44854736]
[9.39112377 -304.30139160]
[15.71751213 -317.90200806]
[25.72705078 -329.07379150]
[38.55381393 -336.85031128]
[53.08816147 -340.55877686]
[68.07272339 -339.87841797]
[82.21118164 -334.86801147]
[94.28043365 -325.96109009]
[103.23635101 -313.92816162]
[108.30347443 -299.81362915]
[110.30748749 -314.67916870]
[112.31150055 -329.54470825]
[114.31551361 -344.41021729]
[100.24504852 -349.80639648]
[87.79863739 -358.30249023]
[77.64749908 -369.44030762]
[70.33908081 -382.61923218]
[66.26750183 -397.12850952]
[65.65235138 -412.18566895]
[68.52679443 -426.97872925]
[74.73581696 -440.70986938]
[83.94458008 -452.63864136]
[95.65645599 -462.12170410]
[109.23984528 -468.64767456]
[123.96221924 -471.86459351]
[139.02960205 -471.59899902]
[153.62944031 -467.86517334]
[166.97439575 -460.86450195]
[178.34475708 -450.97454834]
[187.12736511 -438.72863770]
[192.84857178 -424.78717041]
[195.19984436 -409.90200806]
[194.05438232 -394.87585449]
[189.47395325 -380.51910400]
[181.70558167 -367.60598755]
[171.16819763 -356.83285522]
[158.43006897 -348.78070068]
[144.17816162 -343.88378906]
[129.18104553 -342.40621948]
[127.17702484 -327.54067993]
[125.17301178 -312.67514038]
[123.16899872 -297.80963135]
[123.28067017 -282.81002808]
[125.50578308 -267.97598267]
[127.73090363 -253.14195251]
[139.82414246 -244.52284241]
[142.29203796 -229.51069641]
[133.16952515 -216.88464355]
[135.39463806 -202.05059814]
[141.26423645 -215.85450745]
[152.18522644 -226.13710022]
[166.31726074 -231.16557312]
[181.27883911 -230.09255981]
[194.54866028 -223.09884644]
[203.89053345 -211.36303711]
[207.73017883 -196.86279297]
[205.42056274 -182.04167175]
[197.35089111 -169.39727783]
[184.88105774 -161.06044006]
[170.11241150 -158.43605042]
[155.53376770 -161.96635437]
[143.60186768 -171.05644226]
[136.32696533 -184.17605591]
[135.65716553 -169.19102478]
[134.98738098 -154.20597839]
[134.31759644 -139.22094727]
[133.64781189 -124.23590088]
[140.80909729 -111.17583466]
[132.46330261 -97.73491669]
[139.62458801 -84.67485046]
[131.27879333 -71.23393250]
[130.60900879 -56.24889374]
[129.93922424 -41.26385498]
[129.26943970 -26.27881622]
[139.10144043 -37.60717010]
[153.46694946 -41.92367554]
[167.91465759 -37.89080811]
[177.96775818 -26.75820351]
[180.51123047 -11.97541523]
[174.75691223 1.87694609]
[162.48786926 10.50657654]
[147.50578308 11.23949146]
[134.45303345 3.84858871]
[127.37407684 -9.37623215]
[124.70828247 5.38498545]
[122.04248047 20.14620209]
[119.37668610 34.90742111]
[116.71089172 49.66863632]
[114.04509735 64.42985535]
[111.37930298 79.19107056]
[108.71350861 93.95228577]
[106.70949554 108.81781769]
[105.37126160 123.75800323]
[104.03302765 138.69818115]
[113.89088440 150.75888062]
[112.32089996 165.89129639]
[100.76211548 175.21492004]
[99.42388153 190.15510559]
[98.08564758 205.09529114]
[96.74741364 220.03547668]
[103.22267151 234.47091675]
[94.38075256 246.45713806]
[94.38075256 261.45715332]
[95.71898651 276.39733887]
[97.16840363 291.32714844]
[98.72892761 306.24572754]
[110.72259521 316.18502808]
[112.09266663 331.33685303]
[102.54315186 342.70974731]
[104.10367584 357.62832642]
[105.66419983 372.54693604]
[107.22472382 387.46554565]
[108.78524780 402.38415527]
[123.64546204 405.09536743]
[137.13928223 411.88458252]
[148.17280579 422.20144653]
[155.85162354 435.20962524]
[159.55323792 449.85458374]
[158.97755432 464.94912720]
[154.17126465 479.26962280]
[145.52398682 491.65515137]
[133.73670959 501.10168457]
[119.76499176 506.84341431]
[104.74143982 508.41491699]
[89.88395691 505.68878174]
[76.39696503 498.88598633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 197]
[8 196]
[9 195]
[10 194]
[11 193]
[14 190]
[15 189]
[17 188]
[18 187]
[31 186]
[33 184]
[34 183]
[35 182]
[36 181]
[39 178]
[40 177]
[41 176]
[48 175]
[49 174]
[50 173]
[51 172]
[52 171]
[53 170]
[54 169]
[55 168]
[56 158]
[57 157]
[58 156]
[59 155]
[61 153]
[63 151]
[64 150]
[65 149]
[66 148]
[67 147]
[68 133]
[69 132]
[72 129]
[73 128]
[74 127]
[94 126]
[95 125]
[96 124]
[97 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
