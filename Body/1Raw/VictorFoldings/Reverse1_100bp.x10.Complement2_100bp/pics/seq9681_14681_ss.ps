%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[153.09640503 182.15354919]
[156.33450317 167.50015259]
[160.64595032 153.12591553]
[166.00718689 139.10934448]
[151.19776917 140.70007324]
[141.99772644 127.82881165]
[128.42150879 121.45020294]
[114.84530640 115.07160187]
[101.26909637 108.69299316]
[98.32469940 109.48040771]
[95.02871704 109.21387482]
[91.77096558 107.76111603]
[88.98466492 105.13570404]
[87.09206390 101.50926971]
[73.91958618 94.33390808]
[60.74711227 87.15853882]
[47.57463837 79.98316956]
[56.21656036 92.24356079]
[62.16007233 106.01580811]
[65.15245056 120.71429443]
[65.06646729 135.71405029]
[61.90576172 150.37727356]
[55.80474472 164.08045959]
[47.02282333 176.24096680]
[35.93341827 186.34172058]
[23.00805092 193.95321655]
[8.79631519 198.75181580]
[-6.09749794 200.53347778]
[-21.04009628 199.22245789]
[-35.39611053 194.87449646]
[-48.55511856 187.67446899]
[-59.95759583 177.92851257]
[-69.11869812 166.05104065]
[-75.64888763 152.54708862]
[-79.27050781 137.99085999]
[-79.82955170 123.00128174]
[-77.30226135 108.21572113]
[-71.79609680 94.26287079]
[-63.54517365 81.73600769]
[-52.90033340 71.16778564]
[-40.31419754 63.00756454]
[-26.32193565 57.60232544]
[-11.51850510 55.18190002]
[3.46664381 55.84920883]
[17.99633598 59.57587433]
[31.45290947 66.20353699]
[22.31410599 54.30889893]
[13.17530441 42.41426849]
[4.03650188 30.51963425]
[-5.10230064 18.62500191]
[-17.79830551 26.63350296]
[-31.17909050 33.43638992]
[-45.13049316 38.97561646]
[-59.53347778 43.20392990]
[-74.26516724 46.08525085]
[-89.19986725 47.59499741]
[-104.21015930 47.72028732]
[-119.16798401 46.46005630]
[-133.94572449 43.82505035]
[-148.41728210 39.83775330]
[-162.45919800 34.53218460]
[-175.95167542 27.95361137]
[-188.77960205 20.15815926]
[-200.83352661 11.21233654]
[-212.01058960 1.19247031]
[-222.21545410 -9.81595325]
[-231.36105347 -21.71901131]
[-239.36933899 -34.41514969]
[-246.17199707 -47.79604721]
[-251.71099854 -61.74754333]
[-255.93907166 -76.15059662]
[-258.82012939 -90.88233185]
[-260.32965088 -105.81706238]
[-260.45468140 -120.82735443]
[-259.19421387 -135.78515625]
[-256.55895996 -150.56285095]
[-252.57141113 -165.03434753]
[-247.26560974 -179.07617188]
[-240.68681335 -192.56854248]
[-232.89114380 -205.39634705]
[-223.94511414 -217.45010376]
[-213.92506409 -228.62701416]
[-202.91647339 -238.83169556]
[-191.01325989 -247.97708130]
[-178.31698608 -255.98516846]
[-164.93597412 -262.78759766]
[-150.98439026 -268.32635498]
[-136.58126831 -272.55419922]
[-121.84948730 -275.43502808]
[-106.91473389 -276.94427490]
[-91.90443420 -277.06906128]
[-76.94665527 -275.80834961]
[-62.16900635 -273.17285156]
[-47.69757843 -269.18505859]
[-33.65583420 -263.87902832]
[-20.16357231 -257.29998779]
[-7.33591080 -249.50411987]
[4.71770859 -240.55789185]
[15.89444542 -230.53765869]
[26.09894371 -219.52890015]
[35.24413681 -207.62553406]
[43.25200653 -194.92912292]
[50.05422211 -181.54800415]
[55.59275436 -167.59632874]
[59.82034683 -153.19313049]
[62.70093155 -138.46130371]
[64.20993042 -123.52651978]
[64.33447266 -108.51622009]
[63.07349014 -93.55845642]
[60.43774796 -78.78086090]
[56.44972610 -64.30949402]
[51.14345551 -50.26783752]
[44.56420898 -36.77568817]
[36.76811600 -23.94815445]
[27.82169151 -11.89468479]
[17.80126572 -0.71811461]
[6.79233217 9.48619938]
[15.93113422 21.38083267]
[25.06993675 33.27546692]
[34.20874023 45.17009735]
[43.34754181 57.06473160]
[54.75000381 66.81069946]
[67.92247772 73.98606110]
[81.09495544 81.16143036]
[94.26743317 88.33679199]
[107.64770508 95.11679077]
[121.22391510 101.49539185]
[134.80012512 107.87400055]
[148.37632751 114.25260162]
[164.15679932 113.11811066]
[172.38580322 125.53314209]
[179.75279236 112.45894623]
[188.06524658 99.96453094]
[197.27774048 88.11813354]
[207.33996582 76.98445129]
[218.19696045 66.62430573]
[229.78944397 57.09426880]
[242.05409241 48.44639587]
[254.92391968 40.72792053]
[268.32864380 33.98099899]
[282.19500732 28.24247932]
[296.44732666 23.54370308]
[311.00775146 19.91033363]
[325.79675293 17.36221504]
[340.73355103 15.91326714]
[355.73654175 15.57140160]
[370.72384644 16.33848572]
[385.61355591 18.21033096]
[400.32437134 21.17671204]
[414.77590942 25.22142982]
[428.88928223 30.32238960]
[442.58740234 36.45173645]
[455.79544067 43.57598877]
[468.44125366 51.65623856]
[480.45581055 60.64835358]
[491.77343750 70.50321960]
[502.33233643 81.16701508]
[512.07489014 92.58149719]
[520.94781494 104.68431854]
[528.90264893 117.40938568]
[535.89605713 130.68717957]
[541.88970947 144.44520569]
[546.85095215 158.60832214]
[550.75262451 173.09913635]
[553.57348633 187.83854675]
[555.29803467 202.74603271]
[555.91699219 217.74017334]
[555.42681885 232.73905945]
[553.83032227 247.66081238]
[551.13616943 262.42388916]
[547.35906982 276.94769287]
[542.51965332 291.15289307]
[536.64434814 304.96188354]
[529.76531982 318.29925537]
[521.91998291 331.09216309]
[513.15130615 343.27072144]
[503.50720215 354.76846313]
[493.04025269 365.52252197]
[481.80764771 375.47424316]
[469.87078857 384.56918335]
[457.29483032 392.75775146]
[444.14846802 399.99517822]
[430.50347900 406.24191284]
[416.43444824 411.46389771]
[402.01815796 415.63256836]
[387.33334351 418.72518921]
[372.46026611 420.72482300]
[357.48013306 421.62057495]
[342.47473145 421.40756226]
[327.52603149 420.08694458]
[312.71572876 417.66592407]
[298.12463379 414.15774536]
[283.83248901 409.58154297]
[269.91732788 403.96231079]
[256.45516968 397.33074951]
[243.51953125 389.72308350]
[231.18107605 381.18084717]
[219.50717163 371.75073242]
[208.56159973 361.48419189]
[198.40412903 350.43734741]
[189.09024048 338.67050171]
[180.67080688 326.24792480]
[173.19180298 313.23748779]
[166.69407654 299.71020508]
[161.21313477 285.74002075]
[156.77888489 271.40319824]
[153.41557312 256.77801514]
[151.14155579 241.94441223]
[149.96925354 226.98336792]
[149.90507507 211.97659302]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 131]
[6 129]
[7 128]
[8 127]
[9 126]
[14 125]
[15 124]
[16 123]
[17 122]
[46 121]
[47 120]
[48 119]
[49 118]
[50 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
