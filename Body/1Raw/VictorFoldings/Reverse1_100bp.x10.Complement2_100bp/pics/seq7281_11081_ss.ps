%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[111.57543182 761.48229980]
[97.35442352 756.69189453]
[83.50222778 750.92120361]
[70.08631897 744.19824219]
[57.17206192 736.55578613]
[44.82237625 728.03112793]
[33.09742737 718.66577148]
[22.05433846 708.50531006]
[11.74691105 697.59924316]
[2.22536278 686.00079346]
[-6.46391821 673.76635742]
[-14.27859879 660.95562744]
[-21.18060493 647.63092041]
[-27.13631058 633.85723877]
[-32.11670303 619.70166016]
[-36.09751511 605.23315430]
[-39.05934906 590.52221680]
[-40.98778152 575.64044189]
[-41.87341690 560.66046143]
[-41.71193695 545.65515137]
[-40.50412750 530.69769287]
[-38.25587463 515.86090088]
[-34.97813416 501.21710205]
[-30.68687439 486.83761597]
[-25.40299988 472.79251099]
[-19.15225220 459.15017700]
[-11.96508884 445.97714233]
[-3.87652230 433.33752441]
[5.07403946 421.29293823]
[14.84298992 409.90203857]
[25.38273621 399.22033691]
[36.64192581 389.29989624]
[48.56570816 380.18902588]
[61.09599304 371.93209839]
[74.17173004 364.56936646]
[87.72920990 358.13668823]
[101.70239258 352.66540527]
[116.02319336 348.18215942]
[130.62185669 344.70883179]
[120.91292572 333.41342163]
[126.29659271 318.53637695]
[123.85086060 303.73712158]
[121.40513611 288.93783569]
[118.95940399 274.13858032]
[116.51367950 259.33929443]
[114.06795502 244.54002380]
[111.62222290 229.74075317]
[109.17649841 214.94148254]
[106.73077393 200.14221191]
[94.88098907 187.19812012]
[101.50787354 170.01773071]
[98.84207916 155.25650024]
[88.27523804 165.90272522]
[73.34761810 164.43096924]
[65.06329346 151.92617798]
[69.52916718 137.60639954]
[83.45316315 132.02764893]
[96.57006836 139.30104065]
[87.55067444 127.44777679]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[89.71058655 73.72438049]
[88.15006256 58.80577469]
[86.58953857 43.88716888]
[82.58432007 35.67765808]
[85.11853790 28.73507118]
[83.78030396 13.79488564]
[82.44207001 -1.14529920]
[81.10383606 -16.08548355]
[70.67976379 -5.29944420]
[55.68493271 -4.90563345]
[44.70906830 -15.12964439]
[44.03964233 -30.11469841]
[54.06013107 -41.27667618]
[69.03034973 -42.22149277]
[80.37423706 -32.40875626]
[80.37423706 -47.40875626]
[80.37423706 -62.40875626]
[66.01333618 -67.12276459]
[53.82910919 -76.03271484]
[45.00737762 -88.25586700]
[40.40186691 -102.58779907]
[40.45163727 -117.62110138]
[45.13922882 -131.88354492]
[53.99361038 -143.98231506]
[66.13749695 -152.73994446]
[80.37423706 -157.30899048]
[80.37423706 -172.30899048]
[80.37423706 -187.30899048]
[80.37423706 -202.30899048]
[80.37423706 -217.30899048]
[78.07066345 -220.98968506]
[77.15068817 -224.82612610]
[77.49337769 -228.36419678]
[78.84272766 -231.23574829]
[80.84743500 -233.19515991]
[81.74025726 -248.16856384]
[82.63307190 -263.14196777]
[68.71286011 -269.14227295]
[57.68650436 -279.54397583]
[50.88547897 -293.09100342]
[49.13104248 -308.14749146]
[52.63505173 -322.89529419]
[60.97438431 -335.55352783]
[73.14202118 -344.59368896]
[87.66866302 -348.92410278]
[102.80014801 -348.02188110]
[116.70926666 -341.99591064]
[127.71643829 -331.57391357]
[134.49249268 -318.01440430]
[136.21917725 -302.95471191]
[132.68798828 -288.21337891]
[124.32534790 -275.57052612]
[112.14107513 -266.55279541]
[97.60647583 -262.24914551]
[96.71366119 -247.27575684]
[95.82084656 -232.30235291]
[95.37423706 -217.30899048]
[95.37423706 -202.30899048]
[95.37423706 -187.30899048]
[95.37423706 -172.30899048]
[95.37423706 -157.30899048]
[109.61097717 -152.73994446]
[121.75485992 -143.98231506]
[130.60925293 -131.88354492]
[135.29684448 -117.62110138]
[135.34660339 -102.58779907]
[130.74110413 -88.25586700]
[121.91936493 -76.03271484]
[109.73513794 -67.12276459]
[95.37423706 -62.40875626]
[95.37423706 -47.40875626]
[95.37423706 -32.40875626]
[96.04402161 -17.42371941]
[97.38225555 -2.48353338]
[98.72048950 12.45665169]
[100.05872345 27.39683723]
[101.50814056 42.32664490]
[103.06866455 57.24525070]
[104.62918854 72.16385651]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[117.85990906 124.27735901]
[111.48867035 137.74050903]
[113.60329437 152.59071350]
[116.26908875 167.35192871]
[126.40075684 175.33392334]
[128.31721497 187.68345642]
[121.53004456 197.69648743]
[123.97576904 212.49575806]
[126.42149353 227.29502869]
[128.86721802 242.09429932]
[131.31295776 256.89355469]
[133.75868225 271.69284058]
[136.20440674 286.49209595]
[138.65013123 301.29138184]
[141.09585571 316.09066772]
[150.97972107 328.44461060]
[145.42112732 342.26312256]
[160.36105347 340.85488892]
[175.36282349 340.49227905]
[190.35336304 341.17700195]
[205.25959778 342.90579224]
[220.00894165 345.67013550]
[234.52951050 349.45663452]
[248.75059509 354.24682617]
[262.60287476 360.01733398]
[276.01889038 366.74011230]
[288.93322754 374.38235474]
[301.28305054 382.90686035]
[313.00814819 392.27206421]
[324.05136108 402.43234253]
[334.35894775 413.33825684]
[343.88067627 424.93658447]
[352.57012939 437.17089844]
[360.38497925 449.98153687]
[367.28717041 463.30612183]
[373.24307251 477.07971191]
[378.22369385 491.23522949]
[382.20471191 505.70367432]
[385.16674805 520.41461182]
[387.09539795 535.29626465]
[387.98123169 550.27630615]
[387.81997681 565.28155518]
[386.61239624 580.23907471]
[384.36434937 595.07586670]
[381.08682251 609.71972656]
[376.79574585 624.09930420]
[371.51208496 638.14447021]
[365.26153564 651.78686523]
[358.07455444 664.96002197]
[349.98617554 677.59979248]
[341.03576660 689.64447021]
[331.26699829 701.03552246]
[320.72741699 711.71734619]
[309.46835327 721.63800049]
[297.54470825 730.74902344]
[285.01452637 739.00610352]
[271.93890381 746.36901855]
[258.38150024 752.80194092]
[244.40841675 758.27337646]
[230.08767700 762.75683594]
[215.48907471 766.23040771]
[200.68373108 768.67712402]
[185.74377441 770.08508301]
[170.74198914 770.44750977]
[155.75148010 769.76257324]
[140.84526062 768.03356934]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 161]
[41 159]
[42 158]
[43 157]
[44 156]
[45 155]
[46 154]
[47 153]
[48 152]
[49 151]
[51 148]
[52 147]
[58 146]
[60 144]
[62 142]
[63 141]
[64 140]
[65 139]
[67 138]
[68 137]
[69 136]
[70 135]
[77 134]
[78 133]
[79 132]
[88 123]
[89 122]
[90 121]
[91 120]
[92 119]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
