%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxGGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAU\
) } def
/len { sequence length } bind def

/coor [
[48.36112595 576.19293213]
[42.57204437 590.06866455]
[34.57791901 602.80224609]
[24.59683228 614.04626465]
[12.90107632 623.49395752]
[-0.19028234 630.88763428]
[-14.32009983 636.02551270]
[-29.10290527 638.76751709]
[-44.13541412 639.03881836]
[-59.00752258 636.83197021]
[-73.31351471 632.20721436]
[-86.66311646 625.29071045]
[-98.69213104 616.27111816]
[-109.07240295 605.39453125]
[-117.52074432 592.95770264]
[-123.80669403 579.29986572]
[-127.75875092 564.79357910]
[-129.26910400 549.83471680]
[-128.29655457 534.83123779]
[-124.86763763 520.19250488]
[-119.07588959 506.31787109]
[-111.07930756 493.58584595]
[-101.09605408 482.34375000]
[-89.39847565 472.89831543]
[-76.30569458 465.50717163]
[-62.17488861 460.37197876]
[-47.39155579 457.63284302]
[-32.35899734 457.36444092]
[-17.48731041 459.57415771]
[-12.87330151 445.30142212]
[-8.25929260 431.02868652]
[-3.64528298 416.75598145]
[0.96872622 402.48324585]
[5.58273554 388.21051025]
[10.19674492 373.93777466]
[6.74949980 359.44757080]
[18.35660362 348.69650269]
[22.97061157 334.42376709]
[27.58462143 320.15103149]
[32.19863129 305.87829590]
[28.75138664 291.38809204]
[40.35848999 280.63702393]
[44.97249985 266.36428833]
[41.52525330 251.87408447]
[53.13235474 241.12300110]
[57.42647934 226.75079346]
[61.39857483 212.28627014]
[65.37067413 197.82174683]
[69.34276581 183.35722351]
[73.31486511 168.89270020]
[77.28696442 154.42817688]
[69.71956635 141.65045166]
[73.54178619 126.92478180]
[86.99554443 119.07404327]
[90.96763611 104.60951996]
[89.89570618 96.62055969]
[95.10804749 89.96005249]
[99.29505920 75.55626678]
[103.48207092 61.15248489]
[107.66908264 46.74870300]
[111.85609436 32.34492111]
[107.05252838 14.56832790]
[120.18464661 2.92726207]
[124.15673828 -11.53726196]
[128.12884521 -26.00178528]
[132.10093689 -40.46630859]
[120.60485840 -48.87411880]
[112.68580627 -60.67623138]
[109.27809143 -74.44360352]
[110.77126312 -88.51760101]
[116.96568298 -101.20977783]
[127.09894562 -111.00449371]
[139.93966675 -116.73985291]
[153.93708801 -117.74554443]
[158.12409973 -132.14932251]
[162.31111145 -146.55311584]
[156.79438782 -158.21194458]
[160.57829285 -170.12269592]
[171.11451721 -176.06530762]
[175.51551819 -190.40515137]
[172.16770935 -205.86810303]
[183.29866028 -215.76512146]
[187.69966125 -230.10496521]
[192.10066223 -244.44480896]
[196.50166321 -258.78466797]
[193.15383911 -274.24761963]
[204.28480530 -284.14462280]
[208.68580627 -298.48446655]
[213.08680725 -312.82431030]
[217.48779297 -327.16418457]
[221.67480469 -341.56796265]
[225.64691162 -356.03247070]
[229.61900330 -370.49700928]
[233.59109497 -384.96151733]
[237.56320190 -399.42605591]
[223.86843872 -405.62283325]
[211.31175232 -413.88577271]
[200.20236206 -424.01138306]
[190.81381226 -435.75027466]
[183.37734985 -448.81341553]
[178.07606506 -462.87905884]
[175.04054260 -477.60089111]
[174.34550476 -492.61633301]
[176.00807190 -507.55563354]
[179.98731995 -522.05084229]
[186.18524170 -535.74511719]
[194.44921875 -548.30108643]
[204.57572937 -559.40966797]
[216.31539917 -568.79724121]
[229.37915039 -576.23266602]
[243.44525146 -581.53277588]
[258.16732788 -584.56707764]
[273.18283081 -585.26086426]
[288.12197876 -583.59704590]
[302.61688232 -579.61663818]
[316.31060791 -573.41754150]
[328.86593628 -565.15258789]
[339.97366333 -555.02514648]
[349.36026001 -543.28466797]
[356.79458618 -530.22033691]
[362.09353638 -516.15380859]
[365.12664795 -501.43145752]
[365.81921387 -486.41589355]
[364.15417480 -471.47689819]
[360.17251587 -456.98229980]
[353.97235107 -443.28909302]
[345.70629883 -430.73443604]
[335.57794189 -419.62756348]
[323.83673096 -410.24191284]
[310.77175903 -402.80868530]
[296.70477295 -397.51089478]
[281.98220825 -394.47900391]
[266.96658325 -393.78768921]
[252.02772522 -395.45394897]
[248.05561829 -380.98944092]
[244.08352661 -366.52490234]
[240.11143494 -352.06039429]
[236.13932800 -337.59585571]
[237.68107605 -333.07568359]
[236.39964294 -327.53897095]
[231.82765198 -322.76318359]
[227.42665100 -308.42333984]
[223.02565002 -294.08346558]
[218.62464905 -279.74362183]
[222.28724670 -265.30636597]
[210.84150696 -254.38366699]
[206.44050598 -240.04382324]
[202.03950500 -225.70396423]
[197.63850403 -211.36412048]
[201.30111694 -196.92686462]
[189.85536194 -186.00415039]
[185.45436096 -171.66430664]
[190.29956055 -154.79745483]
[176.71490479 -142.36610413]
[172.52789307 -127.96231842]
[168.34088135 -113.55853271]
[180.85774231 -103.83979034]
[188.70578003 -90.02829742]
[190.65753174 -74.22431946]
[186.38476562 -58.84422302]
[176.51327515 -46.25099945]
[162.53134155 -38.39122391]
[146.56546021 -36.49421310]
[142.59336853 -22.02968979]
[138.62126160 -7.56516552]
[134.64916992 6.89935827]
[140.35780334 17.56416130]
[137.16696167 29.64730263]
[126.25987244 36.53193283]
[122.07286072 50.93571472]
[117.88584900 65.33950043]
[113.69883728 79.74327850]
[109.51183319 94.14706421]
[105.43215942 108.58161163]
[101.46006775 123.04613495]
[109.01757812 136.66677856]
[104.78325653 151.27928162]
[91.75148773 158.40026855]
[87.77938843 172.86479187]
[83.80728912 187.32931519]
[79.83519745 201.79383850]
[75.86309814 216.25836182]
[71.89100647 230.72288513]
[73.21240997 235.77273560]
[72.53262329 240.36524963]
[70.36096191 243.81474304]
[67.40509033 245.73701477]
[70.52230835 261.24807739]
[59.24523163 270.97830200]
[54.63122177 285.25103760]
[57.74844360 300.76211548]
[46.47136307 310.49230957]
[41.85735321 324.76504517]
[37.24334717 339.03778076]
[32.62933731 353.31048584]
[35.74655533 368.82156372]
[24.46947861 378.55178833]
[19.85546875 392.82452393]
[15.24145985 407.09722900]
[10.62744999 421.36996460]
[6.01344109 435.64270020]
[1.39943171 449.91543579]
[-3.21457744 464.18817139]
[10.13635254 471.10211182]
[22.16710472 480.11935425]
[32.54947281 490.99392700]
[41.00021362 503.42916870]
[47.28879166 517.08581543]
[51.24364471 531.59130859]
[52.75688553 546.54986572]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 203]
[30 202]
[31 201]
[32 200]
[33 199]
[34 198]
[35 197]
[37 195]
[38 194]
[39 193]
[40 192]
[42 190]
[43 189]
[45 187]
[46 183]
[47 182]
[48 181]
[49 180]
[50 179]
[51 178]
[54 175]
[55 174]
[57 173]
[58 172]
[59 171]
[60 170]
[61 169]
[63 166]
[64 165]
[65 164]
[66 163]
[74 156]
[75 155]
[76 154]
[79 152]
[80 151]
[82 149]
[83 148]
[84 147]
[85 146]
[87 144]
[88 143]
[89 142]
[90 141]
[91 138]
[92 137]
[93 136]
[94 135]
[95 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
