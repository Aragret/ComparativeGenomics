%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[94.17109680 696.26599121]
[95.13005829 711.49896240]
[89.37676239 725.63623047]
[78.05352783 735.87084961]
[63.40859985 740.17071533]
[48.34973526 737.68206787]
[35.86687851 728.89910889]
[28.43851280 715.56561279]
[27.53954697 700.32897949]
[33.34846878 686.21447754]
[44.71191406 676.02453613]
[59.37366486 671.78234863]
[61.81938934 656.98309326]
[64.26512146 642.18383789]
[66.71084595 627.38458252]
[61.15224838 613.56604004]
[71.03610229 601.21209717]
[73.15072632 586.36187744]
[66.98064423 572.80535889]
[76.30301666 560.02239990]
[78.08547974 545.12872314]
[79.86794281 530.23498535]
[81.65041351 515.34124756]
[83.43287659 500.44754028]
[85.21533966 485.55383301]
[86.55357361 470.61364746]
[87.44639587 455.64022827]
[88.33921051 440.66683960]
[89.00899506 425.68179321]
[89.45559692 410.68844604]
[89.90220642 395.69509888]
[90.34880829 380.70175171]
[75.64847565 375.06353760]
[63.74720764 364.71487427]
[56.09601974 350.89312744]
[53.63607025 335.26046753]
[56.68293381 319.70419312]
[64.88626099 306.10870361]
[77.26995850 296.12722778]
[92.34827423 290.98095703]
[92.57160187 275.98263550]
[92.79492950 260.98428345]
[85.24797821 248.14323425]
[93.18988037 234.45977783]
[93.41320801 219.46144104]
[82.88713837 208.98588562]
[82.89996338 193.77226257]
[93.95906830 182.80256653]
[94.18239594 167.80422974]
[94.40572357 152.80589294]
[94.18239594 137.80755615]
[93.51261139 122.82251740]
[92.84282684 107.83747864]
[91.28230286 92.91887665]
[88.83657074 78.11960602]
[78.95271301 65.76565552]
[84.51131439 51.94714737]
[82.06558228 37.14787674]
[70.05440521 23.19032860]
[76.86958313 7.01873779]
[66.80288696 -5.18668127]
[72.15512848 -19.08642006]
[69.48933411 -33.84763718]
[59.35766983 -41.82962799]
[57.44121552 -54.17916107]
[64.22838593 -64.19219208]
[61.78265762 -78.99146271]
[59.33692932 -93.79073334]
[56.89120483 -108.59000397]
[54.44547653 -123.38927460]
[41.88147354 -132.59707642]
[39.61198044 -147.64048767]
[48.46763992 -159.56159973]
[46.02191162 -174.36087036]
[43.57618332 -189.16014099]
[34.91241455 -176.91517639]
[20.43713760 -172.98245239]
[6.76825094 -179.15995789]
[0.15498871 -192.62341309]
[3.62084436 -207.21751404]
[15.58127499 -216.27003479]
[30.56813431 -215.64228821]
[41.73050690 -205.61962891]
[40.83769226 -220.59303284]
[29.29979897 -231.05795288]
[28.60766029 -246.25584412]
[38.65547562 -257.19097900]
[37.76266098 -272.16436768]
[36.86984253 -287.13778687]
[33.23519516 -295.51794434]
[36.07688904 -302.34045410]
[27.73109627 -315.78137207]
[34.89237595 -328.84143066]
[34.22259140 -343.82647705]
[33.55280685 -358.81152344]
[32.88302231 -373.79653931]
[32.21323395 -388.78158569]
[18.02285004 -394.30905151]
[7.31212330 -405.13494873]
[1.93675351 -419.38363647]
[2.82805634 -434.58645630]
[9.83160782 -448.10940552]
[21.73400116 -457.60955811]
[36.47307205 -461.44094849]
[51.49519348 -458.93978882]
[64.19768524 -450.53939819]
[72.37976837 -437.69522095]
[74.62384033 -422.63253784]
[70.54111481 -407.96109009]
[60.83893967 -396.22280884]
[47.19827652 -389.45138550]
[47.86806107 -374.46633911]
[48.53784561 -359.48129272]
[49.20763016 -344.49624634]
[49.87741470 -329.51123047]
[58.17530060 -317.14212036]
[51.06192780 -303.01022339]
[51.84325027 -288.03060913]
[52.73606491 -273.05718994]
[53.62888336 -258.08377075]
[64.90493774 -248.42013550]
[66.02368164 -233.24768066]
[55.81110001 -221.48583984]
[56.70391464 -206.51243591]
[58.37545395 -191.60586548]
[60.82118225 -176.80659485]
[63.26691055 -162.00732422]
[75.48713684 -153.56921387]
[78.17826843 -138.59548950]
[69.24474335 -125.83500671]
[71.69047546 -111.03573608]
[74.13619995 -96.23646545]
[76.58193207 -81.43719482]
[79.02765656 -66.63792419]
[90.87744141 -53.69382477]
[84.25055695 -36.51343155]
[86.91635132 -21.75221634]
[96.79236603 -10.60261822]
[91.63079834 4.35294199]
[101.38619995 11.50547791]
[103.72792053 23.78147507]
[96.86485291 34.70214844]
[99.31058502 49.50141907]
[109.01950836 60.79682159]
[103.63584137 75.67387390]
[106.08157349 90.47314453]
[113.98350525 77.72326660]
[127.82649231 71.94643402]
[142.44743347 75.29726410]
[152.39308167 86.52597809]
[153.95396423 101.44454193]
[146.54789734 114.48870850]
[132.93716431 120.79331970]
[118.19824219 118.00691223]
[107.82786560 107.16769409]
[108.49765015 122.15273285]
[109.16743469 137.13777161]
[111.63305664 140.71192932]
[112.72341919 144.50346375]
[112.53906250 148.05329895]
[111.31927490 150.98225403]
[109.40406036 153.02922058]
[109.18073273 168.02755737]
[108.95740509 183.02589417]
[119.68498993 194.31999207]
[119.24485016 209.52725220]
[108.41154480 219.68476868]
[108.18821716 234.68310547]
[115.71920013 248.59695435]
[107.79326630 261.20761108]
[107.56993866 276.20596313]
[107.34661102 291.20428467]
[120.85050964 295.99450684]
[132.19787598 304.70800781]
[140.28733826 316.48229980]
[144.33894348 330.15878296]
[143.96925354 344.39654541]
[139.22766113 357.80389404]
[130.59022522 369.07443237]
[118.91197205 377.11428833]
[105.34216309 381.14834595]
[104.89555359 396.14169312]
[104.44895172 411.13504028]
[104.00234222 426.12838745]
[106.79471588 432.12124634]
[106.22668457 437.77584839]
[103.31261444 441.55966187]
[102.41979980 456.53305054]
[101.52698517 471.50646973]
[103.60739136 475.31774902]
[104.29738617 479.20211792]
[103.74472046 482.71353149]
[102.22684479 485.49969482]
[100.10906219 487.33630371]
[98.32659149 502.23001099]
[96.54412842 517.12371826]
[94.76166534 532.01745605]
[92.97919464 546.91119385]
[91.19673157 561.80487061]
[97.23931885 576.42669678]
[88.04444885 588.14434814]
[90.10033417 592.94232178]
[90.10932159 597.58489990]
[88.47339630 601.31835938]
[85.83537292 603.65783691]
[91.21903992 618.53485107]
[81.51011658 629.83026123]
[79.06439209 644.62957764]
[76.61865997 659.42883301]
[74.17293549 674.22808838]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 210]
[13 209]
[14 208]
[15 207]
[17 205]
[18 201]
[20 199]
[21 198]
[22 197]
[23 196]
[24 195]
[25 194]
[26 189]
[27 188]
[28 187]
[29 184]
[30 183]
[31 182]
[32 181]
[40 172]
[41 171]
[42 170]
[44 168]
[45 167]
[48 164]
[49 163]
[50 162]
[51 157]
[52 156]
[53 155]
[54 146]
[55 145]
[57 143]
[58 142]
[60 139]
[62 137]
[63 136]
[66 134]
[67 133]
[68 132]
[69 131]
[70 130]
[73 127]
[74 126]
[75 125]
[83 124]
[84 123]
[87 120]
[88 119]
[89 118]
[91 117]
[93 115]
[94 114]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
