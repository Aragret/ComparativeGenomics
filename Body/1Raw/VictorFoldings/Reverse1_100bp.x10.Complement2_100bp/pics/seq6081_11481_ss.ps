%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[227.79022217 565.04180908]
[223.81813049 550.57727051]
[219.84603882 536.11273193]
[206.81425476 528.99176025]
[202.57994080 514.37927246]
[210.13745117 500.75860596]
[206.16535950 486.29409790]
[195.33399963 476.07003784]
[199.14071655 460.71362305]
[195.16862488 446.24911499]
[191.19651794 431.78457642]
[176.71919250 432.60119629]
[162.38366699 430.38119507]
[148.82012939 425.21957397]
[136.62536621 417.34072876]
[126.33650208 407.08871460]
[118.40735626 394.91210938]
[113.18840027 381.34451294]
[110.91127777 366.98107910]
[111.67852783 352.45242310]
[115.45896912 338.39697266]
[122.08895874 325.43289185]
[131.27947998 314.13092041]
[142.62872314 304.98913574]
[155.63966370 298.41113281]
[151.88336182 283.88909912]
[148.12705994 269.36703491]
[144.37075806 254.84497070]
[140.61447144 240.32290649]
[136.64236450 225.85838318]
[132.45535278 211.45460510]
[128.26834106 197.05081177]
[124.08133698 182.64703369]
[119.89432526 168.24325562]
[114.85740662 154.11422729]
[108.98844910 140.31004333]
[103.11948395 126.50587463]
[97.25052643 112.70169830]
[90.97315979 99.07837677]
[84.29296875 85.64800262]
[77.61277771 72.21762848]
[70.93257904 58.78725052]
[56.21995544 53.67096329]
[49.63660812 39.95549011]
[54.60487366 25.96078110]
[47.92467880 12.53040409]
[42.13722610 26.36895180]
[28.31247139 32.18927002]
[14.36985970 26.65721893]
[8.29635525 12.94180679]
[13.57113457 -1.10015500]
[27.17256737 -7.42479324]
[41.30842590 -2.40970016]
[35.85306931 -16.38249779]
[30.39771080 -30.35529518]
[18.17127037 -40.39644623]
[20.74993134 -55.06613541]
[15.29457474 -69.03893280]
[9.83921719 -83.01173401]
[4.38386059 -96.98452759]
[-1.07149649 -110.95732880]
[-7.10766506 -117.81316376]
[-6.50235605 -125.17899323]
[-11.74907398 -139.23146057]
[-17.10025978 -153.24449158]
[-22.55561638 -167.21728516]
[-28.01097488 -181.19007874]
[-33.46633148 -195.16287231]
[-38.92168808 -209.13568115]
[-44.37704468 -223.10847473]
[-58.97407150 -219.55738831]
[-73.91417694 -217.98364258]
[-88.93074036 -218.41532898]
[-103.75576782 -220.84474182]
[-118.12468719 -225.22851562]
[-131.78108215 -231.48841858]
[-144.48121643 -239.51275635]
[-155.99845886 -249.15829468]
[-166.12727356 -260.25292969]
[-174.68687439 -272.59863281]
[-181.52453613 -285.97509766]
[-186.51821899 -300.14361572]
[-189.57879639 -314.85128784]
[-190.65167236 -329.83569336]
[-189.71766663 -344.82940674]
[-186.79347229 -359.56481934]
[-181.93127441 -373.77899170]
[-175.21783447 -387.21823120]
[-166.77296448 -399.64270020]
[-156.74737549 -410.83068848]
[-145.31999207 -420.58251953]
[-132.69473267 -428.72418213]
[-119.09693146 -435.11032104]
[-104.76923370 -439.62704468]
[-89.96735382 -442.19369507]
[-74.95543671 -442.76446533]
[-60.00139236 -441.32919312]
[-45.37208939 -437.91351318]
[-31.32861137 -432.57833862]
[-18.12157631 -425.41888428]
[-5.98668051 -416.56292725]
[4.85951519 -406.16854858]
[14.22344780 -394.42120361]
[21.93800545 -381.53054810]
[27.86551476 -367.72662354]
[31.90019226 -353.25579834]
[33.97003174 -338.37631226]
[34.03809738 -323.35369873]
[32.10317230 -308.45605469]
[28.19979095 -293.94927979]
[22.39760971 -280.09219360]
[14.80017757 -267.13217163]
[5.54307985 -255.30046082]
[-5.20848131 -244.80819702]
[-17.26263046 -235.84265137]
[-30.40424728 -228.56382751]
[-24.94889069 -214.59103394]
[-19.49353409 -200.61824036]
[-14.03817654 -186.64543152]
[-8.58281898 -172.67263794]
[-3.12746215 -158.69984436]
[2.23342776 -153.61233521]
[2.30339718 -144.47817993]
[7.55011559 -130.42570496]
[12.90130138 -116.41268158]
[18.35665894 -102.43988800]
[23.81201553 -88.46708679]
[29.26737213 -74.49429321]
[34.72272873 -60.52149582]
[46.55896759 -51.47977066]
[44.37051010 -35.81065369]
[49.82586670 -21.83785439]
[55.28122330 -7.86505699]
[61.35505676 5.85020971]
[68.03524780 19.28058624]
[82.19339752 23.76192093]
[89.15938568 37.28707123]
[84.36295319 52.10705566]
[91.04315186 65.53742981]
[97.72334290 78.96781158]
[104.40354156 92.39818573]
[107.20038605 93.60945129]
[109.61831665 95.86513519]
[111.26964569 99.02687073]
[111.82323456 102.81498718]
[111.05470276 106.83273315]
[116.92366028 120.63690948]
[122.79262543 134.44108582]
[128.66159058 148.24526978]
[133.33166504 133.99078369]
[145.42048645 125.11045074]
[160.41923523 124.91641998]
[172.73373413 133.48106384]
[177.77098083 147.60997009]
[173.65222168 162.03341675]
[161.91363525 171.37181091]
[146.93342590 172.14216614]
[134.29811096 164.05624390]
[138.48512268 178.46002197]
[142.67213440 192.86381531]
[146.85914612 207.26759338]
[151.04614258 221.67137146]
[155.54653931 226.51472473]
[156.74539185 232.06988525]
[155.13652039 236.56660461]
[158.89282227 251.08866882]
[162.64912415 265.61071777]
[166.40542603 280.13278198]
[170.16172791 294.65484619]
[185.69172668 294.17044067]
[200.93493652 297.14419556]
[215.13133240 303.42474365]
[227.57374573 312.69580078]
[237.64315796 324.49230957]
[244.83946228 338.22354126]
[248.80627441 353.20297241]
[249.34867859 368.68225098]
[246.44268799 383.88888550]
[240.23632812 398.06463623]
[231.04216003 410.50338745]
[219.32142639 420.58627319]
[205.66104126 427.81250000]
[209.63314819 442.27700806]
[213.60523987 456.74154663]
[224.72070312 468.00018311]
[220.62988281 482.32199097]
[224.60197449 496.78652954]
[238.05572510 504.63726807]
[241.87794495 519.36291504]
[234.31056213 532.14062500]
[238.28265381 546.60516357]
[242.25474548 561.06970215]
[257.36380005 561.52539062]
[271.66677856 566.41583252]
[283.89181519 575.30627441]
[292.95190430 587.40612793]
[298.04141235 601.63946533]
[298.70779419 616.74072266]
[294.89181519 631.36706543]
[286.93273926 644.21789551]
[275.53833008 654.15063477]
[261.72174072 660.28192139]
[246.71153259 662.06671143]
[231.84242249 659.34625244]
[218.43655396 652.36236572]
[207.68597412 641.73614502]
[200.54660034 628.41247559]
[197.65327454 613.57604980]
[199.26325989 598.54608154]
[205.23339844 584.65905762]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 192]
[2 191]
[3 190]
[6 187]
[7 186]
[9 184]
[10 183]
[11 182]
[25 169]
[26 168]
[27 167]
[28 166]
[29 165]
[30 162]
[31 161]
[32 160]
[33 159]
[34 158]
[35 149]
[36 148]
[37 147]
[38 146]
[39 141]
[40 140]
[41 139]
[42 138]
[45 135]
[46 134]
[53 133]
[54 132]
[55 131]
[57 129]
[58 128]
[59 127]
[60 126]
[61 125]
[63 124]
[64 123]
[65 121]
[66 120]
[67 119]
[68 118]
[69 117]
[70 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
