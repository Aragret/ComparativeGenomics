%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[128.65197754 447.23614502]
[134.97422791 460.95495605]
[137.17399597 475.89944458]
[135.07293701 490.85812378]
[128.84138489 504.61837769]
[118.98448944 516.06469727]
[106.30132294 524.26922607]
[91.82004547 528.56677246]
[76.71458435 528.60906982]
[62.20947647 524.39257812]
[49.48058701 516.25921631]
[39.55978775 504.86822510]
[33.25131607 491.14306641]
[31.06657028 476.19638062]
[33.18265533 461.23980713]
[39.42803192 447.48583984]
[49.29641342 436.04940796]
[61.98781967 427.85766602]
[76.47341156 423.57461548]
[91.57890320 423.54751587]
[95.76591492 409.14373779]
[99.95292664 394.73995972]
[104.13993835 380.33618164]
[107.35321045 365.68438721]
[109.57833099 350.85034180]
[111.80344391 336.01629639]
[114.02856445 321.18225098]
[115.92185211 306.30221558]
[109.55062103 292.83905029]
[118.68163300 279.91873169]
[120.24215698 265.00012207]
[121.80268097 250.08151245]
[123.36320496 235.16291809]
[124.92372894 220.24430847]
[123.80807495 205.28585815]
[120.05177307 190.76379395]
[116.29547882 176.24172974]
[112.10846710 161.83795166]
[107.49445343 147.56521606]
[102.88044739 133.29248047]
[98.26643372 119.01975250]
[85.41411591 112.32916260]
[80.95713043 98.54215240]
[87.46083069 85.59425354]
[82.84681702 71.32152557]
[71.23971558 60.57044220]
[74.68695831 46.08024597]
[69.75537109 31.91411209]
[64.50865173 17.86164093]
[59.26193237 3.80916882]
[54.01521301 -10.24330235]
[48.76849747 -24.29577446]
[43.52177811 -38.34824371]
[38.27505875 -52.40071487]
[35.65646362 -37.63105392]
[27.64997292 -24.94657135]
[15.44329929 -16.22893715]
[0.84723222 -12.77136135]
[-13.97298908 -15.08675480]
[-26.81887245 -22.83164215]
[-35.78480911 -34.85711670]
[-39.54075241 -49.37926483]
[-37.52953339 -64.24382019]
[-30.04950333 -77.24571228]
[-18.21028137 -86.45618439]
[-3.76814365 -90.50891876]
[11.13450336 -88.80271912]
[24.28693962 -81.59069061]
[33.73718643 -69.94437408]
[31.51206970 -84.77841949]
[29.28695107 -99.61246490]
[27.06183434 -114.44651031]
[24.83671761 -129.28054810]
[22.61160088 -144.11459351]
[20.38648224 -158.94863892]
[18.16136551 -173.78268433]
[15.93624878 -188.61672974]
[8.46686935 -175.60871887]
[-4.80009222 -168.60958862]
[-19.75372314 -169.78811646]
[-31.76047897 -178.77909851]
[-37.09993744 -192.79658508]
[-34.11760330 -207.49713135]
[-23.73759270 -218.32557678]
[-9.17625904 -221.92663574]
[5.05440617 -217.18446350]
[14.54498005 -205.56825256]
[14.32165241 -220.56658936]
[14.09832382 -235.56492615]
[6.15641737 -249.24836731]
[13.70337009 -262.08941650]
[13.48004246 -277.08776855]
[4.78540993 -286.61489868]
[4.90817118 -299.11163330]
[13.23712730 -307.88403320]
[13.23712730 -322.88403320]
[-1.15604556 -327.54147339]
[-13.40434837 -336.42034912]
[-22.30781746 -348.65078735]
[-26.99418259 -363.03454590]
[-27.00431824 -378.16250610]
[-22.33723450 -392.55258179]
[-13.45016479 -404.79492188]
[-1.21377122 -413.69018555]
[13.17314720 -418.36691284]
[28.30110741 -418.36691284]
[42.68802643 -413.69018555]
[54.92441940 -404.79492188]
[63.81148911 -392.55258179]
[68.47857666 -378.16250610]
[68.46843719 -363.03454590]
[63.78207397 -348.65078735]
[54.87860489 -336.42034912]
[42.63030243 -327.54147339]
[28.23712730 -322.88403320]
[28.23712730 -307.88403320]
[37.81782150 -293.18106079]
[28.47838020 -277.31109619]
[28.70170784 -262.31274414]
[36.62763977 -249.70208740]
[29.09666252 -235.78825378]
[29.31999016 -220.78991699]
[29.54331779 -205.79158020]
[30.77029228 -190.84184265]
[32.99541092 -176.00779724]
[35.22052765 -161.17375183]
[37.44564438 -146.33970642]
[39.67076111 -131.50566101]
[41.89587784 -116.67162323]
[44.12099457 -101.83757782]
[46.34611130 -87.00354004]
[48.57122803 -72.16949463]
[52.32752991 -57.64743423]
[57.57424927 -43.59496307]
[62.82096863 -29.54249191]
[68.06768799 -15.49002075]
[73.31439972 -1.43754935]
[78.56111908 12.61492157]
[83.80783844 26.66739273]
[86.84660339 28.45576477]
[89.17012024 31.80484200]
[90.05429077 36.36241913]
[88.95969391 41.46623611]
[100.23677063 51.19643784]
[97.11955261 66.70751190]
[101.73356628 80.98024750]
[114.58588409 87.67083740]
[119.04286957 101.45784760]
[112.53916931 114.40574646]
[117.15318298 128.67848206]
[121.76718903 142.95121765]
[126.38119507 157.22393799]
[129.70526123 160.01760864]
[131.76072693 163.38504028]
[132.52296448 166.85697937]
[132.12232971 170.00437927]
[130.81753540 172.48542786]
[134.57383728 187.00749207]
[138.33013916 201.52955627]
[141.40742493 186.84860229]
[147.86424255 173.30941772]
[157.33541870 161.67770386]
[169.28530884 152.61128235]
[183.03811646 146.62292480]
[197.81602478 144.05128479]
[212.78327942 145.04180908]
[227.09342957 149.53846741]
[239.93713379 157.28695679]
[250.58802795 167.84907532]
[258.44378662 180.62747192]
[263.06005859 194.89945984]
[264.17584229 209.85791016]
[261.72799683 224.65682983]
[255.85496521 238.45927429]
[246.88890076 250.48464966]
[235.33688354 260.05285645]
[221.85221863 266.62280273]
[207.19754028 269.82287598]
[192.20164490 269.47210693]
[177.71261597 265.59036255]
[164.54988098 258.39712524]
[153.45785522 248.29925537]
[145.06384277 235.86782837]
[139.84233093 221.80482483]
[138.28181458 236.72343445]
[136.72128296 251.64204407]
[135.16076660 266.56063843]
[133.60023499 281.47924805]
[139.85984802 296.00949097]
[130.84045410 307.86273193]
[132.96754456 312.62957764]
[133.04566956 317.27145386]
[131.46549988 321.02886963]
[128.86260986 323.40737915]
[126.63748932 338.24142456]
[124.41236877 353.07546997]
[122.18725586 367.90951538]
[133.14445496 357.66549683]
[147.88107300 354.86694336]
[161.83082581 360.38098145]
[170.67120361 372.49905396]
[171.66293335 387.46621704]
[164.49871826 400.64477539]
[151.39846802 407.95117188]
[136.42143250 407.12142944]
[124.20841217 398.41268921]
[118.54371643 384.52319336]
[114.35670471 398.92697144]
[110.16970062 413.33074951]
[105.98268890 427.73452759]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 210]
[21 209]
[22 208]
[23 207]
[24 197]
[25 196]
[26 195]
[27 194]
[28 190]
[30 188]
[31 187]
[32 186]
[33 185]
[34 184]
[35 159]
[36 158]
[37 157]
[38 152]
[39 151]
[40 150]
[41 149]
[44 146]
[45 145]
[47 143]
[48 139]
[49 138]
[50 137]
[51 136]
[52 135]
[53 134]
[54 133]
[69 132]
[70 131]
[71 130]
[72 129]
[73 128]
[74 127]
[75 126]
[76 125]
[77 124]
[87 123]
[88 122]
[89 121]
[91 119]
[92 118]
[95 116]
[96 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
