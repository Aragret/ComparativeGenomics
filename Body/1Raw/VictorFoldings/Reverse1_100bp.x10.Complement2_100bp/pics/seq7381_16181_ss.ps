%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[201.41789246 422.64541626]
[206.16847229 408.36856079]
[213.53535461 395.24890137]
[223.25221252 383.76071167]
[234.96781921 374.31924438]
[248.25863647 367.26580811]
[243.85763550 352.92596436]
[239.45663452 338.58612061]
[235.05563354 324.24627686]
[230.65463257 309.90643311]
[226.25364685 295.56658936]
[221.85264587 281.22674561]
[217.34501648 266.92004395]
[210.26791382 253.69451904]
[200.95303345 241.93727112]
[191.63813782 230.18002319]
[182.32325745 218.42276001]
[173.00837708 206.66551208]
[166.39074707 203.37480164]
[163.64389038 194.66316223]
[154.50509644 182.76852417]
[145.36628723 170.87390137]
[136.22749329 158.97926331]
[122.33786774 153.60083008]
[120.06555176 137.94364929]
[110.92675018 126.04901886]
[101.69965363 114.22274780]
[88.77265167 108.89505768]
[86.54309845 95.09213257]
[77.22821045 83.33488464]
[67.91333008 71.57762909]
[52.46041489 69.61673737]
[43.18128586 57.56051636]
[45.14593124 42.84060669]
[35.83105087 31.08335495]
[26.51616669 19.32610321]
[17.20128250 7.56885147]
[4.50221634 5.31130743]
[-3.01412368 -4.67309999]
[-1.75408173 -16.70384598]
[-10.89288425 -28.59848022]
[-26.31489372 -30.78923035]
[-35.41349411 -42.98226547]
[-33.22990799 -57.67129135]
[-30.32346153 -42.95556641]
[-30.30335999 -27.95558167]
[-33.17035294 -13.23211861]
[-38.81726074 0.66437179]
[-47.03296280 13.21436024]
[-57.51031494 23.94865608]
[-69.85761261 32.46595001]
[-83.61323547 38.44781494]
[-98.26293182 41.67061996]
[-113.25900269 42.01387024]
[-128.04081726 39.46474075]
[-142.05574036 34.11852646]
[-154.77981567 26.17510223]
[-165.73733521 15.93143845]
[-174.51866150 3.77050281]
[-180.79548645 -9.85305977]
[-184.33314514 -24.42992401]
[-184.99938965 -39.41511917]
[-182.76930237 -54.24841690]
[-177.72625732 -68.37525940]
[-170.05880737 -81.26750946]
[-160.05358887 -92.44318390]
[-148.08465576 -101.48445892]
[-134.59948730 -108.05332947]
[-120.10221100 -111.90421295]
[-105.13484955 -112.89313507]
[-90.25695038 -110.98313141]
[-76.02473450 -106.24560547]
[-62.97029495 -98.85767365]
[-51.58166885 -89.09554291]
[-42.28793716 -77.32929993]
[-45.39204788 -92.00460052]
[-48.49615860 -106.67990875]
[-51.60026932 -121.35520935]
[-62.02590179 -133.25549316]
[-57.08987427 -147.30842590]
[-60.19398499 -161.98373413]
[-63.29809570 -176.65902710]
[-66.40220642 -191.33433533]
[-69.50631714 -206.00962830]
[-84.56266022 -206.01905823]
[-99.28795624 -209.15904236]
[-113.03845978 -215.29232788]
[-125.21306610 -224.15080261]
[-135.27955627 -235.34721375]
[-142.79786682 -248.39208984]
[-147.43933105 -262.71514893]
[-149.00102234 -277.69030762]
[-147.41470337 -292.66284180]
[-142.74969482 -306.97827148]
[-135.20996094 -320.01077271]
[-125.12506866 -331.19061279]
[-112.93591309 -340.02905273]
[-99.17533875 -346.13973999]
[-84.44490814 -349.25549316]
[-69.38856506 -349.24017334]
[-54.66450882 -346.09439087]
[-40.91641617 -339.95568848]
[-28.74529457 -331.09240723]
[-18.68320847 -319.89205933]
[-11.17003345 -306.84420776]
[-6.53421068 -292.51931763]
[-4.97839975 -277.54357910]
[-6.57061338 -262.57165527]
[-11.24124718 -248.25805664]
[-18.78611946 -235.22853088]
[-28.87540436 -224.05265808]
[-41.06803894 -215.21900940]
[-54.83101273 -209.11373901]
[-51.72690201 -194.43844604]
[-48.62279510 -179.76313782]
[-45.51868439 -165.08784485]
[-42.41457367 -150.41253662]
[-32.21096802 -139.56192017]
[-36.92496490 -124.45932007]
[-33.82085419 -109.78401947]
[-30.71674538 -95.10871124]
[-27.61263657 -80.43341064]
[-21.33527565 -66.81009674]
[-6.57952118 -65.13578796]
[2.85796762 -53.20312119]
[1.00174880 -37.73728180]
[10.14055157 -25.84264946]
[26.69564056 -20.02062607]
[28.95853424 -1.74603128]
[38.27341843 10.01121998]
[47.58829880 21.76847076]
[56.90318298 33.52572250]
[71.68222809 34.98015594]
[81.29633331 46.77098846]
[79.67058563 62.26274872]
[88.98546600 74.01999664]
[98.30034637 85.77725220]
[111.22734833 91.10494232]
[113.45690155 104.90786743]
[121.23892212 109.69096375]
[122.82138062 116.91021729]
[131.96018982 128.80485535]
[146.50347900 135.03407288]
[148.12211609 149.84046936]
[157.26092529 161.73509216]
[166.39973450 173.62973022]
[175.53852844 185.52436829]
[184.76562500 197.35063171]
[194.08050537 209.10787964]
[203.39540100 220.86512756]
[212.71028137 232.62239075]
[222.02516174 244.37963867]
[218.89424133 229.71003723]
[219.31571960 214.71595764]
[223.26574707 200.24539185]
[230.52096558 187.11672974]
[240.67103577 176.07244873]
[253.14192200 167.73715210]
[267.22833252 162.58226013]
[282.13363647 160.89929199]
[297.01483154 162.78344727]
[311.03030396 168.12812805]
[323.38748169 176.63110352]
[333.38745117 187.81147766]
[340.46466064 201.03695679]
[344.21887207 215.55955505]
[344.43780518 230.55795288]
[341.10900879 245.18392944]
[334.42077637 258.61032104]
[324.75137329 270.07775879]
[312.64764404 278.93774414]
[298.79409790 284.68920898]
[283.97421265 287.00686646]
[269.02615356 285.75961304]
[254.79530334 281.01800537]
[242.08647156 273.05023193]
[231.61775208 262.30603027]
[237.23515320 269.50900269]
[236.19248962 276.82574463]
[240.59349060 291.16558838]
[244.99449158 305.50543213]
[249.39547729 319.84527588]
[253.79647827 334.18511963]
[258.19747925 348.52496338]
[262.59848022 362.86480713]
[277.55783081 361.24804688]
[292.55282593 362.49185181]
[307.04135132 366.55126953]
[320.49969482 373.27954102]
[332.44134521 382.43341064]
[342.43460083 393.68203735]
[350.11819458 406.61874390]
[355.21441650 420.77590942]
[357.53903198 435.64175415]
[357.00796509 450.67883301]
[353.64044189 465.34362793]
[347.55822754 479.10601807]
[338.98114014 491.46847534]
[328.21923828 501.98406982]
[315.66159058 510.27276611]
[301.76214600 516.03485107]
[287.02331543 519.06201172]
[271.97796631 519.24493408]
[257.16992188 516.57690430]
[243.13450623 511.15435791]
[230.37908936 503.17340088]
[219.36477661 492.92248535]
[210.48971558 480.77218628]
[204.07473755 467.16171265]
[200.35176086 452.58312988]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 185]
[7 184]
[8 183]
[9 182]
[10 181]
[11 180]
[12 179]
[13 177]
[14 152]
[15 151]
[16 150]
[17 149]
[18 148]
[20 147]
[21 146]
[22 145]
[23 144]
[25 142]
[26 141]
[27 139]
[29 137]
[30 136]
[31 135]
[34 132]
[35 131]
[36 130]
[37 129]
[40 127]
[41 126]
[44 123]
[75 122]
[76 121]
[77 120]
[78 119]
[80 117]
[81 116]
[82 115]
[83 114]
[84 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
