%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAUGCGGGAGAGUCGGCUACUUGUCAACCUUAUCCAACAAUCGCCAUUGAUUCUAAUCAUACCAUUAAUCCUUCUACUCAUCUAUAAACUUCUUGACxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[128.42153931 610.15838623]
[115.63758850 602.25158691]
[104.24800110 592.44219971]
[94.53326416 580.97180176]
[86.73260498 568.12286377]
[81.03811646 554.21173096]
[77.59004211 539.58099365]
[76.47328949 524.59106445]
[77.71535492 509.61093140]
[81.28565216 495.00958252]
[87.09626770 481.14657593]
[95.00409698 468.36328125]
[104.81441498 456.97448730]
[116.28562927 447.26071167]
[129.13525391 439.46109009]
[143.04684448 433.76776123]
[157.67782593 430.32089233]
[156.56216431 415.36245728]
[147.89968872 403.24591064]
[154.58915710 388.90847778]
[153.47349548 373.95001221]
[144.81101990 361.83346558]
[151.50048828 347.49606323]
[150.38482666 332.53759766]
[149.26918030 317.57913208]
[137.85049438 308.08444214]
[136.50598145 292.93032837]
[146.54232788 281.01776123]
[145.42666626 266.05929565]
[144.31101990 251.10084534]
[143.19537354 236.14239502]
[139.87310791 221.51493835]
[134.41775513 207.54212952]
[128.96240234 193.56933594]
[123.50704193 179.59654236]
[118.05168915 165.62374878]
[112.59632874 151.65093994]
[107.14097595 137.67814636]
[101.58174896 123.74634552]
[95.91896057 109.85632324]
[88.94050598 96.57847595]
[80.71170044 84.03707886]
[72.48289490 71.49567413]
[64.06827545 59.07817841]
[55.37844849 46.85169220]
[41.02706909 40.19222641]
[39.84998322 25.34420395]
[31.06938171 13.18274879]
[22.28877831 1.02129269]
[20.89182663 15.95610237]
[11.07008743 27.29335976]
[-3.51317501 30.80455017]
[-17.41876411 25.18008614]
[-25.46023750 12.51775169]
[-24.63832664 -2.45971298]
[-15.25958252 -14.16608524]
[-0.82204473 -18.23517799]
[13.29036713 -13.14860630]
[6.01713800 -26.26729965]
[-1.25609171 -39.38599396]
[-8.52932072 -52.50468826]
[-15.80255032 -65.62338257]
[-23.07578087 -78.74207306]
[-36.53411865 -87.05974579]
[-35.93845749 -101.94243622]
[-43.21168900 -115.06113434]
[-57.22017288 -109.63193512]
[-71.83747101 -106.16086578]
[-86.79127502 -104.71257782]
[-101.80300140 -105.31406403]
[-116.59299469 -107.95411682]
[-130.88572693 -112.58354950]
[-144.41493225 -119.11611938]
[-156.92855835 -127.43013000]
[-168.19349670 -137.37069702]
[-177.99989319 -148.75262451]
[-186.16505432 -161.36389160]
[-192.53684998 -174.96954346]
[-196.99661255 -189.31611633]
[-199.46124268 -204.13635254]
[-199.88481140 -219.15415955]
[-198.25944519 -234.08975220]
[-194.61543274 -248.66490173]
[-189.02062988 -262.60806274]
[-181.57928467 -275.65951538]
[-172.43002319 -287.57608032]
[-161.74328613 -298.13580322]
[-149.71817017 -307.14190674]
[-136.57868958 -314.42666626]
[-122.56961060 -319.85437012]
[-107.95194244 -323.32385254]
[-92.99797821 -324.77050781]
[-77.98632050 -324.16738892]
[-63.19660950 -321.52575684]
[-48.90438080 -316.89477539]
[-35.37588882 -310.36074829]
[-22.86315536 -302.04537964]
[-11.59928894 -292.10357666]
[-1.79412794 -280.72058105]
[6.36966372 -268.10842896]
[12.73999882 -254.50210571]
[17.19820404 -240.15504456]
[19.66122246 -225.33453369]
[20.08317184 -210.31669617]
[18.45619202 -195.38127136]
[14.81059074 -180.80651855]
[9.21428490 -166.86395264]
[1.77152884 -153.81332397]
[-7.37902212 -141.89773560]
[-18.06690025 -131.33918762]
[-30.09299469 -122.33435822]
[-22.81976509 -109.21566772]
[-9.88165569 -101.83633423]
[-9.95708561 -86.01530457]
[-2.68385649 -72.89661407]
[4.58937311 -59.77791595]
[11.86260223 -46.65922546]
[19.13583183 -33.54053116]
[26.40906143 -20.42183495]
[34.45023346 -7.75931072]
[43.23083878 4.40214539]
[52.01144028 16.56360054]
[65.73477173 22.35320091]
[67.53990173 38.07109070]
[74.00399780 41.65401459]
[76.35910797 50.47961426]
[80.82270050 52.17826843]
[84.26659393 56.69895935]
[85.02429199 63.26686859]
[93.25309753 75.80826569]
[101.48191071 88.34967041]
[101.03598785 73.35630035]
[106.65149689 59.44709015]
[117.38214111 48.96599579]
[131.41960144 43.67926025]
[146.39833069 44.47779083]
[159.79414368 51.22702408]
[169.34962463 62.78959274]
[173.45448303 77.21700287]
[171.41699219 92.07798004]
[163.58050537 104.86818695]
[151.26560974 113.43225861]
[136.54757690 116.32698822]
[121.90665436 113.06456757]
[109.80899048 104.19353485]
[115.47177124 118.08356476]
[121.60934448 124.84877014]
[121.11376953 132.22279358]
[126.56912994 146.19558716]
[132.02449036 160.16838074]
[137.47984314 174.14118958]
[142.93519592 188.11398315]
[148.39054871 202.08677673]
[153.84591675 216.05957031]
[155.35292053 201.13546753]
[160.95007324 187.21887207]
[170.19598389 175.40728760]
[182.36145020 166.63224792]
[196.48707581 161.58578491]
[211.45883179 160.66587830]
[226.09600830 163.94506836]
[239.24424744 171.16476440]
[249.86662292 181.75556946]
[257.12539673 194.88226318]
[260.44812012 209.50961304]
[259.57278442 224.48405457]
[254.56835938 238.62463379]
[245.82955933 250.81616211]
[234.04554749 260.09716797]
[220.14566040 265.73571777]
[205.22610474 267.28710938]
[190.46350098 264.62902832]
[177.02207947 257.97106934]
[165.96189880 247.83834839]
[158.15382385 235.02674866]
[159.26947021 249.98519897]
[160.38513184 264.94366455]
[161.50077820 279.90209961]
[173.19319153 290.19409180]
[174.11152649 305.37997437]
[164.22763062 316.46350098]
[165.34329224 331.42193604]
[166.45893860 346.38040161]
[175.20121765 359.56686401]
[168.43196106 372.83438110]
[169.54760742 387.79281616]
[178.28988647 400.97930908]
[171.52062988 414.24679565]
[172.63627625 429.20526123]
[187.61669922 430.44360352]
[202.21893311 434.01028442]
[216.08338928 439.81747437]
[228.86863708 447.72213745]
[240.25984192 457.52963257]
[249.97647095 468.99844360]
[257.77926636 481.84613037]
[263.47604370 495.75631714]
[266.92651367 510.38644409]
[268.04574585 525.37622070]
[266.80615234 540.35656738]
[263.23828125 554.95849609]
[257.42993164 568.82244873]
[249.52421570 581.60705566]
[239.71577454 592.99743652]
[228.24617004 602.71313477]
[215.39784241 610.51489258]
[201.48718262 616.21051025]
[186.85678101 619.65979004]
[171.86689758 620.77777100]
[156.88667297 619.53692627]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 189]
[18 188]
[20 186]
[21 185]
[23 183]
[24 182]
[25 181]
[28 178]
[29 177]
[30 176]
[31 175]
[32 154]
[33 153]
[34 152]
[35 151]
[36 150]
[37 149]
[38 148]
[39 146]
[40 145]
[41 131]
[42 130]
[43 129]
[44 126]
[45 124]
[47 122]
[48 121]
[49 120]
[58 119]
[59 118]
[60 117]
[61 116]
[62 115]
[63 114]
[65 112]
[66 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
