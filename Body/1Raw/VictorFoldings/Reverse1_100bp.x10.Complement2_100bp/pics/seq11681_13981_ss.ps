%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[273.69171143 475.87182617]
[283.85397339 464.80175781]
[295.51983643 455.32937622]
[287.85922241 442.43307495]
[280.19863892 429.53674316]
[274.07998657 425.39138794]
[272.52163696 416.39086914]
[265.05389404 403.38192749]
[257.58615112 390.37298584]
[250.11840820 377.36401367]
[242.65066528 364.35507202]
[235.18292236 351.34613037]
[220.37893677 349.93899536]
[209.10890198 339.96652222]
[205.83372498 325.09619141]
[212.01411438 310.98559570]
[204.54637146 297.97665405]
[197.07862854 284.96768188]
[189.61088562 271.95874023]
[178.02015686 268.49731445]
[171.69218445 257.72045898]
[174.48965454 245.12931824]
[167.21643066 232.01062012]
[159.94319153 218.89192200]
[143.78462219 219.00628662]
[129.69210815 210.90956116]
[121.55921173 196.72955322]
[121.68782806 180.28938293]
[130.13755798 166.07691956]
[122.66981506 153.06797791]
[115.10543823 140.11497498]
[107.44483948 127.21864319]
[99.78424072 114.32231903]
[87.68491364 107.31533051]
[87.31942749 93.33827972]
[79.65883636 80.44194794]
[71.99823761 67.54562378]
[64.33763885 54.64929581]
[50.63761520 46.73601913]
[50.78990173 31.84219170]
[43.12930298 18.94586372]
[35.46870422 6.04953718]
[27.80810738 -6.84678984]
[14.10808659 -14.76006889]
[14.26036930 -29.65389633]
[6.59977198 -42.55022430]
[-1.06082535 -55.44654846]
[-19.58478165 -59.41861725]
[-29.15876389 -75.39521790]
[-24.10253334 -92.98925781]
[-38.03208923 -100.49112701]
[-38.32331848 -115.38288879]
[-46.36449051 -128.04541016]
[-54.40566254 -140.70793152]
[-62.44683838 -153.37045288]
[-70.48800659 -166.03298950]
[-77.73018646 -171.59973145]
[-78.55300903 -178.94444275]
[-86.40476990 -191.72528076]
[-94.25652313 -204.50611877]
[-107.86373138 -198.15461731]
[-122.10626984 -193.39564514]
[-136.79846191 -190.29124451]
[-151.74876404 -188.88191223]
[-166.76226807 -189.18600464]
[-181.64324951 -191.19955444]
[-196.19767761 -194.89631653]
[-210.23583984 -200.22810364]
[-223.57470703 -207.12538147]
[-236.04035950 -215.49826050]
[-247.47032166 -225.23754883]
[-257.71554565 -236.21630859]
[-266.64248657 -248.29139709]
[-274.13473511 -261.30538940]
[-280.09463501 -275.08859253]
[-284.44448853 -289.46136475]
[-287.12759399 -304.23629761]
[-288.10894775 -319.22079468]
[-287.37579346 -334.21945190]
[-284.93765259 -349.03680420]
[-280.82629395 -363.47961426]
[-275.09536743 -377.35958862]
[-267.81958008 -390.49581909]
[-259.09375000 -402.71701050]
[-249.03167725 -413.86386108]
[-237.76451111 -423.79104614]
[-225.43916321 -432.36914062]
[-212.21630859 -439.48629761]
[-198.26832581 -445.04971313]
[-183.77708435 -448.98690796]
[-168.93147278 -451.24652100]
[-153.92506409 -451.79910278]
[-138.95347595 -450.63745117]
[-124.21191406 -447.77670288]
[-109.89254761 -443.25415039]
[-96.18206024 -437.12875366]
[-83.25920105 -429.48037720]
[-71.29244995 -420.40875244]
[-60.43781281 -410.03210449]
[-50.83680344 -398.48574829]
[-42.61458588 -385.92019653]
[-35.87836075 -372.49929810]
[-30.71594810 -358.39797974]
[-27.19464493 -343.80007935]
[-25.36036491 -328.89596558]
[-25.23701668 -313.87988281]
[-26.82621193 -298.94763184]
[-30.10722923 -284.29385376]
[-35.03729630 -270.10964966]
[-41.55213928 -256.57986450]
[-49.56682205 -243.88095093]
[-58.97685623 -232.17843628]
[-69.65956879 -221.62487793]
[-81.47567749 -212.35787964]
[-73.62392426 -199.57704163]
[-65.77217102 -186.79618835]
[-57.82548523 -174.07415771]
[-49.78431320 -161.41163635]
[-41.74313736 -148.74911499]
[-33.70196533 -136.08657837]
[-25.66079330 -123.42405701]
[-12.30639648 -116.82789612]
[-11.44000912 -101.03043365]
[-0.03097481 -101.01746368]
[10.05950260 -95.44090271]
[16.26865387 -85.58492279]
[16.95607185 -73.83638000]
[11.83550167 -63.10714722]
[19.49609947 -50.21081924]
[27.15669632 -37.31449509]
[40.30878067 -30.32364655]
[40.70443344 -14.50738716]
[48.36503220 -1.61106038]
[56.02563095 11.28526688]
[63.68622589 24.18159294]
[76.83831024 31.17244148]
[77.23396301 46.98870087]
[84.89456177 59.88502502]
[92.55516052 72.78135681]
[100.21575928 85.67768097]
[112.31508636 92.68466949]
[112.68057251 106.66172028]
[120.34116364 119.55805206]
[128.00177002 132.45437622]
[135.07499695 138.23428345]
[135.67877197 145.60023499]
[143.14651489 158.60917664]
[157.11737061 157.91795349]
[169.96179199 163.28797913]
[179.19512939 173.61869812]
[183.05801392 186.85604858]
[180.85128784 200.40074158]
[173.06188965 211.61869812]
[180.33511353 224.73739624]
[187.60835266 237.85607910]
[203.60896301 246.96990967]
[202.61984253 264.49099731]
[210.08758545 277.49993896]
[217.55532837 290.50891113]
[225.02307129 303.51785278]
[240.32475281 305.29675293]
[251.51414490 315.62396240]
[254.44230652 330.38504028]
[248.19187927 343.87838745]
[255.65962219 356.88732910]
[263.12734985 369.89627075]
[270.59509277 382.90524292]
[278.06283569 395.91418457]
[285.53057861 408.92312622]
[293.09497070 421.87612915]
[300.75555420 434.77246094]
[308.41616821 447.66879272]
[322.31491089 441.95544434]
[336.89746094 438.32675171]
[351.85293579 436.86004639]
[366.86260986 437.58657837]
[381.60650635 440.49090576]
[395.77038574 445.51110840]
[409.05233765 452.54016113]
[421.16925049 461.42825317]
[431.86285400 471.98593140]
[440.90524292 483.98815918]
[448.10363770 497.17910767]
[453.30459595 511.27761841]
[456.39727783 525.98315430]
[457.31579590 540.98229980]
[456.04052734 555.95532227]
[452.59866333 570.58306885]
[447.06356812 584.55377197]
[439.55325317 597.56964111]
[430.22775269 609.35327148]
[419.28585815 619.65338135]
[406.96081543 628.25054932]
[393.51531982 634.96148682]
[379.23596191 639.64306641]
[364.42709351 642.19561768]
[349.40438843 642.56469727]
[334.48803711 640.74243164]
[319.99600220 636.76763916]
[306.23718262 630.72509766]
[293.50485229 622.74353027]
[282.07037354 612.99310303]
[272.17749023 601.68170166]
[264.03704834 589.05029297]
[257.82260132 575.36828613]
[253.66659546 560.92718506]
[251.65760803 546.03485107]
[251.83845520 531.00866699]
[254.20530701 516.16900635]
[258.70767212 501.83212280]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 172]
[4 171]
[5 170]
[7 169]
[8 168]
[9 167]
[10 166]
[11 165]
[12 164]
[16 160]
[17 159]
[18 158]
[19 157]
[22 155]
[23 154]
[24 153]
[29 147]
[30 146]
[31 144]
[32 143]
[33 142]
[35 140]
[36 139]
[37 138]
[38 137]
[40 135]
[41 134]
[42 133]
[43 132]
[45 130]
[46 129]
[47 128]
[50 123]
[52 121]
[53 120]
[54 119]
[55 118]
[56 117]
[58 116]
[59 115]
[60 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
