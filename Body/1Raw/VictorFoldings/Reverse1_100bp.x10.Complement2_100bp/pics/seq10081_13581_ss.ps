%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[81.14877319 606.88043213]
[72.94606781 594.28021240]
[66.92929840 580.50170898]
[63.26261139 565.92071533]
[62.04603958 550.93505859]
[63.31277084 535.95355225]
[67.02824402 521.38488770]
[73.09110260 507.62658691]
[81.33594513 495.05389404]
[91.53784180 484.00985718]
[103.41848755 474.79571533]
[116.65377045 467.66290283]
[130.88261414 462.80593872]
[128.43687439 448.00665283]
[125.99114990 433.20739746]
[123.54542542 418.40811157]
[121.09969330 403.60885620]
[118.65396881 388.80957031]
[116.20824432 374.01031494]
[113.65241241 359.22964478]
[103.77639008 348.08004761]
[108.93795776 333.12451172]
[106.27216339 318.36328125]
[103.60636902 303.60208130]
[97.48469543 317.29605103]
[85.75763702 326.64892578]
[71.04505157 329.57122803]
[56.63376999 325.41009521]
[45.74330521 315.09518433]
[40.80661392 300.93081665]
[42.92657089 286.08135986]
[51.62956619 273.86425781]
[64.97133636 267.00881958]
[79.97129059 267.04653931]
[93.27839661 273.96902466]
[101.91983032 286.22979736]
[101.69650269 271.23144531]
[101.47317505 256.23312378]
[90.36915588 240.40315247]
[100.45678711 222.95028687]
[99.78700256 207.96525574]
[99.11721802 192.98020935]
[98.44743347 177.99517822]
[97.77764893 163.01013184]
[96.77339172 148.04379272]
[95.43515778 133.10360718]
[94.09692383 118.16342163]
[83.04565430 108.79241180]
[81.75296783 94.36067200]
[90.96289062 83.17481232]
[89.62465668 68.23462677]
[88.28642273 53.29444122]
[86.83700562 38.36463165]
[85.27648163 23.44602776]
[77.23371887 36.10754013]
[63.66746140 42.50728226]
[48.78136826 40.66222382]
[37.18805695 31.14407539]
[32.47983932 16.90214157]
[36.11560822 2.34943843]
[46.96878433 -8.00472069]
[61.67638779 -10.95198536]
[75.68111420 -5.57911539]
[84.64352417 6.44928932]
[85.09013367 -8.54406071]
[77.76714325 -22.56848335]
[85.87995148 -35.05974579]
[86.32656097 -50.05309296]
[86.77316284 -65.04644775]
[87.21977234 -80.03979492]
[87.66637421 -95.03314209]
[88.11298370 -110.02649689]
[88.55959320 -125.01984406]
[88.78292084 -140.01818848]
[88.78292084 -155.01818848]
[88.78292084 -170.01818848]
[77.43812561 -160.20513916]
[62.46795654 -161.15068054]
[52.44800186 -172.31314087]
[53.11814499 -187.29815674]
[64.09449768 -197.52163696]
[79.08930969 -197.12710571]
[89.51251984 -186.34146118]
[90.85075378 -201.28164673]
[92.18898773 -216.22181702]
[93.52722168 -231.16200256]
[93.30389404 -246.16035461]
[91.52142334 -261.05407715]
[89.73896027 -275.94778442]
[87.95649719 -290.84149170]
[86.17402649 -305.73522949]
[71.27509308 -308.22488403]
[57.68169022 -314.81243896]
[46.49577713 -324.96389771]
[38.62414169 -337.85629272]
[34.70490646 -352.44451904]
[35.05578232 -367.54595947]
[39.64833069 -381.93643188]
[48.11024857 -394.44931030]
[59.75556946 -404.07031250]
[73.64025879 -410.01940918]
[88.63874817 -411.81442261]
[103.53517151 -409.30981445]
[117.12194824 -402.70858765]
[128.29766846 -392.54589844]
[136.15634155 -379.64559937]
[140.06091309 -365.05343628]
[139.69487000 -349.95236206]
[135.08787537 -335.56652832]
[126.61338806 -323.06213379]
[114.95840454 -313.45285034]
[101.06774902 -307.51766968]
[102.85021210 -292.62396240]
[104.63267517 -277.73025513]
[106.41514587 -262.83651733]
[108.19760895 -247.94281006]
[114.22756958 -261.67742920]
[125.00120544 -272.11431885]
[138.92031860 -277.70523071]
[153.92007446 -277.62081909]
[167.77536011 -271.87356567]
[178.43083191 -261.31607056]
[184.30581665 -247.51445007]
[184.52877808 -232.51609802]
[179.06663513 -218.54594421]
[168.72970581 -207.67637634]
[155.05136108 -201.51982117]
[140.06074524 -200.98956299]
[125.98159027 -206.16427612]
[114.90248871 -216.27632141]
[108.46740723 -229.82377625]
[107.12917328 -214.88359070]
[105.79093933 -199.94340515]
[104.45270538 -185.00321960]
[103.78292084 -170.01818848]
[103.78292084 -155.01818848]
[103.78292084 -140.01818848]
[106.46659851 -136.06762695]
[106.69705963 -130.38925171]
[103.55294037 -124.57323456]
[103.10633087 -109.57988739]
[102.65972900 -94.58654022]
[102.21311951 -79.59318542]
[101.76651764 -64.59983826]
[101.31990814 -49.60648727]
[100.87330627 -34.61314011]
[108.22823334 -21.66114044]
[100.08348083 -8.09745502]
[99.63687897 6.89589548]
[100.19509125 21.88550568]
[101.75560760 36.80411148]
[105.57792664 43.12959290]
[103.22660828 51.95620728]
[104.56484222 66.89639282]
[105.90307617 81.83657837]
[116.95434570 91.20758820]
[118.24703217 105.63932800]
[109.03710938 116.82518768]
[110.37534332 131.76538086]
[111.71357727 146.70555115]
[114.71784973 150.97421265]
[115.68737793 155.51440430]
[114.85946655 159.50559998]
[112.76268768 162.34034729]
[113.43247223 177.32539368]
[114.10225677 192.31042480]
[114.77204132 207.29547119]
[115.44182587 222.28050232]
[123.87957764 229.14440918]
[127.08092499 239.30961609]
[124.21920776 249.34748840]
[116.47151184 256.00979614]
[116.69483948 271.00811768]
[116.91816711 286.00646973]
[118.36758423 300.93627930]
[121.03337860 315.69747925]
[123.69918060 330.45870972]
[133.76586914 342.66412354]
[128.41362000 356.56387329]
[133.01834106 364.45272827]
[131.00750732 371.56457520]
[133.45324707 386.36386108]
[135.89897156 401.16311646]
[138.34469604 415.96240234]
[140.79042053 430.76165771]
[143.23614502 445.56094360]
[145.68188477 460.36019897]
[160.71681213 460.38104248]
[175.54324341 462.87637329]
[189.75669861 467.77819824]
[202.96940613 474.95275879]
[214.82092285 484.20431519]
[224.98793030 495.28048706]
[233.19306946 507.87911987]
[239.21249390 521.65649414]
[242.88198853 536.23681641]
[244.10144043 551.22222900]
[242.83760071 566.20397949]
[239.12493896 580.77331543]
[233.06472778 594.53283691]
[224.82231140 607.10705566]
[214.62252808 618.15307617]
[202.74366760 627.36950684]
[189.50976562 634.50488281]
[175.28186035 639.36456299]
[160.44810486 641.81604004]
[145.41316223 641.79229736]
[130.58720398 639.29406738]
[116.37471008 634.38952637]
[103.16338348 627.21246338]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 187]
[14 186]
[15 185]
[16 184]
[17 183]
[18 182]
[19 181]
[20 179]
[22 177]
[23 176]
[24 175]
[36 174]
[37 173]
[38 172]
[40 168]
[41 167]
[42 166]
[43 165]
[44 164]
[45 160]
[46 159]
[47 158]
[50 155]
[51 154]
[52 153]
[53 151]
[54 150]
[64 149]
[65 148]
[67 146]
[68 145]
[69 144]
[70 143]
[71 142]
[72 141]
[73 140]
[74 137]
[75 136]
[76 135]
[83 134]
[84 133]
[85 132]
[86 131]
[87 116]
[88 115]
[89 114]
[90 113]
[91 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
