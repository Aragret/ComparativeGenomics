%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUACUCUCAUUAUCUAUCCCGAGUCCGCAAACACAUACUAUACAAACGCCAAAGCUACUACACCAGAAACCUCAUCUUUGGACACUCCUUUCCAUAAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[121.16291046 588.63500977]
[111.77484894 576.92138672]
[103.54277039 564.36840820]
[96.54121399 551.08972168]
[90.83359528 537.20562744]
[86.47159576 522.84185791]
[83.49473572 508.12850952]
[81.92996216 493.19882202]
[81.79145050 478.18795776]
[83.08045197 463.23190308]
[85.78530121 448.46612549]
[89.88149261 434.02432251]
[95.33193207 420.03726196]
[102.08726501 406.63165283]
[110.08630371 393.92889404]
[119.25660706 382.04403687]
[129.51512146 371.08465576]
[140.76896667 361.15008545]
[152.91619873 352.33023071]
[165.84680176 344.70501709]
[179.44369507 338.34347534]
[174.40678406 324.21444702]
[169.36985779 310.08541870]
[164.33294678 295.95639038]
[159.29603577 281.82736206]
[153.94483948 267.81433105]
[148.28205872 253.92430115]
[142.61927795 240.03428650]
[136.95648193 226.14425659]
[131.29370117 212.25422668]
[125.85765839 207.24710083]
[125.65170288 198.11500549]
[120.19635010 184.14219666]
[114.74098969 170.16940308]
[112.23075867 168.92164612]
[110.06353760 166.60437012]
[108.64915466 163.34324646]
[108.34443665 159.40985107]
[109.40413666 155.19902039]
[104.79013062 140.92630005]
[100.17611694 126.65355682]
[95.56211090 112.38082886]
[93.39333344 127.22321320]
[88.01898956 141.22737122]
[79.70131683 153.71000671]
[68.84613800 164.06207275]
[55.98311615 171.77845764]
[41.73985672 176.48266602]
[26.81132698 177.94517517]
[11.92591572 176.09461975]
[-2.19008017 171.02128601]
[-14.84791088 162.97273254]
[-25.42997360 152.34164429]
[-33.41994476 139.64675903]
[-38.42797852 125.50746155]
[-40.20971680 110.61365509]
[-38.67823029 95.69203949]
[-33.90824127 81.47068024]
[-26.13248825 68.64345551]
[-15.73036575 57.83624268]
[-3.20941782 49.57634735]
[10.81943035 44.26678848]
[25.67168045 42.16662979]
[40.62265778 43.37834549]
[54.94287491 47.84281158]
[67.93360901 55.34219360]
[78.96102142 65.51058960]
[87.48705292 77.85185242]
[93.09392548 91.75745392]
[83.05758667 79.84486389]
[84.40210724 64.69075775]
[95.82078552 55.19606018]
[96.93643951 40.23760605]
[90.24697876 25.90018463]
[98.90945435 13.78363705]
[100.02510834 -1.17481601]
[101.14075470 -16.13327026]
[102.25640106 -31.09172249]
[103.37205505 -46.05017471]
[104.48770142 -61.00862885]
[105.60334778 -75.96707916]
[106.71900177 -90.92553711]
[107.83464813 -105.88398743]
[108.95029449 -120.84244537]
[109.73162079 -135.82208252]
[110.17822266 -150.81542969]
[110.62483215 -165.80877686]
[102.36428070 -175.71464539]
[103.04492950 -188.19343567]
[111.75728607 -196.58518982]
[112.42707062 -211.57022095]
[113.09685516 -226.55526733]
[98.50102997 -230.23585510]
[84.94502258 -236.77952576]
[72.98395538 -245.91833496]
[63.10762405 -257.27804565]
[55.72045135 -270.39346313]
[51.12493896 -284.72756958]
[49.50927734 -299.69332886]
[50.93961716 -314.67797852]
[55.35739517 -329.06784058]
[62.58169937 -342.27368164]
[72.31670380 -353.75473022]
[84.16376495 -363.04083252]
[97.63775635 -369.75177002]
[112.18691254 -373.61270142]
[127.21547699 -374.46551514]
[142.10801697 -372.27532959]
[156.25471497 -367.13177490]
[169.07624817 -359.24551392]
[180.04760742 -348.93948364]
[188.71949768 -336.63571167]
[194.73683167 -322.83798218]
[197.85317993 -308.11138916]
[197.94096375 -293.05889893]
[194.99656677 -278.29693604]
[189.14054871 -264.42999268]
[180.61273193 -252.02592468]
[169.76231384 -241.59263611]
[157.03363037 -233.55738831]
[142.94787598 -228.24922180]
[128.08189392 -225.88548279]
[127.41210938 -210.90043640]
[126.74232483 -195.91540527]
[135.65693665 -180.79930115]
[125.61817932 -165.36216736]
[125.17157745 -150.36882019]
[124.72496796 -135.37547302]
[126.86372375 -132.57225037]
[127.75096130 -128.59382629]
[126.84913635 -124.03970337]
[123.90875244 -119.72679138]
[122.79309845 -104.76834106]
[121.67745209 -89.80989075]
[120.56180573 -74.85143280]
[119.44615173 -59.89298248]
[118.33050537 -44.93452835]
[117.21485901 -29.97607422]
[116.09920502 -15.01762104]
[114.98355865 -0.05916731]
[113.86791229 14.89928627]
[120.63716888 28.16678047]
[111.89488983 41.35325623]
[110.77924347 56.31171036]
[120.66313934 67.39521790]
[119.74479675 82.58110809]
[108.05237579 92.87310028]
[109.83484650 107.76681519]
[114.44885254 122.03955078]
[119.06285858 136.31228638]
[123.67687225 150.58502197]
[128.71379089 164.71405029]
[134.16914368 178.68684387]
[139.62449646 192.65963745]
[145.18373108 206.59144592]
[150.84651184 220.48146057]
[156.50930786 234.37149048]
[162.17208862 248.26152039]
[167.83486938 262.15155029]
[171.95935059 265.35089111]
[174.21830750 269.40679932]
[174.59783936 273.46524048]
[173.42506409 276.79043579]
[178.46197510 290.91946411]
[183.49890137 305.04849243]
[188.53581238 319.17752075]
[193.57272339 333.30654907]
[208.12757874 329.63217163]
[222.96578979 327.35797119]
[237.95300293 326.50454712]
[252.95347595 327.07962036]
[267.83135986 329.07800293]
[282.45190430 332.48156738]
[296.68270874 337.25952148]
[310.39489746 343.36859131]
[323.46429443 350.75341797]
[335.77252197 359.34713745]
[347.20812988 369.07196045]
[357.66751099 379.83975220]
[367.05599976 391.55303955]
[375.28854370 404.10574341]
[382.29058838 417.38415527]
[387.99871826 431.26800537]
[392.36123657 445.63162231]
[395.33862305 460.34487915]
[396.90396118 475.27453613]
[397.04299927 490.28536987]
[395.75454712 505.24145508]
[393.05023193 520.00738525]
[388.95458984 534.44934082]
[383.50463867 548.43658447]
[376.74981689 561.84240723]
[368.75122070 574.54547119]
[359.58135986 586.43066406]
[349.32324219 597.39038086]
[338.06976318 607.32537842]
[325.92285156 616.14569092]
[312.99252319 623.77136230]
[299.39587402 630.13342285]
[285.25601196 635.17419434]
[270.70101929 638.84802246]
[255.86273193 641.12170410]
[240.87548828 641.97460938]
[225.87504578 641.39898682]
[210.99723816 639.40002441]
[196.37681580 635.99591064]
[182.14617920 631.21746826]
[168.43420410 625.10791016]
[155.36508179 617.72259521]
[143.05717468 609.12841797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 167]
[22 166]
[23 165]
[24 164]
[25 163]
[26 159]
[27 158]
[28 157]
[29 156]
[30 155]
[32 154]
[33 153]
[34 152]
[39 151]
[40 150]
[41 149]
[42 148]
[69 147]
[72 144]
[73 143]
[75 141]
[76 140]
[77 139]
[78 138]
[79 137]
[80 136]
[81 135]
[82 134]
[83 133]
[84 132]
[85 128]
[86 127]
[87 126]
[90 124]
[91 123]
[92 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
