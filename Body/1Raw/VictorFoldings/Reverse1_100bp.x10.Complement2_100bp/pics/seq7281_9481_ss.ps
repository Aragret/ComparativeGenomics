%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[185.00859070 658.10937500]
[184.37057495 643.10693359]
[185.41635132 628.12738037]
[188.13275146 613.35913086]
[192.48562622 598.98791504]
[198.42022705 585.19439697]
[205.86190796 572.15216064]
[214.71711731 560.02508545]
[224.87445068 548.96575928]
[236.20620728 539.11328125]
[248.56983948 530.59155273]
[241.49273682 517.36596680]
[234.41563416 504.14047241]
[227.33853149 490.91494751]
[220.26141357 477.68942261]
[213.18431091 464.46389771]
[206.10720825 451.23837280]
[199.03010559 438.01281738]
[197.81042480 452.96316528]
[190.29962158 465.94729614]
[177.94793701 474.45822144]
[163.14027405 476.85260010]
[148.73576355 472.66812134]
[137.51568604 462.71270752]
[131.64645386 448.90866089]
[132.26135254 433.92126465]
[139.24163818 420.64437866]
[151.23951721 411.64154053]
[165.93840027 408.65109253]
[180.50016785 412.25042725]
[192.11393738 421.74554443]
[187.49992371 407.47283936]
[182.88592529 393.20010376]
[178.27191162 378.92736816]
[164.45098877 377.72296143]
[152.09402466 371.32165527]
[143.08181763 360.66052246]
[138.80024719 347.32791138]
[139.92718506 333.32662964]
[146.32539368 320.77325439]
[157.05830383 311.57809448]
[152.65730286 297.23822021]
[148.25630188 282.89837646]
[144.53164673 279.90908813]
[142.64529419 274.54824829]
[143.94462585 268.06570435]
[139.97251892 253.60118103]
[136.00042725 239.13665771]
[132.02833557 224.67213440]
[128.05622864 210.20761108]
[124.08413696 195.74308777]
[119.68313599 181.40322876]
[114.85713959 167.20077515]
[110.03114319 152.99832153]
[105.20514679 138.79586792]
[100.37915039 124.59341431]
[95.55315399 110.39095306]
[89.83580780 124.25861359]
[77.11997223 132.21522522]
[62.14834213 131.29315186]
[50.50495911 121.83632660]
[46.53252029 107.37190247]
[51.71264267 93.29474640]
[64.11327362 84.85529327]
[79.10928345 85.20125580]
[91.10820770 94.20454407]
[88.00409698 79.52924347]
[83.16654205 71.78096008]
[84.96473694 64.61240387]
[82.07946014 49.89250946]
[79.19419098 35.17261887]
[76.30891418 20.45272636]
[73.42364502 5.73283577]
[65.90482330 18.71233368]
[52.23997498 24.89876366]
[37.52574921 21.98474121]
[27.25018692 11.05712318]
[25.24582100 -3.80835724]
[32.26022720 -17.06724358]
[45.67720795 -23.77430153]
[60.49256134 -21.42796135]
[71.18106842 -10.90231609]
[70.06542206 -25.86076927]
[60.81913757 -34.85349274]
[60.19786072 -47.33539200]
[67.98990631 -56.58798981]
[67.09709167 -71.56139374]
[66.20427704 -86.53479767]
[65.31146240 -101.50820923]
[61.67681122 -109.88836670]
[64.51850891 -116.71087646]
[55.54407120 -125.97490692]
[55.29470062 -138.46977234]
[63.35877991 -147.48626709]
[62.91217422 -162.47961426]
[62.46556854 -177.47296143]
[48.06555176 -182.20744324]
[36.15516663 -191.58393860]
[28.17265511 -204.47018433]
[25.08194160 -219.31010437]
[27.25624466 -234.31170654]
[34.43300629 -247.66348267]
[45.74560165 -257.75314331]
[59.82797241 -263.36227417]
[74.97961426 -263.81359863]
[89.37088013 -259.05261230]
[101.26396179 -249.65417480]
[109.22270966 -236.75323486]
[112.28607178 -221.90765381]
[110.08412933 -206.91007996]
[102.88277435 -193.57154846]
[91.55160522 -183.50276184]
[77.45891571 -177.91957092]
[77.90552521 -162.92622375]
[78.35212708 -147.93287659]
[88.36634064 -133.52168274]
[79.50354767 -117.38066101]
[80.28486633 -102.40102386]
[81.17768097 -87.42761993]
[82.07049561 -72.45420837]
[82.96331787 -57.48080444]
[93.40216064 -43.37415695]
[85.02387238 -26.97641754]
[86.13951874 -12.01796532]
[88.14353943 2.84756303]
[91.02880859 17.56745529]
[93.91407776 32.28734589]
[96.79935455 47.00723648]
[99.68462372 61.72712708]
[102.67939758 76.42513275]
[105.78350830 91.10043335]
[109.75560760 105.56495667]
[114.58160400 119.76741791]
[119.40760040 133.96986389]
[124.23359680 148.17233276]
[129.05960083 162.37478638]
[133.88558960 176.57723999]
[137.25088501 179.32109070]
[139.35624695 182.65756226]
[140.17010498 186.11776733]
[139.81637573 189.27078247]
[138.54866028 191.77098083]
[142.52075195 206.23550415]
[146.49285889 220.70002747]
[150.46495056 235.16455078]
[154.43704224 249.62907410]
[158.40914917 264.09359741]
[162.59616089 278.49737549]
[166.99714661 292.83724976]
[171.39814758 307.17709351]
[187.50276184 309.49557495]
[200.93598938 318.57260132]
[209.03686523 332.54885864]
[210.22750854 348.60083008]
[204.32014465 363.51113892]
[192.54464722 374.31335449]
[197.15864563 388.58609009]
[201.77265930 402.85882568]
[206.38667297 417.13156128]
[212.25563049 430.93572998]
[219.33273315 444.16125488]
[226.40983582 457.38677979]
[233.48695374 470.61230469]
[240.56405640 483.83782959]
[247.64115906 497.06335449]
[254.71826172 510.28887939]
[261.79537964 523.51440430]
[275.74465942 517.95587158]
[290.22860718 513.99414062]
[305.06506348 511.67904663]
[320.06744385 511.03967285]
[335.04705811 512.08410645]
[349.81555176 514.79919434]
[364.18716431 519.15075684]
[377.98120117 525.08410645]
[391.02416992 532.52465820]
[403.15200806 541.37878418]
[414.21224976 551.53509521]
[424.06573486 562.86596680]
[432.58859253 575.22882080]
[439.67364502 588.46826172]
[445.23178101 602.41772461]
[449.19308472 616.90179443]
[451.50775146 631.73828125]
[452.14663696 646.74072266]
[451.10177612 661.72027588]
[448.38626099 676.48870850]
[444.03424072 690.86022949]
[438.10046387 704.65405273]
[430.65954590 717.69677734]
[421.80508423 729.82434082]
[411.64840698 740.88427734]
[400.31726074 750.73742676]
[387.95410156 759.25994873]
[374.71447754 766.34460449]
[360.76486206 771.90228271]
[346.28067017 775.86315918]
[331.44409180 778.17736816]
[316.44168091 778.81585693]
[301.46212769 777.77050781]
[286.69378662 775.05456543]
[272.32241821 770.70214844]
[258.52874756 764.76794434]
[245.48623657 757.32666016]
[233.35891724 748.47180176]
[222.29930115 738.31481934]
[212.44647217 726.98333740]
[203.92434692 714.61993408]
[196.84008789 701.38012695]
[191.28280640 687.43035889]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 167]
[12 166]
[13 165]
[14 164]
[15 163]
[16 162]
[17 161]
[18 160]
[31 159]
[32 158]
[33 157]
[34 156]
[41 150]
[42 149]
[43 148]
[46 147]
[47 146]
[48 145]
[49 144]
[50 143]
[51 142]
[52 137]
[53 136]
[54 135]
[55 134]
[56 133]
[57 132]
[66 131]
[67 130]
[69 129]
[70 128]
[71 127]
[72 126]
[73 125]
[82 124]
[83 123]
[86 121]
[87 120]
[88 119]
[89 118]
[91 117]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
