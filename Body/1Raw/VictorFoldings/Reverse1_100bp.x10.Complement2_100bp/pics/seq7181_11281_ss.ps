%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[23.50812531 758.03179932]
[9.09965706 762.25079346]
[-5.66625261 764.96594238]
[-20.63307571 766.14843750]
[-35.64215469 765.78570557]
[-50.53438568 763.88165283]
[-65.15190125 760.45642090]
[-79.33975220 755.54632568]
[-92.94753265 749.20343018]
[-105.83100128 741.49493408]
[-117.85357666 732.50262451]
[-128.88781738 722.32177734]
[-138.81675720 711.06036377]
[-147.53514099 698.83764648]
[-154.95053101 685.78332520]
[-160.98435974 672.03570557]
[-165.57263184 657.74053955]
[-168.66671753 643.04937744]
[-170.23382568 628.11791992]
[-170.25733948 613.10449219]
[-168.73701477 598.16821289]
[-165.68894958 583.46740723]
[-161.14547729 569.15789795]
[-155.15473938 555.39147949]
[-147.78025818 542.31396484]
[-139.10020447 530.06402588]
[-129.20658875 518.77154541]
[-118.20429230 508.55621338]
[-106.20994568 499.52627563]
[-93.35068512 491.77749634]
[-79.76284027 485.39202881]
[-65.59043884 480.43750000]
[-50.98371887 476.96652222]
[-36.09752274 475.01580811]
[-21.08965492 474.60607910]
[-6.11920166 475.74166870]
[-3.45340610 460.98046875]
[-0.78761071 446.21923828]
[1.87818480 431.45800781]
[4.54398012 416.69680786]
[-0.80826414 402.79705811]
[9.25842953 390.59164429]
[11.92422485 375.83041382]
[-0.34827471 384.45513916]
[-15.30363655 383.29879761]
[-26.10447121 372.89004517]
[-27.81278229 357.98764038]
[-19.64755249 345.40475464]
[-5.34181452 340.89413452]
[8.56403923 346.51794434]
[15.71272182 359.70687866]
[19.89973259 345.30310059]
[24.08674431 330.89932251]
[28.27375603 316.49554443]
[32.46076584 302.09176636]
[22.05463982 291.43444824]
[18.35552597 276.90267944]
[22.45391846 262.37445068]
[33.34551239 251.77870178]
[48.17506790 248.03282166]
[52.36207962 233.62904358]
[56.54909134 219.22526550]
[55.39761353 211.92485046]
[60.90715027 204.63905334]
[65.30814362 190.29920959]
[69.70914459 175.95936584]
[74.11014557 161.61952209]
[69.26494598 144.75265503]
[82.84960938 132.32130432]
[87.03662109 117.91752625]
[91.22363281 103.51374054]
[89.80361938 98.46423340]
[91.31384277 92.97856903]
[95.75567627 88.74689484]
[100.36968994 74.47416687]
[97.25246429 58.96308899]
[108.52954865 49.23288727]
[113.14355469 34.96015549]
[117.75756073 20.68742180]
[120.97084045 6.03563452]
[122.75330353 -8.85808277]
[124.53576660 -23.75180054]
[126.31823730 -38.64551926]
[128.10070801 -53.53923416]
[122.05811310 -68.16105652]
[131.25299072 -79.87871552]
[125.21039581 -94.50054169]
[134.40527344 -106.21820068]
[136.18772888 -121.11192322]
[137.97019958 -136.00563049]
[139.75267029 -150.89935303]
[141.53512573 -165.79307556]
[143.31759644 -180.68678284]
[145.10006714 -195.58050537]
[137.75621033 -206.18383789]
[139.54745483 -218.55215454]
[148.97373962 -226.13314819]
[150.97775269 -240.99868774]
[136.99858093 -246.65849304]
[124.86660767 -255.61763000]
[115.34446716 -267.31289673]
[109.03073120 -281.00918579]
[106.32228851 -295.84545898]
[107.38938141 -310.88912964]
[112.16494751 -325.19454956]
[120.34878540 -337.86242676]
[131.42645264 -348.09649658]
[144.70158386 -355.25341797]
[159.33970642 -358.88330078]
[174.42066956 -358.75796509]
[188.99644470 -354.88531494]
[202.15078735 -347.50872803]
[213.05682373 -337.09194946]
[221.02899170 -324.28979492]
[225.56613159 -309.90698242]
[226.38305664 -294.84765625]
[223.42839050 -280.05844116]
[216.88789368 -266.46899414]
[207.17269897 -254.93359375]
[194.89349365 -246.17733765]
[180.82217407 -240.75065613]
[165.84327698 -238.99467468]
[163.83926392 -224.12913513]
[171.36973572 -208.27799988]
[159.99378967 -193.79803467]
[158.21131897 -178.90432739]
[156.42884827 -164.01060486]
[154.64637756 -149.11688232]
[152.86392212 -134.22317505]
[151.08145142 -119.32945251]
[149.29898071 -104.43573761]
[155.46907043 -90.87921143]
[146.14669800 -78.09625244]
[152.31678772 -64.53972626]
[142.99441528 -51.75676727]
[141.21195984 -36.86305237]
[139.42948914 -21.96933365]
[137.64701843 -7.07561684]
[135.86454773 7.81810045]
[145.17997742 -3.93872714]
[158.43400574 -10.96229553]
[173.39312744 -12.06901169]
[187.53645325 -7.07237291]
[198.48057556 3.18559885]
[204.38124084 16.97625542]
[204.24406433 31.97562790]
[198.09217834 45.65605927]
[186.96226501 55.71215820]
[172.72991943 60.44929123]
[157.79354858 59.06917191]
[144.67018127 51.80437469]
[135.57135010 39.87914276]
[132.03030396 25.30143166]
[127.41629028 39.57416534]
[122.80227661 53.84689713]
[126.24952698 68.33709717]
[114.64241791 79.08817291]
[110.02841187 93.36090851]
[105.62741089 107.70075226]
[101.44039917 122.10453796]
[97.25338745 136.50831604]
[102.77011108 148.16716003]
[98.98620605 160.07791138]
[88.44998932 166.02052307]
[84.04899597 180.36036682]
[79.64799500 194.70021057]
[75.24699402 209.04005432]
[70.95287323 223.41227722]
[66.76586151 237.81605530]
[62.57884979 252.21983337]
[73.08940887 263.33178711]
[76.60359955 278.11514282]
[72.27506256 292.57644653]
[61.36222076 302.86071777]
[46.86454773 306.27877808]
[42.67753601 320.68255615]
[38.49052429 335.08633423]
[34.30351639 349.49011230]
[30.11650276 363.89389038]
[26.68544197 378.49621582]
[24.01964760 393.25744629]
[29.18121529 408.21301270]
[19.30519676 419.36260986]
[16.63940239 434.12380981]
[13.97360611 448.88504028]
[11.30781078 463.64624023]
[8.64201546 478.40747070]
[23.06401443 482.57998657]
[36.98054123 488.21331787]
[50.24407959 495.24771118]
[62.71401978 503.60861206]
[74.25817871 513.20739746]
[84.75418091 523.94226074]
[94.09075928 535.69946289]
[102.16894531 548.35443115]
[108.90310669 561.77288818]
[114.22185516 575.81262207]
[118.06880951 590.32489014]
[120.40319061 605.15576172]
[121.20024872 620.14801025]
[120.45153809 635.14282227]
[118.16499329 649.98114014]
[114.36485291 664.50567627]
[109.09140778 678.56256104]
[102.40055084 692.00262451]
[94.36321259 704.68353271]
[85.06459045 716.47082520]
[74.60326385 727.23950195]
[63.09011459 736.87542725]
[50.64720154 745.27648926]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 187]
[37 186]
[38 185]
[39 184]
[40 183]
[42 181]
[43 180]
[51 179]
[52 178]
[53 177]
[54 176]
[55 175]
[60 170]
[61 169]
[62 168]
[64 167]
[65 166]
[66 165]
[67 164]
[69 161]
[70 160]
[71 159]
[74 158]
[75 157]
[77 155]
[78 154]
[79 153]
[80 139]
[81 138]
[82 137]
[83 136]
[84 135]
[86 133]
[88 131]
[89 130]
[90 129]
[91 128]
[92 127]
[93 126]
[94 125]
[97 123]
[98 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
