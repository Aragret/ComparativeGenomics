%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[-15.76748180 590.55908203]
[-12.11875629 605.15362549]
[-11.21414089 620.17016602]
[-13.08444595 635.09722900]
[-17.66596985 649.42639160]
[-24.80266571 662.66955566]
[-34.25146484 674.37573242]
[-45.69054031 684.14624023]
[-58.73028183 691.64819336]
[-72.92655945 696.62615967]
[-87.79586029 698.91058350]
[-102.83173370 698.42364502]
[-117.52207184 695.18194580]
[-131.36651611 689.29589844]
[-143.89353943 680.96588135]
[-154.67646790 670.47576904]
[-163.34805298 658.18273926]
[-169.61291504 644.50555420]
[-173.25772095 629.90997314]
[-174.15827942 614.89318848]
[-172.28395081 599.96667480]
[-167.69856262 585.63873291]
[-160.55830383 572.39746094]
[-151.10635376 560.69384766]
[-139.66464233 550.92645264]
[-126.62287140 543.42797852]
[-112.42525482 538.45385742]
[-97.55533600 536.17340088]
[-82.51959229 536.66442871]
[-67.83013153 539.91009521]
[-61.96117401 526.10589600]
[-56.09221268 512.30175781]
[-50.22325134 498.49755859]
[-59.13744354 488.15084839]
[-62.74131012 474.90921021]
[-60.27653885 461.34182739]
[-52.16805267 450.10659790]
[-39.95200729 443.42944336]
[-25.98504257 442.66345215]
[-19.91120911 428.94818115]
[-13.83737469 415.23291016]
[-7.76354074 401.51763916]
[-9.68459415 386.74743652]
[2.97801185 377.26226807]
[8.22473049 363.20977783]
[12.62572765 348.86993408]
[17.02672577 334.53009033]
[15.98406792 327.21334839]
[21.60146904 320.01037598]
[26.21547699 305.73767090]
[30.82948685 291.46493530]
[35.44349670 277.19219971]
[40.05750656 262.91946411]
[44.67151642 248.64672852]
[49.28552246 234.37399292]
[53.89953232 220.10125732]
[58.51354218 205.82852173]
[53.92000580 188.89138794]
[67.68824768 176.66368103]
[72.08924103 162.32382202]
[71.04658508 155.00709534]
[76.66398621 147.80413818]
[81.27799225 133.53140259]
[85.89200592 119.25866699]
[77.28623962 107.34960175]
[77.28424072 92.65657806]
[85.88676453 80.74517059]
[99.83525848 76.12732697]
[104.44927216 61.85459518]
[109.06327820 47.58185959]
[108.72531891 38.45368576]
[113.85369110 33.13188171]
[118.67968750 18.92942619]
[117.76850891 12.38104630]
[119.97060394 7.14197922]
[123.86659241 4.37967682]
[129.11331177 -9.67279434]
[134.36003113 -23.72526550]
[139.60675049 -37.77773666]
[137.18524170 -53.41253281]
[148.88554382 -62.62947845]
[146.46403503 -78.26427460]
[158.16435242 -87.48122406]
[163.41107178 -101.53369141]
[165.41508484 -116.39922333]
[164.07684326 -131.33940125]
[162.73861694 -146.27958679]
[161.40037537 -161.21977234]
[160.06214905 -176.15995789]
[158.61273193 -191.08976746]
[157.05220032 -206.00837708]
[155.49168396 -220.92698669]
[140.65910339 -223.84007263]
[127.34493256 -230.99717712]
[116.73305511 -241.76191711]
[109.76706696 -255.17706299]
[107.06638336 -270.04977417]
[108.87115479 -285.05758667]
[115.02088928 -298.86599731]
[124.96875763 -310.24719238]
[137.83021545 -318.18911743]
[152.46160889 -321.98562622]
[167.56195068 -321.29913330]
[181.78851318 -316.19067383]
[193.87626648 -307.11447144]
[202.75041199 -294.87759399]
[207.62182617 -280.56814575]
[208.05737305 -265.45846558]
[204.01832581 -250.89216614]
[195.86381531 -238.16442871]
[184.31895447 -228.40699768]
[170.41027832 -222.48750305]
[171.97080994 -207.56889343]
[173.53132629 -192.65029907]
[177.35363770 -186.32481384]
[175.00233459 -177.49819946]
[176.34056091 -162.55801392]
[177.67880249 -147.61782837]
[179.01702881 -132.67764282]
[180.35527039 -117.73745728]
[185.79051208 -131.71809387]
[193.81471252 -144.39137268]
[204.12786865 -155.28352356]
[216.34440613 -163.98731995]
[230.00761414 -170.17736816]
[244.60668945 -173.62223816]
[259.59582520 -174.19314575]
[274.41464233 -171.86875916]
[288.50912476 -166.73596191]
[301.35232544 -158.98666382]
[312.46414185 -148.91055298]
[321.42910767 -136.88435364]
[327.91207886 -123.35767365]
[331.67065430 -108.83621216]
[332.56436157 -93.86285400]
[330.55975342 -78.99740601]
[325.73181152 -64.79561615]
[318.26098633 -51.78842926]
[308.42660522 -40.46213150]
[296.59634399 -31.24015808]
[283.21246338 -24.46728706]
[268.77536011 -20.39672089]
[253.82472229 -19.18064499]
[238.91954041 -20.86452103]
[224.61703491 -25.38539696]
[211.45191956 -32.57425690]
[199.91636658 -42.16233826]
[190.44168091 -53.79118729]
[183.38203430 -67.02604675]
[179.00138855 -81.37212372]
[177.46353149 -96.28697968]
[172.21681213 -82.23450470]
[175.01361084 -67.60483551]
[162.93801880 -57.38276291]
[165.73480225 -42.75308990]
[153.65921021 -32.53101730]
[148.41249084 -18.47854805]
[143.16578674 -4.42607594]
[137.91906738 9.62639523]
[132.88214111 23.75542450]
[128.05615234 37.95788193]
[123.33601379 52.19586945]
[118.72200775 66.46860504]
[114.10799408 80.74133301]
[122.71376038 92.65039825]
[122.71575928 107.34342194]
[114.11323547 119.25482941]
[100.16474152 123.87267303]
[95.55072784 138.14540100]
[90.93672180 152.41813660]
[86.42909241 166.72482300]
[82.02809143 181.06466675]
[87.37062073 192.80435181]
[83.40980530 204.65744019]
[72.78627777 210.44253540]
[68.17226410 224.71527100]
[63.55825806 238.98799133]
[58.94424820 253.26072693]
[54.33023834 267.53347778]
[49.71622849 281.80621338]
[45.10221863 296.07891846]
[40.48821259 310.35165405]
[35.87420273 324.62438965]
[31.36657333 338.93109131]
[26.96557617 353.27093506]
[22.56457710 367.61077881]
[35.31775284 359.71417236]
[50.28487396 360.70675659]
[61.88357925 370.21832275]
[65.78783417 384.70129395]
[60.54145050 398.75390625]
[48.10120010 407.13485718]
[33.10698700 406.71823120]
[21.15128136 397.65948486]
[16.69327927 383.33609009]
[18.17989159 399.08728027]
[5.95172596 407.59149170]
[-0.12210819 421.30676270]
[-6.19594193 435.02203369]
[-12.26977634 448.73727417]
[-2.38730764 461.99356079]
[-0.54903573 478.33111572]
[-7.16259098 493.28030396]
[-20.33629036 502.79919434]
[-36.41907501 504.36651611]
[-42.28803635 518.17071533]
[-48.15699768 531.97485352]
[-54.02595901 545.77905273]
[-41.49669266 554.10565186]
[-30.71093369 564.59289551]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 208]
[31 207]
[32 206]
[33 205]
[39 200]
[40 199]
[41 198]
[42 197]
[44 195]
[45 186]
[46 185]
[47 184]
[49 183]
[50 182]
[51 181]
[52 180]
[53 179]
[54 178]
[55 177]
[56 176]
[57 175]
[59 172]
[60 171]
[62 170]
[63 169]
[64 168]
[68 164]
[69 163]
[70 162]
[72 161]
[73 160]
[76 159]
[77 158]
[78 157]
[79 156]
[81 154]
[83 152]
[84 151]
[85 120]
[86 119]
[87 118]
[88 117]
[89 116]
[90 114]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
