%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[77.58139038 797.38269043]
[62.69086075 795.50158691]
[48.00996399 792.38104248]
[33.64167786 788.04296875]
[19.68678856 782.51776123]
[6.24318123 775.84423828]
[-6.59484673 768.06921387]
[-18.73724365 759.24713135]
[-30.09883881 749.43994141]
[-40.59993362 738.71649170]
[-50.16687775 727.15185547]
[-58.73255539 714.82727051]
[-66.23689270 701.82910156]
[-72.62724304 688.24859619]
[-77.85877991 674.18103027]
[-81.89482117 659.72497559]
[-84.70703888 644.98193359]
[-86.27572632 630.05523682]
[-86.58986664 615.04962158]
[-85.64725494 600.07037354]
[-83.45451355 585.22253418]
[-80.02700806 570.61029053]
[-75.38880157 556.33605957]
[-69.57241058 542.50000000]
[-62.61863708 529.19915771]
[-54.57626343 516.52691650]
[-45.50169754 504.57202148]
[-35.45859146 493.41845703]
[-24.51739311 483.14437866]
[-12.75484753 473.82186890]
[-0.25346351 465.51632690]
[12.89907074 458.28601074]
[26.61049843 452.18164062]
[40.78464127 447.24603271]
[55.32207870 443.51382446]
[70.12083435 441.01113892]
[85.07711029 439.75558472]
[85.07711029 424.75558472]
[85.07711029 409.75558472]
[85.07711029 394.75558472]
[85.07711029 379.75558472]
[85.07711029 364.75558472]
[85.07711029 349.75558472]
[85.07711029 334.75558472]
[74.53275299 345.42407227]
[59.60995865 346.94400024]
[47.13122177 338.62048340]
[42.80165482 324.25891113]
[48.60067749 310.42520142]
[61.87705231 303.44393921]
[76.56100464 306.50689697]
[85.93982697 318.21545410]
[87.50035095 303.29684448]
[89.06087494 288.37823486]
[90.62139130 273.45962524]
[92.18191528 258.54101562]
[93.29756927 243.58256531]
[93.96735382 228.59753418]
[94.19068146 213.59919739]
[93.96735382 198.60084534]
[93.74402618 183.60250854]
[80.66902161 176.46739197]
[72.86908722 163.66049194]
[72.52452087 148.56918335]
[79.82798767 135.24415588]
[92.90585327 127.31214905]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[92.09580994 72.91117859]
[91.87248230 57.91284180]
[91.53750610 42.91658401]
[91.09090424 27.92323303]
[90.64429474 12.92988300]
[87.26076508 4.44521761]
[90.30432892 -2.28965425]
[90.08100128 -17.28799248]
[89.85767365 -32.28632736]
[89.63434601 -47.28466797]
[89.41101837 -62.28300476]
[81.46911621 -75.96644592]
[89.01606750 -88.80751038]
[78.63172150 -77.98321533]
[63.73320770 -76.24127960]
[51.13193130 -84.37809753]
[46.58901978 -98.67362213]
[52.18143463 -112.59213257]
[65.35240173 -119.77027130]
[80.08032227 -116.92629242]
[89.63243103 -105.35868073]
[90.97066498 -120.29886627]
[92.30889893 -135.23904419]
[93.64713287 -150.17922974]
[94.87410736 -165.12896729]
[95.98975372 -180.08741760]
[97.10540771 -195.04586792]
[82.81413269 -199.86358643]
[70.17041779 -208.08473206]
[59.96904373 -219.19252014]
[52.85128784 -232.48869324]
[49.26457214 -247.13746643]
[49.43436432 -262.21798706]
[53.34999084 -276.78225708]
[60.76530838 -289.91482544]
[71.21418762 -300.79010010]
[84.03980255 -308.72448730]
[98.43592072 -313.21920776]
[113.49759674 -313.99172974]
[128.27803040 -310.99349976]
[141.84812927 -304.41296387]
[153.35484314 -294.66378784]
[162.07487488 -282.35882568]
[167.46005249 -268.27157593]
[169.17185974 -253.28758240]
[167.10272217 -238.34872437]
[161.38267517 -224.39408875]
[152.37129211 -212.30087280]
[140.63504028 -202.82925415]
[126.91168213 -196.57466125]
[112.06385803 -193.93022156]
[110.94821167 -178.97177124]
[109.83256531 -164.01332092]
[112.46986389 -157.10923767]
[108.58731842 -148.84100342]
[107.24908447 -133.90081787]
[105.91085052 -118.96063232]
[104.57261658 -104.02044678]
[104.01440430 -89.03083801]
[111.94033813 -76.42017365]
[104.40935516 -62.50633240]
[104.63268280 -47.50799561]
[104.85601807 -32.50965500]
[105.07934570 -17.51132011]
[105.30267334 -2.51298189]
[105.63764954 12.48327732]
[106.08425140 27.47662735]
[106.53086090 42.46997833]
[109.87211609 49.06222916]
[106.87081909 57.68951416]
[107.09414673 72.68785095]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[107.90419006 127.08882141]
[121.21241760 134.62792969]
[128.90937805 147.72959900]
[129.01429749 162.82447815]
[121.59912872 175.85794067]
[108.74236298 183.37918091]
[108.96569061 198.37751770]
[109.18901825 213.37586975]
[111.54713440 217.02185059]
[112.52412415 220.84416199]
[112.23415375 224.38694763]
[110.92770386 227.27827454]
[108.95239258 229.26731873]
[108.28260803 244.25234985]
[110.41952515 248.03224182]
[111.16728210 251.90591431]
[110.66695404 255.42515564]
[109.19072723 258.23361206]
[107.10052490 260.10153198]
[105.54000092 275.02014160]
[103.97947693 289.93875122]
[102.41895294 304.85736084]
[100.85842896 319.77597046]
[100.07711029 334.75558472]
[100.07711029 349.75558472]
[100.07711029 364.75558472]
[100.07711029 379.75558472]
[100.07711029 394.75558472]
[100.07711029 409.75558472]
[100.07711029 424.75558472]
[100.07711029 439.75558472]
[115.03338623 441.01113892]
[129.83213806 443.51382446]
[144.36956787 447.24603271]
[158.54371643 452.18164062]
[172.25514221 458.28601074]
[185.40768433 465.51632690]
[197.90905762 473.82186890]
[209.67161560 483.14437866]
[220.61280823 493.41845703]
[230.65591431 504.57202148]
[239.73048401 516.52691650]
[247.77285767 529.19915771]
[254.72662354 542.50000000]
[260.54302979 556.33605957]
[265.18121338 570.61029053]
[268.60873413 585.22253418]
[270.80148315 600.07037354]
[271.74407959 615.04962158]
[271.42993164 630.05523682]
[269.86126709 644.98193359]
[267.04904175 659.72497559]
[263.01300049 674.18103027]
[257.78146362 688.24859619]
[251.39111328 701.82910156]
[243.88677979 714.82727051]
[235.32109070 727.15185547]
[225.75415039 738.71649170]
[215.25305176 749.43994141]
[203.89146423 759.24713135]
[191.74906921 768.06921387]
[178.91104126 775.84423828]
[165.46742249 782.51776123]
[151.51254272 788.04296875]
[137.14425659 792.38104248]
[122.46335602 795.50158691]
[107.57282257 797.38269043]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 174]
[38 173]
[39 172]
[40 171]
[41 170]
[42 169]
[43 168]
[44 167]
[52 166]
[53 165]
[54 164]
[55 163]
[56 162]
[57 157]
[58 156]
[59 151]
[60 150]
[61 149]
[66 144]
[67 143]
[69 141]
[70 140]
[71 139]
[72 137]
[73 136]
[74 135]
[76 134]
[77 133]
[78 132]
[79 131]
[80 130]
[82 128]
[90 127]
[91 126]
[92 125]
[93 124]
[94 122]
[95 121]
[96 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
