%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[153.12585449 616.70880127]
[161.91777039 604.48114014]
[173.13304138 594.42962646]
[186.24708557 587.02453613]
[181.84608459 572.68469238]
[177.44508362 558.34484863]
[164.20707703 551.61499023]
[159.53956604 537.13507080]
[166.68818665 523.29547119]
[162.28718567 508.95559692]
[157.88618469 494.61575317]
[144.41329956 483.37084961]
[148.68545532 465.45910645]
[144.07144165 451.18637085]
[139.45742798 436.91363525]
[129.39698792 434.87438965]
[121.02535248 428.79565430]
[115.89249420 419.72006226]
[114.98294067 409.25219727]
[118.52758026 399.27508545]
[125.94998169 391.61141968]
[121.97789001 377.14691162]
[118.00579071 362.68237305]
[114.03369141 348.21783447]
[110.06159973 333.75332642]
[106.08950043 319.28878784]
[102.11740875 304.82427979]
[91.28604889 294.60025024]
[95.09276581 279.24383545]
[91.85060883 293.88925171]
[84.29569244 306.84774780]
[73.14810181 316.88424683]
[59.47034836 323.04211426]
[44.56611252 324.73437500]
[29.85597420 321.79980469]
[16.74200630 314.51803589]
[6.47414970 303.58319092]
[0.03107114 290.03744507]
[-1.97311616 275.17196655]
[0.65261400 260.40356445]
[7.65799379 247.13989258]
[18.37531471 236.64518738]
[31.78307152 229.91970825]
[46.60332108 227.60449219]
[61.42348862 229.92021179]
[74.83101654 236.64614868]
[85.54798126 247.14122009]
[92.55327606 260.40618896]
[84.81597900 247.67892456]
[92.55327606 233.87875366]
[92.55327606 218.87875366]
[92.55327606 203.87875366]
[92.55327606 188.87875366]
[84.81597900 176.15147400]
[92.55327606 162.35130310]
[92.55327606 147.35130310]
[84.81597900 134.62403870]
[92.55327606 120.82386017]
[92.55327606 105.82386017]
[89.78022003 101.37143707]
[89.69917297 95.68225861]
[92.78325653 90.37892151]
[93.22985840 75.38556671]
[84.12773895 59.37829590]
[93.92626953 44.81959915]
[94.14959717 29.82126236]
[94.37292480 14.82292557]
[94.14959717 -0.17541192]
[85.80381012 -13.61633110]
[92.96508789 -26.67639732]
[92.29530334 -41.66143799]
[91.62551880 -56.64647675]
[90.95573425 -71.63151550]
[81.59470367 -59.91096878]
[67.16333771 -55.82004166]
[53.04417801 -60.88455200]
[44.50331497 -73.21555328]
[44.72628784 -88.21389771]
[53.62992859 -100.28556824]
[67.89340210 -104.92813110]
[82.19677734 -100.41001892]
[91.20564270 -88.41528320]
[92.32129669 -103.37374115]
[93.43694305 -118.33219147]
[85.62695312 -128.59703064]
[86.86412811 -141.03298950]
[95.94250488 -149.02734375]
[97.28073883 -163.96751404]
[89.14752197 -180.48818970]
[99.79523468 -194.43785095]
[100.91088104 -209.39630127]
[94.22142029 -223.73371887]
[102.88390350 -235.85026550]
[103.33051300 -250.84361267]
[103.10718536 -265.84194946]
[102.88385773 -280.84030151]
[88.48415375 -285.52294922]
[76.38661957 -294.62945557]
[67.90350342 -307.17199707]
[63.95500183 -321.79006958]
[64.96940613 -336.89801025]
[70.83668518 -350.85702515]
[80.92039490 -362.15292358]
[94.12673950 -369.56042480]
[109.02319336 -372.27603149]
[123.99389648 -370.00515747]
[137.41493225 -362.99414062]
[147.83050537 -352.00344849]
[154.11079407 -338.22534180]
[155.57455444 -323.15429688]
[152.06303406 -308.42514038]
[143.95712280 -295.63558960]
[132.13609314 -286.17294312]
[117.88219452 -281.06362915]
[118.10552216 -266.06527710]
[118.32884979 -251.06694031]
[129.52627563 -261.04782104]
[144.50886536 -260.32525635]
[154.69390869 -249.31321716]
[154.24693298 -234.31988525]
[143.42401123 -223.93411255]
[128.42498779 -224.10534668]
[117.84236145 -234.73461914]
[124.61161804 -221.46713257]
[115.86933899 -208.28065491]
[114.75369263 -193.32220459]
[122.40711212 -183.95462036]
[121.60006714 -171.48335266]
[112.22092438 -162.62928772]
[110.88269043 -147.68910217]
[119.11344910 -132.19001770]
[108.39539337 -117.21654510]
[107.27974701 -102.25808716]
[106.16410065 -87.29963684]
[105.94077301 -72.30130005]
[106.61055756 -57.31626129]
[107.28034210 -42.33122253]
[107.95012665 -27.34618187]
[116.24801636 -14.97709370]
[109.13463593 -0.84519708]
[111.10995483 1.14384043]
[112.41640472 4.03517199]
[112.70637512 7.57795668]
[111.72938538 11.40026188]
[109.37126923 15.04625320]
[109.14794159 30.04459000]
[108.92461395 45.04292679]
[117.12203217 53.93836212]
[117.05872345 66.43555450]
[108.22321320 75.83217621]
[107.77660370 90.82552338]
[107.55327606 105.82386017]
[107.55327606 120.82386017]
[115.29058075 134.62403870]
[107.55327606 147.35130310]
[107.55327606 162.35130310]
[115.29058075 176.15147400]
[107.55327606 188.87875366]
[107.55327606 203.87875366]
[107.55327606 218.87875366]
[107.55327606 233.87875366]
[115.29058075 247.67892456]
[107.55327606 260.40618896]
[109.55728912 275.27172852]
[120.67276001 286.53036499]
[116.58193207 300.85217285]
[120.55402374 315.31671143]
[124.52612305 329.78121948]
[128.49821472 344.24575806]
[132.47032166 358.71026611]
[136.44241333 373.17480469]
[140.41450500 387.63931274]
[158.37867737 396.63754272]
[163.84921265 415.65274048]
[153.73016357 432.29962158]
[158.34417725 446.57235718]
[162.95819092 460.84509277]
[174.06542969 467.40191650]
[177.61460876 479.38470459]
[172.22602844 490.21475220]
[176.62702942 504.55459595]
[181.02803040 518.89447021]
[194.70956421 526.34112549]
[198.96853638 540.94647217]
[191.78492737 553.94384766]
[196.18592834 568.28369141]
[200.58692932 582.62353516]
[215.59725952 581.39709473]
[230.52023315 583.42657471]
[244.65789795 588.61700439]
[257.34899902 596.72564697]
[267.99993896 607.37322998]
[276.11257935 620.06176758]
[281.30746460 634.19781494]
[283.34161377 649.12011719]
[282.11987305 664.13085938]
[277.69943237 678.52783203]
[270.28698730 691.63775635]
[260.22927856 702.84741211]
[247.99670410 711.63256836]
[234.16140747 717.58221436]
[219.37046814 720.41815186]
[204.31571960 720.00769043]
[189.70127869 716.37011719]
[176.21069336 709.67547607]
[164.47494507 700.23687744]
[155.04293823 688.49591064]
[148.35581970 675.00158691]
[144.72634888 660.38513184]
[144.32431030 645.33013916]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 187]
[5 186]
[6 185]
[9 182]
[10 181]
[11 180]
[13 177]
[14 176]
[15 175]
[21 172]
[22 171]
[23 170]
[24 169]
[25 168]
[26 167]
[27 166]
[29 164]
[48 163]
[50 161]
[51 160]
[52 159]
[53 158]
[55 156]
[56 155]
[58 153]
[59 152]
[62 151]
[63 150]
[65 147]
[66 146]
[67 145]
[68 140]
[70 138]
[71 137]
[72 136]
[73 135]
[82 134]
[83 133]
[84 132]
[87 130]
[88 129]
[90 126]
[91 125]
[93 123]
[94 116]
[95 115]
[96 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
