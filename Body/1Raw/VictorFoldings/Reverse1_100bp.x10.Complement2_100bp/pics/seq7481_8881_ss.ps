%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[-7.12376881 632.50903320]
[-16.45878410 644.26641846]
[-26.91808128 655.03594971]
[-38.39771271 664.71044922]
[-50.78358459 673.19390869]
[-63.95259476 680.40191650]
[-77.77385712 686.26293945]
[-92.11001587 690.71862793]
[-106.81858063 693.72473145]
[-121.75337219 695.25140381]
[-136.76596069 695.28338623]
[-151.70712280 693.82049561]
[-166.42837524 690.87713623]
[-180.78341675 686.48266602]
[-194.62954712 680.68066406]
[-207.82919312 673.52886963]
[-220.25114441 665.09832764]
[-231.77194214 655.47290039]
[-242.27708435 644.74810791]
[-251.66217041 633.03063965]
[-259.83392334 620.43695068]
[-266.71112061 607.09222412]
[-272.22543335 593.12896729]
[-276.32202148 578.68609619]
[-278.96017456 563.90710449]
[-280.11370850 548.93890381]
[-279.77111816 533.93017578]
[-277.93582153 519.03015137]
[-274.62609863 504.38693237]
[-269.87478638 490.14602661]
[-263.72912598 476.44897461]
[-256.25018311 463.43188477]
[-247.51234436 451.22418213]
[-237.60238647 439.94714355]
[-226.61885071 429.71286011]
[-214.67086792 420.62307739]
[-201.87718201 412.76809692]
[-188.36497498 406.22601318]
[-174.26852417 401.06185913]
[-159.72793579 397.32690430]
[-144.88771057 395.05834961]
[-129.89535522 394.27865601]
[-114.89987183 394.99563599]
[-100.05029297 397.20211792]
[-85.49420929 400.87622070]
[-71.37628174 405.98138428]
[-64.89678955 392.45303345]
[-58.41728973 378.92471313]
[-51.93779373 365.39636230]
[-45.45829773 351.86801147]
[-38.97880173 338.33966064]
[-32.49930573 324.81130981]
[-39.73601151 311.82025146]
[-37.91383362 296.88223267]
[-27.52354622 285.75140381]
[-12.39654732 282.83935547]
[-5.91705084 269.31103516]
[0.56244481 255.78266907]
[7.04194069 242.25433350]
[13.52143669 228.72598267]
[12.04099846 213.90513611]
[24.98040009 204.80116272]
[31.45989609 191.27281189]
[17.97933388 197.85113525]
[3.07017446 196.20281982]
[-8.64781666 186.83859253]
[-13.54369164 172.66007996]
[-10.10041046 158.06062317]
[0.61508781 147.56405640]
[15.28249073 144.42282104]
[29.35694313 149.61029053]
[38.47732162 161.51905823]
[39.81753159 176.45932007]
[48.04634094 163.91790771]
[56.27514648 151.37651062]
[57.31628418 144.05955505]
[64.72099304 138.71090698]
[73.13561249 126.29341125]
[81.55023193 113.87591553]
[89.96485138 101.45841980]
[91.52022552 93.54935455]
[98.59833527 88.91996765]
[107.19689941 76.62912750]
[108.76781464 60.88610458]
[122.40342712 54.89282608]
[131.00199890 42.60198975]
[132.57290649 26.85896492]
[146.20852661 20.86568832]
[154.80708313 8.57485008]
[163.40565491 -3.71598768]
[172.00421143 -16.00682640]
[180.60278320 -28.29766273]
[188.73799133 -40.89997482]
[196.39859009 -53.79630280]
[203.96296692 -66.74929810]
[211.43070984 -79.75825500]
[218.80140686 -92.82244110]
[226.07463074 -105.94113159]
[233.34785461 -119.05982971]
[221.27238464 -127.99504089]
[210.46655273 -138.43002319]
[201.11524963 -150.18621826]
[193.37847900 -163.06245422]
[187.38864136 -176.83840942]
[183.24822998 -191.27835083]
[181.02809143 -206.13520813]
[180.76622009 -221.15473938]
[182.46708679 -236.07995605]
[186.10157776 -250.65545654]
[191.60752869 -264.63186646]
[198.89071655 -277.76998901]
[207.82650757 -289.84503174]
[218.26200867 -300.65036011]
[230.01864624 -310.00109863]
[242.89524841 -317.73727417]
[256.67147827 -323.72644043]
[271.11163330 -327.86614990]
[285.96859741 -330.08560181]
[300.98812866 -330.34677124]
[315.91326904 -328.64517212]
[330.48861694 -325.00997925]
[344.46472168 -319.50335693]
[357.60250854 -312.21957397]
[369.67712402 -303.28320312]
[380.48196411 -292.84719849]
[389.83215332 -281.09011841]
[397.56768799 -268.21313477]
[403.55621338 -254.43659973]
[407.69525146 -239.99626160]
[409.91397095 -225.13920593]
[410.17443848 -210.11964417]
[408.47213745 -195.19459534]
[404.83624268 -180.61943054]
[399.32897949 -166.64355469]
[392.04452515 -153.50613403]
[383.10760498 -141.43194580]
[372.67108154 -130.62759399]
[360.91354370 -121.27796173]
[348.03619385 -113.54303741]
[334.25939941 -107.55516815]
[319.81884766 -103.41682434]
[304.96170044 -101.19880676]
[289.94210815 -100.93907166]
[275.01715088 -102.64206696]
[260.44216919 -106.27864838]
[246.46655273 -111.78659821]
[239.19332886 -98.66790009]
[231.92008972 -85.54920959]
[231.42605591 -78.17508698]
[224.43966675 -72.29051208]
[216.97192383 -59.28155899]
[216.36814880 -51.91560745]
[209.29492188 -46.13570404]
[201.63432312 -33.23937988]
[216.59275818 -34.35531998]
[226.90313721 -23.46055031]
[224.96504211 -8.58628559]
[212.20715332 -0.69727999]
[198.03411865 -5.60901594]
[192.89361572 -19.69910049]
[184.29504395 -7.40826178]
[175.69648743 4.88257647]
[167.09791565 17.17341423]
[158.49935913 29.46425247]
[157.54347229 44.32815170]
[143.29283142 51.20055389]
[134.69425964 63.49139023]
[133.73837280 78.35529327]
[119.48773956 85.22769165]
[110.88917542 97.51853180]
[102.38234711 109.87303925]
[93.96772766 122.29053497]
[85.55310822 134.70802307]
[77.13848877 147.12551880]
[68.81655121 159.60531616]
[60.58773804 172.14671326]
[52.35893250 184.68812561]
[44.98824310 197.75230408]
[38.50874710 211.28065491]
[39.52572632 227.06913757]
[27.04978180 235.20547485]
[20.57028580 248.73382568]
[14.09079075 262.26217651]
[7.61129427 275.79052734]
[1.13179862 289.31884766]
[8.34456539 302.93069458]
[6.18447304 318.00344849]
[-4.31263733 328.78649902]
[-18.97096062 331.29080200]
[-25.45045662 344.81915283]
[-31.92995262 358.34750366]
[-38.40945053 371.87585449]
[-44.88894653 385.40420532]
[-51.36844254 398.93255615]
[-57.84793472 412.46087646]
[-45.02087021 420.26119995]
[-33.03421783 429.29995728]
[-22.00711250 439.48727417]
[-12.04914665 450.72192383]
[-3.25929141 462.89227295]
[4.27509403 475.87731934]
[10.47912693 489.54803467]
[15.29114819 503.76855469]
[18.66333008 518.39752197]
[20.56216049 533.28955078]
[20.96876717 548.29669189]
[19.87910652 563.26971436]
[17.30401039 578.05981445]
[13.26907158 592.52001953]
[7.81439161 606.50665283]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 195]
[47 194]
[48 193]
[49 192]
[50 191]
[51 190]
[52 189]
[56 185]
[57 184]
[58 183]
[59 182]
[60 181]
[62 179]
[63 178]
[73 177]
[74 176]
[75 175]
[77 174]
[78 173]
[79 172]
[80 171]
[82 170]
[83 169]
[85 167]
[86 166]
[88 164]
[89 163]
[90 162]
[91 161]
[92 160]
[93 154]
[94 153]
[95 151]
[96 150]
[97 148]
[98 147]
[99 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
