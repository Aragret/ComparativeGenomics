%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[49.44805145 495.25561523]
[44.26573181 509.35845947]
[37.17103958 522.60272217]
[28.30208397 534.73071289]
[17.83149719 545.50628662]
[5.96309090 554.71972656]
[-7.07211113 562.19165039]
[-21.02037430 567.77661133]
[-35.61019135 571.36596680]
[-50.55757141 572.88977051]
[-65.57155609 572.31842041]
[-80.35988617 569.66302490]
[-94.63471985 564.97521973]
[-108.11817932 558.34631348]
[-120.54780579 549.90527344]
[-131.68165588 539.81652832]
[-141.30302429 528.27636719]
[-149.22459412 515.50939941]
[-155.29219055 501.76422119]
[-159.38769531 487.30831909]
[-161.43139648 472.42309570]
[-161.38351440 457.39831543]
[-159.24497986 442.52645874]
[-155.05740356 428.09695435]
[-148.90232849 414.39071655]
[-140.89955139 401.67453003]
[-131.20483398 390.19589233]
[-120.00689697 380.17828369]
[-107.52371979 371.81668091]
[-93.99828339 365.27386475]
[-79.69386292 360.67715454]
[-64.88890076 358.11602783]
[-49.87158203 357.64038086]
[-34.93421936 359.25942993]
[-20.36757469 362.94171143]
[-14.70478916 349.05166626]
[-9.04200268 335.16165161]
[-3.37921572 321.27160645]
[2.28357077 307.38159180]
[7.94635725 293.49157715]
[13.60914421 279.60153198]
[12.58600903 276.22729492]
[13.14638996 272.18984985]
[15.58419418 268.23883057]
[19.84741783 265.22686768]
[26.12477875 251.60354614]
[17.64642906 237.54669189]
[19.23324203 221.04081726]
[30.45702744 208.60989380]
[47.04152679 205.28569031]
[53.11536407 191.57041931]
[59.18919754 177.85514832]
[65.26303101 164.13987732]
[71.33686066 150.42462158]
[77.41069794 136.70935059]
[83.38226318 122.94924927]
[88.83761597 108.97644806]
[86.50777435 95.19010162]
[97.03335571 85.98663330]
[102.07026672 71.85760498]
[107.10718536 57.72857666]
[107.04115295 48.59438324]
[112.32569885 43.42763138]
[117.57241821 29.37516212]
[122.71437836 15.28402138]
[127.75129700 1.15499151]
[132.78820801 -12.97403812]
[134.79222107 -27.83956528]
[133.67657471 -42.79801941]
[132.56092834 -57.75647354]
[131.44528198 -72.71492767]
[130.32963562 -87.67337799]
[129.21398926 -102.63183594]
[128.09832764 -117.59028625]
[118.85205078 -126.58300781]
[118.23077393 -139.06491089]
[126.02282715 -148.31750488]
[125.13000488 -163.29090881]
[124.23719025 -178.26431274]
[109.24982452 -179.25532532]
[94.50485229 -182.11697388]
[80.23483276 -186.80415344]
[66.66481018 -193.24291992]
[54.00880814 -201.33174133]
[42.46643448 -210.94302368]
[32.21972656 -221.92520142]
[23.43029022 -234.10505676]
[16.23674774 -247.29051208]
[10.75255013 -261.27362061]
[7.06419182 -275.83380127]
[5.22984409 -290.74145508]
[5.27843714 -305.76147461]
[7.20920420 -320.65695190]
[10.99169445 -335.19299316]
[16.56625175 -349.14028931]
[23.84495926 -362.27893066]
[32.71302032 -374.40167236]
[43.03057098 -385.31732178]
[54.63489151 -394.85372925]
[67.34296417 -402.86047363]
[80.95436096 -409.21130371]
[95.25441742 -413.80606079]
[110.01759338 -416.57223511]
[125.01105499 -417.46624756]
[139.99833679 -416.47399902]
[154.74307251 -413.61108398]
[169.01269531 -408.92269897]
[182.58218384 -402.48281860]
[195.23750305 -394.39291382]
[206.77906799 -384.78067017]
[217.02484131 -373.79763794]
[225.81326294 -361.61703491]
[233.00569153 -348.43096924]
[238.48870850 -334.44741821]
[242.17584229 -319.88690186]
[244.00894165 -304.97909546]
[243.95907593 -289.95907593]
[242.02705383 -275.06375122]
[238.24334717 -260.52804565]
[232.66761780 -246.58120728]
[225.38780212 -233.44319153]
[216.51872253 -221.32119751]
[206.20025635 -210.40641785]
[194.59512329 -200.87098694]
[181.88638306 -192.86531067]
[168.27444458 -186.51562500]
[153.97401428 -181.92208862]
[139.21060181 -179.15713501]
[140.10340881 -164.18373108]
[140.99623108 -149.21032715]
[151.43507385 -135.10366821]
[143.05679321 -118.70593262]
[144.17243958 -103.74748230]
[145.28808594 -88.78903198]
[146.40373230 -73.83057404]
[147.51937866 -58.87211990]
[148.63502502 -43.91366959]
[149.75068665 -28.95521545]
[155.36436462 -42.86515808]
[163.71173096 -55.32796860]
[174.43782043 -65.81372070]
[187.08656311 -73.87655640]
[201.12011719 -79.17364502]
[215.94178772 -81.47974396]
[230.92134094 -80.69680023]
[245.42184448 -76.85810852]
[258.82672119 -70.12688446]
[270.56597900 -60.78934860]
[280.14047241 -49.24253464]
[287.14309692 -35.97742081]
[291.27609253 -21.55804634]
[292.36370850 -6.59752798]
[290.35971069 8.26800251]
[285.34930420 22.40645599]
[277.54556274 35.21665955]
[267.28024292 46.15391541]
[254.98989868 54.75316620]
[241.19708252 60.64876938]
[226.48826599 63.59003448]
[211.48890686 63.45190811]
[196.83676147 60.24025345]
[183.15486145 54.09163666]
[171.02496338 45.26749802]
[160.96281433 34.14304733]
[153.39630127 21.19129944]
[148.64712524 6.96296835]
[146.91723633 -7.93712187]
[141.88032532 6.19190788]
[136.84341431 20.32093811]
[137.55831909 27.67693520]
[131.62489319 34.62187958]
[126.37817383 48.67435074]
[121.23621368 62.76549149]
[116.19929504 76.89452362]
[111.16238403 91.02355194]
[113.49222565 104.80989838]
[102.96664429 114.01336670]
[103.90050507 118.25386810]
[103.47881317 122.17646027]
[101.96795654 125.39402771]
[99.73270416 127.64574432]
[97.18643951 128.81820679]
[96.70867920 137.94013977]
[91.12596893 142.78318787]
[85.05213165 156.49844360]
[78.97829437 170.21371460]
[72.90446472 183.92898560]
[66.83062744 197.64425659]
[60.75679398 211.35951233]
[68.54033661 222.73524475]
[69.67751312 236.36335754]
[63.97787857 248.67529297]
[53.02723312 256.50009155]
[39.74809265 257.88092041]
[33.47073364 271.50421143]
[27.49917030 285.26431274]
[21.83638382 299.15435791]
[16.17359734 313.04437256]
[10.51081085 326.93441772]
[4.84802485 340.82443237]
[-0.81476194 354.71444702]
[-6.47754860 368.60449219]
[6.51151085 376.15634155]
[18.32309914 385.44247437]
[28.72730064 396.28216553]
[37.52159500 408.46438599]
[44.53479385 421.75201416]
[49.63039017 435.88641357]
[52.70919418 450.59243774]
[53.71127701 465.58383179]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 202]
[36 201]
[37 200]
[38 199]
[39 198]
[40 197]
[41 196]
[45 195]
[46 194]
[50 189]
[51 188]
[52 187]
[53 186]
[54 185]
[55 184]
[56 182]
[57 177]
[59 175]
[60 174]
[61 173]
[63 172]
[64 171]
[65 169]
[66 168]
[67 167]
[68 138]
[69 137]
[70 136]
[71 135]
[72 134]
[73 133]
[74 132]
[77 130]
[78 129]
[79 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
