%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[243.14109802 595.81774902]
[250.29373169 582.58599854]
[259.69421387 570.84417725]
[271.04034424 560.96972656]
[283.96740723 553.28002930]
[278.72067261 539.22753906]
[273.47396851 525.17510986]
[268.22726440 511.12261963]
[262.98052979 497.07015991]
[257.73382568 483.01766968]
[252.48709106 468.96520996]
[240.78678894 459.74826050]
[243.20829773 444.11346436]
[237.96157837 430.06100464]
[223.59803772 432.53781128]
[209.01997375 432.32458496]
[194.72692871 429.42718506]
[181.20899963 423.94335938]
[168.93002319 416.05963135]
[158.31155396 406.04486084]
[149.71853638 394.24118042]
[143.44664001 381.05209351]
[139.71218872 366.92898560]
[138.64459229 352.35540771]
[140.28198242 337.83065796]
[144.56973267 323.85263062]
[151.36239624 310.90078735]
[160.42851257 299.41964722]
[171.45861816 289.80358887]
[184.07572937 282.38327026]
[179.03881836 268.25424194]
[174.00190735 254.12519836]
[168.96498108 239.99617004]
[163.92807007 225.86714172]
[157.54946899 212.29093933]
[149.88887024 199.39460754]
[142.22827148 186.49829102]
[134.56767273 173.60195923]
[126.90707397 160.70562744]
[119.24648285 147.80931091]
[111.58588409 134.91297913]
[105.46722412 130.76763916]
[103.90887451 121.76712036]
[96.44113922 108.75817108]
[91.81952667 106.27730560]
[88.91688538 101.38363647]
[88.95133209 95.24884033]
[81.87422943 82.02331543]
[74.69886017 68.85083771]
[67.42562866 55.73214340]
[55.26459122 51.43424606]
[49.47677612 40.35792160]
[52.68155289 28.69361687]
[45.60444641 15.46808910]
[38.52733994 2.24256182]
[21.69479370 -2.52028012]
[13.67276382 -17.68477440]
[18.99359322 -33.63869476]
[11.72036362 -46.75738907]
[7.24492788 -49.44393921]
[4.52001333 -53.20268250]
[3.66089296 -57.18727112]
[4.43022919 -60.62826920]
[-2.24996543 -74.05864716]
[-8.93015957 -87.48902130]
[-15.61035442 -100.91939545]
[-29.80406761 -96.00341797]
[-44.50990295 -92.94290924]
[-59.48637772 -91.78811646]
[-74.48756409 -92.55801392]
[-89.26712799 -95.23994446]
[-103.58238220 -99.78988647]
[-117.19824219 -106.13311005]
[-129.89114380 -114.16546631]
[-141.45263672 -123.75505066]
[-151.69288635 -134.74438477]
[-160.44374084 -146.95303345]
[-167.56147766 -160.18051147]
[-172.92924500 -174.20959473]
[-176.45889282 -188.80993652]
[-178.09245300 -203.74177551]
[-177.80311584 -218.75991821]
[-175.59561157 -233.61775208]
[-171.50621033 -248.07130432]
[-165.60203552 -261.88320923]
[-157.98007202 -274.82672119]
[-148.76547241 -286.68923950]
[-138.10952759 -297.27597046]
[-126.18722534 -306.41311646]
[-113.19435883 -313.95059204]
[-99.34426880 -319.76464844]
[-84.86437988 -323.75982666]
[-69.99248505 -325.87048340]
[-54.97277451 -326.06198120]
[-40.05189514 -324.33117676]
[-25.47485733 -320.70648193]
[-11.48103333 -315.24743652]
[1.69978714 -308.04367065]
[13.85116386 -299.21347046]
[24.77355957 -288.90185547]
[34.28762054 -277.27810669]
[42.23711395 -264.53317261]
[48.49150467 -250.87626648]
[52.94808578 -236.53167725]
[55.53368378 -221.73495483]
[56.20583344 -206.72906494]
[54.95349884 -191.76043701]
[51.79724884 -177.07485962]
[46.78890991 -162.91346741]
[40.01071930 -149.50881958]
[31.57398605 -137.08103943]
[21.61724663 -125.83418274]
[10.30400085 -115.95294952]
[-2.17997861 -107.59959412]
[4.50021601 -94.16921997]
[11.18041039 -80.73883820]
[17.86060524 -67.30846405]
[24.83905792 -54.03061676]
[32.11228561 -40.91192245]
[44.87361526 -39.12923431]
[54.42062759 -30.18850327]
[57.11468887 -17.19033051]
[51.75286865 -4.83454370]
[58.82997513 8.39098358]
[65.90708160 21.61651230]
[81.29135895 30.05990601]
[80.54432678 48.45891190]
[87.81755829 61.57760620]
[93.81008148 65.90328217]
[95.09975433 74.94620514]
[102.17685699 88.17173767]
[109.45008850 101.29042816]
[116.91783142 114.29937744]
[124.48220825 127.25238037]
[132.14280701 140.14871216]
[139.80340576 153.04502869]
[147.46400452 165.94136047]
[155.12460327 178.83769226]
[162.78520203 191.73400879]
[170.44580078 204.63034058]
[170.66979980 189.63201904]
[176.90080261 175.98742676]
[188.08874512 165.99594116]
[202.34826660 161.34127808]
[217.27639771 162.80784607]
[230.35748291 170.14849854]
[239.38713074 182.12620544]
[242.84368896 196.72251892]
[240.14465332 211.47769165]
[231.74487305 223.90522766]
[219.05984497 231.91087341]
[204.22723389 234.14552307]
[189.74658203 230.23260498]
[178.05709839 220.83023071]
[183.09402466 234.95925903]
[188.13093567 249.08828735]
[193.16784668 263.21731567]
[198.20477295 277.34634399]
[213.48944092 275.06658936]
[228.92098999 275.80313110]
[243.91003418 279.52603149]
[257.88449097 286.09133911]
[270.31130981 295.24661255]
[280.71688843 306.64068604]
[288.70510864 319.83715820]
[293.97235107 334.33096313]
[296.31918335 349.56790161]
[295.65768433 364.96566772]
[292.01495361 379.93615723]
[285.53189087 393.90798950]
[276.45776367 406.34820557]
[265.14065552 416.78274536]
[252.01405334 424.81427002]
[257.26077271 438.86676025]
[269.33636475 449.08880615]
[266.53958130 463.71850586]
[271.78628540 477.77096558]
[277.03298950 491.82342529]
[282.27972412 505.87591553]
[287.52642822 519.92840576]
[292.77316284 533.98083496]
[298.01986694 548.03332520]
[312.82336426 545.36932373]
[327.86459351 545.39166260]
[342.66012573 548.09948730]
[356.73428345 553.40588379]
[369.63464355 561.14025879]
[380.94656372 571.05389404]
[390.30636597 582.82818604]
[397.41317749 596.08465576]
[402.03854370 610.39703369]
[404.03381348 625.30541992]
[403.33477783 640.33044434]
[399.96398926 654.98913574]
[394.02972412 668.81030273]
[385.72280884 681.34960938]
[375.31024170 692.20404053]
[363.12677002 701.02459717]
[349.56402588 707.52777100]
[335.05798340 711.50457764]
[320.07495117 712.82702637]
[305.09661865 711.45269775]
[290.60440063 707.42578125]
[277.06423950 700.87573242]
[264.91134644 692.01306152]
[254.53639221 681.12268066]
[246.27291870 668.55468750]
[240.38652039 654.71307373]
[237.06645203 640.04278564]
[236.41941833 625.01544189]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 182]
[6 181]
[7 180]
[8 179]
[9 178]
[10 177]
[11 176]
[13 174]
[14 173]
[30 158]
[31 157]
[32 156]
[33 155]
[34 154]
[35 140]
[36 139]
[37 138]
[38 137]
[39 136]
[40 135]
[41 134]
[43 133]
[44 132]
[47 131]
[48 130]
[49 128]
[50 127]
[53 125]
[54 124]
[55 123]
[58 119]
[59 118]
[63 117]
[64 116]
[65 115]
[66 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
