%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACCUCCUAGUCCGUCCGCGGUUCCUCACUCGGCUUCAAAGUAGUACGCCUCUACAACCUACCCCACCCCUCCAGCUACUUACUCACCAAUUAAUUAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[-64.43427277 340.07348633]
[-59.52566910 354.26232910]
[-56.12710953 368.88653564]
[-54.27584457 383.78588867]
[-53.99214554 398.79711914]
[-55.27912903 413.75576782]
[-58.12269211 428.49795532]
[-62.49167633 442.86212158]
[-68.33821869 456.69094849]
[-75.59825134 469.83282471]
[-84.19223785 482.14385986]
[-94.02601624 493.48910522]
[-104.99184418 503.74426270]
[-116.96956635 512.79699707]
[-129.82795715 520.54809570]
[-143.42613220 526.91265869]
[-157.61508179 531.82092285]
[-172.23937988 535.21911621]
[-187.13877869 537.07000732]
[-202.15000916 537.35333252]
[-217.10864258 536.06597900]
[-231.85075378 533.22204590]
[-246.21482849 528.85272217]
[-260.04348755 523.00585938]
[-273.18521118 515.74548340]
[-285.49600220 507.15121460]
[-296.84100342 497.31716919]
[-307.09591675 486.35107422]
[-316.14834595 474.37313843]
[-323.89913940 461.51455688]
[-330.26336670 447.91622925]
[-335.17126465 433.72717285]
[-338.56912231 419.10278320]
[-340.41967773 404.20333862]
[-340.70263672 389.19210815]
[-339.41491699 374.23348999]
[-336.57064819 359.49145508]
[-332.20095825 345.12750244]
[-326.35375977 331.29898071]
[-319.09307861 318.15744019]
[-310.49847412 305.84683228]
[-300.66415405 294.50207520]
[-289.69784546 284.24743652]
[-277.71966553 275.19528198]
[-264.86090088 267.44482422]
[-251.26242065 261.08093262]
[-237.07322693 256.17337036]
[-222.44876099 252.77586365]
[-207.54928589 250.92568970]
[-192.53802490 250.64308167]
[-177.57946777 251.93115234]
[-162.83749390 254.77578735]
[-148.47363281 259.14581299]
[-134.64526367 264.99337769]
[-121.50388336 272.25436401]
[-109.19349670 280.84924316]
[-97.84897614 290.68383789]
[-86.89306641 280.43844604]
[-75.93715668 270.19305420]
[-64.98124695 259.94769287]
[-54.02533340 249.70228577]
[-51.28696060 242.83766174]
[-42.82920456 239.38742065]
[-31.72197151 229.30627441]
[-20.61473846 219.22514343]
[-9.50750351 209.14399719]
[1.59972990 199.06286621]
[4.44000483 192.23976135]
[12.94819164 188.91583252]
[24.20428848 179.00117493]
[34.61166000 168.19902039]
[44.10055923 156.58175659]
[53.58945847 144.96449280]
[55.64822769 130.21286011]
[70.37053680 124.41940308]
[79.85943604 112.80213928]
[89.34833527 101.18487549]
[97.10472870 88.34593964]
[102.97368622 74.54176331]
[108.84265137 60.73758316]
[106.18553162 42.51613235]
[120.60792542 32.51805496]
[126.27070618 18.62802696]
[131.93350220 4.73800039]
[129.00538635 -13.44186974]
[143.27731323 -23.65356827]
[148.73266602 -37.62636566]
[154.18803406 -51.59916306]
[145.92485046 -68.64716339]
[152.63175964 -86.02330780]
[169.61351013 -92.85968018]
[174.65042114 -106.98870850]
[179.68733215 -121.11773682]
[184.51333618 -135.32019043]
[189.12733459 -149.59292603]
[193.74134827 -163.86566162]
[198.35536194 -178.13839722]
[202.96937561 -192.41113281]
[189.64765930 -199.38536072]
[177.69630432 -208.51078796]
[167.45921326 -219.52485657]
[159.23088074 -232.11065674]
[153.24807739 -245.90609741]
[149.68295288 -260.51425171]
[148.63804626 -275.51477051]
[150.14344788 -290.47613525]
[154.15583801 -304.96780396]
[160.55978394 -318.57287598]
[169.17100525 -330.89984131]
[179.74176025 -341.59411621]
[191.96791077 -350.34793091]
[205.49766541 -356.90945435]
[219.94175720 -361.08990479]
[234.88461304 -362.76898193]
[249.89627075 -361.89840698]
[264.54483032 -358.50317383]
[278.40884399 -352.68099976]
[291.08938599 -344.59942627]
[302.22161865 -334.49093628]
[311.48522949 -322.64639282]
[318.61370850 -309.40658569]
[323.40197754 -295.15243530]
[325.71221924 -280.29409790]
[325.47799683 -265.25903320]
[322.70605469 -250.47984314]
[317.47610474 -236.38175964]
[309.93865967 -223.37042236]
[300.31057739 -211.82019043]
[288.86886597 -202.06336975]
[275.94274902 -194.38070679]
[261.90411377 -188.99322510]
[247.15689087 -186.05595398]
[232.12539673 -185.65338135]
[217.24209595 -187.79711914]
[212.62809753 -173.52438354]
[208.01408386 -159.25164795]
[203.40007019 -144.97891235]
[198.78607178 -130.70617676]
[200.12443542 -126.12166595]
[198.59706116 -120.64772034]
[193.81636047 -116.08081818]
[188.77944946 -101.95178986]
[183.74253845 -87.82276154]
[190.75045776 -78.81969452]
[192.56085205 -67.43382263]
[188.60972595 -56.47560883]
[179.76980591 -48.70663452]
[168.16082764 -46.14380646]
[162.70547485 -32.17100906]
[157.25010681 -18.19821167]
[161.81826782 -6.99738264]
[157.38766479 4.68823290]
[145.82351685 10.40078735]
[140.16073608 24.29081345]
[134.49795532 38.18083954]
[138.89883423 49.44844055]
[134.29473877 61.06679535]
[122.64682770 66.60654449]
[116.77786255 80.41072083]
[110.90890503 94.21489716]
[122.47678375 84.66585541]
[136.32237244 78.89527893]
[151.24789429 77.40237427]
[165.96214294 80.31629944]
[179.19218445 87.38496399]
[189.79348755 97.99686432]
[196.84893799 111.23395538]
[199.74816895 125.95110321]
[198.24035645 140.87512207]
[192.45594788 154.71495056]
[182.89537048 166.27328491]
[170.38568115 174.55023193]
[156.00910950 178.82972717]
[141.00936890 178.74157715]
[126.68408203 174.29341125]
[114.27254486 165.87001038]
[104.84846497 154.20010376]
[99.22711945 140.29324341]
[97.89482117 125.35253143]
[100.96559906 110.67377472]
[91.47669983 122.29103851]
[81.98780060 133.90830994]
[79.25032043 149.49087524]
[65.20671844 154.45338440]
[55.71782303 166.07064819]
[46.22892380 177.68791199]
[60.61603928 173.44398499]
[75.34518433 176.28163147]
[87.12583923 185.56689453]
[93.32616425 199.22544861]
[92.56100464 214.20591736]
[85.00128174 227.16163635]
[72.33586884 235.19825745]
[57.39425278 236.52040100]
[43.51442337 230.83265686]
[33.79716873 219.40571594]
[30.41335487 204.79237366]
[34.11893845 190.25726318]
[22.86284256 200.17192078]
[11.68086910 210.17008972]
[0.57363498 220.25123596]
[-10.53359890 230.33236694]
[-21.64083290 240.41351318]
[-32.74806595 250.49464417]
[-43.77994156 260.65820312]
[-54.73585129 270.90359497]
[-65.69176483 281.14898682]
[-76.64767456 291.39437866]
[-87.60358429 301.63977051]
[-78.55056763 313.61727905]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 209]
[58 208]
[59 207]
[60 206]
[61 205]
[63 204]
[64 203]
[65 202]
[66 201]
[67 200]
[69 199]
[70 198]
[71 186]
[72 185]
[73 184]
[75 182]
[76 181]
[77 180]
[78 160]
[79 159]
[80 158]
[82 155]
[83 154]
[84 153]
[86 150]
[87 149]
[88 148]
[91 143]
[92 142]
[93 141]
[94 138]
[95 137]
[96 136]
[97 135]
[98 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
