%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[130.47428894 544.02484131]
[118.07812500 534.69134521]
[113.56771851 519.84423828]
[118.67742157 505.19259644]
[131.44244385 496.37023926]
[131.66577148 481.37191772]
[131.88909912 466.37356567]
[132.11242676 451.37524414]
[132.33575439 436.37689209]
[130.88633728 421.44708252]
[127.78222656 406.77178955]
[124.67811584 392.09649658]
[112.09329987 384.21246338]
[108.73623657 369.37384033]
[117.09106445 356.22717285]
[113.98695374 341.55187988]
[110.88284302 326.87655640]
[100.67923737 316.02597046]
[105.39323425 300.92333984]
[102.28912354 286.24804688]
[99.18501282 271.57275391]
[93.84066772 285.58837891]
[83.00408936 295.95989990]
[68.76766968 300.68475342]
[53.88022614 298.85064697]
[41.21629333 290.81167603]
[33.22107697 278.12008667]
[31.43833542 263.22640991]
[36.21228027 249.00637817]
[46.62113953 238.20564270]
[60.65512848 232.90968323]
[75.60449982 234.14106750]
[88.58276367 241.66200256]
[97.08450317 254.02153015]
[96.63789368 239.02818298]
[96.19129181 224.03482056]
[95.74468231 209.04147339]
[95.29808044 194.04812622]
[84.31474304 184.05302429]
[83.64823914 168.85400391]
[94.20648956 157.40144348]
[93.75988007 142.40809631]
[93.31327820 127.41474152]
[92.86666870 112.42139435]
[85.68240356 100.42647552]
[92.13998413 88.02521515]
[91.69337463 73.03186035]
[91.24677277 58.03851318]
[80.02557373 47.23469543]
[79.78623199 32.02294540]
[90.15517426 21.39182854]
[89.70857239 6.39847851]
[89.26196289 -8.59487152]
[80.42645264 -17.99149323]
[80.36314392 -30.48868370]
[88.56056976 -39.38412094]
[88.33724213 -54.38245773]
[88.11391449 -69.38079071]
[86.33144379 -84.27451324]
[83.00918579 -98.90196991]
[79.68692780 -113.52943420]
[76.14725494 -128.10580444]
[72.39095306 -142.62786865]
[68.63465118 -157.14993286]
[64.87834930 -171.67198181]
[61.12205124 -186.19404602]
[56.50804138 -200.46678162]
[51.05268478 -214.43957520]
[45.59732819 -228.41236877]
[40.14197159 -242.38517761]
[34.68661499 -256.35797119]
[28.65044403 -263.21380615]
[29.25575447 -270.57962036]
[24.00903702 -284.63211060]
[18.76231766 -298.68457031]
[4.00413418 -295.81301880]
[-11.02541542 -295.40988159]
[-25.91631317 -297.48617554]
[-40.26232529 -301.98529053]
[-53.67207718 -308.78442383]
[-65.77974701 -317.69812012]
[-76.25502777 -328.48321533]
[-84.81214905 -340.84548950]
[-91.21765900 -354.44766235]
[-95.29681396 -368.91867065]
[-96.93833160 -383.86376953]
[-96.09743500 -398.87518311]
[-92.79705048 -413.54342651]
[-87.12722778 -427.46832275]
[-79.24264526 -440.27001953]
[-69.35839081 -451.59924316]
[-57.74411774 -461.14694214]
[-44.71667480 -468.65264893]
[-30.63145828 -473.91159058]
[-15.87272072 -476.78030396]
[-0.84309423 -477.18054199]
[14.04740334 -475.10137939]
[28.39254761 -470.59951782]
[41.80099106 -463.79779053]
[53.90694427 -454.88174438]
[64.38014984 -444.09463501]
[72.93488312 -431.73071289]
[79.33777618 -418.12731934]
[83.41413879 -403.65551758]
[85.05278015 -388.71011353]
[84.20898438 -373.69885254]
[80.90578461 -359.03125000]
[75.23327637 -345.10742188]
[67.34622955 -332.30728149]
[57.45978928 -320.97994995]
[45.84367752 -311.43447876]
[32.81478882 -303.93130493]
[38.06150818 -289.87881470]
[43.30822372 -275.82635498]
[48.65941238 -261.81332397]
[54.11476898 -247.84053040]
[59.57012558 -233.86773682]
[65.02548218 -219.89492798]
[70.48084259 -205.92213440]
[75.57325745 -220.03125000]
[87.92112732 -228.54771423]
[102.91899872 -228.29508972]
[114.97303772 -219.36759949]
[119.58738708 -205.09497070]
[115.04100800 -190.80055237]
[103.02958679 -181.81581116]
[88.03308105 -181.49182129]
[75.64411163 -189.95034790]
[79.40041351 -175.42828369]
[83.15671539 -160.90621948]
[86.91300964 -146.38417053]
[90.66931152 -131.86210632]
[94.25678253 -128.70947266]
[95.90187836 -123.26974487]
[94.31438446 -116.85169220]
[97.63664246 -102.22422791]
[100.95890808 -87.59677124]
[105.52726746 -101.88417816]
[115.15663910 -113.38527679]
[128.41856384 -120.39393616]
[143.34571838 -121.87046814]
[157.72373962 -117.59583282]
[169.41973877 -108.20415497]
[176.69868469 -95.08863068]
[178.48078918 -80.19487000]
[174.50167847 -65.73227692]
[165.35163879 -53.84628296]
[152.38803101 -46.30010986]
[137.53390503 -44.21318817]
[122.99281311 -47.89509964]
[110.92181396 -56.79965591]
[103.11225128 -69.60411835]
[103.33557892 -54.60578537]
[103.55890656 -39.60744858]
[113.35743713 -25.04875183]
[104.25531769 -9.04147720]
[104.70191956 5.95187235]
[105.14852905 20.94522285]
[116.13185883 30.94032097]
[116.79837036 46.13934708]
[106.24011993 57.59190750]
[106.68672180 72.58525848]
[107.13333130 87.57860565]
[114.31759644 99.57352448]
[107.86001587 111.97478485]
[108.30662537 126.96813965]
[108.75322723 141.96148682]
[109.19983673 156.95483398]
[120.42103577 167.75865173]
[120.66036987 182.97039795]
[110.29142761 193.60151672]
[110.73803711 208.59486389]
[111.18463898 223.58822632]
[111.63124847 238.58157349]
[112.07785034 253.57492065]
[113.86032104 268.46862793]
[116.96443176 283.14395142]
[120.06854248 297.81924438]
[130.49417114 309.71951294]
[125.55814362 323.77246094]
[128.66226196 338.44775391]
[131.76637268 353.12307739]
[144.72898865 361.76068115]
[147.66793823 376.68774414]
[139.35342407 388.99237061]
[142.45753479 403.66769409]
[145.56164551 418.34298706]
[150.12655640 404.05447388]
[159.48797607 392.33422852]
[172.41424561 384.72430420]
[187.20471191 382.22586060]
[201.91342163 385.16760254]
[214.60517883 393.16256714]
[223.61018372 405.15881348]
[227.74366760 419.57803345]
[226.46179199 434.52316284]
[219.93322754 448.02789307]
[209.01689148 458.31546021]
[195.14904785 464.03231812]
[180.15422058 464.42636108]
[166.00524902 459.44570923]
[154.56367493 449.74569702]
[147.33409119 436.60021973]
[147.11076355 451.59857178]
[146.88743591 466.59689331]
[146.66410828 481.59524536]
[146.44078064 496.59356689]
[158.93746948 505.79208374]
[163.60867310 520.58935547]
[158.65821838 535.29559326]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 207]
[6 206]
[7 205]
[8 204]
[9 203]
[10 187]
[11 186]
[12 185]
[15 182]
[16 181]
[17 180]
[19 178]
[20 177]
[21 176]
[34 175]
[35 174]
[36 173]
[37 172]
[38 171]
[41 168]
[42 167]
[43 166]
[44 165]
[46 163]
[47 162]
[48 161]
[51 158]
[52 157]
[53 156]
[56 154]
[57 153]
[58 152]
[59 137]
[60 136]
[61 135]
[62 132]
[63 131]
[64 130]
[65 129]
[66 128]
[67 119]
[68 118]
[69 117]
[70 116]
[71 115]
[73 114]
[74 113]
[75 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
