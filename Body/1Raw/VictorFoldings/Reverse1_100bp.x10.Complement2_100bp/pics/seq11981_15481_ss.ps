%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[144.09881592 721.03436279]
[137.37521362 707.61065674]
[132.06752014 693.56671143]
[128.23197937 679.05145264]
[125.90927124 664.21875000]
[125.12400818 649.22583008]
[125.88452148 634.23162842]
[128.18273926 619.39508057]
[131.99429321 604.87353516]
[137.27880859 590.82086182]
[143.98023987 577.38598633]
[152.02754211 564.71142578]
[161.33543396 552.93151855]
[171.80523682 542.17102051]
[183.32595825 532.54412842]
[195.77548218 524.15289307]
[209.02183533 517.08618164]
[203.35903931 503.19616699]
[197.69625854 489.30612183]
[192.03347778 475.41610718]
[186.37068176 461.52606201]
[180.70790100 447.63604736]
[175.04512024 433.74600220]
[169.38232422 419.85598755]
[165.19349670 434.25924683]
[153.95286560 444.19140625]
[139.14344788 446.57492065]
[125.35409546 440.67117310]
[116.85761261 428.30953979]
[116.28671265 413.32043457]
[123.81829834 400.34832764]
[137.11862183 393.41281128]
[152.06643677 394.66293335]
[164.03016663 403.71151733]
[160.27386475 389.18945312]
[156.68638611 386.03683472]
[155.04129028 380.59710693]
[156.62878418 374.17904663]
[153.30653381 359.55157471]
[149.98426819 344.92413330]
[146.66200256 330.29666138]
[143.33975220 315.66918945]
[140.01748657 301.04174805]
[125.18460846 299.23318481]
[111.84045410 292.44622803]
[101.60433960 281.48281860]
[95.72579956 267.65298462]
[94.93209839 252.61836243]
[99.33831787 238.19250488]
[108.43109894 226.12214661]
[121.12842560 217.87574768]
[117.80616760 203.24829102]
[114.37510681 188.64596558]
[110.83543396 174.06958008]
[107.29576111 159.49320984]
[103.75608826 144.91683960]
[100.10800171 130.36721802]
[96.35169983 115.84515381]
[86.69087219 109.34056854]
[83.85837555 98.04374695]
[89.30743408 87.75058746]
[85.76776123 73.17421722]
[82.22808838 58.59783936]
[78.68841553 44.02146530]
[75.14874268 29.44508934]
[67.41970825 42.30051804]
[53.27702332 47.29896927]
[39.18653870 42.15522003]
[31.59022522 29.22092247]
[33.96102142 14.40946293]
[45.21503067 4.49244165]
[60.20706940 4.00378752]
[72.08397675 13.16846752]
[62.57232666 0.52572113]
[68.53988647 -13.12116432]
[66.53587341 -27.98669243]
[53.03804779 -35.41062927]
[46.57537460 -49.19784546]
[49.43648148 -63.97208023]
[60.31838226 -74.10727692]
[48.72809982 -88.41625977]
[56.02173996 -104.37776184]
[53.79662323 -119.21180725]
[43.90710068 -127.49192047]
[42.35918427 -139.89303589]
[49.44147491 -149.69955444]
[47.43746185 -164.56507874]
[45.43344498 -179.43060303]
[43.42943192 -194.29614258]
[41.42541885 -209.16166687]
[26.47328377 -211.24401855]
[12.63789082 -217.28425598]
[0.94591695 -226.83415222]
[-7.73501492 -239.18501282]
[-12.76072216 -253.42036438]
[-13.75826454 -268.48379517]
[-10.65361691 -283.25756836]
[-3.67716479 -296.64529419]
[6.65339231 -307.65356445]
[19.57145882 -315.46551514]
[34.11842728 -319.50137329]
[49.21481705 -319.46170044]
[63.74037933 -315.34945679]
[76.61721039 -307.46975708]
[86.88977814 -296.40731812]
[93.79577637 -282.98309326]
[96.82274628 -268.19323730]
[95.74605560 -253.13523865]
[90.64560699 -238.92651367]
[81.89988708 -226.62142944]
[70.15789032 -217.13311768]
[56.29094696 -211.16567993]
[58.29496002 -196.30015564]
[60.29897308 -181.43461609]
[62.30298996 -166.56909180]
[64.30699921 -151.70356750]
[75.76613617 -138.41239929]
[68.63066864 -121.43692780]
[70.85578156 -106.60288239]
[80.39389801 -99.16306305]
[82.36907959 -86.82278442]
[75.18391418 -76.11128998]
[88.36120605 -69.21949768]
[95.03249359 -55.73031998]
[92.45146942 -40.72393036]
[81.40139771 -29.99070549]
[83.40541840 -15.12517738]
[92.77372742 -3.54571319]
[86.94950867 11.16445351]
[89.72512054 25.90541649]
[93.26478577 40.48179245]
[96.80445862 55.05816650]
[100.34413147 69.63454437]
[103.88380432 84.21091461]
[115.77153015 96.04553986]
[110.87375641 112.08885193]
[114.63005829 126.61091614]
[119.80876923 134.13545227]
[118.33246613 141.37716675]
[121.87213898 155.95353699]
[125.41181183 170.52990723]
[128.95147705 185.10629272]
[134.01759338 192.70710754]
[132.43362427 199.92602539]
[135.75588989 214.55348206]
[150.76963806 216.50601196]
[164.18431091 223.46435547]
[174.38972473 234.57156372]
[180.16835022 248.47398376]
[180.84057617 263.48629761]
[176.34455872 277.79574585]
[167.24134827 289.68106079]
[154.64494324 297.71948242]
[157.96720886 312.34695435]
[161.28947449 326.97439575]
[164.61172485 341.60186768]
[167.93399048 356.22930908]
[171.25624084 370.85678101]
[174.79591370 385.43316650]
[178.55221558 399.95520020]
[183.27235413 414.19320679]
[188.93513489 428.08322144]
[194.59793091 441.97326660]
[200.26071167 455.86328125]
[205.92350769 469.75332642]
[211.58628845 483.64334106]
[217.24906921 497.53335571]
[222.91186523 511.42340088]
[237.32325745 507.21438599]
[252.09104919 504.50952148]
[267.05868530 503.33743286]
[282.06750488 503.71057129]
[296.95840454 505.62496948]
[311.57354736 509.06036377]
[325.75799561 513.98028564]
[339.36135864 520.33264160]
[352.23947144 528.05004883]
[364.25579834 537.05072021]
[375.28295898 547.23919678]
[385.20410156 558.50756836]
[393.91397095 570.73626709]
[401.32031250 583.79577637]
[407.34457397 597.54754639]
[411.92294312 611.84588623]
[415.00683594 626.53924561]
[416.56356812 641.47174072]
[416.57666016 656.48522949]
[415.04595947 671.42047119]
[411.98767090 686.11914062]
[407.43426514 700.42541504]
[401.43399048 714.18774414]
[394.05041504 727.26007080]
[385.36187744 739.50396729]
[375.46041870 750.78961182]
[364.45101929 760.99731445]
[352.45040894 770.01892090]
[339.58575439 777.75878906]
[325.99349976 784.13482666]
[311.81765747 789.07946777]
[297.20852661 792.54034424]
[282.32098389 794.48071289]
[267.31283569 794.88000488]
[252.34317017 793.73400879]
[237.57067871 791.05487061]
[223.15197754 786.87103271]
[209.23988342 781.22674561]
[195.98188782 774.18194580]
[183.51852417 765.81121826]
[171.98191833 756.20336914]
[161.49436951 745.46020508]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 168]
[18 167]
[19 166]
[20 165]
[21 164]
[22 163]
[23 162]
[24 161]
[34 160]
[35 159]
[38 158]
[39 157]
[40 156]
[41 155]
[42 154]
[43 153]
[51 145]
[52 144]
[53 142]
[54 141]
[55 140]
[56 139]
[57 137]
[58 136]
[61 134]
[62 133]
[63 132]
[64 131]
[65 130]
[73 129]
[75 127]
[76 126]
[80 122]
[82 119]
[83 118]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
