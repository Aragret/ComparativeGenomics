%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[46.23975372 341.92504883]
[52.09836578 355.78112793]
[55.31093597 370.47787476]
[55.76805496 385.51467896]
[53.45414352 400.37942505]
[48.44802094 414.56579590]
[40.92018509 427.59063721]
[31.12704086 439.01031494]
[19.40213394 448.43588257]
[6.14481020 455.54629517]
[-8.19338989 460.09939575]
[-23.12411308 461.94006348]
[-38.13882446 461.00567627]
[-52.72612762 457.32800293]
[-66.38918304 451.03234863]
[-78.66263580 442.33309937]
[-89.12845612 431.52655029]
[-97.43018341 418.98080444]
[-103.28505707 405.12310791]
[-106.49366760 390.42550659]
[-106.94673157 375.38858032]
[-104.62881470 360.52447510]
[-99.61886597 346.33944702]
[-92.08752441 333.31661987]
[-82.29130554 321.89959717]
[-70.56385803 312.47720337]
[-57.30461502 305.37036133]
[-42.96518707 300.82113647]
[-28.03396988 298.98446655]
[-13.01951027 299.92291260]
[1.56680119 303.60449219]
[7.84416199 289.98120117]
[14.12152290 276.35787964]
[20.19535637 262.64260864]
[26.06431770 248.83842468]
[31.93327713 235.03425598]
[31.65747452 227.64874268]
[37.99375153 221.06927490]
[44.06758499 207.35400391]
[50.14141846 193.63873291]
[56.21525192 179.92347717]
[62.28908539 166.20820618]
[68.36292267 152.49293518]
[62.77471161 138.73403931]
[68.73906708 124.73828125]
[83.20856476 118.97013855]
[89.28239441 105.25487518]
[77.21721649 114.16730499]
[62.76660156 118.18971252]
[47.83177948 116.79287720]
[34.37768555 110.16058350]
[24.17443466 99.16542053]
[18.56443977 85.25399017]
[18.28579330 70.25657654]
[23.37515450 56.14635086]
[33.16293335 44.77975845]
[46.36137390 37.65226746]
[61.23399734 35.70162201]
[75.82405853 39.18446350]
[88.21197510 47.64256668]
[96.76791382 59.96311569]
[100.36618805 74.52513885]
[98.53266144 89.41501617]
[107.49336243 77.38563538]
[116.45405579 65.35625458]
[125.41474915 53.32688141]
[111.36483765 58.58045197]
[96.41925049 57.30395889]
[83.46375275 49.74387360]
[74.99983215 37.35992813]
[72.66175079 22.54327011]
[76.90095520 8.15476227]
[86.89891815 -3.02739930]
[100.72518921 -8.84411430]
[115.71013641 -8.17226601]
[128.96040344 -1.14157772]
[137.91755676 10.89043427]
[140.85212708 25.60057831]
[137.19691467 40.14969254]
[148.15281677 29.90430069]
[159.10873413 19.65890884]
[170.06463623 9.41351700]
[181.02055359 -0.83187467]
[191.97645569 -11.07726669]
[202.93237305 -21.32265854]
[207.72715759 -36.39981461]
[222.30784607 -39.44159317]
[233.26376343 -49.68698502]
[244.21966553 -59.93237686]
[255.17558289 -70.17777252]
[266.13150024 -80.42316437]
[277.08740234 -90.66855621]
[281.88217163 -105.74570465]
[296.46289062 -108.78749084]
[307.41879272 -119.03288269]
[318.37469482 -129.27827454]
[329.33059692 -139.52366638]
[340.28652954 -149.76905823]
[351.24243164 -160.01445007]
[362.19833374 -170.25984192]
[353.01666260 -182.13551331]
[344.98742676 -194.81878662]
[338.18115234 -208.19821167]
[332.65765381 -222.15621948]
[328.46551514 -236.57009888]
[325.64154053 -251.31323242]
[324.21054077 -266.25601196]
[324.18515015 -281.26712036]
[325.56552124 -296.21469116]
[328.33953857 -310.96728516]
[332.48284912 -325.39529419]
[337.95904541 -339.37191772]
[344.71997070 -352.77429199]
[352.70623779 -365.48471069]
[361.84762573 -377.39138794]
[372.06381226 -388.38973999]
[383.26504517 -398.38308716]
[395.35284424 -407.28363037]
[408.22100830 -415.01312256]
[421.75643921 -421.50363159]
[435.84017944 -426.69815063]
[450.34844971 -430.55099487]
[465.15374756 -433.02832031]
[480.12600708 -434.10833740]
[495.13357544 -433.78158569]
[510.04461670 -432.05090332]
[524.72808838 -428.93154907]
[539.05493164 -424.45089722]
[552.89923096 -418.64831543]
[566.13934326 -411.57482910]
[578.65887451 -403.29257202]
[590.34783936 -393.87435913]
[601.10345459 -383.40295410]
[610.83129883 -371.97036743]
[619.44580078 -359.67709351]
[626.87127686 -346.63113403]
[633.04241943 -332.94717407]
[637.90509033 -318.74542236]
[641.41650391 -304.15075684]
[643.54583740 -289.29141235]
[644.27429199 -274.29794312]
[643.59558105 -259.30215454]
[641.51556396 -244.43582153]
[638.05255127 -229.82957458]
[633.23699951 -215.61180115]
[627.11126709 -201.90745544]
[619.72912598 -188.83694458]
[611.15539551 -176.51515198]
[601.46557617 -165.05035400]
[590.74468994 -154.54333496]
[579.08703613 -145.08641052]
[566.59503174 -136.76268005]
[553.37847900 -129.64530945]
[539.55352783 -123.79685974]
[525.24163818 -119.26869965]
[510.56860352 -116.10064697]
[495.66336060 -114.32053375]
[480.65695190 -113.94400787]
[465.68121338 -114.97437286]
[450.86776733 -117.40257263]
[436.34677124 -121.20727539]
[422.24588013 -126.35504150]
[408.68902588 -132.80062866]
[395.79528809 -140.48739624]
[383.67803955 -149.34777832]
[372.44372559 -159.30392456]
[361.48782349 -149.05853271]
[350.53192139 -138.81314087]
[339.57598877 -128.56774902]
[328.62008667 -118.32236481]
[317.66418457 -108.07697296]
[306.70828247 -97.83158112]
[302.69714355 -83.48724365]
[287.33279419 -79.71264648]
[276.37689209 -69.46725464]
[265.42095947 -59.22185898]
[254.46505737 -48.97646713]
[243.50915527 -38.73107529]
[232.55323792 -28.48568535]
[228.54209900 -14.14134884]
[213.17776489 -10.36674881]
[202.22184753 -0.12135690]
[191.26594543 10.12403488]
[180.31002808 20.36942673]
[169.35412598 30.61481857]
[158.39820862 40.86021042]
[147.44230652 51.10560226]
[137.44412231 62.28757477]
[128.48342896 74.31695557]
[119.52273560 86.34632874]
[110.56204224 98.37570953]
[102.99766541 111.32870483]
[96.92382812 125.04397583]
[102.37722778 139.63500977]
[96.02211761 153.45771790]
[82.07818604 158.56677246]
[76.00435638 172.28204346]
[69.93051910 185.99731445]
[63.85668564 199.71257019]
[57.78285217 213.42784119]
[51.70901871 227.14311218]
[45.73745346 240.90321350]
[39.86849594 254.70738220]
[33.99953461 268.51156616]
[34.42114258 275.10958862]
[31.83548737 280.17034912]
[27.74483871 282.63522339]
[21.46747780 296.25854492]
[15.19011688 309.88186646]
[27.46591568 318.57781982]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 209]
[32 208]
[33 207]
[34 204]
[35 203]
[36 202]
[38 201]
[39 200]
[40 199]
[41 198]
[42 197]
[43 196]
[46 193]
[47 192]
[63 191]
[64 190]
[65 189]
[66 188]
[79 187]
[80 186]
[81 185]
[82 184]
[83 183]
[84 182]
[85 181]
[87 179]
[88 178]
[89 177]
[90 176]
[91 175]
[92 174]
[94 172]
[95 171]
[96 170]
[97 169]
[98 168]
[99 167]
[100 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
