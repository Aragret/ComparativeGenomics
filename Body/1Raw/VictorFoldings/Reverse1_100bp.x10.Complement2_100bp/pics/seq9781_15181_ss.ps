%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[117.02635956 346.29083252]
[112.68416595 331.92691040]
[109.33232880 317.30017090]
[106.98648071 302.47875977]
[105.65754700 287.53182983]
[105.35173035 272.52908325]
[106.07046509 257.54040527]
[107.81037903 242.63572693]
[110.56337738 227.88453674]
[114.31661987 213.35559082]
[119.05261230 199.11666870]
[124.74925995 185.23413086]
[131.38000488 171.77270508]
[138.91394043 158.79516602]
[147.31594849 146.36201477]
[135.48966980 137.13491821]
[123.66339874 127.90781403]
[111.83713531 118.68071747]
[100.01086426 109.45362091]
[94.79467010 108.90108490]
[90.25936127 105.46533966]
[87.97525787 99.77149963]
[76.42895508 90.19638062]
[64.88265991 80.62126160]
[53.33635330 71.04614258]
[41.79005432 61.47101974]
[30.24375153 51.89590073]
[18.69745064 42.32078171]
[7.15114832 32.74566269]
[-4.39515305 23.17054367]
[-5.62183380 38.12030029]
[-17.98905563 46.60863495]
[-32.38016129 42.37826538]
[-38.18656540 28.54765701]
[-31.12800217 15.31222534]
[-16.40938187 12.42822552]
[-27.21153831 2.02085209]
[-38.01369476 -8.38652134]
[-48.81584930 -18.79389381]
[-59.61800766 -29.20126724]
[-70.86678314 -19.26590919]
[-82.87855530 -10.26792622]
[-95.57541656 -2.26567316]
[-108.87502289 4.68895054]
[-122.69111633 10.55084133]
[-136.93409729 15.28198147]
[-151.51161194 18.85168648]
[-166.32907104 21.23680687]
[-181.29042053 22.42187500]
[-196.29861450 22.39920235]
[-211.25631714 21.16893578]
[-226.06651306 18.73905754]
[-240.63316345 15.12532330]
[-254.86178589 10.35117149]
[-268.66012573 4.44756413]
[-281.93865967 -2.54721117]
[-294.61126709 -10.58778954]
[-306.59579468 -19.62202454]
[-317.81451416 -29.59132385]
[-328.19464111 -40.43103409]
[-337.66885376 -52.07085037]
[-346.17575073 -64.43528748]
[-353.66009521 -77.44415283]
[-360.07342529 -91.01308441]
[-365.37408447 -105.05406952]
[-369.52770996 -119.47605133]
[-372.50738525 -134.18550110]
[-374.29376221 -149.08702087]
[-374.87524414 -164.08395386]
[-374.24810791 -179.07905579]
[-372.41638184 -193.97506714]
[-369.39196777 -208.67538452]
[-365.19445801 -223.08465576]
[-359.85110474 -237.10945129]
[-353.39651489 -250.65879822]
[-345.87258911 -263.64483643]
[-337.32812500 -275.98330688]
[-327.81851196 -287.59423828]
[-317.40545654 -298.40231323]
[-306.15646362 -308.33743286]
[-294.14450073 -317.33514404]
[-281.44744873 -325.33709717]
[-268.14770508 -332.29144287]
[-254.33146667 -338.15301514]
[-240.08837891 -342.88385010]
[-225.51080322 -346.45324707]
[-210.69326782 -348.83804321]
[-195.73190308 -350.02276611]
[-180.72370911 -349.99975586]
[-165.76603699 -348.76916504]
[-150.95588684 -346.33895874]
[-136.38931274 -342.72491455]
[-122.16079712 -337.95043945]
[-108.36260223 -332.04653931]
[-95.08422852 -325.05145264]
[-82.41178131 -317.01062012]
[-70.42745209 -307.97610474]
[-59.20896149 -298.00656128]
[-48.82907486 -287.16662598]
[-39.35510254 -275.52661133]
[-30.84849548 -263.16198730]
[-23.36441803 -250.15293884]
[-16.95140648 -236.58387756]
[-11.65105724 -222.54277039]
[-7.49774218 -208.12069702]
[-4.51839828 -193.41117859]
[-2.73234844 -178.50962830]
[-2.15117550 -163.51266479]
[-2.77864885 -148.51757812]
[-4.61069918 -133.62161255]
[-7.63544416 -118.92137146]
[-11.83326817 -104.51218414]
[-17.17694473 -90.48751068]
[-23.63181877 -76.93830872]
[-31.15602684 -63.95244598]
[-39.70077133 -51.61414337]
[-49.21063232 -40.00342560]
[-38.40847778 -29.59605026]
[-27.60632133 -19.18867683]
[-16.80416489 -8.78130436]
[-6.00200796 1.62606907]
[5.17996645 11.62424088]
[16.72626877 21.19935989]
[28.27256966 30.77448082]
[39.81887054 40.34960175]
[51.36517334 49.92472076]
[62.91147614 59.49983978]
[74.45777893 69.07495880]
[86.00408173 78.65007782]
[97.55037689 88.22519684]
[109.23796082 97.62734985]
[121.06423187 106.85444641]
[132.89050293 116.08154297]
[144.71676636 125.30864716]
[156.54304504 134.53573608]
[166.55946350 123.36220551]
[177.31504822 112.89826202]
[188.75965881 103.19270325]
[200.83990479 94.29078674]
[213.49949646 86.23400879]
[226.67938232 79.05993652]
[240.31811523 72.80201721]
[254.35212708 67.48943329]
[268.71594238 63.14695740]
[283.34265137 59.79482651]
[298.16400146 57.44867706]
[313.11090088 56.11944580]
[328.11364746 55.81332779]
[343.10232544 56.53175354]
[358.00704956 58.27137375]
[372.75830078 61.02407837]
[387.28732300 64.77703094]
[401.52633667 69.51272583]
[415.40899658 75.20909882]
[428.87054443 81.83957672]
[441.84823608 89.37325287]
[454.28155518 97.77500153]
[466.11254883 107.00563812]
[477.28601074 117.02214050]
[487.74987793 127.77780151]
[497.45535278 139.22247314]
[506.35720825 151.30278015]
[514.41387939 163.96241760]
[521.58789062 177.14234924]
[527.84570312 190.78114319]
[533.15820312 204.81517029]
[537.50054932 219.17903137]
[540.85260010 233.80574036]
[543.19866943 248.62710571]
[544.52777100 263.57400513]
[544.83380127 278.57678223]
[544.11529541 293.56546021]
[542.37554932 308.47015381]
[539.62274170 323.22140503]
[535.86968994 337.75036621]
[531.13391113 351.98937988]
[525.43743896 365.87197876]
[518.80688477 379.33349609]
[511.27310181 392.31115723]
[502.87127686 404.74441528]
[493.64056396 416.57531738]
[483.62399292 427.74871826]
[472.86825562 438.21252441]
[461.42352295 447.91793823]
[449.34313965 456.81967163]
[436.68347168 464.87628174]
[423.50347900 472.05020142]
[409.86465454 478.30792236]
[395.83056641 483.62033081]
[381.46670532 487.96261597]
[366.83996582 491.31454468]
[352.01858521 493.66049194]
[337.07165527 494.98953247]
[322.06887817 495.29544067]
[307.08023071 494.57681274]
[292.17553711 492.83697510]
[277.42431641 490.08407593]
[262.89535522 486.33093262]
[248.65638733 481.59506226]
[234.77381897 475.89849854]
[221.31234741 469.26782227]
[208.33476257 461.73397827]
[195.90155029 453.33206177]
[184.07069397 444.10125732]
[172.89735413 434.08462524]
[162.43363953 423.32882690]
[152.72830200 411.88403320]
[143.82662964 399.80358887]
[135.77011108 387.14385986]
[128.59629822 373.96380615]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[22 130]
[23 129]
[24 128]
[25 127]
[26 126]
[27 125]
[28 124]
[29 123]
[30 122]
[36 121]
[37 120]
[38 119]
[39 118]
[40 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
