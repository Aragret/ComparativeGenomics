%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[53.16409683 697.05548096]
[37.66249847 696.36260986]
[25.54971695 686.66412354]
[21.48336220 671.68933105]
[27.02703285 657.19635010]
[40.04907227 648.75799561]
[40.71886063 633.77294922]
[41.38864517 618.78790283]
[42.05842972 603.80285645]
[42.72821426 588.81781006]
[43.39799881 573.83276367]
[44.06778336 558.84771729]
[41.22608948 552.02526855]
[44.86074066 543.64508057]
[45.75355530 528.67169189]
[46.64637375 513.69824219]
[37.95780182 498.45111084]
[48.22528076 483.16516113]
[48.89506531 468.18011475]
[49.56485367 453.19506836]
[50.23463821 438.21005249]
[47.73003387 434.14358521]
[47.75335312 428.46060181]
[51.15403748 422.79077148]
[52.26968765 407.83233643]
[53.38533783 392.87387085]
[51.66037750 390.66418457]
[50.70676422 387.63809204]
[50.83984375 384.08596802]
[52.26411819 380.40682983]
[55.03878403 377.06689453]
[57.04279709 362.20138550]
[59.04681015 347.33584595]
[61.05082321 332.47030640]
[63.05484009 317.60479736]
[51.18292618 308.60903931]
[45.36907959 294.78677368]
[47.26699066 279.81130981]
[56.46630096 267.71713257]
[70.57611847 261.81286621]
[72.58013153 246.94734192]
[74.58414459 232.08180237]
[76.58815765 217.21627808]
[78.59217072 202.35075378]
[80.59618378 187.48522949]
[68.08603668 179.36355591]
[60.31076431 166.56297302]
[58.85833740 151.59463501]
[64.07014465 137.42222595]
[74.96273041 126.87525177]
[89.41287231 122.08412170]
[91.41688538 107.21859741]
[79.54174042 116.38270569]
[64.54965973 115.89530945]
[53.29482269 105.97922516]
[50.92279053 91.16796112]
[58.51802063 78.23303223]
[72.60807800 73.08810425]
[86.75118256 78.08537292]
[94.48165131 90.94197845]
[98.02132416 76.36560059]
[101.56099701 61.78922653]
[105.10066223 47.21284866]
[108.64033508 32.63647461]
[109.31012726 17.65143585]
[107.08500671 2.81739163]
[97.19548798 -5.46271706]
[95.64756775 -17.86383438]
[102.72985840 -27.67035103]
[100.72584534 -42.53587723]
[98.72183228 -57.40140533]
[96.60720825 -72.25160217]
[94.38208771 -87.08564758]
[92.15697479 -101.91969299]
[89.93185425 -116.75373840]
[83.76275635 -103.08105469]
[72.32807159 -93.37291718]
[57.83565903 -89.50380707]
[43.08377838 -92.22079468]
[30.92078590 -100.99926758]
[23.69516373 -114.14424133]
[22.80206871 -129.11763000]
[28.41394234 -143.02830505]
[39.44721985 -153.19033813]
[53.77154541 -157.64158630]
[68.62112427 -155.52259827]
[81.12872314 -147.24250793]
[88.87973022 -134.39886475]
[89.32633972 -149.39221191]
[89.77294922 -164.38555908]
[90.21955109 -179.37892151]
[81.95899963 -189.28477478]
[82.63964844 -201.76358032]
[91.35200500 -210.15531921]
[84.23863220 -224.28721619]
[92.53651428 -236.65631104]
[93.20630646 -251.64134216]
[86.09292603 -265.77325439]
[94.39081573 -278.14233398]
[95.06060028 -293.12738037]
[81.41993713 -299.89880371]
[71.71775818 -311.63708496]
[67.63503265 -326.30853271]
[69.87911224 -341.37121582]
[78.06118774 -354.21539307]
[90.76367950 -362.61578369]
[105.78580475 -365.11697388]
[120.52487183 -361.28555298]
[132.42726135 -351.78540039]
[139.43081665 -338.26245117]
[140.32212830 -323.05966187]
[134.94674683 -308.81094360]
[124.23602295 -297.98504639]
[110.04563904 -292.45758057]
[109.37585449 -277.47253418]
[116.53713226 -264.41247559]
[108.19134521 -250.97155762]
[107.52155304 -235.98652649]
[114.68283844 -222.92645264]
[106.33704376 -209.48553467]
[115.25165558 -194.36943054]
[105.21289825 -178.93231201]
[104.76629639 -163.93896484]
[104.31968689 -148.94560242]
[103.87308502 -133.95225525]
[104.76589966 -118.97885132]
[106.99102020 -104.14480591]
[109.21613312 -89.31076813]
[111.44125366 -74.47672272]
[115.54219818 -68.32822418]
[113.58735657 -59.40542221]
[115.59136963 -44.53989410]
[117.59539032 -29.67436409]
[129.05451965 -16.38319588]
[121.91905212 0.59227449]
[124.14416504 15.42631817]
[128.70394897 1.13616920]
[136.28973389 -11.80430889]
[146.53137207 -22.76371956]
[158.92916870 -31.20733261]
[172.87820435 -36.72316360]
[187.69787598 -39.04207993]
[202.66510010 -38.05094147]
[217.04959106 -33.79810333]
[230.14947510 -26.49107361]
[241.32562256 -16.48637962]
[250.03269958 -4.27217102]
[255.84585571 9.55559444]
[258.48147583 24.32222748]
[257.81097412 39.30723572]
[253.86703491 53.77946091]
[246.84210205 67.03277588]
[237.07894897 78.42051697]
[225.05392456 87.38706207]
[211.35375977 93.49490356]
[196.64692688 96.44602966]
[181.65100098 96.09644318]
[167.09767151 92.46321106]
[153.69700623 85.72359467]
[142.10287476 76.20644379]
[132.88098145 64.37612152]
[126.48126984 50.80985641]
[123.21671295 36.17614746]
[119.67704010 50.75252151]
[116.13736725 65.32889557]
[112.59769440 79.90527344]
[109.05802155 94.48165131]
[106.28240967 109.22261047]
[104.27839661 124.08814240]
[116.94396973 132.53471375]
[124.65480042 145.58959961]
[125.92761230 160.63619995]
[120.56332397 174.68559265]
[109.67594147 184.97026062]
[95.46171570 189.48924255]
[93.45770264 204.35476685]
[91.45368958 219.22029114]
[89.44966888 234.08581543]
[87.44565582 248.95135498]
[85.44164276 263.81686401]
[97.48427582 273.24673462]
[103.15256500 287.34521484]
[101.01712799 302.28866577]
[91.75060272 314.07794189]
[77.92036438 319.60879517]
[75.91635132 334.47433472]
[73.91233826 349.33984375]
[71.90832520 364.20538330]
[69.90431213 379.07092285]
[68.34378815 393.98950195]
[67.22814178 408.94796753]
[66.11249542 423.90643311]
[65.21967316 438.87982178]
[64.54988861 453.86486816]
[63.88010406 468.84991455]
[63.21031952 483.83496094]
[71.32247162 493.86270142]
[70.45610809 506.32998657]
[61.61977768 514.59106445]
[60.72696304 529.56451416]
[59.83414459 544.53790283]
[59.05282211 559.51751709]
[58.38303757 574.50256348]
[57.71325302 589.48760986]
[57.04346848 604.47265625]
[56.37368393 619.45770264]
[55.70389938 634.44274902]
[55.03411102 649.42773438]
[67.25138855 658.99426270]
[71.47994995 673.92407227]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 208]
[7 207]
[8 206]
[9 205]
[10 204]
[11 203]
[12 202]
[14 201]
[15 200]
[16 199]
[18 196]
[19 195]
[20 194]
[21 193]
[24 192]
[25 191]
[26 190]
[31 189]
[32 188]
[33 187]
[34 186]
[35 185]
[40 180]
[41 179]
[42 178]
[43 177]
[44 176]
[45 175]
[51 169]
[52 168]
[60 167]
[61 166]
[62 165]
[63 164]
[64 163]
[65 136]
[66 135]
[69 133]
[70 132]
[71 131]
[72 129]
[73 128]
[74 127]
[75 126]
[88 125]
[89 124]
[90 123]
[91 122]
[94 120]
[96 118]
[97 117]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
