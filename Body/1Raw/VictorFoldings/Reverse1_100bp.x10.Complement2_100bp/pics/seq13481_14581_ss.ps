%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUACUCUCAUUAUCUAUCCCGAGUCCGCAAACACAUACUAUACAAACGCCAAAGCUACUACACCAGAAACCUCAUCUUUGGACACUCCUUUCCAUAAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[45.54622269 471.34204102]
[41.30370331 485.75140381]
[35.25333786 499.49990845]
[27.49448013 512.36181641]
[18.15453529 524.12591553]
[7.38687372 534.59899902]
[-4.63168764 543.60913086]
[-17.70379448 551.00836182]
[-31.61478996 556.67510986]
[-46.13624191 560.51647949]
[-61.02970123 562.46923828]
[-76.05059814 562.50134277]
[-90.95227051 560.61236572]
[-105.49003601 556.83319092]
[-119.42515564 551.22601318]
[-132.52880859 543.88281250]
[-144.58581543 534.92419434]
[-155.39819336 524.49725342]
[-164.78840637 512.77325439]
[-172.60223389 499.94467163]
[-178.71138000 486.22219849]
[-183.01553345 471.83111572]
[-185.44400024 457.00781250]
[-185.95690918 441.99563599]
[-184.54583740 427.04113770]
[-181.23396301 412.38986206]
[-176.07565308 398.28240967]
[-169.15563965 384.95043945]
[-160.58752441 372.61285400]
[-150.51202393 361.47225952]
[-139.09458923 351.71160889]
[-126.52268982 343.49118042]
[-113.00277710 336.94592285]
[-98.75685120 332.18334961]
[-84.01885223 329.28167725]
[-69.03079224 328.28851318]
[-54.03878784 329.22021484]
[-39.28901291 332.06143188]
[-25.02368355 336.76553345]
[-18.54418755 323.23718262]
[-12.06469154 309.70886230]
[-5.58519554 296.18051147]
[-6.29907513 291.45828247]
[-4.05405855 286.23745728]
[1.29391527 282.35021973]
[8.17332745 269.02078247]
[15.05274010 255.69134521]
[14.01423073 240.83299255]
[27.21895599 232.11830139]
[34.09836960 218.78887939]
[40.97777939 205.45944214]
[38.65604019 186.26318359]
[55.78470230 175.63438416]
[62.26419830 162.10603333]
[68.74369049 148.57769775]
[75.22319031 135.04934692]
[81.70268250 121.52100372]
[88.08129120 107.94479370]
[86.99069214 94.00556183]
[98.29539490 85.77784729]
[104.57275391 72.15452576]
[110.85011292 58.53121185]
[117.02588654 44.86154175]
[123.09971619 31.14627457]
[129.17355347 17.43100929]
[135.24739075 3.71574163]
[141.32121277 -9.99952507]
[139.83460999 -25.75073242]
[152.06277466 -34.25492477]
[158.13661194 -47.97018814]
[164.21043396 -61.68545532]
[169.76966858 -75.61725616]
[174.80657959 -89.74628448]
[179.84349060 -103.87531281]
[184.88041687 -118.00434113]
[189.91732788 -132.13337708]
[194.95423889 -146.26240540]
[180.97302246 -140.82867432]
[167.18959045 -146.74620056]
[161.49974060 -160.62516785]
[167.16285706 -174.51504517]
[180.93486023 -180.45912170]
[194.92652893 -175.05232239]
[201.12274170 -161.39286804]
[207.40010071 -175.01618958]
[213.67747498 -188.63951111]
[219.95483398 -202.26281738]
[226.23219299 -215.88613892]
[232.50955200 -229.50946045]
[238.78691101 -243.13276672]
[245.06427002 -256.75607300]
[232.17263794 -264.45269775]
[220.17214966 -273.47601318]
[209.19879150 -283.72381592]
[199.37689209 -295.07998657]
[190.81773376 -307.41583252]
[183.61831665 -320.59158325]
[177.86019897 -334.45794678]
[173.60864258 -348.85781860]
[170.91180420 -363.62802124]
[169.80024719 -378.60122681]
[170.28656006 -393.60775757]
[172.36524963 -408.47753906]
[176.01274109 -423.04217529]
[181.18771362 -437.13653564]
[187.83154297 -450.60101318]
[195.86894226 -463.28298950]
[205.20883179 -475.03875732]
[215.74540710 -485.73516846]
[227.35925293 -495.25097656]
[239.91877747 -503.47836304]
[253.28169250 -510.32415771]
[267.29656982 -515.71075439]
[281.80462646 -519.57708740]
[296.64144897 -521.87939453]
[311.63894653 -522.59155273]
[326.62716675 -521.70556641]
[341.43630981 -519.23138428]
[355.89855957 -515.19708252]
[369.85003662 -509.64837646]
[383.13269043 -502.64810181]
[395.59597778 -494.27563477]
[407.09872437 -484.62582397]
[417.51055908 -473.80798340]
[426.71353149 -461.94470215]
[434.60333252 -449.17037964]
[441.09060669 -435.62979126]
[446.10183716 -421.47634888]
[449.58023071 -406.87045288]
[451.48635864 -391.97753906]
[451.79864502 -376.96636963]
[450.51358032 -362.00708008]
[447.64566040 -347.26913452]
[443.22741699 -332.91952515]
[437.30892944 -319.12084961]
[429.95721436 -306.02944946]
[421.25561523 -293.79367065]
[411.30270386 -282.55215454]
[400.21127319 -272.43228149]
[388.10696411 -263.54870605]
[375.12698364 -256.00207520]
[361.41833496 -249.87791443]
[347.13638306 -245.24560547]
[332.44296265 -242.15765381]
[317.50454712 -240.64903259]
[302.49041748 -240.73684692]
[287.57067871 -242.42008972]
[272.91436768 -245.67968750]
[258.68759155 -250.47872925]
[252.41023254 -236.85540771]
[246.13287354 -223.23210144]
[239.85549927 -209.60877991]
[233.57814026 -195.98545837]
[227.30078125 -182.36215210]
[221.02342224 -168.73883057]
[214.74606323 -155.11550903]
[209.08328247 -141.22547913]
[204.04635620 -127.09645844]
[199.00944519 -112.96743011]
[193.97253418 -98.83839417]
[188.93560791 -84.70936584]
[183.89869690 -70.58033752]
[198.36314392 -74.55271912]
[210.57661438 -65.84461212]
[211.53579712 -50.87531281]
[200.53361511 -40.67963028]
[185.68046570 -42.77344131]
[177.92570496 -55.61162186]
[171.85186768 -41.89635468]
[165.77804565 -28.18108940]
[167.69909668 -13.41088867]
[155.03648376 -3.92569113]
[148.96264648 9.78957558]
[142.88882446 23.50484276]
[136.81498718 37.22010803]
[130.74114990 50.93537521]
[130.90696716 58.32417297]
[124.47342682 64.80857086]
[118.19606781 78.43189240]
[111.91870880 92.05520630]
[113.00930786 105.99443817]
[101.70460510 114.22215271]
[100.95546722 123.32581329]
[95.23103333 128.00050354]
[88.75153351 141.52883911]
[82.27204132 155.05718994]
[75.79254150 168.58554077]
[69.31304932 182.11387634]
[73.51419067 192.14677429]
[71.54080963 202.61988831]
[64.28168488 210.12011719]
[54.30720901 212.33886719]
[47.42779922 225.66828918]
[40.54838562 238.99771118]
[41.09483337 254.80947876]
[28.38216972 262.57077026]
[21.50275612 275.90020752]
[14.62334442 289.22961426]
[7.94315004 302.66000366]
[1.46365404 316.18835449]
[-5.01584196 329.71670532]
[-11.49533749 343.24502563]
[1.11162674 351.41159058]
[12.57073593 361.12329102]
[22.69381905 372.22067261]
[31.31464958 384.52145386]
[38.29166412 397.82369995]
[43.51029205 411.90896606]
[46.88483810 426.54592896]
[48.35989380 441.49426270]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 202]
[40 201]
[41 200]
[42 199]
[45 198]
[46 197]
[47 196]
[49 194]
[50 193]
[51 192]
[53 188]
[54 187]
[55 186]
[56 185]
[57 184]
[58 182]
[60 180]
[61 179]
[62 178]
[63 176]
[64 175]
[65 174]
[66 173]
[67 172]
[69 170]
[70 169]
[71 168]
[72 162]
[73 161]
[74 160]
[75 159]
[76 158]
[77 157]
[84 156]
[85 155]
[86 154]
[87 153]
[88 152]
[89 151]
[90 150]
[91 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
