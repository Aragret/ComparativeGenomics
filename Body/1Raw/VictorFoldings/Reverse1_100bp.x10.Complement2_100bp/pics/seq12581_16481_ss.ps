%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUACAAACCCAGACUCAAAUAUAUAGUGUCACUCUUAAGAUACUACCUGGUACAUUGCUUGUUACGAUGUCCCUACUUAUAAUACCUCUUCAUCAGAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[4.96252394 447.51901245]
[6.51705551 462.46017456]
[6.10801458 477.47644043]
[3.74240041 492.31082153]
[-0.53930795 506.70950317]
[-6.66384506 520.42608643]
[-14.52641201 533.22589111]
[-23.99246979 544.88989258]
[-34.90004349 555.21850586]
[-47.06248474 564.03497314]
[-60.27168655 571.18841553]
[-74.30161285 576.55645752]
[-88.91220093 580.04730225]
[-103.85343933 581.60113525]
[-118.86966705 581.19134521]
[-133.70393372 578.82501221]
[-148.10241699 574.54266357]
[-161.81872559 568.41748047]
[-174.61814880 560.55426025]
[-186.28169250 551.08764648]
[-196.60977173 540.17962646]
[-205.42565918 528.01672363]
[-212.57849121 514.80718994]
[-217.94589233 500.77700806]
[-221.43600464 486.16625977]
[-222.98910522 471.22494507]
[-222.57864380 456.20874023]
[-220.21160889 441.37457275]
[-215.92854309 426.97631836]
[-209.80268860 413.26028442]
[-201.93890381 400.46124268]
[-192.47174072 388.79812622]
[-181.56318665 378.47058105]
[-169.39990234 369.65527344]
[-156.19001770 362.50308228]
[-142.15957642 357.13635254]
[-127.54866028 353.64691162]
[-112.60726929 352.09451294]
[-97.59107971 352.50570679]
[-82.75704193 354.87344360]
[-68.35897064 359.15719604]
[-54.64324570 365.28369141]
[-46.79149246 352.50286865]
[-38.93973541 339.72201538]
[-31.08798027 326.94116211]
[-23.23622513 314.16033936]
[-15.38446999 301.37948608]
[-7.53271437 288.59866333]
[-7.99199200 285.10272217]
[-6.78080988 281.21069336]
[-3.73142314 277.71002197]
[0.96584839 275.43347168]
[9.38046741 263.01599121]
[17.79508591 250.59848022]
[26.20970345 238.18098450]
[34.53164673 225.70118713]
[42.76045609 213.15979004]
[50.98926544 200.61839294]
[57.86867523 187.28897095]
[55.29001617 172.61927795]
[67.51645660 162.57812500]
[72.97180939 148.60533142]
[78.42716980 134.63252258]
[83.88252258 120.65972900]
[89.33788300 106.68693542]
[94.47984314 92.59579468]
[91.59390259 77.04002380]
[103.01460266 67.47879791]
[107.84059906 53.27634430]
[112.66659546 39.07389069]
[117.49259186 24.87143517]
[122.10660553 10.59870148]
[126.50759888 -3.74114609]
[130.90859985 -18.08099365]
[135.30960083 -32.42084122]
[129.96707153 -44.16052628]
[133.92788696 -56.01361465]
[144.55142212 -61.79869843]
[130.21165466 -57.39741898]
[117.74432373 -65.73802185]
[116.33987427 -80.67212677]
[127.03361511 -91.19087219]
[141.94252014 -89.54022217]
[150.07608032 -76.93861389]
[155.73886108 -90.82864380]
[161.40165710 -104.71867371]
[167.06443787 -118.60869598]
[172.72723389 -132.49871826]
[163.96427917 -150.57882690]
[171.21134949 -168.99034119]
[189.37768555 -176.02586365]
[194.41459656 -190.15489197]
[199.45150757 -204.28392029]
[204.48843384 -218.41294861]
[209.52534485 -232.54197693]
[214.56225586 -246.67100525]
[219.59918213 -260.80004883]
[206.37719727 -267.94705200]
[194.40122986 -277.02871704]
[183.95199585 -287.83215332]
[175.27445984 -300.10409546]
[168.57202148 -313.55688477]
[164.00181580 -327.87518311]
[161.67094421 -342.72332764]
[161.63406372 -357.75326538]
[163.89202881 -372.61267090]
[168.39192200 -386.95321655]
[175.02825928 -400.43875122]
[183.64546204 -412.75314331]
[194.04154968 -423.60772705]
[205.97279358 -432.74804688]
[219.15954590 -439.95986938]
[233.29266357 -445.07409668]
[248.04084778 -447.97088623]
[263.05838013 -448.58230591]
[277.99325562 -446.89404297]
[292.49533081 -442.94564819]
[306.22470093 -436.82968140]
[318.85952759 -428.68954468]
[330.10357666 -418.71600342]
[339.69335938 -407.14288330]
[347.40399170 -394.24148560]
[353.05477905 -380.31420898]
[356.51324463 -365.68753052]
[357.69830322 -350.70434570]
[356.58218384 -335.71585083]
[353.19107056 -321.07342529]
[347.60443115 -307.12030029]
[339.95321655 -294.18353271]
[330.41683960 -282.56640625]
[319.21878052 -272.54125977]
[306.62155151 -264.34304810]
[292.92047119 -258.16397095]
[278.43670654 -254.14889526]
[263.50976562 -252.39192200]
[248.48956299 -252.93423462]
[233.72821045 -255.76312256]
[228.69128418 -241.63409424]
[223.65437317 -227.50506592]
[218.61746216 -213.37603760]
[213.58053589 -199.24700928]
[208.54362488 -185.11798096]
[203.50671387 -170.98895264]
[210.24198914 -163.24252319]
[213.17700195 -153.32179260]
[211.71788025 -142.99783325]
[206.06155396 -134.14292908]
[197.17214966 -128.39091492]
[186.61724854 -126.83593750]
[180.95446777 -112.94590759]
[175.29168701 -99.05588531]
[169.62889099 -85.16585541]
[163.96611023 -71.27583313]
[158.82414246 -57.18468857]
[163.41767883 -40.24755859]
[149.64944458 -28.01984215]
[145.24844360 -13.67999554]
[140.84744263 0.65985203]
[136.44645691 14.99969959]
[137.85293579 19.56378174]
[136.40721130 25.05986595]
[131.69505310 29.69743156]
[126.86904907 43.89988708]
[122.04305267 58.10234451]
[117.21705627 72.30480194]
[120.44818115 86.84471130]
[108.68229675 97.42179108]
[109.87944031 101.08774567]
[109.45487976 105.26358032]
[107.21711731 109.21319580]
[103.31068420 112.14228821]
[97.85532379 126.11508942]
[92.39996338 140.08789062]
[86.94461060 154.06068420]
[81.48925018 168.03347778]
[83.67771149 183.70259094]
[71.84147644 192.74432373]
[83.63819122 183.47946167]
[98.06152344 179.36032104]
[112.97186279 180.99792480]
[126.15734863 188.14935303]
[135.66198730 199.75373840]
[140.07583618 214.08963013]
[138.74411011 229.03039551]
[131.86436462 242.35966492]
[120.45718384 252.10009766]
[106.21473694 256.80679321]
[91.24982452 255.78149414]
[77.78238678 249.17633057]
[67.81024170 237.97113037]
[62.81270218 223.82812500]
[63.53066254 208.84719849]
[55.30185699 221.38859558]
[47.07304764 233.93000793]
[44.98174667 242.82180786]
[38.62720108 246.59561157]
[30.21258163 259.01309204]
[21.79796219 271.43060303]
[13.38334370 283.84808350]
[5.24812794 296.45040894]
[-2.60362744 309.23126221]
[-10.45538330 322.01208496]
[-18.30713844 334.79293823]
[-26.15889359 347.57376099]
[-34.01065063 360.35461426]
[-41.86240387 373.13546753]
[-30.19795990 382.60095215]
[-19.86884499 393.50805664]
[-11.05180550 405.67007446]
[-3.89771152 418.87893677]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 206]
[43 205]
[44 204]
[45 203]
[46 202]
[47 201]
[48 200]
[52 199]
[53 198]
[54 197]
[55 196]
[56 194]
[57 193]
[58 192]
[59 177]
[61 175]
[62 174]
[63 173]
[64 172]
[65 171]
[66 167]
[68 165]
[69 164]
[70 163]
[71 162]
[72 159]
[73 158]
[74 157]
[75 156]
[78 154]
[84 153]
[85 152]
[86 151]
[87 150]
[88 149]
[91 143]
[92 142]
[93 141]
[94 140]
[95 139]
[96 138]
[97 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
