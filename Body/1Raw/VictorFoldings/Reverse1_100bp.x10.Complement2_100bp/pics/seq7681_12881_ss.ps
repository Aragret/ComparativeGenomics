%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[150.02059937 559.47900391]
[146.92930603 544.78466797]
[145.50273132 529.83660889]
[145.75880432 514.82281494]
[147.69432068 499.93206787]
[151.28492737 485.35168457]
[156.48547363 471.26501465]
[163.23056030 457.84921265]
[171.43534851 445.27297974]
[180.99665833 433.69448853]
[191.79425049 423.25936890]
[203.69233704 414.09881592]
[216.54129028 406.32806396]
[210.26393127 392.70474243]
[203.98657227 379.08145142]
[197.70921326 365.45812988]
[191.43183899 351.83480835]
[185.15447998 338.21148682]
[172.80105591 329.89028931]
[174.05299377 314.11871338]
[167.77563477 300.49539185]
[161.49827576 286.87207031]
[149.14485168 278.55087280]
[150.39678955 262.77929688]
[138.04336548 254.45809937]
[139.29530334 238.68650818]
[133.01792908 225.06318665]
[126.74057770 211.43988037]
[120.16054535 197.96014404]
[113.28113556 184.63070679]
[106.40172577 171.30128479]
[106.58082581 186.30021667]
[102.92333221 200.84747314]
[95.67183685 213.97819519]
[85.30730438 224.82145691]
[72.51718140 232.65808105]
[58.14978027 236.96827698]
[43.15804672 237.46618652]
[28.53632355 234.11875916]
[15.25442314 227.14802551]
[4.19328213 217.01632690]
[-3.91345263 204.39567566]
[-8.52809048 190.12315369]
[-9.34455967 175.14538574]
[-6.30870628 160.45581055]
[0.37811252 147.02873230]
[10.27238369 135.75471497]
[22.71785736 127.38153076]
[36.88906479 122.46454620]
[51.84608841 121.32987213]
[66.59687805 124.05278015]
[80.16307068 130.45266724]
[91.64485931 140.10504150]
[100.28309631 152.37425232]
[98.05798340 137.54020691]
[95.83286285 122.70616150]
[93.60774994 107.87212372]
[89.39271545 101.00145721]
[91.46163940 92.80081940]
[89.45762634 77.93529510]
[87.45361328 63.06976318]
[85.44960022 48.20423508]
[83.44558716 33.33870697]
[81.44156647 18.47317886]
[77.19370270 10.38655949]
[79.52008820 3.37159657]
[77.73762512 -11.52212048]
[75.95515442 -26.41583824]
[74.17269135 -41.30955505]
[64.85032654 -54.09251404]
[71.02040863 -67.64904022]
[69.23793793 -82.54275513]
[57.76172256 -89.59336090]
[52.51816559 -101.78826141]
[55.21572113 -114.58689880]
[64.65031433 -123.36289215]
[63.08978653 -138.28149414]
[61.52926636 -153.20010376]
[59.96874237 -168.11871338]
[58.40821838 -183.03730774]
[56.62575150 -197.93103027]
[54.62173843 -212.79655457]
[52.61772537 -227.66207886]
[48.36985397 -235.74870300]
[50.69624329 -242.76367188]
[41.37387848 -255.54663086]
[47.54396057 -269.10314941]
[45.76149368 -283.99685669]
[43.97902679 -298.89059448]
[42.19656372 -313.78430176]
[27.25989723 -315.91937256]
[13.38516331 -321.84844971]
[1.51836097 -331.16732788]
[-7.53141069 -343.24060059]
[-13.14712334 -357.24511719]
[-14.94588947 -372.22598267]
[-12.80506420 -387.16183472]
[-6.87061310 -401.03427124]
[2.45284200 -412.89749146]
[14.52961349 -421.94259644]
[28.53628731 -427.55288696]
[43.51786423 -429.34588623]
[58.45287323 -427.19927979]
[72.32302856 -421.25949097]
[84.18262482 -411.93145752]
[93.22307587 -399.85119629]
[98.82797241 -385.84234619]
[100.61516571 -370.86007690]
[98.46280670 -355.92590332]
[92.51764679 -342.05804443]
[83.18503571 -330.20202637]
[71.10128021 -321.16625977]
[57.09027863 -315.56677246]
[58.87274551 -300.67306519]
[60.65521240 -285.77932739]
[62.43767548 -270.88562012]
[71.63255310 -259.16796875]
[65.58995819 -244.54612732]
[67.48325348 -229.66609192]
[69.48726654 -214.80056763]
[71.49127960 -199.93504333]
[74.67870331 -196.37844849]
[75.66573334 -190.78176880]
[73.32682037 -184.59783936]
[74.88734436 -169.67922974]
[76.44786835 -154.76062012]
[78.00839233 -139.84202576]
[79.56891632 -124.92341614]
[93.07413483 -114.90104675]
[95.19382477 -97.87689209]
[84.13166046 -84.32522583]
[85.91412354 -69.43150330]
[95.10899353 -57.71384430]
[89.06640625 -43.09202194]
[90.84887695 -28.19830322]
[92.63134003 -13.30458641]
[94.41380310 1.58913064]
[96.30709839 16.46916580]
[98.31111145 31.33469391]
[100.31512451 46.20022202]
[102.31913757 61.06575012]
[104.32315063 75.93128204]
[106.32716370 90.79680634]
[108.44178772 105.64700317]
[110.66690826 120.48104858]
[112.89202881 135.31509399]
[115.11714172 150.14913940]
[119.73114777 164.42187500]
[126.61056519 177.75129700]
[133.48997498 191.08073425]
[137.88343811 193.89933777]
[140.49523926 197.73754883]
[141.23533630 201.74594116]
[140.36389160 205.16250610]
[146.64125061 218.78582764]
[152.91860962 232.40914917]
[165.72103882 241.70475769]
[164.02009583 256.50192261]
[176.82252502 265.79754639]
[175.12159729 280.59472656]
[181.39895630 294.21801758]
[187.67631531 307.84133911]
[200.47872925 317.13696289]
[198.77780151 331.93414307]
[205.05516052 345.55743408]
[211.33251953 359.18075562]
[217.60987854 372.80407715]
[223.88723755 386.42739868]
[230.16461182 400.05072021]
[244.42001343 395.33230591]
[259.11407471 392.23968506]
[274.06204224 390.81176758]
[289.07586670 391.06649780]
[303.96676636 393.00067139]
[318.54745483 396.58996582]
[332.63461304 401.78927612]
[346.05102539 408.53314209]
[358.62799072 416.73678589]
[370.20733643 426.29708862]
[380.64343262 437.09375000]
[389.80502319 448.99099731]
[397.57693481 461.83923340]
[403.86138916 475.47689819]
[408.57937622 489.73245239]
[411.67153931 504.42660522]
[413.09902954 519.37457275]
[412.84384155 534.38842773]
[410.90921021 549.27929688]
[407.31948853 563.85986328]
[402.11978149 577.94683838]
[395.37551880 591.36303711]
[387.17147827 603.93975830]
[377.61083984 615.51885986]
[366.81387329 625.95458984]
[354.91632080 635.11584473]
[342.06784058 642.88739014]
[328.43002319 649.17144775]
[314.17431641 653.88897705]
[299.48007202 656.98071289]
[284.53204346 658.40777588]
[269.51821899 658.15209961]
[254.62742615 656.21704102]
[240.04693604 652.62689209]
[225.96011353 647.42675781]
[212.54409790 640.68206787]
[199.96763611 632.47766113]
[188.38887024 622.91668701]
[177.95341492 612.11938477]
[168.79251099 600.22161865]
[161.02137756 587.37286377]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 169]
[14 168]
[15 167]
[16 166]
[17 165]
[18 164]
[20 162]
[21 161]
[22 160]
[24 158]
[26 156]
[27 155]
[28 154]
[29 150]
[30 149]
[31 148]
[54 147]
[55 146]
[56 145]
[57 144]
[59 143]
[60 142]
[61 141]
[62 140]
[63 139]
[64 138]
[66 137]
[67 136]
[68 135]
[69 134]
[71 132]
[72 131]
[76 128]
[77 127]
[78 126]
[79 125]
[80 124]
[81 121]
[82 120]
[83 119]
[85 118]
[87 116]
[88 115]
[89 114]
[90 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
