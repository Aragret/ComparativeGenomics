%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[10.73542404 491.95236206]
[10.90808678 506.98632812]
[8.60373592 521.84362793]
[3.88523459 536.11901855]
[-3.11869287 549.42291260]
[-12.21697426 561.39251709]
[-23.16140175 571.70123291]
[-35.65340042 580.06781006]
[-49.35218811 586.26403809]
[-63.88404083 590.12084961]
[-78.85252380 591.53308105]
[-93.84928894 590.46209717]
[-108.46520996 586.93725586]
[-122.30155945 581.05462646]
[-134.98086548 572.97467041]
[-146.15722656 562.91790771]
[-155.52574158 551.15863037]
[-162.83084106 538.01763916]
[-167.87321472 523.85345459]
[-170.51533508 509.05249023]
[-170.68510437 494.01849365]
[-168.37788391 479.16162109]
[-163.65664673 464.88717651]
[-156.65014648 451.58456421]
[-147.54956055 439.61672974]
[-136.60314941 429.31015015]
[-124.10953522 420.94595337]
[-110.40956116 414.75238037]
[-95.87696075 410.89834595]
[-80.90820312 409.48904419]
[-65.91164398 410.56286621]
[-51.29640579 414.09054565]
[-45.42744446 400.28637695]
[-39.55848312 386.48220825]
[-33.68952179 372.67803955]
[-27.82056236 358.87384033]
[-21.95160103 345.06967163]
[-16.08263969 331.26550293]
[-17.05542374 327.87640381]
[-16.43499374 323.84771729]
[-13.93863487 319.93347168]
[-9.63104057 316.98529053]
[-3.15154481 303.45693970]
[3.32795095 289.92858887]
[-5.20126390 277.71719360]
[-6.48149252 262.77676392]
[-0.06913824 249.11117554]
[12.40432835 240.43307495]
[27.64619255 239.15527344]
[34.12569046 225.62692261]
[40.60518646 212.09857178]
[47.08468246 198.57023621]
[47.13893127 191.17977905]
[53.76267624 184.88980103]
[60.44287109 171.45942688]
[67.12306976 158.02905273]
[73.80326080 144.59866333]
[80.48345947 131.16828918]
[86.24948883 117.32080841]
[91.07548523 103.11835480]
[89.88237000 98.01047516]
[91.63603210 92.59770966]
[96.26239014 88.56860352]
[101.50910950 74.51612854]
[106.75582123 60.46366119]
[109.53143311 45.72269821]
[109.75476074 30.72435951]
[109.97808838 15.72602272]
[102.44711304 1.81218326]
[110.37304688 -10.79848099]
[110.59637451 -25.79681778]
[110.81970215 -40.79515457]
[111.04302979 -55.79349518]
[110.15021515 -70.76689911]
[108.14620209 -85.63243103]
[106.14218903 -100.49795532]
[104.02756500 -115.34815216]
[101.80244446 -130.18218994]
[99.57732391 -145.01623535]
[97.35221100 -159.85028076]
[87.46269226 -168.13038635]
[85.91477203 -180.53150940]
[92.99706268 -190.33802795]
[90.99304962 -205.20355225]
[88.98903656 -220.06907654]
[73.96624756 -220.91305542]
[59.37472534 -224.58512878]
[45.74195480 -230.95254517]
[33.56074142 -239.78512573]
[23.27143478 -250.76359558]
[15.24598408 -263.49105835]
[9.77450466 -277.50747681]
[7.05478764 -292.30609131]
[7.18514872 -307.35202026]
[10.16087532 -322.10131836]
[15.87439728 -336.02078247]
[24.11917305 -348.60729980]
[34.59716034 -359.40582275]
[46.92958832 -368.02603149]
[60.67064285 -374.15628052]
[75.32360077 -377.57495117]
[90.35875702 -378.15850830]
[105.23260498 -375.88583374]
[119.40747070 -370.83908081]
[132.37092590 -363.20065308]
[143.65437317 -353.24673462]
[152.84989929 -341.33712769]
[159.62510681 -327.90237427]
[163.73506165 -313.42810059]
[165.03120422 -298.43753052]
[163.46669006 -283.47262573]
[159.09805298 -269.07431030]
[152.08322144 -255.76307678]
[142.67578125 -244.02014160]
[131.21580505 -234.26998901]
[118.11756897 -226.86508179]
[103.85456085 -222.07308960]
[105.85857391 -207.20756531]
[107.86258698 -192.34204102]
[119.32172394 -179.05087280]
[112.18625641 -162.07540894]
[114.41136932 -147.24136353]
[116.63648987 -132.40731812]
[118.86160278 -117.57327271]
[122.96255493 -111.42477417]
[121.00771332 -102.50196838]
[123.01172638 -87.63644409]
[125.01573944 -72.77091217]
[132.16764832 -85.95613861]
[144.90203857 -93.88300323]
[159.89018250 -94.47944641]
[173.21420288 -87.58956146]
[181.39123535 -75.01434326]
[182.28381348 -60.04092407]
[175.65864563 -46.58332062]
[163.24751282 -38.15931702]
[148.29466248 -36.97093201]
[134.70874023 -43.32880020]
[126.04136658 -55.57016373]
[125.81803894 -40.57182693]
[125.59471130 -25.57349014]
[125.37138367 -10.57515335]
[132.91833496 2.26590466]
[124.97642517 15.94935036]
[124.75309753 30.94768715]
[124.52976990 45.94602585]
[131.41145325 32.61776733]
[141.35333252 21.38570786]
[153.74745178 12.93669319]
[167.83590698 7.78738356]
[182.75718689 6.25266123]
[197.59884644 8.42637444]
[211.45332336 14.17560101]
[223.47338867 23.14877129]
[232.92404175 34.79717636]
[239.22734070 48.40850830]
[241.99786377 63.15042877]
[241.06616211 78.12146759]
[236.48924255 92.40613556]
[228.54696655 105.13092041]
[217.72499084 115.51770020]
[204.68511963 122.93131256]
[190.22473145 126.91841888]
[175.22807312 127.23520660]
[160.61221313 123.86229706]
[147.27090454 117.00595093]
[136.01997375 107.08543396]
[127.54743195 94.70739746]
[122.37136078 80.62874603]
[120.80829620 65.71038055]
[115.56157684 79.76284790]
[110.31485748 93.81532288]
[105.27794647 107.94435120]
[100.45194244 122.14680481]
[113.05528259 114.01317596]
[128.05467224 113.87815094]
[140.80239868 121.78356171]
[147.34843445 135.27983093]
[145.66441345 150.18501282]
[136.27215576 161.88053894]
[122.08196259 166.74246216]
[107.49079895 163.26422119]
[97.01991272 152.52362061]
[93.91383362 137.84849548]
[87.23363495 151.27886963]
[80.55344391 164.70924377]
[73.87324524 178.13961792]
[67.19305420 191.56999207]
[60.61302567 205.04972839]
[54.13352966 218.57807922]
[47.65403366 232.10641479]
[41.17453766 245.63476562]
[49.73265839 258.31173706]
[50.78942108 273.47024536]
[44.16090775 287.03228760]
[31.71726990 295.39959717]
[16.85629654 296.40808105]
[10.37680054 309.93643188]
[3.89730501 323.46478271]
[-2.27846360 337.13446045]
[-8.14742470 350.93862915]
[-14.01638508 364.74279785]
[-19.88534546 378.54699707]
[-25.75430679 392.35116577]
[-31.62326813 406.15533447]
[-37.49222946 419.95950317]
[-24.81136894 428.03698730]
[-13.63307095 438.09161377]
[-4.26228714 449.84909058]
[3.04534078 462.98867798]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 206]
[33 205]
[34 204]
[35 203]
[36 202]
[37 201]
[38 200]
[42 199]
[43 198]
[44 197]
[49 192]
[50 191]
[51 190]
[52 189]
[54 188]
[55 187]
[56 186]
[57 185]
[58 184]
[59 174]
[60 173]
[63 172]
[64 171]
[65 170]
[66 146]
[67 145]
[68 144]
[70 142]
[71 141]
[72 140]
[73 139]
[74 128]
[75 127]
[76 126]
[77 124]
[78 123]
[79 122]
[80 121]
[83 119]
[84 118]
[85 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
