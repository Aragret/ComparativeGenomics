%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[-33.27660751 385.13647461]
[-25.88114357 398.21279907]
[-20.29463196 412.15820312]
[-16.61676788 426.72381592]
[-14.91318989 441.64965820]
[-15.21429825 456.66940308]
[-17.51472092 471.51501465]
[-21.77340317 485.92150879]
[-27.91434479 499.63180542]
[-35.82795334 512.40124512]
[-45.37299728 524.00189209]
[-56.37914276 534.22674561]
[-68.64996338 542.89337158]
[-81.96647644 549.84710693]
[-96.09103394 554.96374512]
[-110.77156067 558.15209961]
[-125.74607086 559.35522461]
[-140.74732971 558.55163574]
[-155.50761414 555.75567627]
[-169.76350403 551.01721191]
[-183.26062012 544.42089844]
[-195.75804138 536.08435059]
[-207.03277588 526.15643311]
[-216.88359070 514.81420898]
[-225.13468933 502.26025391]
[-231.63883972 488.71847534]
[-236.27993774 474.43060303]
[-238.97518921 459.65158081]
[-239.67646790 444.64520264]
[-238.37127686 429.67922974]
[-235.08290100 415.02078247]
[-229.87001038 400.93145752]
[-222.82566833 387.66268921]
[-214.07556152 375.45123291]
[-203.77586365 364.51507568]
[-192.11036682 355.04937744]
[-179.28726196 347.22302246]
[-165.53541565 341.17572021]
[-151.10020447 337.01538086]
[-136.23927307 334.81625366]
[-121.21782684 334.61758423]
[-106.30393219 336.42291260]
[-91.76375580 340.20001221]
[-77.85677338 345.88150024]
[-64.83116913 353.36596680]
[-55.69236755 341.47134399]
[-46.55356598 329.57672119]
[-37.41476440 317.68206787]
[-28.27596283 305.78744507]
[-19.13715935 293.89282227]
[-21.32074738 279.20379639]
[-12.22214508 267.01074219]
[3.19986391 264.82000732]
[12.33866596 252.92536926]
[13.92112923 245.70611572]
[21.70314598 240.92301941]
[31.01802826 229.16575623]
[40.33291245 217.40850830]
[49.64779663 205.65126038]
[58.96267700 193.89401245]
[66.03977966 180.66848755]
[70.65379333 166.39575195]
[75.26779938 152.12301636]
[79.88181305 137.85028076]
[84.49581909 123.57754517]
[89.10983276 109.30481720]
[86.37054443 95.59394836]
[96.61743927 86.08117676]
[101.23144531 71.80844116]
[105.41845703 57.40465927]
[101.38352966 42.10662460]
[112.06146240 31.72245216]
[115.81776428 17.20039368]
[119.57406616 2.67833400]
[123.33036041 -11.84372520]
[127.08666229 -26.36578369]
[130.51773071 -40.96810532]
[133.62184143 -55.64340973]
[136.72595215 -70.31871033]
[139.83006287 -84.99401093]
[142.93415833 -99.66931915]
[146.03826904 -114.34461975]
[129.34152222 -123.22724152]
[116.16287231 -136.77003479]
[107.75260925 -153.67430115]
[104.90442657 -172.32308960]
[107.88049316 -190.93589783]
[116.38737488 -207.73858643]
[129.60490417 -221.13256836]
[146.26527405 -229.84686279]
[164.77464294 -233.05867004]
[166.33515930 -247.97727966]
[167.89569092 -262.89587402]
[169.45620728 -277.81448364]
[171.01672363 -292.73309326]
[172.57725525 -307.65170288]
[174.13777161 -322.57031250]
[159.99627686 -327.81140137]
[147.60295105 -336.40533447]
[137.73681641 -347.81192017]
[131.01809692 -361.31414795]
[127.86911774 -376.06320190]
[128.48783875 -391.13195801]
[132.83535767 -405.57321167]
[140.63839722 -418.47915649]
[151.40643311 -429.03854370]
[164.46260071 -436.58752441]
[178.98616028 -440.65164185]
[194.06416321 -440.97537231]
[208.74877930 -437.53839111]
[222.11692810 -430.55673218]
[233.32827759 -420.46929932]
[241.67807007 -407.91015625]
[246.64143372 -393.66882324]
[247.90635681 -378.64050293]
[245.39334106 -363.76986694]
[239.26034546 -349.99172974]
[229.89291382 -338.17218018]
[217.87985229 -329.05419922]
[203.97634888 -323.21096802]
[189.05638123 -321.00976562]
[187.49586487 -306.09118652]
[185.93533325 -291.17257690]
[184.37481689 -276.25396729]
[182.81428528 -261.33535767]
[181.25376892 -246.41676331]
[179.69323730 -231.49815369]
[190.50172424 -227.92698669]
[200.46000671 -222.40141296]
[209.21818542 -215.11331177]
[216.46807861 -206.31648254]
[221.95410156 -196.31791687]
[225.48226929 -185.46696472]
[226.92704773 -174.14324951]
[226.23580933 -162.74327087]
[223.43078613 -151.66662598]
[218.60829163 -141.30191040]
[211.93550110 -132.01316833]
[203.64459229 -124.12704468]
[194.02468872 -117.92131042]
[183.41177368 -113.61510468]
[172.17698669 -111.36119080]
[160.71357727 -111.24050903]
[157.60946655 -96.56520844]
[154.50535583 -81.88990021]
[151.40124512 -67.21459961]
[148.29713440 -52.53929901]
[145.19302368 -37.86399841]
[146.79954529 -34.72529602]
[146.96562195 -30.65252495]
[145.26879883 -26.33117294]
[141.60871887 -22.60948372]
[137.85241699 -8.08742428]
[134.09611511 6.43463469]
[130.33982849 20.95669365]
[126.58351898 35.47875214]
[130.88713074 49.73807526]
[119.94051361 61.16096115]
[121.24531555 63.64201736]
[121.64595032 66.78941345]
[120.88370514 70.26136017]
[118.82824707 73.62879181]
[115.50418091 76.42245483]
[110.89016724 90.69518280]
[113.62945557 104.40605164]
[103.38256073 113.91882324]
[98.76855469 128.19155884]
[94.15454102 142.46429443]
[89.54053497 156.73703003]
[84.92652893 171.00975037]
[80.31251526 185.28248596]
[90.78040314 174.53895569]
[103.48909760 166.57096863]
[117.71987915 161.82913208]
[132.66790771 160.58163452]
[147.48782349 162.89903259]
[161.34146118 168.65025330]
[173.44535828 177.51004028]
[183.11495972 188.97732544]
[189.80340576 202.40359497]
[193.13244629 217.02951050]
[192.91378784 232.02792358]
[189.15982056 246.55058289]
[182.08282471 259.77615356]
[172.08305359 270.95669556]
[159.72604370 279.45989990]
[145.71063232 284.80484009]
[130.82946777 286.68920898]
[115.92414856 285.00650024]
[101.83764648 279.85186768]
[89.36661530 271.51678467]
[79.21636200 260.47268677]
[71.96092987 247.34413147]
[68.01063538 232.87364197]
[67.58890533 217.87956238]
[70.71993256 203.20889282]
[61.40504456 214.96614075]
[52.09016418 226.72338867]
[42.77528000 238.48065186]
[33.46039581 250.23789978]
[24.23329926 262.06417847]
[15.09449673 273.95880127]
[16.95071602 289.42465210]
[7.51322699 301.35729980]
[-7.24252701 303.03161621]
[-16.38132858 314.92623901]
[-25.52013206 326.82089233]
[-34.65893555 338.71551514]
[-43.79773712 350.61013794]
[-52.93653870 362.50479126]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 210]
[46 209]
[47 208]
[48 207]
[49 206]
[50 205]
[53 202]
[54 201]
[56 200]
[57 199]
[58 198]
[59 197]
[60 196]
[61 171]
[62 170]
[63 169]
[64 168]
[65 167]
[66 166]
[68 164]
[69 163]
[70 158]
[72 156]
[73 155]
[74 154]
[75 153]
[76 152]
[77 148]
[78 147]
[79 146]
[80 145]
[81 144]
[82 143]
[91 127]
[92 126]
[93 125]
[94 124]
[95 123]
[96 122]
[97 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
