%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[140.50367737 808.94915771]
[126.21510315 804.36987305]
[112.22291565 798.95220947]
[98.57624054 792.71508789]
[85.32303619 785.68048096]
[72.50983429 777.87316895]
[60.18165207 769.32043457]
[48.38179016 760.05242920]
[37.15169907 750.10162354]
[26.53082275 739.50305176]
[16.55646706 728.29388428]
[7.26366997 716.51354980]
[-1.31492925 704.20336914]
[-9.14919758 691.40661621]
[-16.21161461 678.16821289]
[-22.47737694 664.53466797]
[-27.92447281 650.55389404]
[-32.53376770 636.27496338]
[-36.28907776 621.74804688]
[-39.17720413 607.02423096]
[-41.18800735 592.15515137]
[-42.31442261 577.19305420]
[-42.55249405 562.19049072]
[-41.90138245 547.20019531]
[-40.36338043 532.27484131]
[-37.94388580 517.46673584]
[-34.65139771 502.82800293]
[-30.49748230 488.41003418]
[-25.49672890 474.26345825]
[-19.66670609 460.43798828]
[-13.02789021 446.98217773]
[-5.60360003 433.94326782]
[2.58008552 421.36709595]
[11.49442101 409.29782104]
[21.10809517 397.77783203]
[31.38733673 386.84756470]
[42.29604340 376.54547119]
[53.79589462 366.90771484]
[65.84649658 357.96817017]
[78.40551758 349.75817871]
[91.42885590 342.30661011]
[104.87075043 335.63964844]
[118.68399811 329.78070068]
[132.82006836 324.75036621]
[147.22932434 320.56628418]
[143.90705872 305.93884277]
[140.58480835 291.31137085]
[137.26254272 276.68389893]
[133.94029236 262.05645752]
[130.40061951 247.48007202]
[126.64431000 232.95802307]
[122.88801575 218.43595886]
[119.13171387 203.91389465]
[108.45378113 193.52972412]
[112.48870850 178.23168945]
[108.73240662 163.70962524]
[95.80810547 156.39540100]
[91.79180908 141.72148132]
[99.55126953 128.21487427]
[95.79496765 113.69281006]
[86.13245392 103.58700562]
[89.68296814 90.06348419]
[85.92666626 75.54142761]
[82.17036438 61.01936722]
[76.99165344 53.49482727]
[78.46796417 46.25312042]
[74.92829132 31.67674446]
[71.32403564 27.90097427]
[69.69173431 23.55484009]
[69.91843414 19.48499107]
[71.57150269 16.37055779]
[68.68622589 1.65066648]
[65.80095673 -13.06922531]
[55.55365753 -25.12341309]
[60.69836426 -39.10129929]
[57.81309128 -53.82118988]
[54.27341843 -68.39756775]
[50.08640671 -82.80134583]
[45.89939499 -97.20513153]
[41.71238327 -111.60890961]
[26.73060608 -110.21505737]
[11.75580597 -111.68197632]
[-2.67068720 -115.95664215]
[-16.02736473 -122.88452911]
[-27.83139229 -132.21520996]
[-37.65605927 -143.61135864]
[-45.14621353 -156.66104126]
[-50.03108597 -170.89250183]
[-52.13409424 -185.79129028]
[-51.37921524 -200.81881714]
[-47.79373932 -215.43185425]
[-41.50727844 -229.10214233]
[-32.74708557 -241.33552551]
[-21.82983017 -251.68975830]
[-9.15016937 -259.79052734]
[4.83353615 -265.34503174]
[19.61578369 -268.15246582]
[34.66220474 -268.11132812]
[49.42888260 -265.22311401]
[63.38200760 -259.59222412]
[76.01718903 -251.42224121]
[86.87766266 -241.00848389]
[95.57083893 -228.72738647]
[101.78245544 -215.02291870]
[105.28797913 -200.39050293]
[105.96067810 -185.35906982]
[103.77623749 -170.47200012]
[98.81362152 -156.26747131]
[91.25222778 -143.25894165]
[81.36539459 -131.91667175]
[69.51052856 -122.65067291]
[56.11616516 -115.79592133]
[60.30317688 -101.39214325]
[64.49018860 -86.98835754]
[68.67720032 -72.58457947]
[76.83190918 -85.17428589]
[91.47097015 -88.44502258]
[104.20848083 -80.52315521]
[107.74780273 -65.94669342]
[100.06145477 -53.06569672]
[85.55252838 -49.25898361]
[72.53298187 -56.70646286]
[75.41825104 -41.98657227]
[85.45918274 -30.98524857]
[80.52085114 -15.95449734]
[83.40612030 -1.23460615]
[86.29139709 13.48528481]
[89.50466919 28.13707161]
[93.04434204 42.71344757]
[96.69242859 57.26306915]
[100.44873047 71.78512573]
[104.20503235 86.30718994]
[113.86754608 96.41299438]
[110.31703186 109.93651581]
[114.07333374 124.45857239]
[127.40871429 132.50874329]
[131.01126099 147.28968811]
[123.25446320 159.95332336]
[127.01076508 174.47538757]
[137.95738220 185.89826965]
[133.65377808 200.15759277]
[137.41006470 214.67965698]
[141.16636658 229.20172119]
[144.92266846 243.72377014]
[149.27685547 248.69897461]
[150.30979919 254.28735352]
[148.56774902 258.73419189]
[151.88999939 273.36166382]
[155.21226501 287.98910522]
[158.53453064 302.61657715]
[161.85678101 317.24401855]
[176.65971375 314.79330444]
[191.58183289 313.22381592]
[206.57072449 312.54107666]
[221.57374573 312.74746704]
[236.53817749 313.84231567]
[251.41146851 315.82174683]
[266.14138794 318.67880249]
[280.67614746 322.40344238]
[294.96475220 326.98260498]
[308.95700073 332.40017700]
[322.60372925 338.63714600]
[335.85699463 345.67163086]
[348.67025757 353.47888184]
[360.99853516 362.03149414]
[372.79846191 371.29940796]
[384.02865601 381.25009155]
[394.64962769 391.84857178]
[404.62408447 403.05764771]
[413.91696167 414.83792114]
[422.49566650 427.14804077]
[430.33004761 439.94473267]
[437.39257812 453.18307495]
[443.65847778 466.81652832]
[449.10568237 480.79727173]
[453.71511841 495.07614136]
[457.47055054 509.60299683]
[460.35879517 524.32684326]
[462.36975098 539.19586182]
[463.49627686 554.15795898]
[463.73449707 569.16052246]
[463.08349609 584.15081787]
[461.54562378 599.07623291]
[459.12628174 613.88433838]
[455.83392334 628.52307129]
[451.68011475 642.94110107]
[446.67950439 657.08770752]
[440.84957886 670.91320801]
[434.21087646 684.36907959]
[426.78671265 697.40808105]
[418.60314941 709.98431396]
[409.68890381 722.05364990]
[400.07534790 733.57373047]
[389.79620361 744.50408936]
[378.88757324 754.80627441]
[367.38781738 764.44415283]
[355.33728027 773.38378906]
[342.77832031 781.59393311]
[329.75506592 789.04559326]
[316.31323242 795.71264648]
[302.50003052 801.57171631]
[288.36398315 806.60217285]
[273.95477295 810.78637695]
[259.32299805 814.10961914]
[244.52005005 816.56024170]
[229.59791565 818.12957764]
[214.60902405 818.81219482]
[199.60600281 818.60565186]
[184.64158630 817.51068115]
[169.76831055 815.53112793]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 151]
[46 150]
[47 149]
[48 148]
[49 147]
[50 144]
[51 143]
[52 142]
[53 141]
[55 139]
[56 138]
[59 135]
[60 134]
[62 132]
[63 131]
[64 130]
[66 129]
[67 128]
[71 127]
[72 126]
[73 125]
[75 123]
[76 122]
[77 115]
[78 114]
[79 113]
[80 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
