%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[94.22690582 461.64352417]
[91.76814270 476.64428711]
[83.75175476 489.55960083]
[71.40017700 498.42004395]
[56.59693527 501.87438965]
[41.59941864 499.39587402]
[28.69463730 491.36251831]
[19.85047722 478.99929810]
[16.41560936 464.19152832]
[18.91382599 449.19726562]
[26.96416664 436.30307007]
[39.33901215 427.47518921]
[54.15129089 424.05978394]
[56.59701920 409.26052856]
[59.04274750 394.46124268]
[57.03191376 387.34939575]
[61.63663101 379.46054077]
[64.30242920 364.69931030]
[66.96822357 349.93811035]
[69.63401794 335.17687988]
[72.18984985 320.39624023]
[74.63557434 305.59695435]
[77.08130646 290.79769897]
[79.19593048 275.94747925]
[80.97839355 261.05377197]
[82.76086426 246.16004944]
[84.54332733 231.26634216]
[86.32579041 216.37261963]
[88.10826111 201.47889709]
[81.93817902 187.92237854]
[91.26054382 175.13941956]
[92.70996094 160.20960999]
[93.82560730 145.25115967]
[94.94126129 130.29270935]
[94.49465179 115.29935455]
[85.67522430 107.69284821]
[84.20520782 96.13948059]
[90.83880615 86.56677246]
[89.05633545 71.67305756]
[87.27387238 56.77933884]
[77.63526917 48.20845413]
[76.45726013 35.76674652]
[83.82839203 26.17544556]
[82.26786804 11.25684071]
[73.13684845 -1.66349840]
[79.50808716 -15.12665653]
[63.54652786 -23.72819328]
[56.00963211 -40.04611969]
[59.74379730 -57.46756744]
[73.06928253 -69.05649567]
[71.06526947 -83.92201996]
[69.06124878 -98.78755188]
[67.05723572 -113.65307617]
[65.05322266 -128.51860046]
[63.04920959 -143.38414001]
[61.04519653 -158.24966431]
[59.04118347 -173.11518860]
[55.30905533 -178.57254028]
[54.94751740 -184.24407959]
[57.20564270 -188.45239258]
[55.64511871 -203.37100220]
[54.08459473 -218.28961182]
[42.09092712 -228.22891235]
[40.72085571 -243.38072205]
[50.27037048 -254.75360107]
[48.70985031 -269.67221069]
[47.14932632 -284.59082031]
[45.58880234 -299.50942993]
[43.80633545 -314.40313721]
[41.80232239 -329.26864624]
[39.46683502 -344.08572388]
[36.80104065 -358.84695435]
[34.13524628 -373.60815430]
[31.46945000 -388.36938477]
[28.80365372 -403.13058472]
[26.13785934 -417.89181519]
[11.13324165 -417.17312622]
[-3.83680940 -418.41915894]
[-18.51613808 -421.60858154]
[-32.65356064 -426.68679810]
[-46.00716782 -433.56692505]
[-58.34846115 -442.13125610]
[-69.46627045 -452.23318481]
[-79.17034149 -463.69992065]
[-87.29463959 -476.33523560]
[-93.70014191 -489.92288208]
[-98.27724457 -504.23040771]
[-100.94761658 -519.01293945]
[-101.66558075 -534.01763916]
[-100.41883850 -548.98760986]
[-97.22872925 -563.66680908]
[-92.14984131 -577.80395508]
[-85.26907349 -591.15722656]
[-76.70417023 -603.49810791]
[-66.60169220 -614.61547852]
[-55.13449860 -624.31896973]
[-42.49880981 -632.44268799]
[-28.91084480 -638.84753418]
[-14.60310459 -643.42395020]
[0.17958321 -646.09362793]
[15.18426800 -646.81085205]
[30.15420151 -645.56341553]
[44.83322525 -642.37261963]
[58.97016525 -637.29302979]
[72.32312012 -630.41162109]
[84.66359711 -621.84619141]
[95.78044128 -611.74316406]
[105.48342133 -600.27551270]
[113.60652161 -587.63940430]
[120.01072693 -574.05114746]
[124.58646393 -559.74322510]
[127.25543213 -544.96038818]
[127.97196198 -529.95568848]
[126.72380066 -514.98577881]
[123.53229523 -500.30691528]
[118.45205688 -486.17022705]
[111.57002258 -472.81759644]
[103.00394440 -460.47750854]
[92.90040588 -449.36114502]
[81.43228912 -439.65872192]
[68.79582977 -431.53622437]
[55.20725250 -425.13265991]
[40.89907455 -420.55761719]
[43.56487274 -405.79638672]
[46.23066711 -391.03518677]
[48.89646149 -376.27395630]
[51.56225586 -361.51275635]
[54.22805405 -346.75152588]
[56.90061188 -344.45156860]
[58.59194565 -340.74288940]
[58.65207291 -336.10070801]
[56.66785049 -331.27267456]
[58.67186356 -316.40713501]
[61.85928726 -312.85055542]
[62.84631729 -307.25387573]
[60.50740814 -301.06994629]
[62.06793213 -286.15133667]
[63.62845230 -271.23272705]
[65.18897247 -256.31411743]
[76.88529205 -247.16362000]
[78.68040466 -232.05625916]
[69.00319672 -219.85012817]
[70.56372070 -204.93151855]
[72.12424469 -190.01292419]
[73.90671539 -175.11920166]
[75.91072845 -160.25367737]
[77.91474152 -145.38815308]
[79.91875458 -130.52261353]
[81.92276764 -115.65708923]
[83.92678070 -100.79156494]
[85.93079376 -85.92603302]
[87.93480682 -71.06050873]
[99.35718536 -66.94899750]
[107.99871063 -58.32015228]
[112.17607117 -46.76806641]
[111.03881073 -34.46415710]
[104.74164581 -23.74901962]
[94.42668915 -16.68717957]
[103.44608307 -4.83391953]
[97.18647003 9.69631767]
[98.74699402 24.61492157]
[109.80532074 38.24137878]
[102.16758728 54.99687576]
[103.95005798 69.89059448]
[105.73252106 84.78430939]
[116.12969971 97.94770813]
[109.36018372 113.29534149]
[115.18498230 99.47247314]
[125.80204010 88.87633514]
[139.63636780 83.07878876]
[154.63571167 82.93988037]
[168.57504272 88.48020935]
[179.38652039 98.87790680]
[185.46632385 112.59052277]
[185.91256714 127.58388519]
[180.65902710 141.63380432]
[170.48506165 152.65608215]
[156.89991760 159.01560974]
[141.91883850 159.76898193]
[127.76421356 154.80445862]
[116.53578186 144.85848999]
[109.89971161 131.40835571]
[108.78406525 146.36680603]
[107.66841888 161.32525635]
[109.93649292 166.02662659]
[110.15277100 170.66413879]
[108.68518066 174.46693420]
[106.15425873 176.92189026]
[112.19684601 191.54370117]
[103.00197601 203.26136780]
[101.21951294 218.15509033]
[99.43704224 233.04879761]
[97.65457916 247.94252014]
[95.87211609 262.83624268]
[94.08964539 277.72994995]
[96.14553070 282.52792358]
[96.15452576 287.17047119]
[94.51859283 290.90393066]
[91.88057709 293.24340820]
[89.43484497 308.04269409]
[86.98912048 322.84194946]
[88.67742920 331.81900024]
[84.39523315 337.84268188]
[81.72943878 352.60388184]
[79.06364441 367.36511230]
[76.39785004 382.12634277]
[73.84201813 396.90698242]
[71.39628601 411.70626831]
[68.95056152 426.50552368]
[81.87643433 434.50491333]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 209]
[14 208]
[15 207]
[17 206]
[18 205]
[19 204]
[20 203]
[21 201]
[22 200]
[23 199]
[24 195]
[25 194]
[26 193]
[27 192]
[28 191]
[29 190]
[31 188]
[32 184]
[33 183]
[34 182]
[35 167]
[38 165]
[39 164]
[40 163]
[43 161]
[44 160]
[46 158]
[50 152]
[51 151]
[52 150]
[53 149]
[54 148]
[55 147]
[56 146]
[57 145]
[60 144]
[61 143]
[62 142]
[65 139]
[66 138]
[67 137]
[68 136]
[69 133]
[70 132]
[71 128]
[72 127]
[73 126]
[74 125]
[75 124]
[76 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
