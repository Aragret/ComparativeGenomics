%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[75.29069519 537.76971436]
[60.26194000 537.09802246]
[45.61256409 533.67596436]
[31.84152222 527.62011719]
[19.41784859 519.13677979]
[8.76468754 508.51489258]
[0.24488261 496.11618042]
[-5.85138464 482.36300659]
[-9.31647778 467.72375488]
[-10.03237629 452.69702148]
[-7.97469759 437.79467773]
[-3.21352553 423.52420044]
[4.08897638 410.37170410]
[13.68408775 398.78515625]
[25.24500275 389.15914917]
[38.37796021 381.82156372]
[52.63565445 377.02233887]
[67.53247833 374.92486572]
[68.20226288 359.93984985]
[68.87204742 344.95480347]
[61.71076965 331.89474487]
[70.05656433 318.45382690]
[67.21486664 311.63131714]
[70.84951782 303.25115967]
[71.74233246 288.27774048]
[64.77629089 275.11251831]
[73.32127380 261.79733276]
[74.21408844 246.82392883]
[61.43340302 254.67593384]
[47.27466202 249.72314453]
[42.17516327 235.61659241]
[49.89406967 222.75508118]
[64.74128723 220.61964417]
[75.77138519 230.78291321]
[77.77539825 215.91738892]
[79.77941132 201.05186462]
[81.78343201 186.18634033]
[83.78744507 171.32080078]
[85.79145813 156.45527649]
[87.79547119 141.58975220]
[85.57378387 134.54092407]
[89.94158173 126.51844788]
[91.61312103 111.61187744]
[85.71572876 98.93463135]
[93.42842865 87.27247620]
[94.54407501 72.31402588]
[92.06160736 63.52339554]
[95.78932190 57.14170456]
[97.12755585 42.20151901]
[98.46578979 27.26133537]
[99.80402374 12.32114983]
[101.14225769 -2.61903524]
[101.47723389 -17.61529541]
[100.80744934 -32.60033417]
[100.13766479 -47.58537292]
[99.46788025 -62.57041168]
[86.68620300 -71.16896057]
[81.47933960 -85.47776794]
[85.64713287 -99.93783569]
[97.38985443 -109.06178284]
[96.72006989 -124.04682159]
[96.05028534 -139.03186035]
[95.38050079 -154.01689148]
[93.59803772 -168.91061401]
[90.71276093 -183.63050842]
[87.74421692 -186.79937744]
[86.10348511 -190.38720703]
[85.75921631 -193.92512512]
[86.53102112 -197.00260925]
[88.12139893 -199.31103516]
[86.11738586 -214.17655945]
[84.11337280 -229.04209900]
[82.10935974 -243.90762329]
[80.10534668 -258.77316284]
[78.10133362 -273.63867188]
[76.09731293 -288.50421143]
[72.36518860 -293.96157837]
[72.00364685 -299.63308716]
[74.26177216 -303.84140015]
[72.70124817 -318.76000977]
[59.64708328 -323.78509521]
[50.07722092 -333.89617920]
[45.81783676 -347.08087158]
[47.64590836 -360.74862671]
[55.14818192 -372.23968506]
[66.81282043 -379.34274292]
[65.47458649 -394.28292847]
[64.13635254 -409.22311401]
[62.79812241 -424.16326904]
[47.86962509 -426.18511963]
[33.76550293 -431.47863770]
[21.19320679 -439.77835083]
[10.78335953 -450.66790771]
[3.05811501 -463.60113525]
[-1.59503210 -477.92929077]
[-2.94268179 -492.93368530]
[-0.91723633 -507.86169434]
[4.37970829 -521.96453857]
[12.68245983 -534.53479004]
[23.57455635 -544.94201660]
[36.50965500 -552.66412354]
[50.83893204 -557.31378174]
[65.84364319 -558.65783691]
[80.77115631 -556.62878418]
[94.87271881 -551.32836914]
[107.44098663 -543.02258301]
[117.84555817 -532.12799072]
[125.56452942 -519.19104004]
[130.21073914 -504.86059570]
[131.55111694 -489.85556030]
[129.51843262 -474.92855835]
[124.21465302 -460.82827759]
[115.90581512 -448.26202393]
[105.00867462 -437.86007690]
[92.06983948 -430.14425659]
[77.73830414 -425.50152588]
[79.07653809 -410.56134033]
[80.41477203 -395.62115479]
[81.75300598 -380.68096924]
[96.57392120 -374.24255371]
[106.18087769 -361.13293457]
[107.87540436 -344.87423706]
[101.10081482 -329.89422607]
[87.61985779 -320.32052612]
[89.18038177 -305.40194702]
[90.96284485 -290.50820923]
[92.96685791 -275.64270020]
[94.97087097 -260.77716064]
[96.97488403 -245.91163635]
[98.97889709 -231.04611206]
[100.98291016 -216.18057251]
[102.98692322 -201.31504822]
[105.43265533 -186.51577759]
[108.31792450 -171.79588318]
[114.67235565 -185.38342285]
[126.91236115 -194.05419922]
[141.83842468 -195.54170227]
[155.54890442 -189.45709229]
[164.45993042 -177.39086914]
[166.24217224 -162.49711609]
[160.42976379 -148.66903687]
[148.54203796 -139.52125549]
[133.68643188 -137.44496155]
[119.74616241 -142.98291016]
[110.36553955 -154.68667603]
[111.03532410 -139.70164490]
[111.70510864 -124.71660614]
[112.37489319 -109.73156738]
[124.88478851 -101.69163513]
[130.32603455 -87.66106415]
[126.41649628 -72.94478607]
[114.45291901 -63.24019623]
[115.12270355 -48.25515747]
[115.79248810 -33.27011871]
[116.46227264 -18.28507996]
[125.24440765 -30.44542885]
[139.16752625 -36.02634811]
[153.91740417 -33.29852295]
[164.92364502 -23.10720634]
[168.77581787 -8.61028385]
[164.28028870 5.70021391]
[152.83007812 15.39002228]
[137.97311401 17.45664978]
[124.31302643 11.25973034]
[116.08244324 -1.28080118]
[114.74420929 13.65938377]
[113.40597534 28.59956932]
[112.06774139 43.53975296]
[110.72950745 58.47993851]
[109.50253296 73.42967224]
[108.38687897 88.38812256]
[114.28427124 101.06536865]
[106.57157135 112.72752380]
[119.46775055 105.06667328]
[133.55117798 110.22970581]
[138.44009399 124.41062927]
[130.53054810 137.15579224]
[115.65318298 139.06993103]
[104.77561951 128.74356079]
[102.66099548 143.59376526]
[100.65698242 158.45928955]
[98.65296936 173.32481384]
[96.64895630 188.19035339]
[94.64494324 203.05587769]
[92.64093018 217.92140198]
[90.63691711 232.78692627]
[89.18750000 247.71673584]
[88.29467773 262.69015503]
[95.19686127 276.92639160]
[86.71573639 289.17056274]
[85.82292175 304.14395142]
[85.04160309 319.12359619]
[92.15497589 333.25549316]
[83.85708618 345.62457275]
[83.18730164 360.60961914]
[82.51751709 375.59466553]
[97.16781616 379.01278687]
[110.94049072 385.06488037]
[123.36644745 393.54486084]
[134.02247620 404.16390991]
[142.54562378 416.56030273]
[148.64559937 430.31185913]
[152.11463928 444.95016479]
[152.83457947 459.97668457]
[150.78091431 474.87960815]
[146.02359009 489.15133667]
[138.72463989 502.30581665]
[129.13264465 513.89495850]
[117.57433319 523.52404785]
[104.44335175 530.86517334]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 196]
[19 195]
[20 194]
[22 192]
[24 191]
[25 190]
[27 188]
[28 187]
[34 186]
[35 185]
[36 184]
[37 183]
[38 182]
[39 181]
[40 180]
[42 179]
[43 173]
[45 171]
[46 170]
[48 169]
[49 168]
[50 167]
[51 166]
[52 165]
[53 155]
[54 154]
[55 153]
[56 152]
[60 148]
[61 147]
[62 146]
[63 145]
[64 134]
[65 133]
[70 132]
[71 131]
[72 130]
[73 129]
[74 128]
[75 127]
[76 126]
[79 125]
[80 124]
[86 119]
[87 118]
[88 117]
[89 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
