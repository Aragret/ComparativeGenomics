%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[108.56752014 518.64471436]
[106.68270111 503.73181152]
[107.15410614 488.70770264]
[109.97011566 473.94232178]
[115.06138611 459.79928589]
[122.30254364 446.62689209]
[131.51527405 434.74948120]
[142.47268677 424.45962524]
[154.90495300 416.01065063]
[168.50593567 409.61065674]
[164.31892395 395.20687866]
[160.13191223 380.80307007]
[155.83778381 366.43087769]
[151.33015442 352.12417603]
[146.71614075 337.85144043]
[142.10214233 323.57870483]
[137.48812866 309.30599976]
[130.73664856 322.70065308]
[117.00489807 328.73715210]
[102.57086182 324.65567017]
[94.03358459 312.32217407]
[95.29618835 297.37539673]
[105.78143311 286.64880371]
[120.69560242 285.04644775]
[133.22125244 293.30239868]
[130.11714172 278.62707520]
[127.01303101 263.95178223]
[116.80942535 253.10118103]
[121.52342224 237.99856567]
[118.41931152 223.32327271]
[115.31520081 208.64796448]
[112.21109009 193.97265625]
[109.10698700 179.29736328]
[106.00287628 164.62205505]
[102.89876556 149.94676208]
[87.33152008 148.40031433]
[73.00289917 142.12170410]
[61.31383133 131.72477722]
[53.40717316 118.22606659]
[50.05596924 102.94536591]
[51.58787918 87.37669373]
[57.85312271 73.04221344]
[68.23913574 61.34344864]
[81.73046112 53.42419815]
[71.12881470 41.68045425]
[75.85506439 27.55558968]
[72.53279877 12.92812920]
[69.21054077 -1.69933128]
[65.88828278 -16.32679176]
[50.83996964 -17.74301529]
[36.98493958 -23.73306465]
[25.67507172 -33.69876862]
[18.00965309 -46.65470886]
[14.72855186 -61.32566452]
[16.14081573 -76.27211761]
[22.09561157 -90.03150177]
[31.99821663 -101.26130676]
[44.86940002 -108.87008667]
[41.54714203 -123.49755096]
[38.22488022 -138.12501526]
[27.62322807 -149.86875916]
[32.34947968 -163.99362183]
[29.02721977 -178.62107849]
[25.70495987 -193.24853516]
[22.38269997 -207.87599182]
[19.06044006 -222.50346375]
[15.73818111 -237.13092041]
[12.41592121 -251.75837708]
[9.09366226 -266.38583374]
[5.59958124 -251.79846191]
[-1.12192225 -238.38871765]
[-10.71825218 -226.86003113]
[-22.68600273 -217.81719971]
[-36.39737320 -211.73457336]
[-51.13308716 -208.93124390]
[-66.12014771 -209.55426025]
[-80.57234955 -213.57093811]
[-93.73156738 -220.77058411]
[-104.90750122 -230.77551270]
[-113.51387024 -243.06088257]
[-119.09921265 -256.98223877]
[-121.37052917 -271.80926514]
[-120.20867157 -286.76422119]
[-115.67458344 -301.06253052]
[-108.00611877 -313.95419312]
[-97.60555267 -324.76287842]
[-85.01847076 -332.92166138]
[-70.90516663 -338.00247192]
[-56.00600433 -339.73883057]
[-41.10255814 -338.03964233]
[-26.97663307 -332.99401855]
[-14.36924744 -324.86666870]
[-3.94176102 -314.08392334]
[3.75882268 -301.21142578]
[8.32886696 -286.92282104]
[10.55398464 -301.75686646]
[12.77910137 -316.59091187]
[15.00421906 -331.42495728]
[17.22933578 -346.25900269]
[3.39126396 -352.27316284]
[-8.41810226 -361.66470337]
[-17.39358139 -373.79333496]
[-22.92321014 -387.83206177]
[-24.62996674 -402.82369995]
[-22.39748573 -417.74609375]
[-16.37797928 -431.58184814]
[-6.98186636 -443.38760376]
[5.15020895 -452.35839844]
[19.19106102 -457.88259888]
[34.18336487 -459.58355713]
[49.10491562 -457.34533691]
[62.93833923 -451.32046509]
[74.74044800 -441.91979980]
[83.70655823 -429.78427124]
[89.22534180 -415.74127197]
[90.92052460 -400.74832153]
[88.67652130 -385.82763672]
[82.64633179 -371.99655151]
[73.24110413 -360.19805908]
[61.10210419 -351.23663330]
[47.05699158 -345.72326660]
[32.06338120 -344.03387451]
[29.83826256 -329.19982910]
[27.61314583 -314.36578369]
[25.38802910 -299.53173828]
[23.16291046 -284.69772339]
[23.72112274 -269.70809937]
[27.04338074 -255.08064270]
[30.36564064 -240.45317078]
[33.68790054 -225.82571411]
[37.01015854 -211.19825745]
[40.33242035 -196.57080078]
[43.65467834 -181.94334412]
[46.97694016 -167.31587219]
[57.34096146 -156.61839294]
[52.85234070 -141.44726562]
[56.17460251 -126.81980896]
[59.49686050 -112.19234467]
[74.39199066 -110.88998413]
[88.17394257 -105.03952789]
[99.48810577 -95.20235443]
[107.21817780 -82.33235931]
[110.59634399 -67.68344879]
[109.27951050 -52.68741226]
[103.38410950 -38.81396484]
[93.47589874 -27.42669487]
[80.51573944 -19.64905167]
[83.83800507 -5.02159071]
[87.16026306 9.60586929]
[90.48252106 24.23332977]
[100.84654236 34.93082047]
[96.35792542 50.10194016]
[110.56110382 51.09658051]
[123.90896606 56.05181885]
[135.32048035 64.56632996]
[143.87145996 75.95055389]
[148.86938477 89.28248596]
[149.90945435 103.48241425]
[146.90747070 117.40030670]
[140.10653687 129.90898132]
[130.05744934 139.99539185]
[117.57406616 146.84265137]
[120.67817688 161.51794434]
[123.78228760 176.19325256]
[126.88639832 190.86854553]
[129.99050903 205.54385376]
[133.09461975 220.21916199]
[136.19873047 234.89445496]
[146.62435913 246.79473877]
[141.68833923 260.84768677]
[144.79244995 275.52297974]
[147.89656067 290.19827271]
[151.76086426 304.69198608]
[156.37486267 318.96472168]
[160.98887634 333.23745728]
[165.60289001 347.51016235]
[171.22029114 354.71313477]
[170.17762756 362.02987671]
[175.68716431 369.31567383]
[174.53569031 376.61605835]
[178.72270203 391.01986694]
[182.90971375 405.42364502]
[197.82212830 403.53512573]
[212.84635925 404.00280762]
[227.61244202 406.81515503]
[241.75674438 411.90295410]
[254.93092346 419.14083862]
[266.81060791 428.35061646]
[277.10317993 439.30548096]
[285.55523682 451.73565674]
[291.95858765 465.33505249]
[296.15560913 479.76876831]
[298.04287720 494.68133545]
[297.57394409 509.70553589]
[294.76037598 524.47137451]
[289.67144775 538.61523438]
[282.43246460 551.78881836]
[273.22167969 563.66772461]
[262.26596069 573.95941162]
[249.83509827 582.41046143]
[236.23518372 588.81268311]
[221.80113220 593.00848389]
[206.88841248 594.89453125]
[191.86424255 594.42437744]
[177.09863281 591.60961914]
[162.95516968 586.51947021]
[149.78218079 579.27941895]
[137.90403748 570.06768799]
[127.61325836 559.11108398]
[119.16326141 546.67956543]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 182]
[11 181]
[12 180]
[13 178]
[14 176]
[15 175]
[16 174]
[17 173]
[25 172]
[26 171]
[27 170]
[29 168]
[30 167]
[31 166]
[32 165]
[33 164]
[34 163]
[35 162]
[44 152]
[46 150]
[47 149]
[48 148]
[49 147]
[58 138]
[59 137]
[60 136]
[62 134]
[63 133]
[64 132]
[65 131]
[66 130]
[67 129]
[68 128]
[69 127]
[95 126]
[96 125]
[97 124]
[98 123]
[99 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
