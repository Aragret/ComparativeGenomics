%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCACCUCAUCCCGACUCUGACCCCACCCCGGAAGAUACCGACUCCCCUCAGUCCCCACCUCUGGAUUAACCCGACUAAACGGACGACGACGAUCCUCCUCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[39.90599823 574.56805420]
[36.18280029 559.87402344]
[37.71287537 544.79309082]
[44.31145096 531.14636230]
[55.18172455 520.58160400]
[69.01104736 514.37475586]
[67.89540100 499.41629028]
[66.77975464 484.45782471]
[63.14746857 478.02136230]
[65.76053619 469.26864624]
[64.86772156 454.29525757]
[63.97490692 439.32183838]
[60.43885422 432.83200073]
[63.18195343 424.11917114]
[62.51216888 409.13412476]
[61.84238434 394.14910889]
[59.86706924 392.16006470]
[58.56061935 389.26873779]
[58.27064896 385.72595215]
[59.24763870 381.90362549]
[61.60575485 378.25765991]
[61.82908249 363.25930786]
[62.05241013 348.26095581]
[62.27573776 333.26263428]
[62.49906540 318.26428223]
[62.72239304 303.26596069]
[62.94572449 288.26760864]
[60.76547241 285.49655151]
[59.81909561 281.53176880]
[60.65301514 276.96472168]
[63.52886581 272.60852051]
[64.42168427 257.63513184]
[65.31449890 242.66171265]
[66.20731354 227.68830872]
[57.02704620 239.55096436]
[43.42410660 245.87236023]
[28.43742943 245.24028015]
[15.41507626 237.79594421]
[7.26627350 225.20240784]
[5.81148386 210.27311707]
[11.37571144 196.34332275]
[22.71589470 186.52494812]
[37.29860687 183.01147461]
[51.86603165 186.58779907]
[63.16376877 196.45497131]
[68.66788483 210.40866089]
[71.99014282 195.78120422]
[75.31240082 181.15374756]
[78.63465881 166.52629089]
[81.95691681 151.89881897]
[85.06102753 137.22352600]
[87.94630432 122.50363159]
[90.83157349 107.78373718]
[93.49736786 93.02252197]
[86.61543274 75.94269562]
[98.27117920 62.82360840]
[100.49629974 47.98956680]
[102.72141266 33.15552139]
[95.69651794 22.33823967]
[97.85520935 10.02873898]
[107.50303650 2.73175192]
[109.94876862 -12.06751919]
[96.78311157 -19.54354668]
[86.98801422 -31.05128288]
[81.73096466 -45.18930817]
[81.62837982 -60.24452209]
[86.67333221 -74.39973450]
[96.23874664 -85.95297241]
[109.15527344 -93.52214813]
[123.85420990 -96.21035767]
[126.29994202 -111.00962830]
[128.74566650 -125.80889893]
[131.19139099 -140.60816956]
[133.63711548 -155.40744019]
[136.08285522 -170.20671082]
[138.52857971 -185.00598145]
[140.97430420 -199.80525208]
[127.44608307 -193.32550049]
[113.87943268 -199.72439575]
[110.27518463 -214.28494263]
[119.29025269 -226.27363586]
[134.27906799 -226.85284424]
[144.19197083 -215.59719849]
[147.73164368 -230.17358398]
[151.27131653 -244.74995422]
[154.81098938 -259.32632446]
[158.35066223 -273.90270996]
[161.89033508 -288.47909546]
[165.10360718 -303.13085938]
[167.98887634 -317.85076904]
[170.87416077 -332.57064819]
[173.75942993 -347.29055786]
[175.54188538 -362.18426514]
[176.21166992 -377.16931152]
[176.88146973 -392.15432739]
[177.55125427 -407.13937378]
[178.22103882 -422.12442017]
[178.89082336 -437.10946655]
[179.56060791 -452.09448242]
[165.65492249 -458.17697144]
[154.88824463 -468.87478638]
[148.71670532 -482.74114990]
[147.97491455 -497.90078735]
[152.76322937 -512.30340576]
[162.43405151 -524.00128174]
[175.67948914 -531.41229248]
[190.70819092 -533.53417969]
[205.48767090 -530.07995605]
[218.01910400 -521.51678467]
[226.60772705 -509.00280762]
[230.09201050 -494.23040771]
[228.00071716 -479.19738770]
[220.61666870 -465.93692017]
[208.93852234 -456.24230957]
[194.54563904 -451.42471313]
[193.87585449 -436.43966675]
[193.20606995 -421.45462036]
[192.53628540 -406.46960449]
[191.86650085 -391.48455811]
[191.19671631 -376.49951172]
[190.52693176 -361.51446533]
[199.90826416 -373.21878052]
[213.84870911 -378.75628662]
[228.70423889 -376.67956543]
[240.59169006 -367.53140259]
[246.40368652 -353.70315552]
[244.62100220 -338.80947876]
[235.70960999 -326.74353027]
[221.99893188 -320.65933228]
[207.07292175 -322.14727783]
[194.83317566 -330.81842041]
[188.47932434 -344.40527344]
[185.59403992 -329.68539429]
[182.70877075 -314.96548462]
[179.82350159 -300.24560547]
[181.47657776 -297.13116455]
[181.70326233 -293.06130981]
[180.07096863 -288.71517944]
[176.46670532 -284.93942261]
[172.92703247 -270.36303711]
[169.38735962 -255.78666687]
[165.84768677 -241.21028137]
[162.30801392 -226.63391113]
[158.76834106 -212.05754089]
[155.77357483 -197.35952759]
[153.32785034 -182.56025696]
[150.88212585 -167.76098633]
[148.43638611 -152.96171570]
[145.99066162 -138.16244507]
[143.54493713 -123.36317444]
[141.09921265 -108.56390381]
[138.65348816 -93.76463318]
[151.70599365 -86.49021912]
[161.50050354 -75.16781616]
[166.84027100 -61.15134430]
[167.06277466 -46.12563324]
[162.12188721 -31.90390396]
[152.59567261 -20.20895958]
[139.61895752 -12.46449566]
[124.74803925 -9.62179184]
[122.30230713 5.17747927]
[129.35749817 21.24580956]
[117.55545807 35.38063812]
[115.33034515 50.21468353]
[113.10522461 65.04872894]
[120.04072571 74.95960236]
[118.30834198 87.33629608]
[108.29663849 95.46824646]
[110.30662537 100.31324005]
[109.45897675 105.93949890]
[105.55146790 110.66901398]
[102.66619110 125.38890076]
[99.78092194 140.10879517]
[101.55879974 146.47673035]
[100.07639313 151.96304321]
[96.58438110 155.22108459]
[93.26212311 169.84854126]
[89.93986511 184.47599792]
[86.61759949 199.10346985]
[83.29534149 213.73092651]
[81.18071747 228.58111572]
[80.28790283 243.55451965]
[79.39508820 258.52792358]
[78.50227356 273.50134277]
[77.94406128 288.49093628]
[77.72073364 303.48928833]
[77.49740601 318.48760986]
[77.27407837 333.48596191]
[77.05075073 348.48428345]
[76.82742310 363.48263550]
[76.60409546 378.48098755]
[76.82742310 393.47930908]
[77.49720764 408.46435547]
[78.16699219 423.44940186]
[78.94831085 438.42901611]
[79.84113312 453.40243530]
[80.73394775 468.37582397]
[81.73820496 483.34219360]
[82.85385132 498.30062866]
[83.96950531 513.25909424]
[98.56656647 517.34582520]
[110.88375092 526.18115234]
[119.43370056 538.69812012]
[123.18396759 553.38525391]
[121.68169403 568.46893311]
[115.10827637 582.12786865]
[104.25749207 592.71258545]
[90.43962860 598.94494629]
[75.32324982 600.07238770]
[60.73374939 595.95874023]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 200]
[7 199]
[8 198]
[10 197]
[11 196]
[12 195]
[14 194]
[15 193]
[16 192]
[21 191]
[22 190]
[23 189]
[24 188]
[25 187]
[26 186]
[27 185]
[31 184]
[32 183]
[33 182]
[34 181]
[46 180]
[47 179]
[48 178]
[49 177]
[50 176]
[51 173]
[52 172]
[53 171]
[54 168]
[56 165]
[57 164]
[58 163]
[61 161]
[62 160]
[70 152]
[71 151]
[72 150]
[73 149]
[74 148]
[75 147]
[76 146]
[77 145]
[83 144]
[84 143]
[85 142]
[86 141]
[87 140]
[88 139]
[89 135]
[90 134]
[91 133]
[92 132]
[93 121]
[94 120]
[95 119]
[96 118]
[97 117]
[98 116]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
