%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[94.41841125 499.84310913]
[81.54485321 492.04840088]
[70.43954468 481.89169312]
[61.52933502 469.76345825]
[55.15671539 456.12982178]
[51.56662750 441.51483154]
[50.89706802 426.48028564]
[53.17377090 411.60403442]
[58.30922699 397.45788574]
[66.10604095 384.58560181]
[76.26452637 373.48193359]
[88.39421844 364.57369995]
[102.02888489 358.20327759]
[116.64443970 354.61553955]
[115.97465515 339.63052368]
[115.30487061 324.64547729]
[114.63508606 309.66043091]
[113.29685211 294.72024536]
[111.29283905 279.85473633]
[109.28882599 264.98919678]
[107.28480530 250.12367249]
[105.28079224 235.25813293]
[102.09337616 231.70153809]
[101.10634613 226.10485840]
[103.44525146 219.92092896]
[101.88472748 205.00231934]
[100.32420349 190.08372498]
[98.76368713 175.16511536]
[97.20316315 160.24650574]
[94.12304688 156.59658813]
[93.30308533 150.97300720]
[95.82508087 144.86145020]
[94.70942688 129.90299988]
[93.59378052 114.94454193]
[83.79475403 101.33001709]
[91.24282074 86.29996490]
[89.90458679 71.35977936]
[88.56635284 56.41959763]
[84.16535950 42.07975006]
[76.89212799 28.96105576]
[69.61889648 15.84236145]
[62.34566879 2.72366762]
[55.07243729 -10.39502621]
[47.79920959 -23.51371956]
[40.04281616 -36.35266113]
[31.81400871 -48.89406204]
[23.58520126 -61.43546295]
[15.35639381 -73.97686005]
[7.12758589 -86.51826477]
[-1.10122180 -99.05966187]
[-9.33002949 -111.60105896]
[-23.36973190 -118.89471436]
[-23.88264656 -133.78048706]
[-32.11145401 -146.32188416]
[-40.34026337 -158.86328125]
[-48.56906891 -171.40467834]
[-56.79787827 -183.94609070]
[-70.15536499 -177.08973694]
[-84.16597748 -171.69206238]
[-98.67095947 -167.81422424]
[-113.50595856 -165.50016785]
[-128.50288391 -164.77612305]
[-143.49182129 -165.65026855]
[-158.30290222 -168.11271667]
[-172.76834106 -172.13555908]
[-186.72421265 -177.67323303]
[-200.01239014 -184.66296387]
[-212.48231506 -193.02555847]
[-223.99269104 -202.66627502]
[-234.41308594 -213.47587585]
[-243.62544250 -225.33186340]
[-251.52537537 -238.09992981]
[-258.02337646 -251.63537598]
[-263.04577637 -265.78482056]
[-266.53573608 -280.38800049]
[-268.45367432 -295.27938843]
[-268.77783203 -310.29028320]
[-267.50460815 -325.25061035]
[-264.64837646 -339.99081421]
[-260.24148560 -354.34393311]
[-254.33392334 -368.14727783]
[-246.99258423 -381.24447632]
[-238.30067444 -393.48715210]
[-228.35667419 -404.73654175]
[-217.27323914 -414.86520386]
[-205.17597961 -423.75836182]
[-192.20195007 -431.31527710]
[-178.49816895 -437.45028687]
[-164.21989441 -442.09387207]
[-149.52893066 -445.19348145]
[-134.59170532 -446.71392822]
[-119.57750702 -446.63800049]
[-104.65643311 -444.96655273]
[-89.99755859 -441.71856689]
[-75.76698303 -436.93078613]
[-62.12594223 -430.65750122]
[-49.22900009 -422.96978760]
[-37.22229767 -413.95474243]
[-26.24187088 -403.71450806]
[-16.41213989 -392.36511230]
[-7.84448481 -380.03518677]
[-0.63598144 -366.86441040]
[5.13169193 -353.00201416]
[9.39318275 -338.60507202]
[12.10020447 -323.83673096]
[13.22208595 -308.86428833]
[12.74611473 -293.85745239]
[10.67768383 -278.98620605]
[7.04022932 -264.41909790]
[1.87496781 -250.32113647]
[-4.75957489 -236.85209656]
[-12.78822422 -224.16459656]
[-22.12001038 -212.40237427]
[-32.64919662 -201.69871521]
[-44.25647736 -192.17489624]
[-36.02766800 -179.63348389]
[-27.79886055 -167.09208679]
[-19.57005310 -154.55068970]
[-11.34124565 -142.00929260]
[2.10987830 -135.61268616]
[3.21137071 -119.82987213]
[11.44017887 -107.28846741]
[19.66898537 -94.74707031]
[27.89779472 -82.20567322]
[36.12660217 -69.66426849]
[44.35541153 -57.12286758]
[52.58421707 -44.58147049]
[58.14316940 -58.51337814]
[72.45658112 -62.99959946]
[84.97314453 -54.73305511]
[86.46611023 -39.80754089]
[75.83492279 -29.22558212]
[60.91790390 -30.78694916]
[68.19113159 -17.66825485]
[75.46436310 -4.54956198]
[82.73759460 8.56913185]
[90.01081848 21.68782616]
[97.28404999 34.80651855]
[96.56134033 19.82394028]
[98.92701721 5.01166248]
[104.28048706 -9.00048828]
[112.39411163 -21.61670876]
[122.92291260 -32.30054855]
[135.41917419 -40.59772873]
[149.35157776 -46.15544891]
[164.12770081 -48.73738861]
[179.11923218 -48.23376465]
[193.68876648 -44.66599274]
[207.21676636 -38.18577194]
[219.12802124 -29.06864929]
[228.91606140 -17.70228577]
[236.16470337 -4.56998825]
[240.56571960 9.76985359]
[241.93197632 24.70750237]
[240.20538330 39.60779953]
[235.45936584 53.83718109]
[227.89570618 66.79060364]
[217.83602905 77.91727448]
[205.70808411 86.74409485]
[192.02752686 92.89573669]
[177.37609863 96.11063385]
[162.37677002 96.25208282]
[147.66731262 93.31406403]
[133.87318420 87.42151642]
[121.58093262 78.82498169]
[111.31320953 67.88999939]
[103.50653839 55.08136368]
[104.84477234 70.02154541]
[106.18300629 84.96173096]
[114.65399170 92.95446014]
[115.60665894 104.56194305]
[108.55223083 113.82889557]
[109.66788483 128.78735352]
[110.78353119 143.74580383]
[112.12176514 158.68598938]
[113.68228912 173.60459900]
[115.24281311 188.52319336]
[116.80333710 203.44180298]
[118.36385345 218.36041260]
[120.14632416 233.25411987]
[122.15033722 248.11965942]
[124.15435028 262.98516846]
[126.15836334 277.85070801]
[128.16238403 292.71624756]
[138.09443665 281.47549438]
[153.05671692 280.41253662]
[164.47816467 290.13623047]
[165.81604004 305.07644653]
[156.30395508 316.67474365]
[141.39085388 318.28707886]
[129.62011719 308.99066162]
[130.28990173 323.97567749]
[130.95968628 338.96072388]
[131.62947083 353.94577026]
[146.50683594 356.21524048]
[160.65547180 361.34384155]
[173.53153992 369.13439941]
[184.64013672 379.28747559]
[193.55427551 391.41284180]
[199.93130493 405.04443359]
[203.52612305 419.65823364]
[204.20054626 434.69256592]
[201.92866516 449.56954956]
[196.79779053 463.71737671]
[189.00514221 476.59219360]
[178.85025024 487.69912720]
[166.72344971 496.61129761]
[153.09085083 502.98614502]
[138.47645569 506.57858276]
[123.44200134 507.25057983]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 194]
[15 193]
[16 192]
[17 191]
[18 184]
[19 183]
[20 182]
[21 181]
[22 180]
[25 179]
[26 178]
[27 177]
[28 176]
[29 175]
[32 174]
[33 173]
[34 172]
[36 169]
[37 168]
[38 167]
[39 138]
[40 137]
[41 136]
[42 135]
[43 134]
[44 133]
[45 127]
[46 126]
[47 125]
[48 124]
[49 123]
[50 122]
[51 121]
[53 119]
[54 118]
[55 117]
[56 116]
[57 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
