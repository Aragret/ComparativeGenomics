%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[156.08567810 431.62390137]
[152.25195312 417.11401367]
[149.56848145 402.34808350]
[148.05181885 387.41711426]
[147.71130371 372.41317749]
[148.54904175 357.42877197]
[150.55987549 342.55630493]
[153.73138428 327.88742065]
[158.04403687 313.51263428]
[163.47123718 299.52050781]
[169.97952271 285.99731445]
[177.52877808 273.02645874]
[186.07243347 260.68792725]
[195.55784607 249.05773926]
[205.92649841 238.20762634]
[195.92832947 227.02565002]
[185.93016052 215.84367371]
[175.93199158 204.66169739]
[165.93382263 193.47972107]
[155.93563843 182.29774475]
[145.93746948 171.11576843]
[142.50669861 185.71817017]
[129.01713562 192.27801514]
[115.41278839 185.95965576]
[111.72227478 171.42074585]
[120.66609955 159.37881470]
[135.64968872 158.71009827]
[126.51088715 146.81547546]
[117.37208557 134.92083740]
[108.23328400 123.02619934]
[99.09448242 111.13156891]
[89.86738586 99.30529785]
[80.55250549 87.54804993]
[65.91807556 81.53604889]
[64.07917023 66.75539398]
[54.76428223 54.99814224]
[45.44940186 43.24089050]
[36.13451767 31.48363876]
[23.75778580 39.96875381]
[10.82514381 47.57976151]
[-2.60177779 54.28039169]
[-16.45899200 60.03871536]
[-30.68046379 64.82728577]
[-45.19841766 68.62329102]
[-59.94367599 71.40863037]
[-74.84596252 73.17003632]
[-89.83425903 73.89912415]
[-104.83714294 73.59239960]
[-119.78311920 72.25134277]
[-134.60096741 69.88233185]
[-149.22006226 66.49666595]
[-163.57073975 62.11046982]
[-177.58460999 56.74465561]
[-191.19490051 50.42478561]
[-204.33674622 43.18098068]
[-216.94750977 35.04776382]
[-228.96710205 26.06388855]
[-240.33824158 16.27217293]
[-251.00675964 5.71927547]
[-260.92178345 -5.54451275]
[-270.03607178 -17.46551514]
[-278.30621338 -29.98691940]
[-285.69277954 -43.04905701]
[-292.16055298 -56.58967972]
[-297.67874146 -70.54426575]
[-302.22100830 -84.84629822]
[-305.76574707 -99.42764282]
[-308.29608154 -114.21879578]
[-309.79989624 -129.14927673]
[-310.27005005 -144.14791870]
[-309.70431519 -159.14328003]
[-308.10537720 -174.06387329]
[-305.48083496 -188.83859253]
[-301.84323120 -203.39704895]
[-297.20989990 -217.66984558]
[-291.60290527 -231.58897400]
[-285.04895020 -245.08810425]
[-277.57931519 -258.10290527]
[-269.22955322 -270.57135010]
[-260.03945923 -282.43402100]
[-250.05284119 -293.63439941]
[-239.31730652 -304.11907959]
[-227.88398743 -313.83813477]
[-215.80737305 -322.74520874]
[-203.14503479 -330.79791260]
[-189.95729065 -337.95782471]
[-176.30700684 -344.19079590]
[-162.25921631 -349.46719360]
[-147.88087463 -353.76184082]
[-133.24050903 -357.05429077]
[-118.40785980 -359.32879639]
[-103.45364380 -360.57458496]
[-88.44910431 -360.78570557]
[-73.46575928 -359.96109009]
[-58.57500076 -358.10476685]
[-43.84779739 -355.22549438]
[-29.35432816 -351.33703613]
[-15.16366386 -346.45794678]
[-1.34342921 -340.61141968]
[12.04051590 -333.82534790]
[24.92439079 -326.13208008]
[37.24679565 -317.56826782]
[48.94900894 -308.17471313]
[59.97526550 -297.99618530]
[70.27301788 -287.08120728]
[79.79319000 -275.48175049]
[88.49041748 -263.25314331]
[96.32324982 -250.45364380]
[103.25436401 -237.14422607]
[109.25072479 -223.38835144]
[114.28376770 -209.25154114]
[118.32949066 -194.80119324]
[121.36862946 -180.10614014]
[123.38668823 -165.23645020]
[124.37406158 -150.26293945]
[124.32603455 -135.25700378]
[123.24284363 -120.29012299]
[121.12964630 -105.43363953]
[117.99651337 -90.75834656]
[113.85837555 -76.33418274]
[108.73495483 -62.22988892]
[102.65066528 -48.51266861]
[95.63449860 -35.24789810]
[87.71990204 -22.49879074]
[78.94458008 -10.32609940]
[69.35035706 1.21216500]
[58.98294830 12.06101704]
[47.89176941 22.16875648]
[57.20665359 33.92600632]
[66.52153778 45.68325806]
[75.83641815 57.44050980]
[89.80458069 62.61155701]
[92.30975342 78.23316193]
[101.62463379 89.99041748]
[108.70073700 93.85063934]
[110.98911285 101.99276733]
[120.12792206 113.88739777]
[129.26672363 125.78203583]
[138.40551758 137.67666626]
[147.54432678 149.57130432]
[157.11944580 161.11759949]
[167.11761475 172.29957581]
[177.11578369 183.48155212]
[187.11396790 194.66352844]
[197.11213684 205.84550476]
[207.11030579 217.02746582]
[217.10847473 228.20944214]
[229.04644775 219.11445618]
[241.66122437 210.98416138]
[254.87500000 203.86866760]
[268.60632324 197.81185913]
[282.77050781 192.85107422]
[297.28027344 189.01690674]
[312.04614258 186.33299255]
[326.97708130 184.81585693]
[341.98098755 184.47488403]
[356.96542358 185.31216431]
[371.83795166 187.32254028]
[386.50692749 190.49360657]
[400.88186646 194.80581665]
[414.87414551 200.23258972]
[428.39752197 206.74046326]
[441.36862183 214.28932190]
[453.70742798 222.83261108]
[465.33792114 232.31765747]
[476.18832397 242.68597412]
[486.19183350 253.87367249]
[495.28668213 265.81173706]
[503.41687012 278.42657471]
[510.53222656 291.64044189]
[516.58886719 305.37182617]
[521.54949951 319.53607178]
[525.38354492 334.04586792]
[528.06732178 348.81176758]
[529.58428955 363.74270630]
[529.92510986 378.74664307]
[529.08764648 393.73104858]
[527.07714844 408.60357666]
[523.90594482 423.27249146]
[519.59356689 437.64739990]
[514.16662598 451.63964844]
[507.65863037 465.16293335]
[500.10964966 478.13394165]
[491.56625366 490.47268677]
[482.08108521 502.10305786]
[471.71264648 512.95336914]
[460.52484131 522.95672607]
[448.58670044 532.05151367]
[435.97177124 540.18151855]
[422.75784302 547.29675293]
[409.02639771 553.35327148]
[394.86209106 558.31378174]
[380.35223389 562.14764404]
[365.58633423 564.83129883]
[350.65536499 566.34808350]
[335.65142822 566.68878174]
[320.66702271 565.85119629]
[305.79452515 563.84051514]
[291.12564087 560.66912842]
[276.75079346 556.35662842]
[262.75860596 550.92956543]
[249.23536682 544.42138672]
[236.26443481 536.87231445]
[223.92579651 528.32873535]
[212.29551697 518.84350586]
[201.44529724 508.47491455]
[191.44203186 497.28704834]
[182.34741211 485.34878540]
[174.21749878 472.73376465]
[167.10241699 459.51977539]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 147]
[16 146]
[17 145]
[18 144]
[19 143]
[20 142]
[21 141]
[27 140]
[28 139]
[29 138]
[30 137]
[31 136]
[32 134]
[33 133]
[35 131]
[36 130]
[37 129]
[38 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
