%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[97.90460205 515.41381836]
[100.62726593 500.53289795]
[107.81692505 487.22259521]
[118.76920319 476.78692627]
[132.41110229 470.24832153]
[130.40708923 455.38278198]
[128.40307617 440.51724243]
[126.39906311 425.65173340]
[124.39505005 410.78619385]
[115.02673340 399.20672607]
[120.85095978 384.49658203]
[118.84694672 369.63104248]
[116.84293365 354.76550293]
[114.27573395 352.34851074]
[112.75169373 348.56799316]
[112.89890289 343.92779541]
[115.09673309 339.19314575]
[106.01835632 331.19882202]
[104.78117371 318.76284790]
[112.59117126 308.49801636]
[111.47551727 293.53955078]
[110.35987091 278.58111572]
[109.13289642 263.63137817]
[107.79466248 248.69119263]
[96.23588562 239.36755371]
[94.66589355 224.23513794]
[104.52375793 212.17445374]
[103.18552399 197.23426819]
[101.84729004 182.29408264]
[100.50905609 167.35389709]
[99.17082214 152.41371155]
[97.49927521 137.50714111]
[95.49526215 122.64160919]
[93.49124908 107.77607727]
[89.37898254 100.84342194]
[91.56977081 92.67449188]
[89.78730774 77.78077698]
[88.00483704 62.88706207]
[86.22237396 47.99334335]
[84.10774994 33.14314651]
[81.66201782 18.34387398]
[79.10618591 3.56322098]
[76.44039154 -11.19799614]
[73.66477966 -25.93895912]
[70.77951050 -40.65885162]
[67.89423370 -55.37874222]
[51.83658600 -56.03888321]
[36.40668869 -60.50335693]
[22.49204636 -68.51119232]
[10.89200497 -79.59773254]
[2.27184796 -93.12159729]
[-2.87537098 -108.30178833]
[-4.25702143 -124.26277161]
[-1.79753137 -140.08500671]
[4.35748959 -154.85789490]
[13.84986591 -167.73220825]
[26.12969589 -177.96888733]
[40.48720551 -184.98146057]
[37.16494751 -199.60891724]
[33.84268951 -214.23638916]
[30.52042770 -228.86384583]
[17.61293983 -228.95951843]
[5.01869059 -231.75566101]
[-6.70398855 -237.12535095]
[-17.03603172 -244.82760620]
[-25.52061462 -254.51829529]
[-31.78336143 -265.76538086]
[-35.54885483 -278.06829834]
[-36.65275574 -290.88012695]
[-35.04895782 -303.63208008]
[-30.81152344 -315.75848389]
[-24.13126564 -326.72213745]
[-15.30714321 -336.03799438]
[-4.73289967 -343.29452515]
[7.12051487 -348.17211914]
[4.67478752 -362.97137451]
[2.22906017 -377.77066040]
[-0.21666718 -392.56991577]
[-2.66239452 -407.36920166]
[-5.10812187 -422.16845703]
[-15.11982441 -430.30041504]
[-16.85220337 -442.67712402]
[-9.91670418 -452.58798218]
[-12.14182091 -467.42202759]
[-14.36693859 -482.25607300]
[-16.59205627 -497.09011841]
[-18.81717300 -511.92416382]
[-33.83954239 -513.05383301]
[-48.23373413 -517.49847412]
[-61.27774811 -525.03515625]
[-72.31729889 -535.28582764]
[-80.79864502 -547.73632812]
[-86.29637146 -561.76208496]
[-88.53470612 -576.65966797]
[-87.40138245 -591.68176270]
[-82.95324707 -606.07489014]
[-75.41341400 -619.11706543]
[-65.16007233 -630.15411377]
[-52.70753860 -638.63244629]
[-38.68041611 -644.12677002]
[-23.78230476 -646.36151123]
[-8.76048565 -645.22454834]
[5.63155270 -640.77294922]
[18.67191124 -633.22991943]
[29.70649338 -622.97393799]
[38.18180466 -610.51934814]
[43.67273331 -596.49090576]
[45.90385056 -581.59222412]
[44.76324844 -566.57067871]
[40.30813599 -552.17974854]
[32.76198196 -539.14117432]
[22.50329590 -528.10913086]
[10.04665279 -519.63677979]
[-3.98312902 -514.14929199]
[-1.75801194 -499.31524658]
[0.46710521 -484.48120117]
[2.69222236 -469.64715576]
[4.91733932 -454.81311035]
[16.57308960 -441.69403076]
[9.69114876 -424.61419678]
[12.13687611 -409.81491089]
[14.58260345 -395.01565552]
[17.02833176 -380.21636963]
[19.47405815 -365.41711426]
[21.91978645 -350.61782837]
[39.03319931 -348.91854858]
[54.99975586 -342.49407959]
[68.54135132 -331.85086060]
[78.57183075 -317.83334351]
[84.28404236 -301.55694580]
[85.21483612 -284.31939697]
[81.28259277 -267.49719238]
[72.79431152 -252.43568420]
[60.42167664 -240.34158325]
[45.14788818 -232.18609619]
[48.47014618 -217.55863953]
[51.79240799 -202.93118286]
[55.11466599 -188.30372620]
[69.10015106 -188.40638733]
[82.80471802 -185.58396912]
[95.62311554 -179.95841980]
[106.98866272 -171.77554321]
[116.39831543 -161.39428711]
[123.43491364 -149.27093506]
[127.78567505 -135.93911743]
[129.25611877 -121.98628998]
[127.77873230 -108.02783966]
[123.41608429 -94.67996216]
[116.35816193 -82.53246307]
[106.91412354 -72.12267303]
[95.49871826 -63.91170502]
[82.61412811 -58.26401520]
[85.49939728 -43.54412460]
[88.38467407 -28.82423210]
[92.75607300 -22.86498260]
[91.20160675 -13.86379147]
[93.86740875 0.89742559]
[98.14959717 6.92109680]
[96.46128845 15.89814758]
[98.90702057 30.69741821]
[101.54503632 33.03690338]
[103.18096924 36.77037430]
[103.17197418 41.41291809]
[101.11608887 46.21087646]
[102.89855194 61.10459518]
[104.68102264 75.99831390]
[106.46348572 90.89202881]
[108.35678101 105.77206421]
[110.36079407 120.63759613]
[112.36480713 135.50312805]
[115.55669403 139.63337708]
[116.72798157 144.12573242]
[116.07911682 148.14991760]
[114.11100769 151.07546997]
[115.44924164 166.01565552]
[116.78747559 180.95584106]
[118.12570953 195.89602661]
[119.46394348 210.83621216]
[131.30830383 220.95297241]
[132.45263672 236.12351990]
[122.73484802 247.35295105]
[124.07308197 262.29315186]
[127.95562744 270.56137085]
[125.31832886 277.46545410]
[126.43397522 292.42391968]
[127.54962158 307.38235474]
[138.26766968 322.35583496]
[130.03691101 337.85491943]
[131.70846558 352.76150513]
[133.71247864 367.62701416]
[135.71649170 382.49255371]
[145.22813416 395.13531494]
[139.26057434 408.78219604]
[141.26458740 423.64770508]
[143.26860046 438.51324463]
[145.27261353 453.37878418]
[147.27662659 468.24429321]
[162.16300964 470.93704224]
[175.48773193 478.09991455]
[185.94538879 489.03121948]
[192.51142883 502.65994263]
[194.54257202 517.65093994]
[191.83985901 532.53552246]
[184.66804504 545.85540771]
[173.72976685 556.30572510]
[160.09663391 562.86260986]
[145.10429382 564.88372803]
[130.22154236 562.17108154]
[116.90642548 554.99029541]
[106.46343231 544.04504395]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 197]
[6 196]
[7 195]
[8 194]
[9 193]
[11 191]
[12 190]
[13 189]
[17 188]
[20 186]
[21 185]
[22 184]
[23 182]
[24 181]
[27 178]
[28 177]
[29 176]
[30 175]
[31 174]
[32 170]
[33 169]
[34 168]
[36 167]
[37 166]
[38 165]
[39 164]
[40 160]
[41 159]
[42 157]
[43 156]
[44 154]
[45 153]
[46 152]
[58 138]
[59 137]
[60 136]
[61 135]
[75 125]
[76 124]
[77 123]
[78 122]
[79 121]
[80 120]
[83 118]
[84 117]
[85 116]
[86 115]
[87 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
