%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[91.23406219 509.60317993]
[86.05174255 523.70599365]
[78.95705414 536.95031738]
[70.08809662 549.07830811]
[59.61750793 559.85382080]
[47.74909973 569.06726074]
[34.71390152 576.53918457]
[20.76563644 582.12420654]
[6.17581797 585.71350098]
[-8.77156067 587.23730469]
[-23.78554344 586.66595459]
[-38.57387924 584.01055908]
[-52.84870911 579.32275391]
[-66.33216858 572.69384766]
[-78.76179504 564.25286865]
[-89.89565277 554.16406250]
[-99.51700592 542.62390137]
[-107.43858337 529.85693359]
[-113.50617218 516.11175537]
[-117.60168457 501.65585327]
[-119.64538574 486.77066040]
[-119.59750366 471.74588013]
[-117.45896912 456.87399292]
[-113.27140045 442.44451904]
[-107.11631775 428.73825073]
[-99.11353302 416.02206421]
[-89.41881561 404.54345703]
[-78.22088623 394.52584839]
[-65.73770905 386.16424561]
[-52.21226883 379.62139893]
[-37.90785217 375.02468872]
[-23.10289001 372.46359253]
[-8.08557129 371.98794556]
[6.85179090 373.60699463]
[21.41843605 377.28924561]
[27.08122253 363.39923096]
[32.74400711 349.50918579]
[38.40679550 335.61917114]
[44.06958008 321.72915649]
[49.73236847 307.83911133]
[55.39515305 293.94909668]
[61.05794144 280.05905151]
[66.30465698 266.00659180]
[71.13065338 251.80413818]
[67.89952850 237.26422119]
[79.66541290 226.68714905]
[76.43428802 212.14723206]
[88.20017242 201.57015991]
[93.02616882 187.36770630]
[95.47190094 172.56843567]
[95.47190094 157.56843567]
[95.02529144 142.57508850]
[94.13247681 127.60167694]
[93.23966217 112.62827301]
[85.70145416 100.85257721]
[91.78693390 88.26454163]
[89.26836395 84.72748566]
[88.12167358 80.95262146]
[88.25315857 77.40042114]
[89.42919922 74.45363617]
[91.31372833 72.37837982]
[91.31372833 57.37837982]
[91.31372833 42.37837982]
[91.20206451 27.37879372]
[90.97873688 12.38045692]
[90.75540924 -2.61788011]
[87.69822693 -8.48006248]
[88.01320648 -14.15437412]
[90.75540924 -18.06453514]
[90.97873688 -33.06287384]
[91.20206451 -48.06121063]
[91.42539215 -63.05954742]
[91.64871979 -78.05788422]
[91.87204742 -93.05622101]
[92.09537506 -108.05455780]
[92.31870270 -123.05289459]
[92.20703888 -138.05247498]
[91.76042938 -153.04583740]
[91.31382751 -168.03918457]
[90.86721802 -183.03253174]
[81.90500641 -171.00428772]
[67.90033722 -165.63127136]
[53.19270325 -168.57839966]
[42.33943176 -178.93246460]
[38.70352173 -193.48512268]
[43.41160202 -207.72711182]
[55.00482178 -217.24536133]
[69.89089966 -219.09056091]
[83.45721436 -212.69094849]
[91.50017548 -200.02926636]
[93.06069946 -214.94787598]
[94.62122345 -229.86648560]
[80.18040466 -234.07392883]
[66.72303009 -240.79246521]
[54.68168259 -249.80612183]
[44.44345093 -260.82510376]
[36.33745193 -273.49526978]
[30.62425423 -287.40924072]
[27.48751640 -302.11981201]
[27.02807236 -317.15405273]
[29.26069069 -332.02871704]
[34.11360168 -346.26559448]
[41.43080521 -359.40707397]
[50.97708511 -371.03070068]
[62.44556427 -380.76278687]
[75.46757507 -388.29052734]
[89.62452698 -393.37191772]
[104.46131897 -395.84362793]
[119.50101471 -395.62619019]
[134.26016235 -392.72659302]
[148.26428223 -387.23806763]
[161.06323242 -379.33700562]
[172.24557495 -369.27743530]
[181.45182800 -357.38272095]
[188.38607788 -344.03518677]
[192.82537842 -329.66397095]
[194.62704468 -314.73098755]
[193.73316956 -299.71630859]
[190.17247009 -285.10256958]
[184.05941772 -271.35955811]
[175.59053040 -258.92904663]
[165.03802490 -248.21063232]
[152.74113464 -239.54885864]
[139.09515381 -233.22216797]
[124.53874207 -229.43394470]
[109.53982544 -228.30595398]
[107.97930145 -213.38735962]
[106.41877747 -198.46875000]
[105.86056519 -183.47914124]
[106.30717468 -168.48579407]
[106.75378418 -153.49243164]
[107.20038605 -138.49908447]
[109.50219727 -135.82812500]
[110.62466431 -131.90957642]
[109.99550629 -127.30985260]
[107.31703949 -122.82956696]
[107.09371185 -107.83123016]
[106.87038422 -92.83289337]
[106.64705658 -77.83455658]
[106.42372894 -62.83621979]
[106.20040131 -47.83788300]
[105.97707367 -32.83954620]
[105.75374603 -17.84120750]
[105.75374603 -2.84120798]
[105.97707367 12.15712929]
[106.20040131 27.15546608]
[109.44313812 33.79673386]
[106.31372833 42.37837982]
[106.31372833 57.37837982]
[106.31372833 72.37837982]
[106.76033783 87.37172699]
[114.29854584 99.14742279]
[108.21306610 111.73545837]
[109.10588074 126.70886230]
[109.99870300 141.68226624]
[112.51726532 145.21932983]
[113.66395569 148.99418640]
[113.53247070 152.54638672]
[112.35643005 155.49317932]
[110.47190094 157.56843567]
[110.47190094 172.56843567]
[117.19166565 159.15780640]
[127.11359406 147.90812683]
[139.57958984 139.56552124]
[153.76283264 134.68334961]
[168.72259521 133.58540344]
[183.46664429 136.34452820]
[197.01708984 142.77769470]
[208.47514343 152.45823669]
[217.08085632 164.74407959]
[222.26342773 178.82032776]
[223.67912292 193.75337219]
[221.23403931 208.55274963]
[215.09036255 222.23687744]
[205.65557861 233.89813232]
[193.55545044 242.76306152]
[179.59254456 248.24368286]
[164.69297791 249.97650146]
[149.84497070 247.84657288]
[136.03334045 241.99517822]
[124.17415619 232.81039429]
[115.05401611 220.90145874]
[109.27781677 207.05821228]
[107.22863007 192.19369507]
[102.40263367 206.39616394]
[105.28856659 221.95191956]
[93.86787415 231.51315308]
[96.75380707 247.06890869]
[85.33311462 256.63012695]
[80.50711823 270.83258057]
[81.50400543 275.05871582]
[81.14075470 278.98715210]
[79.67797852 282.22686768]
[77.47649384 284.51159668]
[74.94796753 285.72186279]
[69.28517914 299.61187744]
[63.62239456 313.50189209]
[57.95960999 327.39193726]
[52.29682159 341.28195190]
[46.63403702 355.17199707]
[40.97124863 369.06201172]
[35.30846024 382.95202637]
[48.29751968 390.50390625]
[60.10910797 399.79003906]
[70.51331329 410.62973022]
[79.30760193 422.81195068]
[86.32080841 436.09957886]
[91.41640472 450.23397827]
[94.49520874 464.94000244]
[95.49728394 479.93139648]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 202]
[36 201]
[37 200]
[38 199]
[39 198]
[40 197]
[41 196]
[42 195]
[43 190]
[44 189]
[46 187]
[48 185]
[49 184]
[50 161]
[51 160]
[52 155]
[53 154]
[54 153]
[56 151]
[61 150]
[62 149]
[63 148]
[64 146]
[65 145]
[66 144]
[69 143]
[70 142]
[71 141]
[72 140]
[73 139]
[74 138]
[75 137]
[76 136]
[77 132]
[78 131]
[79 130]
[80 129]
[90 128]
[91 127]
[92 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
