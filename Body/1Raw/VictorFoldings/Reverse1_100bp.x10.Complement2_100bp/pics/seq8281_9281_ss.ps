%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[1.99183929 501.35595703]
[10.04037380 488.59338379]
[21.11851883 478.34951782]
[34.47095108 471.32278442]
[31.14869118 456.69531250]
[27.82643127 442.06784058]
[24.50417137 427.44039917]
[21.18191147 412.81292725]
[17.59927368 427.37881470]
[10.41539478 440.54663086]
[0.10675737 451.44305420]
[-12.64290428 459.34533691]
[-26.98795128 463.72937012]
[-41.97692490 464.30435181]
[-56.61566544 461.03216553]
[-69.93323517 454.12982178]
[-81.04633331 444.05511475]
[-89.21785736 431.47631836]
[-93.90582275 417.22772217]
[-94.79930115 402.25436401]
[-91.83901978 387.54934692]
[-85.22133636 374.08807373]
[-75.38516235 362.76333618]
[-62.98291397 354.32626343]
[-48.83717346 349.33645630]
[-33.88618469 348.12490845]
[-19.12158775 350.77191162]
[-5.52266932 357.10195923]
[6.00860500 366.69515991]
[14.70740604 378.91528320]
[19.99795151 392.95675659]
[21.55847359 378.03814697]
[23.11899757 363.11953735]
[24.67951965 348.20092773]
[26.24004364 333.28231812]
[27.80056572 318.36370850]
[29.36108971 303.44509888]
[30.92161179 288.52651978]
[32.48213577 273.60791016]
[24.02743340 285.99813843]
[12.04724312 295.02450562]
[-2.19413567 299.73440552]
[-17.19377708 299.63076782]
[-31.36873436 294.72460938]
[-43.22309113 285.53359985]
[-51.50582504 273.02777100]
[-55.34284210 258.52682495]
[-54.32921219 243.56111145]
[-48.57190704 229.70999146]
[-38.67850876 218.43521118]
[-25.69308853 210.92662048]
[-10.98603058 207.97662354]
[3.89059258 209.89654541]
[17.36681747 216.48374939]
[28.02046585 227.04310608]
[34.72723007 240.46023560]
[36.77933121 255.31938171]
[42.02604675 241.26692200]
[39.22926331 226.63723755]
[51.30485153 216.41517639]
[56.55156708 202.36270142]
[61.79828644 188.31022644]
[57.96561432 171.18487549]
[72.26612091 159.58413696]
[77.30303192 145.45510864]
[82.12902832 131.25265503]
[86.74304199 116.97992706]
[91.35704803 102.70719147]
[90.10545349 99.05946350]
[90.46780396 94.87776947]
[92.64650726 90.89527893]
[96.50890350 87.90834808]
[101.75562286 73.85587311]
[97.12132263 61.81901169]
[101.78063202 50.22269058]
[112.72966003 45.08018494]
[118.18501282 31.10738754]
[123.64037323 17.13459015]
[121.45191193 1.46547377]
[133.28814697 -7.57625055]
[138.74349976 -21.54904747]
[144.19886780 -35.52184677]
[149.65422058 -49.49464417]
[154.90093994 -63.54711533]
[159.93785095 -77.67614746]
[164.97477722 -91.80517578]
[170.01168823 -105.93420410]
[175.04859924 -120.06323242]
[178.47966003 -134.66555786]
[180.26213074 -149.55928040]
[182.04460144 -164.45298767]
[167.46665955 -176.85539246]
[163.34178162 -195.39169312]
[171.16007996 -212.53237915]
[187.59759521 -221.42623901]
[188.71324158 -236.38468933]
[189.82890320 -251.34313965]
[190.94454956 -266.30160522]
[176.86579895 -271.80435181]
[165.03553772 -281.21371460]
[156.50569153 -293.69302368]
[152.03472900 -308.13262939]
[152.02021790 -323.24856567]
[156.46343994 -337.69671631]
[164.96929932 -350.19238281]
[176.78147888 -359.62445068]
[190.84962463 -365.15423584]
[205.92282104 -366.29000854]
[220.66078186 -362.93081665]
[233.75299072 -355.37533569]
[244.03530884 -344.29537964]
[250.59344482 -330.67620850]
[252.84425354 -315.72879028]
[250.58758545 -300.78225708]
[244.02410889 -287.16561890]
[233.73744202 -276.08972168]
[220.64227295 -268.53936768]
[205.90299988 -265.18594360]
[204.78735352 -250.22749329]
[203.67170715 -235.26904297]
[202.55604553 -220.31059265]
[212.27722168 -214.83798218]
[219.28608704 -206.09304810]
[222.54019165 -195.31521606]
[221.53276062 -184.05049133]
[216.37121582 -173.92970276]
[207.76710510 -166.43238831]
[196.93830872 -162.67051697]
[195.15585327 -147.77680969]
[193.37338257 -132.88308716]
[202.29266357 -144.94320679]
[214.92712402 -153.02839661]
[229.61450195 -156.07490540]
[244.42239380 -153.68193054]
[257.40258789 -146.16430664]
[266.84729004 -134.51107788]
[271.51391602 -120.25547028]
[270.78845215 -105.27301788]
[264.76641846 -91.53494263]
[254.24003601 -80.84870911]
[240.59428406 -74.62028503]
[225.62446594 -73.66912842]
[211.30014038 -78.12036896]
[199.50590515 -87.38838196]
[191.79348755 -100.25379181]
[189.17762756 -115.02631378]
[184.14071655 -100.89728546]
[179.10380554 -86.76825714]
[174.06687927 -72.63922882]
[169.02996826 -58.51020050]
[170.23124695 -53.88786697]
[168.54156494 -48.46181870]
[163.62701416 -44.03928757]
[158.17166138 -30.06648827]
[152.71630859 -16.09369087]
[147.26094055 -2.12089324]
[149.83961487 12.54879570]
[137.61317444 22.58994675]
[132.15780640 36.56274414]
[126.70245361 50.53554153]
[130.27972412 67.71605682]
[115.80809784 79.10259247]
[110.56137848 93.15506744]
[105.62978363 107.32119751]
[101.01576996 121.59393311]
[96.40176392 135.86666870]
[97.41033936 142.40075684]
[95.28649139 147.67202759]
[91.43206024 150.49203491]
[86.39514923 164.62106323]
[91.20813751 176.58758545]
[86.72200775 188.25199890]
[75.85075378 193.55694580]
[70.60404205 207.60942078]
[65.35732269 221.66189575]
[67.77882385 237.29669189]
[56.07851791 246.51362610]
[50.83180237 260.56610107]
[47.40074158 275.16842651]
[45.84021759 290.08703613]
[44.27969360 305.00564575]
[42.71916962 319.92425537]
[41.15864944 334.84283447]
[39.59812546 349.76144409]
[38.03760147 364.68005371]
[36.47707748 379.59866333]
[34.91655731 394.51727295]
[35.80937195 409.49066162]
[39.13162994 424.11813354]
[42.45389175 438.74560547]
[45.77614975 453.37304688]
[49.09841156 468.00051880]
[64.17613983 468.57003784]
[78.59242249 473.02352905]
[91.36431885 481.05725098]
[101.62102509 492.12353516]
[108.66322327 505.46780396]
[112.01075745 520.18029785]
[111.43540192 535.25781250]
[106.97637177 549.67236328]
[98.93769073 562.44116211]
[87.86746216 572.69354248]
[74.52046204 579.73059082]
[59.80671310 583.07244873]
[44.72942352 582.49127197]
[30.31658936 578.02667236]
[17.55089951 569.98309326]
[7.30274200 558.90887451]
[0.27085191 545.55920410]
[-3.06532454 530.84411621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 192]
[5 191]
[6 190]
[7 189]
[8 188]
[31 187]
[32 186]
[33 185]
[34 184]
[35 183]
[36 182]
[37 181]
[38 180]
[39 179]
[57 178]
[58 177]
[60 175]
[61 174]
[62 173]
[64 170]
[65 169]
[66 166]
[67 165]
[68 164]
[72 163]
[73 162]
[76 160]
[77 159]
[78 158]
[80 156]
[81 155]
[82 154]
[83 153]
[84 150]
[85 149]
[86 148]
[87 147]
[88 146]
[89 130]
[90 129]
[91 128]
[95 121]
[96 120]
[97 119]
[98 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
