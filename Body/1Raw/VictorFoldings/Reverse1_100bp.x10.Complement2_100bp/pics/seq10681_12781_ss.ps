%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[92.53839874 448.16934204]
[94.58166504 433.22692871]
[100.27753448 419.26239014]
[109.26795197 407.15359497]
[120.98777771 397.66168213]
[134.70028687 391.38330078]
[132.03450012 376.62210083]
[129.36869812 361.86087036]
[126.70290375 347.09967041]
[124.03710938 332.33843994]
[121.37131500 317.57723999]
[117.08911896 311.55355835]
[118.77742767 302.57650757]
[116.33169556 287.77722168]
[106.68387604 280.48025513]
[104.52517700 268.17074585]
[111.55007935 257.35345459]
[109.32495880 242.51942444]
[107.09983826 227.68537903]
[97.56016541 216.24667358]
[103.16473389 201.45143127]
[100.93961334 186.61738586]
[98.71449280 171.78334045]
[96.48937988 156.94929504]
[93.93354797 142.16864014]
[91.04827118 127.44874573]
[87.13112640 141.92825317]
[80.13073730 155.19454956]
[70.38867188 166.60034180]
[58.38026428 175.58911133]
[44.69143295 181.72230530]
[29.99009132 184.70063782]
[14.99354362 184.37881470]
[0.43350756 180.77252197]
[-12.97960091 174.05772400]
[-24.59132576 164.56204224]
[-33.83510590 152.74880981]
[-40.25991821 139.19441223]
[-43.55227661 124.56018829]
[-43.55154800 109.56018829]
[-40.25775909 94.92629242]
[-33.83162689 81.37251282]
[-24.58669662 69.56018066]
[-12.97404671 60.06563568]
[0.43971574 53.35214615]
[15.00010300 49.74726868]
[29.99668121 49.42689896]
[44.69773483 52.40666962]
[58.38596725 58.54119110]
[70.39349365 67.53114319]
[80.13445282 78.93788147]
[87.13354492 92.20485687]
[91.04827118 106.67819977]
[93.82388306 91.93724060]
[96.48967743 77.17602539]
[99.15547943 62.41480637]
[101.82127380 47.65358734]
[92.91876984 37.54616165]
[91.48396301 24.34950447]
[97.81791687 12.90559483]
[109.41216278 7.28394508]
[112.29743958 -7.43594646]
[115.18270874 -22.15583801]
[118.06798553 -36.87572861]
[120.95325470 -51.59561920]
[123.83853149 -66.31551361]
[126.72380066 -81.03540039]
[129.60906982 -95.75529480]
[123.07420349 -106.87546539]
[125.78038788 -119.07630157]
[135.74441528 -125.93521118]
[138.84852600 -140.61051941]
[139.29513550 -155.60386658]
[137.07002258 -170.43791199]
[134.84490967 -185.27194214]
[132.61978149 -200.10598755]
[128.25198364 -208.12847900]
[130.47367859 -215.17729187]
[120.96202087 -227.82003784]
[126.92958832 -241.46691895]
[124.92557526 -256.33245850]
[115.41391754 -268.97518921]
[121.38148499 -282.62207031]
[119.37746429 -297.48760986]
[117.37345123 -312.35314941]
[102.35066223 -313.19711304]
[87.75914764 -316.86920166]
[74.12637329 -323.23660278]
[61.94515991 -332.06918335]
[51.65585327 -343.04766846]
[43.63040161 -355.77511597]
[38.15892410 -369.79153442]
[35.43920517 -384.59017944]
[35.56956863 -399.63607788]
[38.54529572 -414.38537598]
[44.25881577 -428.30487061]
[52.50359344 -440.89135742]
[62.98158264 -451.68988037]
[75.31401062 -460.31008911]
[89.05506134 -466.44033813]
[103.70801544 -469.85900879]
[118.74317169 -470.44256592]
[133.61701965 -468.16989136]
[147.79188538 -463.12313843]
[160.75534058 -455.48471069]
[172.03878784 -445.53079224]
[181.23431396 -433.62118530]
[188.00952148 -420.18643188]
[192.11947632 -405.71215820]
[193.41563416 -390.72158813]
[191.85110474 -375.75668335]
[187.48246765 -361.35836792]
[180.46763611 -348.04714966]
[171.06019592 -336.30419922]
[159.60023499 -326.55404663]
[146.50199890 -319.14913940]
[132.23898315 -314.35714722]
[134.24299622 -299.49163818]
[136.24700928 -284.62609863]
[145.61532593 -273.04663086]
[139.79110718 -258.33645630]
[141.79512024 -243.47093201]
[151.16342163 -231.89147949]
[145.33920288 -217.18130493]
[147.45382690 -202.33111572]
[149.67893982 -187.49707031]
[151.90406799 -172.66302490]
[154.12918091 -157.82897949]
[158.71710205 -172.11012268]
[166.54742432 -184.90409851]
[177.17730713 -195.48736572]
[190.00558472 -203.26138306]
[204.30676270 -207.78646851]
[219.27201843 -208.80674744]
[234.05502319 -206.26448059]
[247.81968689 -200.30346680]
[259.78759766 -191.26081848]
[269.28186035 -179.64796448]
[275.76559448 -166.12162781]
[278.87203979 -151.44682312]
[278.42556763 -136.45347595]
[274.45138550 -121.98951721]
[267.17431641 -108.87297058]
[257.00582886 -97.84562683]
[244.52107239 -89.53114319]
[230.42607117 -84.39974976]
[215.51800537 -82.74163818]
[200.63996887 -84.65058899]
[186.63340759 -90.01864624]
[174.29043579 -98.54222107]
[164.30912781 -109.73925018]
[157.25398254 -122.97650146]
[153.52383423 -137.50640869]
[150.41972351 -122.83110046]
[156.75038147 -106.46376801]
[144.32896423 -92.87002563]
[141.44369507 -78.15013123]
[138.55842590 -63.43024063]
[135.67314148 -48.71034622]
[132.78787231 -33.99045563]
[129.90260315 -19.27056503]
[127.01732635 -4.55067348]
[124.13205719 10.16921806]
[134.10234070 23.71293068]
[131.13386536 40.60976410]
[116.58248901 50.31938553]
[113.91669464 65.08060455]
[111.25090027 79.84181976]
[108.58509827 94.60303497]
[110.36550140 102.46450806]
[105.76816559 109.56347656]
[105.76816559 124.56347656]
[108.65343475 139.28337097]
[112.08550262 143.21630859]
[113.52210999 147.63099670]
[113.11390686 151.68666077]
[111.32342529 154.72418213]
[113.54853821 169.55822754]
[115.77365875 184.39225769]
[117.99877167 199.22630310]
[127.69760132 211.72604370]
[121.93388367 225.46026611]
[124.15900421 240.29429626]
[126.38411713 255.12834167]
[138.18615723 269.26318359]
[131.13096619 285.33151245]
[133.57669067 300.13076782]
[136.13252258 314.91143799]
[138.79832458 329.67263794]
[141.46412659 344.43386841]
[144.12991333 359.19506836]
[146.79571533 373.95629883]
[149.46150208 388.71752930]
[164.50387573 389.80291748]
[178.80346680 394.59585571]
[191.46141052 402.79510498]
[201.68200684 413.88519287]
[208.82278442 427.16900635]
[212.43486023 441.81155396]
[212.29118347 456.89233398]
[208.40080261 471.46337891]
[201.00823975 484.60876465]
[190.57821655 495.50213623]
[177.76635742 503.45870972]
[163.37805176 507.97836304]
[148.31773376 508.77697754]
[133.53211975 505.80435181]
[119.95065308 499.24731445]
[108.42706299 489.51809692]
[99.68573761 477.22827148]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 193]
[7 192]
[8 191]
[9 190]
[10 189]
[11 188]
[13 187]
[14 186]
[17 184]
[18 183]
[19 182]
[21 180]
[22 179]
[23 178]
[24 177]
[25 173]
[26 172]
[53 171]
[54 169]
[55 168]
[56 167]
[57 166]
[61 163]
[62 162]
[63 161]
[64 160]
[65 159]
[66 158]
[67 157]
[68 156]
[71 154]
[72 153]
[73 128]
[74 127]
[75 126]
[76 125]
[78 124]
[80 122]
[81 121]
[83 119]
[84 118]
[85 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
