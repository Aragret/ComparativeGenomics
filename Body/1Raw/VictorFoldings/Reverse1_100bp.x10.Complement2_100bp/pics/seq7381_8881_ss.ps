%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[189.54464722 411.13113403]
[183.26728821 397.50781250]
[176.98992920 383.88449097]
[170.71257019 370.26116943]
[164.43521118 356.63787842]
[158.15785217 343.01455688]
[151.88049316 329.39123535]
[140.64479065 324.90954590]
[135.30352783 313.61111450]
[139.21315002 301.31973267]
[133.13931274 287.60449219]
[127.06548309 273.88922119]
[120.99165344 260.17395020]
[114.91781616 246.45867920]
[108.33779144 232.97894287]
[101.26068878 219.75341797]
[101.72885895 234.74610901]
[99.30297089 249.54864502]
[94.07369995 263.60760498]
[86.23655701 276.39743042]
[76.08454132 287.43991089]
[63.99718475 296.32223511]
[50.42639160 302.71237183]
[35.87950516 306.37133789]
[20.90037918 307.16241455]
[6.04901743 305.05596924]
[-8.11935234 300.13079834]
[-21.07503319 292.57101440]
[-32.33367157 282.65924072]
[-41.47434998 270.76605225]
[-48.15533829 257.33609009]
[-52.12686539 242.87139893]
[-53.24045181 227.91279602]
[-51.45446396 213.01950073]
[-46.83567810 198.74832153]
[-39.55676270 185.63276672]
[-29.88984871 174.16320801]
[-18.19634247 164.76843262]
[-4.91341114 157.79966736]
[9.46234989 153.51744080]
[24.39349556 152.08184814]
[39.32181168 153.54655457]
[53.68918991 157.85682678]
[66.95850372 164.85148621]
[78.63365936 174.26905823]
[88.27818298 185.75746155]
[95.52907562 198.88157654]
[94.85929108 183.89653015]
[94.18950653 168.91149902]
[93.51972198 153.92645264]
[92.84993744 138.94142151]
[90.50861359 136.30502319]
[89.32792664 132.40361023]
[89.88853455 127.79503632]
[92.50000000 123.27537537]
[92.50000000 108.27537537]
[92.38833618 93.27578735]
[92.16500854 78.27745056]
[82.35719299 62.69257355]
[91.49588013 47.71087265]
[91.04927063 32.71752167]
[80.82723236 43.69522476]
[65.95630646 45.65877914]
[53.23528290 37.71047974]
[48.48003769 23.48417854]
[53.86460876 9.48395061]
[66.92723846 2.11051059]
[81.69587708 4.73489618]
[91.41914368 16.15900803]
[92.53479767 1.20055532]
[93.65044403 -13.75789833]
[94.76609039 -28.71635056]
[95.88174438 -43.67480469]
[96.99739075 -58.63325882]
[98.11303711 -73.59171295]
[99.11730194 -88.55805969]
[90.49580383 -104.82923889]
[100.72346497 -119.08973694]
[101.39324951 -134.07478333]
[102.06303406 -149.05981445]
[102.73281860 -164.04486084]
[103.40260315 -179.02989197]
[103.73757935 -194.02615356]
[103.73757935 -209.02615356]
[103.73757935 -224.02615356]
[103.73757935 -239.02615356]
[103.73757935 -254.02615356]
[103.73757935 -269.02615356]
[88.92651367 -271.63446045]
[74.79344940 -276.77526855]
[61.76788330 -284.29229736]
[50.24564743 -293.95712280]
[40.57688522 -305.47607422]
[33.05542374 -318.49908447]
[27.90982628 -332.63040161]
[25.29646873 -347.44058228]
[25.29476166 -362.47958374]
[27.90476227 -377.29034424]
[33.04715347 -391.42282104]
[40.56565857 -404.44754028]
[50.23180771 -415.96868896]
[61.75185394 -425.63613892]
[74.77571106 -433.15612793]
[88.90760803 -438.30010986]
[103.71808624 -440.91180420]
[118.75707245 -440.91180420]
[133.56755066 -438.30010986]
[147.69944763 -433.15612793]
[160.72331238 -425.63613892]
[172.24334717 -415.96868896]
[181.90950012 -404.44754028]
[189.42800903 -391.42282104]
[194.57040405 -377.29034424]
[197.18040466 -362.47958374]
[197.17869568 -347.44058228]
[194.56533813 -332.63040161]
[189.41973877 -318.49908447]
[181.89826965 -305.47607422]
[172.22950745 -293.95712280]
[160.70727539 -284.29229736]
[147.68171692 -276.77526855]
[133.54864502 -271.63446045]
[118.73757935 -269.02615356]
[118.73757935 -254.02615356]
[118.73757935 -239.02615356]
[118.73757935 -224.02615356]
[118.73757935 -209.02615356]
[118.73757935 -194.02615356]
[120.95884705 -191.28784180]
[121.96414948 -187.33760071]
[121.19831848 -182.75865173]
[118.38764191 -178.36010742]
[117.71785736 -163.37507629]
[117.04807281 -148.39002991]
[116.37828827 -133.40499878]
[115.70850372 -118.41995239]
[123.63744354 -109.28439331]
[123.20207214 -96.79463196]
[114.09070587 -87.66523743]
[116.83050537 -80.80118561]
[113.07149506 -72.47606659]
[111.95584106 -57.51760864]
[110.84019470 -42.55915451]
[109.72454834 -27.60070229]
[108.60889435 -12.64224911]
[107.49324799 2.31620407]
[106.37760162 17.27465820]
[106.04262543 32.27091599]
[106.48922729 47.26426697]
[115.07568359 55.78479385]
[115.57046509 68.27234650]
[107.16334534 78.05412292]
[107.38667297 93.05245972]
[110.64598846 100.42466736]
[107.50000000 108.27537537]
[107.50000000 123.27537537]
[107.83497620 138.27163696]
[108.50476074 153.25666809]
[109.17454529 168.24171448]
[109.84432983 183.22674561]
[110.51411438 198.21179199]
[114.48621368 212.67631531]
[121.56331635 225.90184021]
[128.34304810 212.52143860]
[142.99961853 209.33007812]
[154.72877502 218.68032837]
[154.88418579 233.67951965]
[143.35131836 243.27081299]
[128.63308716 240.38484192]
[134.70692444 254.10011292]
[140.78074646 267.81536865]
[146.85458374 281.53063965]
[152.92842102 295.24591064]
[168.05213928 305.75088501]
[165.50379944 323.11386108]
[171.78117371 336.73718262]
[178.05853271 350.36050415]
[184.33589172 363.98382568]
[190.61325073 377.60714722]
[196.89060974 391.23043823]
[203.16796875 404.85375977]
[217.80119324 401.33883667]
[232.83900452 400.74652100]
[247.70335388 403.09963989]
[261.82293701 408.30770874]
[274.65499878 416.17056274]
[285.70629883 426.38595581]
[294.55209351 438.56127930]
[300.85238647 452.22848511]
[304.36495972 466.86227417]
[304.95483398 481.90017700]
[302.59930420 496.76416016]
[297.38894653 510.88287354]
[289.52401733 523.71368408]
[279.30682373 534.76336670]
[267.13009644 543.60717773]
[253.46185303 549.90521240]
[238.82748413 553.41540527]
[223.78948975 554.00286865]
[208.92590332 551.64495850]
[194.80801392 546.43231201]
[181.97850037 538.56530762]
[170.93048096 528.34631348]
[162.08862305 516.16815186]
[155.79278564 502.49890137]
[152.28494263 487.86395264]
[151.69995117 472.82586670]
[154.06027222 457.96264648]
[159.27520752 443.84561157]
[167.14428711 431.01736450]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 181]
[2 180]
[3 179]
[4 178]
[5 177]
[6 176]
[7 175]
[10 173]
[11 172]
[12 171]
[13 170]
[14 169]
[15 163]
[16 162]
[47 161]
[48 160]
[49 159]
[50 158]
[51 157]
[55 156]
[56 155]
[57 153]
[58 152]
[60 149]
[61 148]
[69 147]
[70 146]
[71 145]
[72 144]
[73 143]
[74 142]
[75 141]
[76 139]
[78 136]
[79 135]
[80 134]
[81 133]
[82 132]
[83 128]
[84 127]
[85 126]
[86 125]
[87 124]
[88 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
