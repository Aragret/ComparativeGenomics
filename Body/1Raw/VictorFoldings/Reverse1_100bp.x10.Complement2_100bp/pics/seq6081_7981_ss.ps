%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGG\
) } def
/len { sequence length } bind def

/coor [
[205.22825623 449.42147827]
[208.24171448 434.71209717]
[212.82789612 420.41473389]
[218.93302917 406.69708252]
[226.48554993 393.71990967]
[235.39688110 381.63540649]
[245.56257629 370.58526611]
[256.86343384 360.69900513]
[248.26486206 348.40814209]
[239.66629028 336.11730957]
[231.06773376 323.82647705]
[222.46916199 311.53564453]
[213.87060547 299.24481201]
[205.27204895 286.95397949]
[200.13035583 301.04519653]
[185.95686340 305.95559692]
[173.19972229 298.06539917]
[171.26303101 283.19094849]
[181.57444763 272.29714966]
[196.53134155 273.41369629]
[188.87074280 260.51736450]
[174.02157593 261.92016602]
[159.97813416 256.71524048]
[149.54447937 245.88475037]
[144.82861328 231.53967285]
[146.81681824 216.50857544]
[155.16783142 203.77978516]
[147.50723267 190.88346863]
[139.84663391 177.98713684]
[132.18603516 165.09080505]
[124.33428955 152.30996704]
[116.29311371 139.64744568]
[108.25193787 126.98491669]
[100.21076965 114.32239532]
[87.90818024 107.67875671]
[87.12670898 93.71878052]
[79.08553314 81.05625153]
[71.04436493 68.39373016]
[57.11480713 60.89185715]
[56.82357788 46.00009918]
[48.78240585 33.33757401]
[40.74123001 20.67505074]
[32.70005798 8.01252556]
[24.65888596 -4.64999914]
[16.61771202 -17.31252480]
[8.57653999 -29.97504807]
[2.90308833 -33.36967468]
[0.20124586 -38.36938095]
[0.49098215 -43.13646698]
[-13.20903873 -51.04974747]
[-13.05675602 -65.94357300]
[-20.71735382 -78.83989716]
[-34.24077988 -72.32788849]
[-48.28031158 -67.01931763]
[-62.72909164 -62.95457840]
[-77.47715759 -60.16461563]
[-92.41226959 -58.67066193]
[-107.42075348 -58.48408127]
[-122.38838196 -59.60630035]
[-137.20124817 -62.02877426]
[-151.74661255 -65.73307037]
[-165.91377258 -70.69098663]
[-179.59489441 -76.86479950]
[-192.68588257 -84.20752716]
[-205.08708191 -92.66326904]
[-216.70411682 -102.16767883]
[-227.44857788 -112.64842224]
[-237.23867798 -124.02573395]
[-245.99992371 -136.21301270]
[-253.66563416 -149.11752319]
[-260.17745972 -162.64105225]
[-265.48583984 -176.68064880]
[-269.55035400 -191.12948608]
[-272.34011841 -205.87759399]
[-273.83386230 -220.81272888]
[-274.02023315 -235.82121277]
[-272.89779663 -250.78883362]
[-270.47512817 -265.60165405]
[-266.77062988 -280.14697266]
[-261.81250000 -294.31405640]
[-255.63850403 -307.99511719]
[-248.29559326 -321.08596802]
[-239.83967590 -333.48706055]
[-230.33509827 -345.10397339]
[-219.85420227 -355.84826660]
[-208.47676086 -365.63821411]
[-196.28935242 -374.39929199]
[-183.38473511 -382.06481934]
[-169.86112976 -388.57644653]
[-155.82144165 -393.88464355]
[-141.37254333 -397.94897461]
[-126.62440491 -400.73852539]
[-111.68925476 -402.23205566]
[-96.68076324 -402.41821289]
[-81.71316528 -401.29556274]
[-66.90036774 -398.87268066]
[-52.35511017 -395.16796875]
[-38.18809128 -390.20965576]
[-24.50713158 -384.03546143]
[-11.41635513 -376.69238281]
[0.98460782 -368.23626709]
[12.60137749 -358.73153687]
[23.34554100 -348.25048828]
[33.13532639 -336.87292480]
[41.89622879 -324.68539429]
[49.56156921 -311.78067017]
[56.07301331 -298.25695801]
[61.38099289 -284.21719360]
[65.44512177 -269.76824951]
[68.23446655 -255.02006531]
[69.72779083 -240.08489990]
[69.91374207 -225.07640076]
[68.79089355 -210.10882568]
[66.36779785 -195.29605103]
[62.66289139 -180.75085449]
[57.70437241 -166.58389282]
[51.52998352 -152.90303040]
[44.18671417 -139.81234741]
[35.73044586 -127.41150665]
[26.22554779 -115.79487610]
[15.74435139 -105.05085754]
[4.36662912 -95.26123047]
[-7.82102633 -86.50049591]
[-0.16042903 -73.60417175]
[12.99165535 -66.61331940]
[13.38730907 -50.79706573]
[21.23906517 -38.01622009]
[29.28023720 -25.35369682]
[37.32141113 -12.69117165]
[45.36258316 -0.02864709]
[53.40375519 12.63387775]
[61.44493103 25.29640198]
[69.48609924 37.95892715]
[82.84049988 44.55508804]
[83.70688629 60.35255432]
[91.74806213 73.01508331]
[99.78923035 85.67760468]
[112.09181976 92.32124329]
[112.87329102 106.28121948]
[120.91446686 118.94374847]
[128.95564270 131.60627747]
[136.99681091 144.26879883]
[142.67025757 147.66342163]
[145.37210083 152.66313171]
[145.08236694 157.43022156]
[152.74296570 170.32653809]
[160.40356445 183.22286987]
[168.06416321 196.11920166]
[183.23690796 194.87454224]
[197.38777161 200.31881714]
[207.72923279 211.32218933]
[212.24917603 225.66551208]
[210.10217285 240.48779297]
[201.76705933 252.85676575]
[209.42765808 265.75308228]
[217.56288147 278.35540771]
[226.16143799 290.64624023]
[234.76000977 302.93707275]
[243.35856628 315.22790527]
[251.95713806 327.51876831]
[260.55569458 339.80960083]
[269.15426636 352.10043335]
[282.31539917 344.87329102]
[296.18078613 339.11151123]
[310.58789062 334.88265991]
[325.36773682 332.23626709]
[340.34707642 331.20343018]
[355.35025024 331.79623413]
[370.20141602 334.00769043]
[384.72637939 337.81192017]
[398.75491333 343.16430664]
[412.12246704 350.00207520]
[424.67239380 358.24508667]
[436.25747681 367.79669189]
[446.74191284 378.54486084]
[456.00280762 390.36364746]
[463.93154907 403.11441040]
[470.43518066 416.64770508]
[475.43746948 430.80484009]
[478.87973022 445.41983032]
[480.72164917 460.32131958]
[480.94158936 475.33462524]
[479.53698730 490.28369141]
[476.52432251 504.99322510]
[471.93890381 519.29083252]
[465.83450317 533.00885010]
[458.28268433 545.98638916]
[449.37200928 558.07141113]
[439.20690918 569.12207031]
[427.90658569 579.00897217]
[415.60354614 587.61608887]
[402.44201660 594.84246826]
[388.57632446 600.60351562]
[374.16900635 604.83160400]
[359.38900757 607.47717285]
[344.40963745 608.50921631]
[329.40646362 607.91564941]
[314.55541992 605.70336914]
[300.03063965 601.89831543]
[286.00241089 596.54522705]
[272.63522339 589.70672607]
[260.08575439 581.46301270]
[248.50117493 571.91082764]
[238.01730347 561.16204834]
[228.75706482 549.34277344]
[220.82901001 536.59161377]
[214.32609558 523.05798340]
[209.32458496 508.90054321]
[205.88310242 494.28536987]
[204.04199219 479.38378906]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 162]
[9 161]
[10 160]
[11 159]
[12 158]
[13 157]
[14 156]
[20 155]
[21 154]
[27 148]
[28 147]
[29 146]
[30 145]
[31 142]
[32 141]
[33 140]
[34 139]
[36 137]
[37 136]
[38 135]
[40 133]
[41 132]
[42 131]
[43 130]
[44 129]
[45 128]
[46 127]
[49 126]
[51 124]
[52 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
