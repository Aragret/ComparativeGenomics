%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[179.65103149 886.41235352]
[164.90040588 883.67681885]
[150.27542114 880.33398438]
[135.80107117 876.38964844]
[121.50208282 871.85058594]
[107.40289307 866.72442627]
[93.52758026 861.02001953]
[79.89985657 854.74707031]
[66.54300690 847.91632080]
[53.47984314 840.53948975]
[40.73268890 832.62908936]
[28.32332420 824.19860840]
[16.27294540 815.26257324]
[4.60214233 805.83618164]
[-6.66914463 795.93554688]
[-17.52165985 785.57757568]
[-27.93686104 774.78002930]
[-37.89695358 763.56121826]
[-47.38492203 751.94042969]
[-56.38455582 739.93743896]
[-64.88047791 727.57287598]
[-72.85817719 714.86767578]
[-80.30402374 701.84375000]
[-87.20528412 688.52319336]
[-93.55018616 674.92883301]
[-99.32787323 661.08386230]
[-104.52848816 647.01196289]
[-109.14314270 632.73718262]
[-113.16394043 618.28387451]
[-116.58402252 603.67675781]
[-119.39755249 588.94079590]
[-121.59970856 574.10119629]
[-123.18672943 559.18322754]
[-124.15592194 544.21240234]
[-124.50560760 529.21435547]
[-124.23520660 514.21459961]
[-123.34516907 499.23889160]
[-121.83701324 484.31274414]
[-119.71333313 469.46166992]
[-116.97774506 454.71102905]
[-113.63491821 440.08605957]
[-109.69057465 425.61172485]
[-105.15144348 411.31274414]
[-100.02528381 397.21356201]
[-94.32086182 383.33825684]
[-88.04790497 369.71054077]
[-81.21714783 356.35369873]
[-73.84025574 343.29052734]
[-65.92983246 330.54339600]
[-57.49938202 318.13403320]
[-48.56332397 306.08367920]
[-39.13691330 294.41290283]
[-29.23626137 283.14160156]
[-18.87828064 272.28912354]
[-8.08067036 261.87393188]
[3.13812494 251.91384888]
[14.75893688 242.42590332]
[26.76191139 233.42628479]
[39.12654114 224.93037415]
[51.83170319 216.95269775]
[64.85569000 209.50688171]
[78.17624664 202.60563660]
[91.77062225 196.26075745]
[105.61558533 190.48307800]
[119.68748474 185.28248596]
[115.07347107 171.00975037]
[110.45946503 156.73703003]
[105.84545898 142.46429443]
[101.23144531 128.19155884]
[96.61743927 113.91882324]
[86.37054443 104.40605164]
[89.10983276 90.69518280]
[84.49581909 76.42245483]
[79.88181305 62.14971924]
[65.06282806 64.64282227]
[50.03876114 64.95159912]
[35.12985611 63.06947708]
[20.65389442 59.03656769]
[6.91942978 52.93883514]
[-5.78078413 44.90625000]
[-17.17604256 35.11002731]
[-27.02345467 23.75897789]
[-35.11312103 11.09504700]
[-41.27261353 -2.61183167]
[-45.37063599 -17.06949615]
[-47.31984711 -31.96977997]
[-47.07868958 -46.99508286]
[-44.65231323 -61.82513809]
[-40.09243011 -76.14384460]
[-33.49623871 -89.64599609]
[-25.00433350 -102.04379272]
[-14.79771996 -113.07297516]
[-3.09395599 -122.49845886]
[9.85749435 -130.11933899]
[23.78056908 -135.77317810]
[38.37849808 -139.33944702]
[53.34012604 -140.74215698]
[68.34654236 -139.95138550]
[83.07788849 -136.98400879]
[97.22016144 -131.90325928]
[110.47191620 -124.81744385]
[122.55068970 -115.87758636]
[133.19903564 -105.27425385]
[142.18997192 -93.23345184]
[149.33184814 -80.01182556]
[154.47245789 -65.89119720]
[157.50221252 -51.17255783]
[158.35653687 -36.16962433]
[157.01721191 -21.20219040]
[153.51280212 -6.58928728]
[147.91798401 7.35761070]
[140.35203552 20.34122467]
[130.97621155 32.08480835]
[119.99035645 42.33804321]
[107.62863922 50.88238525]
[94.15454102 57.53570938]
[98.76855469 71.80844116]
[103.38256073 86.08117676]
[113.62945557 95.59394836]
[110.89016724 109.30481720]
[115.50418091 123.57754517]
[120.11818695 137.85028076]
[124.73220062 152.12301636]
[129.34620667 166.39575195]
[133.96022034 180.66848755]
[148.41349792 176.64761353]
[163.02058411 173.22746277]
[177.75653076 170.41387939]
[192.59616089 168.21165466]
[207.51412964 166.62455750]
[222.48493958 165.65530396]
[237.48300171 165.30555725]
[252.48271179 165.57589722]
[267.45843506 166.46586609]
[282.38461304 167.97393799]
[297.23568726 170.09756470]
[311.98632812 172.83308411]
[326.61132812 176.17584229]
[341.08569336 180.12013245]
[355.38467407 184.65919495]
[369.48388672 189.78529358]
[383.35922241 195.48965454]
[396.98696899 201.76254272]
[410.34384155 208.59324646]
[423.40701294 215.97007751]
[436.15420532 223.88044739]
[448.56359863 232.31083679]
[460.61398315 241.24684143]
[472.28482056 250.67320251]
[483.55615234 260.57379150]
[494.40869141 270.93173218]
[504.82391357 281.72930908]
[514.78405762 292.94805908]
[524.27203369 304.56881714]
[533.27172852 316.57174683]
[541.76770020 328.93634033]
[549.74542236 341.64147949]
[557.19128418 354.66543579]
[564.09259033 367.98596191]
[570.43756104 381.58029175]
[576.21527100 395.42523193]
[581.41589355 409.49713135]
[586.03063965 423.77188110]
[590.05145264 438.22515869]
[593.47155762 452.83227539]
[596.28515625 467.56820679]
[598.48736572 482.40786743]
[600.07440186 497.32580566]
[601.04364014 512.29663086]
[601.39337158 527.29467773]
[601.12304688 542.29443359]
[600.23303223 557.27014160]
[598.72491455 572.19628906]
[596.60131836 587.04736328]
[593.86572266 601.79803467]
[590.52294922 616.42297363]
[586.57867432 630.89733887]
[582.03955078 645.19635010]
[576.91345215 659.29553223]
[571.20904541 673.17083740]
[564.93615723 686.79858398]
[558.10546875 700.15545654]
[550.72857666 713.21862793]
[542.81817627 725.96582031]
[534.38781738 738.37518311]
[525.45178223 750.42559814]
[516.02539062 762.09637451]
[506.12478638 773.36767578]
[495.76681519 784.22021484]
[484.96923828 794.63543701]
[473.75048828 804.59552002]
[462.12969971 814.08355713]
[450.12673950 823.08319092]
[437.76214600 831.57910156]
[425.05700684 839.55682373]
[412.03305054 847.00268555]
[398.71249390 853.90399170]
[385.11813354 860.24890137]
[371.27319336 866.02661133]
[357.20132446 871.22723389]
[342.92654419 875.84191895]
[328.47326660 879.86273193]
[313.86614990 883.28283691]
[299.13018799 886.09637451]
[284.29055786 888.29858398]
[269.37258911 889.88562012]
[254.40177917 890.85485840]
[239.40370178 891.20452881]
[224.40399170 890.93414307]
[209.42826843 890.04412842]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 125]
[66 124]
[67 123]
[68 122]
[69 121]
[70 120]
[72 118]
[73 117]
[74 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
