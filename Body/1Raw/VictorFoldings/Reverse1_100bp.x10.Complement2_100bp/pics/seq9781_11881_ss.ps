%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[74.29249573 735.73284912]
[59.77111816 739.53881836]
[44.95020294 741.92541504]
[29.96813202 742.87048340]
[14.96479511 742.36511230]
[0.08027572 740.41406250]
[-14.54645061 737.03552246]
[-28.77881241 732.26110840]
[-42.48392487 726.13531494]
[-55.53382492 718.71533203]
[-67.80666351 710.07049561]
[-79.18785095 700.28155518]
[-89.57112122 689.43981934]
[-98.85952759 677.64654541]
[-106.96634674 665.01190186]
[-113.81587982 651.65374756]
[-119.34416962 637.69689941]
[-123.49961090 623.27166748]
[-126.24340057 608.51269531]
[-127.54991150 593.55780029]
[-127.40695190 578.54663086]
[-125.81586456 563.61932373]
[-122.79148865 548.91534424]
[-118.36206818 534.57183838]
[-112.56896973 520.72277832]
[-105.46627045 507.49755859]
[-97.12030029 495.01956177]
[-87.60897064 483.40533447]
[-77.02110291 472.76330566]
[-65.45555115 463.19287109]
[-53.02029419 454.78335571]
[-39.83144760 447.61328125]
[-26.01215363 441.74960327]
[-11.69144154 437.24710083]
[2.99697614 434.14773560]
[17.91595459 432.48052979]
[32.92619324 432.26101685]
[47.88754654 433.49121094]
[50.55334473 418.73001099]
[53.21913910 403.96878052]
[55.88493347 389.20755005]
[58.55073166 374.44635010]
[61.21652603 359.68511963]
[63.77235794 344.90447998]
[66.21808624 330.10519409]
[68.33271027 315.25500488]
[70.11517334 300.36129761]
[60.73604202 288.84750366]
[62.33155060 273.71774292]
[74.47187042 263.95812988]
[68.30178833 250.40159607]
[77.62415314 237.61863708]
[79.40662384 222.72492981]
[71.64098358 206.98765564]
[82.80009460 192.33993530]
[84.36061859 177.42132568]
[85.92114258 162.50271606]
[87.48166656 147.58412170]
[71.97023773 140.43870544]
[59.83565521 128.42150879]
[52.53981018 112.98027802]
[50.96166229 95.97525787]
[55.29133606 79.45511627]
[65.00721741 65.41008759]
[78.93880463 55.53222656]
[95.40769958 51.01155472]
[96.30052185 36.03814697]
[97.19333649 21.06474304]
[98.08615112 6.09133720]
[87.87356567 -5.67050457]
[88.99230957 -20.84294891]
[100.26836395 -30.50660133]
[97.65529633 -39.25929642]
[101.28758240 -45.69577789]
[102.40322876 -60.65423203]
[103.51887512 -75.61268616]
[104.63452148 -90.57113647]
[105.75017548 -105.52959442]
[106.86582184 -120.48804474]
[107.98146820 -135.44650269]
[109.09712219 -150.40495300]
[95.49243927 -155.28889465]
[83.62796783 -163.52442932]
[74.31061554 -174.54377747]
[68.17208099 -187.59014893]
[65.62601471 -201.76960754]
[66.84015656 -216.11241150]
[71.72529602 -229.63928223]
[79.94180298 -241.42829895]
[90.92321777 -250.67771912]
[103.91532898 -256.76049805]
[118.02793121 -259.26678467]
[119.36616516 -274.20697021]
[120.70439911 -289.14715576]
[121.48572540 -304.12680054]
[121.70905304 -319.12515259]
[121.82071686 -334.12472534]
[121.82071686 -349.12472534]
[121.82071686 -364.12472534]
[121.82071686 -379.12472534]
[108.47959137 -386.73458862]
[100.74462128 -400.00357056]
[100.69647980 -415.36236572]
[108.34811401 -428.67959595]
[121.64127350 -436.37292480]
[137.00016785 -436.37292480]
[150.29331970 -428.67959595]
[157.94496155 -415.36236572]
[157.89682007 -400.00357056]
[150.16184998 -386.73458862]
[136.82070923 -379.12472534]
[136.82070923 -364.12472534]
[136.82070923 -349.12472534]
[136.82070923 -334.12472534]
[139.96421814 -327.43591309]
[136.70738220 -318.90182495]
[136.48405457 -303.90347290]
[148.90138245 -312.31832886]
[163.26716614 -308.00271606]
[168.99147034 -294.13793945]
[161.85455322 -280.94458008]
[147.11749268 -278.14831543]
[135.64457703 -287.80892944]
[134.30635071 -272.86874390]
[132.96810913 -257.92855835]
[147.53134155 -252.34666443]
[159.94593811 -242.88221741]
[169.20295715 -230.29414368]
[174.54713440 -215.59565735]
[175.53857422 -199.97267151]
[172.08895874 -184.68818665]
[164.46928406 -170.98011780]
[153.28863525 -159.96107483]
[139.44549561 -152.52801514]
[124.05557251 -149.28930664]
[122.93992615 -134.33085632]
[121.82427979 -119.37239838]
[120.70862579 -104.41394043]
[119.59297943 -89.45549011]
[118.47733307 -74.49703217]
[117.36167908 -59.53858185]
[116.24603271 -44.58012772]
[115.24177551 -29.61378479]
[125.28958893 -18.67865944]
[124.59745026 -3.48077798]
[113.05955505 6.98415327]
[112.16674042 21.95755959]
[111.27392578 36.93096542]
[110.38111115 51.90436935]
[122.47709656 56.23086548]
[133.04087830 63.54101181]
[141.35232544 73.33649445]
[146.84486389 84.94956207]
[149.14408875 97.58859253]
[148.09327698 110.39200592]
[143.76403809 122.48701477]
[136.45149231 133.04913330]
[126.65413666 141.35835266]
[115.03981781 146.84828186]
[102.40026855 149.14463806]
[100.83974457 164.06324768]
[99.27922058 178.98185730]
[97.71869659 193.90045166]
[105.21960449 204.39326477]
[103.61271667 216.78688049]
[94.30033875 224.50738525]
[92.51787567 239.40110779]
[98.56046295 254.02293396]
[89.36558533 265.74060059]
[98.85998535 278.08944702]
[96.84014893 293.16839600]
[85.00889587 302.14376831]
[83.22642517 317.03747559]
[85.28231049 321.83541870]
[85.29130554 326.47796631]
[83.65537262 330.21145630]
[81.01735687 332.55093384]
[78.57163239 347.35018921]
[80.25993347 356.32723999]
[75.97774506 362.35092163]
[73.31195068 377.11215210]
[70.64614868 391.87335205]
[67.98035431 406.63458252]
[65.31455994 421.39578247]
[62.64876556 436.15701294]
[77.09533691 440.23770142]
[91.08061218 445.69366455]
[104.47402191 452.47393799]
[117.15049744 460.51525879]
[128.99169922 469.74246216]
[139.88703918 480.06945801]
[149.73481750 491.39981079]
[158.44305420 503.62774658]
[165.93046570 516.63903809]
[172.12713623 530.31225586]
[176.97521973 544.51971436]
[180.42941284 559.12872314]
[182.45750427 574.00299072]
[183.04052734 589.00347900]
[182.17306519 603.99023438]
[179.86320496 618.82330322]
[176.13250732 633.36419678]
[171.01580811 647.47717285]
[164.56088257 661.03033447]
[156.82800293 673.89727783]
[147.88937378 685.95782471]
[137.82846069 697.09936523]
[126.73918152 707.21783447]
[114.72509003 716.21875000]
[101.89836121 724.01812744]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 185]
[39 184]
[40 183]
[41 182]
[42 181]
[43 180]
[44 178]
[45 177]
[46 173]
[47 172]
[50 169]
[52 167]
[53 166]
[55 163]
[56 162]
[57 161]
[58 160]
[66 149]
[67 148]
[68 147]
[69 146]
[72 143]
[74 142]
[75 141]
[76 140]
[77 139]
[78 138]
[79 137]
[80 136]
[81 135]
[92 125]
[93 124]
[94 123]
[95 117]
[96 116]
[97 114]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
