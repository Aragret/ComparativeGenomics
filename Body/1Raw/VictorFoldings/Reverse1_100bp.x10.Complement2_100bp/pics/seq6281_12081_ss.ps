%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[209.61558533 481.19226074]
[212.67807007 466.49127197]
[217.39640808 452.23519897]
[223.70909119 438.60995483]
[231.53381348 425.79309082]
[240.76858521 413.95178223]
[251.29298401 403.24035645]
[262.96981812 393.79846191]
[254.92863464 381.13592529]
[246.88746643 368.47338867]
[238.84628296 355.81088257]
[230.80511475 343.14834595]
[222.76394653 330.48583984]
[206.79428101 323.21005249]
[206.17079163 304.80642700]
[197.94198608 292.26504517]
[191.64433289 288.39706421]
[189.68565369 279.47509766]
[181.64447021 266.81256104]
[168.29006958 260.21640015]
[167.42369080 244.41894531]
[159.38252258 231.75640869]
[143.25939941 232.83235168]
[128.70994568 225.58877563]
[119.74745941 211.91798401]
[118.89730835 195.49931335]
[126.48612213 180.80911255]
[118.25730896 168.26771545]
[110.02850342 155.72631836]
[111.76704407 170.62522888]
[109.64282227 185.47404480]
[103.79673004 199.28793335]
[94.61651611 211.15063477]
[82.71107483 220.27534485]
[68.87004852 226.05686951]
[54.01146317 228.11172485]
[39.12083817 226.30363464]
[25.18580818 220.75250244]
[13.13064003 211.82653809]
[3.75490785 200.11775208]
[-2.31953025 186.40275574]
[-4.68977833 171.59120178]
[-3.19862652 156.66551208]
[2.05502295 142.61563110]
[10.72271347 130.37344360]
[22.22954941 120.75093079]
[35.81232452 114.38632202]
[50.57013702 111.70175171]
[65.52416229 112.87528992]
[79.68254852 117.82908630]
[92.10621643 126.23458099]
[101.97400665 137.53854370]
[98.21771240 123.01647949]
[94.46141052 108.49442291]
[89.55445862 102.09954834]
[90.75900269 93.72817230]
[87.21932983 79.15179443]
[83.67965698 64.57542419]
[80.13998413 49.99904633]
[69.55118561 42.63425446]
[66.90306854 30.42068863]
[73.08222198 20.02142715]
[69.75996399 5.39396667]
[66.43770599 -9.23349380]
[63.11544418 -23.86095428]
[48.14502335 -32.91113663]
[44.42502213 -49.65856934]
[53.78060913 -63.63396835]
[50.24093628 -78.21034241]
[46.70126343 -92.78672028]
[43.16159058 -107.36309052]
[32.38626480 -118.94769287]
[36.90169144 -133.14135742]
[33.36201859 -147.71774292]
[27.08294487 -134.09521484]
[14.49331760 -125.94037628]
[-0.50582582 -125.78009796]
[-13.26683903 -133.66404724]
[-19.83558273 -147.14927673]
[-18.17666054 -162.05726624]
[-8.80410767 -173.76858521]
[5.37788868 -178.65438843]
[19.97488213 -175.20072937]
[30.46395874 -164.47753906]
[28.90343666 -179.39614868]
[27.23189545 -194.30271912]
[25.44942856 -209.19644165]
[23.66696358 -224.09014893]
[19.53996277 -232.23912048]
[21.97053528 -239.21867371]
[20.41001129 -254.13726807]
[5.52650547 -256.66387939]
[-8.12291431 -263.11337280]
[-19.52536774 -273.00714111]
[-27.83472061 -285.61102295]
[-32.43436050 -299.98965454]
[-32.98296738 -315.07614136]
[-29.43982506 -329.75091553]
[-22.06786156 -342.92498779]
[-11.41412830 -353.62081909]
[1.73080146 -361.04464722]
[16.39148521 -364.64562988]
[31.48000145 -364.15649414]
[45.87668228 -359.61358643]
[58.51320267 -351.35397339]
[68.45184326 -339.99063110]
[74.95509338 -326.36672974]
[77.54036713 -311.49328613]
[76.01582336 -296.47402954]
[70.49459076 -282.42346191]
[61.38638306 -270.38421631]
[49.36708832 -261.24972534]
[35.32861710 -255.69779968]
[36.88914108 -240.77919006]
[38.56068039 -225.87261963]
[40.34314728 -210.97889709]
[42.12561035 -196.08518982]
[46.04167938 -189.81730652]
[43.82204056 -180.95666504]
[45.38256454 -166.03805542]
[47.93839645 -151.25740051]
[51.47806931 -136.68103027]
[62.00021362 -126.13903046]
[57.73796463 -110.90276337]
[61.27763748 -96.32639313]
[64.81731415 -81.75001526]
[68.35697937 -67.17363739]
[80.19068909 -62.07530975]
[87.02931976 -50.92563629]
[86.18521118 -37.67807388]
[77.74290466 -27.18321419]
[81.06516266 -12.55575275]
[84.38742828 2.07170725]
[87.70968628 16.69916725]
[100.30890656 28.91500092]
[94.71636200 46.45937347]
[98.25603485 61.03575134]
[101.79570770 75.61212158]
[105.33538055 90.18849945]
[108.98346710 104.73812103]
[112.73976898 119.26017761]
[116.49607086 133.78224182]
[122.56990051 147.49751282]
[130.79870605 160.03890991]
[139.02751160 172.58030701]
[152.93246460 171.05874634]
[166.07374573 175.65473938]
[175.90560913 185.41755676]
[180.54954529 198.40150452]
[179.15292358 212.05354309]
[172.04504395 223.71524048]
[180.08621216 236.37776184]
[194.01576233 243.87963867]
[194.30699158 258.77139282]
[202.34817505 271.43392944]
[210.48338318 284.03622437]
[218.71218872 296.57763672]
[231.15921021 299.95913696]
[237.75482178 310.57431030]
[235.42646790 322.44464111]
[243.46763611 335.10717773]
[251.50881958 347.76971436]
[259.54998779 360.43222046]
[267.59115601 373.09475708]
[275.63232422 385.75726318]
[289.14346313 379.20388794]
[303.31356812 374.23339844]
[317.95791626 370.91058350]
[332.88558960 369.27883911]
[347.90194702 369.35934448]
[362.81124878 371.15112305]
[377.41912842 374.63076782]
[391.53509521 379.75296021]
[404.97518921 386.45089722]
[417.56411743 394.63723755]
[429.13781738 404.20529175]
[439.54534912 415.03030396]
[448.65109253 426.97113037]
[456.33627319 439.87213135]
[462.50073242 453.56509399]
[467.06408691 467.87149048]
[469.96685791 482.60485840]
[471.17120361 497.57305908]
[470.66143799 512.58099365]
[468.44415283 527.43298340]
[464.54830933 541.93536377]
[459.02468872 555.89916992]
[451.94525146 569.14227295]
[443.40237427 581.49200439]
[433.50735474 592.78747559]
[422.38925171 602.88128662]
[410.19296265 611.64190674]
[397.07754517 618.95513916]
[383.21395874 624.72564697]
[368.78292847 628.87811279]
[353.97262573 631.35852051]
[338.97607422 632.13446045]
[323.98886108 631.19586182]
[309.20632935 628.55487061]
[294.82122803 624.24603271]
[281.02105713 618.32543945]
[267.98577881 610.87036133]
[255.88528442 601.97784424]
[244.87734985 591.76397705]
[235.10549927 580.36187744]
[226.69711304 567.92010498]
[219.76181030 554.60101318]
[214.39002991 540.57806396]
[210.65176392 526.03424072]
[208.59579468 511.15908813]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 165]
[9 164]
[10 163]
[11 162]
[12 161]
[13 160]
[15 157]
[16 156]
[18 155]
[19 154]
[21 152]
[22 151]
[27 145]
[28 144]
[29 143]
[52 142]
[53 141]
[54 140]
[56 139]
[57 138]
[58 137]
[59 136]
[62 134]
[63 133]
[64 132]
[65 131]
[68 127]
[69 126]
[70 125]
[71 124]
[73 122]
[74 121]
[84 120]
[85 119]
[86 117]
[87 116]
[88 115]
[90 114]
[91 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
