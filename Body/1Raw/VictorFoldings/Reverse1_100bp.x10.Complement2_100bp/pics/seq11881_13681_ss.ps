%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[211.74060059 544.29302979]
[208.20092773 529.71667480]
[204.66125488 515.14031982]
[201.12158203 500.56390381]
[186.51435852 497.54824829]
[174.61608887 488.45205688]
[167.81929016 475.03695679]
[167.51982117 459.93960571]
[173.83064270 446.15335083]
[185.54875183 436.43493652]
[182.00907898 421.85858154]
[178.46940613 407.28219604]
[174.38973999 392.84765625]
[169.77572632 378.57492065]
[165.16172791 364.30218506]
[160.54771423 350.02944946]
[157.59184265 348.10717773]
[155.42018127 344.65768433]
[154.74038696 340.06518555]
[156.06179810 335.01531982]
[152.08970642 320.55081177]
[148.11759949 306.08627319]
[144.14550781 291.62176514]
[140.17341614 277.15722656]
[130.87399292 272.92239380]
[125.32411194 264.08230591]
[125.56076050 253.42752075]
[131.74717712 244.48118591]
[128.20750427 229.90481567]
[124.66783142 215.32844543]
[121.12815857 200.75205994]
[117.26385498 186.25837708]
[113.07684326 171.85459900]
[108.88983154 157.45080566]
[104.70281982 143.04702759]
[100.51580811 128.64324951]
[86.15603638 125.08079529]
[75.48867035 114.82890320]
[71.35886383 100.62190247]
[74.86809540 86.24903107]
[85.08040619 75.54376221]
[80.89340210 61.13998413]
[76.70639038 46.73620224]
[72.51937866 32.33242035]
[59.32173538 32.60476303]
[46.45487595 29.70294952]
[34.67032623 23.80160141]
[24.65516281 15.25039005]
[16.99196053 4.55331564]
[12.12489510 -7.66099358]
[10.33400631 -20.67622375]
[11.71909046 -33.73038483]
[16.19414520 -46.06041336]
[23.49270439 -56.94679642]
[33.18368530 -65.75553131]
[44.69685745 -71.97507477]
[41.15718460 -86.55145264]
[30.56838417 -93.91624451]
[27.92026711 -106.12980652]
[34.09941864 -116.52906799]
[30.77716064 -131.15652466]
[27.45490074 -145.78399658]
[24.13264084 -160.41145325]
[13.53098774 -172.15519714]
[18.25723839 -186.28005981]
[14.60915089 -200.82968140]
[10.63705444 -215.29420471]
[6.66495800 -229.75872803]
[2.69286180 -244.22325134]
[-8.42260361 -255.48188782]
[-4.33177567 -269.80371094]
[-8.30387211 -284.26821899]
[-12.27596760 -298.73275757]
[-16.24806404 -313.19726562]
[-19.29951859 -298.51092529]
[-26.31411934 -285.25216675]
[-36.73866272 -274.46658325]
[-49.75102997 -267.00479126]
[-64.32501221 -263.45526123]
[-79.31123352 -264.09793091]
[-93.52783203 -268.88211060]
[-105.85362244 -277.43048096]
[-115.31653595 -289.06890869]
[-121.17029572 -302.87954712]
[-122.95324707 -317.77322388]
[-120.52477264 -332.57531738]
[-114.07640839 -346.11853027]
[-104.11667633 -357.33477783]
[-91.43106079 -365.33944702]
[-77.01999664 -369.50134277]
[-62.02000046 -369.49215698]
[-47.61403275 -365.31268311]
[-34.93821335 -357.29248047]
[-24.99220276 -346.06408691]
[-18.55935669 -332.50970459]
[-18.11275101 -347.50305176]
[-17.66614342 -362.49639893]
[-17.21953773 -377.48974609]
[-16.77293205 -392.48309326]
[-16.32632637 -407.47644043]
[-29.89829826 -414.45959473]
[-39.08949280 -426.64501953]
[-42.07499695 -441.61331177]
[-38.26202774 -456.39248657]
[-28.40766144 -468.04812622]
[-14.46848679 -474.26602173]
[0.78786391 -473.81158447]
[14.33223057 -466.77505493]
[23.47536850 -454.55352783]
[26.40190315 -439.57360840]
[22.53076553 -424.80953979]
[12.63057613 -413.19277954]
[-1.33297658 -407.02984619]
[-1.77958250 -392.03649902]
[-2.22618842 -377.04315186]
[-2.67279434 -362.04980469]
[-3.11940026 -347.05645752]
[-3.56600618 -332.06307983]
[-1.78354037 -317.16937256]
[2.18855596 -302.70486450]
[6.16065216 -288.24032593]
[10.13274860 -273.77581787]
[20.96410179 -263.55175781]
[17.15738487 -248.19534302]
[21.12948227 -233.73081970]
[25.10157776 -219.26629639]
[29.07367516 -204.80177307]
[31.94076729 -202.74943542]
[33.95623016 -199.20642090]
[34.43027115 -194.58813477]
[32.88469696 -189.60232544]
[43.24872208 -178.90483093]
[38.76010132 -163.73370361]
[42.08236313 -149.10624695]
[45.40462112 -134.47879028]
[48.72687912 -119.85132599]
[61.32609940 -107.63549805]
[55.73355865 -90.09112549]
[59.27323151 -75.51474762]
[76.13477325 -74.59996796]
[91.91011047 -68.52595520]
[105.05905151 -57.87385941]
[114.29419708 -43.67239380]
[118.70694733 -27.29846764]
[117.85691071 -10.34369946]
[111.81581879 5.54030085]
[101.16160583 18.80281448]
[86.92315674 28.14540863]
[91.11016846 42.54919052]
[95.29718018 56.95297241]
[99.48419189 71.35675049]
[113.84396362 74.91920471]
[124.51132965 85.17109680]
[128.64114380 99.37809753]
[125.13190460 113.75096893]
[114.91959381 124.45623779]
[119.10659790 138.86001587]
[123.29360962 153.26379395]
[127.48062134 167.66758728]
[131.66763306 182.07136536]
[135.43688965 185.68243408]
[137.26162720 189.95133972]
[137.21688843 194.02725220]
[135.70452881 197.21238708]
[139.24420166 211.78877258]
[142.78387451 226.36514282]
[146.32354736 240.94152832]
[160.88191223 254.88485718]
[154.63793945 273.18511963]
[158.61003113 287.64965820]
[162.58212280 302.11416626]
[166.55422974 316.57870483]
[170.52632141 331.04321289]
[174.82044983 345.41543579]
[179.43444824 359.68817139]
[184.04846191 373.96090698]
[188.66247559 388.23364258]
[197.71223450 376.27111816]
[212.70266724 375.73535156]
[222.58337402 387.02124023]
[220.07066345 401.80929565]
[207.01683044 409.19827271]
[193.04577637 403.74252319]
[196.58544922 418.31890869]
[200.12512207 432.89529419]
[214.99530029 436.15707397]
[226.92602539 445.51361084]
[233.58398438 459.06692505]
[233.69667053 474.10513306]
[227.29528809 487.64514160]
[215.69796753 497.02423096]
[219.23764038 511.60061646]
[222.77731323 526.17700195]
[226.31698608 540.75335693]
[241.39619446 542.13043213]
[255.21020508 548.33135986]
[266.26062012 558.68353271]
[273.34872437 572.06402588]
[275.70568848 587.02142334]
[273.07580566 601.93322754]
[265.74438477 615.18194580]
[254.50668335 625.33050537]
[240.58166504 631.27795410]
[225.47981262 632.37927246]
[210.83927917 628.51489258]
[198.24813843 620.10406494]
[189.07218933 608.05914307]
[184.30677795 593.68664551]
[184.46881104 578.54553223]
[189.54072571 564.27825928]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 194]
[2 193]
[3 192]
[4 191]
[10 185]
[11 184]
[12 183]
[13 177]
[14 176]
[15 175]
[16 174]
[20 173]
[21 172]
[22 171]
[23 170]
[24 169]
[28 167]
[29 166]
[30 165]
[31 164]
[32 160]
[33 159]
[34 158]
[35 157]
[36 156]
[41 151]
[42 150]
[43 149]
[44 148]
[56 139]
[57 138]
[60 136]
[61 135]
[62 134]
[63 133]
[65 131]
[66 127]
[67 126]
[68 125]
[69 124]
[71 122]
[72 121]
[73 120]
[74 119]
[95 118]
[96 117]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
