%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[107.89927673 644.16491699]
[99.41213989 631.76049805]
[92.91809082 618.20587158]
[88.56936646 603.81878662]
[86.46789551 588.93646240]
[86.66294098 573.90771484]
[89.14994049 559.08489990]
[93.87058258 544.81549072]
[100.71421814 531.43402100]
[109.52042389 519.25402832]
[120.08276367 508.56118774]
[132.15364075 499.60604858]
[145.45010376 492.59857178]
[159.66044617 487.70303345]
[156.99465942 472.94180298]
[154.32885742 458.18060303]
[151.66307068 443.41937256]
[148.32000732 440.00866699]
[147.08406067 434.46163940]
[149.14451599 428.17944336]
[146.91938782 413.34539795]
[144.69427490 398.51135254]
[141.45425415 395.00259399]
[140.38400269 389.42123413]
[142.63058472 383.20315552]
[140.84812927 368.30944824]
[139.06565857 353.41574097]
[137.28318787 338.52200317]
[135.38989258 323.64196777]
[133.38587952 308.77645874]
[130.83004761 293.99578857]
[127.72594452 279.32049561]
[117.76190948 272.46157837]
[115.05572510 260.26074219]
[121.59059906 249.14057922]
[111.54967499 238.13925171]
[116.48799896 223.10850525]
[113.60272980 208.38861084]
[110.71746063 193.66873169]
[107.83218384 178.94883728]
[97.79125977 167.94750977]
[102.72959137 152.91676331]
[99.84431458 138.19686890]
[85.25178528 135.23513794]
[72.90039825 126.91907501]
[64.66706848 114.51237488]
[61.80294418 99.90037537]
[64.74325562 85.30350494]
[73.04119110 72.93992615]
[85.43579102 64.68840027]
[82.55051422 49.96851349]
[79.66524506 35.24861908]
[66.83266449 26.41897774]
[64.11627960 11.44981384]
[72.61307526 -0.72967833]
[69.72779846 -15.44956970]
[66.84252930 -30.16946030]
[63.95725632 -44.88935089]
[49.26292801 -54.38124847]
[46.04320908 -71.23200989]
[55.81074524 -84.92266846]
[52.70663834 -99.59796906]
[49.60252762 -114.27326965]
[46.49841690 -128.94857788]
[41.66085815 -136.69685364]
[43.45905304 -143.86541748]
[40.57378006 -158.58531189]
[30.32648277 -170.63949585]
[35.47118759 -184.61738586]
[20.77686119 -194.10928345]
[17.55714226 -210.96003723]
[27.32467842 -224.65069580]
[24.22056770 -239.32600403]
[21.11645889 -254.00129700]
[17.79419899 -268.62875366]
[14.25452614 -283.20513916]
[10.71485329 -297.78152466]
[7.17518139 -312.35787964]
[0.89610505 -298.73535156]
[-11.69352150 -290.58053589]
[-26.69266510 -290.42025757]
[-39.45367813 -298.30419922]
[-46.02242279 -311.78942871]
[-44.36349869 -326.69741821]
[-34.99094772 -338.40875244]
[-20.80895042 -343.29452515]
[-6.21195650 -339.84088135]
[4.27711964 -329.11767578]
[2.71659660 -344.03628540]
[1.15607357 -358.95489502]
[-13.76389980 -361.15606689]
[-27.66740417 -366.99932861]
[-39.68045425 -376.11727905]
[-49.04789734 -387.93682861]
[-55.18088913 -401.71499634]
[-57.69390488 -416.58560181]
[-56.42897415 -431.61395264]
[-51.46561050 -445.85528564]
[-43.11581802 -458.41442871]
[-31.90447044 -468.50186157]
[-18.53632164 -475.48352051]
[-3.85170484 -478.92050171]
[11.22629261 -478.59674072]
[25.74985504 -474.53265381]
[38.80601883 -466.98364258]
[49.57406235 -456.42428589]
[57.37709808 -443.51834106]
[61.72462082 -429.07708740]
[62.34334183 -414.00830078]
[59.19436264 -399.25924683]
[52.47563934 -385.75704956]
[42.60951233 -374.35046387]
[30.21617317 -365.75650024]
[16.07467842 -360.51541138]
[17.63520050 -345.59680176]
[19.19572449 -330.67822266]
[21.75155640 -315.89755249]
[25.29122925 -301.32119751]
[28.83090210 -286.74481201]
[32.37057495 -272.16842651]
[35.91070938 -268.96273804]
[37.47463226 -263.49911499]
[35.79175949 -257.10540771]
[38.89587021 -242.43011475]
[41.99998093 -227.75480652]
[53.67663956 -222.30639648]
[60.18027878 -210.95805359]
[58.94210815 -197.74150085]
[50.19107819 -187.50265503]
[60.23200226 -176.50132751]
[55.29367065 -161.47058105]
[58.17894363 -146.75068665]
[61.17371750 -132.05268860]
[64.27783203 -117.37738037]
[67.38194275 -102.70207977]
[70.48604584 -88.02677917]
[82.16271210 -82.57836914]
[88.66634369 -71.23003387]
[87.42817688 -58.01347351]
[78.67714691 -47.77462387]
[81.56241608 -33.05473328]
[84.44769287 -18.33484268]
[87.33296204 -3.61495090]
[99.79900360 4.45557737]
[102.93477631 19.34253883]
[94.38513947 32.36334991]
[97.27040863 47.08324051]
[100.15568542 61.80313110]
[114.74821472 64.76485443]
[127.09960175 73.08092499]
[135.33293152 85.48762512]
[138.19705200 100.09962463]
[135.25674438 114.69649506]
[126.95880890 127.06007385]
[114.56420898 135.31159973]
[117.44948578 150.03149414]
[127.69677734 162.08567810]
[122.55207825 176.06356812]
[125.43734741 190.78344727]
[128.32261658 205.50334167]
[131.20790100 220.22323608]
[141.45518494 232.27742004]
[136.31048584 246.25531006]
[148.73190308 259.84906006]
[142.40124512 276.21640015]
[145.50535583 290.89169312]
[155.75053406 279.93557739]
[170.71536255 280.96221924]
[179.36831665 293.21481323]
[175.33078003 307.66122437]
[161.57905579 313.65206909]
[148.25141907 306.77243042]
[150.25543213 321.63796997]
[154.50329590 329.72457886]
[152.17691040 336.73956299]
[153.95938110 351.63327026]
[155.74183655 366.52697754]
[157.52430725 381.42071533]
[159.52832031 396.28622437]
[161.75343323 411.12026978]
[163.97856140 425.95431519]
[166.42428589 440.75360107]
[169.09007263 455.51480103]
[171.75587463 470.27603149]
[174.42166138 485.03723145]
[189.44674683 484.65301514]
[204.35435486 486.56698608]
[218.79507446 490.73428345]
[232.43037415 497.05718994]
[244.94061279 505.38748169]
[256.03256226 515.52996826]
[265.44616699 527.24676514]
[272.96081543 540.26336670]
[278.40029907 554.27447510]
[281.63714600 568.95178223]
[282.59545898 583.95117188]
[281.25277710 598.92108154]
[277.64059448 613.51055908]
[271.84353638 627.37762451]
[263.99755859 640.19714355]
[254.28654480 651.66870117]
[242.93814087 661.52337646]
[230.21836853 669.53009033]
[216.42539978 675.50122070]
[201.88256836 679.29681396]
[186.93075562 680.82781982]
[171.92048645 680.05834961]
[157.20359802 677.00653076]
[143.12507629 671.74383545]
[130.01495361 664.39367676]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 185]
[15 184]
[16 183]
[17 182]
[20 181]
[21 180]
[22 179]
[25 178]
[26 177]
[27 176]
[28 175]
[29 173]
[30 172]
[31 166]
[32 165]
[35 163]
[37 161]
[38 160]
[39 159]
[40 158]
[42 156]
[43 155]
[50 148]
[51 147]
[52 146]
[55 143]
[56 142]
[57 141]
[58 140]
[61 136]
[62 135]
[63 134]
[64 133]
[66 132]
[67 131]
[69 129]
[72 125]
[73 124]
[74 123]
[75 120]
[76 119]
[77 118]
[78 117]
[88 116]
[89 115]
[90 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
