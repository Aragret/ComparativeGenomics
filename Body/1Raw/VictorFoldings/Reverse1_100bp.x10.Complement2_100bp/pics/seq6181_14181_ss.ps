%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[58.18235779 271.18533325]
[62.72066116 285.50622559]
[65.30962372 300.30419922]
[65.90303802 315.31524658]
[64.49031830 330.27145386]
[61.09667587 344.90588379]
[55.78267670 358.95736694]
[48.64314651 372.17520142]
[39.80550766 384.32342529]
[29.42747498 395.18527222]
[17.69425583 404.56692505]
[4.81524372 412.30090332]
[-8.97972012 418.24920654]
[-23.44444656 422.30569458]
[-38.32080078 424.39797974]
[-53.34328842 424.48867798]
[-68.24382782 422.57620239]
[-82.75648499 418.69470215]
[-96.62227631 412.91342163]
[-109.59375000 405.33554077]
[-121.43941498 396.09628296]
[-131.94786072 385.36056519]
[-140.93156433 373.31994629]
[-148.23019409 360.18930054]
[-153.71350098 346.20300293]
[-157.28363037 331.61062622]
[-158.87686157 316.67257690]
[-158.46478271 301.65545654]
[-156.05471802 286.82727051]
[-151.68968201 272.45266724]
[-145.44760132 258.78811646]
[-137.43984985 246.07751465]
[-127.80933380 234.54769897]
[-116.72793579 224.40441895]
[-104.39340210 215.82870483]
[-91.02587128 208.97360229]
[-76.86389160 203.96144104]
[-62.16019821 200.88166809]
[-47.17720795 199.78926086]
[-32.18230057 200.70368958]
[-17.44307899 203.60865784]
[-3.22258353 208.45231628]
[10.22540379 215.14820862]
[18.64002228 202.73071289]
[27.05464172 190.31321716]
[35.46926117 177.89572144]
[36.61922073 170.59507751]
[44.10274506 165.35726929]
[52.70130920 153.06643677]
[50.90532303 141.10394287]
[57.96833801 130.79388428]
[70.55393219 127.97154236]
[79.33454132 115.81008911]
[74.23035431 103.59796906]
[75.79442596 90.45482635]
[83.62203217 79.78163147]
[95.68766785 74.34022522]
[108.86918640 75.53864288]
[117.82987976 63.50926971]
[126.79057312 51.47989273]
[135.75126648 39.45051193]
[144.71195984 27.42113686]
[153.67266846 15.39175797]
[162.27122498 3.10092020]
[170.50003052 -9.44048023]
[157.46237183 -2.02298117]
[142.87640381 1.47696662]
[127.89244843 0.78334278]
[113.69220734 -4.04915047]
[101.39555359 -12.63940334]
[91.97226715 -24.30995178]
[86.16550446 -38.14040756]
[84.43321228 -53.04004288]
[86.91200256 -67.83380890]
[93.40638733 -81.35501862]
[103.40419769 -92.53731537]
[116.11695862 -100.49882507]
[130.54209900 -104.61167145]
[145.54197693 -104.55149841]
[159.93363953 -100.32305145]
[172.58212280 -92.25980377]
[182.48989868 -80.99765015]
[188.87559509 -67.42477417]
[191.23561096 -52.61159515]
[189.38383484 -37.72633743]
[183.46449280 -23.93994904]
[195.01078796 -33.51506805]
[200.69447327 -48.28010178]
[215.43037415 -50.44863129]
[226.97668457 -60.02375031]
[238.52297974 -69.59886932]
[250.06929016 -79.17398834]
[261.61560059 -88.74910736]
[273.16189575 -98.32423401]
[284.70819092 -107.89935303]
[296.25448608 -117.47447205]
[287.62213135 -129.75138855]
[279.99249268 -142.67533875]
[273.41375732 -156.16461182]
[267.92758179 -170.13392639]
[263.56860352 -184.49496460]
[260.36441040 -199.15693665]
[258.33523560 -214.02711487]
[257.49392700 -229.01152039]
[257.84582520 -244.01539612]
[259.38864136 -258.94387817]
[262.11267090 -273.70260620]
[266.00070190 -288.19824219]
[271.02810669 -302.33914185]
[277.16311646 -316.03591919]
[284.36697388 -329.20196533]
[292.59408569 -341.75402832]
[301.79248047 -353.61276245]
[311.90399170 -364.70321655]
[322.86465454 -374.95523071]
[334.60522461 -384.30398560]
[347.05142212 -392.69039917]
[360.12457275 -400.06146240]
[373.74206543 -406.37051392]
[387.81774902 -411.57772827]
[402.26266479 -415.65017700]
[416.98547363 -418.56207275]
[431.89306641 -420.29501343]
[446.89126587 -420.83807373]
[461.88516235 -420.18780518]
[476.77999878 -418.34829712]
[491.48159790 -415.33120728]
[505.89703369 -411.15560913]
[519.93511963 -405.84786987]
[533.50714111 -399.44161987]
[546.52728271 -391.97726440]
[558.91320801 -383.50207520]
[570.58660889 -374.06961060]
[581.47369385 -363.73950195]
[591.50567627 -352.57702637]
[600.61901855 -340.65283203]
[608.75616455 -328.04226685]
[615.86572266 -314.82504272]
[621.90264893 -301.08474731]
[626.82879639 -286.90826416]
[630.61309814 -272.38519287]
[633.23150635 -257.60739136]
[634.66760254 -242.66825867]
[634.91217041 -227.66224670]
[633.96374512 -212.68423462]
[631.82830811 -197.82893372]
[628.51934814 -183.19026184]
[624.05780029 -168.86074829]
[618.47192383 -154.93101501]
[611.79687500 -141.48912048]
[604.07501221 -128.62005615]
[595.35510254 -116.40518188]
[585.69232178 -104.92171478]
[575.14764404 -94.24227142]
[563.78784180 -84.43437195]
[551.68469238 -75.56002045]
[538.91473389 -67.67532349]
[525.55871582 -60.83013153]
[511.70108032 -55.06772614]
[497.42938232 -50.42453766]
[482.83392334 -46.92992401]
[468.00692749 -44.60597610]
[453.04220581 -43.46738815]
[438.03430176 -43.52135849]
[423.07812500 -44.76754761]
[408.26821899 -47.19807816]
[393.69827271 -50.79758072]
[379.46035767 -55.54329300]
[365.64450073 -61.40522003]
[352.33804321 -68.34629822]
[339.62515259 -76.32263184]
[327.58615112 -85.28380585]
[316.29718018 -95.17316437]
[305.82962036 -105.92816925]
[294.28332520 -96.35305023]
[282.73699951 -86.77793121]
[271.19070435 -77.20281219]
[259.64440918 -67.62768555]
[248.09809875 -58.05257034]
[236.55180359 -48.47745132]
[225.00549316 -38.90232849]
[220.14767456 -24.82217216]
[204.58590698 -21.96876717]
[193.03961182 -12.39364719]
[183.04142761 -1.21167219]
[174.81262207 11.32972813]
[175.24981689 14.09866524]
[174.61653137 17.20761299]
[172.77777100 20.24971390]
[169.74818420 22.77679443]
[165.70204163 24.35245514]
[156.74134827 36.38183212]
[147.78065491 48.41120911]
[138.81994629 60.44058609]
[129.85925293 72.46996307]
[120.89855957 84.49934387]
[126.01951599 99.92989349]
[120.98178864 115.38781738]
[107.75222015 124.83793640]
[91.49599457 124.59069061]
[82.71539307 136.75215149]
[81.27075958 155.10955811]
[64.99214935 161.66499329]
[56.39358139 173.95584106]
[47.88675690 186.31034851]
[39.47213745 198.72784424]
[31.05751801 211.14533997]
[22.64290047 223.56283569]
[33.84598923 233.57153320]
[43.61503601 244.98420715]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 208]
[44 207]
[45 206]
[46 205]
[48 204]
[49 203]
[52 201]
[53 200]
[58 196]
[59 195]
[60 194]
[61 193]
[62 192]
[63 191]
[64 186]
[65 185]
[86 184]
[87 183]
[89 181]
[90 180]
[91 179]
[92 178]
[93 177]
[94 176]
[95 175]
[96 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
