%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[104.60707092 593.87329102]
[89.54685211 593.20013428]
[75.08554077 588.94177246]
[62.06391525 581.34564209]
[51.23902130 570.85351562]
[43.24021149 558.07531738]
[38.53252411 543.75396729]
[37.38965988 528.72210693]
[39.87805939 513.85363770]
[45.85305405 500.01300049]
[54.96726608 488.00488281]
[66.69080353 478.52743530]
[80.34207916 472.13165283]
[95.12741852 469.18936157]
[95.79720306 454.20431519]
[88.63592529 441.14425659]
[96.98171997 427.70333862]
[97.65150452 412.71829224]
[98.32128906 397.73324585]
[98.99107361 382.74822998]
[99.66085815 367.76318359]
[89.78105164 362.58242798]
[82.51493073 354.05004883]
[78.94136810 343.37387085]
[79.61296082 332.08416748]
[84.47089386 321.81417847]
[92.84796143 314.06399536]
[103.55994415 309.98141479]
[104.89817810 295.04122925]
[95.18039703 283.81176758]
[96.32472992 268.64123535]
[108.16909027 258.52447510]
[109.50732422 243.58428955]
[110.84555817 228.64410400]
[112.18379211 213.70391846]
[113.52202606 198.76373291]
[112.40637207 183.80528259]
[108.86669922 169.22891235]
[105.32703400 154.65252686]
[101.78736115 140.07615662]
[98.24768829 125.49977875]
[94.70801544 110.92340851]
[90.90480042 125.43325043]
[82.65123749 137.95837402]
[70.81833649 147.17697144]
[56.65485382 152.11616516]
[41.65549469 152.25473022]
[27.40317535 147.57804871]
[15.40198135 138.57963562]
[6.91842413 126.20913696]
[2.84779477 111.77203369]
[3.61967659 96.79190826]
[9.15261078 82.84964752]
[18.86269379 71.41661072]
[31.72519684 63.69935989]
[46.38270950 60.51231003]
[61.28839111 62.19179535]
[74.86920929 68.56057739]
[85.69194794 78.94654846]
[92.61450958 92.25382996]
[92.83783722 77.25549316]
[93.06116486 62.25715637]
[93.28449249 47.25881958]
[93.50782013 32.26048279]
[85.97684479 18.34664345]
[93.90277863 5.73597956]
[79.16402435 2.73506308]
[65.23139191 -2.92161250]
[52.57882690 -11.04004097]
[41.63644409 -21.34249878]
[32.77590179 -33.47705078]
[26.29777908 -47.02956772]
[22.42138100 -61.53785706]
[21.27730751 -76.50743103]
[22.90306091 -91.42837524]
[27.24181747 -105.79266357]
[34.14440536 -119.11153412]
[43.37445068 -130.93205261]
[54.61644363 -140.85256958]
[67.48654938 -148.53628540]
[81.54570007 -153.72280884]
[96.31457520 -156.23686218]
[96.53790283 -171.23519897]
[89.00692749 -185.14904785]
[96.93286133 -197.75970459]
[97.15618896 -212.75804138]
[94.27490234 -218.70864868]
[94.75868225 -224.37106323]
[97.61608887 -228.19784546]
[98.28587341 -243.18289185]
[98.95566559 -258.16793823]
[99.62545013 -273.15295410]
[97.21839905 -277.78472900]
[96.86413574 -282.41375732]
[98.21784973 -286.25854492]
[100.67456055 -288.78775024]
[102.01279449 -303.72793579]
[103.35102844 -318.66812134]
[89.28981781 -324.18710327]
[77.35389709 -333.44509888]
[68.51087189 -345.69161987]
[63.47759247 -359.93392944]
[62.66209030 -375.01739502]
[66.13047791 -389.71932983]
[73.60157776 -402.84790039]
[84.46975708 -413.33883667]
[97.85396576 -420.34164429]
[112.66921234 -423.28869629]
[127.71450043 -421.94104004]
[141.77015686 -416.40795898]
[153.69677734 -407.13796997]
[162.52749634 -394.88256836]
[167.54646301 -380.63522339]
[168.34680176 -365.55093384]
[164.86366272 -350.85247803]
[157.37936401 -337.73141479]
[146.50065613 -327.25143433]
[133.10942078 -320.26205444]
[118.29121399 -317.32989502]
[116.95298004 -302.38970947]
[115.61474609 -287.44952393]
[114.61048889 -272.48318481]
[113.94070435 -257.49813843]
[113.27091217 -242.51310730]
[112.60112762 -227.52806091]
[112.15452576 -212.53471375]
[111.93119812 -197.53637695]
[119.47814941 -184.69532776]
[111.53623962 -171.01187134]
[111.31291199 -156.01353455]
[126.00038910 -153.06086731]
[139.89889526 -147.45805359]
[152.53451538 -139.39454651]
[163.47615051 -129.14372253]
[172.35015869 -117.05362701]
[178.85314941 -103.53514862]
[182.76229858 -89.04804230]
[183.94306946 -74.08531189]
[182.35380554 -59.15643692]
[178.04716492 -44.76999283]
[171.16841125 -31.41636467]
[161.95050049 -19.55100250]
[150.70622253 -9.57890797]
[137.81755066 -1.84079266]
[123.72267151 3.39854884]
[108.90111542 5.95930719]
[116.44806671 18.80036545]
[108.50615692 32.48381042]
[108.28282928 47.48214722]
[108.05950165 62.48048401]
[107.83617401 77.47882080]
[107.61284637 92.47715759]
[109.28438568 107.38373566]
[112.82405853 121.96011353]
[116.36373138 136.53648376]
[119.90340424 151.11285400]
[123.44307709 165.68923950]
[126.98274994 180.26560974]
[130.34812927 165.64801025]
[137.33515930 152.37467957]
[147.48042297 141.32598877]
[160.11102295 133.23475647]
[174.38920593 128.63763428]
[189.36795044 127.83956146]
[204.05378723 130.89344788]
[217.47265625 137.59674072]
[228.73451233 147.50485229]
[237.09240723 159.96058655]
[241.99200439 174.13783264]
[243.10830688 189.09623718]
[240.36729431 203.84367371]
[233.95075989 217.40199280]
[224.28428650 228.87191772]
[212.00903320 237.49270630]
[197.93914795 242.69256592]
[183.00785828 244.12658691]
[168.20547485 241.69969177]
[154.51382446 235.57281494]
[142.84100342 226.15234375]
[133.96122742 214.06311035]
[128.46220398 200.10197449]
[127.12397766 215.04216003]
[125.78574371 229.98234558]
[124.44750977 244.92253113]
[123.10927582 259.86270142]
[132.96713257 271.92340088]
[131.39714050 287.05581665]
[119.83836365 296.37945557]
[118.50012970 311.31964111]
[133.44087219 323.28250122]
[138.11581421 341.68777466]
[130.81132507 359.05364990]
[114.64589691 368.43295288]
[113.97611237 383.41799927]
[113.30632782 398.40304565]
[112.63654327 413.38809204]
[111.96675873 428.37310791]
[119.08013153 442.50500488]
[110.78224182 454.87411499]
[110.11245728 469.85913086]
[124.57634735 474.10876465]
[137.60258484 481.69696045]
[148.43382263 492.18255615]
[156.44038391 504.95590210]
[161.15675354 519.27441406]
[162.30873108 534.30560303]
[159.82934570 549.17553711]
[153.86274719 563.01977539]
[144.75581360 575.03344727]
[133.03802490 584.51800537]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 200]
[15 199]
[17 197]
[18 196]
[19 195]
[20 194]
[21 193]
[28 189]
[29 188]
[32 185]
[33 184]
[34 183]
[35 182]
[36 181]
[37 158]
[38 157]
[39 156]
[40 155]
[41 154]
[42 153]
[60 152]
[61 151]
[62 150]
[63 149]
[64 148]
[66 146]
[82 130]
[83 129]
[85 127]
[86 126]
[89 125]
[90 124]
[91 123]
[92 122]
[96 121]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
