%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[-16.29946136 331.38446045]
[-8.74701977 344.37316895]
[-3.07583046 358.28662109]
[0.60371643 372.85394287]
[2.21999693 387.79159546]
[1.74154997 402.80883789]
[-0.82231146 417.61331177]
[-5.42168093 431.91690063]
[-11.96703053 445.44110107]
[-20.33095360 457.92272949]
[-30.35064316 469.11880493]
[-41.83106232 478.81137085]
[-54.54874420 486.81179810]
[-68.25613403 492.96432495]
[-82.68640900 497.14920044]
[-97.55868530 499.28497314]
[-112.58346558 499.33007812]
[-127.46829224 497.28359985]
[-141.92343140 493.18539429]
[-155.66749573 487.11526489]
[-168.43296814 479.19131470]
[-179.97135925 469.56781006]
[-190.05805969 458.43206787]
[-198.49674988 446.00088501]
[-205.12313843 432.51617432]
[-209.80827332 418.24047852]
[-212.46095276 403.45166016]
[-213.02952576 388.43756104]
[-211.50291443 373.49047852]
[-207.91087341 358.90130615]
[-202.32328796 344.95410156]
[-194.84893799 331.92028809]
[-185.63331604 320.05358887]
[-174.85580444 309.58499146]
[-162.72618103 300.71829224]
[-149.48056030 293.62606812]
[-135.37677002 288.44638062]
[-120.68934631 285.28002930]
[-105.70418549 284.18869019]
[-90.71297455 285.19354248]
[-76.00752258 288.27508545]
[-61.87408066 293.37332153]
[-48.58775330 300.38897705]
[-39.80715179 288.22753906]
[-38.63006210 273.37951660]
[-24.27868652 266.72003174]
[-15.49808216 254.55857849]
[-14.65903282 237.02966309]
[2.20291543 229.62991333]
[10.80147934 217.33908081]
[19.40004349 205.04824829]
[15.76785088 188.62734985]
[25.32398605 174.37971497]
[42.56069565 171.39387512]
[50.97531509 158.97637939]
[59.38993454 146.55889893]
[67.80455017 134.14140320]
[68.53903198 119.26490784]
[82.68577576 112.18109894]
[78.83043671 100.10675049]
[82.56381226 87.99412537]
[92.54757690 80.18527985]
[105.20282745 79.47946930]
[113.80139160 67.18862915]
[122.39995575 54.89779282]
[130.99851990 42.60695267]
[131.44955444 37.40660095]
[133.63200378 33.30902100]
[136.83589172 30.78905678]
[140.26562500 29.97096443]
[142.53793335 14.31378746]
[156.42755127 8.93534946]
[165.56636047 -2.95928335]
[174.70516968 -14.85391617]
[183.84396362 -26.74854851]
[192.98277283 -38.64318085]
[202.12156677 -50.53781509]
[196.37208557 -64.71140289]
[198.47511292 -79.76045990]
[207.76667786 -91.65723419]
[221.67248535 -97.26831818]
[236.42047119 -95.17964935]
[245.55928040 -107.07427979]
[254.69807434 -118.96891022]
[263.83688354 -130.86354065]
[272.97567749 -142.75817871]
[282.02569580 -154.72052002]
[290.98638916 -166.74989319]
[299.94708252 -178.77926636]
[288.68154907 -188.69596863]
[278.26184082 -199.49792480]
[268.75726318 -211.11325073]
[260.23104858 -223.46463013]
[252.74000549 -236.46989441]
[246.33392334 -250.04248047]
[241.05545044 -264.09204102]
[236.93972778 -278.52511597]
[234.01414490 -293.24563599]
[232.29815674 -308.15563965]
[231.80319214 -323.15591431]
[232.53254700 -338.14660645]
[234.48136902 -353.02795410]
[237.63667297 -367.70095825]
[241.97747803 -382.06793213]
[247.47488403 -396.03329468]
[254.09231567 -409.50408936]
[261.78573608 -422.39068604]
[270.50393677 -434.60729980]
[280.18890381 -446.07266235]
[290.77618408 -456.71041870]
[302.19531250 -466.44985962]
[314.37033081 -475.22607422]
[327.22015381 -482.98071289]
[340.65930176 -489.66217041]
[354.59835815 -495.22598267]
[368.94451904 -499.63510132]
[383.60232544 -502.86019897]
[398.47424316 -504.87979126]
[413.46130371 -505.68045044]
[428.46374512 -505.25686646]
[443.38174438 -503.61184692]
[458.11602783 -500.75634766]
[472.56851196 -496.70935059]
[486.64306641 -491.49780273]
[500.24597168 -485.15637207]
[513.28674316 -477.72726440]
[525.67852783 -469.25994873]
[537.33892822 -459.81072998]
[548.19036865 -449.44253540]
[558.16058350 -438.22433472]
[567.18316650 -426.23080444]
[575.19818115 -413.54171753]
[582.15222168 -400.24157715]
[587.99908447 -386.41885376]
[592.69976807 -372.16555786]
[596.22302246 -357.57653809]
[598.54534912 -342.74890137]
[599.65142822 -327.78128052]
[599.53381348 -312.77331543]
[598.19323730 -297.82489014]
[595.63873291 -283.03546143]
[591.88720703 -268.50344849]
[586.96368408 -254.32559204]
[580.90087891 -240.59622192]
[573.73919678 -227.40672302]
[565.52630615 -214.84484863]
[556.31677246 -202.99421692]
[546.17193604 -191.93368530]
[535.15936279 -181.73686218]
[523.35223389 -172.47158813]
[510.82919312 -164.19955444]
[497.67358398 -156.97579956]
[483.97296143 -150.84837341]
[469.81845093 -145.85809326]
[455.30429077 -142.03814697]
[440.52706909 -139.41395569]
[425.58511353 -138.00297546]
[410.57788086 -137.81462097]
[395.60522461 -138.85012817]
[380.76678467 -141.10261536]
[366.16131592 -144.55706787]
[351.88604736 -149.19053650]
[338.03591919 -154.97215271]
[324.70315552 -161.86344910]
[311.97644043 -169.81857300]
[303.01574707 -157.78919983]
[294.05505371 -145.75981140]
[292.58026123 -138.51780701]
[284.87033081 -133.61936951]
[275.73150635 -121.72474670]
[266.59271240 -109.83010864]
[257.45391846 -97.93547821]
[248.31510925 -86.04084778]
[254.13265991 -72.32874298]
[252.29339600 -57.44677353]
[243.19187927 -45.40398407]
[229.19256592 -39.49499893]
[214.01620483 -41.39901352]
[204.87739563 -29.50437927]
[195.73860168 -17.60974693]
[186.59979248 -5.71511364]
[177.46099854 6.17951918]
[168.32218933 18.07415199]
[166.70355225 32.88054276]
[152.16024780 39.10976791]
[143.28935242 51.20551682]
[134.69079590 63.49635696]
[126.09223175 75.78719330]
[117.49366760 88.07803345]
[120.73682404 104.25980377]
[111.37728882 117.85269928]
[95.10327148 120.59571838]
[93.76691437 136.36038208]
[80.22204590 142.55601501]
[71.80742645 154.97351074]
[63.39281082 167.39100647]
[54.97819138 179.80850220]
[59.02548218 192.65505981]
[54.99377823 205.30242920]
[44.56842422 213.20141602]
[31.69088173 213.64680481]
[23.09231758 225.93765259]
[14.49375343 238.22848511]
[15.96611691 251.04234314]
[8.55132103 261.10238647]
[-3.33662677 263.33917236]
[-12.11723042 275.50064087]
[-13.92236328 291.21853638]
[-27.64569473 297.00811768]
[-36.42629623 309.16958618]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 210]
[44 209]
[46 207]
[47 206]
[49 203]
[50 202]
[51 201]
[54 197]
[55 196]
[56 195]
[57 194]
[59 192]
[63 189]
[64 188]
[65 187]
[66 186]
[70 185]
[72 183]
[73 182]
[74 181]
[75 180]
[76 179]
[77 178]
[82 173]
[83 172]
[84 171]
[85 170]
[86 169]
[87 167]
[88 166]
[89 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
