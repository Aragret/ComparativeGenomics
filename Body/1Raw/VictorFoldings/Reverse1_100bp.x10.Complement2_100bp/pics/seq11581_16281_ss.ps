%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[114.52055359 488.22531128]
[100.00136566 482.41778564]
[92.65762329 468.61187744]
[95.95681763 453.32626343]
[108.34116364 443.77838135]
[108.78776550 428.78503418]
[109.23437500 413.79168701]
[109.68097687 398.79833984]
[110.12758636 383.80499268]
[110.57419586 368.81164551]
[110.35086823 353.81329346]
[101.86974335 341.56912231]
[108.77192688 327.33288574]
[107.87910461 312.35949707]
[106.98628998 297.38607788]
[96.54744720 283.27944946]
[104.92573547 266.88168335]
[103.81008148 251.92324829]
[102.69443512 236.96479797]
[101.57878876 222.00633240]
[100.46313477 207.04788208]
[91.80065918 194.93133545]
[98.49011993 180.59391785]
[97.37446594 165.63546753]
[88.71199036 153.51892090]
[95.40145111 139.18148804]
[86.73896790 127.06494904]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[90.49746704 73.42967224]
[89.38182068 58.47121811]
[88.26617432 43.51276398]
[73.07504272 37.68494415]
[61.98586655 25.85811806]
[57.18169403 10.43475342]
[59.57587814 -5.48226547]
[68.63890839 -18.71386147]
[82.51448059 -26.63971519]
[81.17624664 -41.57989883]
[79.83801270 -56.52008438]
[78.49977875 -71.46026611]
[77.16154480 -86.40045166]
[75.82331085 -101.34063721]
[74.48507690 -116.28082275]
[72.14958954 -131.09788513]
[68.82733154 -145.72535706]
[65.50506592 -160.35281372]
[62.18280792 -174.98027039]
[57.97868347 -180.08290100]
[57.11259460 -185.69956970]
[58.98626709 -190.09255981]
[56.10099411 -204.81245422]
[41.23926544 -207.87916565]
[28.71764183 -216.37927246]
[20.42672920 -228.99174500]
[17.60391045 -243.77752686]
[20.64875031 -258.47766113]
[29.06677055 -270.85839844]
[41.54944611 -279.05056763]
[38.66417313 -293.77047729]
[35.77890015 -308.49035645]
[32.89362717 -323.21026611]
[30.00835419 -337.93014526]
[27.12308121 -352.65002441]
[22.52563667 -338.37194824]
[13.37680340 -326.48504639]
[0.75137782 -318.38574219]
[-13.86741829 -315.02557373]
[-28.76218414 -316.79925537]
[-42.18309402 -323.49844360]
[-52.55347824 -334.33612061]
[-58.65502930 -348.03909302]
[-59.77094650 -362.99749756]
[-55.77013016 -377.45413208]
[-47.12259674 -389.71054077]
[-34.84424210 -398.32693481]
[-20.37752342 -402.29101562]
[-5.42197227 -401.13714600]
[8.26544762 -395.00079346]
[19.07675171 -384.60293579]
[25.74228668 -371.16354370]
[26.41207123 -386.14859009]
[27.08185577 -401.13363647]
[27.75164223 -416.11865234]
[28.42142677 -431.10369873]
[28.53309441 -446.10330200]
[28.08648682 -461.09664917]
[19.25097466 -470.49325562]
[19.18766403 -482.99044800]
[27.38508987 -491.88589478]
[27.16176224 -506.88421631]
[26.93843269 -521.88256836]
[26.71510506 -536.88092041]
[26.49177742 -551.87921143]
[11.97824192 -556.10400391]
[-0.64431101 -564.42041016]
[-10.25349140 -576.08898926]
[-15.99485683 -590.07208252]
[-17.35788918 -605.12646484]
[-14.22138977 -619.91339111]
[-6.86425304 -633.11810303]
[4.05932999 -643.56640625]
[17.57804108 -650.32922363]
[32.48980331 -652.80523682]
[47.46867752 -650.77429199]
[61.18275070 -644.41693115]
[72.41257477 -634.29852295]
[80.15960693 -621.31872559]
[83.73497772 -606.63171387]
[82.82077026 -591.54345703]
[77.49828339 -577.39556885]
[68.24077606 -565.44610596]
[55.87142944 -556.75756836]
[41.49011612 -552.10253906]
[41.71344376 -537.10424805]
[41.93677139 -522.10589600]
[42.16009903 -507.10754395]
[42.38342667 -492.10922241]
[52.18196487 -477.55050659]
[43.07983780 -461.54324341]
[43.52644348 -446.54989624]
[55.55564499 -455.51083374]
[70.09979248 -451.84097290]
[76.43747711 -438.24563599]
[69.89680481 -424.74676514]
[55.29930115 -421.29522705]
[43.40646362 -430.43392944]
[42.73667908 -415.44888306]
[42.06689453 -400.46383667]
[41.39710999 -385.47879028]
[40.72732544 -370.49377441]
[41.84297180 -355.53530884]
[44.72824478 -340.81542969]
[47.61351776 -326.09552002]
[50.49879074 -311.37564087]
[53.38406372 -296.65573120]
[56.26933670 -281.93585205]
[70.92102814 -279.06231689]
[83.39009094 -270.77569580]
[91.75919342 -258.31283569]
[94.72717285 -243.55551147]
[91.81122589 -228.74636841]
[83.42513275 -216.14808655]
[70.82088470 -207.69772339]
[73.70616150 -192.97782898]
[76.81027222 -178.30253601]
[80.13253021 -163.67507935]
[83.45478821 -149.04760742]
[86.77704620 -134.42015076]
[93.25824738 -147.94767761]
[105.96788788 -155.91416931]
[120.96775818 -155.85112000]
[133.60997009 -147.77806091]
[139.97721863 -134.19651794]
[138.09652710 -119.31488037]
[128.55064392 -107.74439240]
[114.29747772 -103.07028961]
[99.75351715 -106.74089813]
[89.42526245 -117.61905670]
[90.76349640 -102.67887115]
[92.10173035 -87.73868561]
[93.43996429 -72.79850769]
[94.77819824 -57.85831833]
[96.11643219 -42.91813278]
[97.45466614 -27.97794914]
[110.66557312 -23.74236679]
[121.29785919 -14.76314831]
[127.72497559 -2.37074804]
[128.94723511 11.57904148]
[124.74723053 24.98297501]
[115.72755432 35.80746841]
[103.22462463 42.39711761]
[104.34027100 57.35557175]
[105.45592499 72.31402588]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[117.12915802 124.79834747]
[110.35990143 138.06584167]
[119.10218048 151.25231934]
[112.33292389 164.51980591]
[113.44857025 179.47827148]
[122.19084930 192.66473389]
[115.42159271 205.93223572]
[116.53723907 220.89068604]
[117.65288544 235.84913635]
[118.76853943 250.80760193]
[119.88418579 265.76605225]
[129.13046265 274.75875854]
[129.75173950 287.24066162]
[121.95969391 296.49325562]
[122.85251617 311.46667480]
[123.74533081 326.44009399]
[132.29031372 339.75524902]
[125.32427216 352.92050171]
[136.06486511 342.44958496]
[151.06477356 342.50241089]
[161.73136902 353.04867554]
[161.95433044 368.04702759]
[151.60595703 378.90570068]
[136.61424255 379.40438843]
[125.56754303 369.25823975]
[125.12093353 384.25158691]
[124.67433167 399.24496460]
[124.22772217 414.23831177]
[123.78112030 429.23165894]
[123.33451080 444.22500610]
[135.12860107 454.49307251]
[137.51213074 469.94793701]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 208]
[6 207]
[7 206]
[8 205]
[9 204]
[10 203]
[11 196]
[13 194]
[14 193]
[15 192]
[17 189]
[18 188]
[19 187]
[20 186]
[21 185]
[23 183]
[24 182]
[26 180]
[28 178]
[30 176]
[31 175]
[32 174]
[33 173]
[39 166]
[40 165]
[41 164]
[42 163]
[43 162]
[44 161]
[45 160]
[46 150]
[47 149]
[48 148]
[49 147]
[52 146]
[53 145]
[60 138]
[61 137]
[62 136]
[63 135]
[64 134]
[65 133]
[82 132]
[83 131]
[84 130]
[85 129]
[86 128]
[87 122]
[88 121]
[91 119]
[92 118]
[93 117]
[94 116]
[95 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
