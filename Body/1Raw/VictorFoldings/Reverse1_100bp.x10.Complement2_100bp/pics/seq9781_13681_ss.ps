%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[52.37841797 647.79040527]
[40.19355392 638.93170166]
[30.28583336 627.58337402]
[23.15222168 614.31463623]
[19.15053940 599.79101562]
[18.48150826 584.74108887]
[21.17868614 569.91973877]
[27.10678482 556.07037354]
[35.96845245 543.88763428]
[47.31919098 533.98266602]
[60.58965683 526.85229492]
[75.11420441 522.85412598]
[74.44441223 507.86907959]
[66.14653015 495.50000000]
[73.25990295 481.36810303]
[72.59011841 466.38305664]
[71.92033386 451.39801025]
[71.25054932 436.41299438]
[68.90922546 433.77658081]
[67.72853851 429.87518311]
[68.28914642 425.26660156]
[70.90061188 420.74694824]
[70.90061188 405.74694824]
[70.90061188 390.74694824]
[70.90061188 375.74694824]
[70.90061188 360.74694824]
[59.55582047 370.55996704]
[44.58565140 369.61444092]
[34.56569672 358.45199585]
[35.23583984 343.46694946]
[46.21219254 333.24346924]
[61.20700455 333.63800049]
[71.63021088 344.42367554]
[72.96844482 329.48348999]
[74.30667877 314.54330444]
[75.64491272 299.60311890]
[76.98314667 284.66293335]
[78.21012115 269.71319580]
[79.32576752 254.75473022]
[80.44142151 239.79627991]
[81.55706787 224.83782959]
[82.44988251 209.86442566]
[83.11966705 194.87937927]
[81.32968140 192.72204590]
[80.28639984 189.72569275]
[80.31365204 186.17115784]
[81.62776184 182.45126343]
[84.30175018 179.03019714]
[85.86227417 164.11158752]
[87.42279816 149.19297791]
[88.98332214 134.27438354]
[90.54384613 119.35577393]
[92.10437012 104.43717194]
[90.12500763 101.12741089]
[89.61414337 96.96125031]
[90.92154694 92.61409760]
[94.08222198 88.89253998]
[96.30733490 74.05849457]
[98.53245544 59.22445297]
[92.92789459 44.42919922]
[102.46756744 32.99050140]
[104.69268036 18.15645599]
[106.91780090 3.32241297]
[105.09602356 -5.62850618]
[109.28806305 -11.71526527]
[111.73378754 -26.51453590]
[114.06927490 -41.33160400]
[116.29439545 -56.16564941]
[118.51950836 -70.99969482]
[120.41280365 -85.87973022]
[121.97332764 -100.79833221]
[123.53384399 -115.71693420]
[125.09436798 -130.63554382]
[115.41716766 -142.84165955]
[117.21228027 -157.94902039]
[128.90859985 -167.09953308]
[130.46911621 -182.01814270]
[132.02964783 -196.93673706]
[133.59016418 -211.85534668]
[124.66796875 -199.79739380]
[111.85030365 -192.00588989]
[97.03858948 -189.63668823]
[82.43006134 -193.04121399]
[70.19180298 -201.71446228]
[62.13928604 -214.36976624]
[59.46706009 -229.12982178]
[62.57153320 -243.80505371]
[70.99216461 -256.21847534]
[83.47982025 -264.52862549]
[98.18201447 -267.50274658]
[112.91777802 -264.69964600]
[125.50113678 -256.53512573]
[134.06542969 -244.22039795]
[137.34014893 -229.58413696]
[141.95414734 -243.85687256]
[146.56816101 -258.12960815]
[149.12399292 -272.91024780]
[149.57060242 -287.90359497]
[150.01721191 -302.89697266]
[150.46382141 -317.89031982]
[136.89184570 -324.87344360]
[127.70064545 -337.05889893]
[124.71514893 -352.02716064]
[128.52810669 -366.80633545]
[138.38247681 -378.46200562]
[152.32165527 -384.67987061]
[167.57800293 -384.22543335]
[181.12237549 -377.18890381]
[190.26550293 -364.96737671]
[193.19204712 -349.98745728]
[189.32090759 -335.22341919]
[179.42071533 -323.60665894]
[165.45716858 -317.44369507]
[165.01055908 -302.45034790]
[164.56394958 -287.45700073]
[164.11734009 -272.46365356]
[171.42016602 -285.56588745]
[182.21890259 -295.97680664]
[195.57936096 -302.79574585]
[210.34574890 -305.43280029]
[225.24060059 -303.65985107]
[238.97537231 -297.63024902]
[250.36186218 -287.86563110]
[258.41503906 -275.21072388]
[262.43820190 -260.76034546]
[262.08334351 -245.76454163]
[257.38110352 -231.52061462]
[248.73834229 -219.26083374]
[236.90269470 -210.04576111]
[222.89807129 -204.67262268]
[207.93603516 -203.60621643]
[193.31092834 -206.93881226]
[180.28796387 -214.38212585]
[169.99378967 -225.29220581]
[163.31892395 -238.72521973]
[160.84089661 -253.51559448]
[156.22688293 -239.24285889]
[151.61288452 -224.97012329]
[148.50877380 -210.29483032]
[146.94824219 -195.37622070]
[145.38772583 -180.45761108]
[143.82719421 -165.53901672]
[153.37670898 -154.16613770]
[152.00663757 -139.01431274]
[140.01296997 -129.07501221]
[138.45245361 -114.15641022]
[136.89192200 -99.23780823]
[135.33140564 -84.31920624]
[137.25573730 -81.36466980]
[137.84461975 -77.33127594]
[136.60658264 -72.85684204]
[133.35354614 -68.77457428]
[131.12843323 -53.94052887]
[128.90332031 -39.10648727]
[131.01982117 -32.02536774]
[126.53305817 -24.06880951]
[124.08733368 -9.26953793]
[121.75184631 5.54753017]
[119.52672577 20.38157463]
[117.30161285 35.21561813]
[123.06533051 48.94983673]
[113.36650085 61.44956970]
[111.14138031 76.28361511]
[108.91626740 91.11765289]
[107.02297211 105.99768829]
[105.46244812 120.91629791]
[103.90192413 135.83489990]
[102.34140015 150.75350952]
[100.78088379 165.67210388]
[99.22035980 180.59071350]
[98.10470581 195.54916382]
[97.43492126 210.53421021]
[100.13776398 216.56796265]
[99.48560333 222.21347046]
[96.51551819 225.95347595]
[95.39987183 240.91192627]
[94.28422546 255.87037659]
[93.16857910 270.82882690]
[95.65104675 279.61947632]
[91.92333221 286.00115967]
[90.58509827 300.94134521]
[89.24686432 315.88153076]
[87.90863037 330.82171631]
[86.57039642 345.76190186]
[85.90061188 360.74694824]
[85.90061188 375.74694824]
[85.90061188 390.74694824]
[85.90061188 405.74694824]
[85.90061188 420.74694824]
[86.23558807 435.74319458]
[86.90537262 450.72824097]
[87.57515717 465.71325684]
[88.24494171 480.69830322]
[96.59073639 494.13922119]
[89.42945099 507.19931030]
[90.09924316 522.18432617]
[104.92256165 524.87072754]
[118.77625275 530.78875732]
[130.96540833 539.64160156]
[140.87863159 550.98510742]
[148.01866150 564.25036621]
[152.02738953 578.77203369]
[152.70370483 593.82159424]
[150.01371765 608.64428711]
[144.09233093 622.49652100]
[135.23657227 634.68353271]
[123.89062500 644.59405518]
[110.62361908 651.73083496]
[96.10101318 655.73608398]
[81.05125427 656.40875244]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 196]
[13 195]
[15 193]
[16 192]
[17 191]
[18 190]
[22 189]
[23 188]
[24 187]
[25 186]
[26 185]
[33 184]
[34 183]
[35 182]
[36 181]
[37 180]
[38 178]
[39 177]
[40 176]
[41 175]
[42 172]
[43 171]
[48 170]
[49 169]
[50 168]
[51 167]
[52 166]
[53 165]
[57 164]
[58 163]
[59 162]
[61 160]
[62 159]
[63 158]
[65 157]
[66 156]
[67 154]
[68 153]
[69 152]
[70 148]
[71 147]
[72 146]
[73 145]
[76 142]
[77 141]
[78 140]
[79 139]
[94 138]
[95 137]
[96 136]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
