%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[219.55273438 452.81906128]
[214.51582336 438.69003296]
[209.47891235 424.56100464]
[198.68785095 419.09478760]
[194.37586975 407.36486816]
[199.36650085 395.47131348]
[194.54049683 381.26885986]
[189.71450806 367.06640625]
[184.78291321 352.90026855]
[179.74600220 338.77124023]
[168.18421936 329.38113403]
[170.83822632 313.78411865]
[165.80131531 299.65509033]
[160.76438904 285.52606201]
[155.72747803 271.39703369]
[150.69056702 257.26797485]
[139.12878418 247.87786865]
[141.78279114 232.28085327]
[136.74588013 218.15182495]
[120.10079956 217.70780945]
[104.86944580 210.88963318]
[93.39996338 198.71746826]
[87.47243500 183.03926086]
[88.02259827 166.25019836]
[94.99429321 150.92675781]
[107.34371185 139.43136597]
[101.88835907 125.45857239]
[96.43299866 111.48577881]
[90.77021027 97.59574890]
[84.90125275 83.79157257]
[79.03228760 69.98739624]
[72.45226288 56.50766373]
[65.17903137 43.38896942]
[57.90580368 30.27027512]
[50.63257599 17.15158081]
[42.78081894 4.37073803]
[34.36619949 -8.04675770]
[25.85937309 -20.40126610]
[17.26080894 -32.69210434]
[8.66224575 -44.98294449]
[-0.02757849 -57.20942688]
[-8.80818176 -69.37088776]
[-17.58878517 -81.53234100]
[-26.63878441 -93.49467468]
[-35.95366669 -105.25193024]
[-45.26855087 -117.00917816]
[-54.58343506 -128.76643372]
[-63.89831543 -140.52368164]
[-78.53273773 -146.53569031]
[-80.37165070 -161.31632996]
[-89.68653107 -173.07359314]
[-102.29756165 -164.93003845]
[-115.63569641 -158.04165649]
[-129.57638550 -152.47276306]
[-143.98948669 -148.27536011]
[-158.74040222 -145.48863220]
[-173.69142151 -144.13861084]
[-188.70294189 -144.23788452]
[-203.63479614 -145.78552246]
[-218.34757996 -148.76708984]
[-232.70390320 -153.15473938]
[-246.56971741 -158.90751648]
[-259.81558228 -165.97169495]
[-272.31781006 -174.28132629]
[-283.95965576 -183.75880432]
[-294.63244629 -194.31565857]
[-304.23651123 -205.85331726]
[-312.68218994 -218.26403809]
[-319.89059448 -231.43196106]
[-325.79446411 -245.23413086]
[-330.33865356 -259.54168701]
[-333.48074341 -274.22100830]
[-335.19134521 -289.13507080]
[-335.45455933 -304.14462280]
[-334.26791382 -319.10949707]
[-331.64245605 -333.88995361]
[-327.60269165 -348.34805298]
[-322.18640137 -362.34872437]
[-315.44409180 -375.76129150]
[-307.43875122 -388.46051025]
[-298.24514771 -400.32781982]
[-287.94903564 -411.25238037]
[-276.64663696 -421.13220215]
[-264.44345093 -429.87509155]
[-251.45341492 -437.39932251]
[-237.79782104 -443.63473511]
[-223.60417175 -448.52304077]
[-209.00497437 -452.01864624]
[-194.13656616 -454.08886719]
[-179.13775635 -454.71441650]
[-164.14860535 -453.88940430]
[-149.30903625 -451.62158203]
[-134.75764465 -447.93212891]
[-120.63025665 -442.85543823]
[-107.05880737 -436.43893433]
[-94.17000580 -428.74258423]
[-82.08419037 -419.83816528]
[-70.91420746 -409.80883789]
[-60.76435089 -398.74829102]
[-51.72939301 -386.75976562]
[-43.89368439 -373.95516968]
[-37.33039474 -360.45410156]
[-32.10079956 -346.38262939]
[-28.25373077 -331.87210083]
[-25.82510757 -317.05798340]
[-24.83760452 -302.07867432]
[-25.30044365 -287.07394409]
[-27.20930481 -272.18395996]
[-30.54636002 -257.54772949]
[-35.28045654 -243.30189514]
[-41.36738968 -229.57946777]
[-48.75032806 -216.50859070]
[-57.36033249 -204.21130371]
[-67.11701965 -192.80242920]
[-77.92928314 -182.38847351]
[-68.61440277 -170.63122559]
[-54.64624023 -165.46017456]
[-52.14106369 -149.83856201]
[-42.82618332 -138.08131409]
[-33.51129913 -126.32405853]
[-24.19641685 -114.56681061]
[-14.88153362 -102.80956268]
[-11.44000149 -102.04261780]
[-8.19895935 -99.57064056]
[-5.95573902 -95.50600433]
[-5.42732906 -90.31294250]
[3.35327411 -78.15148926]
[12.13387775 -65.99002838]
[18.59796715 -62.40710831]
[20.95308304 -53.58150482]
[29.55164719 -41.29066849]
[38.15021133 -28.99983025]
[44.56024170 -25.32106400]
[46.78369522 -16.46137619]
[55.19831467 -4.04388094]
[59.08504105 -18.53157806]
[72.00826263 -26.14671898]
[86.56496429 -22.52700615]
[94.41641998 -9.74597549]
[91.06494141 4.87481833]
[78.43041992 12.95992088]
[63.75127029 9.87835121]
[71.02449799 22.99704552]
[78.29772949 36.11573792]
[85.57096100 49.23443222]
[89.61988068 34.79122543]
[101.93406677 26.22613716]
[116.88364410 27.45501137]
[127.63386536 37.91602325]
[129.26986694 52.82653809]
[121.04370117 65.36967468]
[106.71625519 69.81086731]
[92.83647156 64.11843872]
[98.70542908 77.92261505]
[104.57438660 91.72679138]
[108.86844635 94.73926544]
[111.16900635 99.94318390]
[110.40579987 106.03041840]
[115.86115265 120.00321960]
[121.31651306 133.97601318]
[134.74902344 133.49977112]
[147.65277100 137.17950439]
[158.77587891 144.64361572]
[167.04371643 155.15406799]
[171.66271973 167.67935181]
[172.19656372 180.99571228]
[168.60731506 193.80668640]
[161.25779724 204.86935425]
[150.87490845 213.11491394]
[155.91181946 227.24394226]
[167.83387756 237.64466858]
[164.81959534 252.23107910]
[169.85650635 266.36010742]
[174.89343262 280.48913574]
[179.93034363 294.61816406]
[184.96725464 308.74719238]
[196.88931274 319.14791870]
[193.87503052 333.73431396]
[198.91194153 347.86337280]
[204.74131775 354.89587402]
[203.91696167 362.24041748]
[208.74296570 376.44287109]
[213.56895447 390.64532471]
[227.69515991 402.45770264]
[223.60794067 419.52407837]
[228.64485168 433.65310669]
[233.68177795 447.78213501]
[248.67967224 446.25692749]
[263.60668945 448.36593628]
[277.59494019 453.98660278]
[289.83120728 462.79211426]
[299.60409546 474.27056885]
[306.34536743 487.75457764]
[309.66314697 502.46020508]
[309.36453247 517.53247070]
[305.46688843 532.09515381]
[298.19677734 545.30157471]
[287.97692871 556.38391113]
[275.40148926 564.69787598]
[261.20156860 569.76007080]
[246.20274353 571.27618408]
[231.27702332 569.15808105]
[217.29217529 563.52893066]
[205.06123352 554.71600342]
[195.29533386 543.23168945]
[188.56221008 529.74359131]
[185.25334167 515.03594971]
[185.56109619 499.96380615]
[189.46759033 485.40350342]
[196.74568176 472.20150757]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 187]
[2 186]
[3 185]
[6 183]
[7 182]
[8 181]
[9 179]
[10 178]
[12 176]
[13 175]
[14 174]
[15 173]
[16 172]
[18 170]
[19 169]
[26 160]
[27 159]
[28 158]
[29 155]
[30 154]
[31 153]
[32 145]
[33 144]
[34 143]
[35 142]
[36 135]
[37 134]
[38 132]
[39 131]
[40 130]
[41 128]
[42 127]
[43 126]
[44 122]
[45 121]
[46 120]
[47 119]
[48 118]
[50 116]
[51 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
