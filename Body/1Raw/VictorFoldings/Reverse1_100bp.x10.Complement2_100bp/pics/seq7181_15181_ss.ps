%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[6.86958218 623.78875732]
[6.22255468 638.81610107]
[2.90248132 653.48638916]
[-2.98391032 667.32800293]
[-11.24739742 679.89599609]
[-21.62234306 690.78637695]
[-33.77523804 699.64904785]
[-47.31541061 706.19915771]
[-61.80760574 710.22607422]
[-76.78595734 711.60034180]
[-91.76898193 710.27789307]
[-106.27501678 706.30114746]
[-119.83777618 699.79791260]
[-132.02125549 690.97735596]
[-142.43382263 680.12292480]
[-150.74073792 667.58361816]
[-156.67497253 653.76245117]
[-160.04579163 639.10375977]
[-160.74479675 624.07873535]
[-158.74954224 609.17041016]
[-154.12417603 594.85797119]
[-147.01736450 581.60150146]
[-137.65756226 569.82720947]
[-126.34565735 559.91357422]
[-113.44527435 552.17926025]
[-99.37111664 546.87286377]
[-84.57560730 544.16497803]
[-69.53435516 544.14263916]
[-54.73087692 546.80664062]
[-49.48415756 532.75415039]
[-44.23743820 518.70172119]
[-38.99072266 504.64923096]
[-33.74400330 490.59674072]
[-28.49728394 476.54428101]
[-23.25056648 462.49182129]
[-18.10860634 448.40066528]
[-21.12289619 433.81427002]
[-9.20083904 423.41354370]
[-4.16392279 409.28451538]
[-17.25698090 416.60379028]
[-32.16485214 414.94387817]
[-43.32727432 404.92388916]
[-46.58093643 390.28100586]
[-40.71230698 376.47668457]
[-27.91023254 368.65960693]
[-12.94957733 369.74530029]
[-1.41029215 379.32888794]
[2.40369129 393.83703613]
[9.08388615 380.40667725]
[15.76408100 366.97628784]
[9.73617840 351.27587891]
[17.07307816 335.76831055]
[33.67616272 330.25860596]
[40.15565872 316.73025513]
[46.63515472 303.20190430]
[52.81092453 289.53222656]
[58.67988586 275.72805786]
[64.54884338 261.92388916]
[70.41780853 248.11970520]
[76.28676605 234.31553650]
[82.15573120 220.51135254]
[88.02468872 206.70718384]
[91.12879944 192.03187561]
[91.35212708 177.03353882]
[91.57545471 162.03520203]
[91.79878235 147.03686523]
[77.67111206 142.20364380]
[65.72714996 133.24302673]
[57.13497543 121.03131866]
[52.73488617 106.76281738]
[52.95719528 91.83292389]
[57.78016281 77.70175171]
[66.73210907 65.75128937]
[78.93757629 57.15025330]
[93.20288086 52.73980713]
[85.67190552 38.82596970]
[93.59783173 26.21530342]
[93.82115936 11.21696568]
[94.04448700 -3.78137136]
[94.26781464 -18.77970886]
[91.26652527 -27.40699387]
[94.60778046 -33.99924469]
[95.05438995 -48.99259567]
[95.50099182 -63.98594666]
[88.17800903 -78.01036835]
[96.29081726 -90.50163269]
[96.73741913 -105.49497986]
[96.96074677 -120.49331665]
[89.22344971 -134.29348755]
[96.96074677 -147.02076721]
[96.96074677 -162.02076721]
[96.96074677 -177.02076721]
[96.96074677 -192.02076721]
[93.83133698 -200.60240173]
[97.07408142 -207.24366760]
[97.29740906 -222.24200439]
[97.52073669 -237.24034119]
[97.74406433 -252.23869324]
[83.66344452 -257.90441895]
[72.58303070 -268.27694702]
[66.00136566 -281.95343018]
[64.80855560 -297.08422852]
[69.16592407 -311.62307739]
[78.48416901 -323.60366821]
[91.50307465 -331.40576172]
[106.46194458 -333.97415161]
[121.33771515 -330.96151733]
[134.11854553 -322.77526855]
[143.07595825 -310.52255249]
[146.99851990 -295.86041260]
[145.35574341 -280.77182007]
[138.36979675 -267.29736328]
[126.98546600 -257.25936890]
[112.74240112 -252.01535034]
[112.51907349 -237.01701355]
[112.29574585 -222.01867676]
[112.07241821 -207.02033997]
[111.96074677 -192.02076721]
[111.96074677 -177.02076721]
[111.96074677 -162.02076721]
[111.96074677 -147.02076721]
[119.69805145 -134.29348755]
[111.96074677 -120.49331665]
[114.64443207 -116.54276276]
[114.87489319 -110.86438751]
[111.73077393 -105.04837036]
[111.28416443 -90.05502319]
[118.63909912 -77.10302734]
[110.49434662 -63.53934097]
[110.04773712 -48.54598999]
[109.60113525 -33.55263901]
[109.26615906 -18.55638123]
[109.04283142 -3.55804348]
[108.81950378 11.44029427]
[108.59616852 26.43863106]
[116.14312744 39.27968979]
[108.20121765 52.96313477]
[122.32888794 57.79635620]
[134.27285767 66.75698090]
[142.86502075 78.96868134]
[147.26510620 93.23718262]
[147.04280090 108.16707611]
[142.21983337 122.29824829]
[133.26788330 134.24871826]
[121.06242371 142.84974670]
[106.79711914 147.26019287]
[106.57379150 162.25852966]
[106.35046387 177.25686646]
[106.12713623 192.25520325]
[112.95588684 178.89974976]
[122.55007935 167.36929321]
[134.44158936 158.22642517]
[148.05020142 151.91725159]
[162.71191406 148.74960327]
[177.71136475 148.87803650]
[192.31669617 152.29629517]
[205.81526184 158.83758545]
[217.54846191 168.18275452]
[226.94378662 179.87582397]
[233.54283142 193.34625244]
[237.02362061 207.93679810]
[237.21629333 222.93556213]
[234.11146545 237.61071777]
[227.86062622 251.24623108]
[218.76878357 263.17678833]
[207.27951050 272.82028198]
[193.95343018 279.70614624]
[179.44073486 283.49847412]
[164.44953918 284.01217651]
[149.71128845 281.22219849]
[135.94508362 275.26470947]
[123.82263947 266.43032837]
[113.93541718 255.15011597]
[106.76583862 241.97448730]
[102.66372681 227.54629517]
[101.82886505 212.57614136]
[95.95990753 226.38031006]
[90.09094238 240.18449402]
[84.22198486 253.98867798]
[78.35301971 267.79284668]
[72.48406219 281.59701538]
[66.61509705 295.40121460]
[67.24999237 300.58230591]
[65.96273804 305.04284668]
[63.34969330 308.17126465]
[60.16350174 309.68139648]
[53.68400574 323.20974731]
[47.20450974 336.73809814]
[53.11269379 348.84213257]
[51.00172043 361.94766235]
[41.86345673 371.30575562]
[29.19445610 373.65649414]
[22.51426125 387.08685303]
[15.83406734 400.51724243]
[9.96510696 414.32141113]
[4.92819023 428.45043945]
[7.58220577 444.04745483]
[-3.97957730 453.43759155]
[-3.91354489 462.57177734]
[-9.19809532 467.73852539]
[-14.44481373 481.79101562]
[-19.69153214 495.84347534]
[-24.93824959 509.89593506]
[-30.18496704 523.94842529]
[-35.43168640 538.00091553]
[-40.67840576 552.05334473]
[-27.75134468 559.74304199]
[-16.40521240 569.61749268]
[-7.00473404 581.35931396]
[0.14790092 594.59106445]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 206]
[30 205]
[31 204]
[32 203]
[33 202]
[34 201]
[35 200]
[36 198]
[38 196]
[39 195]
[48 194]
[49 193]
[50 192]
[53 188]
[54 187]
[55 186]
[56 182]
[57 181]
[58 180]
[59 179]
[60 178]
[61 177]
[62 176]
[63 149]
[64 148]
[65 147]
[66 146]
[75 137]
[77 135]
[78 134]
[79 133]
[80 132]
[82 131]
[83 130]
[84 129]
[86 127]
[87 126]
[88 123]
[90 121]
[91 120]
[92 119]
[93 118]
[95 117]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
