%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUAAGUCGGUAUUAAAUGCAGAGCUCACUACACCCGCUAACUACUUUUCCGCCAACUCCGCAGACCACUCAUCACGUACCGAUCCUUAUCAGGACACCAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[124.92579651 671.90350342]
[115.45830536 683.57025146]
[104.45921326 693.80578613]
[92.14260101 702.41082764]
[78.74822998 709.21795654]
[64.53681183 714.09460449]
[49.78498840 716.94592285]
[34.77989960 717.71630859]
[19.81363106 716.39080811]
[5.17750072 712.99523926]
[-8.84359360 707.59570312]
[-21.97672653 700.29730225]
[-33.96625900 691.24206543]
[-44.57881165 680.60626221]
[-53.60780716 668.59698486]
[-60.87749100 655.44793701]
[-66.24636078 641.41503906]
[-69.60990906 626.77154541]
[-70.90265656 611.80236816]
[-70.09945679 596.79901123]
[-67.21591949 582.05346680]
[-62.30819702 567.85278320]
[-55.47180557 554.47332764]
[-46.83982468 542.17553711]
[-36.58027267 531.19885254]
[-24.89285660 521.75689697]
[-12.00507641 514.03344727]
[1.83220291 508.17892456]
[16.34963608 504.30718994]
[31.26463509 502.49365234]
[46.28687668 502.77362061]
[61.12395096 505.14160156]
[65.52494812 490.80175781]
[69.92594910 476.46191406]
[74.32694244 462.12207031]
[78.72794342 447.78222656]
[83.12893677 433.44238281]
[87.52993774 419.10253906]
[91.93093872 404.76266479]
[94.04556274 389.91247559]
[93.82223511 374.91415405]
[93.59890747 359.91580200]
[93.37557983 344.91748047]
[93.15225220 329.91912842]
[92.92892456 314.92080688]
[79.42067719 310.68515015]
[67.86341095 302.47229004]
[59.39474869 291.07440186]
[54.85329437 277.59796143]
[54.69562149 263.35629272]
[58.95039368 249.74163818]
[67.21427155 238.08906555]
[78.69010162 229.54550171]
[92.26383209 224.95686340]
[92.26383209 209.95686340]
[92.26383209 194.95686340]
[92.26383209 179.95686340]
[92.26383209 164.95686340]
[92.26383209 149.95686340]
[92.26383209 134.95686340]
[89.12033081 128.26805115]
[92.37715912 119.73394012]
[92.60048676 104.73560333]
[90.67064667 102.37653351]
[89.55652618 99.26313019]
[89.53916931 95.69618225]
[90.78456116 92.07606506]
[93.31015778 88.85824585]
[94.42580414 73.89979553]
[95.54145050 58.94134140]
[94.98324585 43.95172882]
[92.75812531 29.11768723]
[90.53300476 14.28364277]
[80.64348602 6.00353384]
[79.09557343 -6.39758348]
[86.17786407 -16.20409966]
[84.17384338 -31.06962776]
[82.16983032 -45.93515396]
[80.16581726 -60.80068588]
[78.16180420 -75.66621399]
[76.15779114 -90.53173828]
[63.87351227 -100.10953522]
[62.05292130 -115.21384430]
[71.25959015 -126.86600494]
[69.25557709 -141.73153687]
[67.25156403 -156.59706116]
[65.24755096 -171.46258545]
[58.09563828 -158.27735901]
[45.36124420 -150.35049438]
[30.37310791 -149.75405884]
[17.04909134 -156.64393616]
[8.87205887 -169.21916199]
[7.97946930 -184.19258118]
[14.60464287 -197.65017700]
[27.01577568 -206.07418823]
[41.96862411 -207.26257324]
[55.55455399 -200.90469360]
[64.22192383 -188.66333008]
[64.44525146 -203.66166687]
[64.66857910 -218.66000366]
[51.19326401 -225.91772461]
[42.64391327 -238.61289978]
[40.98510361 -253.82824707]
[46.59801483 -268.06741333]
[58.19284439 -278.05831909]
[73.10518646 -281.50515747]
[87.90828705 -277.61587524]
[99.20051575 -267.28414917]
[104.38698578 -252.88418579]
[102.27589417 -237.72496033]
[93.35234833 -225.28997803]
[79.66691589 -218.43667603]
[79.44358826 -203.43833923]
[79.22026062 -188.44000244]
[80.11307526 -173.46659851]
[82.11708832 -158.60107422]
[84.12110138 -143.73554993]
[86.12511444 -128.87002563]
[98.08869171 -120.07180786]
[100.33280945 -105.02459717]
[91.02332306 -92.53575134]
[93.02733612 -77.67022705]
[95.03134918 -62.80469894]
[97.03536224 -47.93917084]
[99.03937531 -33.07364273]
[101.04338837 -18.20811272]
[112.50252533 -4.91694403]
[105.36705017 12.05852509]
[107.59217072 26.89256859]
[109.81728363 41.72661209]
[115.22457123 27.73514175]
[125.26699829 16.59289360]
[138.62330627 9.76582241]
[153.53625488 8.15214920]
[168.04379272 11.96417904]
[180.23718262 20.70037460]
[188.51219177 33.21133804]
[191.78010559 47.85103607]
[189.61094666 62.69336700]
[182.29013062 75.78556824]
[170.78083801 85.40512848]
[156.59729004 90.28643799]
[141.60560608 89.78726959]
[127.77817535 83.97330475]
[116.93424225 73.60945892]
[110.49990845 60.05698776]
[109.38425446 75.01544189]
[108.26860809 89.97389221]
[107.59882355 104.95893097]
[107.37549591 119.95727539]
[107.26383209 134.95686340]
[107.26383209 149.95686340]
[107.26383209 164.95686340]
[107.26383209 179.95686340]
[107.26383209 194.95686340]
[107.26383209 209.95686340]
[107.26383209 224.95686340]
[122.26385498 230.32705688]
[134.49755859 240.49179077]
[142.49757385 254.20791626]
[145.31248474 269.80783081]
[142.62005615 285.40209961]
[134.76393127 299.10842896]
[122.70990753 309.27874756]
[107.92726135 314.69747925]
[108.15058899 329.69580078]
[108.37391663 344.69415283]
[108.59724426 359.69247437]
[108.82057190 374.69082642]
[109.04389954 389.68914795]
[115.61285400 376.20401001]
[125.53508759 364.95462036]
[138.09431458 356.75302124]
[152.38385010 352.19134521]
[167.37214661 351.59887695]
[181.97717285 355.01843262]
[195.14459229 362.20306396]
[205.92381287 372.63418579]
[213.53669739 385.55874634]
[217.43363953 400.04370117]
[217.33334351 415.04336548]
[213.24304199 429.47491455]
[205.45800781 442.29650879]
[194.54025269 452.58255005]
[181.27793884 459.59048462]
[166.62849426 462.81439209]
[151.64945984 462.02154541]
[137.42219543 457.26919556]
[124.97377777 448.90039062]
[115.20285797 437.51931763]
[108.81482697 423.94754028]
[106.27078247 409.16366577]
[101.86978149 423.50350952]
[97.46878815 437.84338379]
[93.06778717 452.18322754]
[88.66679382 466.52307129]
[84.26579285 480.86291504]
[79.86479187 495.20275879]
[75.46379852 509.54260254]
[89.07480621 515.90551758]
[101.66776276 524.10083008]
[112.99754333 533.96911621]
[122.84361267 545.31817627]
[131.01431274 557.92712402]
[137.35060120 571.55053711]
[141.72912598 585.92321777]
[144.06468201 600.76544189]
[144.31178284 615.78826904]
[142.46563721 630.69927979]
[138.56217957 645.20819092]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 199]
[33 198]
[34 197]
[35 196]
[36 195]
[37 194]
[38 193]
[39 192]
[40 170]
[41 169]
[42 168]
[43 167]
[44 166]
[45 165]
[54 157]
[55 156]
[56 155]
[57 154]
[58 153]
[59 152]
[60 151]
[62 150]
[63 149]
[68 148]
[69 147]
[70 146]
[71 130]
[72 129]
[73 128]
[76 126]
[77 125]
[78 124]
[79 123]
[80 122]
[81 121]
[84 118]
[85 117]
[86 116]
[87 115]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
