%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[45.76676559 400.17797852]
[39.97173691 414.02203369]
[33.09510803 427.36190796]
[25.18035507 440.11325073]
[16.27751923 452.19543457]
[6.44288778 463.53210449]
[-4.26136112 474.05157471]
[-15.76755047 483.68731689]
[-28.00293350 492.37844849]
[-40.89015198 500.06997681]
[-54.34773254 506.71328735]
[-68.29058075 512.26641846]
[-82.63055420 516.69415283]
[-97.27699280 519.96862793]
[-112.13728333 522.06909180]
[-127.11747742 522.98223877]
[-142.12286377 522.70227051]
[-157.05857849 521.23107910]
[-171.83018494 518.57781982]
[-186.34429932 514.75933838]
[-200.50914001 509.79980469]
[-214.23518372 503.73049927]
[-227.43560791 496.58987427]
[-240.02697754 488.42303467]
[-251.92968750 479.28161621]
[-263.06848145 469.22338867]
[-273.37292480 458.31201172]
[-282.77786255 446.61642456]
[-291.22387695 434.21057129]
[-298.65753174 421.17288208]
[-305.03179932 407.58581543]
[-310.30645752 393.53524780]
[-314.44808960 379.11004639]
[-317.43054199 364.40136719]
[-319.23495483 349.50222778]
[-319.84991455 334.50683594]
[-319.27154541 319.50997925]
[-317.50347900 304.60647583]
[-314.55691528 289.89059448]
[-310.45046997 275.45529175]
[-305.21011353 261.39190674]
[-298.86898804 247.78933716]
[-291.46716309 234.73356628]
[-283.05145264 222.30714417]
[-273.67507935 210.58863831]
[-263.39727783 199.65214539]
[-252.28305054 189.56680298]
[-240.40267944 180.39637756]
[-227.83126831 172.19883728]
[-214.64828491 165.02601624]
[-200.93710327 158.92326355]
[-186.78439331 153.92918396]
[-172.27964783 150.07531738]
[-157.51455688 147.38606262]
[-142.58247375 145.87838745]
[-127.57781219 145.56185913]
[-112.59542847 146.43844604]
[-97.73005676 148.50263977]
[-83.07568359 151.74136353]
[-68.72495270 156.13414001]
[-54.76859283 161.65321350]
[-41.29484940 168.26368713]
[-28.38890648 175.92376709]
[-16.13235855 184.58500671]
[-4.60269928 194.19265747]
[5.88480186 183.46827698]
[16.37230301 172.74389648]
[16.55081558 160.64866638]
[25.20035553 151.62817383]
[38.07770920 150.89567566]
[41.65999222 136.43827820]
[56.90513611 132.20788574]
[67.55114746 121.64083862]
[78.19715118 111.07379150]
[88.84316254 100.50674438]
[99.41020966 89.86074066]
[109.89771271 79.13636017]
[110.53433228 66.25390625]
[119.49018097 57.53745270]
[131.58375549 57.26890564]
[142.22975159 46.70185471]
[152.87576294 36.13480759]
[163.52177429 25.56776047]
[174.16778564 15.00071335]
[184.81379700 4.43366528]
[195.45980835 -6.13338232]
[206.10580444 -16.70042992]
[201.72126770 -32.64306641]
[205.95069885 -48.53040314]
[217.54823303 -60.05056763]
[233.28173828 -64.12646484]
[248.83319092 -59.73729706]
[259.32067871 -70.46167755]
[269.80819702 -81.18605804]
[280.29568481 -91.91043854]
[290.78320312 -102.63481903]
[281.00708008 -114.02414703]
[272.26080322 -126.22219849]
[264.61099243 -139.13612366]
[258.11578369 -152.66763306]
[252.82466125 -166.71374512]
[248.77789307 -181.16757202]
[246.00627136 -195.91909790]
[244.53088379 -210.85604858]
[244.36296082 -225.86474609]
[245.50378418 -240.83097839]
[247.94467163 -255.64082336]
[251.66703796 -270.18157959]
[256.64257812 -284.34255981]
[262.83337402 -298.01599121]
[270.19238281 -311.09783936]
[278.66351318 -323.48852539]
[288.18237305 -335.09371948]
[298.67645264 -345.82516479]
[310.06591797 -355.60110474]
[322.26409912 -364.34719849]
[335.17813110 -371.99685669]
[348.70974731 -378.49185181]
[362.75592041 -383.78277588]
[377.20980835 -387.82934570]
[391.96136475 -390.60076904]
[406.89834595 -392.07595825]
[421.90704346 -392.24365234]
[436.87326050 -391.10263062]
[451.68307495 -388.66152954]
[466.22375488 -384.93896484]
[480.38467407 -379.96322632]
[494.05804443 -373.77221680]
[507.13977051 -366.41305542]
[519.53033447 -357.94171143]
[531.13543701 -348.42272949]
[541.86669922 -337.92846680]
[551.64245605 -326.53884888]
[560.38842773 -314.34057617]
[568.03790283 -301.42642212]
[574.53271484 -287.89474487]
[579.82342529 -273.84848022]
[583.86975098 -259.39453125]
[586.64099121 -244.64294434]
[588.11596680 -229.70594788]
[588.28344727 -214.69723511]
[587.14221191 -199.73104858]
[584.70092773 -184.92126465]
[580.97814941 -170.38063049]
[576.00219727 -156.21978760]
[569.81103516 -142.54650879]
[562.45166016 -129.46487427]
[553.98016357 -117.07442474]
[544.46099854 -105.46948242]
[533.96661377 -94.73835754]
[522.57684326 -84.96271515]
[510.37844849 -76.21697235]
[497.46420288 -68.56768036]
[483.93240356 -62.07305527]
[469.88607788 -56.78252792]
[455.43206787 -52.73636627]
[440.68041992 -49.96535873]
[425.74340820 -48.49059677]
[410.73471069 -48.32330704]
[395.76852417 -49.46475983]
[380.95880127 -51.90626907]
[366.41821289 -55.62925339]
[352.25741577 -60.60537720]
[338.58422852 -66.79676819]
[325.50271606 -74.15631104]
[313.11236572 -82.62798309]
[301.50756836 -92.14731598]
[291.02008057 -81.42293549]
[280.53256226 -70.69855499]
[270.04507446 -59.97417450]
[259.55755615 -49.24979401]
[264.09829712 -36.36962891]
[262.63952637 -22.72409058]
[255.40921021 -10.98221111]
[243.76985168 -3.46533918]
[229.96194458 -1.68829751]
[216.67285156 -6.05442142]
[206.02685547 4.51262665]
[195.38084412 15.07967377]
[184.73483276 25.64672279]
[174.08882141 36.21376801]
[163.44281006 46.78081894]
[152.79679871 57.34786606]
[142.15080261 67.91490936]
[138.46490479 85.07245636]
[120.62209320 89.62385559]
[110.13459015 100.34823608]
[107.19837952 107.85498047]
[99.41020966 111.15275574]
[88.76419830 121.71980286]
[78.11819458 132.28684998]
[67.47218323 142.85389709]
[63.12842941 158.06712341]
[48.64475632 161.54168701]
[44.22630692 179.41789246]
[27.09668350 183.23139954]
[16.60918236 193.95578003]
[6.12168026 204.68016052]
[15.98441696 215.99238586]
[24.91720963 228.05245972]
[32.86358261 240.78411865]
[39.77330017 254.10688782]
[45.60266876 267.93652344]
[50.31483459 282.18557739]
[53.88000870 296.76394653]
[56.27565002 311.57952881]
[57.48661041 326.53860474]
[57.50523376 341.54656982]
[56.33140182 356.50860596]
[53.97253799 371.33007812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 198]
[66 197]
[67 196]
[70 194]
[72 192]
[73 191]
[74 190]
[75 189]
[76 187]
[77 186]
[80 184]
[81 183]
[82 182]
[83 181]
[84 180]
[85 179]
[86 178]
[87 177]
[92 171]
[93 170]
[94 169]
[95 168]
[96 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
