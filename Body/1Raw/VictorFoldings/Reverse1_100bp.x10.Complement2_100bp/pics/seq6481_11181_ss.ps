%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[83.56649017 678.28143311]
[71.82704163 687.66455078]
[58.82017899 695.19311523]
[44.83648300 700.69891357]
[30.18835258 704.05895996]
[15.20303249 705.19818115]
[0.21530047 704.09118652]
[-14.44001198 700.76257324]
[-28.43549919 695.28680420]
[-41.45849609 687.78619385]
[-53.21806717 678.42828369]
[-63.45149612 667.42218018]
[-71.93016815 655.01373291]
[-78.46466064 641.48016357]
[-82.90899658 627.12377930]
[-85.16388702 612.26531982]
[-85.17894745 597.23675537]
[-82.95385742 582.37384033]
[-78.53831482 568.00860596]
[-72.03096771 554.46191406]
[-63.57719421 542.03649902]
[-53.36584854 531.00988770]
[-41.62506485 521.62841797]
[-28.61713028 514.10174561]
[-14.63265038 508.59793091]
[0.01595911 505.23995972]
[15.00144100 504.10287476]
[29.98901558 505.21203613]
[33.31127548 490.58459473]
[36.63353348 475.95712280]
[39.95579529 461.32965088]
[43.27805328 446.70220947]
[46.60031128 432.07473755]
[49.92257309 417.44729614]
[45.19632339 403.32241821]
[55.79797745 391.57867432]
[59.01124954 376.92687988]
[62.11536026 362.25158691]
[64.22998047 347.40139771]
[65.34563446 332.44293213]
[66.46128082 317.48449707]
[67.57692719 302.52603149]
[58.40828705 297.74160767]
[51.32758713 290.15145874]
[47.16011429 280.60293579]
[46.40397263 270.17376709]
[49.17066956 260.05023193]
[55.16953659 251.39239502]
[63.73804092 245.20111084]
[73.91489410 242.20236206]
[75.91890717 227.33683777]
[77.92292023 212.47129822]
[79.92693329 197.60577393]
[81.93094635 182.74024963]
[75.96338654 169.09336853]
[85.47503662 156.45062256]
[77.94456482 140.59947205]
[89.32051849 126.11951447]
[91.10298920 111.22579956]
[85.77754974 98.29786682]
[94.00329590 86.99173737]
[95.78575897 72.09801483]
[93.69829559 63.20530701]
[97.70724487 56.99643707]
[99.71125793 42.13090897]
[101.71527100 27.26537895]
[93.33553314 20.66205978]
[88.48972321 11.24796391]
[87.99260712 0.75242227]
[91.86693573 -8.92758369]
[99.35140228 -16.07028580]
[109.04921722 -19.43531799]
[111.71501160 -34.19653702]
[114.38080597 -48.95775223]
[117.04660034 -63.71897125]
[119.71239471 -78.48018646]
[113.01268768 -89.50183105]
[115.53691864 -101.74160004]
[125.39772797 -108.74810028]
[128.28300476 -123.46799469]
[121.74813080 -134.58816528]
[124.45431519 -146.78900146]
[134.41835022 -153.64790344]
[137.52246094 -168.32321167]
[140.62657166 -182.99851990]
[139.34078979 -192.04199219]
[143.88768005 -197.86845398]
[147.20994568 -212.49591064]
[150.53219604 -227.12336731]
[153.85446167 -241.75083923]
[157.17672729 -256.37829590]
[160.49897766 -271.00573730]
[158.91148376 -277.42379761]
[160.55657959 -282.86352539]
[164.14405823 -286.01617432]
[167.90036011 -300.53823853]
[171.65666199 -315.06027222]
[175.41296387 -329.58233643]
[161.82044983 -336.03524780]
[149.69494629 -344.94418335]
[139.47479248 -355.98706055]
[131.52944946 -368.76467896]
[126.14610291 -382.81515503]
[123.51938629 -397.63058472]
[123.74424744 -412.67538452]
[126.81255341 -427.40570068]
[132.61338806 -441.28903198]
[140.93705750 -453.82351685]
[151.48266602 -464.55603027]
[163.86898804 -473.09857178]
[177.64826965 -479.14239502]
[192.32240295 -482.46899414]
[207.36093140 -482.95809937]
[222.22021484 -480.59204102]
[236.36309814 -475.45635986]
[249.27833557 -467.73666382]
[260.49902344 -457.71209717]
[269.61956787 -445.74496460]
[276.31027222 -432.26788330]
[280.32922363 -417.76809692]
[281.53118896 -402.76968384]
[279.87271118 -387.81491089]
[275.41372681 -373.44430542]
[268.31542969 -360.17739868]
[258.83444214 -348.49377441]
[247.31344604 -338.81579590]
[234.16896057 -331.49328613]
[219.87614441 -326.79098511]
[204.95164490 -324.87887573]
[189.93501282 -325.82604980]
[186.17871094 -311.30398560]
[182.42240906 -296.78192139]
[178.66610718 -282.25985718]
[175.12643433 -267.68350220]
[171.80418396 -253.05603027]
[168.48191833 -238.42857361]
[165.15966797 -223.80111694]
[161.83740234 -209.17364502]
[158.51513672 -194.54618835]
[155.30186462 -179.89440918]
[152.19775391 -165.21910095]
[149.09364319 -150.54379272]
[155.42431641 -134.17646790]
[143.00289917 -120.58272552]
[140.11761475 -105.86283112]
[146.69126892 -89.59156799]
[134.47361755 -75.81439209]
[131.80781555 -61.05317307]
[129.14202881 -46.29195786]
[126.47622681 -31.53074074]
[123.81043243 -16.76952362]
[136.06280518 -1.62377489]
[133.18174744 17.95179939]
[116.58079529 29.26939201]
[114.57678223 44.13492203]
[112.57276917 59.00045013]
[110.67948151 73.88048553]
[108.89701080 88.77420044]
[114.22245026 101.70213318]
[105.99670410 113.00826263]
[104.21424103 127.90198517]
[111.55809021 138.50531006]
[109.76685333 150.87362671]
[100.34056091 158.45463562]
[106.16478729 173.16479492]
[96.79647064 184.74426270]
[94.79245758 199.60978699]
[92.78844452 214.47531128]
[90.78443146 229.34085083]
[88.78041840 244.20637512]
[103.94999695 257.23037720]
[108.14250183 276.63174438]
[99.82594299 294.49557495]
[82.53538513 303.64166260]
[81.41973877 318.60012817]
[80.30408478 333.55859375]
[79.18843842 348.51702881]
[89.35337067 337.48645020]
[103.84103394 333.59957886]
[118.16225433 338.06079102]
[127.87944794 349.48779297]
[129.98164368 364.33975220]
[123.81745148 378.01464844]
[111.29690552 386.27514648]
[96.29964447 386.56167603]
[83.47272491 378.78543091]
[76.79066467 365.35568237]
[73.68655396 380.03100586]
[74.97232819 389.07449341]
[70.42543793 394.90093994]
[74.91405487 410.07205200]
[64.55003357 420.76953125]
[61.22777176 435.39700317]
[57.90551376 450.02447510]
[54.58325577 464.65191650]
[51.26099396 479.27938843]
[47.93873596 493.90686035]
[44.61647415 508.53430176]
[58.61274338 514.00805664]
[71.63681030 521.50683594]
[83.39771271 530.86303711]
[93.63271332 541.86773682]
[102.11314392 554.27496338]
[108.64956665 567.80761719]
[113.09594727 582.16333008]
[115.35295105 597.02148438]
[115.37015533 612.05004883]
[113.14718628 626.91326904]
[108.73368835 641.27917480]
[102.22827148 654.82672119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 198]
[29 197]
[30 196]
[31 195]
[32 194]
[33 193]
[34 192]
[36 190]
[37 188]
[38 187]
[39 177]
[40 176]
[41 175]
[42 174]
[50 170]
[51 169]
[52 168]
[53 167]
[54 166]
[56 164]
[58 161]
[59 160]
[61 158]
[62 157]
[64 156]
[65 155]
[66 154]
[72 151]
[73 150]
[74 149]
[75 148]
[76 147]
[79 145]
[80 144]
[83 142]
[84 141]
[85 140]
[87 139]
[88 138]
[89 137]
[90 136]
[91 135]
[92 134]
[95 133]
[96 132]
[97 131]
[98 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
