%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[190.84030151 457.60028076]
[201.74343872 447.21688843]
[214.56736755 439.32760620]
[209.53045654 425.19857788]
[204.49353027 411.06954956]
[199.45661926 396.94052124]
[194.41970825 382.81149292]
[189.38278198 368.68246460]
[176.27980042 366.12243652]
[166.07090759 357.35186768]
[161.49241638 344.58053589]
[163.84089661 331.10824585]
[172.60829163 320.47229004]
[167.78230286 306.26983643]
[162.95629883 292.06738281]
[157.91938782 277.93832397]
[152.67266846 263.88586426]
[147.42594910 249.83338928]
[142.17922974 235.78092957]
[136.93251038 221.72845459]
[131.37329102 207.79666138]
[125.50432587 193.99247742]
[119.63536835 180.18830872]
[113.76640320 166.38412476]
[107.89744568 152.57994080]
[103.92352295 167.04397583]
[92.83200836 177.14239502]
[78.05971527 179.74612427]
[64.18400574 174.04833984]
[55.50441360 161.81459045]
[54.71041107 146.83561707]
[62.04802704 133.75282288]
[75.24362183 126.62006378]
[90.20838928 127.64748383]
[102.30550385 136.51695251]
[98.33340454 122.05242157]
[94.36131287 107.58789825]
[90.50821686 104.02873993]
[88.92353058 98.56411743]
[90.49315643 92.63341522]
[86.95348358 78.05704498]
[83.41381073 63.48066711]
[79.87413788 48.90428925]
[76.33446503 34.32791519]
[71.19251251 20.23677444]
[64.51231384 6.80639887]
[57.83211899 -6.62397718]
[51.15192413 -20.05435371]
[44.37193298 -33.43462753]
[37.49251938 -46.76405716]
[30.61310768 -60.09348679]
[23.89644814 -66.28414917]
[23.73217010 -73.67297363]
[17.05197525 -87.10335541]
[10.42822933 -93.39332581]
[10.37397861 -100.78378296]
[3.89448261 -114.31213379]
[-2.58501315 -127.84047699]
[-9.26520729 -141.27085876]
[-16.14462090 -154.60028076]
[-23.02403259 -167.92971802]
[-29.90344620 -181.25914001]
[-36.78285980 -194.58856201]
[-50.83657455 -189.29615784]
[-65.40968323 -185.67111206]
[-80.30509949 -183.76243591]
[-95.32138824 -183.59596252]
[-110.25545502 -185.17393494]
[-124.90534973 -188.47502136]
[-139.07295227 -193.45455933]
[-152.56663513 -200.04522705]
[-165.20393372 -208.15786743]
[-176.81394958 -217.68280029]
[-187.23965454 -228.49118042]
[-196.34004211 -240.43685913]
[-203.99208069 -253.35827637]
[-210.09223938 -267.08068848]
[-214.55804443 -281.41851807]
[-217.32910156 -296.17782593]
[-218.36793518 -311.15908813]
[-217.66049194 -326.15960693]
[-215.21633911 -340.97659302]
[-211.06852722 -355.40960693]
[-205.27316284 -369.26348877]
[-197.90859985 -382.35089111]
[-189.07446289 -394.49478149]
[-178.89021301 -405.53097534]
[-167.49356079 -415.31021118]
[-155.03866577 -423.70019531]
[-141.69393921 -430.58749390]
[-127.63987732 -435.87896729]
[-113.06652832 -439.50305176]
[-98.17098236 -441.41073608]
[-83.15468597 -441.57620239]
[-68.22071838 -439.99722290]
[-53.57104111 -436.69515991]
[-39.40378189 -431.71469116]
[-25.91053200 -425.12310791]
[-13.27377129 -417.00961304]
[-1.66439891 -407.48391724]
[8.76058102 -396.67483521]
[17.86018372 -384.72854614]
[25.51134682 -371.80661011]
[31.61059761 -358.08380127]
[36.07545090 -343.74569702]
[38.84552383 -328.98617554]
[39.88335419 -314.00488281]
[39.17490768 -299.00439453]
[36.72976303 -284.18759155]
[32.58098984 -269.75482178]
[26.78469658 -255.90132141]
[19.41926956 -242.81442261]
[10.58431816 -230.67111206]
[0.39932552 -219.63560486]
[-10.99796867 -209.85714722]
[-23.45342827 -201.46798706]
[-16.57401657 -188.13854980]
[-9.69460392 -174.80912781]
[-2.81519103 -161.47969055]
[4.06422138 -148.15026855]
[8.26085281 -145.87049866]
[11.06990337 -140.93023682]
[10.94333267 -134.31997681]
[17.42282867 -120.79162598]
[23.90232468 -107.26328278]
[30.48235130 -93.78354645]
[37.16254807 -80.35317230]
[43.94253922 -66.97290039]
[50.82194901 -53.64346695]
[57.70136261 -40.31404114]
[63.56243896 -35.81186676]
[64.58229828 -26.73454857]
[71.26249695 -13.30417156]
[77.94268799 0.12620406]
[84.62288666 13.55657959]
[85.46421051 -1.41980684]
[91.59237671 -15.11088562]
[102.20110321 -25.71535873]
[115.89463806 -31.83802795]
[130.87136841 -32.67334747]
[145.16082764 -28.11141777]
[156.88301086 -18.75243950]
[164.49565125 -5.82774782]
[166.99717712 8.96219254]
[164.05848694 23.67151070]
[156.06619263 36.36494446]
[144.07182312 45.37244797]
[129.65344238 49.50893784]
[114.70805359 48.23018265]
[101.20196533 41.70442581]
[90.91084290 30.78824234]
[94.45051575 45.36462021]
[97.99018860 59.94099426]
[101.52986145 74.51737213]
[105.06953430 89.09374237]
[108.82583618 103.61580658]
[112.79792786 118.08032990]
[116.77002716 132.54484558]
[121.70162201 146.71098328]
[127.57057953 160.51516724]
[133.43954468 174.31933594]
[139.30850220 188.12351990]
[145.17745972 201.92768860]
[149.34912109 205.06526184]
[151.66821289 209.08709717]
[152.10812378 213.13945007]
[150.98498535 216.48173523]
[156.23170471 230.53421021]
[161.47842407 244.58668518]
[166.72514343 258.63916016]
[171.97186279 272.69161987]
[176.82000732 277.18682861]
[178.42872620 282.63742065]
[177.15875244 287.24136353]
[181.98475647 301.44381714]
[186.81074524 315.64627075]
[203.03254700 320.43682861]
[213.10253906 333.81951904]
[213.21044922 350.40115356]
[203.51181030 363.64553833]
[208.54873657 377.77456665]
[213.58564758 391.90359497]
[218.62255859 406.03262329]
[223.65948486 420.16165161]
[228.69639587 434.29067993]
[243.61903381 432.28848267]
[258.63180542 433.43301392]
[273.07846069 437.67422485]
[286.32742310 444.82675171]
[297.79953003 454.57791138]
[306.99322510 466.50137329]
[313.50665283 480.07595825]
[317.05505371 494.70819092]
[317.48330688 509.75845337]
[314.77267456 524.56878662]
[309.04168701 538.49176025]
[300.54083252 550.91870117]
[289.64178467 561.30639648]
[276.82095337 569.20074463]
[262.63885498 574.25659180]
[247.71542358 576.25292969]
[232.70309448 575.10247803]
[218.25811768 570.85559082]
[205.01196289 563.69781494]
[193.54370117 553.94219971]
[184.35467529 542.01507568]
[177.84660339 528.43798828]
[174.30395508 513.80432129]
[173.88163757 498.75390625]
[176.59808350 483.94464111]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 185]
[4 184]
[5 183]
[6 182]
[7 181]
[8 180]
[13 176]
[14 175]
[15 174]
[16 171]
[17 170]
[18 169]
[19 168]
[20 167]
[21 163]
[22 162]
[23 161]
[24 160]
[25 159]
[35 158]
[36 157]
[37 156]
[40 155]
[41 154]
[42 153]
[43 152]
[44 151]
[45 135]
[46 134]
[47 133]
[48 132]
[49 130]
[50 129]
[51 128]
[53 127]
[54 126]
[56 125]
[57 124]
[58 123]
[59 120]
[60 119]
[61 118]
[62 117]
[63 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
