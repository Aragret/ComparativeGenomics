%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUCCAUCCUAACCACGACACCCACUUUCUCAUACUACCCCACCACCAACACCAUUUGAAAUUAUCACAUCCUUCGACUUAUUAAAUACUUCCUCUCCCxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[152.13253784 570.28039551]
[149.46675110 555.51916504]
[146.80094910 540.75793457]
[144.13514709 525.99670410]
[141.46936035 511.23550415]
[138.80355835 496.47430420]
[123.16372681 486.96057129]
[119.37973022 468.72338867]
[130.31198120 453.25082397]
[127.20787048 438.57553101]
[124.10375977 423.90023804]
[120.99964905 409.22491455]
[117.89553833 394.54962158]
[105.31072235 386.66558838]
[101.95365906 371.82696533]
[110.30848694 358.68029785]
[107.20437622 344.00500488]
[104.10026550 329.32971191]
[100.99615479 314.65438843]
[95.28491211 328.52456665]
[83.84152985 338.22244263]
[69.22247314 341.58151245]
[54.69368362 337.85131836]
[43.50093460 327.86520386]
[38.14470673 313.85412598]
[39.82159805 298.94815063]
[48.15699005 286.47732544]
[61.28873062 279.22766113]
[76.28315735 278.81878662]
[89.79047394 285.34201050]
[98.79312897 297.34002686]
[98.12333679 282.35501099]
[89.82545471 269.98590088]
[96.93882751 255.85401917]
[96.26904297 240.86897278]
[95.59925842 225.88394165]
[94.92947388 210.89889526]
[91.49043274 204.35711670]
[94.36295319 195.68611145]
[93.91634369 180.69276428]
[85.32989502 172.17222595]
[84.83511353 159.68467712]
[93.24223328 149.90290833]
[93.01890564 134.90457153]
[92.79557800 119.90622711]
[80.69376373 108.68508911]
[80.32521057 92.18563843]
[91.91390228 80.43531799]
[91.46729279 65.44197083]
[83.99896240 78.45058441]
[71.93344879 87.36256409]
[57.30400848 90.67608643]
[42.57595444 87.83277130]
[30.23122787 79.31175232]
[22.35012817 66.54898071]
[20.26076126 51.69521332]
[24.31521988 37.25355911]
[33.83025742 25.65769577]
[47.20242691 18.86172867]
[62.17827606 18.01090050]
[76.23411560 23.24858856]
[87.00128937 33.69215012]
[92.66563416 47.58329391]
[95.11135864 32.78402328]
[97.55709076 17.98475075]
[100.00281525 3.18548083]
[102.44854736 -11.61378956]
[97.06488037 -26.49084473]
[106.77380371 -37.78624725]
[99.89186096 -54.86606979]
[111.54761505 -67.98515320]
[113.77272797 -82.81919861]
[115.99784851 -97.65324402]
[118.22296906 -112.48728943]
[112.61840057 -127.28253937]
[122.15807343 -138.72123718]
[124.38319397 -153.55528259]
[112.48229218 -163.16339111]
[107.02453613 -177.34471130]
[109.38222504 -192.25469971]
[118.82324982 -203.90472412]
[132.73429871 -209.22903442]
[134.95941162 -224.06307983]
[137.18452454 -238.89712524]
[139.40965271 -253.73117065]
[141.63476562 -268.56521606]
[143.85987854 -283.39926147]
[146.08500671 -298.23330688]
[148.31011963 -313.06735229]
[149.64834595 -328.00753784]
[150.09495544 -343.00088501]
[140.99282837 -359.00814819]
[150.79136658 -373.56686401]
[151.01469421 -388.56518555]
[151.23802185 -403.56353760]
[151.46134949 -418.56185913]
[151.68467712 -433.56021118]
[137.43078613 -438.66952515]
[125.60974121 -448.13217163]
[117.50382996 -460.92172241]
[113.99230957 -475.65087891]
[115.45608521 -490.72192383]
[121.73637390 -504.50003052]
[132.15193176 -515.49072266]
[145.57298279 -522.50170898]
[160.54368591 -524.77258301]
[175.44012451 -522.05700684]
[188.64646912 -514.64947510]
[198.73019409 -503.35357666]
[204.59747314 -489.39459229]
[205.61187744 -474.28665161]
[201.66336060 -459.66857910]
[193.18025208 -447.12603760]
[181.08271790 -438.01953125]
[166.68301392 -433.33688354]
[166.45968628 -418.33853149]
[166.23635864 -403.34020996]
[166.01303101 -388.34185791]
[165.78970337 -373.34353638]
[173.98713684 -364.44808960]
[173.92382812 -351.95089722]
[165.08830261 -342.55426025]
[164.64170837 -327.56091309]
[174.84854126 -338.55276489]
[189.54420471 -341.55899048]
[203.24757385 -335.45837402]
[210.84764099 -322.52630615]
[209.50976562 -307.58609009]
[199.73292542 -296.21008301]
[185.16366577 -292.64123535]
[171.23594666 -298.21066284]
[163.14416504 -310.84222412]
[160.91903687 -296.00817871]
[158.69392395 -281.17413330]
[156.46881104 -266.34008789]
[154.24369812 -251.50605774]
[152.01856995 -236.67201233]
[149.79345703 -221.83796692]
[147.56834412 -207.00392151]
[159.30500793 -197.83242798]
[164.91241455 -183.92512512]
[162.79174805 -168.97958374]
[153.41339111 -157.02369690]
[139.21723938 -151.33016968]
[136.99212646 -136.49612427]
[142.75584412 -122.76190186]
[133.05700684 -110.26216888]
[130.83189392 -95.42812347]
[128.60678101 -80.59408569]
[126.38166046 -65.76004028]
[133.31715393 -55.84916687]
[131.58477783 -43.47246933]
[121.57307434 -35.34051895]
[127.13167572 -21.52200699]
[117.24781799 -9.16806221]
[114.80208588 5.63120842]
[112.35636139 20.43047905]
[109.91063690 35.22975159]
[107.46490479 50.02902222]
[106.46064758 64.99536133]
[106.90724945 79.98871613]
[117.10102081 87.52135468]
[121.16455078 99.52724457]
[117.64116669 111.70259857]
[107.79391479 119.68289948]
[108.01724243 134.68124390]
[108.24057007 149.67958069]
[118.04837799 165.26445007]
[108.90969086 180.24615479]
[109.35630035 195.23950195]
[109.91451263 210.22911072]
[110.58429718 225.21415710]
[111.25408173 240.19918823]
[111.92386627 255.18423462]
[120.26966095 268.62515259]
[113.10837555 281.68521118]
[113.77816772 296.67025757]
[115.67145538 311.55029297]
[118.77556610 326.22558594]
[121.87967682 340.90090942]
[124.98378754 355.57620239]
[137.94641113 364.21380615]
[140.88536072 379.14086914]
[132.57084656 391.44552612]
[135.67495728 406.12081909]
[138.77906799 420.79611206]
[141.88316345 435.47140503]
[144.98727417 450.14672852]
[156.02305603 454.56808472]
[163.47795105 463.67440796]
[165.58947754 475.13021851]
[161.94686890 486.06854248]
[153.56477356 493.80850220]
[156.23057556 508.56973267]
[158.89637756 523.33093262]
[161.56216431 538.09216309]
[164.22796631 552.85339355]
[166.89375305 567.61456299]
[181.69540405 571.19665527]
[193.75645447 580.49456787]
[200.98727417 593.89733887]
[202.13507080 609.08294678]
[197.00099182 623.42034912]
[186.47453308 634.42547607]
[172.37947083 640.19171143]
[157.15786743 639.71990967]
[143.44694519 633.09191895]
[133.62222290 621.45599365]
[129.38586426 606.82818604]
[131.47187805 591.74279785]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 198]
[2 197]
[3 196]
[4 195]
[5 194]
[6 193]
[9 188]
[10 187]
[11 186]
[12 185]
[13 184]
[16 181]
[17 180]
[18 179]
[19 178]
[31 177]
[32 176]
[34 174]
[35 173]
[36 172]
[37 171]
[39 170]
[40 169]
[43 167]
[44 166]
[45 165]
[48 161]
[49 160]
[63 159]
[64 158]
[65 157]
[66 156]
[67 155]
[69 153]
[71 150]
[72 149]
[73 148]
[74 147]
[76 145]
[77 144]
[82 139]
[83 138]
[84 137]
[85 136]
[86 135]
[87 134]
[88 133]
[89 132]
[90 123]
[91 122]
[93 119]
[94 118]
[95 117]
[96 116]
[97 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
