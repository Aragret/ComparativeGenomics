%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[43.24650574 743.65423584]
[28.52769852 746.57183838]
[13.65220261 748.54040527]
[-1.31885731 749.55187988]
[-16.32396126 749.60205078]
[-31.30145073 748.69073486]
[-46.18977737 746.82165527]
[-60.92776108 744.00250244]
[-75.45484161 740.24493408]
[-89.71132660 735.56427002]
[-103.63862610 729.97985840]
[-117.17951965 723.51458740]
[-130.27835083 716.19500732]
[-142.88130188 708.05120850]
[-154.93658447 699.11663818]
[-166.39465332 689.42810059]
[-177.20843506 679.02532959]
[-187.33348083 667.95104980]
[-196.72819519 656.25085449]
[-205.35397339 643.97277832]
[-213.17535400 631.16723633]
[-220.16021729 617.88690186]
[-226.27986145 604.18634033]
[-231.50910950 590.12182617]
[-235.82650757 575.75115967]
[-239.21429443 561.13342285]
[-241.65856934 546.32861328]
[-243.14926147 531.39764404]
[-243.68025208 516.40185547]
[-243.24937439 501.40289307]
[-241.85838318 486.46231079]
[-239.51301575 471.64154053]
[-236.22286987 457.00149536]
[-232.00151062 442.60235596]
[-226.86625671 428.50323486]
[-220.83821106 414.76211548]
[-213.94216919 401.43545532]
[-206.20643616 388.57800293]
[-197.66281128 376.24258423]
[-188.34642029 364.47991943]
[-178.29551697 353.33831787]
[-167.55142212 342.86358643]
[-156.15827942 333.09875488]
[-144.16291809 324.08395386]
[-131.61460876 315.85620117]
[-118.56492615 308.44934082]
[-105.06750488 301.89379883]
[-91.17778778 296.21652222]
[-76.95287323 291.44082642]
[-62.45119476 287.58633423]
[-47.73235703 284.66888428]
[-32.85684204 282.70046997]
[-17.88576889 281.68917847]
[-2.88066411 281.63919067]
[12.09681416 282.55068970]
[26.98512077 284.41989136]
[41.72307587 287.23919678]
[45.47937393 272.71713257]
[49.23567581 258.19506836]
[52.99197769 243.67300415]
[47.12518692 233.09437561]
[50.13577652 220.96507263]
[60.93915558 213.91882324]
[56.84832764 199.59700012]
[67.96379089 188.33836365]
[63.87296677 174.01654053]
[74.98843384 162.75790405]
[78.96052551 148.29338074]
[82.93262482 133.82885742]
[78.84179688 119.50704193]
[89.95726013 108.24839783]
[93.49693298 93.67201996]
[96.60104370 78.99671936]
[91.88704681 63.89411163]
[102.09065247 53.04350281]
[97.37665558 37.94089508]
[107.58026123 27.09028435]
[110.68437195 12.41498280]
[113.78847504 -2.26031947]
[116.89258575 -16.93562126]
[110.52400208 -28.15185547]
[113.41154480 -40.31104660]
[123.47658539 -47.02084732]
[126.79885101 -61.64830399]
[130.12110901 -76.27576447]
[133.44337463 -90.90322876]
[126.11846161 -97.26530457]
[121.64069366 -105.80695343]
[120.58785248 -115.33525085]
[123.06263733 -124.53664398]
[128.68438721 -132.15808105]
[136.64688110 -137.17759705]
[145.83381653 -138.94132996]
[150.02082825 -153.34510803]
[154.20783997 -167.74890137]
[158.39485168 -182.15267944]
[162.58186340 -196.55645752]
[166.33816528 -211.07852173]
[169.66041565 -225.70597839]
[172.98268127 -240.33343506]
[159.44975281 -246.96340942]
[147.81095886 -256.53604126]
[138.69396973 -268.53509521]
[132.59045410 -282.31347656]
[129.82955933 -297.12814331]
[130.56019592 -312.18014526]
[134.74295044 -326.65774536]
[142.15225220 -339.78021240]
[152.38851929 -350.83984375]
[164.89973450 -359.24020386]
[179.01116943 -364.52832031]
[193.96183777 -366.41894531]
[208.94544983 -364.81015015]
[223.15394592 -359.78866577]
[235.82110596 -351.62536621]
[246.26379395 -340.76040649]
[253.91885376 -327.77978516]
[258.37344360 -313.38348389]
[259.38735962 -298.34790039]
[256.90588379 -283.48388672]
[251.06288147 -269.59301758]
[242.17343140 -257.42443848]
[230.71694946 -247.63438416]
[217.31123352 -240.75079346]
[202.67927551 -237.14489746]
[187.61013794 -237.01118469]
[184.28788757 -222.38372803]
[180.96562195 -207.75625610]
[182.34370422 -205.31515503]
[182.83787537 -202.18107605]
[182.17935181 -198.68798828]
[180.22506714 -195.26083374]
[176.98564148 -192.36944580]
[172.79862976 -177.96566772]
[168.61161804 -163.56188965]
[164.42460632 -149.15809631]
[160.23759460 -134.75431824]
[171.55238342 -117.73177338]
[166.55320740 -97.60955811]
[148.07083130 -87.58096313]
[144.74856567 -72.95350647]
[141.42631531 -58.32604599]
[138.10404968 -43.69858551]
[144.19032288 -27.23881149]
[131.56788635 -13.83151150]
[128.46377563 0.84379059]
[125.35967255 15.51909256]
[122.25556183 30.19439507]
[127.19158173 44.24732971]
[116.76595306 56.14761353]
[121.70198059 70.20054626]
[111.27634430 82.10083008]
[108.17223358 96.77613068]
[109.61226654 99.46236420]
[110.10671234 102.73192596]
[109.43763733 106.23560333]
[107.51916504 109.54856873]
[104.42178345 112.22049713]
[108.22850037 127.57691193]
[97.39714813 137.80094910]
[93.42504883 152.26547241]
[89.45295715 166.72999573]
[93.25967407 182.08641052]
[82.42832184 192.31045532]
[86.23503113 207.66687012]
[75.40367889 217.89091492]
[80.47138214 235.59402466]
[67.51403809 247.42930603]
[63.75773621 261.95138550]
[60.00143433 276.47341919]
[56.24513245 290.99548340]
[70.50167084 295.67596436]
[84.42903137 301.26025391]
[97.96999359 307.72540283]
[111.06890869 315.04483032]
[123.67194366 323.18847656]
[135.72732544 332.12286377]
[147.18550110 341.81130981]
[157.99940491 352.21398926]
[168.12457275 363.28811646]
[177.51942444 374.98822021]
[186.14532471 387.26623535]
[193.96685791 400.07165527]
[200.95187378 413.35192871]
[207.07165527 427.05242920]
[212.30107117 441.11688232]
[216.61862183 455.48748779]
[220.00657654 470.10519409]
[222.45100403 484.90994263]
[223.94186401 499.84088135]
[224.47302246 514.83666992]
[224.04231262 529.83569336]
[222.65148926 544.77624512]
[220.30627441 559.59704590]
[217.01631165 574.23712158]
[212.79510498 588.63635254]
[207.66000366 602.73547363]
[201.63211060 616.47668457]
[194.73620605 629.80340576]
[187.00062561 642.66094971]
[178.45713806 654.99645996]
[169.14086914 666.75921631]
[159.09008789 677.90093994]
[148.34611511 688.37579346]
[136.95307922 698.14074707]
[124.95781708 707.15570068]
[112.40959930 715.38360596]
[99.36000824 722.79058838]
[85.86264801 729.34631348]
[71.97299957 735.02374268]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 171]
[58 170]
[59 169]
[60 168]
[63 166]
[65 164]
[67 162]
[68 161]
[69 160]
[71 158]
[72 153]
[73 152]
[75 150]
[77 148]
[78 147]
[79 146]
[80 145]
[83 143]
[84 142]
[85 141]
[86 140]
[93 137]
[94 136]
[95 135]
[96 134]
[97 133]
[98 128]
[99 127]
[100 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
