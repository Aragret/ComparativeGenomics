%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxGGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[53.26019669 719.82501221]
[38.97024918 724.47845459]
[24.14632034 726.95007324]
[9.11958981 727.18457031]
[-5.77424431 725.17675781]
[-20.20244598 720.97143555]
[-33.84268570 714.66259766]
[-46.39023209 706.39117432]
[-57.56477356 696.34191895]
[-67.11666107 684.73937988]
[-74.83250427 671.84271240]
[-80.53993225 657.94012451]
[-84.11142731 643.34210205]
[-85.46721649 628.37481689]
[-84.57700348 613.37261963]
[-81.46067047 598.67071533]
[-76.18785095 584.59753418]
[-68.87632751 571.46740723]
[-59.68944931 559.57379150]
[-48.83245468 549.18231201]
[-36.54788971 540.52508545]
[-23.11020279 533.79559326]
[-8.81958866 529.14410400]
[6.00468969 526.67462158]
[21.03145409 526.44226074]
[23.03546906 511.57672119]
[25.03948212 496.71121216]
[27.04349518 481.84567261]
[24.91166878 477.57199097]
[25.44190979 471.91372681]
[29.33486938 466.56991577]
[23.77627182 452.75140381]
[33.66012955 440.39746094]
[36.10585785 425.59817505]
[38.55158615 410.79891968]
[40.99731064 395.99963379]
[43.44303894 381.20037842]
[45.88876724 366.40109253]
[34.15946960 358.99221802]
[26.11453056 347.63653564]
[22.99550819 334.02954102]
[25.30549431 320.21813965]
[32.72829437 308.29306030]
[44.17124939 300.07217407]
[57.92597961 296.82345581]
[60.59177399 282.06225586]
[63.25757217 267.30102539]
[65.92336273 252.53981018]
[59.10819244 236.36822510]
[71.11936951 222.41067505]
[73.56509399 207.61140442]
[68.00650024 193.79289246]
[77.89035797 181.43894958]
[71.10318756 171.42591858]
[73.01964569 159.07638550]
[83.15130615 151.09439087]
[85.81710052 136.33317566]
[88.48290253 121.57196045]
[91.14869690 106.81073761]
[93.70452881 92.03009033]
[96.15025330 77.23081970]
[98.04354858 62.35078049]
[91.56829071 47.91535187]
[100.41020966 35.92911911]
[101.74844360 20.98893547]
[95.27318573 6.55350494]
[104.11510468 -5.43272686]
[105.45333862 -20.37291145]
[106.79157257 -35.31309891]
[98.65835571 -51.83375931]
[109.30606842 -65.78342438]
[110.42171478 -80.74187469]
[98.37848663 -71.79980469]
[83.52011108 -73.85614777]
[74.35813141 -85.73294067]
[76.14095306 -100.62661743]
[87.84729767 -110.00540161]
[102.77123260 -108.49669647]
[112.36336517 -96.96567535]
[114.80908966 -111.76494598]
[117.25482178 -126.56421661]
[119.70054626 -141.36347961]
[108.97494507 -152.42095947]
[106.84186554 -167.49754333]
[113.91181183 -180.78210449]
[127.28846741 -187.27850342]
[129.73419189 -202.07777405]
[132.17991638 -216.87704468]
[134.62564087 -231.67631531]
[137.07138062 -246.47558594]
[139.51710510 -261.27487183]
[125.23543549 -265.95828247]
[111.83612061 -272.76702881]
[99.63325500 -281.54144287]
[88.91288757 -292.07586670]
[79.92631531 -304.12335205]
[72.88420868 -317.40148926]
[67.95163727 -331.59902954]
[65.24422455 -346.38317871]
[64.82543945 -361.40731812]
[66.70510101 -376.31930542]
[70.83914948 -390.76956177]
[77.13066864 -404.41937256]
[85.43218231 -416.94876099]
[95.54908752 -428.06399536]
[107.24423218 -437.50454712]
[120.24346924 -445.04910278]
[134.24206543 -450.52081299]
[148.91188049 -453.79141235]
[163.90904236 -454.78424072]
[178.88198853 -453.47601318]
[193.47972107 -449.89736938]
[207.36006165 -444.13226318]
[220.19763184 -436.31579590]
[231.69149780 -426.63119507]
[241.57223511 -415.30548096]
[249.60821533 -402.60418701]
[255.61106873 -388.82498169]
[259.44006348 -374.29092407]
[261.00549316 -359.34268188]
[260.27059937 -344.33065796]
[257.25262451 -329.60681152]
[252.02235413 -315.51620483]
[244.70234680 -302.38922119]
[235.46421814 -290.53353882]
[224.52452087 -280.22705078]
[212.13967896 -271.71139526]
[198.60003662 -265.18618774]
[184.22297668 -260.80438232]
[169.34550476 -258.66867065]
[154.31637573 -258.82913208]
[151.87065125 -244.02986145]
[149.42491150 -229.23059082]
[146.97918701 -214.43132019]
[144.53346252 -199.63204956]
[142.08773804 -184.83277893]
[152.66304016 -174.37808228]
[155.08300781 -159.52520752]
[148.21270752 -145.93652344]
[134.49981689 -138.91775513]
[132.05409241 -124.11848450]
[129.60836792 -109.31921387]
[127.16263580 -94.51994324]
[125.38017273 -79.62622833]
[124.26451874 -64.66777802]
[131.91795349 -55.30018997]
[131.11090088 -42.82892609]
[121.73175812 -33.97486115]
[120.39352417 -19.03467751]
[119.05529022 -4.09449291]
[125.62626648 9.27231503]
[116.68862915 22.32716942]
[115.35039520 37.26735306]
[121.92137146 50.63416290]
[112.98373413 63.68901443]
[125.99253845 56.22101974]
[139.99754333 61.59316254]
[144.67477417 75.84529877]
[136.57635498 88.47129059]
[121.67213440 90.16371918]
[110.94952393 79.67654419]
[108.50379944 94.47581482]
[110.40104675 102.30990601]
[105.90991211 109.47653961]
[103.24411774 124.23775482]
[100.57832336 138.99897766]
[97.91252899 153.76019287]
[104.53941345 170.94058228]
[92.68962860 183.88467407]
[98.07328796 198.76173401]
[88.36436462 210.05712891]
[85.91864014 224.85639954]
[92.78170776 235.77708435]
[90.43997955 248.05307007]
[80.68458557 255.20561218]
[78.01879120 269.96682739]
[75.35298920 284.72805786]
[72.68719482 299.48925781]
[85.93489075 308.93554688]
[93.70906830 323.16250610]
[94.49784088 339.29748535]
[88.19400787 354.10781860]
[76.10628510 364.64825439]
[60.68803787 368.84683228]
[58.24230957 383.64611816]
[55.79658127 398.44537354]
[53.35085678 413.24465942]
[50.90512848 428.04391479]
[48.45940018 442.84320068]
[53.84306335 457.72024536]
[44.13414001 469.01565552]
[41.90902328 483.84970093]
[39.90501022 498.71520996]
[37.90099716 513.58074951]
[35.89698410 528.44628906]
[50.32578278 532.64953613]
[63.96691895 538.95642090]
[76.51564789 547.22607422]
[87.69161987 557.27374268]
[97.24515533 568.87493896]
[104.96283722 581.77044678]
[110.67224121 595.67230225]
[114.24582672 610.26977539]
[115.60374451 625.23687744]
[114.71566772 640.23919678]
[111.60142517 654.94152832]
[106.33061218 669.01550293]
[99.02095795 682.14660645]
[89.83577728 694.04156494]
[78.98025513 704.43463135]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 195]
[26 194]
[27 193]
[28 192]
[31 191]
[33 189]
[34 188]
[35 187]
[36 186]
[37 185]
[38 184]
[45 178]
[46 177]
[47 176]
[48 175]
[50 172]
[51 171]
[53 169]
[56 167]
[57 166]
[58 165]
[59 164]
[60 162]
[61 161]
[62 155]
[64 153]
[65 152]
[67 150]
[68 149]
[69 148]
[71 145]
[72 144]
[79 143]
[80 142]
[81 141]
[82 140]
[86 136]
[87 135]
[88 134]
[89 133]
[90 132]
[91 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
