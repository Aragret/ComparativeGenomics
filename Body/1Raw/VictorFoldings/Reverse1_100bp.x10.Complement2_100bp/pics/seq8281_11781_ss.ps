%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[11.57975006 483.44299316]
[3.73069000 470.24118042]
[3.55015755 454.88336182]
[11.08671379 441.50070190]
[24.31306458 433.69305420]
[24.08973694 418.69470215]
[23.86640930 403.69638062]
[23.64308167 388.69802856]
[15.71714783 376.08737183]
[23.24812698 362.17352295]
[23.02479935 347.17520142]
[22.80147171 332.17684937]
[22.57814407 317.17852783]
[13.43784332 329.07202148]
[-0.64527202 334.23590088]
[-15.30739594 331.07012939]
[-26.00531006 320.55563354]
[-29.42414856 305.95043945]
[-24.50454903 291.78015137]
[-12.77090073 282.43554688]
[2.14099717 280.81219482]
[15.61052990 287.41305542]
[23.46408653 300.19308472]
[25.24655151 285.29937744]
[27.02901840 270.40567017]
[28.81148338 255.51194763]
[30.59395027 240.61822510]
[32.37641525 225.72450256]
[26.20633316 212.16798401]
[35.52869797 199.38502502]
[27.33366013 211.94851685]
[16.80699730 222.63446045]
[4.36798286 231.01722717]
[-9.48794174 236.76295471]
[-24.20889854 239.64279175]
[-39.20856094 239.54200745]
[-53.88949585 236.46464539]
[-67.66696930 230.53326416]
[-79.99222565 221.98411560]
[-90.37435913 211.15769958]
[-98.39984894 198.48522949]
[-103.74904633 184.47143555]
[-106.20889282 169.67451477]
[-105.68141937 154.68379211]
[-102.18762207 140.09634399]
[-95.86667633 126.49320221]
[-86.97032928 114.41616058]
[-75.85292053 104.34624481]
[-62.95725250 96.68453217]
[-48.79695892 91.73619080]
[-33.93603516 89.69831085]
[-18.96638680 90.65206146]
[-4.48424959 94.55945587]
[8.93355846 101.26485443]
[20.75261116 110.50119781]
[30.50216103 121.90059662]
[37.79388809 135.00901794]
[42.33736420 149.30436707]
[43.95162201 164.21723938]
[42.57316971 179.14959717]
[50.42492294 166.36875916]
[58.27667999 153.58792114]
[66.12843323 140.80706787]
[73.98018646 128.02622986]
[81.83194733 115.24538422]
[89.68370056 102.46454620]
[96.85906982 89.29206848]
[103.33856201 75.76372528]
[109.81806183 62.23537827]
[116.29755402 48.70703125]
[122.57491302 35.08371353]
[128.64874268 21.36844826]
[134.72257996 7.65318203]
[140.79641724 -6.06208467]
[146.66537476 -19.86626244]
[151.80734253 -33.95740128]
[156.42134094 -48.23013687]
[161.03535461 -62.50286865]
[165.64936829 -76.77560425]
[158.17703247 -87.98179626]
[158.51817322 -101.25184631]
[166.32426453 -111.74694061]
[178.56562805 -115.76918793]
[183.39163208 -129.97164917]
[188.21762085 -144.17410278]
[193.04362488 -158.37655640]
[197.86962891 -172.57901001]
[202.69561768 -186.78146362]
[207.52162170 -200.98391724]
[200.21694946 -212.30012512]
[200.75563049 -225.56362915]
[208.71711731 -235.94134521]
[221.01701355 -239.78088379]
[226.05392456 -253.90991211]
[231.09083557 -268.03894043]
[236.12776184 -282.16796875]
[241.16467285 -296.29699707]
[227.94268799 -303.44400024]
[215.96672058 -312.52566528]
[205.51750183 -323.32910156]
[196.83996582 -335.60104370]
[190.13752747 -349.05386353]
[185.56730652 -363.37216187]
[183.23643494 -378.22030640]
[183.19955444 -393.25024414]
[185.45751953 -408.10964966]
[189.95742798 -422.45019531]
[196.59375000 -435.93572998]
[205.21095276 -448.25012207]
[215.60704041 -459.10470581]
[227.53829956 -468.24502563]
[240.72503662 -475.45684814]
[254.85815430 -480.57107544]
[269.60635376 -483.46786499]
[284.62390137 -484.07928467]
[299.55874634 -482.39099121]
[314.06085205 -478.44259644]
[327.79022217 -472.32666016]
[340.42501831 -464.18649292]
[351.66909790 -454.21298218]
[361.25885010 -442.63986206]
[368.96948242 -429.73843384]
[374.62026978 -415.81115723]
[378.07873535 -401.18447876]
[379.26379395 -386.20129395]
[378.14767456 -371.21279907]
[374.75656128 -356.57037354]
[369.16992188 -342.61724854]
[361.51873779 -329.68051147]
[351.98233032 -318.06338501]
[340.78427124 -308.03820801]
[328.18704224 -299.83999634]
[314.48596191 -293.66094971]
[300.00219727 -289.64587402]
[285.07525635 -287.88888550]
[270.05505371 -288.43121338]
[255.29370117 -291.26010132]
[250.25679016 -277.13107300]
[245.21986389 -263.00204468]
[240.18295288 -248.87300110]
[235.14604187 -234.74397278]
[242.99693298 -219.87109375]
[237.55479431 -203.60154724]
[221.72407532 -196.15792847]
[216.89807129 -181.95547485]
[212.07208252 -167.75302124]
[207.24607849 -153.55056763]
[202.42007446 -139.34809875]
[197.59408569 -125.14564514]
[192.76808167 -110.94319153]
[200.83953857 -96.18885803]
[195.64024353 -79.84008789]
[179.92210388 -72.16159058]
[175.30809021 -57.88885880]
[170.69407654 -43.61612701]
[166.08007812 -29.34339333]
[180.41983032 -33.74467468]
[192.88716125 -25.40406990]
[194.29161072 -10.46996403]
[183.59786987 0.04877681]
[168.68896484 -1.60187185]
[160.55540466 -14.20347500]
[161.54908752 -9.53211212]
[159.61880493 -4.18692589]
[154.51168823 0.01174909]
[148.43785095 13.72701550]
[142.36401367 27.44228172]
[136.29017639 41.15755081]
[137.14434814 45.85642624]
[135.05577087 51.14177322]
[129.82589722 55.18652725]
[123.34640503 68.71487427]
[116.86690521 82.24321747]
[110.38741302 95.77156067]
[124.50568390 90.70457458]
[138.62095642 95.77991486]
[146.27992249 108.67721558]
[143.98098755 123.50000000]
[132.77522278 133.47149658]
[117.78572083 134.03285217]
[105.86550903 124.92745209]
[102.46454620 110.31629944]
[94.61278534 123.09714508]
[86.76103210 135.87799072]
[78.90927887 148.65882874]
[71.05751801 161.43966675]
[63.20576477 174.22050476]
[55.35401154 187.00135803]
[50.42241669 201.16749573]
[56.46500397 215.78930664]
[47.27013397 227.50697327]
[45.48766708 242.40069580]
[43.70520020 257.29440308]
[41.92273331 272.18811035]
[40.14027023 287.08184814]
[38.35780334 301.97555542]
[37.57648087 316.95520020]
[37.79980850 331.95352173]
[38.02313614 346.95187378]
[38.24646378 361.95019531]
[46.18836975 375.63366699]
[38.64141846 388.47470093]
[38.86474609 403.47305298]
[39.08807373 418.47137451]
[39.31140137 433.46972656]
[52.76435089 440.88009644]
[60.69601822 454.03244019]
[60.97282410 469.38885498]
[53.52031326 482.81851196]
[40.34317017 490.70889282]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 205]
[6 204]
[7 203]
[8 202]
[10 200]
[11 199]
[12 198]
[13 197]
[23 196]
[24 195]
[25 194]
[26 193]
[27 192]
[28 191]
[30 189]
[60 188]
[61 187]
[62 186]
[63 185]
[64 184]
[65 183]
[66 182]
[67 174]
[68 173]
[69 172]
[70 171]
[71 168]
[72 167]
[73 166]
[74 165]
[75 162]
[76 156]
[77 155]
[78 154]
[79 153]
[83 150]
[84 149]
[85 148]
[86 147]
[87 146]
[88 145]
[89 144]
[93 141]
[94 140]
[95 139]
[96 138]
[97 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
