%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[156.51512146 730.18371582]
[147.75427246 717.99340820]
[140.21089172 705.01446533]
[133.95538330 691.36810303]
[129.04615784 677.18164062]
[125.52905273 662.58764648]
[123.43691254 647.72229004]
[122.78926849 632.72442627]
[123.59217072 617.73406982]
[125.83812714 602.89117432]
[129.50614929 588.33435059]
[134.56201172 574.19952393]
[140.95849609 560.61859131]
[148.63586426 547.71850586]
[157.52246094 535.61956787]
[167.53529358 524.43481445]
[178.58088684 514.26867676]
[190.55609131 505.21603394]
[203.34910583 497.36148071]
[216.84048462 490.77828979]
[211.59376526 476.72583008]
[206.34704590 462.67337036]
[194.64674377 453.45642090]
[197.06825256 437.82162476]
[191.82153320 423.76913452]
[186.57481384 409.71667480]
[181.32809448 395.66421509]
[176.08137512 381.61172485]
[170.83465576 367.55926514]
[165.58793640 353.50677490]
[157.08135986 365.86145020]
[142.12980652 367.06607056]
[131.75502014 356.23263550]
[133.60488892 341.34713745]
[146.31578064 333.38262939]
[160.51649475 338.20910645]
[156.32948303 323.80529785]
[145.34710693 313.74365234]
[148.92477417 298.33227539]
[144.73776245 283.92849731]
[140.55075073 269.52471924]
[129.56837463 259.46307373]
[133.14604187 244.05168152]
[128.95903015 229.64788818]
[115.82267761 222.72171021]
[111.37126160 208.17387390]
[118.72515106 194.44223022]
[114.53813934 180.03845215]
[104.09156036 173.93962097]
[100.48541260 161.97386169]
[106.17510223 150.39845276]
[102.20301056 135.93392944]
[98.23091125 121.46939850]
[94.25881958 107.00487518]
[91.21127319 104.64164734]
[89.22020721 100.94657898]
[88.85706329 96.42163086]
[90.44779205 91.80541992]
[87.12553406 77.17795563]
[83.80327606 62.55049896]
[80.48101807 47.92303848]
[69.87936401 36.17929459]
[74.60561371 22.05443001]
[71.28334808 7.42697001]
[60.68169785 -4.31677341]
[65.40795135 -18.44163895]
[54.80629349 -30.18538284]
[59.53254318 -44.31024933]
[51.61296844 -31.57131958]
[37.39743423 -26.78398514]
[23.38509178 -32.13695145]
[15.98219395 -45.18291092]
[18.57324791 -59.95743179]
[29.97365952 -69.70579529]
[44.97130966 -69.97119141]
[56.71045685 -60.63069534]
[54.92798996 -75.52441406]
[53.14552307 -90.41812897]
[51.36305618 -105.31184387]
[49.58059311 -120.20556641]
[38.10437393 -127.25616455]
[32.86081696 -139.45106506]
[35.55837250 -152.24971008]
[44.99296188 -161.02569580]
[43.43243790 -175.94430542]
[41.87191391 -190.86291504]
[33.22510529 -178.60597229]
[19.06282043 -173.66333008]
[4.66724586 -177.87846375]
[-4.59242725 -189.67924500]
[-5.26256895 -204.66427612]
[2.90676713 -217.24449158]
[16.86861992 -222.72779846]
[31.41556549 -219.06904602]
[41.12239838 -207.63180542]
[41.34572601 -222.63014221]
[41.56905365 -237.62847900]
[41.79238129 -252.62681580]
[42.01570892 -267.62515259]
[28.17948151 -273.98742676]
[18.13211441 -285.43167114]
[13.61437225 -299.97503662]
[15.40898132 -315.09783936]
[23.20501709 -328.17996216]
[35.65176773 -336.95483398]
[50.59275818 -339.90216064]
[65.43936920 -336.51129150]
[77.61933899 -327.36972046]
[85.02241516 -314.06127930]
[86.36596680 -298.89175415]
[81.41722107 -284.48934937]
[71.03356934 -273.34933472]
[57.01404572 -267.40182495]
[56.79071808 -252.40348816]
[56.56739044 -237.40515137]
[56.34406281 -222.40681458]
[56.12073517 -207.40847778]
[56.79051971 -192.42343140]
[58.35104370 -177.50482178]
[59.91156769 -162.58622742]
[73.41678619 -152.56385803]
[75.53647614 -135.53970337]
[64.47431183 -121.98802948]
[66.25677490 -107.09431458]
[68.03923798 -92.20059967]
[69.82170868 -77.30687714]
[71.60417175 -62.41316223]
[74.16000366 -47.63250732]
[84.52402496 -36.93501663]
[80.03540802 -21.76389885]
[90.39942932 -11.06640911]
[85.91081238 4.10471010]
[89.23307037 18.73217010]
[99.59709167 29.42966080]
[95.10847473 44.60078049]
[98.43073273 59.22824097]
[101.75299072 73.85569763]
[105.07525635 88.48316193]
[108.72334290 103.03278351]
[112.69543457 117.49730682]
[116.66753387 131.96182251]
[120.63963318 146.42634583]
[134.03770447 159.05857849]
[128.94192505 175.85144043]
[133.12893677 190.25521851]
[146.69808960 197.90478516]
[150.73912048 212.57191467]
[143.36280823 225.46087646]
[147.54981995 239.86466980]
[158.83168030 250.95655823]
[154.95452881 265.33770752]
[159.14154053 279.74148560]
[163.32855225 294.14526367]
[174.61041260 305.23715210]
[170.73326111 319.61828613]
[174.92027283 334.02209473]
[179.64041138 348.26007080]
[184.88713074 362.31253052]
[190.13385010 376.36502075]
[195.38056946 390.41748047]
[200.62728882 404.46994019]
[205.87400818 418.52243042]
[211.12072754 432.57489014]
[223.19630432 442.79696655]
[220.39952087 457.42663574]
[225.64624023 471.47912598]
[230.89295959 485.53158569]
[245.39750671 481.66201782]
[260.20782471 479.21044922]
[275.18560791 478.19973755]
[290.19100952 478.63931274]
[305.08395386 480.52508545]
[319.72534180 483.83944702]
[333.97848511 488.55145264]
[347.71032715 494.61712646]
[360.79263306 501.97979736]
[373.10324097 510.57073975]
[384.52725220 520.30969238]
[394.95794678 531.10583496]
[404.29797363 542.85827637]
[412.46008301 555.45727539]
[419.36810303 568.78521729]
[424.95755005 582.71771240]
[429.17617798 597.12463379]
[431.98464966 611.87139893]
[433.35671997 626.82043457]
[433.27957153 641.83209229]
[431.75390625 656.76617432]
[428.79403687 671.48333740]
[424.42755127 685.84613037]
[418.69522095 699.72039795]
[411.65054321 712.97668457]
[403.35937500 725.49108887]
[393.89904785 737.14691162]
[383.35794067 747.83526611]
[371.83444214 757.45629883]
[359.43618774 765.92028809]
[346.27890015 773.14807129]
[332.48544312 779.07226562]
[318.18460083 783.63751221]
[303.50991821 786.80126953]
[288.59838867 788.53387451]
[273.58923340 788.81915283]
[258.62265015 787.65454102]
[243.83831787 785.05090332]
[229.37429810 781.03247070]
[215.36564636 775.63677979]
[201.94316101 768.91424561]
[189.23216248 760.92767334]
[177.35133362 751.75152588]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 167]
[21 166]
[22 165]
[24 163]
[25 162]
[26 161]
[27 160]
[28 159]
[29 158]
[30 157]
[36 156]
[37 155]
[39 153]
[40 152]
[41 151]
[43 149]
[44 148]
[47 145]
[48 144]
[51 142]
[52 141]
[53 140]
[54 139]
[58 138]
[59 137]
[60 136]
[61 135]
[63 133]
[64 132]
[66 130]
[68 128]
[76 127]
[77 126]
[78 125]
[79 124]
[80 123]
[84 120]
[85 119]
[86 118]
[95 117]
[96 116]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
