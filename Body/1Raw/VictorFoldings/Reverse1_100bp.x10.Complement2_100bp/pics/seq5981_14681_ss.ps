%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[78.70116425 396.05160522]
[73.87811279 381.83346558]
[70.56770325 367.18902588]
[68.80622101 352.27880859]
[68.61295319 337.26614380]
[69.99001312 322.31549072]
[72.92232513 307.59072876]
[77.37775421 293.25311279]
[83.30748749 279.45977783]
[90.64655304 266.36184692]
[99.31454468 254.10282898]
[109.21648407 242.81703186]
[120.24388123 232.62811279]
[132.27592468 223.64768982]
[145.18077087 215.97419739]
[138.90339661 202.35087585]
[132.62603760 188.72755432]
[126.34867859 175.10424805]
[120.07131958 161.48092651]
[113.79396057 147.85760498]
[101.44053650 139.53642273]
[102.69247437 123.76482391]
[96.41510773 110.14151001]
[87.54421234 98.04576111]
[76.43698120 87.96461487]
[65.32975006 77.88347626]
[54.22251511 67.80233765]
[43.11528015 57.72120285]
[32.00804520 47.64006424]
[20.90081215 37.55892563]
[23.34467697 52.35850143]
[17.49722099 66.17180634]
[5.17034721 74.71862793]
[-9.81633186 75.35063934]
[-22.81903076 67.87201691]
[-29.80871964 54.60008240]
[-28.61956787 39.64729309]
[-19.62004852 27.64693069]
[-5.59876013 22.31744194]
[9.09987831 25.31034470]
[-0.56093252 13.83564472]
[-10.22174263 2.36094475]
[-19.88255310 -9.11375523]
[-29.54336357 -20.58845520]
[-39.20417404 -32.06315613]
[-51.45406723 -23.39097786]
[-64.38667297 -15.77426720]
[-77.91127777 -9.26645088]
[-91.93300629 -3.91317725]
[-106.35351562 0.24800365]
[-121.07165527 3.18790364]
[-135.98417664 4.88590145]
[-150.98648071 5.33008623]
[-165.97334290 4.51734257]
[-180.83963013 2.45337129]
[-195.48107910 -0.84735006]
[-209.79496765 -5.36166906]
[-223.68090820 -11.05792046]
[-237.04148865 -17.89614868]
[-249.78300476 -25.82838631]
[-261.81607056 -34.79899597]
[-273.05627441 -44.74505234]
[-283.42480469 -55.59679031]
[-292.84890747 -67.27809143]
[-301.26248169 -79.70702362]
[-308.60653687 -92.79639435]
[-314.82949829 -106.45439911]
[-319.88778687 -120.58522797]
[-323.74588013 -135.08976746]
[-326.37670898 -149.86628723]
[-327.76184082 -164.81111145]
[-327.89154053 -179.81942749]
[-326.76492310 -194.78596497]
[-324.38989258 -209.60574341]
[-320.78308105 -224.17480469]
[-315.96981812 -238.39096069]
[-309.98382568 -252.15447998]
[-302.86712646 -265.36883545]
[-294.66964722 -277.94131470]
[-285.44885254 -289.78378296]
[-275.26943970 -300.81311035]
[-264.20281982 -310.95196533]
[-252.32658386 -320.12921143]
[-239.72409058 -328.28048706]
[-226.48368835 -335.34863281]
[-212.69828796 -341.28402710]
[-198.46455383 -346.04507446]
[-183.88235474 -349.59838867]
[-169.05395508 -351.91900635]
[-154.08338928 -352.99066162]
[-139.07563782 -352.80584717]
[-124.13599396 -351.36584473]
[-109.36924744 -348.68078613]
[-94.87896729 -344.76947021]
[-80.76679993 -339.65936279]
[-67.13173676 -333.38629150]
[-54.06941223 -325.99423218]
[-41.67145538 -317.53509521]
[-30.02483177 -308.06817627]
[-19.21123314 -297.65988159]
[-9.30650902 -286.38320923]
[-0.38013735 -274.31729126]
[7.50526953 -261.54675293]
[14.29440022 -248.16114807]
[19.93963432 -234.25437927]
[24.40137100 -219.92401123]
[27.64831734 -205.27055359]
[29.65769577 -190.39678955]
[30.41541290 -175.40704346]
[29.91615295 -160.40647888]
[28.16341782 -145.50028992]
[25.16950417 -130.79304504]
[20.95540810 -116.38790131]
[15.55069351 -102.38591766]
[8.99326801 -88.88529968]
[1.32912946 -75.98074341]
[-7.38796329 -63.76277161]
[-17.09686470 -52.31708527]
[-27.72947502 -41.72396469]
[-18.06866455 -30.24926567]
[-8.40785313 -18.77456665]
[1.25295722 -7.29986572]
[10.91376781 4.17483425]
[20.57457733 15.64953423]
[30.98195076 26.45169067]
[42.08918381 36.53282928]
[53.19641876 46.61396790]
[64.30364990 56.69510651]
[75.41088867 66.77624512]
[86.51811981 76.85738373]
[97.62535095 86.93852234]
[92.11526489 72.98722076]
[89.68923187 58.18470764]
[90.45763397 43.20440292]
[94.38550568 28.72780609]
[101.29416656 15.41351128]
[110.86930847 3.86722636]
[122.67532349 -5.38576841]
[136.17512512 -11.92452335]
[150.75456238 -15.45156956]
[165.75036621 -15.80644989]
[180.48031616 -12.97301960]
[194.27432251 -7.08017969]
[206.50483704 1.60398328]
[216.61543274 12.68439865]
[224.14617920 25.65698051]
[228.75445557 39.93156433]
[230.23063660 54.85875320]
[228.50753784 69.75945282]
[223.66357422 83.95579529]
[215.91909790 96.80192566]
[205.62643433 107.71343231]
[193.25382996 116.19392395]
[179.36416626 121.85759735]
[164.58930969 124.44677734]
[149.60144043 123.84368134]
[135.08239746 120.07575226]
[121.69269562 113.31439972]
[110.03842926 103.86415100]
[116.31578827 117.48746490]
[129.11820984 126.78308105]
[127.41727448 141.58024597]
[133.69464111 155.20356750]
[139.97200012 168.82687378]
[146.24935913 182.45019531]
[152.52671814 196.07351685]
[158.80407715 209.69682312]
[173.02188110 204.87274170]
[187.66606140 201.56126404]
[202.57615662 199.79869080]
[217.58882141 199.60433960]
[232.53955078 200.98030090]
[247.26454163 203.91154480]
[261.60247803 208.36593628]
[275.39624023 214.29466248]
[288.49468994 221.63276672]
[300.75436401 230.29986572]
[312.04089355 240.20098877]
[322.23062134 251.22764587]
[331.21188354 263.25903320]
[338.88635254 276.16329956]
[345.16986084 289.79910278]
[349.99359131 304.01702881]
[353.30471802 318.66128540]
[355.06692505 333.57144165]
[355.26092529 348.58410645]
[353.88458252 363.53479004]
[350.95300293 378.25970459]
[346.49826050 392.59753418]
[340.56918335 406.39114380]
[333.23077393 419.48944092]
[324.56338501 431.74890137]
[314.66198730 443.03518677]
[303.63507080 453.22463989]
[291.60348511 462.20562744]
[278.69900513 469.87976074]
[265.06304932 476.16293335]
[250.84501648 480.98632812]
[236.20068359 484.29708862]
[221.29049683 486.05895996]
[206.27781677 486.25259399]
[191.32716370 484.87588501]
[176.60231018 481.94393921]
[162.26458740 477.48886108]
[148.47111511 471.55944824]
[135.37300110 464.22070312]
[123.11376953 455.55300903]
[111.82772827 445.65133667]
[101.63853455 434.62420654]
[92.65783691 422.59237671]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 167]
[16 166]
[17 165]
[18 164]
[19 163]
[20 162]
[22 160]
[23 159]
[24 131]
[25 130]
[26 129]
[27 128]
[28 127]
[29 126]
[30 125]
[40 124]
[41 123]
[42 122]
[43 121]
[44 120]
[45 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
