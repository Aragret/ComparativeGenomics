%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[38.14315033 466.06671143]
[43.26665878 480.22875977]
[45.22551346 495.16116333]
[43.92808914 510.16552734]
[39.43507767 524.54003906]
[31.95661545 537.61242676]
[21.84249115 548.77117920]
[9.56575584 557.49450684]
[-4.29938221 563.37426758]
[-19.10442734 566.13555908]
[-34.15691757 565.64923096]
[-48.75282669 561.93792725]
[-62.20947266 555.17535400]
[-73.89746094 545.67773438]
[-83.27013397 533.88928223]
[-89.88910675 520.36138916]
[-93.44479370 505.72683716]
[-93.77089691 490.67001343]
[-90.85216522 475.89520264]
[-84.82510376 462.09344482]
[-75.97161865 449.91024780]
[-64.70579529 439.91549683]
[-51.55456543 432.57659912]
[-37.13302994 428.23687744]
[-22.11570930 427.09924316]
[-7.20499516 429.21694946]
[-1.95827699 415.16445923]
[3.28844118 401.11199951]
[8.53515911 387.05953979]
[13.78187752 373.00704956]
[19.02859497 358.95458984]
[24.27531433 344.90209961]
[28.88932228 330.62936401]
[32.86141968 316.16485596]
[23.43114471 304.66668701]
[22.56953812 289.64263916]
[30.81625748 276.84246826]
[45.18492508 271.28839111]
[49.15702057 256.82388306]
[53.12911606 242.35934448]
[49.03828812 228.03753662]
[60.15375519 216.77888489]
[64.12584686 202.31436157]
[68.09794617 187.84983826]
[64.00711823 173.52803040]
[75.12258148 162.26937866]
[71.03175354 147.94757080]
[82.14722443 136.68891907]
[86.11931610 122.22440338]
[90.09141541 107.75988007]
[93.73950195 93.21025848]
[97.06175995 78.58279419]
[100.38401794 63.95533752]
[103.70628357 49.32787704]
[92.01751709 58.72855759]
[77.11356354 60.42331314]
[63.61257553 53.88700485]
[55.69797897 41.14498138]
[55.82219696 26.14549446]
[63.94674301 13.53630161]
[77.55413818 7.22449589]
[92.42797852 9.16585922]
[103.95944214 18.75884056]
[108.57539368 33.03120422]
[113.82211304 18.97873497]
[119.06883240 4.92626333]
[116.64732361 -10.70853329]
[128.34762573 -19.92547989]
[133.59434509 -33.97795105]
[138.84106445 -48.03042221]
[142.59736633 -62.55248260]
[144.82247925 -77.38652802]
[147.04760742 -92.22056580]
[149.27272034 -107.05461121]
[147.36059570 -111.91165924]
[147.48983765 -116.55241394]
[149.23620605 -120.23551941]
[151.94270325 -122.49542236]
[154.82797241 -137.21531677]
[149.88964844 -152.24606323]
[159.93057251 -163.24739075]
[162.81584167 -177.96728516]
[165.70111084 -192.68716431]
[168.58639526 -207.40705872]
[171.47166443 -222.12695312]
[174.35693359 -236.84684753]
[177.24220276 -251.56674194]
[180.12747192 -266.28662109]
[183.01275635 -281.00653076]
[181.59246826 -290.02984619]
[186.05210876 -295.92337036]
[189.15621948 -310.59866333]
[175.08001709 -315.86343384]
[161.94573975 -323.16744995]
[150.04684448 -332.34753418]
[139.64913940 -343.19857788]
[130.98490906 -355.47821045]
[124.24773407 -368.91204834]
[119.58811188 -383.19998169]
[117.11014557 -398.02285767]
[116.86918640 -413.04949951]
[118.87062836 -427.94418335]
[123.06974792 -442.37417603]
[129.37274170 -456.01712036]
[137.63879395 -468.56823730]
[147.68324280 -479.74707031]
[159.28169250 -489.30395508]
[172.17501831 -497.02532959]
[186.07519531 -502.73870850]
[200.67167664 -506.31646729]
[215.63836670 -507.67868042]
[230.64093018 -506.79492188]
[245.34417725 -503.68490601]
[259.41964722 -498.41809082]
[272.55285645 -491.11221313]
[284.45046997 -481.93045044]
[294.84661865 -471.07791138]
[303.50909424 -458.79705811]
[310.24435425 -445.36227417]
[314.90194702 -431.07363892]
[317.37780762 -416.25042725]
[317.61660767 -401.22375488]
[315.61306763 -386.32934570]
[311.41189575 -371.89996338]
[305.10693359 -358.25790405]
[296.83911133 -345.70797729]
[286.79306030 -334.53057861]
[275.19326782 -324.97534180]
[262.29882812 -317.25579834]
[248.39784241 -311.54440308]
[233.80084229 -307.96871948]
[218.83395386 -306.60864258]
[203.83152771 -307.49453735]
[200.72741699 -292.81924438]
[197.73263550 -278.12124634]
[194.84736633 -263.40136719]
[191.96209717 -248.68145752]
[189.07682800 -233.96156311]
[186.19155884 -219.24168396]
[183.30627441 -204.52178955]
[180.42100525 -189.80189514]
[177.53573608 -175.08200073]
[174.65046692 -160.36210632]
[179.79516602 -146.38423157]
[169.54786682 -134.33004761]
[166.66259766 -119.61014557]
[164.10676575 -104.82949829]
[161.88165283 -89.99545288]
[159.65652466 -75.16140747]
[157.43141174 -60.32736588]
[166.88311768 -71.97489929]
[180.03591919 -79.18628693]
[194.93864441 -80.89175415]
[209.38058472 -76.83831024]
[221.21936035 -67.62725830]
[228.69874573 -54.62500000]
[230.70924377 -39.76034546]
[226.95257568 -25.23837852]
[217.98605347 -13.21334648]
[205.13978577 -5.46908951]
[190.31945801 -3.15442371]
[175.72355652 -6.61271524]
[163.51731873 -15.33094788]
[155.51144409 -28.01582336]
[152.89353943 -42.78370285]
[147.64682007 -28.73123360]
[142.40010071 -14.67876148]
[145.19688416 -0.04909097]
[133.12130737 10.17298126]
[127.87458038 24.22545242]
[122.62786102 38.27792358]
[118.33374023 52.65013885]
[115.01148224 67.27759552]
[111.68922424 81.90505981]
[108.36695862 96.53251648]
[109.93899536 100.05403137]
[109.95117188 104.25138092]
[108.13645172 108.41236877]
[104.55593872 111.73197174]
[100.58383942 126.19649506]
[96.61174774 140.66102600]
[100.41846466 156.01744080]
[89.58710480 166.24148560]
[93.39382172 181.59790039]
[82.56246948 191.82192993]
[78.59037781 206.28645325]
[74.61827850 220.75097656]
[78.42499542 236.10739136]
[67.59364319 246.33143616]
[63.62154388 260.79595947]
[59.64944839 275.26049805]
[69.16648865 287.37377930]
[69.71950531 302.59048462]
[61.30585861 315.06744385]
[47.32594299 320.13696289]
[43.35384750 334.60147095]
[56.89220047 328.14291382]
[71.07757568 333.01889038]
[77.78394318 346.43621826]
[73.16959381 360.70883179]
[59.87783432 367.66076660]
[45.52278900 363.30960083]
[38.32778549 350.14883423]
[33.08106613 364.20129395]
[27.83434868 378.25378418]
[22.58763123 392.30624390]
[17.34091187 406.35870361]
[12.09419441 420.41119385]
[6.84747601 434.46365356]
[19.49751282 442.63619995]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 209]
[27 208]
[28 207]
[29 206]
[30 205]
[31 204]
[32 203]
[33 196]
[34 195]
[38 191]
[39 190]
[40 189]
[42 187]
[43 186]
[44 185]
[46 183]
[48 181]
[49 180]
[50 179]
[51 175]
[52 174]
[53 173]
[54 172]
[64 171]
[65 170]
[66 169]
[68 167]
[69 166]
[70 165]
[71 150]
[72 149]
[73 148]
[74 147]
[78 146]
[79 145]
[81 143]
[82 142]
[83 141]
[84 140]
[85 139]
[86 138]
[87 137]
[88 136]
[89 135]
[91 134]
[92 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
