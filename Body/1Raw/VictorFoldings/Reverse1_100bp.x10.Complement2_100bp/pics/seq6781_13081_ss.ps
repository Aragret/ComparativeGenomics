%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[167.32591248 426.22467041]
[178.23693848 415.84375000]
[191.12469482 408.05145264]
[186.29869080 393.84899902]
[181.47270203 379.64654541]
[166.08309937 372.86425781]
[160.24548340 356.73242188]
[168.03143311 341.06719971]
[162.99450684 326.93817139]
[157.95759583 312.80914307]
[146.39581299 303.41903687]
[149.04983521 287.82202148]
[144.01290894 273.69299316]
[138.97599792 259.56396484]
[133.93908691 245.43493652]
[128.90216064 231.30589294]
[120.21257782 243.53256226]
[105.24475098 244.51441956]
[95.03240204 233.52770996]
[97.10369873 218.67140198]
[109.93175507 210.89703369]
[124.05904388 215.93438721]
[120.08694458 201.46986389]
[116.11484528 187.00534058]
[103.08307648 179.88435364]
[98.84875488 165.27185059]
[106.40626526 151.65121460]
[102.43417358 137.18669128]
[98.46207428 122.72216797]
[87.75597382 119.20275879]
[80.04811859 110.98110199]
[77.22595215 100.07045746]
[79.98055267 89.14256287]
[87.63739014 80.87336731]
[84.09771729 66.29699707]
[80.55804443 51.72061920]
[77.01837158 37.14424515]
[73.47870636 22.56786728]
[68.55401611 36.73640823]
[58.03105164 47.42598724]
[43.94161224 52.57261658]
[29.00616074 51.18255997]
[16.10849380 43.52422333]
[7.73894835 31.07630157]
[5.51355410 16.24230003]
[9.86199951 1.88642859]
[19.94466782 -9.21941662]
[33.81475449 -14.93087292]
[48.79415894 -14.14514542]
[61.99060059 -7.01394796]
[70.85655212 5.08696747]
[69.96373749 -9.88643837]
[69.07092285 -24.85984421]
[60.52593994 -38.17501831]
[67.49198151 -51.34025574]
[66.59916687 -66.31365967]
[65.70635223 -81.28707123]
[64.81353760 -96.26047516]
[63.92071915 -111.23387909]
[63.02790451 -126.20728302]
[59.71200943 -131.92710876]
[59.77330399 -137.60983276]
[62.33817291 -141.63853455]
[61.89156723 -156.63188171]
[61.44496155 -171.62522888]
[46.58691788 -173.96504211]
[32.41559601 -178.99394226]
[19.41314316 -186.53930664]
[8.02164459 -196.34289551]
[-1.37189686 -208.06968689]
[-8.44870949 -221.31942749]
[-12.96907139 -235.64015198]
[-14.78043079 -250.54371643]
[-13.82255268 -265.52236938]
[-10.12952423 -280.06607056]
[-3.82853723 -293.67987061]
[4.86448526 -305.90075684]
[15.65229130 -316.31335449]
[28.16646385 -324.56408691]
[41.98000336 -330.37319946]
[56.62189102 -333.54421997]
[56.17528534 -348.53756714]
[55.72867966 -363.53091431]
[55.28207397 -378.52426147]
[44.06087494 -389.32809448]
[43.82154083 -404.53982544]
[54.19047928 -415.17095947]
[53.74387360 -430.16430664]
[53.29726791 -445.15765381]
[52.85066223 -460.15100098]
[38.03566742 -462.83609009]
[24.10282707 -468.54306030]
[11.66121960 -477.02246094]
[1.25474179 -487.90356445]
[-6.66168022 -500.71075439]
[-11.74197483 -514.88409424]
[-13.76405239 -529.80407715]
[-12.63951778 -544.81835938]
[-8.41752911 -559.27062988]
[-1.28265524 -572.52911377]
[8.45319843 -584.01422119]
[20.36442184 -593.22381592]
[33.93030930 -599.75531006]
[48.55781555 -603.32318115]
[63.60749054 -603.77142334]
[78.42142487 -601.08050537]
[92.35202789 -595.36810303]
[104.79029846 -586.88378906]
[115.19248962 -575.99859619]
[123.10387421 -563.18829346]
[128.17858887 -549.01293945]
[130.19479370 -534.09216309]
[129.06436157 -519.07830811]
[124.83668518 -504.62768555]
[117.69659424 -491.37200928]
[107.95622253 -479.89077759]
[96.04137421 -470.68588257]
[82.47292328 -464.15972900]
[67.84401703 -460.59759521]
[68.29061890 -445.60424805]
[68.73722839 -430.61090088]
[69.18383026 -415.61755371]
[80.16716766 -405.62246704]
[80.83367157 -390.42343140]
[70.27542114 -378.97088623]
[70.72203064 -363.97750854]
[71.16863251 -348.98416138]
[71.61524200 -333.99081421]
[86.41991425 -331.69692993]
[100.55472565 -326.72030640]
[113.53780365 -319.22906494]
[124.92625427 -309.47702026]
[134.33126831 -297.79522705]
[141.43138123 -284.58059692]
[145.98352051 -270.28250122]
[147.83125305 -255.38742065]
[146.91017151 -240.40246582]
[143.25021362 -225.83807373]
[136.97457886 -212.19061279]
[128.29568481 -199.92549133]
[117.50790405 -189.46125793]
[104.97761536 -181.15534973]
[91.13074493 -175.29185486]
[76.43830872 -172.07183838]
[76.88491821 -157.07849121]
[77.33152008 -142.08514404]
[78.00130463 -127.10009766]
[78.89412689 -112.12669373]
[79.78694153 -97.15328979]
[80.67975616 -82.17988586]
[81.57257080 -67.20647430]
[82.46538544 -52.23307037]
[90.94651031 -39.98889542]
[84.04432678 -25.75265884]
[84.93714142 -10.77925396]
[85.82996368 4.19415188]
[88.05507660 19.02819633]
[91.59474945 33.60457230]
[95.13442230 48.18094635]
[98.67409515 62.75732040]
[102.21376801 77.33369446]
[117.99295807 86.03878784]
[122.50581360 103.48572540]
[112.92659760 118.75006866]
[116.89869690 133.21459961]
[120.87078857 147.67912292]
[134.32455444 155.52986145]
[138.14675903 170.25552368]
[130.57937622 183.03324890]
[134.55146790 197.49777222]
[138.52355957 211.96229553]
[143.03118896 226.26898193]
[148.06811523 240.39801025]
[153.10502625 254.52703857]
[158.14193726 268.65606689]
[163.17886353 282.78509521]
[175.10092163 293.18582153]
[172.08662415 307.77224731]
[177.12353516 321.90127563]
[182.16046143 336.03030396]
[194.91325378 340.36398315]
[202.72755432 351.09466553]
[202.93168640 364.17288208]
[195.67515564 374.82052612]
[200.50115967 389.02297974]
[205.32714844 403.22546387]
[220.29431152 401.55264282]
[235.27110291 403.13687134]
[249.55702209 407.90408325]
[262.48391724 415.63125610]
[273.44717407 425.95703125]
[281.93399048 438.39840698]
[287.54745483 452.37350464]
[290.02499390 467.22866821]
[289.25073242 482.26910400]
[285.26089478 496.79132080]
[278.24206543 510.11611938]
[268.52258301 521.62030029]
[256.55697632 530.76568604]
[242.90496826 537.12463379]
[228.20503235 540.39971924]
[213.14472961 540.43768311]
[198.42846680 537.23681641]
[184.74453735 530.94683838]
[172.73297119 521.86187744]
[162.95556641 510.40689087]
[155.86962891 497.11764526]
[151.80659485 482.61572266]
[150.95648193 467.57940674]
[153.35905457 452.71191406]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 186]
[4 185]
[5 184]
[8 180]
[9 179]
[10 178]
[12 176]
[13 175]
[14 174]
[15 173]
[16 172]
[22 171]
[23 170]
[24 169]
[27 166]
[28 165]
[29 164]
[34 161]
[35 160]
[36 159]
[37 158]
[38 157]
[51 156]
[52 155]
[53 154]
[55 152]
[56 151]
[57 150]
[58 149]
[59 148]
[60 147]
[63 146]
[64 145]
[65 144]
[81 128]
[82 127]
[83 126]
[84 125]
[87 122]
[88 121]
[89 120]
[90 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
