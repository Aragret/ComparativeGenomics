%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[126.38817596 538.69836426]
[128.79402161 523.84545898]
[133.96757507 509.71640015]
[141.72180176 496.82186890]
[151.77641296 485.62808228]
[163.76791382 476.53961182]
[177.26284790 469.88504028]
[173.29075623 455.42050171]
[169.31866455 440.95599365]
[165.34655762 426.49145508]
[152.21444702 414.85040283]
[157.01800537 397.07379150]
[152.83099365 382.67001343]
[148.64398193 368.26623535]
[144.45697021 353.86245728]
[140.26995850 339.45867920]
[130.86804199 351.14645386]
[115.86830902 351.23565674]
[106.32801056 339.66058350]
[109.27989197 324.95391846]
[122.54794312 317.95684814]
[136.35035706 323.82614136]
[133.24624634 309.15084839]
[130.14213562 294.47555542]
[127.03802490 279.80026245]
[123.93391418 265.12493896]
[109.73062897 260.63806152]
[99.61291504 249.57063293]
[96.37195587 234.82742310]
[100.97594452 220.34638977]
[112.28385925 210.04696655]
[109.17974854 195.37165833]
[106.07563782 180.69636536]
[102.97152710 166.02105713]
[100.69833374 164.38070679]
[98.93794250 161.74108887]
[98.07421112 158.29298401]
[98.41490173 154.36253357]
[100.14699554 150.38084412]
[97.92187500 135.54679871]
[95.69675446 120.71276093]
[93.47164154 105.87871552]
[91.18298340 103.86586761]
[89.57613373 100.97578430]
[88.97742462 97.45939636]
[89.61589813 93.68466187]
[91.58303070 90.09811401]
[90.24479675 75.15792847]
[88.90656281 60.21774292]
[87.56832886 45.27755737]
[86.23009491 30.33737373]
[77.49427795 23.85709000]
[73.84221649 13.84496212]
[76.25286865 3.68931770]
[83.69535065 -3.31228662]
[82.80253601 -18.28569221]
[81.90971375 -33.25909805]
[81.01689911 -48.23250198]
[80.12408447 -63.20590973]
[79.23126984 -78.17931366]
[78.33845520 -93.15271759]
[75.34368134 -107.85072327]
[70.30676270 -121.97975159]
[65.16480255 -136.07089233]
[59.91808319 -150.12336731]
[54.67136765 -164.17584229]
[49.42464828 -178.22830200]
[43.86542130 -192.16011047]
[37.99646378 -205.96427917]
[32.12750244 -219.76846313]
[26.25854111 -233.57263184]
[11.72107315 -229.76739502]
[-3.21553254 -228.11946106]
[-18.23290062 -228.66397095]
[-33.01093674 -231.38931274]
[-47.23464584 -236.23741150]
[-60.60084915 -243.10490417]
[-72.82463837 -251.84542847]
[-83.64547729 -262.27267456]
[-92.83270264 -274.16436768]
[-100.19049835 -287.26708984]
[-105.56203461 -301.30148315]
[-108.83280945 -315.96844482]
[-109.93310547 -330.95535278]
[-108.83947754 -345.94274902]
[-105.57522583 -360.61114502]
[-100.20994568 -374.64794922]
[-92.85797882 -387.75390625]
[-83.67604065 -399.64971924]
[-72.85984802 -410.08175659]
[-60.63994598 -418.82772827]
[-47.27679825 -425.70117188]
[-33.05524826 -430.55560303]
[-18.27842903 -433.28750610]
[-3.26130342 -433.83871460]
[11.67603397 -432.19741821]
[26.21519279 -428.39865112]
[40.04627228 -422.52334595]
[52.87445831 -414.69674683]
[64.42632294 -405.08572388]
[74.45562744 -393.89505005]
[82.74861145 -381.36331177]
[89.12849426 -367.75762939]
[93.45929718 -353.36798096]
[95.64871216 -338.50109863]
[95.65005493 -323.47384644]
[93.46331787 -308.60656738]
[89.13510132 -294.21615601]
[82.75765991 -280.60931396]
[74.46693420 -268.07608032]
[64.43963623 -256.88360596]
[52.88949966 -247.27049255]
[40.06271744 -239.44160461]
[45.93167877 -225.63742065]
[51.80064011 -211.83325195]
[57.66960144 -198.02906799]
[60.78518295 -196.37817383]
[63.25592804 -193.13618469]
[64.34272766 -188.62263489]
[63.47711945 -183.47502136]
[68.72383881 -169.42256165]
[73.97055817 -155.37008667]
[79.21727753 -141.31761169]
[84.50182343 -136.15086365]
[84.43579102 -127.01667023]
[89.47270966 -112.88764191]
[91.51026154 -127.74861145]
[97.78314972 -141.37397766]
[107.74871063 -152.58503723]
[120.54481506 -160.41189575]
[135.06446838 -164.17745972]
[150.05158997 -163.55598450]
[164.20964050 -158.60119629]
[176.31379700 -149.74177551]
[185.31692505 -137.74414062]
[190.44018555 -123.64617920]
[191.24035645 -108.66754150]
[187.64819336 -94.10400391]
[179.97448730 -81.21547699]
[168.88307190 -71.11693573]
[155.33348083 -64.68200684]
[140.49786377 -62.46738434]
[125.65966797 -64.66464233]
[112.10253906 -71.08370209]
[100.99931335 -81.16925049]
[93.31185913 -94.04553986]
[94.20467377 -79.07212830]
[95.09748840 -64.09872437]
[95.99031067 -49.12532043]
[96.88312531 -34.15191269]
[97.77593994 -19.17850876]
[98.66875458 -4.20510244]
[110.46853638 11.11325455]
[101.17028046 28.99913979]
[102.50851440 43.93932343]
[103.84674835 58.87950897]
[105.18498230 73.81969452]
[106.52321625 88.75988007]
[108.30568695 103.65359497]
[110.53079987 118.48764038]
[112.75592041 133.32168579]
[114.98103333 148.15573120]
[117.64682770 162.91694641]
[120.75093842 177.59225464]
[123.85504913 192.26754761]
[126.95915985 206.94285583]
[141.46903992 211.78132629]
[151.54238892 223.15780640]
[154.54887390 237.95062256]
[149.77917480 252.16702271]
[138.60922241 262.02084351]
[141.71333313 276.69613647]
[144.81744385 291.37142944]
[147.92155457 306.04675293]
[151.02566528 320.72204590]
[154.67375183 335.27166748]
[158.86076355 349.67544556]
[163.04777527 364.07922363]
[167.23478699 378.48300171]
[171.42179871 392.88677979]
[182.32888794 399.77142334]
[185.51972961 411.85455322]
[179.81108093 422.51937866]
[183.78318787 436.98388672]
[187.75527954 451.44842529]
[191.72737122 465.91293335]
[206.72824097 464.74227905]
[221.67955017 466.43200684]
[236.04080200 470.92098999]
[249.29284668 478.04696655]
[260.95663452 487.55233765]
[270.61056519 499.09350586]
[277.90557861 512.25329590]
[282.57803345 526.55590820]
[284.45898438 541.48431396]
[283.48046875 556.49896240]
[279.67782593 571.05700684]
[273.18850708 584.63214111]
[264.24716187 596.73376465]
[253.17695618 606.92431641]
[240.37808228 614.83538818]
[226.31323242 620.18109131]
[211.49082947 622.76812744]
[196.44668579 622.50299072]
[181.72463989 619.39520264]
[167.85690308 613.55725098]
[155.34475708 605.20001221]
[144.64053345 594.62573242]
[136.13117981 582.21655273]
[130.12428284 568.42114258]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 186]
[8 185]
[9 184]
[10 183]
[12 180]
[13 179]
[14 178]
[15 177]
[16 176]
[22 175]
[23 174]
[24 173]
[25 172]
[26 171]
[31 166]
[32 165]
[33 164]
[34 163]
[39 162]
[40 161]
[41 160]
[42 159]
[47 158]
[48 157]
[49 156]
[50 155]
[51 154]
[55 152]
[56 151]
[57 150]
[58 149]
[59 148]
[60 147]
[61 146]
[62 126]
[63 125]
[64 123]
[65 122]
[66 121]
[67 120]
[68 116]
[69 115]
[70 114]
[71 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
