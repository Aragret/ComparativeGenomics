%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[94.21501160 642.58038330]
[97.59961700 627.84826660]
[105.17767334 614.76910400]
[116.27532959 604.50592041]
[129.90580750 597.97125244]
[127.68068695 583.13720703]
[125.45557404 568.30316162]
[113.36233521 559.68402100]
[110.89443207 544.67193604]
[120.01695251 532.04583740]
[117.79183197 517.21179199]
[115.56671906 502.37777710]
[113.34159851 487.54373169]
[111.11648560 472.70968628]
[105.49812317 486.61773682]
[95.04000854 497.37078857]
[81.29354095 503.37365723]
[66.29791260 503.73587036]
[52.27764511 498.40368652]
[41.31256104 488.16809082]
[35.02926636 474.54751587]
[34.35984802 459.56246948]
[39.40361404 445.43588257]
[49.41234589 434.26336670]
[62.90131378 427.70227051]
[77.86950684 426.72592163]
[92.09648132 431.47915649]
[103.47174835 441.25686646]
[110.30733490 454.60671997]
[111.20014954 439.63330078]
[112.09296417 424.65988159]
[112.98577881 409.68649292]
[106.01973724 396.52124023]
[114.56472015 383.20608521]
[115.45754242 368.23266602]
[116.35035706 353.25927734]
[116.90856934 338.26965332]
[117.13189697 323.27133179]
[117.35522461 308.27297974]
[117.57855225 293.27465820]
[117.80187988 278.27630615]
[118.02520752 263.27798462]
[116.90955353 248.31951904]
[114.46382904 233.52024841]
[112.01810455 218.72097778]
[109.57237244 203.92170715]
[107.12664795 189.12243652]
[97.41772461 177.82702637]
[102.80138397 162.94998169]
[100.35565948 148.15071106]
[97.90993500 133.35144043]
[95.46420288 118.55216217]
[83.74656677 110.02906799]
[81.38407135 95.73344421]
[89.73652649 83.89356232]
[87.29079437 69.09429169]
[84.84506989 54.29502106]
[82.39934540 39.49575043]
[72.51548767 27.14180565]
[78.07408142 13.32329464]
[75.62835693 -1.47597635]
[73.18262482 -16.27524757]
[70.73690033 -31.07451820]
[58.17289734 -40.28231812]
[55.90340424 -55.32572556]
[64.75906372 -67.24683380]
[62.31333542 -82.04610443]
[59.86760712 -96.84537506]
[56.99473190 -100.10122681]
[55.46154404 -103.73631287]
[55.22276306 -107.28291321]
[56.08585739 -110.33605957]
[57.74425888 -112.59610748]
[56.18373871 -127.51471710]
[54.62321472 -142.43331909]
[53.06269073 -157.35192871]
[51.50216675 -172.27052307]
[49.94164658 -187.18913269]
[42.81841660 -173.98838806]
[30.42820549 -165.53364563]
[15.53902054 -163.71371460]
[1.47714221 -168.93516541]
[-8.61597061 -180.03152466]
[-12.48548985 -194.52381897]
[-9.26695538 -209.17445374]
[0.32060394 -220.71043396]
[14.13530254 -226.55458069]
[29.09090233 -225.40130615]
[41.84628296 -217.50825500]
[49.55186844 -204.63873291]
[50.44468307 -219.61213684]
[41.82318878 -235.88331604]
[52.05084991 -250.14382935]
[52.72063446 -265.12887573]
[49.97753906 -273.84167480]
[53.51359177 -280.33154297]
[54.40640640 -295.30493164]
[47.50422287 -309.54116821]
[55.98534775 -321.78533936]
[42.06513977 -327.78564453]
[31.03878212 -338.18734741]
[24.23775673 -351.73437500]
[22.48332024 -366.79086304]
[25.98733139 -381.53866577]
[34.32666397 -394.19689941]
[46.49430084 -403.23706055]
[61.02093887 -407.56747437]
[76.15242004 -406.66525269]
[90.06154633 -400.63928223]
[101.06871796 -390.21728516]
[107.84476471 -376.65777588]
[109.57144928 -361.59808350]
[106.04026794 -346.85675049]
[97.67762756 -334.21389771]
[85.49334717 -325.19616699]
[70.95875549 -320.89251709]
[77.92479706 -307.72729492]
[69.37981415 -294.41210938]
[68.48699188 -279.43872070]
[67.70567322 -264.45907593]
[67.03588867 -249.47402954]
[74.96482849 -240.33847046]
[74.52945709 -227.84870911]
[65.41809082 -218.71931458]
[64.52527618 -203.74591064]
[64.86025238 -188.74966431]
[66.42077637 -173.83105469]
[67.98129272 -158.91244507]
[69.54181671 -143.99383545]
[71.10234070 -129.07524109]
[72.66286469 -114.15663147]
[74.66687775 -99.29110718]
[77.11260986 -84.49183655]
[79.55833435 -69.69256592]
[91.77855682 -61.25445175]
[94.46969604 -46.28072739]
[85.53617096 -33.52024460]
[87.98189545 -18.72097397]
[90.42762756 -3.92170382]
[92.87335205 10.87756729]
[102.58227539 22.17296791]
[97.19861603 37.05002213]
[99.64434052 51.84929276]
[102.09006500 66.64856720]
[104.53579712 81.44783783]
[116.25343323 89.97093201]
[118.61592865 104.26655579]
[110.26347351 116.10643768]
[112.70920563 130.90571594]
[115.15493011 145.70498657]
[117.60065460 160.50425720]
[127.48451233 172.85820007]
[121.92591858 186.67671204]
[124.37164307 201.47598267]
[126.81737518 216.27525330]
[129.26310730 231.07452393]
[131.70883179 245.87379456]
[137.67367554 232.11077881]
[148.96255493 222.23345947]
[163.39575195 218.14901733]
[178.18644714 220.64607239]
[190.47879028 229.24247742]
[197.89932251 242.27842712]
[199.01525879 257.23684692]
[193.61111450 271.22955322]
[182.73036194 281.55471802]
[168.47389221 286.21875000]
[153.59440613 284.32107544]
[140.96492004 276.22811890]
[133.02354431 263.50131226]
[132.80021667 278.49963379]
[132.57688904 293.49798584]
[132.35356140 308.49630737]
[132.13023376 323.49465942]
[131.90690613 338.49298096]
[134.45079041 343.05102539]
[134.94271851 347.66744995]
[133.70407104 351.55084229]
[131.32376099 354.15206909]
[130.43093872 369.12548828]
[129.53813171 384.09890747]
[136.44030762 398.33514404]
[127.95919037 410.57931519]
[127.06637573 425.55270386]
[126.17355347 440.52612305]
[125.28073883 455.49951172]
[125.95052338 470.48455811]
[128.17564392 485.31860352]
[130.40075684 500.15264893]
[132.62586975 514.98669434]
[134.85099792 529.82073975]
[147.27651978 539.21459961]
[149.32177734 554.29010010]
[140.28961182 566.07806396]
[142.51473999 580.91210938]
[144.73985291 595.74615479]
[159.68771362 597.99401855]
[173.30818176 604.54949951]
[184.39015198 614.82965088]
[191.94819641 627.92034912]
[195.31028748 642.65765381]
[194.17745972 657.73107910]
[188.65043640 671.80029297]
[179.22068787 683.61431885]
[166.72668457 692.12261963]
[152.27940369 696.56866455]
[137.16346741 696.55712891]
[122.72299957 692.08898926]
[110.24201965 683.56164551]
[100.83032990 671.73321533]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 196]
[6 195]
[7 194]
[10 191]
[11 190]
[12 189]
[13 188]
[14 187]
[29 186]
[30 185]
[31 184]
[32 183]
[34 181]
[35 180]
[36 179]
[37 175]
[38 174]
[39 173]
[40 172]
[41 171]
[42 170]
[43 157]
[44 156]
[45 155]
[46 154]
[47 153]
[49 151]
[50 150]
[51 149]
[52 148]
[55 145]
[56 144]
[57 143]
[58 142]
[60 140]
[61 139]
[62 138]
[63 137]
[66 134]
[67 133]
[68 132]
[73 131]
[74 130]
[75 129]
[76 128]
[77 127]
[78 126]
[90 125]
[91 124]
[93 121]
[94 120]
[96 119]
[97 118]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
