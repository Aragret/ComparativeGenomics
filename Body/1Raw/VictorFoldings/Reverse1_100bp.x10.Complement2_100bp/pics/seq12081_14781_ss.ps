%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGUCUAAGUGUUAGACUACAAAACCAAUUUGAUAUAAAUGUUCUCCUUUUGGGCCAUUACUACAGCCCCAACUCCCUAUCCUCCUCUUACCCCCUAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[56.37567139 921.80993652]
[41.37154388 921.76690674]
[26.39481735 920.85949707]
[11.49524117 919.09082031]
[-3.27768707 916.46661377]
[-17.87489319 912.99572754]
[-32.24788666 908.68957520]
[-46.34892273 903.56256104]
[-60.13115692 897.63165283]
[-73.54881287 890.91656494]
[-86.55730438 883.43957520]
[-99.11342621 875.22558594]
[-111.17547607 866.30187988]
[-122.70336914 856.69805908]
[-133.65882874 846.44604492]
[-144.00543213 835.57989502]
[-153.70884705 824.13574219]
[-162.73681641 812.15148926]
[-171.05934143 799.66705322]
[-178.64880371 786.72387695]
[-185.47996521 773.36492920]
[-191.53015137 759.63464355]
[-196.77925110 745.57861328]
[-201.20983887 731.24346924]
[-204.80718994 716.67694092]
[-207.55935669 701.92730713]
[-209.45718384 687.04364014]
[-210.49438477 672.07531738]
[-210.66751099 657.07214355]
[-209.97598267 642.08386230]
[-208.42210388 627.16040039]
[-206.01101685 612.35119629]
[-202.75076294 597.70550537]
[-198.65214539 583.27197266]
[-193.72879028 569.09851074]
[-187.99703979 555.23223877]
[-181.47595215 541.71923828]
[-174.18717957 528.60443115]
[-166.15495300 515.93127441]
[-157.40592957 503.74188232]
[-147.96917725 492.07684326]
[-137.87606812 480.97482300]
[-127.16009521 470.47274780]
[-115.85688019 460.60546875]
[-104.00396729 451.40579224]
[-91.64072418 442.90426636]
[-78.80822754 435.12911987]
[-65.54910278 428.10623169]
[-51.90739059 421.85885620]
[-37.92841721 416.40780640]
[-23.65861702 411.77114868]
[-9.14538956 407.96432495]
[5.56305122 404.99996948]
[20.41784668 402.88790894]
[35.36964798 401.63516235]
[50.36878586 401.24591064]
[65.36544037 401.72143555]
[66.70367432 386.78125000]
[68.04190826 371.84106445]
[58.32412720 360.61163330]
[59.46845627 345.44110107]
[71.31281281 335.32434082]
[72.65104675 320.38415527]
[73.98928070 305.44396973]
[67.41830444 292.07714844]
[76.35594177 279.02230835]
[77.69417572 264.08212280]
[69.46342468 248.58302307]
[80.18147278 233.60955811]
[81.29711914 218.65109253]
[82.41277313 203.69264221]
[83.52841949 188.73419189]
[84.64406586 173.77574158]
[85.75971985 158.81729126]
[83.74826813 155.92135620]
[83.03955841 151.90728760]
[84.14383698 147.39797974]
[87.27387238 143.22065735]
[89.05633545 128.32695007]
[90.83880615 113.43322754]
[84.20520782 103.86051941]
[85.67522430 92.30715179]
[94.49465179 84.70064545]
[96.49866486 69.83512115]
[98.50267792 54.96958923]
[89.19319153 42.48074722]
[91.43730927 27.43353844]
[103.40088654 18.63532639]
[105.40489960 3.76979780]
[107.29818726 -11.11023712]
[109.08065796 -26.00395393]
[110.86312103 -40.89767075]
[112.64558411 -55.79138947]
[114.42805481 -70.68510437]
[116.09959412 -85.59168243]
[117.54901123 -100.52149200]
[118.88724518 -115.46167755]
[104.71573639 -120.64151764]
[92.36831665 -129.31352234]
[82.68684387 -140.88639832]
[76.33142090 -154.57109070]
[73.73536682 -169.43457031]
[75.07569122 -184.46340942]
[80.26100922 -198.63291931]
[88.93777466 -210.97698975]
[100.51438904 -220.65399170]
[114.20153809 -227.00413513]
[129.06600952 -229.59443665]
[144.09432983 -228.24830627]
[158.26184082 -223.05752563]
[170.60256958 -214.37599182]
[180.27510071 -202.79565430]
[186.61994934 -189.10604858]
[189.20452881 -174.24057007]
[187.85258484 -159.21276855]
[182.65634155 -145.04727173]
[173.97004700 -132.70989990]
[162.38595581 -123.04183960]
[148.69390869 -116.70227051]
[133.82743835 -114.12344360]
[132.48919678 -99.18325806]
[135.02342224 -92.24066925]
[131.01820374 -84.03115845]
[133.44877625 -77.05160522]
[129.32176208 -68.90264130]
[127.53930664 -54.00892258]
[125.75683594 -39.11520767]
[123.97437286 -24.22148895]
[122.19190216 -9.32777119]
[124.51829529 -2.31280828]
[120.27042389 5.77381134]
[118.26641083 20.63933945]
[127.47308350 32.29150009]
[125.65248871 47.39580536]
[113.36820984 56.97360229]
[111.36419678 71.83913422]
[109.36018372 86.70465851]
[116.12969971 102.05229187]
[105.73252106 115.21569061]
[103.95005798 130.10940552]
[102.16758728 145.00312805]
[100.71817017 159.93293762]
[99.60252380 174.89138794]
[98.48686981 189.84983826]
[97.37122345 204.80828857]
[96.25557709 219.76675415]
[95.13993073 234.72520447]
[102.94992065 244.99003601]
[101.71274567 257.42599487]
[92.63436127 265.42034912]
[91.29612732 280.36053467]
[97.77138519 294.79595947]
[88.92946625 306.78219604]
[87.59123230 321.72238159]
[86.25299835 336.66256714]
[96.11086273 348.72326660]
[94.54087067 363.85565186]
[82.98209381 373.17929077]
[81.64385986 388.11947632]
[80.30562592 403.05966187]
[95.14805603 405.25692749]
[109.83924866 408.30560303]
[124.33039856 412.19564819]
[138.57336426 416.91406250]
[152.52084351 422.44522095]
[166.12649536 428.77072144]
[179.34510803 435.86959839]
[192.13279724 443.71823120]
[204.44706726 452.29052734]
[216.24700928 461.55804443]
[227.49342346 471.48999023]
[238.14897156 482.05337524]
[248.17823792 493.21310425]
[257.54791260 504.93212891]
[266.22686768 517.17144775]
[274.18627930 529.89050293]
[281.39968872 543.04693604]
[287.84313965 556.59710693]
[293.49523926 570.49603271]
[298.33721924 584.69744873]
[302.35296631 599.15429688]
[305.52917480 613.81842041]
[307.85525513 628.64123535]
[309.32348633 643.57342529]
[309.92904663 658.56536865]
[309.66983032 673.56732178]
[308.54678345 688.52941895]
[306.56359863 703.40197754]
[303.72686768 718.13555908]
[300.04602051 732.68127441]
[295.53326416 746.99072266]
[290.20361328 761.01641846]
[284.07476807 774.71179199]
[277.16708374 788.03131104]
[269.50350952 800.93072510]
[261.10949707 813.36724854]
[252.01292419 825.29943848]
[242.24401855 836.68780518]
[231.83523560 847.49444580]
[220.82116699 857.68341064]
[209.23835754 867.22094727]
[197.12532043 876.07531738]
[184.52227783 884.21716309]
[171.47111511 891.61932373]
[158.01515198 898.25732422]
[144.19912720 904.10906982]
[130.06890869 909.15515137]
[115.67145538 913.37878418]
[101.05457306 916.76586914]
[86.26683807 919.30529785]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 160]
[58 159]
[59 158]
[62 155]
[63 154]
[64 153]
[66 151]
[67 150]
[69 147]
[70 146]
[71 145]
[72 144]
[73 143]
[74 142]
[78 141]
[79 140]
[80 139]
[83 137]
[84 136]
[85 135]
[88 132]
[89 131]
[90 129]
[91 128]
[92 127]
[93 126]
[94 125]
[95 123]
[96 121]
[97 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
