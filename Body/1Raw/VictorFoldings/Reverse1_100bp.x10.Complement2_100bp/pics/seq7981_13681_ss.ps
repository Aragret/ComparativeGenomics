%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[95.96547699 603.05285645]
[84.22502136 593.65765381]
[74.24135590 582.41333008]
[66.30174255 569.64343262]
[60.63461685 555.71533203]
[57.40303040 541.02984619]
[56.69996262 526.00939941]
[58.54564285 511.08621216]
[62.88697052 496.68963623]
[69.59902954 483.23391724]
[78.48870850 471.10620117]
[89.30023193 460.65542603]
[101.72252655 452.18225098]
[115.39818573 445.93048096]
[129.93371582 442.08001709]
[128.59548950 427.13983154]
[127.25725555 412.19964600]
[125.91902161 397.25946045]
[124.35849762 382.34085083]
[122.57603455 367.44714355]
[120.79356384 352.55343628]
[108.96231079 343.57806396]
[106.94246674 328.49911499]
[116.43686676 316.15026855]
[107.24199677 304.43261719]
[113.28458405 289.81079102]
[111.50212097 274.91705322]
[109.71965027 260.02334595]
[107.93718719 245.12962341]
[96.79317474 238.66120911]
[91.32791901 226.77789307]
[93.74027252 213.72450256]
[103.36987305 204.30722046]
[101.80934906 189.38861084]
[100.24882507 174.47000122]
[98.68830109 159.55140686]
[97.12778473 144.63279724]
[88.10838318 132.77954102]
[94.36800385 118.24929810]
[83.17844391 109.04386139]
[81.67102814 94.63296509]
[90.71339417 83.31122589]
[88.70938110 68.44569397]
[86.26364899 53.64642715]
[83.81792450 38.84715652]
[81.37220001 24.04788399]
[78.92646790 9.24861431]
[76.48074341 -5.55065680]
[74.03501129 -20.34992790]
[64.84140778 -26.16252327]
[60.45479965 -35.87528992]
[62.10342789 -46.18210220]
[69.00453949 -53.71786118]
[67.00052643 -68.58338928]
[64.99651337 -83.44891357]
[62.99250031 -98.31444550]
[60.98848724 -113.17996979]
[58.98447418 -128.04550171]
[55.22817230 -142.56756592]
[49.77281570 -156.54035950]
[44.31745911 -170.51315308]
[32.09101868 -180.55430603]
[34.66967773 -195.22399902]
[29.21432304 -209.19679260]
[23.75896454 -223.16958618]
[17.99293137 -237.01707458]
[11.91909790 -250.73234558]
[5.84526396 -264.44760132]
[-0.22856988 -278.16287231]
[-14.66556072 -274.00509644]
[-29.53424454 -271.85195923]
[-44.55762482 -271.74356079]
[-59.45582962 -273.68194580]
[-73.95130920 -277.63095093]
[-87.77403259 -283.51705933]
[-100.66647339 -291.23059082]
[-112.38846588 -300.62786865]
[-122.72163391 -311.53381348]
[-131.47348022 -323.74523926]
[-138.48095703 -337.03466797]
[-143.61351013 -351.15454102]
[-146.77554321 -365.84176636]
[-147.90814209 -380.82281494]
[-146.99020386 -395.81851196]
[-144.03883362 -410.54953003]
[-139.10902405 -424.74145508]
[-132.29258728 -438.12988281]
[-123.71652222 -450.46539307]
[-113.54059601 -461.51818848]
[-101.95439148 -471.08236694]
[-89.17373657 -478.97976685]
[-75.43672943 -485.06320190]
[-60.99929047 -489.21942139]
[-46.13037491 -491.37094116]
[-31.10697937 -491.47772217]
[-16.20898628 -489.53775024]
[-1.71393120 -485.58715820]
[12.10814953 -479.69955444]
[24.99975777 -471.98461914]
[36.72073364 -462.58609009]
[47.05272293 -451.67901611]
[55.80324173 -439.46664429]
[62.80927658 -426.17645264]
[67.94031525 -412.05603027]
[71.10075378 -397.36843872]
[72.23173523 -382.38729858]
[71.31217194 -367.39169312]
[68.35920715 -352.66098022]
[63.42785263 -338.46960449]
[56.60996628 -325.08190918]
[48.03256989 -312.74734497]
[37.85545349 -301.69561768]
[26.26820564 -292.13272095]
[13.48669720 -284.23672485]
[19.56053162 -270.52145386]
[25.63436508 -256.80618286]
[31.70819855 -243.09091187]
[34.84801865 -241.48658752]
[37.36675644 -238.28173828]
[38.52063751 -233.78486633]
[37.73176193 -228.62495422]
[43.18711853 -214.65214539]
[48.64247894 -200.67935181]
[60.47871399 -191.63763428]
[58.29025650 -175.96850586]
[63.74561310 -161.99571228]
[69.20097351 -148.02291870]
[71.18773651 -162.89076233]
[78.07838440 -176.21438599]
[89.06343079 -186.42852783]
[102.85234070 -192.33326721]
[117.82521820 -193.23490906]
[132.22305298 -189.02752686]
[144.35443115 -180.20539856]
[152.79412842 -167.80493164]
[156.55068970 -153.28294373]
[155.18278503 -138.34544373]
[148.85112000 -124.74728394]
[138.29953003 -114.08596039]
[124.76760101 -107.61395264]
[109.84505463 -106.09158325]
[95.28498077 -109.69770050]
[82.79786682 -118.00866699]
[73.84999847 -130.04951477]
[75.85401154 -115.18399048]
[77.85803223 -100.31845856]
[79.86204529 -85.45292664]
[81.86605835 -70.58740234]
[83.87007141 -55.72187424]
[96.77649689 -41.32357407]
[88.83428955 -22.79565430]
[91.28001404 -7.99638414]
[93.72573853 6.80288649]
[96.17147064 21.60215759]
[98.61719513 36.40142822]
[101.06291962 51.20069885]
[103.50865173 65.99996948]
[105.70632935 67.74018860]
[107.34709930 70.45578003]
[108.05600739 73.93901062]
[107.54014587 77.85032654]
[105.63199615 81.75070190]
[116.82155609 90.95613861]
[118.32897186 105.36703491]
[109.28660583 116.68877411]
[118.41761780 129.60911560]
[112.04638672 143.07226562]
[113.60691071 157.99087524]
[115.16743469 172.90948486]
[116.72795868 187.82807922]
[118.28847504 202.74668884]
[132.07737732 213.51170349]
[133.78091431 230.58251953]
[122.83090210 243.34716797]
[124.61337280 258.24087524]
[126.39583588 273.13458252]
[128.17829895 288.02832031]
[137.50067139 300.81127930]
[131.33058167 314.36779785]
[143.47090149 324.12744141]
[145.06642151 339.25717163]
[135.68728638 350.77096558]
[137.46974182 365.66467285]
[139.25221252 380.55841064]
[142.90267944 386.07070923]
[143.17973328 391.74700928]
[140.85920715 395.92123413]
[142.19743347 410.86141968]
[143.53567505 425.80160522]
[144.87390137 440.74179077]
[159.86236572 441.94772339]
[174.43138123 445.66952515]
[188.16177368 451.80010986]
[200.65849304 460.16311646]
[211.56199646 470.51791382]
[220.55856323 482.56655884]
[227.38932800 495.96240234]
[231.85777283 510.32000732]
[233.83532715 525.22631836]
[233.26509094 540.25238037]
[230.16346741 554.96588135]
[224.61970520 568.94354248]
[216.79331970 581.78314209]
[206.90945435 593.11529541]
[195.25253296 602.61395264]
[182.15791321 610.00573730]
[168.00236511 615.07806396]
[153.19317627 617.68499756]
[138.15643311 617.75146484]
[123.32477570 615.27557373]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 190]
[16 189]
[17 188]
[18 187]
[19 184]
[20 183]
[21 182]
[24 179]
[26 177]
[27 176]
[28 175]
[29 174]
[33 171]
[34 170]
[35 169]
[36 168]
[37 167]
[39 165]
[42 162]
[43 157]
[44 156]
[45 155]
[46 154]
[47 153]
[48 152]
[49 151]
[53 149]
[54 148]
[55 147]
[56 146]
[57 145]
[58 144]
[59 127]
[60 126]
[61 125]
[63 123]
[64 122]
[65 121]
[66 117]
[67 116]
[68 115]
[69 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
