%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[122.25335693 523.52313232]
[132.13774109 512.03076172]
[145.35816956 504.61480713]
[142.91244507 489.81555176]
[140.46672058 475.01626587]
[128.61692810 462.07217407]
[135.24382019 444.89178467]
[132.57801819 430.13058472]
[129.91223145 415.36935425]
[127.24642944 400.60812378]
[114.90193176 392.35290527]
[111.98815918 377.42089844]
[120.73070526 364.52883911]
[118.06491089 349.76760864]
[115.39911652 335.00640869]
[112.73331451 320.24517822]
[110.06752014 305.48394775]
[107.40172577 290.72274780]
[104.73593140 275.96151733]
[97.02469635 288.82763672]
[83.26925659 294.80993652]
[68.60005188 291.67715454]
[58.48832321 280.59777832]
[56.70550156 265.70410156]
[63.91653442 252.55111694]
[77.43188477 246.04455566]
[92.21066284 248.61122131]
[102.74127960 259.29483032]
[101.84846497 244.32142639]
[93.01213074 236.06031799]
[92.14576721 223.59303284]
[100.25791931 213.56529236]
[99.58813477 198.58024597]
[98.91835022 183.59521484]
[98.24856567 168.61016846]
[97.24430084 153.64382935]
[95.90606689 138.70364380]
[94.56783295 123.76345825]
[93.22959900 108.82327271]
[82.80552673 119.60931396]
[67.81069183 120.00312042]
[56.83483124 109.77911377]
[56.16540527 94.79405975]
[66.18589783 83.63208008]
[81.15611267 82.68726349]
[92.50000000 92.50000000]
[85.83913422 105.93997192]
[76.71627808 117.84683990]
[65.47250366 127.77545929]
[52.52816010 135.35464478]
[38.36718369 140.30102539]
[23.51899147 142.42970276]
[8.53869724 141.66107178]
[-6.01365089 138.02388000]
[-19.59400368 131.65411377]
[-31.69464874 122.78988647]
[-41.86319733 111.76261902]
[-49.71948624 98.98456573]
[-54.96980667 84.93344116]
[-57.41786575 70.13455200]
[-56.97214890 55.14117432]
[-53.64931488 40.51384735]
[-47.57358932 26.79941750]
[-38.97212219 14.51061249]
[-28.16647911 4.10685730]
[-15.56064224 -4.02289534]
[-1.62588859 -9.57470894]
[13.11682129 -12.34102535]
[28.11631966 -12.21842289]
[42.81184006 -9.21148682]
[56.65398026 -3.43263149]
[69.12524414 4.90209484]
[79.75937653 15.48109341]
[88.15881348 27.90885925]
[94.00954437 41.72077179]
[97.09283447 56.40046310]
[97.29391479 71.39304352]
[103.77340698 57.86469650]
[110.25290680 44.33635330]
[116.73239899 30.80800629]
[123.00976562 17.18469048]
[129.08360291 3.46942401]
[135.15742493 -10.24584293]
[141.23126221 -23.96110916]
[147.30509949 -37.67637634]
[152.96788025 -51.56640244]
[158.21459961 -65.61887360]
[163.46131897 -79.67134857]
[168.70803833 -93.72381592]
[173.95475769 -107.77629089]
[179.20147705 -121.82875824]
[182.52374268 -136.45622253]
[183.86196899 -151.39640808]
[185.20021057 -166.33659363]
[186.53843689 -181.27677917]
[178.40521240 -197.79743958]
[189.05293274 -211.74710083]
[190.16857910 -226.70555115]
[191.28422546 -241.66400146]
[177.35971069 -247.61267090]
[166.12286377 -257.76214600]
[158.79257202 -271.01150513]
[156.16397095 -285.92355347]
[158.52218628 -300.88073730]
[165.61143494 -314.26062012]
[176.66270447 -324.61187744]
[190.47726440 -330.81161499]
[205.55657959 -332.18740845]
[220.26498413 -328.58996582]
[233.00701904 -320.40951538]
[242.40051270 -308.53344727]
[247.42652893 -294.24996948]
[247.53988647 -279.10845947]
[242.72830200 -264.75131226]
[233.51368713 -252.73593140]
[220.89556885 -244.36563110]
[206.24269104 -240.54835510]
[205.12702942 -225.58990479]
[204.01138306 -210.63145447]
[211.66481018 -201.26387024]
[210.85777283 -188.79260254]
[201.47862244 -179.93853760]
[200.14038086 -164.99835205]
[198.80215454 -150.05816650]
[197.46391296 -135.11798096]
[205.62396240 -147.70423889]
[217.23429871 -157.20161438]
[231.18829346 -162.70489502]
[246.15594482 -163.68954468]
[260.71063232 -160.06169128]
[273.46508789 -152.16716003]
[283.20364380 -140.75836182]
[288.99807739 -126.92274475]
[290.29611206 -111.97901154]
[286.97402954 -97.35150909]
[279.34844971 -84.43444061]
[268.14620972 -74.45898438]
[254.43504333 -68.37592316]
[239.52178955 -66.76506042]
[224.82789612 -69.77993774]
[211.75389099 -77.13319397]
[201.54589844 -88.12396240]
[195.17689514 -101.70468140]
[193.25395203 -116.58203888]
[188.00723267 -102.52957153]
[182.76051331 -88.47709656]
[177.51379395 -74.42462921]
[172.26707458 -60.37215424]
[167.02035522 -46.31968307]
[168.05995178 -43.71634674]
[168.13098145 -40.54434967]
[167.01167297 -37.17054749]
[164.61703491 -34.03522491]
[161.02037048 -31.60254288]
[154.94653320 -17.88727570]
[148.87269592 -4.17200851]
[142.79885864 9.54325771]
[136.72502136 23.25852394]
[137.57919312 27.95740318]
[135.49061584 33.24274826]
[130.26074219 37.28750229]
[123.78125000 50.81584930]
[117.30175781 64.34419250]
[110.82225800 77.87253571]
[107.50000000 92.50000000]
[108.16978455 107.48503876]
[109.50801849 122.42522430]
[110.84625244 137.36540222]
[112.18448639 152.30558777]
[115.18875885 156.57424927]
[116.15829468 161.11444092]
[115.33038330 165.10562134]
[113.23360443 167.94038391]
[113.90338898 182.92543030]
[114.57317352 197.91046143]
[115.24295807 212.89550781]
[125.51043701 228.18145752]
[116.82186890 243.42860413]
[117.71468353 258.40200806]
[119.49714661 273.29574585]
[122.16294098 288.05694580]
[124.82874298 302.81817627]
[127.49453735 317.57937622]
[130.16032410 332.34060669]
[132.82612610 347.10180664]
[135.49192810 361.86303711]
[148.19161987 370.88275146]
[150.68484497 385.89071655]
[142.00764465 397.94235229]
[144.67344666 412.70355225]
[147.33923340 427.46478271]
[150.00503540 442.22598267]
[160.13670349 450.20797729]
[162.05316162 462.55752563]
[155.26599121 472.57055664]
[157.71171570 487.36981201]
[160.15744019 502.16909790]
[175.06089783 504.93728638]
[188.11721802 512.63848877]
[197.74977112 524.34271240]
[202.79541016 538.63665771]
[202.64482117 553.79431152]
[197.31620789 567.98516846]
[187.45301819 579.49578857]
[174.24627686 586.93603516]
[159.29077148 589.40759277]
[144.39244080 586.61193848]
[131.35034180 578.88671875]
[121.73936462 567.16473389]
[116.72007751 552.86151123]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 197]
[4 196]
[5 195]
[7 192]
[8 191]
[9 190]
[10 189]
[13 186]
[14 185]
[15 184]
[16 183]
[17 182]
[18 181]
[19 180]
[28 179]
[29 178]
[32 176]
[33 175]
[34 174]
[35 173]
[36 169]
[37 168]
[38 167]
[39 166]
[46 165]
[77 164]
[78 163]
[79 162]
[80 161]
[81 158]
[82 157]
[83 156]
[84 155]
[85 154]
[86 149]
[87 148]
[88 147]
[89 146]
[90 145]
[91 144]
[92 125]
[93 124]
[94 123]
[95 122]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
