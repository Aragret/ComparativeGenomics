%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[60.78717041 575.70477295]
[59.22664642 560.78613281]
[57.66612244 545.86755371]
[56.10560226 530.94891357]
[54.54507828 516.03033447]
[48.31129837 529.67364502]
[37.38346481 539.94897461]
[23.38266182 545.33203125]
[8.38581848 545.02429199]
[-5.38236952 539.07141113]
[-15.87947369 528.35644531]
[-21.54831123 514.46887207]
[-21.54794312 499.46887207]
[-15.87842369 485.58157349]
[-5.38079405 474.86712646]
[8.38768578 468.91488647]
[23.38454437 468.60787964]
[37.38508606 473.99163818]
[48.31241226 484.26751709]
[54.54507828 497.90927124]
[56.10560226 482.99069214]
[57.66612244 468.07208252]
[59.22664642 453.15347290]
[57.30231094 450.19894409]
[56.71342850 446.16552734]
[57.95147705 441.69110107]
[61.20449829 437.60882568]
[63.42961884 422.77478027]
[65.65473175 407.94076538]
[67.87985229 393.10671997]
[65.81188965 388.80175781]
[66.42631531 383.15203857]
[70.39840698 377.86676025]
[73.06420135 363.10552979]
[75.72999573 348.34432983]
[78.39579010 333.58309937]
[71.75845337 323.47012329]
[73.85856628 311.15051270]
[84.10794830 303.32025146]
[86.99321747 288.60034180]
[88.55374146 273.68173218]
[88.77706909 258.68341064]
[89.00039673 243.68507385]
[89.22372437 228.68673706]
[89.44705200 213.68840027]
[89.67037964 198.69006348]
[86.62681580 191.95518494]
[90.01034546 183.47052002]
[90.45694733 168.47717285]
[90.90355682 153.48382568]
[91.35015869 138.49046326]
[83.99523163 125.53847504]
[92.13998413 111.97478485]
[85.68240356 99.57352448]
[92.86666870 87.57860565]
[93.31327820 72.58525848]
[93.75988007 57.59190750]
[78.13359070 46.53954697]
[72.37142944 28.44515610]
[78.62932587 10.67531013]
[94.20783997 0.35043442]
[93.98450470 -14.64790249]
[86.04260254 -28.33134842]
[93.58955383 -41.17240524]
[93.36622620 -56.17074585]
[93.14289856 -71.16908264]
[92.91957092 -86.16741943]
[92.69624329 -101.16575623]
[81.63713837 -112.13544464]
[81.62431335 -127.34907532]
[92.15038300 -137.82463074]
[91.92705536 -152.82296753]
[83.98515320 -166.50640869]
[91.53210449 -179.34747314]
[91.30877686 -194.34580994]
[91.08544922 -209.34414673]
[90.86212158 -224.34248352]
[87.60529327 -232.87658691]
[90.74879456 -239.56539917]
[88.13732910 -244.08505249]
[87.57672119 -248.69363403]
[88.75740814 -252.59504700]
[91.09873199 -255.23144531]
[91.76851654 -270.21649170]
[92.43830109 -285.20150757]
[79.60240173 -293.51937866]
[72.69890594 -307.05593872]
[73.49264526 -322.13031006]
[81.67043304 -334.69931030]
[94.95207214 -341.44198608]
[95.62185669 -356.42700195]
[96.29164886 -371.41204834]
[81.69581604 -375.09265137]
[68.13981628 -381.63632202]
[56.17874908 -390.77511597]
[46.30241394 -402.13482666]
[38.91524124 -415.25027466]
[34.31973267 -429.58435059]
[32.70406723 -444.55014038]
[34.13441086 -459.53475952]
[38.55218506 -473.92462158]
[45.77649307 -487.13046265]
[55.51149750 -498.61151123]
[67.35855865 -507.89764404]
[80.83254242 -514.60858154]
[95.38170624 -518.46948242]
[110.41026306 -519.32232666]
[125.30281067 -517.13208008]
[139.44950867 -511.98855591]
[152.27104187 -504.10229492]
[163.24238586 -493.79626465]
[171.91429138 -481.49249268]
[177.93162537 -467.69479370]
[181.04797363 -452.96817017]
[181.13575745 -437.91567993]
[178.19134521 -423.15371704]
[172.33534241 -409.28680420]
[163.80752563 -396.88272095]
[152.95710754 -386.44943237]
[140.22842407 -378.41418457]
[126.14266968 -373.10601807]
[111.27668762 -370.74227905]
[110.60689545 -355.75723267]
[109.93711090 -340.77218628]
[122.56424713 -332.87149048]
[129.58807373 -319.62301636]
[129.03376770 -304.53796387]
[120.95013428 -291.67126465]
[107.42333984 -284.53173828]
[106.75355530 -269.54669189]
[106.08377075 -254.56166077]
[105.74879456 -239.56539917]
[105.86045837 -224.56581116]
[106.08378601 -209.56747437]
[106.30711365 -194.56913757]
[106.53044128 -179.57080078]
[114.45637512 -166.96014404]
[106.92539978 -153.04629517]
[107.14872742 -138.04795837]
[117.98202515 -127.89044189]
[118.42217255 -112.68318176]
[107.69458008 -101.38908386]
[107.91790771 -86.39074707]
[108.14123535 -71.39241028]
[108.36456299 -56.39407349]
[108.58789062 -41.39573288]
[116.51382446 -28.78507042]
[108.98284912 -14.87123108]
[109.20617676 0.12710671]
[119.37682343 4.71061373]
[127.13792419 12.79538059]
[131.34060669 23.23991394]
[131.34217834 34.54959106]
[127.10414124 45.09051132]
[119.20322418 53.32555771]
[108.75322723 58.03851318]
[108.30662537 73.03186035]
[107.86001587 88.02521515]
[114.31759644 100.42647552]
[107.13333130 112.42139435]
[114.45632172 126.44581604]
[106.34351349 138.93707275]
[105.89690399 153.93041992]
[105.45030212 168.92378235]
[105.00369263 183.91712952]
[104.66871643 198.91339111]
[104.44538879 213.91172791]
[104.22206116 228.91006470]
[103.99873352 243.90840149]
[103.77540588 258.90673828]
[103.55207825 273.90505981]
[111.86793518 261.42123413]
[124.73249817 253.70739746]
[139.66181946 252.25303650]
[153.77330017 257.33892822]
[164.34220886 267.98309326]
[169.32786560 282.13027954]
[167.76762390 297.04891968]
[159.96273804 309.85842896]
[147.42019653 318.08551025]
[132.56178284 320.14166260]
[118.25643158 315.62982178]
[107.26625824 305.42117310]
[101.71311188 291.48562622]
[98.82783508 306.20550537]
[105.19819641 323.48266602]
[93.15701294 336.24890137]
[90.49121094 351.01013184]
[87.82541656 365.77133179]
[85.15962219 380.53256226]
[82.71389771 395.33181763]
[80.48877716 410.16586304]
[78.26366425 424.99990845]
[76.03854370 439.83395386]
[74.14524841 454.71398926]
[72.58473206 469.63259888]
[71.02420807 484.55120850]
[69.46368408 499.46981812]
[69.46368408 514.46978760]
[71.02420807 529.38842773]
[72.58473206 544.30700684]
[74.14524841 559.22564697]
[75.70577240 574.14422607]
[89.20698547 581.79254150]
[95.60346985 595.92987061]
[92.43563843 611.12017822]
[80.92160034 621.52239990]
[65.48872375 623.13671875]
[52.07127380 615.34240723]
[45.82853317 601.13647461]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 203]
[2 202]
[3 201]
[4 200]
[5 199]
[20 198]
[21 197]
[22 196]
[23 195]
[27 194]
[28 193]
[29 192]
[30 191]
[33 190]
[34 189]
[35 188]
[36 187]
[39 185]
[40 184]
[41 171]
[42 170]
[43 169]
[44 168]
[45 167]
[46 166]
[48 165]
[49 164]
[50 163]
[51 162]
[53 160]
[55 158]
[56 157]
[57 156]
[61 149]
[62 148]
[64 146]
[65 145]
[66 144]
[67 143]
[68 142]
[71 139]
[72 138]
[74 136]
[75 135]
[76 134]
[77 133]
[79 132]
[83 131]
[84 130]
[85 129]
[90 124]
[91 123]
[92 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
