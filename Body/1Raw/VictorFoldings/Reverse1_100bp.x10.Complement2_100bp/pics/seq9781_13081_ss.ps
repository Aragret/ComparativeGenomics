%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[190.44050598 420.42446899]
[197.51193237 407.14630127]
[206.90299988 395.39376831]
[218.29385376 385.56710815]
[231.29650879 378.00100708]
[226.25959778 363.87197876]
[221.22268677 349.74295044]
[216.18576050 335.61392212]
[211.14884949 321.48489380]
[206.11193848 307.35586548]
[194.55015564 297.96575928]
[197.20416260 282.36874390]
[192.16725159 268.23971558]
[187.13032532 254.11067200]
[180.55030823 240.63095093]
[172.50912476 227.96841431]
[157.96159363 224.98434448]
[149.62631226 212.25729370]
[152.85493469 197.01872253]
[144.81375122 184.35620117]
[136.77258301 171.69367981]
[128.73141479 159.03115845]
[120.69023895 146.36862183]
[112.64906311 133.70610046]
[104.60788727 121.04357910]
[96.56671906 108.38105011]
[92.95992279 107.01597595]
[89.97235107 104.06771088]
[88.29757690 99.84845734]
[88.46389771 94.96868134]
[80.99615479 81.95973206]
[73.52841949 68.95077515]
[66.06067657 55.94182205]
[52.47998810 47.82544708]
[52.85400391 32.93553925]
[45.38626099 19.92658806]
[46.30061722 34.89869308]
[44.31652832 49.76689529]
[39.50816727 63.97533035]
[32.05530167 76.99281311]
[22.23655891 88.33266449]
[10.41902256 97.57094574]
[-2.95550013 104.36227417]
[-17.38699341 108.45275116]
[-32.33592606 109.68944550]
[-47.24341965 108.02613831]
[-61.55215073 103.52499390]
[-74.72717285 96.35430145]
[-86.27592468 86.78214264]
[-95.76665497 75.16637421]
[-102.84454346 61.94126511]
[-107.24497986 47.60124588]
[-108.80344391 32.68242645]
[-107.46167755 17.74255753]
[-103.26984406 3.34017777]
[-96.38465118 -9.98626804]
[-87.06352234 -21.73856354]
[-75.65491486 -31.47733688]
[-62.58535767 -38.83850098]
[-48.34346771 -43.54685211]
[-33.46168518 -45.42636108]
[-18.49637794 -44.40676880]
[-4.00703478 -40.52618408]
[9.46465111 -33.92969513]
[21.41502953 -24.86391068]
[31.39732742 -13.66776180]
[39.03576279 -0.76535225]
[37.92011261 -15.72380543]
[36.80446625 -30.68225861]
[35.68881607 -45.64071274]
[34.23939896 -60.57052231]
[32.45693207 -75.46424103]
[30.67446518 -90.35795593]
[27.54442978 -94.53527069]
[26.44015121 -99.04457855]
[27.14886284 -103.05865479]
[29.16031075 -105.95458221]
[28.04466248 -120.91303253]
[26.92901421 -135.87149048]
[25.81336594 -150.82994080]
[24.69771576 -165.78839111]
[23.58206749 -180.74684143]
[22.46641922 -195.70530701]
[7.48290586 -196.88630676]
[-7.14470243 -200.34078979]
[-21.07351303 -205.98779297]
[-33.97701645 -213.69494629]
[-45.55273438 -223.28155518]
[-55.52931213 -234.52291870]
[-63.67289352 -247.15551758]
[-69.79257202 -260.88323975]
[-73.74489594 -275.38424683]
[-75.43722534 -290.31866455]
[-74.82987976 -305.33636475]
[-71.93709564 -320.08532715]
[-66.82669067 -334.21984863]
[-59.61845398 -347.40853882]
[-50.48136520 -359.34228516]
[-39.62960052 -369.74130249]
[-27.31755066 -378.36184692]
[-13.83382034 -385.00183105]
[0.50550872 -389.50561523]
[15.36430359 -391.76760864]
[30.39425278 -391.73480225]
[45.24303055 -389.40795898]
[59.56256485 -384.84164429]
[73.01718140 -378.14285278]
[85.29148102 -369.46862793]
[96.09774780 -359.02233887]
[105.18266296 -347.04882812]
[112.33325195 -333.82879639]
[117.38191223 -319.67211914]
[120.21028137 -304.91067505]
[120.75206757 -289.89044189]
[118.99456787 -274.96356201]
[114.97897339 -260.47994995]
[108.79943085 -246.77908325]
[100.60078430 -234.18214417]
[90.57522583 -222.98443604]
[78.95777130 -213.44845581]
[66.02075195 -205.79769897]
[52.06742096 -200.21156311]
[37.42487335 -196.82095337]
[38.54051971 -181.86250305]
[39.65616989 -166.90403748]
[40.77182007 -151.94558716]
[41.88746643 -136.98713684]
[43.00311661 -122.02868652]
[44.11876297 -107.07022858]
[45.56818390 -92.14041901]
[47.35065079 -77.24670410]
[49.13311386 -62.35298538]
[51.66403961 -59.89804077]
[53.13162994 -56.09524918]
[52.91534424 -51.45773697]
[50.64727020 -46.75636292]
[51.76292038 -31.79790688]
[52.87856674 -16.83945465]
[53.99421692 -1.88100088]
[58.39521408 12.45884609]
[65.86295319 25.46779823]
[78.90950012 32.65368652]
[79.06962585 48.47408295]
[86.53736877 61.48303604]
[94.00511169 74.49198914]
[101.47285461 87.50093842]
[109.22924042 100.33988190]
[117.27041626 113.00240326]
[125.31159210 125.66493225]
[133.35276794 138.32745361]
[141.39393616 150.98997498]
[149.43510437 163.65251160]
[157.47628784 176.31503296]
[165.51745605 188.97755432]
[180.68251038 192.53544617]
[188.65702820 205.49160767]
[185.17166138 219.92724609]
[193.21282959 232.58976746]
[192.49153137 217.60713196]
[197.16207886 203.35279846]
[206.61001587 191.70219421]
[219.59226990 184.18814087]
[234.40081787 181.79925537]
[249.08734131 184.84982300]
[261.71957397 192.93850708]
[270.63552856 205.00108337]
[274.66217041 219.45051575]
[273.26968384 234.38574219]
[266.64132690 247.84178162]
[255.64913940 258.04824829]
[241.73933411 263.66229248]
[226.74200439 263.94531250]
[212.63031006 258.86007690]
[201.25935364 249.07376099]
[206.29627991 263.20278931]
[211.33319092 277.33181763]
[223.25524902 287.73254395]
[220.24096680 302.31896973]
[225.27787781 316.44799805]
[230.31478882 330.57702637]
[235.35171509 344.70605469]
[240.38862610 358.83508301]
[245.42553711 372.96411133]
[260.28213501 370.59851074]
[275.32046509 371.00332642]
[290.02825928 374.16479492]
[303.90466309 379.97515869]
[316.47698975 388.23660278]
[327.31704712 398.66769409]
[336.05563354 410.91317749]
[342.39508057 424.55596924]
[346.11953735 439.13140869]
[347.10211182 454.14303589]
[345.30932617 469.07958984]
[340.80224609 483.43231201]
[333.73440552 496.71240234]
[324.34649658 508.46746826]
[312.95831299 518.29718018]
[299.95767212 525.86676025]
[285.78744507 530.91839600]
[270.93020630 533.27996826]
[255.89199829 532.87109375]
[241.18502808 529.70568848]
[227.31021118 523.89154053]
[214.74011230 515.62677002]
[203.90286255 505.19271851]
[195.16758728 492.94488525]
[188.83178711 479.30038452]
[185.11128235 464.72396851]
[184.13276672 449.71206665]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 183]
[6 182]
[7 181]
[8 180]
[9 179]
[10 178]
[12 176]
[13 175]
[14 174]
[15 158]
[16 157]
[19 154]
[20 153]
[21 152]
[22 151]
[23 150]
[24 149]
[25 148]
[26 147]
[30 146]
[31 145]
[32 144]
[33 143]
[35 141]
[36 140]
[67 139]
[68 138]
[69 137]
[70 136]
[71 132]
[72 131]
[73 130]
[77 129]
[78 128]
[79 127]
[80 126]
[81 125]
[82 124]
[83 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
