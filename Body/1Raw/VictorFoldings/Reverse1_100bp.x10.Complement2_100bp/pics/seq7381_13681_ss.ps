%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[59.63764572 264.84817505]
[59.38731003 279.85522461]
[57.86518097 294.78695679]
[55.08222580 309.53582764]
[51.05849457 323.99554443]
[45.82297516 338.06192017]
[39.41339874 351.63363647]
[31.87594223 364.61285400]
[23.26491356 376.90612793]
[13.64235878 388.42480469]
[3.07760811 399.08593750]
[-8.35321712 408.81271362]
[-20.56775665 417.53503418]
[-33.47800446 425.19006348]
[-46.99093628 431.72262573]
[-61.00919342 437.08569336]
[-75.43177032 441.24057007]
[-90.15475464 444.15737915]
[-105.07205963 445.81503296]
[-120.07620239 446.20166016]
[-135.05908203 445.31442261]
[-149.91273499 443.15975952]
[-164.53015137 439.75314331]
[-178.80601501 435.11917114]
[-192.63745117 429.29119873]
[-205.92480469 422.31121826]
[-218.57234192 414.22952271]
[-230.48892212 405.10437012]
[-241.58871460 395.00146484]
[-251.79171753 383.99362183]
[-261.02444458 372.16015625]
[-269.22033691 359.58633423]
[-276.32034302 346.36273193]
[-282.27334595 332.58465576]
[-287.03643799 318.35134888]
[-290.57525635 303.76538086]
[-292.86437988 288.93182373]
[-293.88723755 273.95761108]
[-293.63653564 258.95059204]
[-292.11401367 244.01887512]
[-289.33065796 229.27008057]
[-285.30654907 214.81047058]
[-280.07067871 200.74421692]
[-273.66076660 187.17268372]
[-266.12295532 174.19363403]
[-257.51162720 161.90060425]
[-247.88876343 150.38215637]
[-237.32374573 139.72129822]
[-225.89265442 129.99482727]
[-213.67790222 121.27281952]
[-200.76745605 113.61812592]
[-187.25434875 107.08590698]
[-173.23596191 101.72322083]
[-158.81326294 97.56870270]
[-144.09020996 94.65229034]
[-129.17286682 92.99500275]
[-114.16870880 92.60877228]
[-99.18585205 93.49638367]
[-84.33225250 95.65144348]
[-69.71492004 99.05841827]
[-55.43918610 103.69277191]
[-41.60790634 109.52111053]
[-28.32073212 116.50142670]
[-15.67340469 124.58344269]
[-3.75704861 133.70892334]
[7.34247732 143.81210327]
[17.54519844 154.82020569]
[29.37146950 145.59310913]
[41.19773865 136.36601257]
[46.47262573 122.43672943]
[62.11245346 120.04792023]
[73.93872070 110.82082367]
[85.76499176 101.59372711]
[91.18876648 88.70674133]
[105.00791168 86.58000946]
[116.83418274 77.35290527]
[128.66044617 68.12580872]
[140.48672485 58.89871216]
[152.10398865 49.40981293]
[163.50643921 39.66384888]
[174.83604431 29.83326530]
[186.09213257 19.91861534]
[197.34823608 10.00396347]
[208.60432434 0.08931257]
[219.86042786 -9.82533836]
[210.67640686 -21.69152069]
[202.26347351 -34.11630249]
[194.65551758 -47.04965210]
[187.88316345 -60.43948746]
[181.97367859 -74.23189545]
[176.95086670 -88.37134552]
[172.83494568 -102.80088806]
[169.64250183 -117.46242523]
[167.38638306 -132.29693604]
[166.07565308 -147.24465942]
[165.71562195 -162.24542236]
[166.30773926 -177.23881531]
[167.84957886 -192.16447449]
[170.33497620 -206.96228027]
[173.75392151 -221.57267761]
[178.09262085 -235.93679810]
[183.33361816 -249.99684143]
[189.45579529 -263.69616699]
[196.43453979 -276.97958374]
[204.24169922 -289.79367065]
[212.84588623 -302.08679199]
[222.21241760 -313.80944824]
[232.30358887 -324.91442871]
[243.07876587 -335.35702515]
[254.49456787 -345.09521484]
[266.50500488 -354.08975220]
[279.06176758 -362.30441284]
[292.11422729 -369.70614624]
[305.60986328 -376.26513672]
[319.49432373 -381.95495605]
[333.71170044 -386.75271606]
[348.20477295 -390.63909912]
[362.91513062 -393.59844971]
[377.78356934 -395.61883545]
[392.75021362 -396.69216919]
[407.75479126 -396.81405640]
[422.73690796 -395.98406982]
[437.63623047 -394.20550537]
[452.39273071 -391.48556519]
[466.94699097 -387.83517456]
[481.24047852 -383.26904297]
[495.21554565 -377.80557251]
[508.81597900 -371.46670532]
[521.98699951 -364.27804565]
[534.67553711 -356.26846313]
[546.83050537 -347.47027588]
[558.40307617 -337.91885376]
[569.34649658 -327.65270996]
[579.61676025 -316.71313477]
[589.17248535 -305.14422607]
[597.97528076 -292.99252319]
[605.98962402 -280.30700684]
[613.18328857 -267.13870239]
[619.52722168 -253.54064941]
[624.99597168 -239.56762695]
[629.56750488 -225.27589417]
[633.22338867 -210.72299194]
[635.94885254 -195.96751404]
[637.73303223 -181.06887817]
[638.56866455 -166.08708191]
[638.45239258 -151.08244324]
[637.38470459 -136.11538696]
[635.36993408 -121.24619293]
[632.41613770 -106.53471375]
[628.53521729 -92.04019928]
[623.74279785 -77.82101440]
[618.05816650 -63.93441010]
[611.50427246 -50.43630600]
[604.10742188 -37.38105011]
[595.89752197 -24.82121849]
[586.90747070 -12.80738354]
[577.17364502 -1.38791823]
[566.73504639 9.39119244]
[555.63391113 19.48654556]
[543.91473389 28.85749054]
[531.62487793 37.46629333]
[518.81372070 45.27828598]
[505.53292847 52.26201630]
[491.83590698 58.38936615]
[477.77786255 63.63565445]
[463.41537476 67.97975922]
[448.80627441 71.40419006]
[434.00939941 73.89515686]
[419.08432007 75.44262695]
[404.09112549 76.04037476]
[389.09024048 75.68598938]
[374.14202881 74.38090515]
[359.30667114 72.13036346]
[344.64392090 68.94342804]
[330.21282959 64.83294678]
[316.07150269 59.81545639]
[302.27685547 53.91117096]
[288.88449097 47.14385605]
[275.94827271 39.54076767]
[263.52032471 31.13251686]
[251.65068054 21.95296288]
[240.38714600 12.03907013]
[229.77507019 1.43075716]
[218.51898193 11.34540844]
[207.26287842 21.26005936]
[196.00679016 31.17471123]
[184.75068665 41.08936310]
[181.80914307 47.86941528]
[173.25241089 51.06631088]
[161.84994507 60.81227493]
[161.21160889 64.27996826]
[158.86195374 67.61075592]
[154.88362122 70.00368500]
[149.71382141 70.72498322]
[137.88754272 79.95207977]
[126.06127930 89.17917633]
[114.23500824 98.40627289]
[108.81123352 111.29325867]
[94.99208832 113.41999054]
[83.16581726 122.64709473]
[71.33955383 131.87419128]
[65.21877289 146.46345520]
[50.42483521 148.19227600]
[38.59856796 157.41937256]
[26.77229691 166.64646912]
[34.96851730 179.22009277]
[42.06888199 192.44351196]
[48.02223587 206.22143555]
[52.78567886 220.45462036]
[56.32489777 235.04049683]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 205]
[68 204]
[69 203]
[71 201]
[72 200]
[73 199]
[75 197]
[76 196]
[77 195]
[78 194]
[79 190]
[80 189]
[81 187]
[82 186]
[83 185]
[84 184]
[85 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
