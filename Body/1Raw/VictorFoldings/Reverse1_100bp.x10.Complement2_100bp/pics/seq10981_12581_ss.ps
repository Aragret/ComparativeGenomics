%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[136.97735596 413.77316284]
[131.00802612 400.00567627]
[125.99213409 385.86291504]
[121.95307922 371.41082764]
[118.90969086 356.71679688]
[116.87615967 341.84933472]
[115.86196136 326.87774658]
[115.87182617 311.87185669]
[116.90571594 296.90164185]
[118.95880127 282.03686523]
[122.02150726 267.34683228]
[126.07956696 252.90008545]
[131.11404419 238.76393127]
[137.10148621 225.00430298]
[144.01396179 211.68534851]
[151.81924438 198.86917114]
[160.48092651 186.61552429]
[169.95864868 174.98155212]
[159.00274658 164.73616028]
[148.04682922 154.49076843]
[137.09092712 144.24537659]
[126.13501740 133.99998474]
[115.10314178 123.83643341]
[103.99590302 113.75529480]
[90.37322235 110.60662842]
[85.92295837 97.35193634]
[74.81571960 87.27079773]
[59.39688492 83.72537231]
[55.17261887 69.44234467]
[44.06538773 59.36120605]
[32.95815277 49.28006744]
[21.85091972 39.19892883]
[10.74368572 29.11778831]
[-0.36354780 19.03664970]
[-11.47078133 8.95551109]
[-22.57801437 -1.12562799]
[-37.99685287 -4.67105818]
[-42.22111511 -18.95408440]
[-53.32835007 -29.03522301]
[-64.43558502 -39.11636353]
[-75.54281616 -49.19750214]
[-86.53602600 -38.97873306]
[-98.35624695 -29.72907448]
[-110.91831970 -21.51517296]
[-124.13172913 -14.39620876]
[-137.90127563 -8.42347622]
[-152.12773132 -3.64000845]
[-166.70861816 -0.08027238]
[-181.53886414 2.23008418]
[-196.51161194 3.27441502]
[-211.51898193 3.04519510]
[-226.45285034 1.54407632]
[-241.20562744 -1.21812570]
[-255.67098999 -5.22150850]
[-269.74472046 -10.43722820]
[-283.32543945 -16.82770348]
[-296.31527710 -24.34689140]
[-308.62060547 -32.94061279]
[-320.15283203 -42.54695129]
[-330.82882690 -53.09669113]
[-340.57168579 -64.51381683]
[-349.31118774 -76.71607208]
[-356.98434448 -89.61553955]
[-363.53591919 -103.11926270]
[-368.91870117 -117.12996674]
[-373.09387207 -131.54667664]
[-376.03137207 -146.26554871]
[-377.71005249 -161.18049622]
[-378.11776733 -176.18408203]
[-377.25161743 -191.16819763]
[-375.11785889 -206.02487183]
[-371.73181152 -220.64707947]
[-367.11791992 -234.92942810]
[-361.30941772 -248.76905823]
[-354.34814453 -262.06622314]
[-346.28427124 -274.72509766]
[-337.17587280 -286.65454102]
[-327.08859253 -297.76852417]
[-316.09512329 -307.98699951]
[-304.27465820 -317.23635864]
[-291.71237183 -325.44992065]
[-278.49877930 -332.56854248]
[-264.72909546 -338.54092407]
[-250.50250244 -343.32403564]
[-235.92152405 -346.88339233]
[-221.09123230 -349.19335938]
[-206.11845398 -350.23730469]
[-191.11108398 -350.00769043]
[-176.17724609 -348.50619507]
[-161.42456055 -345.74362183]
[-146.95928955 -341.73986816]
[-132.88569641 -336.52377319]
[-119.30514526 -330.13293457]
[-106.31551361 -322.61343384]
[-94.01037598 -314.01937866]
[-82.47840881 -304.41275024]
[-71.80268860 -293.86273193]
[-62.06013870 -282.44534302]
[-53.32095337 -270.24285889]
[-45.64810944 -257.34320068]
[-39.09687805 -243.83930969]
[-33.71446991 -229.82847595]
[-29.53966522 -215.41165161]
[-26.60254288 -200.69271851]
[-24.92426491 -185.77770996]
[-24.51692200 -170.77412415]
[-25.38345337 -155.79002380]
[-27.51761055 -140.93341064]
[-30.90402031 -126.31129456]
[-35.51828384 -112.02905273]
[-41.32714844 -98.18958282]
[-48.28876877 -84.89260864]
[-56.35297775 -72.23391724]
[-65.46167755 -60.30473328]
[-54.35444641 -50.22359467]
[-43.24721146 -40.14245605]
[-32.13997650 -30.06131744]
[-17.51560593 -27.23695946]
[-12.49687672 -12.23286152]
[-1.38964272 -2.15172291]
[9.71759129 7.92941570]
[20.82482529 18.01055527]
[31.93205833 28.09169388]
[43.03929138 38.17283249]
[54.14652634 48.25397110]
[65.25376129 58.33510971]
[79.87812805 61.15946960]
[84.89685822 76.16356659]
[96.00409698 86.24470520]
[109.62677765 89.39337158]
[114.07704163 102.64806366]
[125.18428040 112.72920227]
[133.64202881 116.17944336]
[136.38040161 123.04406738]
[147.33631897 133.28945923]
[158.29222107 143.53485107]
[169.24813843 153.78024292]
[180.20404053 164.02563477]
[191.17738342 153.79028320]
[202.82362366 144.32762146]
[215.08848572 135.68180847]
[227.91474915 127.89313507]
[241.24264526 120.99791718]
[255.01000977 115.02830505]
[269.15267944 110.01213074]
[283.60467529 105.97278595]
[298.29864502 102.92910004]
[313.16607666 100.89526367]
[328.13763428 99.88076782]
[343.14352417 99.89033508]
[358.11376953 100.92391968]
[372.97857666 102.97670746]
[387.66867065 106.03912354]
[402.11550903 110.09688568]
[416.25173950 115.13108826]
[430.01150513 121.11824799]
[443.33059692 128.03045654]
[456.14691162 135.83546448]
[468.40075684 144.49691772]
[480.03491211 153.97441101]
[490.99520874 164.22375488]
[501.23046875 175.19715881]
[510.69305420 186.84346008]
[519.33880615 199.10836792]
[527.12738037 211.93469238]
[534.02252197 225.26263428]
[539.99200439 239.03004456]
[545.00811768 253.17272949]
[549.04736328 267.62475586]
[552.09094238 282.31875610]
[554.12469482 297.18618774]
[555.13909912 312.15774536]
[555.12939453 327.16363525]
[554.09570312 342.13388062]
[552.04284668 356.99868774]
[548.98034668 371.68875122]
[544.92248535 386.13555908]
[539.88818359 400.27178955]
[533.90093994 414.03149414]
[526.98864746 427.35052490]
[519.18353271 440.16680908]
[510.52197266 452.42056274]
[501.04440308 464.05468750]
[490.79501343 475.01489258]
[479.82153320 485.25012207]
[468.17514038 494.71261597]
[455.91018677 503.35824585]
[443.08380127 511.14675903]
[429.75582886 518.04180908]
[415.98837280 524.01123047]
[401.84564209 529.02722168]
[387.39358521 533.06634521]
[372.69958496 536.10986328]
[357.83212280 538.14349365]
[342.86056519 539.15777588]
[327.85467529 539.14801025]
[312.88442993 538.11425781]
[298.01965332 536.06121826]
[283.32962036 532.99865723]
[268.88281250 528.94067383]
[254.74664307 523.90631104]
[240.98696899 517.91894531]
[227.66796875 511.00656128]
[214.85174561 503.20135498]
[202.59803772 494.53976440]
[190.96398926 485.06210327]
[180.00386047 474.81262207]
[169.76870728 463.83908081]
[160.30630493 452.19262695]
[151.66073608 439.92761230]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 138]
[19 137]
[20 136]
[21 135]
[22 134]
[23 132]
[24 131]
[26 129]
[27 128]
[29 126]
[30 125]
[31 124]
[32 123]
[33 122]
[34 121]
[35 120]
[36 119]
[38 117]
[39 116]
[40 115]
[41 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
