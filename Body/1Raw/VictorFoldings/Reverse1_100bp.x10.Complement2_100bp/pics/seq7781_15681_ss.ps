%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[91.85557556 533.32586670]
[80.13892365 542.76605225]
[66.84732056 549.81799316]
[52.46124649 554.22680664]
[37.50075150 555.83306885]
[22.50664711 554.57873535]
[8.02096081 550.50915527]
[-5.43266010 543.77142334]
[-17.36787415 534.60919189]
[-27.35323143 523.35357666]
[-35.02776718 510.41146851]
[-40.11405182 496.25073242]
[-42.42822266 481.38327026]
[-41.88661575 466.34655762]
[-38.50881958 451.68411255]
[-32.41693115 437.92602539]
[-23.83117485 425.56958008]
[-13.06191540 415.06152344]
[-0.49845767 406.78164673]
[13.40503788 401.02932739]
[28.14596939 398.01245117]
[43.19145966 397.84011841]
[37.83921432 383.94039917]
[47.90591049 371.73498535]
[50.57170486 356.97375488]
[53.23749924 342.21255493]
[55.90329742 327.45132446]
[50.55105209 313.55157471]
[60.61774445 301.34616089]
[63.28354263 286.58496094]
[65.94933319 271.82373047]
[68.61513519 257.06250000]
[71.17096710 242.28186035]
[73.39608002 227.44781494]
[75.40009308 212.58229065]
[67.86962128 196.73114014]
[79.24558258 182.25119019]
[81.02804565 167.35746765]
[82.81050873 152.46374512]
[84.59297943 137.57003784]
[72.85559082 146.90992737]
[57.85791397 146.64579773]
[46.45668793 136.89837646]
[43.86440277 122.12407684]
[51.26620865 109.07749939]
[65.27810669 103.72335815]
[79.49404144 108.50950623]
[87.41506958 121.24958801]
[90.73732758 106.62212372]
[79.04856110 116.02280426]
[64.14460754 117.71755981]
[50.64361954 111.18125153]
[42.72902298 98.43923187]
[42.85324478 83.43974304]
[50.97779083 70.83055115]
[64.58518219 64.51874542]
[79.45902252 66.46010590]
[90.99048615 76.05309296]
[95.60643768 90.32545471]
[100.85315704 76.27298737]
[106.09987640 62.22051239]
[111.24183655 48.12937164]
[116.27874756 34.00034332]
[121.31566620 19.87131310]
[126.35258484 5.74228334]
[131.38949585 -8.38674641]
[136.10963440 -22.62473488]
[140.51063538 -36.96458054]
[144.91163635 -51.30442810]
[131.18698120 -45.25182343]
[117.15306854 -50.54798889]
[110.84915924 -64.15904236]
[115.88641357 -78.28794861]
[129.37927246 -84.84103394]
[143.59840393 -80.06439209]
[150.39836121 -66.69524384]
[156.06115723 -80.58527374]
[161.72393799 -94.47530365]
[167.38673401 -108.36532593]
[173.04951477 -122.25535583]
[178.71229553 -136.14538574]
[184.37509155 -150.03541565]
[188.98908997 -164.30813599]
[192.52876282 -178.88452148]
[196.06843567 -193.46089172]
[199.60810852 -208.03726196]
[203.03916931 -222.63958740]
[206.36143494 -237.26704407]
[209.68368530 -251.89451599]
[212.45930481 -266.63546753]
[214.68441772 -281.46951294]
[216.90953064 -296.30355835]
[219.13465881 -311.13760376]
[221.35977173 -325.97164917]
[212.23725891 -338.59771729]
[214.70515442 -353.60983276]
[226.79840088 -362.22897339]
[229.02351379 -377.06298828]
[231.24862671 -391.89703369]
[217.41055298 -397.91122437]
[205.60119629 -407.30276489]
[196.62571716 -419.43136597]
[191.09608459 -433.47009277]
[189.38932800 -448.46173096]
[191.62181091 -463.38415527]
[197.64131165 -477.21990967]
[207.03742981 -489.02563477]
[219.16949463 -497.99642944]
[233.21035767 -503.52062988]
[248.20265198 -505.22161865]
[263.12420654 -502.98336792]
[276.95764160 -496.95852661]
[288.75973511 -487.55786133]
[297.72586060 -475.42230225]
[303.24462891 -461.37933350]
[304.93981934 -446.38638306]
[302.69580078 -431.46569824]
[296.66561890 -417.63458252]
[287.26040649 -405.83612061]
[275.12139893 -396.87469482]
[261.07629395 -391.36132812]
[246.08267212 -389.67193604]
[243.85755920 -374.83789062]
[241.63243103 -360.00384521]
[250.66459656 -348.21591187]
[248.61933899 -333.14038086]
[236.19381714 -323.74652100]
[233.96870422 -308.91247559]
[231.74357605 -294.07843018]
[229.51846313 -279.24441528]
[227.29335022 -264.41036987]
[240.72358704 -271.09082031]
[254.38400269 -264.89459229]
[258.20465088 -250.38934326]
[249.36907959 -238.26776123]
[234.39054871 -237.46545410]
[224.31115723 -248.57225037]
[220.98889160 -233.94479370]
[217.66664124 -219.31733704]
[219.25059509 -212.09840393]
[214.18449402 -204.49758911]
[210.64482117 -189.92121887]
[207.10514832 -175.34484863]
[203.56547546 -160.76846313]
[215.02296448 -170.44969177]
[229.76821899 -173.20234680]
[243.94689941 -168.30690002]
[253.85269165 -157.04301453]
[256.89627075 -142.35504150]
[252.28204346 -128.08238220]
[241.21617126 -117.95586395]
[226.59121704 -114.62255096]
[212.23013306 -118.95375061]
[201.88687134 -129.81730652]
[198.26510620 -144.37261963]
[192.60232544 -130.48258972]
[186.93954468 -116.59256744]
[181.27674866 -102.70254517]
[175.61396790 -88.81251526]
[169.95118713 -74.92248535]
[164.28839111 -61.03245926]
[159.25148010 -46.90343094]
[154.85047913 -32.56358337]
[150.44947815 -18.22373772]
[151.76957703 -14.95422649]
[151.57162476 -10.88287926]
[149.49603271 -6.73014355]
[145.51852417 -3.34982991]
[140.48161316 10.77919960]
[135.44470215 24.90822983]
[130.40777588 39.03725815]
[125.37086487 53.16628647]
[126.08576965 60.52228546]
[120.15234375 67.46723175]
[114.90563202 81.51969910]
[109.65891266 95.57217407]
[105.36478424 109.94438934]
[102.04252625 124.57184601]
[99.48669434 139.35249329]
[97.70423126 154.24621582]
[95.92176056 169.13993835]
[94.13929749 184.03364563]
[101.48315430 194.63697815]
[99.69190979 207.00529480]
[90.26562500 214.58630371]
[88.26161194 229.45182800]
[90.41536713 235.70266724]
[89.26213837 241.26747131]
[85.97023773 244.72758484]
[87.65853882 253.70463562]
[83.37635040 259.72830200]
[80.71055603 274.48953247]
[78.04476166 289.25073242]
[75.37895966 304.01196289]
[80.54053497 318.96752930]
[70.66451263 330.11712646]
[67.99871826 344.87832642]
[65.33292389 359.63955688]
[62.66712570 374.40075684]
[67.82869720 389.35632324]
[57.95267868 400.50592041]
[71.98748779 405.92999268]
[84.74201202 413.91238403]
[95.75518799 424.16455078]
[104.62889099 436.31582642]
[111.04234314 449.92700195]
[114.76371002 464.50604248]
[115.65845490 479.52587891]
[113.69423676 494.44360352]
[108.94206238 508.71994019]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 201]
[24 199]
[25 198]
[26 197]
[27 196]
[29 194]
[30 193]
[31 192]
[32 191]
[33 189]
[34 186]
[35 185]
[37 182]
[38 181]
[39 180]
[40 179]
[48 178]
[49 177]
[59 176]
[60 175]
[61 174]
[62 172]
[63 171]
[64 170]
[65 169]
[66 168]
[67 164]
[68 163]
[69 162]
[76 161]
[77 160]
[78 159]
[79 158]
[80 157]
[81 156]
[82 155]
[83 144]
[84 143]
[85 142]
[86 141]
[87 139]
[88 138]
[89 137]
[90 131]
[91 130]
[92 129]
[93 128]
[94 127]
[97 124]
[98 123]
[99 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
