%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUUCGAAUCCCUCUCGACCCAACAAACCCAACACCGAGUCACAGUCAAGCUCUAUUAUUGAAGAACCAGAUCCGUGUACUUAUAACAACACCCCUxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[14.20074558 552.89141846]
[13.55371761 567.91876221]
[10.23364449 582.58898926]
[4.34725237 596.43060303]
[-3.91623473 608.99859619]
[-14.29118061 619.88897705]
[-26.44407272 628.75164795]
[-39.98424911 635.30175781]
[-54.47644424 639.32867432]
[-69.45479584 640.70294189]
[-84.43781281 639.38049316]
[-98.94385529 635.40374756]
[-112.50661469 628.90051270]
[-124.69009399 620.07995605]
[-135.10266113 609.22552490]
[-143.40957642 596.68621826]
[-149.34381104 582.86505127]
[-152.71463013 568.20635986]
[-153.41363525 553.18133545]
[-151.41838074 538.27301025]
[-146.79301453 523.96057129]
[-139.68618774 510.70413208]
[-130.32640076 498.92984009]
[-119.01449585 489.01617432]
[-106.11411285 481.28182983]
[-92.03995514 475.97543335]
[-77.24444580 473.26757812]
[-62.20318985 473.24526978]
[-47.39971161 475.90924072]
[-42.15299606 461.85678101]
[-36.90627670 447.80432129]
[-31.65955734 433.75183105]
[-26.41283989 419.69937134]
[-21.16612244 405.64688110]
[-15.91940403 391.59442139]
[-10.67268562 377.54196167]
[-5.42596722 363.48947144]
[-8.22275257 348.85980225]
[3.85283446 338.63772583]
[9.09955215 324.58526611]
[14.34627056 310.53280640]
[3.76061511 298.32394409]
[0.75911230 282.35061646]
[6.25405073 266.95507812]
[18.83484268 256.37115479]
[35.12869644 253.56007385]
[40.16561127 239.43104553]
[35.26599503 228.37118530]
[39.34670258 216.55883789]
[50.73563766 210.50450134]
[55.98235703 196.45204163]
[53.18557358 181.82237244]
[65.26116180 171.60029602]
[62.46437454 156.97062683]
[74.53996277 146.74855042]
[79.78668213 132.69607544]
[85.03339386 118.64360809]
[90.28011322 104.59114075]
[92.83594513 89.81048584]
[92.61261749 74.81214905]
[92.38928986 59.81380844]
[92.16596222 44.81547165]
[91.94263458 29.81713486]
[91.71930695 14.81879711]
[91.49597931 -0.17954051]
[91.27265167 -15.17787838]
[91.04932404 -30.17621613]
[87.79249573 -38.71031570]
[90.93599701 -45.39912796]
[90.93599701 -60.39912796]
[89.59776306 -75.33930969]
[86.93196869 -90.10053253]
[84.26617432 -104.86174774]
[81.60037231 -119.62296295]
[78.93457794 -134.38418579]
[76.26878357 -149.14540100]
[73.60298920 -163.90661621]
[70.93719482 -178.66783142]
[67.56407166 -182.65144348]
[66.19334412 -187.08702087]
[66.66188049 -191.13616943]
[68.49739838 -194.14668274]
[58.98574448 -206.78942871]
[64.95330811 -220.43630981]
[62.94929123 -235.30184937]
[60.94527817 -250.16737366]
[58.94126511 -265.03289795]
[56.93724823 -279.89843750]
[47.91274261 -267.91683960]
[33.32678986 -264.41683960]
[19.84789276 -270.99859619]
[13.63841915 -284.65298462]
[17.53726006 -299.13742065]
[29.76191521 -307.82983398]
[44.72343826 -306.75613403]
[55.58245468 -296.40557861]
[55.13584518 -311.39892578]
[54.68923950 -326.39227295]
[40.72568893 -332.55520630]
[30.82549858 -344.17196655]
[26.95436096 -358.93600464]
[29.88089561 -373.91595459]
[39.02403259 -386.13748169]
[52.56840134 -393.17401123]
[67.82475281 -393.62844849]
[81.76392365 -387.41055298]
[91.61829376 -375.75491333]
[95.43125916 -360.97573853]
[92.44575500 -346.00744629]
[83.25456238 -333.82202148]
[69.68259430 -326.83886719]
[70.12919617 -311.84552002]
[70.57580566 -296.85217285]
[71.80278015 -281.90243530]
[73.80679321 -267.03692627]
[75.81080627 -252.17138672]
[77.81481934 -237.30586243]
[79.81883240 -222.44032288]
[89.18714142 -210.86087036]
[83.36292267 -196.15069580]
[85.69841003 -181.33363342]
[88.36420441 -166.57241821]
[91.02999878 -151.81118774]
[93.69580078 -137.04997253]
[96.36159515 -122.28875732]
[99.02738953 -107.52754211]
[101.69318390 -92.76632690]
[104.35897827 -78.00511169]
[110.11825562 -91.85540771]
[121.25882721 -101.89969635]
[135.62960815 -106.19857788]
[150.45585632 -103.92201996]
[162.87481689 -95.50957489]
[170.48861694 -82.58555603]
[171.82711792 -67.64539337]
[166.63191223 -53.57380295]
[155.90608215 -43.08777618]
[141.72064209 -38.21200943]
[126.81455994 -39.88793564]
[114.06597137 -47.79195404]
[105.93599701 -60.39912796]
[105.93599701 -45.39912796]
[106.04766083 -30.39954376]
[106.27098846 -15.40120602]
[106.49431610 -0.40286824]
[106.71764374 14.59546947]
[106.94097137 29.59380722]
[107.16429901 44.59214401]
[107.38762665 59.59048080]
[107.61095428 74.58882141]
[107.83428192 89.58715820]
[114.27145386 76.03862000]
[123.62248230 64.31009674]
[135.39683533 55.01684189]
[148.97685242 48.64636230]
[163.65016174 45.53284454]
[178.64703369 45.83961105]
[193.18074036 49.55057144]
[206.48889160 56.47105789]
[217.87336731 66.23803711]
[226.73693848 78.33914948]
[232.61466980 92.13959503]
[235.19822693 106.91542816]
[234.35205078 121.89154053]
[230.12055969 136.28231812]
[222.72570801 149.33283997]
[212.55543518 160.35852051]
[200.14324951 168.78096008]
[186.14024353 174.15832520]
[171.28102112 176.20855713]
[156.34504700 174.82408142]
[142.11584473 170.07752991]
[129.33984375 162.21791077]
[118.68724060 151.65750122]
[110.71686554 138.95030212]
[105.84680939 124.76288605]
[104.33258820 109.83785248]
[99.08586884 123.89032745]
[93.83914948 137.94279480]
[88.59243011 151.99526978]
[91.01393890 167.63006592]
[79.31362915 176.84701538]
[81.73513794 192.48181152]
[70.03482819 201.69876099]
[64.78810883 215.75122070]
[68.25621033 233.83586121]
[54.29463959 244.46795654]
[49.25772476 258.59698486]
[58.86047363 268.76803589]
[63.12378693 282.02096558]
[61.26993942 295.75201416]
[53.71721268 307.28912354]
[41.98723984 314.41207886]
[28.39874268 315.77951050]
[23.15202332 329.83197021]
[17.90530586 343.88446045]
[20.32681084 359.51925659]
[8.62650394 368.73620605]
[3.37978578 382.78866577]
[-1.86693227 396.84112549]
[-7.11365032 410.89361572]
[-12.36036873 424.94607544]
[-17.60708618 438.99856567]
[-22.85380554 453.05102539]
[-28.10052299 467.10348511]
[-33.34724045 481.15597534]
[-20.42018318 488.84564209]
[-9.07404900 498.72009277]
[0.32642889 510.46194458]
[7.47906399 523.69372559]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 206]
[30 205]
[31 204]
[32 203]
[33 202]
[34 201]
[35 200]
[36 199]
[37 198]
[39 196]
[40 195]
[41 194]
[46 188]
[47 187]
[50 185]
[51 184]
[53 182]
[55 180]
[56 179]
[57 178]
[58 177]
[59 151]
[60 150]
[61 149]
[62 148]
[63 147]
[64 146]
[65 145]
[66 144]
[67 143]
[69 142]
[70 141]
[71 128]
[72 127]
[73 126]
[74 125]
[75 124]
[76 123]
[77 122]
[78 121]
[82 120]
[84 118]
[85 117]
[86 116]
[87 115]
[88 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
