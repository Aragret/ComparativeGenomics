%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[77.60356140 495.65670776]
[68.93663788 483.32864380]
[63.34693527 469.33392334]
[61.13590622 454.42727661]
[62.42278290 439.41259766]
[67.13816833 425.09960938]
[75.02777100 412.26019287]
[85.66611481 401.58673096]
[98.47947693 393.65487671]
[112.77686310 388.89236450]
[111.43862915 373.95217896]
[110.10039520 359.01199341]
[108.76216125 344.07180786]
[99.92024231 332.08557129]
[106.39550018 317.65014648]
[105.05726624 302.70996094]
[103.71902466 287.76977539]
[102.38079071 272.82958984]
[100.31863403 270.93075562]
[98.88438416 268.10061646]
[98.43650818 264.57434082]
[99.24185181 260.71221924]
[101.43481445 256.96456909]
[100.98820496 241.97120667]
[100.54160309 226.97785950]
[92.42879486 214.48660278]
[99.75177765 200.46217346]
[99.30517578 185.46882629]
[98.85856628 170.47547913]
[98.41196442 155.48213196]
[97.29631042 140.52366638]
[95.51384735 125.62995911]
[83.48536682 120.10689545]
[75.73028564 109.38088989]
[74.25533295 96.22744751]
[79.44216919 84.05020905]
[89.94863892 76.00019836]
[88.38812256 61.08159637]
[86.82759857 46.16299057]
[85.26707458 31.24438477]
[83.70655060 16.32578087]
[82.14602661 1.40717590]
[80.58550262 -13.51142883]
[79.02497864 -28.43003273]
[77.46445465 -43.34863663]
[74.25118256 -58.00042725]
[69.42518616 -72.20288086]
[64.59918976 -86.40533447]
[59.77318954 -100.60779572]
[42.46068192 -103.62610626]
[29.12947655 -114.93936157]
[23.39380264 -131.36209106]
[26.74860954 -148.34027100]
[38.18117905 -161.21406555]
[32.93446350 -175.26654053]
[27.68774414 -189.31900024]
[22.38582802 -175.28726196]
[9.91252995 -166.95559692]
[-5.07991886 -167.43148804]
[-16.99970627 -176.53746033]
[-21.40104485 -190.87719727]
[-16.64234543 -205.10234070]
[-4.49848509 -213.90727234]
[10.50117683 -214.00794983]
[22.76284218 -205.36590576]
[19.22316933 -219.94227600]
[15.68349648 -234.51864624]
[12.14382458 -249.09503174]
[8.60415173 -263.67138672]
[5.06447935 -278.24777222]
[1.52480698 -292.82415771]
[-2.01486540 -307.40051270]
[-5.55453777 -321.97689819]
[-16.14333725 -329.34170532]
[-18.79145432 -341.55526733]
[-12.61230087 -351.95452881]
[-15.93456078 -366.58197021]
[-19.25682068 -381.20944214]
[-22.57908058 -395.83691406]
[-26.12671852 -399.66592407]
[-27.69412994 -404.03588867]
[-27.40686798 -408.10189819]
[-25.70761108 -411.19137573]
[-28.37340736 -425.95257568]
[-31.03920174 -440.71380615]
[-46.08859253 -441.17150879]
[-60.71386719 -444.74853516]
[-74.27566528 -451.28851318]
[-86.18112946 -460.50552368]
[-95.90979767 -471.99670410]
[-103.03637695 -485.25964355]
[-107.24932861 -499.71453857]
[-108.36447144 -514.72955322]
[-106.33306122 -529.64825439]
[-101.24390411 -543.81842041]
[-93.31947327 -556.62066650]
[-82.90618896 -567.49523926]
[-70.45928192 -575.96685791]
[-56.52287674 -581.66516113]
[-41.70620346 -584.34094238]
[-26.65699387 -583.87731934]
[-12.03312969 -580.29455566]
[1.52609539 -573.74926758]
[13.42792988 -564.52752686]
[23.15207672 -553.03253174]
[30.27343941 -539.76678467]
[34.48070145 -525.31024170]
[35.58993912 -510.29479980]
[33.55266190 -495.37689209]
[28.45792961 -481.20870972]
[20.52846336 -468.40960693]
[10.11090469 -457.53909302]
[-2.33933520 -449.07238770]
[-16.27798462 -443.37960815]
[-13.61218929 -428.61837769]
[-10.94639397 -413.85717773]
[-7.95161963 -399.15914917]
[-4.62936020 -384.53170776]
[-1.30710065 -369.90423584]
[2.01515889 -355.27679443]
[14.61437798 -343.06094360]
[9.02183723 -325.51657104]
[12.56151009 -310.94018555]
[16.10118294 -296.36383057]
[19.64085388 -281.78744507]
[23.18052673 -267.21105957]
[26.72019958 -252.63470459]
[30.25987244 -238.05831909]
[33.79954529 -223.48194885]
[37.33921814 -208.90557861]
[41.74021530 -194.56571960]
[46.98693466 -180.51325989]
[52.23365021 -166.46078491]
[64.84609985 -165.72293091]
[76.28478241 -160.24960327]
[84.83515930 -150.82203674]
[89.20082092 -138.81703186]
[88.70001984 -126.00594330]
[83.37183380 -114.29331970]
[73.97564697 -105.43379211]
[78.80164337 -91.23133087]
[83.62763977 -77.02887726]
[88.45363617 -62.82642365]
[91.28828430 -77.55614471]
[99.19065094 -90.30576324]
[111.12104034 -99.39783478]
[125.50981140 -103.63613892]
[140.46386719 -102.46306610]
[154.01576233 -96.03295135]
[164.38247681 -85.19178009]
[170.20013428 -71.36589813]
[170.70329285 -56.37434006]
[165.82574463 -42.18950272]
[156.20924377 -30.67764282]
[143.11900330 -23.35334396]
[128.27725220 -21.18024635]
[113.63668060 -24.44425583]
[101.12351227 -32.71593857]
[92.38306427 -44.90916061]
[93.94358826 -29.99055672]
[95.50411224 -15.07195187]
[97.06462860 -0.15334707]
[98.62515259 14.76525784]
[100.18567657 29.68386269]
[101.74620056 44.60246658]
[103.30672455 59.52107239]
[104.86724854 74.43967438]
[119.08877563 82.31839752]
[125.85755157 97.10047913]
[122.53087616 113.01460266]
[110.40756226 123.84748840]
[112.19003296 138.74121094]
[122.28834534 127.64958954]
[137.26480103 126.80949402]
[148.54020691 136.70217896]
[149.65550232 151.66065979]
[139.97178650 163.11604309]
[125.03633881 164.50614929]
[113.40531158 155.03552246]
[113.85192108 170.02886963]
[114.29852295 185.02221680]
[114.74513245 200.01556396]
[122.88988495 213.57925415]
[115.53495026 226.53125000]
[115.98155975 241.52459717]
[116.42816162 256.51794434]
[117.32097626 271.49136353]
[118.65921021 286.43154907]
[119.99744415 301.37173462]
[121.33567810 316.31192017]
[130.27331543 329.36676025]
[123.70234680 342.73358154]
[125.04058075 357.67376709]
[126.37881470 372.61395264]
[127.71704865 387.55413818]
[142.63322449 389.69992065]
[156.65226746 395.22830200]
[169.01814270 403.84121704]
[179.06396484 415.07409668]
[186.24798584 428.32122803]
[190.18278503 442.86819458]
[190.65615845 457.93048096]
[187.64257812 472.69583130]
[181.30455017 486.36791992]
[171.98390198 498.20947266]
[160.18325806 507.58184814]
[146.53903198 513.97961426]
[131.78703308 517.05780029]
[116.72280884 516.65039062]
[102.15876770 512.77923584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 195]
[11 194]
[12 193]
[13 192]
[15 190]
[16 189]
[17 188]
[18 187]
[23 186]
[24 185]
[25 184]
[27 182]
[28 181]
[29 180]
[30 179]
[31 172]
[32 171]
[37 167]
[38 166]
[39 165]
[40 164]
[41 163]
[42 162]
[43 161]
[44 160]
[45 159]
[46 143]
[47 142]
[48 141]
[49 140]
[54 133]
[55 132]
[56 131]
[65 130]
[66 129]
[67 128]
[68 127]
[69 126]
[70 125]
[71 124]
[72 123]
[73 122]
[76 120]
[77 119]
[78 118]
[79 117]
[83 116]
[84 115]
[85 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
