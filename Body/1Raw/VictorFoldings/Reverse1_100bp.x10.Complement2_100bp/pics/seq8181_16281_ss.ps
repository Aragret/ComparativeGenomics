%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[258.40399170 579.09088135]
[259.25637817 564.01855469]
[264.14471436 549.73547363]
[272.70626831 537.30151367]
[284.30569458 527.63946533]
[298.08224487 521.46618652]
[295.85714722 506.63217163]
[293.63201904 491.79812622]
[291.40689087 476.96408081]
[286.68676758 462.72607422]
[279.60964966 449.50054932]
[272.53256226 436.27502441]
[265.45544434 423.04949951]
[258.37835693 409.82397461]
[251.30123901 396.59844971]
[244.22413635 383.37292480]
[226.41615295 379.13125610]
[217.20585632 362.94229126]
[222.84869385 344.85711670]
[215.38095093 331.84817505]
[207.91320801 318.83923340]
[200.44546509 305.83026123]
[192.97772217 292.82131958]
[185.50997925 279.81237793]
[178.04223633 266.80340576]
[174.75256348 265.53445435]
[171.91406250 262.60903931]
[170.29861450 258.25659180]
[170.54640198 253.04261780]
[163.66699219 239.71318054]
[156.78758240 226.38375854]
[149.90815735 213.05432129]
[143.02874756 199.72489929]
[136.14933777 186.39546204]
[129.26992798 173.06604004]
[122.39051056 159.73660278]
[106.27362061 163.48573303]
[89.73464966 162.96363831]
[73.88631439 158.20542908]
[59.79487228 149.53125000]
[48.40837479 137.52467346]
[40.49288940 122.99349213]
[36.58095551 106.91534424]
[36.93576813 90.37193298]
[41.53345108 74.47628784]
[50.06468201 60.29784775]
[61.95548630 48.79050446]
[54.48774719 35.78155518]
[40.90706253 27.66517830]
[41.28107452 12.77527046]
[33.81333160 -0.23368232]
[26.34559250 -13.24263477]
[18.87785149 -26.25158691]
[19.40650558 -11.26090622]
[15.33738041 3.17662239]
[7.05831766 15.68490410]
[-4.64157534 25.07172966]
[-18.64713860 30.44240761]
[-33.62345505 31.28503799]
[-48.14307022 27.51930618]
[-60.82207108 19.50413895]
[-70.45198059 8.00349140]
[-76.11492920 -5.88646889]
[-77.27116394 -20.84184074]
[-73.81047821 -35.43717194]
[-66.06272888 -48.28132629]
[-54.76637268 -58.15008545]
[-40.99811554 -64.10282135]
[-26.07025337 -65.57215118]
[-11.40561676 -62.41803741]
[1.59805334 -54.94110107]
[11.70195770 -43.85305405]
[7.94565678 -58.37511444]
[4.18935585 -72.89717102]
[0.43305534 -87.41923523]
[-3.32324529 -101.94129181]
[-7.07954597 -116.46334839]
[-13.15510750 -102.74884796]
[-25.62192535 -94.40747833]
[-40.61701965 -94.02390289]
[-53.49399948 -101.71697998]
[-60.26279068 -115.10292053]
[-58.82600784 -130.03395081]
[-49.62886047 -141.88352966]
[-35.52117538 -146.97993469]
[-20.87438011 -143.74397278]
[-10.22681522 -133.17814636]
[-12.00928116 -148.07186890]
[-13.79174709 -162.96557617]
[-15.57421303 -177.85929871]
[-17.35667801 -192.75302124]
[-19.13914490 -207.64672852]
[-33.98378372 -210.56082153]
[-47.20038605 -217.92129517]
[-57.49412537 -229.00704956]
[-63.85652542 -242.73204041]
[-65.66426086 -257.75158691]
[-62.74023056 -272.59426880]
[-55.37089920 -285.80593872]
[-44.27824402 -296.09225464]
[-30.54900169 -302.44546509]
[-15.52823162 -304.24313354]
[-0.68751103 -301.30914307]
[12.51921558 -293.93096924]
[22.79808807 -282.83142090]
[29.14208794 -269.09793091]
[30.92969513 -254.07595825]
[27.98577499 -239.23721313]
[20.59874725 -226.03543091]
[9.49231434 -215.76399231]
[-4.24542713 -209.42919922]
[-2.46296120 -194.53547668]
[-0.68049538 -179.64176941]
[1.10197055 -164.74804688]
[2.88443637 -149.85432434]
[4.66690207 -134.96061707]
[7.44251347 -120.21965027]
[11.19881439 -105.69759369]
[14.95511436 -91.17552948]
[18.71141434 -76.65347290]
[22.46771622 -62.13141632]
[26.22401619 -47.60935593]
[31.88680267 -33.71932983]
[39.35454559 -20.71037674]
[46.82228470 -7.70142365]
[54.29002762 5.30752897]
[67.33657074 12.49341679]
[67.49669647 28.31381226]
[74.96443939 41.32276535]
[87.79364777 37.38369370]
[101.16303253 36.21564102]
[114.48094177 37.87030411]
[127.15802002 42.27445221]
[138.63323975 49.23318481]
[148.39880371 58.43855667]
[156.02250671 69.48318481]
[161.16699219 81.87830353]
[163.60459900 95.07538605]
[163.22744751 108.49039459]
[160.05223083 121.52967072]
[154.21945190 133.61618042]
[145.98725891 144.21502686]
[135.71994019 152.85719299]
[142.59934998 166.18661499]
[149.47875977 179.51605225]
[156.35818481 192.84547424]
[163.23759460 206.17491150]
[170.11700439 219.50433350]
[176.99641418 232.83377075]
[183.87582397 246.16319275]
[191.05119324 259.33566284]
[198.51893616 272.34463501]
[205.98667908 285.35357666]
[213.45442200 298.36251831]
[220.92216492 311.37149048]
[228.38990784 324.38043213]
[235.85765076 337.38937378]
[247.71836853 338.20178223]
[257.61291504 344.57345581]
[263.14590454 354.82434082]
[263.04452515 366.35278320]
[257.44964600 376.29580688]
[264.52676392 389.52133179]
[271.60388184 402.74685669]
[278.68096924 415.97238159]
[285.75808716 429.19790649]
[292.83517456 442.42346191]
[299.91229248 455.64898682]
[299.46823120 440.65554810]
[302.71697998 426.01159668]
[309.45983887 412.61257935]
[319.28451538 401.27783203]
[331.59020996 392.70056152]
[345.62442017 387.40518188]
[360.52893066 385.71554565]
[375.39239502 387.73498535]
[389.30581665 393.33999634]
[401.41845703 402.18783569]
[410.98959351 413.73742676]
[417.43392944 427.28256226]
[420.35742188 441.99490356]
[419.58129883 456.97482300]
[415.15298462 471.30624390]
[407.34329224 484.11285400]
[396.62982178 494.61148071]
[383.66766357 502.16015625]
[369.24945068 506.29724121]
[354.25689697 506.76977539]
[339.60678101 503.54885864]
[326.19497681 496.83145142]
[314.84161377 487.02835083]
[306.24093628 474.73895264]
[308.46606445 489.57299805]
[310.69116211 504.40704346]
[312.91629028 519.24108887]
[327.89776611 521.10058594]
[341.82156372 526.93420410]
[353.65441895 536.30895996]
[362.51828003 548.52917480]
[367.75537109 562.68811035]
[368.97708130 577.73504639]
[366.09274292 592.55340576]
[359.31637573 606.04351807]
[349.15087891 617.20440674]
[336.35052490 625.20776367]
[321.86526489 629.45977783]
[306.76995850 629.64489746]
[292.18478394 625.74932861]
[279.19204712 618.06219482]
[268.75592041 607.15399170]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 195]
[7 194]
[8 193]
[9 192]
[10 168]
[11 167]
[12 166]
[13 165]
[14 164]
[15 163]
[16 162]
[19 157]
[20 156]
[21 155]
[22 154]
[23 153]
[24 152]
[25 151]
[29 150]
[30 149]
[31 148]
[32 147]
[33 146]
[34 145]
[35 144]
[36 143]
[47 129]
[48 128]
[50 126]
[51 125]
[52 124]
[53 123]
[72 122]
[73 121]
[74 120]
[75 119]
[76 118]
[77 117]
[87 116]
[88 115]
[89 114]
[90 113]
[91 112]
[92 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
