%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[115.17533875 551.99810791]
[113.17021942 566.98040771]
[106.83654785 580.70544434]
[96.73750305 591.95269775]
[83.77108765 599.72210693]
[69.09027100 603.32281494]
[54.00045776 602.43463135]
[39.84342194 597.13653564]
[27.87799644 587.89965820]
[19.16814423 575.54528809]
[14.48833656 561.17199707]
[14.25469971 546.05786133]
[18.48800659 531.54681396]
[26.81183624 518.92919922]
[38.48603821 509.32687378]
[52.47255325 503.59371948]
[67.52770233 502.23956299]
[70.63181305 487.56427002]
[73.73592377 472.88894653]
[76.84003448 458.21365356]
[79.94414520 443.53836060]
[83.04825592 428.86303711]
[85.49398041 414.06378174]
[78.26647186 404.36380005]
[79.62958527 391.94100952]
[89.39472961 383.51458740]
[91.39874268 368.64904785]
[93.40275574 353.78350830]
[94.29557037 338.81011963]
[94.07224274 323.81176758]
[93.84891510 308.81344604]
[93.62558746 293.81509399]
[93.40225983 278.81677246]
[93.17893219 263.81842041]
[92.95560455 248.82008362]
[92.73227692 233.82174683]
[92.50894928 218.82341003]
[81.67565155 208.66589355]
[81.23550415 193.45863342]
[91.96309662 182.16453552]
[91.73976898 167.16619873]
[88.99756622 163.25604248]
[88.68258667 157.58172607]
[91.73976898 151.71954346]
[91.96309662 136.72120667]
[92.18642426 121.72286987]
[92.40975189 106.72453308]
[89.37137604 99.25855255]
[92.74971008 91.50498962]
[93.19631958 76.51164246]
[93.64292908 61.51829147]
[94.08953094 46.52494431]
[83.53128052 35.07238388]
[84.19779205 19.87335587]
[95.18112183 9.87825680]
[95.62773132 -5.11509275]
[96.07433319 -20.10844231]
[96.52094269 -35.10179138]
[96.96754456 -50.09514236]
[95.18508148 -64.98886108]
[91.21298218 -79.45338440]
[87.24089050 -93.91790771]
[83.26879120 -108.38243103]
[69.87071991 -121.01466370]
[74.96650696 -137.80751038]
[70.77949524 -152.21128845]
[59.49763489 -163.30319214]
[63.37477875 -177.68432617]
[59.18776703 -192.08811951]
[55.00075531 -206.49189758]
[39.51819992 -214.63497925]
[34.80796814 -231.13130188]
[43.31513596 -245.63877869]
[38.91413879 -259.97860718]
[34.51314163 -274.31848145]
[30.11214256 -288.65832520]
[25.71114349 -302.99816895]
[14.26539516 -313.92086792]
[17.92799568 -328.35812378]
[13.52699757 -342.69796753]
[-1.44464779 -341.16955566]
[-16.42676926 -342.59164429]
[-30.84349251 -346.90954590]
[-44.14067841 -353.95730591]
[-55.80721664 -363.46405029]
[-65.39467621 -375.06433105]
[-72.53454590 -388.31231689]
[-76.95238495 -402.69873047]
[-78.47838593 -417.67062378]
[-77.05388641 -432.65249634]
[-72.73364258 -447.06851196]
[-65.68371582 -460.36456299]
[-56.17509079 -472.02957153]
[-44.57324600 -481.61514282]
[-31.32412910 -488.75286865]
[-16.93699837 -493.16839600]
[-1.96485937 -494.69195557]
[13.01679993 -493.26504517]
[27.43212509 -488.94247437]
[40.72702789 -481.89038086]
[52.39048767 -472.37988281]
[61.97419357 -460.77648926]
[69.10977173 -447.52621460]
[73.52295685 -433.13836670]
[75.04410553 -418.16598511]
[73.61476135 -403.18453979]
[69.28984833 -388.76992798]
[62.23562241 -375.47616577]
[52.72322083 -363.81423950]
[41.11827087 -354.23242188]
[27.86684418 -347.09896851]
[32.26784134 -332.75912476]
[43.39880371 -322.86212158]
[40.05099106 -307.39916992]
[44.45198822 -293.05932617]
[48.85298920 -278.71945190]
[53.25398636 -264.37960815]
[57.65498352 -250.03977966]
[69.77116394 -245.65483093]
[77.26131439 -234.93197632]
[77.20720673 -221.65765381]
[69.40454102 -210.67890930]
[73.59155273 -196.27513123]
[77.77855682 -181.87133789]
[88.76093292 -171.80969238]
[85.18327332 -156.39830017]
[89.37028503 -141.99452209]
[99.81686401 -135.89570618]
[103.42301178 -123.92993927]
[97.73331451 -112.35453033]
[101.70541382 -97.89000702]
[105.67751312 -83.42548370]
[109.64960480 -68.96095276]
[112.70105743 -83.64730072]
[119.71566010 -96.90608215]
[130.14021301 -107.69166565]
[143.15257263 -115.15345764]
[157.72654724 -118.70298767]
[172.71278381 -118.06031799]
[186.92938232 -113.27613831]
[199.25515747 -104.72775269]
[208.71807861 -93.08931732]
[214.57183838 -79.27868652]
[216.35478210 -64.38502502]
[213.92631531 -49.58291245]
[207.47795105 -36.03970337]
[197.51821899 -24.82347107]
[184.83261108 -16.81877518]
[170.42153931 -12.65689850]
[155.42153931 -12.66606617]
[141.01557922 -16.84555244]
[128.33975220 -24.86574745]
[118.39374542 -36.09414291]
[111.96089935 -49.64853668]
[111.51428986 -34.65518570]
[111.06768799 -19.66183662]
[110.62107849 -4.66848707]
[110.17447662 10.32486343]
[120.54341888 20.95598030]
[120.30407715 36.16773224]
[109.08287811 46.97154999]
[108.63627625 61.96489716]
[108.18966675 76.95825195]
[107.74306488 91.95159912]
[107.40808868 106.94786072]
[107.18476105 121.94619751]
[106.96143341 136.94453430]
[106.73810577 151.94287109]
[106.73810577 166.94287109]
[106.96143341 181.94120789]
[118.02053070 192.91088867]
[118.03336334 208.12452698]
[107.50728607 218.60008240]
[107.73061371 233.59841919]
[107.95394135 248.59675598]
[108.17726898 263.59509277]
[108.40059662 278.59344482]
[108.62392426 293.59176636]
[108.84725189 308.59011841]
[109.07057953 323.58843994]
[109.29390717 338.58679199]
[117.96195984 326.34484863]
[131.54808044 319.98739624]
[146.50090027 321.17623901]
[158.91177368 329.60061646]
[165.53654480 343.05841064]
[164.64349365 358.03179932]
[156.46607971 370.60678101]
[143.14186096 377.49624634]
[128.15374756 376.89935303]
[115.41958618 368.97210693]
[108.26828766 355.78753662]
[106.26427460 370.65304565]
[104.26026154 385.51858521]
[111.64767456 402.38592529]
[100.38770294 415.84625244]
[112.81819916 407.45083618]
[127.56993866 410.16860962]
[136.19244385 422.44265747]
[133.74636841 437.24185181]
[121.63291931 446.08859253]
[106.79123688 443.91500854]
[97.72355652 431.96716309]
[94.61944580 446.64245605]
[91.51533508 461.31774902]
[88.41122437 475.99307251]
[85.30711365 490.66836548]
[82.20300293 505.34365845]
[95.42036438 512.67803955]
[105.88747406 523.58355713]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 208]
[18 207]
[19 206]
[20 205]
[21 204]
[22 203]
[23 196]
[26 194]
[27 193]
[28 192]
[29 181]
[30 180]
[31 179]
[32 178]
[33 177]
[34 176]
[35 175]
[36 174]
[37 173]
[40 170]
[41 169]
[44 168]
[45 167]
[46 166]
[47 165]
[49 164]
[50 163]
[51 162]
[52 161]
[55 158]
[56 157]
[57 156]
[58 155]
[59 154]
[60 133]
[61 132]
[62 131]
[63 130]
[65 127]
[66 126]
[68 124]
[69 123]
[70 122]
[73 118]
[74 117]
[75 116]
[76 115]
[77 114]
[79 112]
[80 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
