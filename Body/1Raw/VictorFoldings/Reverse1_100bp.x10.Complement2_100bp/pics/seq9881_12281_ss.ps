%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[146.02665710 832.42700195]
[131.32966614 829.41424561]
[116.78502655 825.73571777]
[102.42288971 821.39898682]
[88.27302551 816.41302490]
[74.36475372 810.78826904]
[60.72690201 804.53625488]
[47.38774490 797.67004395]
[34.37492371 790.20379639]
[21.71541405 782.15301514]
[9.43545246 773.53436279]
[-2.43950987 764.36578369]
[-13.88485909 754.66613770]
[-24.87687302 744.45568848]
[-35.39276886 733.75549316]
[-45.41075134 722.58776855]
[-54.91005707 710.97564697]
[-63.87099457 698.94317627]
[-72.27499390 686.51531982]
[-80.10463715 673.71789551]
[-87.34368896 660.57733154]
[-93.97715759 647.12091064]
[-99.99127960 633.37646484]
[-105.37360382 619.37261963]
[-110.11296844 605.13824463]
[-114.19954681 590.70294189]
[-117.62487030 576.09655762]
[-120.38184357 561.34948730]
[-122.46474457 546.49212646]
[-123.86927032 531.55541992]
[-124.59249878 516.57025146]
[-124.63292694 501.56771851]
[-123.99047852 486.57885742]
[-122.66648865 471.63479614]
[-120.66369629 456.76647949]
[-117.98625183 442.00469971]
[-114.63970184 427.38009644]
[-110.63098907 412.92297363]
[-105.96841431 398.66329956]
[-100.66165161 384.63058472]
[-94.72169495 370.85397339]
[-88.16085815 357.36199951]
[-80.99273682 344.18261719]
[-73.23218536 331.34313965]
[-64.89529419 318.87017822]
[-55.99934006 306.78961182]
[-46.56276321 295.12643433]
[-36.60511780 283.90487671]
[-26.14704895 273.14816284]
[-15.21022892 262.87857056]
[-3.81732678 253.11741638]
[8.00804424 243.88493347]
[20.24137497 235.20024109]
[32.85730743 227.08132935]
[45.82969284 219.54505920]
[59.13164902 212.60702515]
[72.73560333 206.28161621]
[86.61335754 200.58193970]
[100.73614502 195.51982117]
[115.07469940 191.10574341]
[104.39676666 180.72155762]
[108.43169403 165.42352295]
[104.67539215 150.90147400]
[100.91909027 136.37940979]
[97.33161926 133.22677612]
[95.68652344 127.78704834]
[97.27401733 121.36899567]
[93.95175934 106.74153137]
[91.01277924 104.24458313]
[89.18869019 100.46429443]
[89.02796173 95.92764282]
[90.82322693 91.38706207]
[88.15743256 76.62584686]
[85.49163818 61.86463165]
[82.71602631 47.12366867]
[79.83075714 32.40377426]
[76.94548035 17.68388367]
[74.06021118 2.96399307]
[67.17911530 16.29255676]
[54.23791504 23.87709999]
[39.24657440 23.36746979]
[26.85032654 14.92158222]
[20.89028168 1.15648675]
[23.21322632 -13.66255283]
[33.09936905 -24.94369507]
[47.48538208 -29.19135666]
[61.91360474 -25.08935165]
[71.91339874 -13.90849876]
[71.02058411 -28.88190460]
[70.12776947 -43.85530853]
[69.23495483 -58.82871628]
[68.34214020 -73.80212402]
[53.55903625 -76.82244110]
[40.06180573 -83.56686401]
[28.77071381 -93.57553864]
[20.45560074 -106.16606140]
[15.68340683 -120.47999573]
[14.77950859 -135.54138184]
[17.80553627 -150.32331848]
[24.55516624 -163.81793213]
[34.56820297 -175.10516357]
[47.16193771 -183.41542053]
[61.47770691 -188.18208313]
[76.53944397 -189.08016968]
[91.32020569 -186.04843140]
[104.81222534 -179.29359436]
[116.09558868 -169.27619934]
[124.40097809 -156.67926025]
[129.16210938 -142.36164856]
[130.05438232 -127.29956818]
[127.01693726 -112.51997375]
[120.25688934 -99.03056335]
[110.23513794 -87.75106812]
[97.63499451 -79.45054626]
[83.31554413 -74.69493866]
[84.20835876 -59.72153091]
[85.10117340 -44.74812698]
[85.99398804 -29.77472115]
[86.88681030 -14.80131435]
[88.78009796 0.07872055]
[91.66537476 14.79861164]
[94.55064392 29.51850319]
[97.43592072 44.23839569]
[101.80731964 50.19764328]
[100.25285339 59.19883347]
[102.91864777 73.96005249]
[105.58444214 88.72126770]
[108.57921600 103.41927338]
[111.90148163 118.04673004]
[115.44115448 132.62310791]
[119.19744873 147.14517212]
[122.95375061 161.66722107]
[133.90036011 173.09011841]
[129.59675598 187.34944153]
[144.27726746 184.25740051]
[159.08331299 181.83674622]
[173.98417664 180.09248352]
[188.94898987 179.02824402]
[203.94673157 178.64624023]
[218.94633484 178.94723511]
[233.91667175 179.93061829]
[248.82675171 181.59434509]
[263.64562988 183.93499756]
[278.34265137 186.94767761]
[292.88729858 190.62617493]
[307.24945068 194.96286011]
[321.39935303 199.94873047]
[335.30764771 205.57347107]
[348.94552612 211.82540894]
[362.28469849 218.69158936]
[375.29754639 226.15777588]
[387.95709229 234.20851135]
[400.23709106 242.82708740]
[412.11209106 251.99566650]
[423.55746460 261.69522095]
[434.54953003 271.90567017]
[445.06546021 282.60580444]
[455.08349609 293.77349854]
[464.58285522 305.38558960]
[473.54382324 317.41799927]
[481.94787598 329.84582520]
[489.77755737 342.64324951]
[497.01666260 355.78378296]
[503.65020752 369.24017334]
[509.66436768 382.98455811]
[515.04675293 396.98843384]
[519.78619385 411.22274780]
[523.87280273 425.65805054]
[527.29821777 440.26437378]
[530.05523682 455.01147461]
[532.13818359 469.86880493]
[533.54278564 484.80551147]
[534.26605225 499.79067993]
[534.30651855 514.79321289]
[533.66418457 529.78210449]
[532.34020996 544.72613525]
[530.33746338 559.59448242]
[527.66009521 574.35626221]
[524.31359863 588.98089600]
[520.30493164 603.43798828]
[515.64245605 617.69769287]
[510.33572388 631.73046875]
[504.39584351 645.50708008]
[497.83505249 658.99908447]
[490.66696167 672.17852783]
[482.90646362 685.01800537]
[474.56964111 697.49102783]
[465.67373657 709.57159424]
[456.23718262 721.23480225]
[446.27960205 732.45642090]
[435.82156372 743.21319580]
[424.88479614 753.48278809]
[413.49191284 763.24401855]
[401.66659546 772.47656250]
[389.43328857 781.16125488]
[376.81738281 789.28021240]
[363.84503174 796.81652832]
[350.54312134 803.75463867]
[336.93917847 810.08007812]
[323.06146240 815.77984619]
[308.93869019 820.84204102]
[294.60015869 825.25616455]
[280.07556152 829.01312256]
[265.39501953 832.10510254]
[250.58898926 834.52569580]
[235.68811035 836.26989746]
[220.72329712 837.33404541]
[205.72554016 837.71600342]
[190.72595215 837.41497803]
[175.75561523 836.43151855]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 134]
[62 132]
[63 131]
[64 130]
[67 129]
[68 128]
[72 127]
[73 126]
[74 125]
[75 123]
[76 122]
[77 121]
[78 120]
[88 119]
[89 118]
[90 117]
[91 116]
[92 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
