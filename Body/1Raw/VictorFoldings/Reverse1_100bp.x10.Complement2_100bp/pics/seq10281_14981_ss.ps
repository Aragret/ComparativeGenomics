%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[84.99258423 680.43859863]
[80.15332031 666.21051025]
[77.48879242 651.42004395]
[77.05854034 636.39758301]
[78.87216187 621.47888184]
[82.88914490 606.99713135]
[89.01975250 593.27581787]
[97.12702179 580.62158203]
[107.02983093 569.31707764]
[118.50695038 559.61486816]
[131.30197144 551.73162842]
[145.12905884 545.84356689]
[141.37275696 531.32153320]
[137.61645508 516.79943848]
[133.86015320 502.27740479]
[130.10386658 487.75534058]
[126.34755707 473.23327637]
[122.59125519 458.71124268]
[107.09972382 458.99169922]
[91.98101044 455.56219482]
[78.11111450 448.61712646]
[66.29470825 438.55477905]
[57.21840668 425.95437622]
[51.41094208 411.54278564]
[49.21231842 396.15258789]
[50.75391388 380.67398071]
[55.95065308 366.00329590]
[64.50567627 352.99105835]
[75.92729950 342.39270020]
[89.55728912 334.82470703]
[85.58518982 320.36019897]
[81.61309052 305.89566040]
[77.64099884 291.43115234]
[73.66889954 276.96661377]
[69.16825104 291.27551270]
[58.96821594 302.27365112]
[45.03826141 307.83749390]
[30.06804276 306.89276123]
[16.94807434 299.62182617]
[8.21161938 287.42861938]
[5.54554844 272.66744995]
[9.46463776 258.18847656]
[19.21217346 246.78733826]
[32.90605927 240.66545105]
[47.90221786 241.00483704]
[61.30513000 247.73997498]
[70.52744293 259.57153320]
[69.18920898 244.63136292]
[67.85097504 229.69117737]
[62.23804474 243.60142517]
[52.97876358 255.40251160]
[40.80335236 264.16375732]
[26.67201996 269.19421387]
[11.69922161 270.09713745]
[-2.93422651 266.80136108]
[-16.07426834 259.56677246]
[-26.68462753 248.96392822]
[-33.92852402 235.82902527]
[-37.23468018 221.19790649]
[-36.34235001 206.22447205]
[-31.32191086 192.08958435]
[-22.56929398 179.90797424]
[-10.77477074 170.64031982]
[3.13149667 165.01753235]
[18.05280113 163.48304749]
[32.81238556 166.15786743]
[46.24625015 172.83103943]
[57.29494095 182.97630310]
[65.08711243 195.79356384]
[69.00867462 210.27542114]
[72.11278534 195.60012817]
[75.21689606 180.92481995]
[78.32100677 166.24951172]
[81.42511749 151.57421875]
[67.66415405 144.26420593]
[56.51595688 133.37759399]
[48.88130188 119.79406738]
[45.37707901 104.61115265]
[46.28643036 89.05565643]
[51.53588104 74.38446808]
[60.70127106 61.78303909]
[73.04202271 52.26956940]
[87.56101227 46.61275864]
[103.08506775 45.26967621]
[105.97034454 30.54978371]
[108.85561371 15.82989216]
[107.43534088 6.80655384]
[111.89498138 0.91305012]
[114.99909210 -13.76225185]
[118.10320282 -28.43755531]
[121.09797668 -43.13555908]
[123.98324585 -57.85544968]
[122.56296539 -66.87879181]
[127.02261353 -72.77229309]
[130.12672424 -87.44759369]
[133.23083496 -102.12289429]
[135.34545898 -116.97309113]
[136.46110535 -131.93154907]
[137.57675171 -146.88999939]
[138.69239807 -161.84844971]
[124.97397614 -168.34223938]
[114.53059387 -179.35588074]
[108.77463531 -193.39985657]
[108.48454285 -208.57484436]
[113.69955444 -222.82855225]
[123.71437836 -234.23327637]
[137.17459106 -241.24662781]
[152.25981140 -242.92010498]
[166.92988586 -239.02738953]
[179.20082092 -230.09492493]
[187.41304016 -217.33076477]
[190.45594788 -202.46116638]
[187.91798401 -187.49710083]
[180.14241028 -174.46234131]
[168.18080139 -165.11975098]
[153.65084839 -160.73280334]
[152.53520203 -145.77435303]
[151.41955566 -130.81590271]
[150.30390930 -115.85744476]
[160.46884155 -126.88804626]
[174.95649719 -130.77491760]
[189.27772522 -126.31367493]
[198.99491882 -114.88668823]
[201.09710693 -100.03472900]
[194.93292236 -86.35983276]
[182.41236877 -78.09932709]
[167.41511536 -77.81280518]
[154.58819580 -85.58906555]
[147.90612793 -99.01878357]
[144.80201721 -84.34348297]
[141.69790649 -69.66818237]
[138.70314026 -54.97017670]
[135.81787109 -40.25028610]
[137.61605835 -33.08172226]
[132.77850342 -25.33344460]
[129.67439270 -10.65814209]
[126.57028198 4.01716042]
[123.57550812 18.71516418]
[120.69023132 33.43505478]
[117.80496216 48.15494537]
[130.62580872 54.53588486]
[141.35641479 64.01982117]
[149.26437378 75.95944977]
[153.80996704 89.53988647]
[154.68295288 103.83424377]
[151.82374573 117.86690521]
[145.42749023 130.68011475]
[135.93074036 141.39938354]
[123.98165894 149.29306030]
[110.39580536 153.82241821]
[96.10041809 154.67832947]
[92.99630737 169.35362244]
[89.89219666 184.02893066]
[86.78808594 198.70423889]
[83.68397522 213.37953186]
[82.79116058 228.35293579]
[84.12939453 243.29312134]
[85.46762848 258.23330688]
[88.13342285 272.99453735]
[92.10552216 287.45904541]
[96.07762146 301.92358398]
[100.04971313 316.38809204]
[104.02181244 330.85263062]
[118.55553436 330.31030273]
[132.83677673 333.02148438]
[146.14685059 338.84628296]
[157.81663513 347.48825073]
[167.26034546 358.50942993]
[174.00483704 371.35244751]
[177.71336365 385.36886597]
[178.20236206 399.85183716]
[175.45056152 414.07174683]
[169.59986877 427.31292725]
[160.94801331 438.90985107]
[149.93351746 448.28030396]
[137.11331177 454.95492554]
[140.86961365 469.47698975]
[144.62591553 483.99905396]
[148.38221741 498.52111816]
[152.13851929 513.04315186]
[155.89482117 527.56524658]
[159.65112305 542.08728027]
[174.59902954 540.53234863]
[189.61172485 541.22277832]
[204.35382080 544.14312744]
[218.49597168 549.22808838]
[231.72222900 556.36419678]
[243.73713684 565.39190674]
[254.27224731 576.10961914]
[263.09222412 588.27783203]
[270.00003052 601.62475586]
[274.84130859 615.85217285]
[277.50793457 630.64221191]
[277.94033813 645.66455078]
[276.12884521 660.58355713]
[272.11392212 675.06591797]
[265.98529053 688.78802490]
[257.87982178 701.44342041]
[247.97860718 712.74938965]
[236.50286865 722.45324707]
[223.70896912 730.33825684]
[209.88272095 736.22833252]
[195.33300781 739.99176025]
[180.38488770 741.54455566]
[165.37228394 740.85198975]
[150.63061523 737.92956543]
[136.48918152 732.84252930]
[123.26393890 725.70458984]
[111.25032043 716.67517090]
[100.71672821 705.95599365]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 182]
[13 181]
[14 180]
[15 179]
[16 178]
[17 177]
[18 176]
[30 163]
[31 162]
[32 161]
[33 160]
[34 159]
[47 158]
[48 157]
[49 156]
[70 155]
[71 154]
[72 153]
[73 152]
[74 151]
[84 140]
[85 139]
[86 138]
[88 137]
[89 136]
[90 135]
[91 133]
[92 132]
[94 131]
[95 130]
[96 129]
[97 119]
[98 118]
[99 117]
[100 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
