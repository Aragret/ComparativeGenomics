%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[145.90476990 840.44531250]
[132.96955872 832.81530762]
[121.02758026 823.70898438]
[110.24648285 813.25408936]
[100.77761841 801.59747314]
[92.75392151 788.90270996]
[86.28801727 775.34808350]
[81.47068787 761.12384033]
[78.36956787 746.42962646]
[77.02817535 731.47180176]
[77.46534729 716.46026611]
[79.67494965 701.60583496]
[83.62596893 687.11706543]
[89.26292419 673.19720459]
[96.50669098 660.04187012]
[105.25557709 647.83557129]
[115.38676453 636.74975586]
[126.75801849 626.94000244]
[139.20971680 618.54406738]
[152.56703186 611.67980957]
[166.64248657 606.44354248]
[181.23844910 602.90887451]
[179.45599365 588.01513672]
[177.67352295 573.12145996]
[175.89105225 558.22772217]
[174.10858154 543.33398438]
[171.77310181 528.51690674]
[168.88783264 513.79705811]
[166.00256348 499.07714844]
[163.11727905 484.35726929]
[160.23200989 469.63735962]
[157.34674072 454.91748047]
[152.97534180 448.95822144]
[154.52980042 439.95703125]
[151.86401367 425.19583130]
[149.19821167 410.43460083]
[144.91601562 404.41091919]
[146.60432434 395.43386841]
[144.15859985 380.63461304]
[141.71287537 365.83532715]
[139.26713562 351.03607178]
[123.44579315 350.44552612]
[108.08293915 346.59588623]
[93.84277344 339.65124512]
[81.34141541 329.90960693]
[71.12030029 317.78994751]
[63.62268448 303.81439209]
[59.17443085 288.58557129]
[57.96987152 272.76071167]
[60.06329346 257.02322388]
[65.36650848 242.05322266]
[73.65255737 228.49815369]
[84.56542969 216.94473267]
[97.63536072 207.89360046]
[112.29904938 201.73759460]
[109.41378021 187.01770020]
[106.52850342 172.29782104]
[103.64323425 157.57792664]
[100.75795746 142.85803223]
[97.87268829 128.13813782]
[94.98741913 113.41825104]
[85.94354248 102.75523376]
[90.29269409 89.46702576]
[74.62695312 88.08006287]
[59.99862671 82.34466553]
[47.58779526 72.73229980]
[38.39316177 60.02681351]
[33.15171051 45.26054764]
[32.27964020 29.63045311]
[35.83930969 14.40105152]
[43.53487778 0.80214995]
[54.73685074 -10.07047844]
[68.53358459 -17.34338570]
[58.10794830 -29.24366951]
[63.04397583 -43.29660416]
[52.61834335 -55.19688797]
[57.55436707 -69.24981689]
[47.12873459 -81.15010834]
[52.06475830 -95.20304108]
[48.96065140 -109.87834167]
[45.85654068 -124.55364227]
[42.75242996 -139.22894287]
[39.73703766 -142.35327148]
[38.04306412 -145.91625977]
[37.64615631 -149.44866943]
[38.37205887 -152.53730774]
[39.92789078 -154.86915588]
[37.70277405 -169.70320129]
[35.47765732 -184.53724670]
[33.25254059 -199.37129211]
[18.28608513 -201.41624451]
[4.50257206 -207.59617615]
[-6.98063040 -217.41007996]
[-15.23262978 -230.06239319]
[-19.58447456 -244.52746582]
[-19.68337822 -259.63265991]
[-15.52132511 -274.15347290]
[-7.43571377 -286.91275024]
[3.91799188 -296.87619019]
[17.61939812 -303.23608398]
[32.55779266 -305.47686768]
[47.52218628 -303.41687012]
[61.29948425 -297.22308350]
[72.77281952 -287.39764404]
[81.01210785 -274.73706055]
[85.34941864 -260.26760864]
[85.43314362 -245.16233826]
[81.25650787 -230.64570618]
[73.15808105 -217.89454651]
[61.79437256 -207.94252014]
[48.08658600 -201.59640503]
[50.31170273 -186.76235962]
[52.53681946 -171.92831421]
[54.76193619 -157.09426880]
[57.42773056 -142.33305359]
[60.53184128 -127.65775299]
[63.63595200 -112.98245239]
[66.74005890 -98.30715179]
[76.94366455 -87.45654297]
[72.22966766 -72.35392761]
[82.43327332 -61.50332260]
[77.71927643 -46.40071106]
[87.92288208 -35.55010223]
[83.20888519 -20.44749451]
[97.51931763 -19.63597107]
[111.14219666 -15.14015770]
[123.14492035 -7.26120567]
[132.70411682 3.46790743]
[139.16204834 16.31842804]
[142.07196045 30.41532326]
[141.22889709 44.79686356]
[136.68415833 58.48023605]
[128.74227905 70.52870941]
[117.94050598 80.11575317]
[105.01258087 86.58174896]
[114.05645752 97.24476624]
[109.70730591 110.53297424]
[112.59258270 125.25286865]
[115.47785187 139.97276306]
[118.36312866 154.69265747]
[121.24839783 169.41253662]
[124.13366699 184.13243103]
[127.01894379 198.85232544]
[141.22428894 198.84051514]
[155.18281555 201.45387268]
[168.41378784 206.60079956]
[180.46174622 214.10240173]
[190.91233826 223.69882202]
[199.40646362 235.05818176]
[205.65264893 247.78804016]
[209.43702698 261.44897461]
[210.63072205 275.56976318]
[209.19413757 289.66360474]
[205.17839050 303.24496460]
[198.72338867 315.84619141]
[190.05297852 327.03375244]
[179.46723938 336.42300415]
[167.33203125 343.69158936]
[154.06642151 348.59033203]
[156.51214600 363.38961792]
[158.95787048 378.18887329]
[161.40359497 392.98815918]
[163.95942688 407.76879883]
[166.62522888 422.53002930]
[169.29101562 437.29122925]
[172.06663513 452.03219604]
[174.95190430 466.75210571]
[177.83717346 481.47198486]
[180.72244263 496.19186401]
[183.60772705 510.91177368]
[186.49299622 525.63165283]
[196.90014648 514.82928467]
[211.84803772 516.07861328]
[220.31761169 528.45867920]
[216.06542969 542.84338379]
[202.22604370 548.62884521]
[189.00230408 541.55151367]
[190.78477478 556.44525146]
[192.56724548 571.33898926]
[194.34970093 586.23266602]
[196.13217163 601.12640381]
[211.15003967 601.11694336]
[226.06359863 602.88378906]
[240.66351318 606.40216064]
[254.74481201 611.62268066]
[268.10980225 618.47198486]
[280.57089233 626.85400391]
[291.95309448 636.65100098]
[302.09667969 647.72546387]
[310.85922241 659.92199707]
[318.11767578 673.06927490]
[323.77020264 686.98272705]
[327.73742676 701.46716309]
[329.96362305 716.31909180]
[330.41760254 731.33007812]
[329.09292603 746.28942871]
[326.00823975 760.98706055]
[321.20681763 775.21673584]
[314.75610352 788.77862549]
[306.74658203 801.48229980]
[297.29077148 813.14953613]
[286.52139282 823.61645508]
[274.58959961 832.73614502]
[261.66290283 840.38055420]
[247.92282104 846.44244385]
[233.56221008 850.83660889]
[218.78265381 853.50146484]
[203.79167175 854.39953613]
[188.79968262 853.51824951]
[174.01716614 850.86993408]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 181]
[23 180]
[24 179]
[25 178]
[26 177]
[27 171]
[28 170]
[29 169]
[30 168]
[31 167]
[32 166]
[34 165]
[35 164]
[36 163]
[38 162]
[39 161]
[40 160]
[41 159]
[55 143]
[56 142]
[57 141]
[58 140]
[59 139]
[60 138]
[61 137]
[63 135]
[73 124]
[75 122]
[77 120]
[79 118]
[80 117]
[81 116]
[82 115]
[87 114]
[88 113]
[89 112]
[90 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
