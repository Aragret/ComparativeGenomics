%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[97.84080505 868.47283936]
[83.20621490 865.04809570]
[69.26597595 859.42932129]
[56.34685898 851.74841309]
[44.75170898 842.18530273]
[34.75233459 830.96417236]
[26.58313560 818.34814453]
[20.43560982 804.63287354]
[16.45386124 790.13995361]
[14.73123169 775.20898438]
[15.30809879 760.19006348]
[18.17094231 745.43524170]
[23.25265121 731.29040527]
[30.43410492 718.08709717]
[39.54695892 706.13488770]
[50.37759399 695.71386719]
[62.67212677 687.06829834]
[76.14234924 680.40100098]
[90.47251129 675.86810303]
[105.32668304 673.57592773]
[105.32668304 658.57592773]
[105.32668304 643.57592773]
[105.32668304 628.57592773]
[105.32668304 613.57592773]
[94.64581299 603.25830078]
[94.43212891 588.04614258]
[105.32668304 576.91302490]
[97.58938599 564.18572998]
[105.32668304 550.38555908]
[105.32668304 535.38555908]
[105.32668304 520.38555908]
[105.32668304 505.38555908]
[95.74599457 490.68261719]
[105.08543396 474.81262207]
[104.86210632 459.81427002]
[104.63877869 444.81594849]
[90.04513550 441.48220825]
[76.66543579 434.74841309]
[65.27938843 425.00213623]
[56.55167007 412.80661011]
[50.99312973 398.86822510]
[48.93091965 383.99557495]
[50.48921204 369.05261230]
[55.58174133 354.90838623]
[63.91657257 342.38650513]
[75.01283264 332.21734619]
[88.22843933 324.99514771]
[102.79727936 321.14358521]
[102.57395172 306.14523315]
[89.49894714 299.01013184]
[81.69901276 286.20321655]
[81.35444641 271.11190796]
[88.65791321 257.78689575]
[101.73577881 249.85487366]
[101.51245117 234.85653687]
[101.28912354 219.85820007]
[101.06579590 204.85986328]
[100.84246063 189.86152649]
[100.61913300 174.86318970]
[99.61487579 159.89685059]
[97.83241272 145.00312805]
[96.04994202 130.10940552]
[94.26747894 115.21569061]
[83.87030029 102.05229187]
[90.63981628 86.70465851]
[88.63580322 71.83913422]
[86.63179016 56.97360229]
[84.62777710 42.10807419]
[82.29228973 27.29100800]
[79.62649536 12.52978992]
[76.96070099 -2.23142695]
[72.35597992 -10.12030315]
[74.36681366 -17.23214912]
[71.92108917 -32.03141785]
[69.47535706 -46.83068848]
[67.02963257 -61.62996292]
[64.58390045 -76.42922974]
[61.27046204 -80.46261597]
[59.96593475 -84.91812134]
[60.49470139 -88.95983124]
[62.37483215 -91.94268799]
[60.59236908 -106.83641052]
[58.80990219 -121.73012543]
[49.17129517 -130.30101013]
[47.99329376 -142.74272156]
[55.36441803 -152.33401489]
[53.80389404 -167.25262451]
[44.67288208 -180.17295837]
[51.04411697 -193.63612366]
[48.37012482 -197.05718994]
[47.05601883 -200.77709961]
[47.02875900 -204.33161926]
[48.07204819 -207.32797241]
[49.86203384 -209.48532104]
[49.19224930 -224.47035217]
[48.52246475 -239.45539856]
[34.12957764 -244.27299500]
[22.45143127 -253.96759033]
[15.06739426 -267.22808838]
[12.97609806 -282.26107788]
[16.46037292 -297.03347778]
[25.04899979 -309.54748535]
[37.58043671 -318.11062622]
[52.35991287 -321.56484985]
[67.38861847 -319.44296265]
[80.63405609 -312.03195190]
[90.30487061 -300.33410645]
[95.09318542 -285.93145752]
[94.35140991 -270.77182007]
[88.17985535 -256.90545654]
[77.41318512 -246.20764160]
[63.50750351 -240.12518311]
[64.17728424 -225.14013672]
[64.84706879 -210.15510559]
[65.96272278 -195.19664001]
[74.98211670 -183.34338379]
[68.72250366 -168.81314087]
[70.28302002 -153.89454651]
[81.34134674 -140.26808167]
[73.70362091 -123.51258850]
[75.48608398 -108.61887360]
[77.26854706 -93.72515869]
[79.38317108 -78.87496185]
[81.82890320 -64.07569122]
[84.27462769 -49.27641678]
[86.72035980 -34.47714615]
[89.16608429 -19.67787552]
[91.72191620 -4.89722252]
[94.38771057 9.86399460]
[97.05350494 24.62521172]
[99.72606659 26.92516327]
[101.41739655 30.63386154]
[101.47753143 35.27602386]
[99.49330902 40.10406113]
[101.49732208 54.96958923]
[103.50133514 69.83512115]
[105.50534821 84.70064545]
[114.32477570 92.30715179]
[115.79479218 103.86051941]
[109.16119385 113.43322754]
[110.94366455 128.32695007]
[112.72612762 143.22065735]
[114.50859070 158.11437988]
[123.71048737 146.26847839]
[138.34693909 142.98603821]
[151.72634888 149.76773071]
[157.73184204 163.51306152]
[153.61778259 177.93785095]
[141.26506042 186.44728088]
[126.32118225 185.15095520]
[115.61747742 174.63986206]
[115.84080505 189.63819885]
[116.06413269 204.63653564]
[116.28746033 219.63487244]
[116.51078796 234.63320923]
[116.73411560 249.63154602]
[130.04234314 257.17065430]
[137.73930359 270.27233887]
[137.84422302 285.36718750]
[130.42904663 298.40066528]
[117.57228851 305.92190552]
[117.79561615 320.92025757]
[132.47267151 324.33633423]
[145.89744568 331.16186523]
[157.29156494 340.99615479]
[165.99551392 353.26428223]
[171.50691223 367.25064087]
[173.50942993 382.14059448]
[171.89094543 397.06805420]
[166.74986267 411.16574097]
[158.38911438 423.61572266]
[147.29830933 433.69668579]
[134.12503052 440.82583618]
[119.63711548 444.59262085]
[119.86044312 459.59094238]
[120.08377075 474.58929443]
[128.77839661 484.11642456]
[128.65563965 496.61315918]
[120.32668304 505.38555908]
[120.32668304 520.38555908]
[120.32668304 535.38555908]
[120.32668304 550.38555908]
[128.06398010 564.18572998]
[120.32668304 576.91302490]
[131.22123718 588.04614258]
[131.00755310 603.25830078]
[120.32668304 613.57592773]
[120.32668304 628.57592773]
[120.32668304 643.57592773]
[120.32668304 658.57592773]
[120.32668304 673.57592773]
[135.18086243 675.86810303]
[149.51101685 680.40100098]
[162.98124695 687.06829834]
[175.27577209 695.71386719]
[186.10641479 706.13488770]
[195.21926880 718.08709717]
[202.40071106 731.29040527]
[207.48242188 745.43524170]
[210.34527588 760.19006348]
[210.92213440 775.20898438]
[209.19950867 790.13995361]
[205.21775818 804.63287354]
[199.07023621 818.34814453]
[190.90103149 830.96417236]
[180.90165710 842.18530273]
[169.30651855 851.74841309]
[156.38739014 859.42932129]
[142.44715881 865.04809570]
[127.81256104 868.47283936]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 191]
[21 190]
[22 189]
[23 188]
[24 187]
[27 184]
[29 182]
[30 181]
[31 180]
[32 179]
[34 176]
[35 175]
[36 174]
[48 162]
[49 161]
[54 156]
[55 155]
[56 154]
[57 153]
[58 152]
[59 151]
[60 143]
[61 142]
[62 141]
[63 140]
[65 137]
[66 136]
[67 135]
[68 134]
[69 130]
[70 129]
[71 128]
[73 127]
[74 126]
[75 125]
[76 124]
[77 123]
[81 122]
[82 121]
[83 120]
[86 118]
[87 117]
[89 115]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
