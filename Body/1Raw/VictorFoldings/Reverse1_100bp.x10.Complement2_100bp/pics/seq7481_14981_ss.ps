%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[53.64457321 872.11132812]
[38.64163971 872.15112305]
[23.65455818 871.46044922]
[8.71887779 870.04089355]
[-6.12997484 867.89587402]
[-20.85678101 865.03045654]
[-35.42660904 861.45135498]
[-49.80490112 857.16717529]
[-63.95755386 852.18798828]
[-77.85099792 846.52569580]
[-91.45227814 840.19366455]
[-104.72914124 833.20690918]
[-117.65008545 825.58203125]
[-130.18447876 817.33709717]
[-142.30256653 808.49163818]
[-153.97561646 799.06671143]
[-165.17596436 789.08465576]
[-175.87701416 778.56909180]
[-186.05339050 767.54498291]
[-195.68095398 756.03845215]
[-204.73689270 744.07690430]
[-213.19969177 731.68853760]
[-221.04931641 718.90289307]
[-228.26710510 705.75018311]
[-234.83596802 692.26171875]
[-240.74032593 678.46936035]
[-245.96615601 664.40594482]
[-250.50108337 650.10473633]
[-254.33432007 635.59973145]
[-257.45681763 620.92523193]
[-259.86114502 606.11621094]
[-261.54156494 591.20758057]
[-262.49417114 576.23486328]
[-262.71664429 561.23352051]
[-262.20846558 546.23919678]
[-260.97085571 531.28729248]
[-259.00674438 516.41345215]
[-256.32080078 501.65286255]
[-252.91935730 487.04052734]
[-248.81051636 472.61114502]
[-244.00401306 458.39892578]
[-238.51126099 444.43759155]
[-232.34527588 430.76022339]
[-225.52067566 417.39929199]
[-218.05366516 404.38647461]
[-209.96194458 391.75265503]
[-201.26469421 379.52777100]
[-191.98257446 367.74084473]
[-182.13757324 356.41979980]
[-171.75306702 345.59152222]
[-160.85365295 335.28170776]
[-149.46522522 325.51477051]
[-137.61476135 316.31387329]
[-125.33038330 307.70086670]
[-112.64122772 299.69619751]
[-99.57738495 292.31881714]
[-86.16985321 285.58621216]
[-72.45043182 279.51440430]
[-58.45165253 274.11773682]
[-44.20672989 269.40905762]
[-29.74944115 265.39950562]
[-15.11408424 262.09860229]
[-0.33537024 259.51419067]
[14.55164623 257.65237427]
[29.51165581 256.51757812]
[44.50917435 256.11248779]
[59.50862885 256.43807983]
[74.47444153 257.49356079]
[76.25690460 242.59985352]
[70.08682251 229.04333496]
[79.40918732 216.26037598]
[81.19165802 201.36665344]
[82.97412109 186.47293091]
[84.75659180 171.57922363]
[76.99095154 155.84194946]
[88.15006256 141.19422913]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[95.37081146 72.16385651]
[96.93133545 57.24525070]
[98.49185944 42.32664490]
[100.05237579 27.40804100]
[101.39060974 12.46785545]
[102.50626373 -2.49059796]
[89.61008453 5.17025375]
[75.52665710 0.00721987]
[70.63774872 -14.17370319]
[78.54728699 -26.91886711]
[93.42465210 -28.83301163]
[104.30221558 -18.50664139]
[106.52732849 -33.34068298]
[108.75244904 -48.17472839]
[110.97756195 -63.00876999]
[113.20268250 -77.84281921]
[107.59811401 -92.63806915]
[117.13779449 -104.07676697]
[119.36290741 -118.91081238]
[121.58802795 -133.74485779]
[107.88024139 -140.09097290]
[96.51653290 -150.04299927]
[88.41810608 -162.79415894]
[84.24146271 -177.31079102]
[84.32519531 -192.41607666]
[88.66250610 -206.88549805]
[96.90178680 -219.54611206]
[108.37512970 -229.37153625]
[122.15242767 -235.56530762]
[137.11682129 -237.62530518]
[152.05520630 -235.38453674]
[165.75662231 -229.02464294]
[177.11032104 -219.06121826]
[185.19593811 -206.30192566]
[189.35798645 -191.78111267]
[189.25907898 -176.67591858]
[184.90724182 -162.21084595]
[176.65524292 -149.55853271]
[165.17204285 -139.74462891]
[151.38851929 -133.56469727]
[136.42207336 -131.51972961]
[134.19696045 -116.68569183]
[131.97183228 -101.85164642]
[137.73554993 -88.11743164]
[128.03672791 -75.61769867]
[125.81160736 -60.78365326]
[123.58648682 -45.94961166]
[121.36137390 -31.11556625]
[119.13625336 -16.28152275]
[117.46471405 -1.37494922]
[116.34906769 13.58350372]
[118.73149109 17.72272110]
[118.53897095 23.40250587]
[114.97098541 28.96856308]
[113.41046143 43.88716888]
[111.84993744 58.80577469]
[110.28941345 73.72438049]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[103.06866455 142.75474548]
[110.56957245 153.24755859]
[108.96268463 165.64117432]
[99.65030670 173.36167908]
[97.86784363 188.25540161]
[96.08537292 203.14912415]
[94.30290985 218.04283142]
[100.34549713 232.66465759]
[91.15062714 244.38232422]
[89.36815643 259.27603149]
[104.16038513 261.78195190]
[118.81306458 265.00509644]
[133.29144287 268.93783569]
[147.56115723 273.57083130]
[161.58839417 278.89306641]
[175.33987427 284.89196777]
[188.78295898 291.55325317]
[201.88578796 298.86117554]
[214.61726379 306.79837036]
[226.94718933 315.34603882]
[238.84634399 324.48385620]
[250.28648376 334.19018555]
[261.24047852 344.44201660]
[271.68234253 355.21499634]
[281.58731079 366.48358154]
[290.93188477 378.22106934]
[299.69390869 390.39959717]
[307.85260010 402.99026489]
[315.38861084 415.96325684]
[322.28405762 429.28778076]
[328.52255249 442.93218994]
[334.08938599 456.86419678]
[338.97128296 471.05068970]
[343.15667725 485.45803833]
[346.63562012 500.05209351]
[349.39993286 514.79821777]
[351.44299316 529.66143799]
[352.75997925 544.60650635]
[353.34774780 559.59802246]
[353.20492554 574.60028076]
[352.33184814 589.57788086]
[350.73059082 604.49517822]
[348.40493774 619.31677246]
[345.36041260 634.00762939]
[341.60421753 648.53283691]
[337.14529419 662.85784912]
[331.99423218 676.94885254]
[326.16317749 690.77233887]
[319.66604614 704.29553223]
[312.51815796 717.48632812]
[304.73654175 730.31353760]
[296.33963013 742.74658203]
[287.34735107 754.75610352]
[277.78100586 766.31353760]
[267.66329956 777.39154053]
[257.01824951 787.96380615]
[245.87106323 798.00518799]
[234.24821472 807.49200439]
[222.17726135 816.40161133]
[209.68682861 824.71301270]
[196.80654907 832.40637207]
[183.56697083 839.46350098]
[169.99951172 845.86767578]
[156.13632202 851.60369873]
[142.01031494 856.65789795]
[127.65496826 861.01837158]
[113.10434723 864.67480469]
[98.39295959 867.61840820]
[83.55570984 869.84222412]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 151]
[69 150]
[71 148]
[72 147]
[73 146]
[74 145]
[76 142]
[77 141]
[78 140]
[80 138]
[81 137]
[82 136]
[83 135]
[84 134]
[85 131]
[86 130]
[92 129]
[93 128]
[94 127]
[95 126]
[96 125]
[98 123]
[99 122]
[100 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
