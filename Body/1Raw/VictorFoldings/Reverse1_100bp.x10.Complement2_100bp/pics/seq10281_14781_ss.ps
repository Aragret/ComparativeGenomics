%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[102.07228851 558.59143066]
[87.74484253 563.34820557]
[72.66527557 564.06195068]
[57.95260620 560.67962646]
[44.69860458 553.45233154]
[33.88680649 542.91632080]
[26.31951904 529.85345459]
[22.55828476 515.23303223]
[22.88221359 500.14007568]
[27.26726723 485.69454956]
[35.38804626 472.96835327]
[46.64193344 462.90591431]
[60.19381714 456.25393677]
[75.03805542 453.50598145]
[76.37628937 438.56582642]
[77.71452332 423.62564087]
[69.48377228 408.12655640]
[80.20182037 393.15307617]
[81.31746674 378.19461060]
[82.43311310 363.23617554]
[83.54876709 348.27770996]
[84.66441345 333.31924438]
[82.28199005 329.18002319]
[82.47451019 323.50024414]
[86.04249573 317.93420410]
[87.60301971 303.01559448]
[89.16354370 288.09698486]
[90.61296082 273.16717529]
[91.95119476 258.22698975]
[83.72044373 242.72790527]
[94.43849182 227.75442505]
[95.55413818 212.79597473]
[96.66978455 197.83752441]
[97.78543854 182.87907410]
[98.78969574 167.91273499]
[99.68251038 152.93931580]
[100.57532501 137.96591187]
[98.90378571 123.05934143]
[94.71677399 108.65556335]
[89.62160492 102.40962219]
[90.57636261 94.00609589]
[86.60427094 79.54156494]
[80.07164764 93.04434204]
[66.90476990 100.22998047]
[52.01456451 98.41841888]
[40.95470428 88.28533173]
[37.85024643 73.61010742]
[43.85907364 59.86623383]
[56.74004745 52.17984390]
[71.68887329 53.41777039]
[83.13063812 63.11928558]
[80.90552521 48.28524399]
[78.68040466 33.45119858]
[76.45529175 18.61715508]
[74.23017120 3.78311229]
[72.00505066 -11.05093193]
[65.05024719 2.23931408]
[52.43528366 10.35489845]
[37.45768738 11.17442703]
[24.03256607 4.48367786]
[15.66921329 -7.96840429]
[14.55379105 -22.92687416]
[20.97786713 -36.48162460]
[33.26220322 -45.08947754]
[48.19570160 -46.50035477]
[61.87478638 -40.34546280]
[70.72344971 -28.23450279]
[70.72344971 -43.23450089]
[70.72344971 -58.23450089]
[70.72344971 -73.23450470]
[70.72344971 -88.23450470]
[61.14876175 -103.96367645]
[70.50949097 -118.80765533]
[70.28616333 -133.80599976]
[70.06283569 -148.80433655]
[68.94718170 -163.76278687]
[59.43553162 -176.40553284]
[65.40309143 -190.05241394]
[63.39907837 -204.91793823]
[61.39506531 -219.78347778]
[51.88341522 -232.42622375]
[57.85097504 -246.07310486]
[55.84696198 -260.93862915]
[53.84294891 -275.80416870]
[38.81710052 -276.48507690]
[24.15435219 -279.83822632]
[10.32605076 -285.75579834]
[-2.22328043 -294.04760742]
[-13.09023190 -304.44708252]
[-21.92547798 -316.61993408]
[-28.44499969 -330.17486572]
[-32.43922043 -344.67608643]
[-33.77974701 -359.65750122]
[-32.42348480 -374.63751221]
[-28.41403389 -389.13455200]
[-21.88027573 -402.68258667]
[-13.03224945 -414.84616089]
[-2.15438008 -425.23422241]
[10.40365410 -433.51284790]
[24.23816299 -439.41589355]
[38.90442657 -442.75363159]
[53.93098068 -443.41876221]
[68.83478546 -441.38989258]
[83.13674927 -436.73226929]
[96.37712097 -429.59558105]
[108.13027954 -420.20925903]
[118.01840210 -408.87503052]
[125.72363281 -395.95724487]
[130.99827576 -381.87115479]
[133.67277527 -367.06954956]
[133.66116333 -352.02828979]
[130.96380615 -337.23086548]
[125.66741943 -323.15292358]
[117.94224548 -310.24707031]
[108.03662872 -298.92813110]
[96.26898956 -289.55996704]
[83.01761627 -282.44372559]
[68.70847321 -277.80816650]
[70.71249390 -262.94265747]
[72.71650696 -248.07711792]
[82.08481598 -236.49765015]
[76.26059723 -221.78749084]
[78.26461029 -206.92195129]
[80.26862335 -192.05642700]
[89.63693237 -180.47695923]
[83.81271362 -165.76679993]
[92.09075165 -178.27575684]
[106.09960175 -183.63786316]
[120.61429596 -179.85321045]
[130.22120667 -168.33335876]
[131.33721924 -153.37492371]
[123.54606628 -140.55705261]
[109.75366211 -134.66047668]
[95.10423279 -137.88447571]
[85.06117249 -149.02766418]
[85.28450012 -134.02932739]
[85.50782776 -119.03098297]
[93.96646881 -110.38356018]
[94.27527618 -97.89002228]
[85.72344971 -88.23450470]
[85.72344971 -73.23450470]
[85.72344971 -58.23450089]
[85.72344971 -43.23450089]
[85.72344971 -28.23450279]
[86.83909607 -13.27604866]
[89.06421661 1.55799508]
[91.28932953 16.39203835]
[93.51445007 31.22608185]
[95.73956299 46.06012726]
[97.96468353 60.89416885]
[101.06879425 75.56947327]
[105.04089355 90.03399658]
[109.12055969 104.46855164]
[113.30757141 118.87232971]
[115.97587585 104.11156464]
[122.18472290 90.45688629]
[131.55442810 78.74328613]
[143.51203918 69.68704987]
[157.32635498 63.84196472]
[172.15260315 61.56547165]
[187.08415222 62.99677277]
[201.20794678 68.04834747]
[213.66030884 76.41127777]
[223.67976379 87.57418823]
[230.65362549 100.85444641]
[234.15544128 115.43996429]
[233.97106934 130.43882751]
[230.11177063 144.93385315]
[222.81356812 158.03868103]
[212.52273560 168.95191956]
[199.86857605 177.00622559]
[185.62486267 181.70909119]
[170.66264343 182.77291870]
[155.89683533 180.13265991]
[142.23037720 173.94976807]
[130.49899292 164.60232544]
[121.42005920 152.66194153]
[115.54872894 138.85873413]
[114.65591431 153.83213806]
[113.76309967 168.80554199]
[116.37617493 177.55824280]
[112.74388885 183.99472046]
[111.62824249 198.95317078]
[110.51258850 213.91162109]
[109.39694214 228.87008667]
[117.20693207 239.13491821]
[115.96975708 251.57087708]
[106.89138031 259.56521606]
[105.55314636 274.50540161]
[107.90445709 283.33203125]
[104.08214569 289.65750122]
[102.52162170 304.57611084]
[100.96109772 319.49472046]
[99.62286377 334.43490601]
[98.50721741 349.39334106]
[97.39157104 364.35180664]
[96.27591705 379.31027222]
[95.16027069 394.26870728]
[102.97026062 404.53353882]
[101.73308563 416.96951294]
[92.65470886 424.96386719]
[91.31647491 439.90405273]
[89.97824097 454.84423828]
[104.09781647 460.18652344]
[116.25177765 469.14108276]
[125.53822327 481.04336548]
[131.26803589 495.01016235]
[133.01602173 510.00506592]
[130.65248108 524.91534424]
[124.35279083 538.63452148]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 203]
[15 202]
[16 201]
[18 198]
[19 197]
[20 196]
[21 195]
[22 194]
[25 193]
[26 192]
[27 191]
[28 189]
[29 188]
[31 185]
[32 184]
[33 183]
[34 182]
[35 180]
[36 179]
[37 178]
[38 154]
[39 153]
[41 152]
[42 151]
[51 150]
[52 149]
[53 148]
[54 147]
[55 146]
[56 145]
[67 144]
[68 143]
[69 142]
[70 141]
[71 140]
[73 137]
[74 136]
[75 135]
[76 126]
[78 124]
[79 123]
[80 122]
[82 120]
[83 119]
[84 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
