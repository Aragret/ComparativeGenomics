%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[31.29815865 430.20062256]
[36.42166901 444.36267090]
[38.38052368 459.29510498]
[37.08309937 474.29946899]
[32.59008789 488.67398071]
[25.11162567 501.74633789]
[14.99750042 512.90515137]
[2.72076583 521.62841797]
[-11.14437199 527.50823975]
[-25.94941711 530.26953125]
[-41.00190735 529.78314209]
[-55.59781647 526.07183838]
[-69.05445862 519.30926514]
[-80.74245453 509.81164551]
[-90.11511993 498.02322388]
[-96.73409271 484.49533081]
[-100.28978729 469.86074829]
[-100.61589050 454.80392456]
[-97.69715118 440.02911377]
[-91.67009735 426.22735596]
[-82.81661224 414.04418945]
[-71.55078888 404.04940796]
[-58.39955521 396.71054077]
[-43.97801971 392.37078857]
[-28.96070099 391.23315430]
[-14.04998589 393.35086060]
[-8.80326748 379.29840088]
[-3.55654907 365.24591064]
[1.69016910 351.19345093]
[6.93688726 337.14099121]
[6.33157778 329.77514648]
[12.36774635 322.91931152]
[17.82310295 308.94653320]
[15.24444199 294.27682495]
[27.47088242 284.23568726]
[32.92623901 270.26287842]
[38.17295837 256.21041870]
[43.20987320 242.08137512]
[48.24679184 227.95234680]
[53.28370667 213.82331848]
[58.21530151 199.65718079]
[63.04129791 185.45472717]
[59.81017303 170.91482544]
[71.57605743 160.33773804]
[68.34493256 145.79782104]
[80.11081696 135.22074890]
[69.29382324 126.32891846]
[62.15673828 114.28175354]
[59.55488205 100.52303314]
[61.80007553 86.70162964]
[68.62323761 74.47393799]
[79.20667267 65.30535126]
[92.28203583 60.29465866]
[106.28233337 60.04235458]
[111.31925201 45.91332626]
[116.35617065 31.78429794]
[121.39308167 17.65526772]
[126.43000031 3.52623844]
[113.85840607 -6.07457638]
[104.88002014 -19.07437897]
[100.36385345 -34.19379807]
[100.74049377 -49.94936371]
[105.96104431 -64.79904938]
[115.50315857 -77.29322052]
[128.42320251 -86.21610260]
[143.44961548 -90.70413208]
[159.10803223 -90.32947540]
[163.93402100 -104.53193665]
[168.76002502 -118.73439026]
[173.58602905 -132.93684387]
[169.58100891 -150.91020203]
[183.21983337 -161.95327759]
[187.83384705 -176.22601318]
[192.44786072 -190.49873352]
[197.06185913 -204.77146912]
[201.67587280 -219.04420471]
[206.28988647 -233.31694031]
[210.90388489 -247.58967590]
[215.51789856 -261.86239624]
[219.81202698 -276.23461914]
[212.25451660 -289.85525513]
[216.48883057 -304.46774292]
[229.52059937 -311.58874512]
[233.49270630 -326.05328369]
[237.46479797 -340.51779175]
[241.43688965 -354.98233032]
[244.10269165 -369.74353027]
[245.44091797 -384.68371582]
[246.77915955 -399.62390137]
[248.11738586 -414.56408691]
[245.68667603 -420.71252441]
[246.59027100 -426.32327271]
[249.72438049 -429.92694092]
[251.50685120 -444.82064819]
[253.28932190 -459.71435547]
[255.07177734 -474.60809326]
[256.85424805 -489.50180054]
[258.63671875 -504.39550781]
[244.62571716 -509.99499512]
[232.54196167 -519.03076172]
[223.20935059 -530.88677979]
[217.26419067 -544.75463867]
[215.11183167 -559.68884277]
[216.89901733 -574.67108154]
[222.50392151 -588.67993164]
[231.54435730 -600.76019287]
[243.40396118 -610.08825684]
[257.27410889 -616.02801514]
[272.20913696 -618.17462158]
[287.19070435 -616.38165283]
[301.19738770 -610.77136230]
[313.27413940 -601.72625732]
[322.59759521 -589.86303711]
[328.53204346 -575.99060059]
[330.67288208 -561.05474854]
[328.87411499 -546.07385254]
[323.25839233 -532.06933594]
[314.20861816 -519.99609375]
[302.34182739 -510.67721558]
[288.46710205 -504.74810791]
[273.53042603 -502.61303711]
[271.74795532 -487.71932983]
[269.96548462 -472.82562256]
[268.18304443 -457.93188477]
[266.40057373 -443.03817749]
[264.61810303 -428.14447021]
[263.05758667 -413.22586060]
[261.71932983 -398.28567505]
[260.38110352 -383.34548950]
[259.04287720 -368.40530396]
[268.26419067 -380.23608398]
[281.66687012 -386.97171021]
[296.66302490 -387.31164551]
[310.35711670 -381.19027710]
[320.10507202 -369.78952026]
[324.02471924 -355.31069946]
[321.35919189 -340.54940796]
[312.62319946 -328.35589600]
[299.50350952 -321.08447266]
[284.53332520 -320.13916016]
[270.60314941 -325.70248413]
[260.40270996 -336.70022583]
[255.90141296 -351.01022339]
[251.92932129 -336.54571533]
[247.95722961 -322.08117676]
[243.98512268 -307.61666870]
[251.55252075 -294.83892822]
[247.73030090 -280.11325073]
[234.27655029 -272.26251221]
[235.69340515 -269.03375244]
[235.61676025 -264.95834351]
[233.66574097 -260.74563599]
[229.79063416 -257.24838257]
[225.17662048 -242.97566223]
[220.56262207 -228.70292664]
[215.94860840 -214.43019104]
[211.33459473 -200.15747070]
[206.72058105 -185.88473511]
[202.10658264 -171.61199951]
[197.49256897 -157.33926392]
[202.71929932 -146.43019104]
[198.99211121 -134.50158691]
[187.78848267 -128.11083984]
[182.96247864 -113.90839386]
[178.13648987 -99.70593262]
[173.31048584 -85.50347900]
[184.93646240 -77.25590515]
[193.77635193 -66.05339050]
[199.10633850 -52.79873657]
[200.48588562 -38.56334305]
[197.79421997 -24.50062180]
[191.24079895 -11.75253201]
[181.34898376 -1.35685480]
[168.91438293 5.83729172]
[154.94076538 9.23880482]
[140.55903625 8.56315422]
[135.52210999 22.69218445]
[130.48519897 36.82121277]
[125.44828033 50.95024490]
[120.41136169 65.07926941]
[132.23802185 75.57068634]
[139.13975525 89.79410553]
[140.06222534 105.57664490]
[134.86450195 120.50726318]
[124.34061432 132.30503845]
[110.09828949 139.16766357]
[94.31327057 140.04675293]
[97.19921112 155.60252380]
[85.77851105 165.16374207]
[88.66445160 180.71951294]
[77.24375153 190.28073120]
[72.41775513 204.48318481]
[72.61977386 213.61538696]
[67.41273499 218.86024475]
[62.37582016 232.98927307]
[57.33890152 247.11830139]
[52.30198669 261.24731445]
[53.11557007 267.80856323]
[50.83572006 273.01425171]
[46.89903641 275.71823120]
[41.44367981 289.69104004]
[43.63213730 305.36016846]
[31.79590225 314.40188599]
[26.34054375 328.37466431]
[20.98935890 342.38769531]
[15.74264050 356.44015503]
[10.49592209 370.49264526]
[5.24920416 384.54510498]
[0.00248577 398.59759521]
[12.65252209 406.77014160]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 209]
[27 208]
[28 207]
[29 206]
[30 205]
[32 204]
[33 203]
[35 201]
[36 200]
[37 197]
[38 196]
[39 195]
[40 194]
[41 192]
[42 191]
[44 189]
[46 187]
[54 180]
[55 179]
[56 178]
[57 177]
[58 176]
[67 166]
[68 165]
[69 164]
[70 163]
[72 160]
[73 159]
[74 158]
[75 157]
[76 156]
[77 155]
[78 154]
[79 153]
[80 149]
[83 146]
[84 145]
[85 144]
[86 143]
[87 130]
[88 129]
[89 128]
[90 127]
[93 126]
[94 125]
[95 124]
[96 123]
[97 122]
[98 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
