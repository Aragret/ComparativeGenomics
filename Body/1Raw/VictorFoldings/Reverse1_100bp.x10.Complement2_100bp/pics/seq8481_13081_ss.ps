%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[142.32281494 367.59542847]
[128.49426270 374.27877808]
[113.17791748 373.13641357]
[100.49378204 364.47570801]
[93.85382843 350.62628174]
[95.04417419 335.31356812]
[103.74462128 322.65664673]
[117.61479187 316.06015015]
[118.73043823 301.10168457]
[119.84608459 286.14321899]
[120.96173859 271.18478394]
[122.07738495 256.22631836]
[121.18457031 241.25291443]
[118.29929352 226.53302002]
[115.41402435 211.81314087]
[112.52874756 197.09324646]
[109.64347839 182.37335205]
[106.64870453 167.67535400]
[103.54459381 153.00004578]
[100.44048309 138.32473755]
[97.33637238 123.64944458]
[94.23226166 108.97413635]
[89.72463226 94.66744995]
[83.85567474 80.86327362]
[71.33569336 71.19060516]
[73.47644043 56.45064163]
[67.60747528 42.64646149]
[61.73851776 28.84228706]
[55.86955643 15.03810978]
[51.69789886 11.90053463]
[49.37881088 7.87870312]
[48.93889236 3.82635570]
[50.06203461 0.48406839]
[44.81531906 -13.56840324]
[39.56859970 -27.62087440]
[34.32188034 -41.67334366]
[29.07516289 -55.72581482]
[23.82844543 -69.77828979]
[9.50013828 -65.32646942]
[-5.05524302 -61.68505478]
[-19.79190254 -58.86549377]
[-34.66347122 -56.87666321]
[-49.62316132 -55.72481537]
[-64.62390137 -55.41358185]
[-79.61849213 -55.94393921]
[-94.55975342 -57.31421280]
[-109.40068054 -59.52009964]
[-124.09457397 -62.55465698]
[-138.59519958 -66.40833282]
[-152.85694885 -71.06900024]
[-166.83491516 -76.52201080]
[-180.48515320 -82.75018311]
[-193.76469421 -89.73394012]
[-206.63175964 -97.45130920]
[-219.04586792 -105.87799072]
[-230.96794128 -114.98748779]
[-242.36050415 -124.75112915]
[-253.18768311 -135.13819885]
[-263.41543579 -146.11601257]
[-273.01153564 -157.65002441]
[-281.94583130 -169.70396423]
[-290.19021606 -182.23988342]
[-297.71871948 -195.21835327]
[-304.50769043 -208.59852600]
[-310.53570557 -222.33831787]
[-315.78387451 -236.39448547]
[-320.23562622 -250.72280884]
[-323.87701416 -265.27819824]
[-326.69650269 -280.01486206]
[-328.68527222 -294.88644409]
[-329.83706665 -309.84613037]
[-330.14825439 -324.84689331]
[-329.61782837 -339.84146118]
[-328.24749756 -354.78274536]
[-326.04156494 -369.62365723]
[-323.00695801 -384.31753540]
[-319.15322876 -398.81814575]
[-314.49249268 -413.07986450]
[-309.03945923 -427.05783081]
[-302.81121826 -440.70803833]
[-295.82742310 -453.98754883]
[-288.11001587 -466.85458374]
[-279.68325806 -479.26864624]
[-270.57373047 -491.19070435]
[-260.81005859 -502.58322144]
[-250.42294312 -513.41040039]
[-239.44508362 -523.63806152]
[-227.91104126 -533.23413086]
[-215.85707092 -542.16839600]
[-203.32112122 -550.41271973]
[-190.34262085 -557.94116211]
[-176.96241760 -564.73010254]
[-163.22261047 -570.75805664]
[-149.16641235 -576.00616455]
[-134.83807373 -580.45788574]
[-120.28266907 -584.09918213]
[-105.54598999 -586.91864014]
[-90.67440796 -588.90734863]
[-75.71470642 -590.05914307]
[-60.71397018 -590.37023926]
[-45.71937943 -589.83978271]
[-30.77812576 -588.46936035]
[-15.93721581 -586.26336670]
[-1.24334490 -583.22869873]
[13.25725460 -579.37493896]
[27.51895905 -574.71417236]
[41.49689484 -569.26104736]
[55.14707947 -563.03277588]
[68.42656708 -556.04888916]
[81.29357147 -548.33148193]
[93.70761871 -539.90466309]
[105.62963867 -530.79510498]
[117.02212524 -521.03137207]
[127.84922791 -510.64422607]
[138.07688904 -499.66632080]
[147.67291260 -488.13223267]
[156.60713196 -476.07824707]
[164.85140991 -463.54226685]
[172.37982178 -450.56375122]
[179.16867065 -437.18350220]
[185.19660950 -423.44366455]
[190.44467163 -409.38748169]
[194.89631653 -395.05911255]
[198.53758240 -380.50369263]
[201.35697937 -365.76699829]
[203.34564209 -350.89541626]
[204.49731445 -335.93569946]
[204.80838013 -320.93496704]
[204.27786255 -305.94036865]
[202.90742493 -290.99914551]
[200.70137024 -276.15823364]
[197.66665649 -261.46435547]
[193.81282043 -246.96379089]
[189.15197754 -232.70210266]
[183.69882202 -218.72418213]
[177.47048950 -205.07402039]
[170.48658752 -191.79455566]
[162.76908875 -178.92758179]
[154.34225464 -166.51356506]
[145.23263550 -154.59158325]
[135.46887207 -143.19912720]
[125.08167267 -132.37207031]
[114.10374451 -122.14444733]
[102.56962585 -112.54846191]
[90.51558685 -103.61429596]
[77.97957611 -95.37006378]
[65.00102234 -87.84169769]
[51.62077332 -81.05289459]
[37.88091660 -75.02500916]
[43.12763596 -60.97253418]
[48.37435150 -46.92006302]
[53.62107086 -32.86759186]
[58.86779022 -18.81512070]
[64.11450958 -4.76265001]
[69.67373657 9.16914845]
[75.54269409 22.97332573]
[81.41165161 36.77750397]
[87.28061676 50.58168030]
[99.38081360 59.26698685]
[97.65985107 74.99431610]
[103.52880859 88.79849243]
[105.75460052 73.96454620]
[113.75266266 61.27474976]
[126.17518616 52.86754990]
[140.92874146 50.15970612]
[155.52711487 53.60754013]
[167.51020813 62.63003159]
[174.85867310 75.70673370]
[176.33416748 90.63398743]
[171.68801880 104.89629364]
[161.70320129 116.09020233]
[148.06234741 122.32933807]
[133.06414795 122.56230164]
[119.23609161 116.74983978]
[108.90756226 105.87002563]
[112.01167297 120.54533386]
[115.11578369 135.22062683]
[118.21989441 149.89593506]
[121.32400513 164.57124329]
[126.16156769 172.31951904]
[124.36337280 179.48808289]
[127.24864197 194.20797729]
[130.13391113 208.92785645]
[133.01918030 223.64775085]
[135.90446472 238.36764526]
[140.22691345 224.00392151]
[148.72471619 211.64320374]
[160.58790588 202.46363831]
[174.68577576 197.34014893]
[189.67460632 196.76107788]
[204.12573242 200.78163147]
[216.66178894 209.01858521]
[226.08790588 220.68684387]
[231.50564575 234.67427063]
[232.39863586 249.64765930]
[228.68176270 264.17987061]
[220.70927429 276.88574219]
[209.24108887 286.55426025]
[195.37023926 292.26391602]
[180.41885376 293.47042847]
[165.81196594 290.05883789]
[152.94181824 282.35433960]
[143.03512573 271.09124756]
[137.03584290 257.34197998]
[135.92019653 272.30041504]
[134.80453491 287.25888062]
[133.68888855 302.21734619]
[132.57324219 317.17578125]
[145.31143188 325.75683594]
[152.03807068 339.56436157]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 208]
[9 207]
[10 206]
[11 205]
[12 204]
[13 185]
[14 184]
[15 183]
[16 182]
[17 181]
[18 179]
[19 178]
[20 177]
[21 176]
[22 175]
[23 161]
[24 160]
[26 158]
[27 157]
[28 156]
[29 155]
[33 154]
[34 153]
[35 152]
[36 151]
[37 150]
[38 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
