%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[1.47453105 343.57907104]
[3.05338621 358.50927734]
[3.08871126 373.52270508]
[1.58013141 388.46017456]
[-1.45636129 403.16336060]
[-5.98857832 417.47640991]
[-11.96847534 431.24755859]
[-19.33266258 444.33087158]
[-28.00307655 456.58761597]
[-37.88780212 467.88790894]
[-48.88206100 478.11190796]
[-60.86930466 487.15127563]
[-73.72246552 494.91015625]
[-87.30528259 501.30633545]
[-101.47377777 506.27197266]
[-116.07775879 509.75448608]
[-130.96241760 511.71688843]
[-145.96995544 512.13842773]
[-160.94129944 511.01461792]
[-175.71774292 508.35736084]
[-190.14262390 504.19485474]
[-204.06306458 498.57119751]
[-217.33148193 491.54602051]
[-229.80723572 483.19378662]
[-241.35804749 473.60302734]
[-251.86149597 462.87542725]
[-261.20623779 451.12469482]
[-269.29321289 438.47537231]
[-276.03668213 425.06161499]
[-281.36517334 411.02554321]
[-285.22222900 396.51599121]
[-287.56689453 381.68673706]
[-288.37435913 366.69500732]
[-287.63607788 351.69970703]
[-285.35983276 336.85980225]
[-281.56976318 322.33261108]
[-276.30609131 308.27209473]
[-269.62457275 294.82736206]
[-261.59603882 282.14086914]
[-252.30560303 270.34713745]
[-241.85174561 259.57119751]
[-230.34529114 249.92726135]
[-217.90821838 241.51756287]
[-204.67234802 234.43124390]
[-190.77799988 228.74343872]
[-176.37246704 224.51441956]
[-161.60844421 221.78903198]
[-146.64245605 220.59616089]
[-131.63311768 220.94845581]
[-116.73957062 222.84219360]
[-102.11968231 226.25727844]
[-87.92842865 231.15750122]
[-74.31624603 237.49095154]
[-61.42742920 245.19046021]
[-49.39861298 254.17442322]
[-39.23506546 243.14254761]
[-29.07151794 232.11067200]
[-18.90797043 221.07879639]
[-8.74442387 210.04692078]
[-5.82833958 192.74189758]
[11.79345226 187.39831543]
[21.79162407 176.21633911]
[31.78979683 165.03436279]
[41.78796768 153.85238647]
[51.78614044 142.67041016]
[42.99223328 129.92414856]
[37.49611664 115.44683838]
[35.61572647 100.07595825]
[37.45984268 84.70067596]
[42.92178726 70.21043396]
[51.68559647 57.44346237]
[63.24430084 47.13830185]
[76.92925262 39.89109039]
[91.94879913 36.12106323]
[107.43409729 36.04630661]
[122.48934174 39.67115021]
[136.24362183 46.78590012]
[146.07420349 35.45630646]
[155.90478516 24.12671471]
[165.73536682 12.79712200]
[175.48133850 1.39465928]
[185.14213562 -10.08004093]
[194.80294800 -21.55474091]
[204.46376038 -33.02944183]
[214.12457275 -44.50414276]
[223.78538513 -55.97883987]
[213.03280640 -66.44688416]
[203.06362915 -77.66352844]
[193.92979431 -89.57028961]
[185.67895508 -102.10509491]
[178.35411072 -115.20259094]
[171.99343872 -128.79447937]
[166.63011169 -142.80992126]
[162.29211426 -157.17584229]
[159.00202942 -171.81732178]
[156.77702332 -186.65805054]
[155.62869263 -201.62063599]
[155.56303406 -216.62709045]
[156.58036804 -231.59915161]
[158.67543030 -246.45877075]
[161.83724976 -261.12847900]
[166.04939270 -275.53182983]
[171.28985596 -289.59365845]
[177.53132629 -303.24069214]
[184.74128723 -316.40179443]
[192.88212585 -329.00830078]
[201.91140747 -340.99453735]
[211.78205872 -352.29800415]
[222.44261169 -362.85974121]
[233.83749390 -372.62469482]
[245.90728760 -381.54196167]
[258.58908081 -389.56506348]
[271.81674194 -396.65216064]
[285.52130127 -402.76629639]
[299.63131714 -407.87557983]
[314.07324219 -411.95339966]
[328.77175903 -414.97848511]
[343.65026855 -416.93508911]
[358.63116455 -417.81295776]
[373.63632202 -417.60757446]
[388.58758545 -416.31994629]
[403.40695190 -413.95684814]
[418.01715088 -410.53057861]
[432.34204102 -406.05895996]
[446.30694580 -400.56536865]
[459.83901978 -394.07843018]
[472.86773682 -386.63192749]
[485.32516479 -378.26470947]
[497.14636230 -369.02041626]
[508.26968384 -358.94720459]
[518.63714600 -348.09762573]
[528.19470215 -336.52822876]
[536.89251709 -324.29931641]
[544.68524170 -311.47470093]
[551.53222656 -298.12118530]
[557.39782715 -284.30841064]
[562.25146484 -270.10839844]
[566.06774902 -255.59518433]
[568.82684326 -240.84442139]
[570.51440430 -225.93301392]
[571.12152100 -210.93872070]
[570.64514160 -195.93969727]
[569.08770752 -181.01414490]
[566.45733643 -166.23988342]
[562.76770020 -151.69393921]
[558.03808594 -137.45214844]
[552.29315186 -123.58876038]
[545.56286621 -110.17605591]
[537.88220215 -97.28396606]
[529.29138184 -84.97969818]
[519.83508301 -73.32740784]
[509.56259155 -62.38784409]
[498.52752686 -52.21803665]
[486.78738403 -42.87101364]
[474.40338135 -34.39550018]
[461.44009399 -26.83568382]
[447.96508789 -20.23098564]
[434.04861450 -14.61583233]
[419.76327515 -10.01950359]
[405.18347168 -6.46596146]
[390.38528442 -3.97373176]
[375.44583130 -2.55580902]
[360.44302368 -2.21958518]
[345.45504761 -2.96681356]
[330.56005859 -4.79359818]
[315.83569336 -7.69041443]
[301.35876465 -11.64216042]
[287.20474243 -16.62823296]
[273.44738770 -22.62263680]
[260.15841675 -29.59412003]
[247.40716553 -37.50633621]
[235.26008606 -46.31803131]
[225.59927368 -34.84333038]
[215.93846130 -23.36863136]
[206.27764893 -11.89393044]
[196.61683655 -0.41923034]
[186.95602417 11.05546951]
[185.05279541 18.19686127]
[177.06495667 22.62770271]
[167.23437500 33.95729446]
[157.40379333 45.28688812]
[147.57321167 56.61648178]
[156.04829407 68.31516266]
[161.70178223 81.60892487]
[164.24903870 95.82854462]
[163.56185913 110.25816345]
[159.67483521 124.17136383]
[152.78363037 136.86772156]
[143.23518372 147.70806885]
[131.51017761 156.14668274]
[118.19886780 161.75874329]
[103.97138977 164.26171875]
[89.54398346 163.52961731]
[75.64295197 159.59928894]
[62.96811676 152.66859436]
[52.96994400 163.85055542]
[42.97177124 175.03253174]
[32.97359848 186.21450806]
[22.97542763 197.39648438]
[22.91467476 210.29450989]
[14.35696983 219.40217590]
[2.28745341 220.21046448]
[-7.87609339 231.24234009]
[-18.03964043 242.27421570]
[-28.20318794 253.30609131]
[-38.36673355 264.33798218]
[-28.42893982 275.59161377]
[-19.70094490 287.80743408]
[-12.27527237 300.85592651]
[-6.23063803 314.59878540]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 206]
[56 205]
[57 204]
[58 203]
[59 202]
[61 199]
[62 198]
[63 197]
[64 196]
[65 195]
[77 182]
[78 181]
[79 180]
[80 179]
[81 177]
[82 176]
[83 175]
[84 174]
[85 173]
[86 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
