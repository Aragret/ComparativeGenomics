%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[186.50790405 485.38958740]
[182.75160217 470.86752319]
[178.99530029 456.34545898]
[175.23899841 441.82339478]
[171.48269653 427.30136108]
[167.72639465 412.77929688]
[154.90405273 409.06048584]
[145.51834106 399.41409302]
[142.09751892 386.28521729]
[145.63858032 373.07617188]
[155.31990051 363.26480103]
[151.78022766 348.68841553]
[141.25808716 338.14642334]
[145.52032471 322.91015625]
[135.35650635 316.35095215]
[132.28825378 304.23611450]
[138.48913574 292.92630005]
[135.16687012 278.29882812]
[131.84461975 263.67138672]
[128.41355896 249.06906128]
[124.87388611 234.49267578]
[121.33421326 219.91630554]
[117.79454041 205.33993530]
[107.27239227 194.79792786]
[111.53464508 179.56166077]
[107.99497223 164.98529053]
[104.45529938 150.40892029]
[93.93315125 139.86691284]
[98.19539642 124.63065338]
[94.65572357 110.05427551]
[88.37664795 123.67680359]
[75.78702545 131.83163452]
[60.78787994 131.99191284]
[48.02686691 124.10797119]
[41.45812225 110.62273407]
[43.11704636 95.71475220]
[52.48959732 84.00341797]
[66.67159271 79.11762238]
[81.26859283 82.57128906]
[91.75766754 93.29447174]
[90.19714355 78.37586975]
[88.63661957 63.45726013]
[87.07609558 48.53865814]
[85.51557159 33.62005234]
[81.94758606 28.05399513]
[81.75506592 22.37420845]
[84.13748932 18.23499298]
[83.02184296 3.27653933]
[81.90619659 -11.68191433]
[80.79054260 -26.64036751]
[78.34481812 -41.43964005]
[74.58851624 -55.96169662]
[58.61043167 -60.21524811]
[47.02405930 -71.87935638]
[42.92455292 -87.70373535]
[47.33915710 -103.34557343]
[58.97182083 -114.56134796]
[54.99972534 -129.02587891]
[51.02762985 -143.49040222]
[47.05553436 -157.95492554]
[38.71429062 -145.48802185]
[24.02814865 -142.43560791]
[11.40999889 -150.54623413]
[8.08808994 -165.17376709]
[15.96536160 -177.93890381]
[30.52935600 -181.52917480]
[43.43658066 -173.88868713]
[40.77078629 -188.64990234]
[38.10498810 -203.41111755]
[35.43919373 -218.17233276]
[31.89952087 -232.74870300]
[27.49852371 -247.08856201]
[23.09752464 -261.42840576]
[18.69652748 -275.76824951]
[14.29552937 -290.10809326]
[9.89453125 -304.44793701]
[6.80745173 -289.76904297]
[-1.05508292 -276.99484253]
[-12.76939011 -267.62600708]
[-26.95928383 -262.76318359]
[-41.95774841 -262.97769165]
[-56.00278473 -268.24429321]
[-67.44438934 -277.94427490]
[-74.93841553 -290.93807983]
[-77.60447693 -305.69924927]
[-75.12936401 -320.49365234]
[-67.80384827 -333.58322144]
[-56.48852921 -343.43020630]
[-42.51271439 -348.87783813]
[-27.51827049 -349.28610229]
[-13.26673031 -344.60705566]
[-1.43235099 -335.39035034]
[6.59517717 -322.71734619]
[5.70236111 -337.69076538]
[4.80954552 -352.66415405]
[3.91672945 -367.63757324]
[-10.45985222 -372.57540894]
[-21.84914017 -382.64282227]
[-28.51435089 -396.30456543]
[-29.43908691 -411.47735596]
[-24.48233223 -425.84741211]
[-14.39995766 -437.22344971]
[-0.72945160 -443.87069702]
[14.44453335 -444.77545166]
[28.80807495 -439.79980469]
[40.17083740 -429.70248413]
[46.80007935 -416.02322388]
[47.68489456 -400.84808350]
[42.69034958 -386.49108887]
[32.57808304 -375.14163208]
[18.89013481 -368.53036499]
[19.78295135 -353.55697632]
[20.67576790 -338.58355713]
[21.56858253 -323.61016846]
[24.23437881 -308.84893799]
[28.63537598 -294.50909424]
[33.03637314 -280.16925049]
[37.43737411 -265.82940674]
[41.83837128 -251.48954773]
[46.23936844 -237.14970398]
[52.36706924 -250.84098816]
[65.31416321 -258.41546631]
[80.25170135 -257.04806519]
[91.60836029 -247.24874878]
[95.14837646 -232.67245483]
[89.55142212 -218.75578308]
[76.90501404 -210.68928528]
[61.92595291 -211.48158264]
[50.20041275 -220.83813477]
[52.86620712 -206.07691956]
[55.53200150 -191.31568909]
[58.19779587 -176.55447388]
[61.52005768 -161.92701721]
[65.49215698 -147.46249390]
[69.46424866 -132.99797058]
[73.43634796 -118.53344727]
[86.84866333 -115.95916748]
[97.89638519 -107.81812286]
[104.38970184 -95.65317535]
[105.01113129 -81.81150055]
[99.58244324 -68.99176025]
[89.11057281 -59.71799850]
[92.86687469 -45.19593811]
[97.58006287 -59.43622971]
[107.94271851 -70.28129578]
[121.95396423 -75.63712311]
[136.90846252 -74.46958923]
[149.91871643 -67.00412750]
[158.47267151 -54.68219757]
[160.91867065 -39.88297272]
[156.78443909 -25.46394920]
[146.86824036 -14.20921993]
[133.08473206 -8.29189205]
[118.09528351 -8.85451031]
[104.79413605 -15.78844261]
[95.74900055 -27.75601578]
[96.86464691 -12.79756260]
[97.98029327 2.16089082]
[99.09594727 17.11934471]
[100.43418121 32.05952835]
[101.99469757 46.97813416]
[103.55522156 61.89673996]
[105.11574554 76.81534576]
[106.67626953 91.73394775]
[109.23210144 106.51460266]
[112.77177429 121.09098053]
[123.54710388 132.67558289]
[119.03166962 146.86924744]
[122.57134247 161.44561768]
[126.11101532 176.02198792]
[136.88633728 187.60659790]
[132.37091064 201.80026245]
[135.91058350 216.37663269]
[139.45025635 230.95300293]
[142.98992920 245.52938843]
[148.05604553 253.13020325]
[146.47207642 260.34912109]
[149.79434204 274.97659302]
[153.11659241 289.60403442]
[165.93724060 302.82192993]
[160.09671021 319.37048340]
[170.87203979 330.95507812]
[166.35659790 345.14874268]
[169.89627075 359.72512817]
[185.62599182 365.94381714]
[194.46188354 380.17153931]
[193.09002686 396.69668579]
[182.24845886 409.02297974]
[186.00476074 423.54504395]
[189.76106262 438.06710815]
[193.51736450 452.58917236]
[197.27366638 467.11123657]
[201.02996826 481.63327026]
[216.13084412 482.53799438]
[230.21232605 488.06671143]
[241.89485168 497.67785645]
[250.03388977 510.42977905]
[253.83204651 525.07318115]
[252.91722107 540.17346191]
[247.37904358 554.25122070]
[237.76010132 565.92730713]
[225.00273132 574.05780029]
[210.35678101 577.84613037]
[195.25712585 576.92120361]
[181.18305969 571.37359619]
[169.51342773 561.74682617]
[161.39149475 548.98400879]
[157.61296082 534.33551025]
[158.54801941 519.23651123]
[164.10505676 505.16613770]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 193]
[2 192]
[3 191]
[4 190]
[5 189]
[6 188]
[11 184]
[12 183]
[14 181]
[17 179]
[18 178]
[19 177]
[20 175]
[21 174]
[22 173]
[23 172]
[25 170]
[26 169]
[27 168]
[29 166]
[30 165]
[40 164]
[41 163]
[42 162]
[43 161]
[44 160]
[47 159]
[48 158]
[49 157]
[50 156]
[51 143]
[52 142]
[57 136]
[58 135]
[59 134]
[60 133]
[67 132]
[68 131]
[69 130]
[70 129]
[71 120]
[72 119]
[73 118]
[74 117]
[75 116]
[76 115]
[93 114]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
