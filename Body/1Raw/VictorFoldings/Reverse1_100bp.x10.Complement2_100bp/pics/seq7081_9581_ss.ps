%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[162.07691956 474.96594238]
[160.30676270 460.05523682]
[160.18769836 445.04025269]
[161.72114563 430.10333252]
[164.88850403 415.42578125]
[169.65130615 401.18572998]
[175.95176697 387.55609131]
[183.71337891 374.70227051]
[192.84193420 362.78033447]
[203.22662354 351.93496704]
[214.74137878 342.29788208]
[227.24641418 333.98602295]
[220.36700439 320.65658569]
[213.48759460 307.32714844]
[206.60818481 293.99774170]
[199.53106689 280.77218628]
[192.25784302 267.65350342]
[184.98461914 254.53480530]
[172.04650879 247.15547180]
[172.12193298 231.33444214]
[164.84870911 218.21575928]
[157.47801208 205.15156555]
[150.01026917 192.14262390]
[142.54252625 179.13366699]
[135.07479858 166.12471008]
[127.12810516 153.40267944]
[118.71348572 140.98518372]
[110.29887390 128.56768799]
[101.88425446 116.15019226]
[86.60792542 109.22125244]
[85.58466339 92.47821808]
[76.98609924 80.18737793]
[68.38753510 67.89653778]
[60.90401459 62.65872955]
[59.75405502 55.35808563]
[51.33943558 42.94058990]
[42.92481613 30.52309608]
[40.18060303 45.26993561]
[28.67965698 54.89948654]
[13.68005848 55.00925064]
[2.03942132 45.54903793]
[-0.92031223 30.84393883]
[6.15400839 17.61692238]
[20.02809906 11.91520214]
[34.36039352 16.34664154]
[27.28328705 3.12111473]
[20.20618248 -10.10441303]
[6.87317228 -18.62153816]
[7.69034767 -33.49370956]
[0.61324227 -46.71923828]
[-12.71976757 -55.23636246]
[-11.90259266 -70.10853577]
[-18.97969818 -83.33406067]
[-26.05680275 -96.55958557]
[-33.13390732 -109.78511810]
[-40.21101379 -123.01064301]
[-52.71158600 -123.07024384]
[-63.93550491 -128.40803528]
[-71.77915192 -137.95564270]
[-74.80141449 -149.86222839]
[-72.48824310 -161.85314941]
[-65.33887482 -171.66445923]
[-72.01906586 -185.09483337]
[-78.69926453 -198.52520752]
[-85.37945557 -211.95558167]
[-92.05964661 -225.38597107]
[-98.73984528 -238.81634521]
[-105.42003632 -252.24671936]
[-119.67246246 -247.49124146]
[-134.44802856 -244.76567078]
[-149.45913696 -244.12307739]
[-164.41357422 -245.57594299]
[-179.02026367 -249.09600830]
[-192.99487305 -254.61474609]
[-206.06538391 -262.02471924]
[-217.97737122 -271.18173218]
[-228.49897766 -281.90750122]
[-237.42538452 -293.99325562]
[-244.58283997 -307.20373535]
[-249.83201599 -321.28179932]
[-253.07075500 -335.95343018]
[-254.23599243 -350.93304443]
[-253.30506897 -365.92901611]
[-250.29608154 -380.64947510]
[-245.26760864 -394.80789185]
[-238.31755066 -408.12866211]
[-229.58116150 -420.35247803]
[-219.22851562 -431.24139404]
[-207.46112061 -440.58349609]
[-194.50804138 -448.19689941]
[-180.62141418 -453.93341064]
[-166.07153320 -457.68139648]
[-151.14163208 -459.36785889]
[-136.12231445 -458.95999146]
[-121.30595398 -456.46572876]
[-106.98092651 -451.93365479]
[-93.42609406 -445.45193481]
[-80.90530396 -437.14675903]
[-69.66226196 -427.17980957]
[-59.91583633 -415.74505615]
[-51.85573196 -403.06512451]
[-45.63884354 -389.38681030]
[-41.38618851 -374.97634888]
[-39.18053818 -360.11428833]
[-39.06483841 -345.08987427]
[-41.04132843 -330.19558716]
[-45.07154465 -315.72137451]
[-51.07703400 -301.94891357]
[-58.94089508 -289.14636230]
[-68.51006317 -277.56286621]
[-79.59825897 -267.42391968]
[-91.98966217 -258.92691040]
[-85.30947113 -245.49653625]
[-78.62927246 -232.06616211]
[-71.94908142 -218.63578796]
[-65.26888275 -205.20541382]
[-58.58869171 -191.77502441]
[-51.90849686 -178.34465027]
[-34.37612915 -176.22621155]
[-21.51187325 -163.89894104]
[-18.59722519 -146.16241455]
[-26.98548698 -130.08775330]
[-19.90838051 -116.86222076]
[-12.83127594 -103.63669586]
[-5.75417042 -90.41116333]
[1.32293522 -77.18563843]
[14.14974308 -69.61449432]
[13.83876991 -53.79634094]
[20.91587448 -40.57081604]
[33.74268341 -32.99966812]
[33.43170929 -17.18151855]
[40.50881577 -3.95599055]
[47.58592224 9.26953697]
[55.34231186 22.10847664]
[63.75693130 34.52597427]
[72.17154694 46.94347000]
[80.67837524 59.29797745]
[89.27693939 71.58881378]
[97.87550354 83.87965393]
[109.20125580 86.59417725]
[115.80624390 96.18664551]
[114.30175018 107.73557281]
[122.71636963 120.15306854]
[131.13098145 132.57055664]
[139.54560852 144.98805237]
[144.89651489 130.97492981]
[159.14154053 126.27610016]
[171.77980042 134.35537720]
[173.49481201 149.25700378]
[163.02235413 159.99607849]
[148.08374023 158.65696716]
[155.55148315 171.66592407]
[163.01922607 184.67488098]
[170.48696899 197.68382263]
[177.47335815 203.56840515]
[177.96739197 210.94252014]
[185.24063110 224.06121826]
[198.69897461 232.37889099]
[198.10330200 247.26158142]
[205.37654114 260.38027954]
[212.64976501 273.49896240]
[218.11111450 277.22528076]
[220.51057434 282.37692261]
[219.93760681 287.11831665]
[226.81701660 300.44775391]
[233.69642639 313.77716064]
[240.57585144 327.10659790]
[254.59527588 321.72900391]
[269.12121582 317.92630005]
[283.97732544 315.74472046]
[298.98324585 315.21066284]
[313.95684814 316.33068848]
[328.71636963 319.09112549]
[343.08261108 323.45852661]
[356.88119507 329.37985229]
[369.94464111 336.78323364]
[382.11431885 345.57876587]
[393.24255371 355.65972900]
[403.19424438 366.90371704]
[411.84857178 379.17425537]
[419.10049438 392.32235718]
[424.86196899 406.18844604]
[429.06304932 420.60421753]
[431.65277100 435.39462280]
[432.59967041 450.38018799]
[431.89224243 465.37893677]
[429.53912354 480.20883179]
[425.56881714 494.68984985]
[420.02957153 508.64620972]
[412.98858643 521.90850830]
[404.53137207 534.31567383]
[394.76055908 545.71716309]
[383.79476929 555.97460938]
[371.76712036 564.96343994]
[358.82360840 572.57452393]
[345.12133789 578.71551514]
[330.82669067 583.31182861]
[316.11315918 586.30767822]
[301.15936279 587.66668701]
[286.14682007 587.37243652]
[271.25775146 585.42840576]
[256.67294312 581.85821533]
[242.56939697 576.70520020]
[229.11833191 570.03198242]
[216.48304749 561.91949463]
[204.81689453 552.46624756]
[194.26152039 541.78692627]
[184.94502258 530.01129150]
[176.98052979 517.28216553]
[170.46470642 503.75415039]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 167]
[13 166]
[14 165]
[15 164]
[16 161]
[17 160]
[18 159]
[20 157]
[21 156]
[22 154]
[23 153]
[24 152]
[25 151]
[26 145]
[27 144]
[28 143]
[29 142]
[31 139]
[32 138]
[33 137]
[35 136]
[36 135]
[37 134]
[45 133]
[46 132]
[47 131]
[49 129]
[50 128]
[52 126]
[53 125]
[54 124]
[55 123]
[56 122]
[62 118]
[63 117]
[64 116]
[65 115]
[66 114]
[67 113]
[68 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
