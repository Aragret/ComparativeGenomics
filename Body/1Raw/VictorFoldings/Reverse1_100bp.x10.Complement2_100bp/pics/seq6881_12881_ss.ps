%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[90.82632446 728.18243408]
[93.85798645 743.07800293]
[90.95368958 757.99890137]
[82.55632019 770.66986084]
[69.94641113 779.15856934]
[55.04688263 782.17065430]
[40.12980652 779.24670410]
[27.46993065 770.83270264]
[18.99779129 758.21160889]
[16.00532913 743.30816650]
[18.94887161 728.39495850]
[27.37955284 715.74615479]
[40.01175308 707.29058838]
[54.91915131 704.31774902]
[57.80442429 689.59783936]
[60.68969727 674.87799072]
[62.58298874 659.99792480]
[63.47580338 645.02453613]
[64.36862183 630.05114746]
[57.40258026 616.88586426]
[65.94756317 603.57073975]
[66.84037781 588.59729004]
[67.73319244 573.62390137]
[68.62600708 558.65051270]
[54.12915802 554.88018799]
[40.64216614 548.35186768]
[28.68420601 539.31475830]
[18.71599197 528.11474609]
[11.12204075 515.18096924]
[6.19582987 501.00967407]
[4.12846136 486.14483643]
[5.00124645 471.15750122]
[8.78251076 456.62380981]
[15.32874012 443.10281372]
[24.39002419 431.11502075]
[35.61959839 421.12225342]
[48.58711243 413.50997925]
[62.79512787 408.57238770]
[77.69818878 406.50103760]
[78.59101105 391.52761841]
[79.48382568 376.55422974]
[80.37664032 361.58081055]
[81.26945496 346.60742188]
[82.16226959 331.63400269]
[83.05508423 316.66058350]
[71.14632416 325.78097534]
[56.25897980 323.94607544]
[46.92118835 312.20703125]
[48.48207092 297.28845215]
[60.04747772 287.73641968]
[74.99221802 289.02276611]
[84.75497437 300.40969849]
[86.98008728 285.57565308]
[89.20520782 270.74160767]
[90.54344177 255.80142212]
[90.99004364 240.80807495]
[91.43665314 225.81471252]
[91.77162933 210.81846619]
[91.99495697 195.82012939]
[92.21828461 180.82177734]
[92.44161224 165.82344055]
[92.55327606 150.82386780]
[92.55327606 135.82386780]
[92.55327606 120.82386017]
[92.55327606 105.82386017]
[89.78022003 101.37143707]
[89.69917297 95.68225861]
[92.78325653 90.37892151]
[93.22985840 75.38556671]
[85.90687561 61.36114883]
[94.01968384 48.86988449]
[94.46628571 33.87653732]
[94.91289520 18.88318634]
[95.02455902 3.88360190]
[94.80123138 -11.11473560]
[94.57790375 -26.11307335]
[94.35457611 -41.11141205]
[86.41267395 -54.79485703]
[93.95962524 -67.63591766]
[85.26499176 -77.16304016]
[85.38775635 -89.65979004]
[93.71671295 -98.43218994]
[93.71671295 -113.43218994]
[93.71671295 -128.43218994]
[91.10524750 -132.95185852]
[90.54463959 -137.56044006]
[91.72532654 -141.46185303]
[94.06665039 -144.09823608]
[94.73643494 -159.08328247]
[95.40621948 -174.06831360]
[96.07600403 -189.05335999]
[82.76727295 -202.53637695]
[83.52708435 -221.14646912]
[97.40643311 -233.08294678]
[97.62976074 -248.08128357]
[90.09877777 -261.99511719]
[98.02471161 -274.60577393]
[98.24803925 -289.60412598]
[98.47136688 -304.60247803]
[84.63513947 -310.96475220]
[74.58777618 -322.40896606]
[70.07003021 -336.95236206]
[71.86463928 -352.07516479]
[79.66067505 -365.15728760]
[92.10742950 -373.93215942]
[107.04841614 -376.87945557]
[121.89502716 -373.48861694]
[134.07499695 -364.34704590]
[141.47807312 -351.03860474]
[142.82162476 -335.86907959]
[137.87287903 -321.46664429]
[127.48922729 -310.32666016]
[113.46970367 -304.37915039]
[113.24637604 -289.38079834]
[113.02304840 -274.38244629]
[120.56999969 -261.54141235]
[112.62809753 -247.85795593]
[112.40476990 -232.85961914]
[121.93666840 -226.58992004]
[127.31402588 -216.39189148]
[127.09859467 -204.74511719]
[121.22823334 -194.54512024]
[111.06104279 -188.38356018]
[110.39125824 -173.39852905]
[109.72147369 -158.41348267]
[109.05168915 -143.42845154]
[108.71671295 -128.43218994]
[108.71671295 -113.43218994]
[108.71671295 -98.43218994]
[118.29740143 -83.72922516]
[108.95796204 -67.85924530]
[116.88389587 -55.24857712]
[109.35291290 -41.33473969]
[109.57624054 -26.33640099]
[109.79956818 -11.33806324]
[110.02289581 3.66027403]
[112.28469086 6.36520386]
[113.34869385 10.30004120]
[112.65111542 14.88988781]
[109.90624237 19.32979202]
[109.45964050 34.32314301]
[109.01303101 49.31649017]
[116.36796570 62.26848984]
[108.22321320 75.83217621]
[107.77660370 90.82552338]
[107.55327606 105.82386017]
[107.55327606 120.82386017]
[107.55327606 135.82386780]
[107.55327606 150.82386780]
[110.68268585 159.40550232]
[107.43994904 166.04676819]
[107.21662140 181.04510498]
[106.99329376 196.04345703]
[106.76996613 211.04179382]
[109.77126312 219.66906738]
[106.43000031 226.26132202]
[105.98339844 241.25466919]
[105.53678894 256.24801636]
[115.74362183 245.25617981]
[130.43928528 242.24993896]
[144.14265442 248.35055542]
[151.74272156 261.28265381]
[150.40484619 276.22286987]
[140.62802124 287.59887695]
[126.05876160 291.16772461]
[112.13103485 285.59829712]
[104.03925323 272.96673584]
[101.81413269 287.80075073]
[99.58901215 302.63479614]
[98.02849579 317.55340576]
[97.13567352 332.52682495]
[96.24285889 347.50021362]
[95.35004425 362.47363281]
[94.45722961 377.44702148]
[93.56441498 392.42044067]
[92.67160034 407.39385986]
[107.22292328 411.22146606]
[120.74353027 417.81243896]
[132.71458435 426.91171265]
[142.67713928 438.16809082]
[150.24969482 451.14773560]
[155.14283752 465.35079956]
[157.17025757 480.23083496]
[156.25588989 495.21569824]
[152.43676758 509.72955322]
[145.86146545 523.21508789]
[136.78439331 535.15478516]
[125.55590057 545.09088135]
[112.60877991 552.64300537]
[98.44158173 557.52233887]
[83.59941864 559.54333496]
[82.70659637 574.51672363]
[81.81378174 589.49011230]
[80.92096710 604.46350098]
[87.82315063 618.69976807]
[79.34202576 630.94396973]
[78.44921112 645.91735840]
[77.55639648 660.89074707]
[87.55597687 649.71002197]
[101.98415375 645.60791016]
[116.37020874 649.85540771]
[126.25646210 661.13647461]
[128.57954407 675.95550537]
[122.61963654 689.72064209]
[110.22346497 698.16662598]
[95.23213196 698.67639160]
[82.29085541 691.09197998]
[75.40959167 677.76324463]
[72.52431488 692.48315430]
[69.63904572 707.20300293]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 210]
[15 209]
[16 208]
[17 198]
[18 197]
[19 196]
[21 194]
[22 193]
[23 192]
[24 191]
[39 176]
[40 175]
[41 174]
[42 173]
[43 172]
[44 171]
[45 170]
[52 169]
[53 168]
[54 167]
[55 158]
[56 157]
[57 156]
[58 154]
[59 153]
[60 152]
[61 151]
[62 149]
[63 148]
[64 147]
[65 146]
[68 145]
[69 144]
[71 142]
[72 141]
[73 140]
[74 136]
[75 135]
[76 134]
[77 133]
[79 131]
[82 129]
[83 128]
[84 127]
[88 126]
[89 125]
[90 124]
[91 123]
[94 118]
[95 117]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
