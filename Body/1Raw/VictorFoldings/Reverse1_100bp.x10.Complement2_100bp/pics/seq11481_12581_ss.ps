%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[60.90722656 294.61474609]
[61.33517456 309.62127686]
[60.26680374 324.59582520]
[57.71274185 339.38958740]
[53.69837189 353.85552979]
[48.26358414 367.84988403]
[41.46240234 381.23355103]
[33.36241531 393.87350464]
[24.04412842 405.64416504]
[13.60015488 416.42849731]
[2.13429332 426.11935425]
[-10.23950100 434.62039185]
[-23.39824677 441.84716797]
[-37.21116638 447.72778320]
[-51.54097366 452.20385742]
[-66.24524689 455.23089600]
[-81.17785645 456.77877808]
[-96.19037628 456.83215332]
[-111.13360596 455.39047241]
[-125.85903168 452.46807861]
[-140.22030640 448.09399414]
[-154.07467651 442.31170654]
[-167.28446960 435.17871094]
[-179.71839905 426.76583862]
[-191.25286865 417.15676880]
[-201.77325439 406.44692993]
[-211.17500305 394.74282837]
[-219.36465454 382.16079712]
[-226.26081848 368.82580566]
[-231.79496765 354.87045288]
[-235.91209412 340.43344116]
[-238.57127380 325.65820312]
[-239.74607849 310.69161987]
[-239.42483521 295.68243408]
[-237.61074829 280.77984619]
[-234.32182312 266.13192749]
[-229.59077454 251.88426208]
[-223.46459961 238.17846680]
[-216.00419617 225.15077209]
[-207.28370667 212.93063354]
[-197.38980103 201.63952637]
[-186.42082214 191.38964844]
[-174.48576355 182.28286743]
[-161.70327759 174.40971375]
[-148.20039368 167.84843445]
[-134.11129761 162.66421509]
[-119.57602692 158.90861511]
[-104.73904419 156.61892700]
[-89.74781036 155.81793213]
[-74.75132751 156.51358032]
[-59.89862442 158.69895935]
[-45.33732605 162.35235596]
[-31.21215630 167.43743896]
[-17.66349602 173.90370178]
[-4.82600355 181.68684387]
[7.17273283 190.70953369]
[17.33627892 179.67765808]
[27.49982643 168.64578247]
[37.66337204 157.61390686]
[47.82691956 146.58203125]
[50.74300385 129.27700806]
[68.36479950 123.93342590]
[78.36296844 112.75144958]
[88.36113739 101.56947327]
[73.98873138 105.86294556]
[59.10234451 104.02027130]
[46.21059418 96.35197449]
[37.48596954 84.15029144]
[34.39871979 69.47143555]
[37.46910477 54.78903961]
[46.17970657 42.57735062]
[59.06264114 34.89424896]
[73.94689941 33.03447342]
[88.32423401 37.31143188]
[99.77179718 47.00437546]
[106.36048889 60.47988129]
[106.97998810 75.46707916]
[101.52499390 89.44176483]
[113.48732758 80.39176178]
[125.44966888 71.34176636]
[137.41200256 62.29176331]
[149.37434387 53.24176407]
[160.48156738 43.16062546]
[170.64512634 32.12874603]
[180.80867004 21.09687042]
[190.97221375 10.06499290]
[201.13575745 -0.96688426]
[190.85247803 -11.89607716]
[181.37507629 -23.53102875]
[172.75184631 -35.81245041]
[165.02674866 -48.67775345]
[158.23913574 -62.06138611]
[152.42359924 -75.89514160]
[147.60977173 -90.10852814]
[143.82218933 -104.62911224]
[141.08013916 -119.38291168]
[139.39761353 -134.29472351]
[138.78317261 -149.28858948]
[139.23995972 -164.28807068]
[140.76562500 -179.21675110]
[143.35241699 -193.99856567]
[146.98715210 -208.55816650]
[151.65129089 -222.82136536]
[157.32107544 -236.71549988]
[163.96762085 -250.16973877]
[171.55705261 -263.11553955]
[180.05068970 -275.48693848]
[189.40525818 -287.22088623]
[199.57308960 -298.25756836]
[210.50236511 -308.54077148]
[222.13739014 -318.01809692]
[234.41886902 -326.64120483]
[247.28424072 -334.36621094]
[260.66790771 -341.15371704]
[274.50170898 -346.96914673]
[288.71514893 -351.78286743]
[303.23574829 -355.57034302]
[317.98956299 -358.31228638]
[332.90139771 -359.99468994]
[347.89526367 -360.60900879]
[362.89474487 -360.15213013]
[377.82342529 -358.62634277]
[392.60519409 -356.03942871]
[407.16479492 -352.40460205]
[421.42794800 -347.74032593]
[435.32202148 -342.07043457]
[448.77621460 -335.42379761]
[461.72198486 -327.83425903]
[474.09329224 -319.34054565]
[485.82717896 -309.98587036]
[496.86376953 -299.81796265]
[507.14691162 -288.88861084]
[516.62414551 -277.25350952]
[525.24719238 -264.97195435]
[532.97204590 -252.10653687]
[539.75946045 -238.72280884]
[545.57482910 -224.88896179]
[550.38842773 -210.67550659]
[554.17578125 -196.15486145]
[556.91760254 -181.40101624]
[558.59991455 -166.48916626]
[559.21411133 -151.49530029]
[558.75708008 -136.49583435]
[557.23120117 -121.56716919]
[554.64416504 -106.78540039]
[551.00921631 -92.22585297]
[546.34484863 -77.96272278]
[540.67486572 -64.06867981]
[534.02807617 -50.61453629]
[526.43847656 -37.66884995]
[517.94464111 -25.29758835]
[508.58990479 -13.56379128]
[498.42190552 -2.52725530]
[487.49246216 7.75578070]
[475.85729980 17.23291588]
[463.57568359 25.85585785]
[450.71020508 33.58066177]
[437.32641602 40.36796951]
[423.49252319 46.18318939]
[409.27902222 50.99668884]
[394.75836182 54.78393936]
[380.00448608 57.52564240]
[365.09265137 59.20782852]
[350.09875488 59.82192230]
[335.09930420 59.36479568]
[320.17065430 57.83877563]
[305.38888550 55.25164413]
[290.82937622 51.61658096]
[276.56628418 46.95211029]
[262.67227173 41.28200150]
[249.21818542 34.63514709]
[236.27255249 27.04542351]
[223.90136719 18.55150032]
[212.16763306 9.19666290]
[202.00408936 20.22854042]
[191.84054565 31.26041794]
[181.67700195 42.29229355]
[171.51344299 53.32417297]
[186.03367615 49.56078720]
[200.76536560 52.38521576]
[212.86405945 61.25210190]
[219.99368286 74.44938660]
[220.77761841 89.42888641]
[215.06451416 103.29829407]
[203.95747375 113.37963867]
[189.60108948 117.72637939]
[174.76734924 115.49922180]
[162.32041931 107.12819672]
[154.66362000 94.22961426]
[153.27534485 79.29399872]
[158.42434692 65.20410156]
[146.46200562 74.25409698]
[134.49966431 83.30410004]
[122.53733063 92.35410309]
[110.57498932 101.40409851]
[99.54311371 111.56764984]
[89.54494476 122.74961853]
[79.54676819 133.93159485]
[79.48601532 146.82962036]
[70.92831421 155.93728638]
[58.85879898 156.74557495]
[48.69525146 167.77745056]
[38.53170395 178.80932617]
[28.36815643 189.84120178]
[18.20461082 200.87307739]
[28.17854118 212.09356689]
[36.98569489 224.25138855]
[44.53853607 237.22572327]
[50.76200104 250.88760376]
[55.59424210 265.10125732]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 205]
[57 204]
[58 203]
[59 202]
[60 201]
[62 198]
[63 197]
[64 196]
[78 195]
[79 194]
[80 193]
[81 192]
[82 191]
[83 178]
[84 177]
[85 176]
[86 175]
[87 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
