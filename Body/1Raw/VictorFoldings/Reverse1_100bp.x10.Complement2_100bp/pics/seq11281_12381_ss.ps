%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[71.76743317 835.36968994]
[56.77843475 834.69970703]
[41.85057831 833.19036865]
[27.03083420 830.84637451]
[12.36583519 827.67510986]
[-2.09827852 823.68658447]
[-16.31599808 818.89331055]
[-30.24258804 813.31036377]
[-43.83423233 806.95538330]
[-57.04816437 799.84826660]
[-69.84280396 792.01141357]
[-82.17790222 783.46948242]
[-94.01464844 774.24938965]
[-105.31578827 764.38006592]
[-116.04577637 753.89263916]
[-126.17084503 742.82000732]
[-135.65914917 731.19714355]
[-144.48080444 719.06054688]
[-152.60809326 706.44842529]
[-160.01541138 693.40039062]
[-166.67947388 679.95758057]
[-172.57931519 666.16223145]
[-177.69635010 652.05780029]
[-182.01449585 637.68865967]
[-185.52015686 623.09997559]
[-188.20231628 608.33770752]
[-190.05252075 593.44824219]
[-191.06495667 578.47845459]
[-191.23643494 563.47546387]
[-190.56642151 548.48651123]
[-189.05700684 533.55865479]
[-186.71296692 518.73889160]
[-183.54165649 504.07391357]
[-179.55307007 489.60983276]
[-174.75973511 475.39212036]
[-169.17675781 461.46554565]
[-162.82168579 447.87393188]
[-155.71452332 434.66003418]
[-147.87762451 421.86541748]
[-139.33566284 409.53033447]
[-130.11550903 397.69363403]
[-120.24615479 386.39251709]
[-109.75867462 375.66259766]
[-98.68605804 365.53756714]
[-87.06314087 356.04931641]
[-74.92650604 347.22769165]
[-62.31432343 339.10043335]
[-49.26628494 331.69317627]
[-35.82344437 325.02914429]
[-22.02809715 319.12936401]
[-7.92364836 314.01239014]
[6.44552422 309.69430542]
[21.03421021 306.18869019]
[35.79650497 303.50659180]
[50.68596268 301.65643311]
[65.65573883 300.64404297]
[80.65872955 300.47262573]
[81.32851410 285.48757935]
[81.99829865 270.50256348]
[82.66808319 255.51751709]
[83.33786774 240.53247070]
[84.00765228 225.54743958]
[76.07871246 216.41188049]
[76.51408386 203.92211914]
[85.62545013 194.79272461]
[77.83340454 185.54013062]
[78.45468140 173.05822754]
[87.70095825 164.06550598]
[88.81661224 149.10705566]
[82.04734802 135.83955383]
[90.78962708 122.65308380]
[91.90528107 107.69462585]
[92.90953827 92.72828674]
[93.80235291 77.75487518]
[94.69516754 62.78147125]
[80.80017090 53.81928635]
[73.36344147 39.15672684]
[74.33029175 22.83857346]
[83.34229279 9.31305408]
[97.86093140 2.21928644]
[98.53071594 -12.76575279]
[99.20050049 -27.75079155]
[99.87028503 -42.73582840]
[100.54006958 -57.72086716]
[101.20986176 -72.70590973]
[101.87964630 -87.69094849]
[99.13654327 -96.40376282]
[102.67259979 -102.89361572]
[103.56541443 -117.86701965]
[104.45822906 -132.84042358]
[101.84552765 -138.91375732]
[102.58166504 -144.54891968]
[105.60710144 -148.24429321]
[106.94533539 -163.18447876]
[108.28356934 -178.12466431]
[109.62180328 -193.06484985]
[110.96003723 -208.00503540]
[112.29827118 -222.94522095]
[98.23706055 -228.46418762]
[86.30113983 -237.72218323]
[77.45810699 -249.96871948]
[72.42483521 -264.21099854]
[71.60932922 -279.29449463]
[75.07771301 -293.99642944]
[82.54882050 -307.12500000]
[93.41699219 -317.61593628]
[106.80120850 -324.61874390]
[121.61645508 -327.56579590]
[136.66174316 -326.21813965]
[150.71740723 -320.68505859]
[162.64401245 -311.41506958]
[171.47473145 -299.15966797]
[176.49369812 -284.91232300]
[177.29405212 -269.82803345]
[173.81089783 -255.12957764]
[166.32661438 -242.00851440]
[155.44790649 -231.52851868]
[142.05665588 -224.53913879]
[127.23845673 -221.60699463]
[125.90022278 -206.66680908]
[124.56198883 -191.72662354]
[123.22375488 -176.78643799]
[121.88552094 -161.84625244]
[120.54728699 -146.90606689]
[119.43163300 -131.94761658]
[118.53881836 -116.97420502]
[117.64600372 -102.00080109]
[116.86468506 -87.02116394]
[116.19490051 -72.03612518]
[115.52510834 -57.05108261]
[114.85532379 -42.06604385]
[114.18553925 -27.08100700]
[113.51575470 -12.09596729]
[112.84597015 2.88907146]
[124.81614685 9.46417522]
[132.82403564 20.60878944]
[135.26058960 34.18127441]
[131.59417725 47.54299927]
[122.48534393 58.07130814]
[109.66857910 63.67428970]
[108.77576447 78.64769745]
[107.88294220 93.62110138]
[110.58491516 101.21530151]
[106.86373138 108.81027985]
[105.74808502 123.76873016]
[112.43754578 138.10615540]
[103.77506256 150.22270203]
[102.65941620 165.18115234]
[111.03769684 181.57888794]
[100.59885406 195.68553162]
[109.22035217 211.95672607]
[98.99269104 226.21722412]
[98.32290649 241.20225525]
[97.65312195 256.18728638]
[96.98333740 271.17233276]
[96.31355286 286.15737915]
[95.64376831 301.14242554]
[110.57163239 302.65164185]
[125.39139557 304.99554443]
[140.05641174 308.16668701]
[154.52055359 312.15512085]
[168.73831177 316.94827271]
[182.66494751 322.53109741]
[196.25663757 328.88601685]
[209.47062683 335.99304199]
[222.26531982 343.82980347]
[234.60047913 352.37161255]
[246.43728638 361.59164429]
[257.73852539 371.46087646]
[268.46856689 381.94824219]
[278.59371948 393.02075195]
[288.08212280 404.64355469]
[296.90386963 416.78009033]
[305.03125000 429.39218140]
[312.43865967 442.44012451]
[319.10281372 455.88290405]
[325.00274658 469.67819214]
[330.11990356 483.78256226]
[334.43817139 498.15170288]
[337.94393921 512.74035645]
[340.62619019 527.50262451]
[342.47650146 542.39202881]
[343.48904419 557.36181641]
[343.66064453 572.36480713]
[342.99075317 587.35382080]
[341.48144531 602.28167725]
[339.13751221 617.10144043]
[335.96630859 631.76641846]
[331.97781372 646.23052979]
[327.18460083 660.44830322]
[321.60171509 674.37487793]
[315.24676514 687.96655273]
[308.13967896 701.18054199]
[300.30288696 713.97521973]
[291.76101685 726.31036377]
[282.54095459 738.14709473]
[272.67169189 749.44830322]
[262.18426514 760.17834473]
[251.11174011 770.30340576]
[239.48889160 779.79174805]
[227.35232544 788.61346436]
[214.74020386 796.74078369]
[201.69221497 804.14819336]
[188.24942017 810.81231689]
[174.45411682 816.71215820]
[160.34971619 821.82928467]
[145.98057556 826.14746094]
[131.39190674 829.65319824]
[116.62963104 832.33538818]
[101.74018860 834.18566895]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 157]
[58 156]
[59 155]
[60 154]
[61 153]
[62 152]
[65 150]
[68 148]
[69 147]
[71 145]
[72 144]
[73 142]
[74 141]
[75 140]
[80 134]
[81 133]
[82 132]
[83 131]
[84 130]
[85 129]
[86 128]
[88 127]
[89 126]
[90 125]
[93 124]
[94 123]
[95 122]
[96 121]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
