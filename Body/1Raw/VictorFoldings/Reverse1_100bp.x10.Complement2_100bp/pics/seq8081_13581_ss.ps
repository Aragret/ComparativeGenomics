%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[124.78784180 386.89489746]
[127.52115631 372.12185669]
[132.24067688 357.85861206]
[138.85848999 344.37091064]
[147.25129700 331.90997314]
[157.26274109 320.70797729]
[168.70631409 310.97360229]
[181.36885071 302.88818359]
[175.09149170 289.26486206]
[168.81413269 275.64157104]
[162.53677368 262.01824951]
[155.95674133 248.53851318]
[149.07733154 235.20907593]
[142.19792175 221.87965393]
[135.31851196 208.55021667]
[128.43908691 195.22079468]
[121.55968475 181.89135742]
[114.58123016 168.61351013]
[107.50411987 155.38798523]
[107.58621216 170.38777161]
[103.08903503 184.69773865]
[94.44122314 196.95397949]
[82.46704102 205.98829651]
[68.30777740 210.93959045]
[53.31301498 211.33595276]
[38.91195679 207.13958740]
[26.47721481 198.75047302]
[17.19399643 186.96820068]
[11.94711304 172.91578674]
[11.23666763 157.93261719]
[15.13037395 143.44680786]
[23.25710869 130.83901978]
[34.84228516 121.31096649]
[48.78167343 115.77080536]
[63.74666595 114.74658203]
[78.31089020 118.33592224]
[91.08618164 126.19670868]
[100.85547638 137.58067322]
[97.53321075 122.95320892]
[94.21095276 108.32575226]
[89.49658203 101.78761292]
[90.94983673 93.45581818]
[87.84572601 78.78050995]
[84.74161530 64.10520935]
[81.63750458 49.42990875]
[78.53339386 34.75460434]
[75.42928314 20.07930183]
[71.02828979 5.73945570]
[65.36550140 -8.15057087]
[59.70271683 -22.04059792]
[54.03992844 -35.93062592]
[39.67362976 -33.66508865]
[25.17139816 -34.65999603]
[11.26347733 -38.86188126]
[-1.35056210 -46.05589294]
[-12.03701305 -55.87675476]
[-20.25986862 -67.82732391]
[-25.60770607 -81.30374908]
[-27.81427193 -95.62599182]
[-26.77173424 -110.07212830]
[-22.53594971 -123.91475677]
[-15.32347965 -136.45759583]
[-5.50052118 -147.07054138]
[6.43568325 -155.22129822]
[0.98032641 -169.19409180]
[-4.47503090 -183.16690063]
[-9.93038750 -197.13969421]
[-22.15682793 -207.18084717]
[-19.57816696 -221.85054016]
[-25.03352356 -235.82333374]
[-30.48888016 -249.79612732]
[-35.94423676 -263.76892090]
[-50.58855820 -260.39819336]
[-65.56760406 -259.19570923]
[-80.56210327 -260.18710327]
[-95.25244141 -263.35125732]
[-109.32550049 -268.62069702]
[-122.48130798 -275.88308716]
[-134.43943787 -284.98370361]
[-144.94502258 -295.72848511]
[-153.77412415 -307.88845825]
[-160.73854065 -321.20440674]
[-165.68983459 -335.39254761]
[-168.52246094 -350.15039062]
[-169.17605591 -365.16339111]
[-167.63668823 -380.11157227]
[-163.93714905 -394.67630005]
[-158.15631104 -408.54711914]
[-150.41738892 -421.42840576]
[-140.88534546 -433.04553223]
[-129.76335144 -443.15093994]
[-117.28845978 -451.52917480]
[-103.72659302 -458.00170898]
[-89.36681366 -462.43054199]
[-74.51520538 -464.72128296]
[-59.48832703 -464.82513428]
[-44.60647964 -462.73983765]
[-30.18686867 -458.50985718]
[-16.53685188 -452.22537231]
[-3.94737887 -444.02029419]
[7.31320524 -434.06954956]
[17.00487900 -422.58526611]
[24.92106628 -409.81216431]
[30.89303207 -396.02255249]
[34.79347992 -381.51034546]
[36.53927994 -366.58486938]
[36.09321213 -351.56423950]
[33.46478653 -336.76864624]
[28.71002960 -322.51348877]
[21.93029022 -309.10253906]
[13.27007675 -296.82171631]
[2.91398311 -285.93276978]
[-8.91725063 -276.66781616]
[-21.97143936 -269.22427368]
[-16.51608276 -255.25148010]
[-11.06072521 -241.27868652]
[-5.60536861 -227.30589294]
[6.23086786 -218.26417542]
[4.04240990 -202.59504700]
[9.49776745 -188.62225342]
[14.95312405 -174.64945984]
[20.40848160 -160.67665100]
[35.75692368 -162.79602051]
[51.17604446 -161.18737793]
[65.77294922 -155.93971252]
[78.70135498 -147.35281372]
[89.21066284 -135.92022705]
[96.68952179 -122.30084991]
[100.70140839 -107.28097534]
[101.01007080 -91.72885895]
[97.59348297 -76.54459381]
[90.64533997 -62.60794449]
[80.56404877 -50.72743988]
[67.92995453 -41.59341049]
[73.59274292 -27.70338440]
[79.25553131 -13.81335831]
[84.91831207 0.07666904]
[87.68673706 -14.66564560]
[96.50757599 -26.79794693]
[109.67767334 -33.97768021]
[124.65409088 -34.81854630]
[138.54510498 -29.15819168]
[148.66859436 -18.08954048]
[153.06985474 -3.74977493]
[150.89909363 11.09231949]
[142.57542419 23.57096672]
[129.70603943 31.27673721]
[114.77580261 32.72176743]
[100.66751862 27.62704086]
[90.10459137 16.97519302]
[93.20870209 31.65049553]
[96.31281281 46.32579803]
[99.41691589 61.00109863]
[102.52102661 75.67639923]
[105.62513733 90.35170746]
[108.83841705 105.00349426]
[112.16067505 119.63095093]
[115.48293304 134.25840759]
[120.72965240 148.31088257]
[127.80675507 161.53640747]
[134.61483765 167.62638855]
[134.88911438 175.01194763]
[141.76852417 188.34138489]
[148.64793396 201.67080688]
[155.52734375 215.00024414]
[162.40675354 228.32966614]
[169.28617859 241.65910339]
[173.67964172 244.47770691]
[176.29142761 248.31591797]
[177.03153992 252.32431030]
[176.16009521 255.74087524]
[182.43745422 269.36419678]
[188.71481323 282.98751831]
[194.99217224 296.61083984]
[209.36566162 292.23858643]
[224.20063782 289.86428833]
[239.22073364 289.53225708]
[254.14614868 291.24859619]
[268.69882202 294.98135376]
[282.60763550 300.66101074]
[295.61349487 308.18173218]
[307.47409058 317.40344238]
[317.96850586 328.15432739]
[326.90118408 340.23410034]
[334.10574341 353.41772461]
[339.44796753 367.45959473]
[342.82830811 382.09814453]
[344.18383789 397.06063843]
[343.48925781 412.06835938]
[340.75753784 426.84170532]
[336.03955078 441.10543823]
[329.42321777 454.59387207]
[321.03176880 467.05569458]
[311.02151489 478.25878906]
[299.57901001 487.99438477]
[286.91732788 496.08117676]
[273.27243042 502.36849976]
[258.89846802 506.73919678]
[244.06323242 509.11184692]
[229.04309082 509.44229126]
[214.11787415 507.72433472]
[199.56561279 503.98999023]
[185.65739441 498.30883789]
[172.65235901 490.78671265]
[160.79275513 481.56372070]
[150.29951477 470.81170654]
[141.36814880 458.73095703]
[134.16500854 445.54653931]
[128.82431030 431.50408936]
[125.44554138 416.86517334]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 174]
[9 173]
[10 172]
[11 171]
[12 167]
[13 166]
[14 165]
[15 164]
[16 163]
[17 162]
[18 160]
[19 159]
[38 158]
[39 157]
[40 156]
[42 155]
[43 154]
[44 153]
[45 152]
[46 151]
[47 150]
[48 137]
[49 136]
[50 135]
[51 134]
[64 122]
[65 121]
[66 120]
[67 119]
[69 117]
[70 116]
[71 115]
[72 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
