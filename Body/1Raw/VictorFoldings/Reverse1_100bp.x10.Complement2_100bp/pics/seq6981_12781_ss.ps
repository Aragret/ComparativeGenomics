%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[205.77978516 328.39190674]
[215.65275574 317.06768799]
[226.97578430 307.19332886]
[213.52467346 300.79675293]
[212.42317200 285.01391602]
[204.19436646 272.47253418]
[190.74324036 266.07592773]
[189.64175415 250.29310608]
[181.41294861 237.75170898]
[173.18412781 225.21029663]
[164.95532227 212.66889954]
[156.72651672 200.12750244]
[143.27539062 193.73089600]
[142.17390442 177.94808960]
[133.94509888 165.40667725]
[125.71628571 152.86528015]
[117.48748016 140.32388306]
[109.25867462 127.78247833]
[98.25855255 129.23280334]
[87.50842285 126.48678589]
[78.55143738 119.93861389]
[72.67337799 110.52828217]
[70.71801758 99.60662842]
[72.96605682 88.74143982]
[79.09478760 79.49240875]
[71.43418884 66.59607697]
[63.77359390 53.69975281]
[56.11299896 40.80342484]
[57.25598145 55.75981522]
[54.83506012 70.56316376]
[48.98714828 84.37627411]
[40.04297638 96.41793823]
[28.50837708 106.00714874]
[15.03568840 112.60159302]
[0.38685721 115.82831573]
[-14.60965443 115.50483704]
[-29.10572052 111.64944458]
[-42.28152084 104.48017883]
[-53.39189529 94.40250397]
[-61.80850220 81.98635101]
[-67.05533600 67.93392944]
[-68.83567047 53.03995514]
[-67.04882050 38.14676285]
[-61.79582977 24.09663582]
[-53.37379074 11.68417263]
[-42.25900269 1.61136115]
[-29.08006859 -5.55213356]
[-14.58231544 -9.40118122]
[0.41433588 -9.71809864]
[15.06175327 -6.48496246]
[28.53155327 0.11537647]
[40.06195450 9.70963764]
[49.00138855 21.75615120]
[46.33559418 6.99493456]
[43.66979980 -7.76628304]
[41.00400162 -22.52750015]
[38.22838974 -37.26846313]
[35.34312057 -51.98835373]
[32.02085876 -66.61581421]
[28.26455879 -81.13787079]
[24.50825882 -95.65993500]
[20.75195694 -110.18199158]
[17.66896248 -95.50224304]
[11.81850624 -81.69020844]
[3.41931129 -69.26227570]
[-7.21461201 -58.68306732]
[-19.68570709 -50.34809113]
[-33.52773285 -44.56896210]
[-48.22319412 -41.56173325]
[-63.22269058 -41.43883133]
[-77.96545410 -44.20485687]
[-91.90031433 -49.75639343]
[-104.50631714 -57.88589478]
[-115.31216431 -68.28943634]
[-123.91387939 -80.57807159]
[-129.98986816 -94.29237366]
[-133.31300354 -108.91963959]
[-133.75901794 -123.91300964]
[-131.31124878 -138.71194458]
[-126.06121063 -152.76316833]
[-118.20517731 -165.54138184]
[-108.03684998 -176.56884766]
[-95.93637848 -185.43331909]
[-82.35615540 -191.80335999]
[-67.80387878 -195.44084167]
[-52.82359695 -196.20976257]
[-37.97536469 -194.08139038]
[-23.81428909 -189.13528442]
[-10.86979485 -181.55636597]
[0.37417984 -171.62796021]
[9.49727058 -159.72128296]
[16.15840530 -146.28143311]
[20.10751915 -131.81690979]
[22.99279213 -146.53680420]
[25.87806511 -161.25669861]
[28.76333618 -175.97659302]
[31.64860916 -190.69648743]
[34.53388214 -205.41636658]
[37.41915512 -220.13626099]
[23.69482231 -226.36036682]
[11.77617550 -235.58221436]
[2.30597305 -247.30450439]
[-4.20506907 -260.89505005]
[-7.40581846 -275.62094116]
[-7.12366295 -290.68801880]
[-3.37381911 -305.28375244]
[3.64148903 -318.62100220]
[13.54393482 -329.98049927]
[25.79949188 -338.74966431]
[39.74723434 -344.45556641]
[54.63497543 -346.79049683]
[69.65983582 -345.62850952]
[84.01155853 -341.03231812]
[96.91615295 -333.24978638]
[107.67770386 -322.70056152]
[115.71584320 -309.95361328]
[120.59709930 -295.69631958]
[122.05821991 -280.69760132]
[120.02041626 -265.76629639]
[114.59358215 -251.70762634]
[106.07037354 -239.27975464]
[94.91044617 -229.15293884]
[81.71563721 -221.87326050]
[67.19751740 -217.83331299]
[52.13904572 -217.25099182]
[49.25377274 -202.53109741]
[46.36849976 -187.81120300]
[43.48322678 -173.09132385]
[40.59795761 -158.37142944]
[37.71268463 -143.65153503]
[34.82741165 -128.93164062]
[35.27401733 -113.93829346]
[39.03031540 -99.41623688]
[42.78661728 -84.89417267]
[46.54291916 -70.37211609]
[48.88708878 -68.83490753]
[50.76359177 -66.27651978]
[51.78042984 -62.87042999]
[51.61557770 -58.92868423]
[50.06301117 -54.87362671]
[52.94828415 -40.15373611]
[57.31968307 -34.19448853]
[55.76522064 -25.19329643]
[58.43101501 -10.43207836]
[61.09680939 4.32913876]
[63.76260757 19.09035683]
[69.00932312 33.14282608]
[76.66992188 46.03915405]
[84.33052063 58.93548203]
[91.99111938 71.83181000]
[110.52753448 72.67308807]
[124.83733368 84.48561859]
[129.17539978 102.52690125]
[121.80007172 119.55367279]
[130.02888489 132.09507751]
[138.25769043 144.63647461]
[146.48649597 157.17787170]
[154.71530151 169.71926880]
[168.75500488 177.01292419]
[169.26791382 191.89869690]
[177.49671936 204.44009399]
[185.72554016 216.98149109]
[193.95434570 229.52288818]
[202.18315125 242.06430054]
[216.22285461 249.35794067]
[216.73576355 264.24371338]
[224.96456909 276.78512573]
[239.00427246 284.07876587]
[239.51719666 298.96453857]
[253.08306885 292.50848389]
[267.40170288 287.95983887]
[282.20639038 285.40335083]
[297.22125244 284.88665771]
[312.16665649 286.41934204]
[326.76409912 289.97293091]
[340.74169922 295.48114014]
[353.83905029 302.84140015]
[365.81213379 311.91659546]
[376.43792725 322.53762817]
[385.51843262 334.50665283]
[392.88455200 347.60070801]
[398.39898682 361.57586670]
[401.95907593 376.17172241]
[403.49844360 391.11642456]
[402.98843384 406.13156128]
[400.43856812 420.93734741]
[395.89630127 435.25802612]
[389.44628906 448.82678223]
[381.20867920 461.39083862]
[371.33694458 472.71615601]
[360.01498413 482.59170532]
[347.45370483 490.83355713]
[333.88714600 497.28814697]
[319.56799316 501.83523560]
[304.76306152 504.39013672]
[289.74810791 504.90521240]
[274.80288696 503.37088013]
[260.20581055 499.81573486]
[246.22880554 494.30599976]
[233.13226318 486.94433594]
[221.16015625 477.86785889]
[210.53553772 467.24566650]
[201.45629883 455.27563477]
[194.09161377 442.18078613]
[188.57867432 428.20504761]
[185.02018738 413.60876465]
[183.48242188 398.66390991]
[183.99404907 383.64886475]
[186.54553223 368.84332275]
[191.08934021 354.52313232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 169]
[5 167]
[6 166]
[8 164]
[9 163]
[10 162]
[11 161]
[12 160]
[14 158]
[15 157]
[16 156]
[17 155]
[18 154]
[25 150]
[26 149]
[27 148]
[28 147]
[53 146]
[54 145]
[55 144]
[56 143]
[57 141]
[58 140]
[59 135]
[60 134]
[61 133]
[62 132]
[93 131]
[94 130]
[95 129]
[96 128]
[97 127]
[98 126]
[99 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
