%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[129.39064026 574.18566895]
[140.29919434 563.79571533]
[153.24649048 556.09411621]
[148.63247681 541.82135010]
[144.01847839 527.54864502]
[139.40446472 513.27587891]
[134.79045105 499.00317383]
[119.03047943 494.40960693]
[109.01363373 481.19506836]
[108.84544373 464.44772339]
[118.79026794 450.76574707]
[113.96427155 436.56329346]
[109.13827515 422.36083984]
[104.31227875 408.15838623]
[99.48628235 393.95593262]
[97.50943756 408.82510376]
[92.07750702 422.80700684]
[83.49768829 435.11096191]
[72.25521088 445.04104614]
[58.98590088 452.03570557]
[44.44018936 455.69934082]
[29.44071388 455.82479858]
[14.83576679 452.40490723]
[1.45132685 445.63314819]
[-9.95564938 435.89248657]
[-18.74004364 423.73376465]
[-24.40505409 409.84463501]
[-26.63029671 395.01062012]
[-25.28992462 380.07061768]
[-20.45974159 365.86959839]
[-12.41292000 353.21066284]
[-1.60454309 342.80972290]
[11.35412121 335.25506592]
[25.73019600 330.97390747]
[40.71064758 330.20834351]
[55.44825745 333.00170898]
[69.10954285 339.19598389]
[80.92189026 348.44091797]
[90.21725464 360.21359253]
[96.47026825 373.84927368]
[96.91687775 358.85592651]
[97.36347961 343.86257935]
[97.81008911 328.86923218]
[98.25669098 313.87588501]
[88.19550323 305.82589722]
[84.55350494 293.26336670]
[88.87551880 280.71221924]
[99.79555511 272.82760620]
[100.46533966 257.84255981]
[101.13512421 242.85751343]
[101.80490875 227.87248230]
[102.25151825 212.87913513]
[102.47484589 197.88079834]
[101.80506134 182.89575195]
[100.24453735 167.97714233]
[98.68401337 153.05854797]
[97.01247406 138.15197754]
[95.23000336 123.25825500]
[93.44754028 108.36453247]
[90.67192841 93.62357330]
[79.72531891 82.20068359]
[84.02892303 67.94136810]
[73.08231354 56.51847839]
[77.38591766 42.25915527]
[73.62962341 27.73709679]
[69.87332153 13.21503830]
[66.11701965 -1.30702090]
[62.03735352 -15.74157429]
[50.59160233 -26.66427422]
[54.25420380 -41.10153961]
[49.85320663 -55.44138718]
[45.45220566 -69.78123474]
[31.77066803 -77.22792816]
[27.51170731 -91.83326721]
[34.69530487 -104.83062744]
[30.29430771 -119.17047882]
[25.89330864 -133.51033020]
[14.44756031 -144.43302917]
[18.11016083 -158.87028503]
[13.70916271 -173.21014404]
[-1.26248288 -171.68171692]
[-16.24460411 -173.10379028]
[-30.66132736 -177.42169189]
[-43.95851135 -184.46946716]
[-55.62504959 -193.97621155]
[-65.21251678 -205.57650757]
[-72.35237885 -218.82446289]
[-76.77021790 -233.21087646]
[-78.29621887 -248.18276978]
[-76.87171936 -263.16467285]
[-72.55147552 -277.58068848]
[-65.50155640 -290.87673950]
[-55.99292755 -302.54174805]
[-44.39108276 -312.12731934]
[-31.14196396 -319.26504517]
[-16.75483322 -323.68054199]
[-1.78269446 -325.20413208]
[13.19896507 -323.77719116]
[27.61429024 -319.45462036]
[40.90919113 -312.40255737]
[52.57265472 -302.89202881]
[62.15636063 -291.28863525]
[69.29193878 -278.03836060]
[73.70512390 -263.65051270]
[75.22627258 -248.67813110]
[73.79692078 -233.69670105]
[69.47201538 -219.28208923]
[62.41778564 -205.98832703]
[52.90538406 -194.32640076]
[41.30043793 -184.74456787]
[28.04900932 -177.61112976]
[32.45000839 -163.27128601]
[43.58096695 -153.37426758]
[40.23315811 -137.91131592]
[44.63415527 -123.57147980]
[49.03515244 -109.23162842]
[62.27316284 -102.50180054]
[66.94068146 -88.02185059]
[59.79205322 -74.18223572]
[64.19305420 -59.84238434]
[68.59404755 -45.50253677]
[79.72501373 -35.60551834]
[76.37719727 -20.14257240]
[79.30412292 -18.17650032]
[81.42418671 -14.69506359]
[82.03552246 -10.09293747]
[80.63907623 -5.06332159]
[84.39537811 9.45873737]
[88.15167999 23.98079681]
[91.90798187 38.50285721]
[102.58591461 48.88702774]
[98.55098724 64.18506622]
[109.22891998 74.56923676]
[105.19398499 89.86727142]
[111.26954651 76.15277100]
[123.73636627 67.81140137]
[138.73146057 67.42782593]
[151.60844421 75.12090302]
[158.37722778 88.50684357]
[156.94044495 103.43787384]
[147.74330139 115.28744507]
[133.63562012 120.38385010]
[118.98882294 117.14790344]
[108.34125519 106.58206940]
[110.12372589 121.47578430]
[111.90618896 136.36950684]
[116.03318787 144.51847839]
[113.60261536 151.49801636]
[115.16313934 166.41662598]
[116.72366333 181.33523560]
[125.37047577 169.07829285]
[139.53276062 164.13565063]
[153.92832947 168.35078430]
[163.18800354 180.15156555]
[163.85813904 195.13659668]
[155.68881226 207.71681213]
[141.72695923 213.20011902]
[127.18001556 209.54136658]
[117.47318268 198.10412598]
[117.24985504 213.10246277]
[120.13114166 219.05307007]
[119.64735413 224.71548462]
[116.78994751 228.54226685]
[116.12016296 243.52729797]
[115.45037842 258.51232910]
[114.78059387 273.49737549]
[126.82004547 286.18875122]
[125.97241974 303.32339478]
[113.25004578 314.32247925]
[112.80343628 329.31582642]
[112.35682678 344.30917358]
[111.91022491 359.30255127]
[111.46361542 374.29589844]
[113.68873596 389.12994385]
[118.51473236 403.33239746]
[123.34072876 417.53485107]
[128.16673279 431.73730469]
[132.99272156 445.93975830]
[146.42504883 449.03222656]
[156.49539185 458.28463745]
[160.64573669 471.20144653]
[157.89384460 484.37609863]
[149.06318665 494.38916016]
[153.67720032 508.66189575]
[158.29119873 522.93463135]
[162.90521240 537.20733643]
[167.51922607 551.48010254]
[182.52476501 550.14526367]
[197.45101929 552.18353271]
[211.54933167 557.49255371]
[224.11250305 565.80603027]
[234.51037598 576.70703125]
[242.22142029 589.64874268]
[246.85882568 603.98199463]
[248.19000244 618.98785400]
[246.14816284 633.91363525]
[240.83573914 648.01062012]
[232.51918030 660.57177734]
[221.61566162 670.96704102]
[208.67210388 678.67492676]
[194.33772278 683.30883789]
[179.33154297 684.63641357]
[164.40626526 682.59094238]
[150.31054688 677.27508545]
[137.75138855 668.95550537]
[127.35879517 658.04949951]
[119.65402985 645.10406494]
[115.02356720 630.76855469]
[113.69966888 615.76202393]
[115.74874115 600.83728027]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 187]
[4 186]
[5 185]
[6 184]
[7 183]
[11 178]
[12 177]
[13 176]
[14 175]
[15 174]
[40 173]
[41 172]
[42 171]
[43 170]
[44 169]
[48 166]
[49 165]
[50 164]
[51 163]
[52 160]
[53 159]
[54 150]
[55 149]
[56 148]
[57 146]
[58 145]
[59 144]
[60 134]
[62 132]
[64 130]
[65 129]
[66 128]
[67 127]
[68 123]
[70 121]
[71 120]
[72 119]
[75 116]
[76 115]
[77 114]
[79 112]
[80 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
