%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[66.71651459 456.95755005]
[72.03597260 471.04290771]
[74.31029510 485.92648315]
[73.44005585 500.95767212]
[69.46328735 515.47930908]
[62.55384827 528.85668945]
[53.01378632 540.50488281]
[41.26014709 549.91479492]
[27.80675697 556.67492676]
[13.24173450 560.48986816]
[-1.79819703 561.19281006]
[-16.65555763 558.75305176]
[-30.68084717 553.27722168]
[-43.26094055 545.00463867]
[-53.84588623 534.29705811]
[-61.97296524 521.62249756]
[-67.28688812 507.53506470]
[-69.55535126 492.65060425]
[-68.67919922 477.61975098]
[-64.69671631 463.09963989]
[-57.78201675 449.72503662]
[-48.23736954 438.08056641]
[-36.48003387 428.67532349]
[-23.02398300 421.92044067]
[-8.45746040 418.11123657]
[6.58274651 417.41418457]
[21.43914604 419.85980225]
[26.89450264 405.88702393]
[32.34986115 391.91421509]
[37.80521774 377.94143677]
[43.26057434 363.96862793]
[47.76820374 349.66192627]
[51.30787659 335.08557129]
[54.84754944 320.50918579]
[58.16980743 305.88171387]
[61.27391815 291.20642090]
[64.37802887 276.53112793]
[67.48213959 261.85583496]
[62.54611206 247.80288696]
[72.97174835 235.90260315]
[66.64108276 219.53526306]
[79.06250000 205.94152832]
[81.94777679 191.22163391]
[84.83304596 176.50173950]
[86.94766998 161.65155029]
[88.28590393 146.71136475]
[89.62413788 131.77117920]
[76.88217926 124.13777924]
[68.70610809 111.73704529]
[66.71073914 97.01818848]
[71.29017639 82.88825226]
[81.53994751 72.13797760]
[95.43567657 66.89058685]
[96.77391052 51.95040512]
[98.11214447 37.01021957]
[95.68142700 30.86179543]
[96.58501434 25.25104332]
[99.71913147 21.64738464]
[101.50160217 6.75366688]
[103.28406525 -8.14005089]
[105.06652832 -23.03376770]
[106.84899902 -37.92748642]
[106.06767273 -52.90712357]
[102.74541473 -67.53458405]
[92.14376068 -79.27832794]
[96.87001038 -93.40319061]
[93.54775238 -108.03065491]
[90.22549438 -122.65811157]
[86.90323639 -137.28556824]
[76.30158234 -149.02931213]
[81.02783203 -163.15417480]
[77.70557404 -177.78164673]
[67.22760010 -185.30326843]
[64.76161194 -197.55490112]
[71.09490967 -207.86102295]
[67.99079895 -222.53631592]
[64.88668823 -237.21162415]
[49.89317322 -236.22415161]
[34.91173935 -237.38059998]
[20.24739265 -240.65745544]
[6.19868279 -245.98797607]
[-6.94837666 -253.26365662]
[-18.92612839 -262.33639526]
[-29.49072266 -273.02142334]
[-38.42707443 -285.10125732]
[-45.55325699 -298.32995605]
[-50.72418213 -312.43817139]
[-53.83458328 -327.13873291]
[-54.82113647 -342.13232422]
[-53.66374969 -357.11367798]
[-50.38599396 -371.77783203]
[-45.05459595 -385.82620239]
[-37.77809906 -398.97280884]
[-28.70463943 -410.95001221]
[-18.01894379 -421.51391602]
[-5.93855762 -430.44952393]
[7.29057646 -437.57489014]
[21.39912987 -442.74496460]
[36.09987259 -445.85443115]
[51.09351349 -446.84005737]
[66.07480621 -445.68176270]
[80.73874664 -442.40307617]
[94.78679657 -437.07083130]
[107.93295288 -429.79351807]
[119.90958405 -420.71929932]
[130.47285461 -410.03295898]
[139.40771484 -397.95202637]
[146.53225708 -384.72244263]
[151.70143127 -370.61358643]
[154.81001282 -355.91262817]
[155.79470825 -340.91894531]
[154.63546753 -325.93771362]
[151.35589600 -311.27398682]
[146.02276611 -297.22625732]
[138.74464417 -284.08056641]
[129.66969299 -272.10449219]
[118.98269653 -261.54187012]
[106.90120697 -252.60777283]
[93.67118835 -245.48403931]
[79.56199646 -240.31573486]
[82.66610718 -225.64042664]
[85.77021790 -210.96513367]
[98.18616486 -198.56306458]
[92.33303070 -181.10389709]
[95.65528870 -166.47644043]
[106.01931763 -155.77894592]
[101.53069305 -140.60783386]
[104.85295105 -125.98036957]
[108.17521667 -111.35291290]
[111.49747467 -96.72544861]
[121.86149597 -86.02796173]
[117.37287903 -70.85684204]
[120.69513702 -56.22938156]
[124.23728943 -70.80515289]
[131.24786377 -84.06607056]
[141.29817200 -95.20121002]
[153.77362061 -103.52966309]
[167.91134644 -108.54213715]
[182.84680176 -109.93212128]
[197.66668701 -107.61461639]
[211.46476746 -101.73133850]
[223.39727783 -92.64205170]
[232.73454285 -80.90256500]
[238.90559387 -67.23076630]
[241.53305054 -52.46267319]
[240.45625305 -37.50137329]
[235.74104309 -23.26175117]
[227.67576599 -10.61456585]
[216.75361633 -0.33319736]
[203.64247131 6.95364428]
[189.14410400 10.80036640]
[174.14508057 10.97174072]
[159.56260681 7.45728636]
[146.28840637 0.47191495]
[135.13418579 -9.55721569]
[126.78205109 -22.01682091]
[121.74271393 -36.14501953]
[119.96025085 -21.25130272]
[118.17778015 -6.35758448]
[116.39531708 8.53613281]
[114.61285400 23.42984962]
[113.05233002 38.34845352]
[111.71409607 53.28863907]
[110.37586212 68.22882843]
[123.11782074 75.86222076]
[131.29389954 88.26295471]
[133.28926086 102.98181152]
[128.70982361 117.11174774]
[118.46005249 127.86202240]
[104.56432343 133.10940552]
[103.22608948 148.04959106]
[101.88785553 162.98977661]
[113.34195709 153.30455017]
[128.34085083 153.12203979]
[140.02723694 162.52568054]
[143.05825806 177.21624756]
[136.04818726 190.47741699]
[122.20191193 196.24636841]
[107.84977722 191.88560486]
[99.55294037 179.38700867]
[96.66766357 194.10690308]
[93.78239441 208.82679749]
[100.31726837 219.94697571]
[97.61107635 232.14779663]
[87.64704895 239.00671387]
[92.36104584 254.10932922]
[82.15744019 264.95993042]
[79.05332947 279.63522339]
[75.94921875 294.31054688]
[72.84510803 308.98583984]
[74.52798462 315.37954712]
[72.96405792 320.84317017]
[69.42391968 324.04885864]
[65.88425446 338.62524414]
[62.34457779 353.20159912]
[74.17201233 343.97601318]
[89.09954071 342.50332642]
[102.50171661 349.23992920]
[110.22573090 362.09835815]
[109.87820435 377.09436035]
[101.56682587 389.58117676]
[87.86696625 395.68969727]
[73.02368164 393.52709961]
[61.63631821 383.76348877]
[57.23337173 369.42398071]
[51.77801514 383.39678955]
[46.32265854 397.36956787]
[40.86730194 411.34237671]
[35.41194534 425.31518555]
[47.99528885 433.58276367]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 209]
[28 208]
[29 207]
[30 206]
[31 205]
[32 195]
[33 194]
[34 193]
[35 190]
[36 189]
[37 188]
[38 187]
[40 185]
[42 182]
[43 181]
[44 180]
[45 172]
[46 171]
[47 170]
[53 164]
[54 163]
[55 162]
[58 161]
[59 160]
[60 159]
[61 158]
[62 157]
[63 133]
[64 132]
[66 130]
[67 129]
[68 128]
[69 127]
[71 125]
[72 124]
[75 122]
[76 121]
[77 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
