%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[124.06129456 519.09967041]
[115.12901306 531.93505859]
[100.02259064 535.97613525]
[85.87481689 529.31469727]
[79.36583710 515.09613037]
[83.56899261 500.03402710]
[96.49967957 491.24020386]
[97.83791351 476.30001831]
[99.17614746 461.35983276]
[100.51438141 446.41964722]
[101.85262299 431.47946167]
[102.52240753 416.49444580]
[102.52240753 401.49444580]
[102.52240753 386.49444580]
[91.84152985 376.17675781]
[91.62785339 360.96463013]
[102.52240753 349.83148193]
[102.52240753 334.83148193]
[102.29907990 319.83316040]
[101.85247040 304.83981323]
[100.95965576 289.86639404]
[99.62142181 274.92620850]
[98.28318787 259.98602295]
[89.20481110 251.99168396]
[87.96762848 239.55572510]
[95.77762604 229.29089355]
[94.66197205 214.33244324]
[93.54632568 199.37397766]
[91.51266479 197.44464111]
[90.12071228 194.59349060]
[89.72538757 191.06091309]
[90.58814240 187.21121216]
[92.83665466 183.49662781]
[92.61332703 168.49829102]
[89.37059021 161.85700989]
[92.50000000 153.27537537]
[92.50000000 138.27537537]
[92.50000000 123.27537537]
[92.50000000 108.27537537]
[92.38833618 93.27578735]
[92.16500854 78.27745056]
[84.22309875 64.59400940]
[91.77005005 51.75294876]
[91.54672241 36.75461197]
[91.32339478 21.75627327]
[91.10006714 6.75793552]
[90.87673950 -8.24040222]
[90.65341187 -23.23873901]
[90.43008423 -38.23707581]
[87.17325592 -46.77117920]
[90.31675720 -53.45998764]
[90.31675720 -68.45999146]
[90.31675720 -83.45999146]
[90.31675720 -98.45999146]
[80.44171906 -87.16912842]
[65.84207153 -83.72667694]
[51.96313477 -89.41658783]
[43.98140335 -102.11666107]
[44.87386322 -117.09008789]
[54.30765152 -128.75215149]
[68.76419830 -132.75317383]
[82.85157013 -127.60089874]
[91.31585693 -115.21585846]
[93.09832001 -130.10957336]
[94.88078308 -145.00329590]
[96.44130707 -159.92190552]
[97.77954102 -174.86209106]
[99.11777496 -189.80227661]
[96.91995239 -194.53689575]
[96.77273560 -199.17710876]
[98.29678345 -202.95762634]
[100.86397552 -205.37461853]
[102.86798859 -220.24015808]
[104.87200165 -235.10568237]
[106.87601471 -249.97120667]
[108.88002777 -264.83673096]
[110.88404083 -279.70227051]
[112.88805389 -294.56777954]
[114.00370789 -309.52624512]
[114.22703552 -324.52459717]
[114.45036316 -339.52291870]
[111.56907654 -345.47354126]
[112.05285645 -351.13595581]
[114.91026306 -354.96273804]
[115.58004761 -369.94775391]
[116.24983215 -384.93280029]
[116.91962433 -399.91784668]
[108.80746460 -409.94558716]
[109.67382812 -422.41287231]
[118.51016235 -430.67398071]
[119.40297699 -445.64739990]
[120.29579163 -460.62078857]
[121.18861389 -475.59420776]
[122.08142853 -490.56759644]
[122.97424316 -505.54101562]
[123.86705780 -520.51440430]
[109.54760742 -525.27001953]
[96.94746399 -533.57055664]
[86.92571259 -544.85003662]
[80.16566467 -558.33947754]
[77.12821960 -573.11901855]
[78.02049255 -588.18115234]
[82.78163147 -602.49871826]
[91.08701324 -615.09570312]
[102.37037659 -625.11309814]
[115.86239624 -631.86791992]
[130.64315796 -634.89965820]
[145.70489502 -634.00158691]
[160.02066040 -629.23492432]
[172.61439514 -620.92462158]
[182.62744141 -609.63739014]
[189.37705994 -596.14276123]
[192.40309143 -581.36083984]
[191.49919128 -566.29949951]
[186.72700500 -551.98553467]
[178.41189575 -539.39501953]
[167.12078857 -529.38635254]
[153.62356567 -522.64190674]
[138.84046936 -519.62158203]
[137.94764709 -504.64819336]
[137.05484009 -489.67477417]
[136.16201782 -474.70138550]
[135.26919556 -459.72796631]
[134.37638855 -444.75457764]
[133.48356628 -429.78115845]
[142.17213440 -414.53402710]
[131.90466309 -399.24804688]
[131.23487854 -384.26303101]
[130.56509399 -369.27798462]
[129.89530945 -354.29293823]
[129.44869995 -339.29959106]
[129.22537231 -324.30126953]
[129.00204468 -309.30291748]
[139.04409790 -320.44549561]
[153.69337463 -323.67019653]
[167.48605347 -317.77429199]
[175.27781677 -304.95678711]
[174.16252136 -289.99832153]
[164.55615234 -278.47799683]
[150.04164124 -274.69262695]
[136.03253174 -280.05407715]
[127.75358582 -292.56378174]
[125.74957275 -277.69824219]
[123.74555969 -262.83273315]
[121.74154663 -247.96719360]
[119.73753357 -233.10166931]
[117.73351288 -218.23614502]
[115.72949982 -203.37060547]
[114.05796051 -188.46403503]
[112.71972656 -173.52384949]
[111.38149261 -158.58366394]
[113.70202637 -154.40943909]
[113.42496490 -148.73315430]
[109.77450562 -143.22082520]
[107.99203491 -128.32711792]
[106.20957184 -113.43339539]
[105.31675720 -98.45999146]
[105.31675720 -83.45999146]
[105.31675720 -68.45999146]
[105.31675720 -53.45998764]
[105.42842102 -38.46040344]
[105.65174866 -23.46206665]
[105.87507629 -8.46372986]
[106.09840393 6.53460741]
[106.32173157 21.53294563]
[106.54505920 36.53128433]
[106.76838684 51.52962112]
[114.69432068 64.14028168]
[107.16334534 78.05412292]
[107.38667297 93.05245972]
[110.64598846 100.42466736]
[107.50000000 108.27537537]
[107.50000000 123.27537537]
[107.50000000 138.27537537]
[107.50000000 153.27537537]
[107.61166382 168.27496338]
[107.83499146 183.27330017]
[108.50477600 198.25833130]
[109.62042999 213.21678162]
[110.73607635 228.17524719]
[121.45412445 243.14871216]
[113.22337341 258.64779663]
[114.56160736 273.58798218]
[115.89984131 288.52816772]
[118.52259827 291.98867798]
[119.78117371 295.72772217]
[119.75550842 299.28225708]
[118.66772461 302.26275635]
[116.84581757 304.39318848]
[117.29242706 319.38656616]
[120.43654633 325.20257568]
[120.20608521 330.88095093]
[117.52240753 334.83148193]
[117.52240753 349.83148193]
[128.41696167 360.96463013]
[128.20327759 376.17675781]
[117.52240753 386.49444580]
[117.52240753 401.49444580]
[117.52240753 416.49444580]
[128.86718750 406.68139648]
[143.83737183 407.62692261]
[153.85731506 418.78939819]
[153.18717957 433.77441406]
[142.21081543 443.99789429]
[127.21601105 443.60336304]
[116.79280090 432.81771851]
[115.45456696 447.75790405]
[114.11633301 462.69808960]
[112.77809906 477.63827515]
[111.43986511 492.57846069]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 210]
[8 209]
[9 208]
[10 207]
[11 206]
[12 199]
[13 198]
[14 197]
[17 194]
[18 193]
[19 190]
[20 189]
[21 184]
[22 183]
[23 182]
[26 180]
[27 179]
[28 178]
[33 177]
[34 176]
[36 175]
[37 174]
[38 173]
[39 172]
[40 170]
[41 169]
[43 167]
[44 166]
[45 165]
[46 164]
[47 163]
[48 162]
[49 161]
[51 160]
[52 159]
[53 158]
[54 157]
[63 156]
[64 155]
[65 154]
[66 151]
[67 150]
[68 149]
[72 148]
[73 147]
[74 146]
[75 145]
[76 144]
[77 143]
[78 142]
[79 133]
[80 132]
[81 131]
[84 130]
[85 129]
[86 128]
[87 127]
[90 125]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
[96 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
