%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[276.87924194 373.63665771]
[286.31579590 361.95098877]
[297.14257812 351.54022217]
[288.18185425 339.51083374]
[279.22116089 327.48147583]
[270.26046753 315.45208740]
[261.12167358 303.55746460]
[251.80679321 291.80020142]
[242.49191284 280.04293823]
[232.91679382 268.49664307]
[223.08621216 257.16705322]
[213.25563049 245.83746338]
[203.42504883 234.50787354]
[189.23991394 229.96568298]
[186.03970337 214.47152710]
[173.99960327 213.30424500]
[165.71685791 203.94581604]
[166.04016113 191.05169678]
[156.37934875 179.57701111]
[142.26341248 174.82414246]
[139.29423523 159.28404236]
[129.63342285 147.80934143]
[119.97261810 136.33464050]
[110.31180573 124.85993958]
[100.65099335 113.38523865]
[104.24212646 127.94902039]
[104.76979828 142.93974304]
[102.21155548 157.71997070]
[96.67618561 171.66127014]
[88.39906311 184.17083740]
[77.73211670 194.71675110]
[65.12892914 202.85060120]
[51.12537766 208.22653198]
[36.31691360 210.61596680]
[21.33319473 209.91728210]
[6.81133604 206.16020203]
[-6.63118410 199.50448608]
[-18.42278481 190.23312378]
[-28.06207848 178.74034119]
[-35.13919830 165.51481628]
[-39.35322571 151.11891174]
[-40.52497101 136.16474915]
[-38.60461807 121.28818512]
[-33.67381668 107.12177277]
[-25.94222641 94.26788330]
[-15.73860168 83.27306366]
[-3.49680448 74.60482025]
[10.26263809 68.63173676]
[24.95466805 65.60778809]
[39.95457077 65.66155243]
[54.62454605 68.79074860]
[68.34081268 74.86231232]
[80.52015686 83.61808777]
[90.64480591 94.68591309]
[86.45779419 80.28212738]
[81.73766327 66.04414368]
[76.49094391 51.99166870]
[71.24422455 37.93919754]
[65.89304352 23.92617607]
[60.43768311 9.95337772]
[54.98232651 -4.01941967]
[49.52696991 -17.99221802]
[44.07161331 -31.96501541]
[31.84517288 -42.00616837]
[34.42383194 -56.67585754]
[20.22632980 -63.08433914]
[14.89286995 -77.33245850]
[21.08987236 -90.82810974]
[15.63451481 -104.80091095]
[10.17915726 -118.77370453]
[4.72380066 -132.74650574]
[-0.19074354 -137.16903687]
[-1.88043094 -142.59507751]
[-0.67914921 -147.21742249]
[-5.71606541 -161.34645081]
[-10.75298119 -175.47547913]
[-15.78989792 -189.60450745]
[-30.63139915 -187.16122437]
[-45.67065048 -187.40747070]
[-60.42420959 -190.33532715]
[-74.41780090 -195.85067749]
[-87.20159912 -203.77622986]
[-98.36464691 -213.85720825]
[-107.54810333 -225.76954651]
[-114.45676422 -239.13031006]
[-118.86853790 -253.51002502]
[-120.64160156 -268.44641113]
[-119.71897125 -283.45938110]
[-116.13028717 -298.06625366]
[-109.99092865 -311.79754639]
[-101.49823761 -324.21179199]
[-90.92522430 -334.90997314]
[-78.61176300 -343.54818726]
[-64.95368958 -349.84872437]
[-50.39005280 -353.60906982]
[-35.38900375 -354.70831299]
[-20.43277359 -353.11117554]
[-6.00213814 -348.86892700]
[7.43901491 -342.11798096]
[19.45860863 -333.07534790]
[29.67026329 -322.03170776]
[37.74571609 -309.34207153]
[43.42537308 -295.41436768]
[46.52666092 -280.69628906]
[46.94988251 -265.66098022]
[44.68143463 -250.79174805]
[39.79423523 -236.56658936]
[32.44539261 -223.44279480]
[22.87113762 -211.84220886]
[11.37924576 -202.13777161]
[-1.66086829 -194.64141846]
[3.37604785 -180.51239014]
[8.41296387 -166.38336182]
[13.44988060 -152.25433350]
[18.69659805 -138.20185852]
[24.15195465 -124.22906494]
[29.60731316 -110.25626373]
[35.06266785 -96.28347015]
[48.76455688 -90.55687714]
[54.49611282 -76.46418762]
[48.39663315 -62.13121414]
[60.23286819 -53.08948898]
[58.04441071 -37.42037201]
[63.49976730 -23.44757462]
[68.95512390 -9.47477627]
[74.41048431 4.49802113]
[79.86583710 18.47081947]
[85.22673035 23.55831909]
[85.29669952 32.69248199]
[90.54341888 46.74495316]
[95.79013062 60.79742432]
[104.29671478 48.44274521]
[119.24826813 47.23813629]
[129.62306213 58.07158661]
[127.77318573 72.95708466]
[115.06230164 80.92158508]
[100.86157990 76.09511566]
[105.04859161 90.49890137]
[112.12569427 103.72442627]
[121.78650665 115.19912720]
[131.44731140 126.67382812]
[141.10812378 138.14852905]
[150.76893616 149.62322998]
[165.57586670 155.19683838]
[167.85404968 169.91619873]
[177.51486206 181.39089966]
[194.96974182 187.25677490]
[197.36929321 204.64094543]
[212.25756836 209.99348450]
[214.75463867 224.67729187]
[224.58522034 236.00688171]
[234.41580200 247.33647156]
[244.24638367 258.66607666]
[249.18089294 260.36831665]
[252.62466431 263.48178101]
[254.28976440 267.20233154]
[254.24916077 270.72805786]
[263.56405640 282.48532104]
[272.87893677 294.24255371]
[278.87475586 297.02853394]
[282.08206177 301.72003174]
[282.28985596 306.49139404]
[291.25054932 318.52075195]
[300.21124268 330.55014038]
[309.17193604 342.57952881]
[322.24642944 335.18621826]
[336.14447021 329.48992920]
[350.64688110 325.58047485]
[365.52490234 323.51956177]
[380.54391479 323.33963013]
[395.46704102 325.04357910]
[410.05892944 328.60449219]
[424.08944702 333.96621704]
[437.33728027 341.04421997]
[449.59353638 349.72680664]
[460.66488647 359.87710571]
[470.37670898 371.33502197]
[478.57586670 383.91979980]
[485.13305664 397.43301392]
[489.94479370 411.66149902]
[492.93527222 426.38088989]
[494.05728149 441.35900879]
[493.29312134 456.35968018]
[490.65487671 471.14624023]
[486.18414307 485.48553467]
[479.95141602 499.15142822]
[472.05499268 511.92834473]
[462.61941528 523.61480713]
[451.79351807 534.02648926]
[439.74804688 542.99920654]
[426.67291260 550.39141846]
[412.77441406 556.08654785]
[398.27166748 559.99475098]
[383.39346313 562.05444336]
[368.37445068 562.23309326]
[353.45144653 560.52789307]
[338.85986328 556.96575928]
[324.82980347 551.60284424]
[311.58255005 544.52374268]
[299.32705688 535.84008789]
[288.25656128 525.68884277]
[278.54568481 514.23016357]
[270.34759521 501.64465332]
[263.79156494 488.13088989]
[258.98098755 473.90200806]
[255.99176025 459.18237305]
[254.87101746 444.20413208]
[255.63642883 429.20355225]
[258.27590942 414.41720581]
[262.74786377 400.07827759]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 165]
[4 164]
[5 163]
[6 162]
[7 159]
[8 158]
[9 157]
[10 153]
[11 152]
[12 151]
[13 150]
[15 148]
[18 146]
[19 145]
[21 143]
[22 142]
[23 141]
[24 140]
[25 139]
[54 138]
[55 137]
[56 131]
[57 130]
[58 129]
[59 127]
[60 126]
[61 125]
[62 124]
[63 123]
[65 121]
[68 118]
[69 117]
[70 116]
[71 115]
[74 114]
[75 113]
[76 112]
[77 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
