%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUACUCUCAUUAUCUAUCCCGAGUCCGCAAACACAUACUAUACAAACGCCAAAGCUACUACACCAGAAACCUCAUCUUUGGACACUCCUUUCCAUAAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[69.59030914 721.36614990]
[54.82674789 718.60632324]
[40.51425171 714.05303955]
[26.86980057 707.77545166]
[14.10023880 699.86859131]
[2.39914823 690.45245361]
[-8.05608368 679.66967773]
[-17.10696030 667.68383789]
[-24.61627007 654.67651367]
[-30.47017479 640.84497070]
[-34.57993317 626.39886475]
[-36.88323975 611.55725098]
[-37.34517670 596.54504395]
[-35.95874023 581.58984375]
[-32.74495316 566.91839600]
[-27.75253105 552.75311279]
[-21.05715942 539.30871582]
[-12.76033783 526.78906250]
[-2.98784518 515.38391113]
[8.11217117 505.26611328]
[20.37143707 496.58914185]
[33.60410690 489.48446655]
[47.60957336 484.05984497]
[62.17551804 480.39752197]
[77.08113098 478.55294800]
[77.08113098 463.55294800]
[77.08113098 448.55294800]
[77.08113098 433.55294800]
[77.08113098 418.55294800]
[74.85986328 415.81463623]
[73.85456085 411.86441040]
[74.62039185 407.28546143]
[77.43106842 402.88690186]
[78.10085297 387.90185547]
[70.17191315 378.76629639]
[70.60728455 366.27655029]
[79.71865082 357.14715576]
[72.75260925 343.98190308]
[81.29759216 330.66674805]
[82.19040680 315.69332886]
[83.08322144 300.71990967]
[83.97603607 285.74652100]
[75.28746796 270.49935913]
[85.55494690 255.21340942]
[78.39366913 242.15335083]
[86.73946381 228.71243286]
[87.40924835 213.72738647]
[80.24797058 200.66732788]
[88.59375763 187.22640991]
[89.26354218 172.24136353]
[89.93332672 157.25633240]
[90.60311890 142.27128601]
[91.27290344 127.28624725]
[78.82279205 119.29319763]
[72.02098083 106.15434265]
[72.68161011 91.37403107]
[80.62849426 78.89440155]
[93.74205780 72.04396820]
[94.41184235 57.05892944]
[93.96524048 42.06557846]
[92.40471649 27.14697266]
[90.84419250 12.22836876]
[89.28366852 -2.69023609]
[85.27845001 -10.89974594]
[87.81267548 -17.84233284]
[86.47443390 -32.78252029]
[85.13619995 -47.72270203]
[81.25365448 -55.99093628]
[83.89096069 -62.89502335]
[82.77531433 -77.85347748]
[81.65966034 -92.81192780]
[80.32142639 -107.75211334]
[78.76090240 -122.67072296]
[77.20037842 -137.58932495]
[73.19516754 -145.79882812]
[75.72938538 -152.74142456]
[66.35023499 -161.59548950]
[65.54319000 -174.06674194]
[73.19661713 -183.43432617]
[72.08097076 -198.39279175]
[70.96532440 -213.35124207]
[69.84967041 -228.30969238]
[54.86088562 -229.38395691]
[40.18825912 -232.62924194]
[26.14454460 -237.97639465]
[13.02908516 -245.31141663]
[1.12143743 -254.47798157]
[-9.32458687 -265.28067017]
[-18.08633041 -277.48925781]
[-24.97703552 -290.84353638]
[-29.84982491 -305.05877686]
[-32.60083771 -319.83206177]
[-33.17143631 -334.84848022]
[-31.54945374 -349.78790283]
[-27.76946640 -364.33197021]
[-21.91204453 -378.17062378]
[-14.10203838 -391.00891113]
[-4.50591993 -402.57318115]
[6.67176962 -412.61694336]
[19.19277763 -420.92611694]
[32.79021835 -427.32357788]
[47.17425919 -431.67297363]
[62.03830338 -433.88159180]
[77.06552887 -433.90234375]
[91.93562317 -431.73483276]
[106.33162689 -427.42520142]
[119.94669342 -421.06533813]
[132.49061584 -412.79083252]
[143.69602966 -402.77798462]
[153.32406616 -391.24029541]
[161.16952515 -378.42364502]
[167.06518555 -364.60122681]
[170.88534546 -350.06765747]
[172.54861450 -335.13275146]
[172.01953125 -320.11483765]
[169.30935669 -305.33401489]
[164.47587585 -291.10534668]
[157.62210083 -277.73208618]
[148.89413452 -265.49932861]
[138.47801208 -254.66780090]
[126.59574127 -245.46835327]
[113.50061035 -238.09710693]
[99.47172546 -232.71118164]
[84.80812836 -229.42533875]
[85.92377472 -214.46688843]
[87.03942108 -199.50843811]
[88.15507507 -184.54998779]
[98.80278778 -170.60031128]
[90.66957092 -154.07965088]
[92.11898804 -139.14984131]
[93.67951202 -124.23123932]
[95.24003601 -109.31263733]
[98.32015228 -105.66271210]
[99.14010620 -100.03913116]
[96.61811829 -93.92758179]
[97.73376465 -78.96912384]
[98.84941101 -64.01067352]
[100.07638550 -49.06093597]
[101.41461945 -34.12075424]
[102.75285339 -19.18056679]
[104.20227814 -4.25075912]
[105.76280212 10.66784573]
[107.32331848 25.58645058]
[108.88384247 40.50505447]
[116.42515564 27.53861427]
[129.38992310 19.99441147]
[144.38917542 19.84448433]
[157.50213623 27.12802505]
[165.30113220 39.94112778]
[165.74751282 54.93448639]
[158.72459412 68.18886566]
[146.06814575 76.23960876]
[131.08654785 76.98226166]
[117.69593811 70.22270966]
[109.39688110 57.72871399]
[108.72709656 72.71375275]
[121.17720795 80.70680237]
[127.97901917 93.84565735]
[127.31838989 108.62596893]
[119.37150574 121.10559845]
[106.25794220 127.95603180]
[105.58815765 142.94107056]
[104.91836548 157.92611694]
[104.24858093 172.91114807]
[103.57879639 187.89619446]
[110.69216919 202.02809143]
[102.39428711 214.39717102]
[101.72450256 229.38221741]
[108.83787537 243.51411438]
[100.53998566 255.88319397]
[108.65213776 265.91094971]
[107.78578186 278.37823486]
[98.94944763 286.63934326]
[98.05663300 301.61273193]
[97.16381073 316.58615112]
[96.27099609 331.55953979]
[103.17317963 345.79577637]
[94.69205475 358.03997803]
[103.31355286 374.31115723]
[93.08589172 388.57165527]
[92.41610718 403.55667114]
[92.08113098 418.55294800]
[92.08113098 433.55294800]
[92.08113098 448.55294800]
[92.08113098 463.55294800]
[92.08113098 478.55294800]
[106.98674011 480.39752197]
[121.55268860 484.05984497]
[135.55815125 489.48446655]
[148.79081726 496.58914185]
[161.05009460 505.26611328]
[172.15010071 515.38391113]
[181.92259216 526.78906250]
[190.21942139 539.30871582]
[196.91479492 552.75311279]
[201.90721130 566.91839600]
[205.12100220 581.58984375]
[206.50743103 596.54504395]
[206.04550171 611.55725098]
[203.74218750 626.39886475]
[199.63243103 640.84497070]
[193.77853394 654.67651367]
[186.26922607 667.68383789]
[177.21833801 679.66967773]
[166.76310730 690.45245361]
[155.06202698 699.86859131]
[142.29246521 707.77545166]
[128.64801025 714.05303955]
[114.33551025 718.60632324]
[99.57195282 721.36614990]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 186]
[26 185]
[27 184]
[28 183]
[29 182]
[33 181]
[34 180]
[37 178]
[39 176]
[40 175]
[41 174]
[42 173]
[44 170]
[46 168]
[47 167]
[49 165]
[50 164]
[51 163]
[52 162]
[53 161]
[58 156]
[59 155]
[60 144]
[61 143]
[62 142]
[63 141]
[65 140]
[66 139]
[67 138]
[69 137]
[70 136]
[71 135]
[72 132]
[73 131]
[74 130]
[76 129]
[79 127]
[80 126]
[81 125]
[82 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
