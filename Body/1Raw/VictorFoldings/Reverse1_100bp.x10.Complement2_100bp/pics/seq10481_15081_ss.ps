%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[140.59513855 724.16571045]
[130.51957703 713.01831055]
[122.13307190 700.55047607]
[115.60636902 687.01599121]
[111.07233429 672.69036865]
[108.62329102 657.86529541]
[108.30908203 642.84259033]
[110.13610840 627.92803955]
[114.06717682 613.42541504]
[120.02225494 599.62982178]
[127.88011169 586.82220459]
[137.48075867 575.26330566]
[148.62875366 565.18841553]
[161.09712219 556.80267334]
[174.63203430 550.27679443]
[188.95793152 545.74365234]
[186.51220703 530.94439697]
[184.06648254 516.14514160]
[170.57713318 512.90386963]
[159.30644226 504.74032593]
[151.97543335 492.86026001]
[149.71900940 479.04000854]
[152.91044617 465.36083984]
[161.10005188 453.89547729]
[173.07823181 446.39413452]
[170.85311890 431.56008911]
[168.62800598 416.72604370]
[166.40289307 401.89202881]
[164.17776489 387.05798340]
[161.95265198 372.22393799]
[159.72753906 357.38989258]
[156.73275757 342.69186401]
[152.97645569 328.16983032]
[149.22015381 313.64776611]
[145.46385193 299.12570190]
[141.70756531 284.60363770]
[137.84324646 270.10995483]
[133.87115479 255.64543152]
[129.79148865 241.21087646]
[125.60447693 226.80708313]
[121.41746521 212.40330505]
[110.97089386 206.30448914]
[107.36474609 194.33872986]
[113.05443573 182.76330566]
[109.08233643 168.29878235]
[105.44832611 165.19992065]
[103.72242737 159.78527832]
[105.21418762 153.34429932]
[101.67451477 138.76792908]
[98.13484192 124.19155121]
[94.59516907 109.61517334]
[84.68074036 120.87146759]
[69.69198608 120.29083252]
[60.67805099 108.30129242]
[64.28368378 93.74109650]
[77.85093689 87.34346771]
[91.37750244 93.82322693]
[88.93177032 79.02395630]
[86.48604584 64.22468567]
[76.60218811 51.87074280]
[82.16078949 38.05223083]
[72.27693176 25.69828606]
[77.83552551 11.87977505]
[75.38980103 -2.91949558]
[65.50594330 -15.27343941]
[71.06453705 -29.09195137]
[68.61881256 -43.89122009]
[64.13205719 -51.84778214]
[66.24855042 -58.92890167]
[64.02343750 -73.76294708]
[60.77041245 -77.84521484]
[59.53236389 -82.31964111]
[60.12124634 -86.35303497]
[62.04558182 -89.30757141]
[60.48505783 -104.22618103]
[48.49139023 -114.16547394]
[47.12131882 -129.31729126]
[56.67083359 -140.69017029]
[55.11030960 -155.60877991]
[53.54978943 -170.52737427]
[51.98926544 -185.44598389]
[50.42874146 -200.36459351]
[35.41670990 -201.09895325]
[20.69273186 -204.11639404]
[6.60196447 -209.34617615]
[-6.52528763 -216.66572571]
[-18.38130188 -225.90344238]
[-28.68815804 -236.84277344]
[-37.20424652 -249.22731018]
[-43.72993851 -262.76672363]
[-48.11225891 -277.14364624]
[-50.24848938 -292.02102661]
[-50.08854294 -307.05017090]
[-47.63617706 -321.87875366]
[-42.94887543 -336.15911865]
[-36.13651276 -349.55661011]
[-27.35878372 -361.75708008]
[-16.82145119 -372.47460938]
[-4.77152252 -381.45788574]
[8.50853157 -388.49639893]
[22.70740891 -393.42514038]
[37.49226761 -396.12854004]
[52.51653290 -396.54324341]
[67.42800903 -394.65951538]
[81.87714386 -390.52157593]
[95.52524567 -384.22634888]
[108.05237579 -375.92141724]
[119.16487122 -365.80151367]
[128.60224915 -354.10379028]
[136.14328003 -341.10253906]
[141.61119080 -327.10244751]
[144.87782288 -312.43173218]
[145.86657715 -297.43429565]
[144.55427551 -282.46173096]
[140.97169495 -267.86495972]
[135.20281982 -253.98617554]
[127.38286591 -241.15072632]
[117.69515228 -229.65948486]
[106.36676788 -219.78182983]
[93.66327667 -211.74929810]
[79.88245392 -205.75018311]
[65.34734344 -201.92510986]
[66.90786743 -187.00651550]
[68.46839142 -172.08790588]
[70.02891541 -157.16929626]
[71.58943939 -142.25070190]
[83.28575134 -133.10018921]
[85.08086395 -117.99282837]
[75.40366364 -105.78669739]
[76.96418762 -90.86809540]
[78.85747528 -75.98806000]
[81.08259583 -61.15401840]
[83.41808319 -46.33694839]
[85.86380768 -31.53767776]
[95.57273102 -20.24227715]
[90.18907166 -5.36522293]
[92.63479614 9.43404770]
[102.34371948 20.72944832]
[96.96006012 35.60650253]
[106.66898346 46.90190506]
[101.28531647 61.77895737]
[103.73104095 76.57823181]
[106.17677307 91.37750244]
[109.17154694 106.07550812]
[112.71121979 120.65187836]
[116.25089264 135.22825623]
[119.79056549 149.80462646]
[123.54686737 164.32669067]
[127.51895905 178.79121399]
[140.91703796 191.42344666]
[135.82124329 208.21629333]
[140.00825500 222.62007141]
[144.19526672 237.02386475]
[149.59571838 244.39088440]
[148.33567810 251.67332458]
[152.30776978 266.13784790]
[157.59794617 273.58447266]
[156.22961426 280.84735107]
[159.98591614 295.36941528]
[163.74221802 309.89144897]
[167.49851990 324.41351318]
[171.25482178 338.93557739]
[178.79159546 325.96649170]
[192.85829163 320.75802612]
[207.02380371 325.69143677]
[214.81184387 338.51119995]
[212.66183472 353.35632324]
[201.55671692 363.43978882]
[186.57362366 364.15161133]
[174.56158447 355.16476440]
[176.78669739 369.99880981]
[179.01181030 384.83285522]
[181.23693848 399.66690063]
[183.46205139 414.50094604]
[185.68716431 429.33499146]
[187.91227722 444.16903687]
[203.49479675 448.85083008]
[215.43289185 459.82012939]
[221.37089539 474.84347534]
[220.16719055 490.89447021]
[212.11338806 504.76348877]
[198.86575317 513.69940186]
[201.31147766 528.49865723]
[203.75720215 543.29797363]
[218.77986145 542.98095703]
[233.69471741 544.80523682]
[248.19810486 548.73358154]
[261.99478149 554.68609619]
[274.80386353 562.54156494]
[286.36453247 572.14007568]
[296.44149780 583.28619385]
[304.82952881 595.75299072]
[311.35791016 609.28674316]
[315.89370728 623.61175537]
[318.34460449 638.43652344]
[318.66067505 653.45922852]
[316.83547974 668.37396240]
[312.90621948 682.87713623]
[306.95285034 696.67346191]
[299.09658813 709.48199463]
[289.49734497 721.04211426]
[278.35061646 731.11834717]
[265.88327026 739.50561523]
[252.34918213 746.03320312]
[238.02384949 750.56811523]
[223.19891357 753.01806641]
[208.17622375 753.33319092]
[193.26159668 751.50708008]
[178.75868225 747.57690430]
[164.96273804 741.62268066]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 184]
[17 183]
[18 182]
[25 176]
[26 175]
[27 174]
[28 173]
[29 172]
[30 171]
[31 170]
[32 162]
[33 161]
[34 160]
[35 159]
[36 158]
[37 156]
[38 155]
[39 153]
[40 152]
[41 151]
[44 149]
[45 148]
[48 147]
[49 146]
[50 145]
[51 144]
[57 143]
[58 142]
[59 141]
[61 139]
[63 137]
[64 136]
[66 134]
[67 133]
[69 132]
[70 131]
[74 130]
[75 129]
[78 126]
[79 125]
[80 124]
[81 123]
[82 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
