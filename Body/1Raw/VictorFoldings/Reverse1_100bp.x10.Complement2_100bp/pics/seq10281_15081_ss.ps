%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[23.91002274 715.11297607]
[11.15193176 723.18347168]
[-3.31079197 727.51159668]
[-18.40491867 727.77600098]
[-33.01036453 723.95715332]
[-46.04330444 716.33843994]
[-56.53661346 705.48516846]
[-63.71161652 692.20275879]
[-67.03588104 677.47686768]
[-66.26271820 662.40026855]
[-61.44951248 648.09167480]
[-52.95343018 635.61291504]
[-41.40493393 625.89001465]
[-27.66100693 619.64447021]
[-12.74153137 617.33972168]
[-10.95906544 602.44598389]
[-9.17659950 587.55230713]
[-7.39413357 572.65856934]
[-6.05589962 557.71838379]
[-5.16308355 542.74499512]
[-4.27026796 527.77154541]
[-13.13526249 539.87164307]
[-26.33143616 547.00335693]
[-41.31081390 547.78961182]
[-55.18111038 542.07867432]
[-65.26419830 530.97320557]
[-69.61317444 516.61749268]
[-67.38833618 501.78341675]
[-59.01925659 489.33520508]
[-46.12187576 481.67639160]
[-31.18647385 480.28576660]
[-17.09684563 485.43185425]
[-6.57347679 496.12106323]
[-1.64812028 510.29067993]
[1.89155221 495.71429443]
[5.43122482 481.13793945]
[8.97089672 466.56155396]
[12.51056957 451.98516846]
[-1.28067684 444.92346191]
[-12.99280643 434.76654053]
[-21.94518852 422.09915161]
[-27.61625290 407.65209961]
[-29.67387962 392.26000977]
[-27.99483871 376.81329346]
[-22.67217064 362.20639038]
[-14.01003170 349.28622437]
[-2.50632596 338.80291748]
[11.17592144 331.36633301]
[26.24677086 327.41052246]
[41.83498001 327.16854858]
[45.15723801 312.54110718]
[48.47949982 297.91363525]
[51.80175781 283.28616333]
[47.07550812 269.16131592]
[57.67716217 257.41757202]
[60.99942017 242.79010010]
[64.32167816 228.16264343]
[67.64394379 213.53518677]
[70.96620178 198.90773010]
[74.28845978 184.28025818]
[68.20218658 167.82049561]
[80.82461548 154.41319275]
[83.92872620 139.73788452]
[87.03283691 125.06258392]
[90.13694763 110.38728333]
[85.98612213 97.03578949]
[95.18775177 86.50860596]
[88.81916046 75.29237366]
[91.70670319 63.13318634]
[101.77175140 56.42338562]
[105.09400940 41.79592514]
[108.41626740 27.16846466]
[102.21537781 15.85865498]
[105.28363800 3.74380517]
[115.44746399 -2.81539822]
[118.98713684 -17.39177322]
[122.52680969 -31.96814919]
[125.52158356 -46.66615295]
[127.96730804 -61.46542358]
[130.41304016 -76.26469421]
[132.85876465 -91.06396484]
[135.30448914 -105.86323547]
[122.89601898 -114.68317413]
[115.57730103 -127.96185303]
[114.75305176 -143.03967285]
[120.53326416 -156.92312622]
[131.72203064 -166.87907410]
[146.06449890 -170.97283936]
[148.51023865 -185.77210999]
[150.95596313 -200.57138062]
[152.51647949 -215.48997498]
[153.18626404 -230.47502136]
[142.79969788 -242.08351135]
[143.69242859 -257.27093506]
[154.82334900 -267.10137939]
[155.49313354 -282.08642578]
[156.16291809 -297.07147217]
[141.92657471 -302.15261841]
[129.82141113 -311.20556641]
[120.92378998 -323.42538452]
[116.02489471 -337.72546387]
[115.56032562 -352.83425903]
[119.57140350 -367.40829468]
[127.70145416 -380.15167236]
[139.22756958 -389.93124390]
[153.12483215 -395.87744141]
[168.15753174 -397.46151733]
[182.98896790 -394.54260254]
[196.30033875 -387.38027954]
[206.90798950 -376.61138916]
[213.86871338 -363.19351196]
[216.56355286 -348.31973267]
[214.75289917 -333.31262207]
[208.59774780 -319.50662231]
[198.64541626 -308.12936401]
[185.78085327 -300.19244385]
[171.14796448 -296.40167236]
[170.47817993 -281.41665649]
[169.80839539 -266.43161011]
[180.01789856 -255.64729309]
[179.55210876 -240.44078064]
[168.17131042 -229.80523682]
[167.50152588 -214.82019043]
[177.87088013 -225.65885925]
[192.60966492 -228.44596863]
[206.22068787 -222.14199829]
[213.62738037 -209.09819031]
[212.06721497 -194.17955017]
[202.12210083 -182.95036316]
[187.50131226 -179.59883118]
[173.65805054 -185.37501526]
[165.75523376 -198.12565613]
[163.30950928 -183.32638550]
[160.86376953 -168.52711487]
[173.12657166 -160.03656006]
[180.51727295 -147.01016235]
[181.52339172 -132.00520325]
[175.89192200 -117.99425507]
[164.69013977 -107.77627563]
[150.10375977 -103.41751099]
[147.65803528 -88.61824036]
[145.21231079 -73.81896973]
[142.76658630 -59.01969528]
[140.32084656 -44.22042465]
[153.84907532 -50.70018768]
[167.41572571 -44.30128098]
[171.01997375 -29.74073982]
[162.00491333 -17.75205421]
[147.01609802 -17.17283630]
[137.10317993 -28.42847633]
[133.56350708 -13.85210133]
[130.02383423 0.72427434]
[135.86437988 17.27284050]
[123.04373169 30.49072456]
[119.72146606 45.11818314]
[116.39920807 59.74564362]
[122.48548889 76.20542145]
[109.86305237 89.61271667]
[114.01387787 102.96421051]
[104.81224823 113.49139404]
[101.70813751 128.16668701]
[98.60402679 142.84199524]
[95.49992371 157.51730347]
[101.86850739 168.73353577]
[98.98096466 180.89271545]
[88.91591644 187.60252380]
[85.59365845 202.22998047]
[82.27140045 216.85743713]
[78.94914246 231.48490906]
[75.62688446 246.11236572]
[72.30461884 260.73983765]
[76.79324341 275.91094971]
[66.42922211 286.60842896]
[63.10696030 301.23590088]
[59.78469849 315.86334229]
[56.46244049 330.49081421]
[69.53272247 336.86975098]
[80.84537506 345.99819946]
[89.83269501 357.41372681]
[96.04462433 370.53924561]
[99.17130280 384.71224976]
[99.05850220 399.21804810]
[95.71527100 413.32608032]
[89.31325531 426.32644653]
[80.17794800 437.56585693]
[68.77207947 446.48022461]
[55.67222977 452.62322998]
[41.53966141 455.68847656]
[27.08694458 455.52484131]
[23.54727173 470.10122681]
[20.00760078 484.67761230]
[16.46792793 499.25396729]
[12.92825508 513.83032227]
[10.70313835 528.66436768]
[9.81032181 543.63781738]
[8.91750622 558.61120605]
[10.99791431 562.42248535]
[11.68790913 566.30688477]
[11.13524437 569.81829834]
[9.61736584 572.60443115]
[7.49958372 574.44104004]
[5.71711779 589.33477783]
[3.93465185 604.22845459]
[2.15218592 619.12219238]
[16.10643959 624.88250732]
[27.98840332 634.19494629]
[36.91635513 646.36846924]
[42.22778702 660.49969482]
[43.52854538 675.53997803]
[40.72211456 690.37329102]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 204]
[16 203]
[17 202]
[18 201]
[19 196]
[20 195]
[21 194]
[34 193]
[35 192]
[36 191]
[37 190]
[38 189]
[50 176]
[51 175]
[52 174]
[53 173]
[55 171]
[56 170]
[57 169]
[58 168]
[59 167]
[60 166]
[62 163]
[63 162]
[64 161]
[65 160]
[67 158]
[70 156]
[71 155]
[72 154]
[75 152]
[76 151]
[77 150]
[78 144]
[79 143]
[80 142]
[81 141]
[82 140]
[88 134]
[89 133]
[90 132]
[91 123]
[92 122]
[95 119]
[96 118]
[97 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
