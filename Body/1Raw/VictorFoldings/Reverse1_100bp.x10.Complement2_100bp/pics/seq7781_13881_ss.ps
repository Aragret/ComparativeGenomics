%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[19.96351814 589.38574219]
[9.79926109 600.45397949]
[-1.86828434 609.92425537]
[-14.79042435 617.59472656]
[-28.69172287 623.30194092]
[-43.27587509 626.92413330]
[-58.23201370 628.38415527]
[-73.24134827 627.65093994]
[-87.98396301 624.74005127]
[-102.14560699 619.71356201]
[-115.42443085 612.67858887]
[-127.53739166 603.78509521]
[-138.22630310 593.22265625]
[-147.26332092 581.21643066]
[-154.45584106 568.02227783]
[-159.65054321 553.92144775]
[-162.73669434 539.21453857]
[-163.64852905 524.21496582]
[-162.36659241 509.24252319]
[-158.91822815 494.61630249]
[-153.37692261 480.64807129]
[-145.86079407 467.63552856]
[-136.53005981 455.85610962]
[-125.58358765 445.56082153]
[-113.25471497 436.96914673]
[-99.80622864 430.26422119]
[-85.52478790 425.58895874]
[-70.71479034 423.04299927]
[-55.69192505 422.68060303]
[-40.77639771 424.50952148]
[-36.80430222 410.04498291]
[-32.83220673 395.58047485]
[-28.86010933 381.11593628]
[-24.88801384 366.65142822]
[-36.62866592 375.98721313]
[-51.44935226 378.29962158]
[-65.47598267 372.98422241]
[-75.04202271 361.43038940]
[-77.64693451 346.65829468]
[-72.60980225 332.52935791]
[-61.24732590 322.73678589]
[-46.52961731 319.84039307]
[-32.30385971 324.59725952]
[-22.28862762 335.76397705]
[-19.10184097 350.42065430]
[-13.02800655 336.70538330]
[-6.95417213 322.99011230]
[-8.87522602 308.21994019]
[3.78738046 298.73474121]
[1.86632717 283.96453857]
[14.52893353 274.47933960]
[20.60276794 260.76406860]
[18.68171310 245.99386597]
[31.34432030 236.50866699]
[37.41815567 222.79339600]
[43.49198914 209.07812500]
[37.90377808 195.31922913]
[43.86813354 181.32347107]
[58.33762741 175.55532837]
[56.41657639 160.78512573]
[69.07917786 151.29992676]
[75.15301514 137.58467102]
[81.22685242 123.86940002]
[87.30068207 110.15412903]
[85.08428955 93.52693176]
[98.74255371 83.78895569]
[104.50858307 69.94147491]
[110.17137146 56.05144501]
[115.83415985 42.16141891]
[121.49694824 28.27139091]
[127.15972900 14.38136482]
[132.82252502 0.49133766]
[130.86759949 -15.20862579]
[142.83714294 -24.07312393]
[148.39636230 -38.00492096]
[153.85171509 -51.97771835]
[159.09843445 -66.03018951]
[164.13536072 -80.15921783]
[169.17227173 -94.28824615]
[174.20918274 -108.41728210]
[179.24610901 -122.54631042]
[182.89419556 -137.09593201]
[185.11930847 -151.92997742]
[187.34442139 -166.76402283]
[181.73985291 -181.55926514]
[191.27954102 -192.99797058]
[193.50465393 -207.83201599]
[195.72976685 -222.66606140]
[181.31362915 -226.89555359]
[167.60771179 -233.04872131]
[154.86734009 -241.01092529]
[143.32986450 -250.63383484]
[133.21022034 -261.73818970]
[124.69692993 -274.11709595]
[117.94859314 -287.53997803]
[113.09092712 -301.75677490]
[110.21443176 -316.50259399]
[109.37268066 -331.50277710]
[110.58136749 -346.47784424]
[113.81797791 -361.14883423]
[119.02220154 -375.24246216]
[126.09709167 -388.49612427]
[134.91085815 -400.66293335]
[145.29928589 -411.51623535]
[157.06887817 -420.85382080]
[170.00033569 -428.50177002]
[183.85276794 -434.31756592]
[198.36813354 -438.19290161]
[213.27598572 -440.05557251]
[228.29862976 -439.87084961]
[243.15617371 -437.64221191]
[257.57186890 -433.41116333]
[271.27713013 -427.25650024]
[284.01663208 -419.29293823]
[295.55307007 -409.66876221]
[305.67150879 -398.56332397]
[314.18344116 -386.18347168]
[320.93032837 -372.75985718]
[325.78646851 -358.54257202]
[328.66137695 -343.79641724]
[329.50149536 -328.79617310]
[328.29116821 -313.82122803]
[325.05297852 -299.15057373]
[319.84722900 -285.05752563]
[312.77090454 -271.80462646]
[303.95584106 -259.63876343]
[293.56622314 -248.78659058]
[281.79562378 -239.45027161]
[268.86334229 -231.80372620]
[255.01026917 -225.98941040]
[240.49449158 -222.11564636]
[225.58642578 -220.25459290]
[210.56381226 -220.44093323]
[208.33869934 -205.60688782]
[206.11358643 -190.77285767]
[211.87730408 -177.03863525]
[202.17846680 -164.53889465]
[199.95335388 -149.70484924]
[197.72822571 -134.87081909]
[207.38957214 -146.34507751]
[220.84684753 -152.97090149]
[235.83227539 -153.63174438]
[249.82057190 -148.21621704]
[260.45443726 -137.63694763]
[265.94186401 -123.67671967]
[265.35818481 -108.68807983]
[258.80169678 -95.19687653]
[247.37730408 -85.47661591]
[233.01023865 -81.16533661]
[218.12156677 -82.98955536]
[205.22032166 -90.64186096]
[196.48057556 -102.83271790]
[193.37513733 -117.50939178]
[188.33821106 -103.38036346]
[183.30130005 -89.25133514]
[178.26438904 -75.12230682]
[173.22746277 -60.99327469]
[174.42874146 -56.37094116]
[172.73905945 -50.94489288]
[167.82452393 -46.52236176]
[162.36915588 -32.54956436]
[162.86473083 -25.17554283]
[156.72715759 -18.41033745]
[159.08712769 -3.70388150]
[146.71253967 6.15412426]
[141.04975891 20.04415131]
[135.38697815 33.93417740]
[129.72418213 47.82420349]
[124.06140137 61.71423340]
[118.39861298 75.60425568]
[118.78434753 82.98484039]
[112.54673004 89.65792084]
[116.24458313 100.70178986]
[111.60806274 111.38560486]
[101.01595306 116.22796631]
[94.94211578 129.94323730]
[88.86827850 143.65849304]
[82.79444885 157.37376404]
[84.28105927 173.12496948]
[72.05289459 181.62916565]
[77.50629425 196.22019958]
[71.15118408 210.04290771]
[57.20725632 215.15196228]
[51.13341904 228.86723328]
[45.05958557 242.58250427]
[46.54619980 258.33370972]
[34.31803513 266.83789062]
[28.24419975 280.55316162]
[29.73081207 296.30438232]
[17.50264740 304.80856323]
[18.98925972 320.55978394]
[6.76109457 329.06396484]
[0.68726051 342.77923584]
[-5.38657331 356.49450684]
[-10.42348957 370.62353516]
[-14.39558601 385.08804321]
[-18.36768150 399.55258179]
[-22.33977890 414.01708984]
[-26.31187439 428.48162842]
[-12.55413628 434.52664185]
[0.17677742 442.51049805]
[11.60950565 452.26296997]
[21.50035858 463.57617188]
[29.63851357 476.20901489]
[35.85050583 489.89218140]
[40.00392151 504.33401489]
[42.01023865 519.22674561]
[41.82668686 534.25280762]
[39.45717621 549.09210205]
[34.95221710 563.42816162]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 199]
[31 198]
[32 197]
[33 196]
[34 195]
[45 194]
[46 193]
[47 192]
[49 190]
[51 188]
[52 187]
[54 185]
[55 184]
[56 183]
[59 180]
[61 178]
[62 177]
[63 176]
[64 175]
[66 172]
[67 170]
[68 169]
[69 168]
[70 167]
[71 166]
[72 165]
[74 163]
[75 161]
[76 160]
[77 157]
[78 156]
[79 155]
[80 154]
[81 153]
[82 139]
[83 138]
[84 137]
[86 135]
[87 134]
[88 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
