%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[86.31864166 633.07934570]
[78.70861816 620.05865479]
[74.57659149 605.55432129]
[74.18228912 590.47796631]
[77.55050659 575.77746582]
[84.46951294 562.37677002]
[94.50437927 551.11834717]
[107.02429199 542.70983887]
[121.24225616 537.67987061]
[119.90402222 522.73968506]
[118.56578827 507.79953003]
[117.22755432 492.85934448]
[115.88932037 477.91915894]
[103.03289795 470.44583130]
[96.97058868 456.67221069]
[100.21910858 441.79605103]
[111.73741913 431.56692505]
[110.39918518 416.62673950]
[100.84867096 428.19342041]
[86.12098694 431.03863525]
[72.94942474 423.86160278]
[67.35584259 409.94354248]
[71.89756012 395.64764404]
[84.49816132 387.50976562]
[99.39681244 389.25045776]
[109.78282166 400.07559204]
[110.00614929 385.07723999]
[110.22947693 370.07891846]
[110.45280457 355.08056641]
[110.67613220 340.08224487]
[110.89945984 325.08389282]
[96.29127502 315.16055298]
[90.51335144 298.30630493]
[96.05777740 281.20837402]
[110.88410950 270.77105713]
[110.66078186 255.77270508]
[110.43745422 240.77436829]
[110.21412659 225.77603149]
[109.99079895 210.77769470]
[109.76746368 195.77935791]
[108.20694733 180.86076355]
[105.32167053 166.14086914]
[102.43640137 151.42097473]
[92.39547729 140.41964722]
[97.33380890 125.38890076]
[94.44853210 110.66901398]
[91.34442139 95.99370575]
[88.02216339 81.36624908]
[84.69990540 66.73878479]
[81.37764740 52.11132812]
[78.05538177 37.48386765]
[74.73312378 22.85640717]
[71.41086578 8.22894764]
[68.08860779 -6.39851284]
[64.76634979 -21.02597237]
[60.25871658 -35.33266068]
[54.59593201 -49.22268677]
[48.93314362 -63.11271286]
[43.95330048 -67.46158600]
[42.18301392 -72.86186981]
[43.31534195 -77.50157928]
[38.06862640 -91.55405426]
[32.82190704 -105.60652161]
[27.57518959 -119.65899658]
[22.32847023 -133.71147156]
[8.22795296 -140.33061218]
[3.10721755 -154.65655518]
[9.50446320 -168.05845642]
[4.25774479 -182.11093140]
[-0.98897320 -196.16340637]
[-13.06455994 -206.38546753]
[-10.26777458 -221.01513672]
[-15.51449299 -235.06761169]
[-17.04774857 -220.14617920]
[-22.06097794 -206.00872803]
[-30.27065849 -193.45480347]
[-41.21249390 -183.19438171]
[-54.26766586 -175.80773926]
[-68.69784546 -171.71263123]
[-83.68693542 -171.14067078]
[-98.38722992 -174.12417603]
[-111.96736145 -180.49443054]
[-123.65929413 -189.89115906]
[-132.80180359 -201.78294373]
[-138.87783813 -215.49723816]
[-141.54376221 -230.25843811]
[-140.64880371 -245.23171997]
[-136.24357605 -259.57025146]
[-128.57722473 -272.46316528]
[-118.08331299 -283.18127441]
[-105.35532379 -291.11843872]
[-91.11309052 -295.82574463]
[-76.16207123 -297.03695679]
[-61.34782410 -294.68365479]
[-47.50817108 -288.89883423]
[-35.42580414 -280.00973511]
[-25.78404236 -268.51901245]
[-19.12781715 -255.07554626]
[-19.12781715 -270.07556152]
[-19.12781715 -285.07556152]
[-32.46894455 -292.68539429]
[-40.20391464 -305.95437622]
[-40.25205612 -321.31320190]
[-32.60042191 -334.63040161]
[-19.30726242 -342.32376099]
[-3.94837117 -342.32376099]
[9.34478855 -334.63040161]
[16.99642372 -321.31320190]
[16.94828033 -305.95437622]
[9.21331120 -292.68539429]
[-4.12781715 -285.07556152]
[-4.12781715 -270.07556152]
[-4.12781715 -255.07554626]
[-1.46202171 -240.31433105]
[3.78469658 -226.26185608]
[15.48500347 -217.04492188]
[13.06349850 -201.41012573]
[18.31021690 -187.35765076]
[23.55693436 -173.30517578]
[37.17204285 -167.37521362]
[42.69314194 -153.19876099]
[36.38094330 -138.95817566]
[41.62765884 -124.90570831]
[46.87437820 -110.85324097]
[52.12109756 -96.80076599]
[57.36781311 -82.74829865]
[62.82316971 -68.77549744]
[68.48596191 -54.88547516]
[74.14874268 -40.99544525]
[77.30406189 -55.65982437]
[86.84178162 -67.23703766]
[100.63114929 -73.14071655]
[115.59158325 -72.05195618]
[128.38088989 -64.21398926]
[136.14189148 -51.37783813]
[137.14077759 -36.41113663]
[131.15438843 -22.65747643]
[119.52009583 -13.18946552]
[104.83703613 -10.12228012]
[90.38542938 -14.14113712]
[79.39380646 -24.34823227]
[82.71606445 -9.72077274]
[86.03832245 4.90668774]
[89.36058807 19.53414726]
[92.68284607 34.16160965]
[96.00510406 48.78907013]
[99.32736206 63.41652679]
[102.64962006 78.04399109]
[105.97188568 92.67144775]
[109.66220856 96.39910889]
[111.00130463 101.92903900]
[109.16842651 107.78373718]
[112.05369568 122.50363159]
[122.30099487 134.55781555]
[117.15628815 148.53570557]
[120.04156494 163.25559998]
[122.92683411 177.97547913]
[128.47926331 164.04096985]
[139.46905518 153.83193970]
[153.77424622 149.31956482]
[168.63273621 151.37513733]
[181.17556763 159.60174561]
[188.98094177 172.41096497]
[190.54174805 187.32954407]
[185.55661011 201.47692871]
[174.98809814 212.12149048]
[160.87681580 217.20791626]
[145.94743347 215.75410461]
[133.08258057 208.04077148]
[124.76580811 195.55603027]
[124.98913574 210.55436707]
[125.21246338 225.55270386]
[125.43579102 240.55104065]
[125.65911865 255.54937744]
[125.88244629 270.54772949]
[136.96347046 276.33380127]
[144.48931885 286.22470093]
[147.08059692 298.30630493]
[144.30558777 310.27291870]
[136.75067139 319.86752319]
[125.89779663 325.30722046]
[125.67446899 340.30557251]
[125.45114136 355.30389404]
[125.22781372 370.30224609]
[125.00448608 385.30056763]
[124.78115845 400.29891968]
[125.33937073 415.28851318]
[126.67760468 430.22869873]
[139.83047485 438.24795532]
[145.67106628 452.30999756]
[142.15310669 466.94174194]
[130.82949829 476.58090210]
[132.16773987 491.52108765]
[133.50596619 506.46127319]
[134.84420776 521.40148926]
[136.18243408 536.34167480]
[151.06799316 538.76470947]
[164.88294983 544.81433105]
[176.75891113 554.11016846]
[185.94934082 566.06787109]
[191.87652588 579.93579102]
[194.16786194 594.84216309]
[192.67932129 609.84997559]
[187.50447083 624.01586914]
[178.96861267 636.44927979]
[167.60832214 646.36871338]
[154.13771057 653.15051270]
[139.40354919 656.36853027]
[124.33204651 655.82031250]
[109.87060547 651.54040527]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 196]
[10 195]
[11 194]
[12 193]
[13 192]
[17 188]
[18 187]
[26 186]
[27 185]
[28 184]
[29 183]
[30 182]
[31 181]
[35 175]
[36 174]
[37 173]
[38 172]
[39 171]
[40 170]
[41 157]
[42 156]
[43 155]
[45 153]
[46 152]
[47 149]
[48 148]
[49 147]
[50 146]
[51 145]
[52 144]
[53 143]
[54 142]
[55 141]
[56 129]
[57 128]
[58 127]
[61 126]
[62 125]
[63 124]
[64 123]
[65 122]
[68 119]
[69 118]
[70 117]
[72 115]
[73 114]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
