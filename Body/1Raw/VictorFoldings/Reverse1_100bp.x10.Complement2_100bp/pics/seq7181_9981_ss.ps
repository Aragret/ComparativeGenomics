%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[47.74151611 322.33184814]
[42.59996796 336.42926025]
[36.51843643 350.14743042]
[29.52466202 363.42373657]
[21.65056038 376.19760132]
[12.93206024 388.41073608]
[3.40894103 400.00741577]
[-6.87534475 410.93472290]
[-17.87387085 421.14285278]
[-29.53645515 430.58514404]
[-41.80988312 439.21856689]
[-54.63815308 447.00369263]
[-67.96273041 453.90505981]
[-81.72281647 459.89111328]
[-95.85563660 464.93457031]
[-110.29669189 469.01242065]
[-124.98009491 472.10604858]
[-139.83885193 474.20132446]
[-154.80516052 475.28872681]
[-169.81074524 475.36325073]
[-184.78712463 474.42459106]
[-199.66596985 472.47702026]
[-214.37937927 469.52941895]
[-228.86022949 465.59524536]
[-243.04246521 460.69244385]
[-256.86132812 454.84338379]
[-270.25381470 448.07473755]
[-283.15878296 440.41744995]
[-295.51739502 431.90637207]
[-307.27319336 422.58041382]
[-318.37258911 412.48205566]
[-328.76492310 401.65744019]
[-338.40280151 390.15594482]
[-347.24218750 378.03002930]
[-355.24279785 365.33502197]
[-362.36813354 352.12884521]
[-368.58563232 338.47180176]
[-373.86700439 324.42614746]
[-378.18804932 310.05599976]
[-381.52914429 295.42691040]
[-383.87500000 280.60565186]
[-385.21493530 265.65982056]
[-385.54278564 250.65763855]
[-384.85711670 235.66754150]
[-383.16101074 220.75794983]
[-380.46224976 205.99685669]
[-376.77310181 191.45164490]
[-372.11044312 177.18867493]
[-366.49551392 163.27301025]
[-359.95394897 149.76817322]
[-352.51559448 136.73574829]
[-344.21441650 124.23522949]
[-335.08822632 112.32363892]
[-325.17874146 101.05533600]
[-314.53112793 90.48172760]
[-303.19396973 80.65106201]
[-291.21899414 71.60820007]
[-278.66088867 63.39439392]
[-265.57690430 56.04712677]
[-252.02676392 49.59992218]
[-238.07226562 44.08219528]
[-223.77711487 39.51912689]
[-209.20652771 35.93153381]
[-194.42698669 33.33578873]
[-179.50592041 31.74372864]
[-164.51141357 31.16262436]
[-149.51187134 31.59512711]
[-134.57575989 33.03926086]
[-119.77122498 35.48843384]
[-105.16580200 38.93148041]
[-90.82613373 43.35268021]
[-76.81766510 48.73186493]
[-63.20429993 55.04449081]
[-50.04815674 62.26175308]
[-37.40926743 70.35072327]
[-25.34529877 79.27449036]
[-13.91129589 88.99233246]
[-3.15943122 99.45992279]
[6.86123705 110.62948608]
[16.10498619 122.45005798]
[24.52964020 134.86772156]
[37.48263931 127.30333710]
[50.43563843 119.73896027]
[63.38863754 112.17457581]
[67.57940674 106.08694458]
[76.59127808 104.59564972]
[89.65546417 97.22496033]
[101.61779785 88.17495728]
[112.26380920 77.60791016]
[122.90982056 67.04086304]
[125.01028442 60.77192688]
[129.31513977 57.06177902]
[134.03363037 56.32358932]
[144.98953247 46.07820129]
[155.94544983 35.83280945]
[166.90135193 25.58741570]
[177.85726929 15.34202480]
[188.81317139 5.09663296]
[179.56971741 -6.72944403]
[171.40763855 -19.32618713]
[164.39079285 -32.59500885]
[158.57412720 -46.43206406]
[154.00315857 -60.72904968]
[150.71365356 -75.37407684]
[148.73136902 -90.25252533]
[148.07180786 -105.24794006]
[148.74012756 -120.24297333]
[150.73112488 -135.12025452]
[154.02919006 -149.76335144]
[158.60852051 -164.05766296]
[164.43327332 -177.89132690]
[171.45785522 -191.15603638]
[179.62730408 -203.74800110]
[188.87768555 -215.56867981]
[199.13656616 -226.52554321]
[210.32369995 -236.53282166]
[222.35150146 -245.51222229]
[235.12583923 -253.39346313]
[248.54673767 -260.11483765]
[262.50915527 -265.62377930]
[276.90383911 -269.87713623]
[291.61810303 -272.84164429]
[306.53677368 -274.49407959]
[321.54312134 -274.82153320]
[336.51968384 -273.82141113]
[351.34924316 -271.50158691]
[365.91574097 -267.88018799]
[380.10519409 -262.98553467]
[393.80651855 -256.85598755]
[406.91247559 -249.53945923]
[419.32049561 -241.09326172]
[430.93350220 -231.58349609]
[441.66058350 -221.08456421]
[451.41775513 -209.67864990]
[460.12872314 -197.45501709]
[467.72521973 -184.50933838]
[474.14785767 -170.94293213]
[479.34637451 -156.86198425]
[483.28002930 -142.37667847]
[485.91809082 -127.60040283]
[487.23986816 -112.64880371]
[487.23504639 -97.63888550]
[485.90362549 -82.68813324]
[483.25607300 -67.91355133]
[479.31311035 -53.43078995]
[474.10556030 -39.35317993]
[467.67419434 -25.79090881]
[460.06933594 -12.85012150]
[451.35055542 -0.63209647]
[441.58602905 10.76753998]
[430.85220337 21.25956917]
[419.23309326 30.76187706]
[406.81961060 39.20008850]
[393.70895386 46.50817108]
[380.00369263 52.62891769]
[365.81112671 57.51443100]
[351.24227905 61.12646866]
[336.41122437 63.43676758]
[321.43402100 64.42724609]
[306.42788696 64.09014893]
[291.51028442 62.42811203]
[276.79794312 59.45414734]
[262.40600586 55.19153214]
[248.44712830 49.67362213]
[235.03054810 42.94360733]
[222.26127625 35.05416107]
[210.23925781 26.06702614]
[199.05856323 16.05254173]
[188.10266113 26.29793358]
[177.14674377 36.54332733]
[166.19084167 46.78871918]
[155.23492432 57.03410721]
[144.27902222 67.27950287]
[133.47686768 77.68687439]
[122.83085632 88.25392151]
[112.18484497 98.82096863]
[126.53334045 94.44824982]
[141.53184509 94.66062927]
[155.75077820 99.43785095]
[167.83488464 108.32459259]
[176.63240051 120.47382355]
[181.30479431 134.72755432]
[181.40672302 149.72720337]
[176.92846680 164.04310608]
[168.29687500 176.31077576]
[156.33464050 185.36091614]
[142.18194580 190.33093262]
[127.18771362 190.74711609]
[112.78112030 186.56979370]
[100.33529663 178.19712830]
[91.03650665 166.42713928]
[85.77104950 152.38168335]
[85.04079437 137.39947510]
[88.91534424 122.90850830]
[97.02615356 110.28914642]
[83.96196747 117.65983582]
[70.95301819 125.12757874]
[58.00001526 132.69195557]
[45.04701614 140.25633240]
[32.09402084 147.82070923]
[38.76942062 161.25990295]
[44.52231598 175.11909485]
[49.32645035 189.33505249]
[53.15990448 203.84289551]
[56.00518799 218.57643127]
[57.84931946 233.46846008]
[58.68388367 248.45098877]
[58.50506973 263.45568848]
[57.31369781 278.41409302]
[55.11520386 293.25793457]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[81 200]
[82 199]
[83 198]
[84 197]
[86 196]
[87 195]
[88 176]
[89 175]
[90 174]
[93 173]
[94 172]
[95 171]
[96 170]
[97 169]
[98 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
