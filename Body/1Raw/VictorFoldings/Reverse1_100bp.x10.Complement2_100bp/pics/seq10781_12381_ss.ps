%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[89.06384277 486.10855103]
[80.13156128 498.94396973]
[65.02513123 502.98501587]
[50.87735748 496.32357788]
[44.36837769 482.10504150]
[48.57153702 467.04290771]
[61.50222778 458.24911499]
[62.84046173 443.30892944]
[64.17869568 428.36874390]
[65.51692963 413.42855835]
[55.95272446 404.79400635]
[53.06491470 392.03692627]
[58.12632751 379.76531982]
[69.49629974 372.54464722]
[71.05682373 357.62603760]
[72.61734772 342.70742798]
[70.69300842 339.75289917]
[70.10412598 335.71948242]
[71.34217834 331.24505615]
[74.59519958 327.16278076]
[76.82032013 312.32876587]
[79.04543304 297.49472046]
[81.27055359 282.66067505]
[83.49566650 267.82662964]
[85.72078705 252.99256897]
[83.65282440 248.68762207]
[84.26725006 243.03788757]
[88.23934174 237.75262451]
[90.90513611 222.99140930]
[93.57093048 208.23019409]
[96.23672485 193.46897888]
[90.88448334 179.56922913]
[100.95117188 167.36381531]
[101.06284332 152.36422729]
[98.61711121 137.56495667]
[96.17138672 122.76569366]
[93.72566223 107.96642303]
[89.40879822 101.15927124]
[91.35540009 92.92874146]
[89.13027954 78.09469604]
[86.90516663 63.26065445]
[84.56967926 48.44358826]
[82.12395477 33.64431763]
[72.24009705 21.29037094]
[77.79869080 7.47186041]
[75.35296631 -7.32741070]
[72.90723419 -22.12668228]
[67.70886230 -8.05625343]
[57.83344269 3.23427629]
[44.58025742 10.25944519]
[29.69298553 12.09497166]
[15.13030720 8.49936008]
[2.80819416 -0.05432520]
[-5.65216875 -12.44069958]
[-9.13767529 -27.03012085]
[-7.18974686 -41.90310287]
[-0.06466735 -55.10284805]
[11.30013657 -64.89270020]
[25.40942955 -69.98464203]
[40.40689087 -69.70873260]
[54.31935120 -64.10128021]
[65.31637573 -53.90003586]
[71.95178223 -40.44486237]
[72.84459686 -55.41826630]
[73.73741150 -70.39167023]
[74.63022614 -85.36508179]
[75.52304077 -100.33848572]
[76.41585541 -115.31188965]
[77.30867767 -130.28529358]
[62.85874939 -134.52859497]
[49.72178268 -141.87763977]
[38.55505371 -151.96104431]
[29.91644859 -164.27072144]
[24.23658180 -178.18745422]
[21.79733658 -193.01206970]
[22.71787453 -208.00054932]
[26.94881630 -222.40138245]
[34.27488708 -235.49325562]
[44.32585526 -246.62112427]
[56.59526062 -255.22906494]
[70.46590424 -260.88800049]
[85.24092865 -263.31707764]
[86.13374329 -278.29049683]
[83.52067566 -287.04318237]
[87.15296173 -293.47967529]
[88.26860809 -308.43814087]
[89.38425446 -323.39657593]
[90.49990845 -338.35504150]
[91.61555481 -353.31347656]
[92.73120117 -368.27194214]
[93.84685516 -383.23040771]
[94.96250153 -398.18884277]
[80.43955231 -402.12338257]
[66.92378998 -408.73553467]
[54.90379715 -417.78631592]
[44.81409073 -428.94848633]
[37.01940155 -441.81857300]
[31.80150414 -455.93133545]
[29.34902573 -470.77661133]
[29.75062180 -485.81771851]
[32.99177170 -500.51095581]
[38.95531464 -514.32519531]
[47.42566681 -526.76098633]
[58.09663010 -537.36889648]
[70.58246613 -545.76531982]
[84.43180084 -551.64685059]
[99.14401245 -554.80084229]
[114.18724823 -555.11322021]
[129.01770020 -552.57275391]
[143.09927368 -547.27124023]
[155.92292786 -539.40039062]
[167.02507019 -529.24462891]
[176.00439453 -517.17120361]
[182.53628540 -503.61645508]
[186.38462830 -489.07043457]
[187.41030884 -474.05895996]
[185.57624817 -459.12469482]
[180.94874573 -444.80746460]
[173.69506836 -431.62487793]
[164.07745361 -420.05343628]
[152.44355774 -410.51147461]
[139.21395874 -403.34390259]
[124.86687469 -398.80984497]
[109.92095184 -397.07321167]
[108.80530548 -382.11474609]
[107.68965912 -367.15628052]
[106.57400513 -352.19784546]
[105.45835876 -337.23937988]
[104.34271240 -322.28094482]
[103.22705841 -307.32247925]
[102.11141205 -292.36401367]
[101.10715485 -277.39767456]
[100.21434021 -262.42428589]
[114.59602356 -258.25665283]
[127.69593048 -250.98956299]
[138.85551453 -240.98461914]
[147.51292419 -228.74124146]
[153.23136902 -214.87156677]
[155.72106934 -200.06999207]
[154.85397339 -185.07832336]
[150.67039490 -170.64860535]
[143.37702942 -157.50543213]
[133.33686829 -146.30950928]
[121.05103302 -137.62451172]
[107.13385773 -131.88861084]
[92.28208160 -129.39248657]
[91.38926697 -114.41907501]
[90.49644470 -99.44567108]
[89.60363007 -84.47226715]
[88.71081543 -69.49885559]
[87.81800079 -54.52545166]
[86.92518616 -39.55204773]
[87.70650482 -24.57240868]
[90.15223694 -9.77313805]
[92.59796143 5.02613306]
[102.30688477 16.32153320]
[96.92322540 31.19858932]
[99.36894989 45.99785995]
[103.56098175 52.08461761]
[101.73921204 61.03553772]
[103.96432495 75.86958313]
[106.18944550 90.70362854]
[108.52493286 105.52069092]
[110.97065735 120.31996155]
[113.41638184 135.11923218]
[115.86211395 149.91850281]
[120.26554871 135.57940674]
[128.05300903 122.75928497]
[138.74826050 112.24208832]
[151.69731140 104.67095184]
[166.10832214 100.50885773]
[181.10002136 100.01030731]
[195.75570679 103.20580292]
[209.17913818 109.89992523]
[220.54949951 119.68333435]
[229.17146301 131.95776367]
[234.51780701 145.97264099]
[236.26159668 160.87094116]
[234.29618835 175.74162292]
[228.74179077 189.67533875]
[219.93803406 201.82005310]
[208.42327881 211.43309021]
[194.90167236 217.92662048]
[180.20004272 220.90356445]
[165.21742249 220.18188477]
[150.86997986 215.80569458]
[138.03507996 208.04261780]
[127.49758911 197.36735535]
[119.90186310 184.43270874]
[115.71239471 170.02961731]
[120.87396240 184.98516846]
[110.99794006 196.13476562]
[108.33214569 210.89598083]
[105.66635132 225.65721130]
[103.00055695 240.41842651]
[100.55483246 255.21769714]
[98.32971191 270.05172729]
[96.10459137 284.88577271]
[93.87947845 299.71981812]
[91.65435791 314.55386353]
[89.42924500 329.38790894]
[87.53594971 344.26794434]
[85.97542572 359.18655396]
[84.41490173 374.10516357]
[95.67761230 387.49063110]
[93.81161499 404.54446411]
[80.45711517 414.76678467]
[79.11888123 429.70697021]
[77.78064728 444.64715576]
[76.44241333 459.58734131]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 210]
[8 209]
[9 208]
[10 207]
[14 204]
[15 203]
[16 202]
[20 201]
[21 200]
[22 199]
[23 198]
[24 197]
[25 196]
[28 195]
[29 194]
[30 193]
[31 192]
[33 190]
[34 166]
[35 165]
[36 164]
[37 163]
[39 162]
[40 161]
[41 160]
[42 158]
[43 157]
[45 155]
[46 154]
[47 153]
[63 152]
[64 151]
[65 150]
[66 149]
[67 148]
[68 147]
[69 146]
[82 133]
[83 132]
[85 131]
[86 130]
[87 129]
[88 128]
[89 127]
[90 126]
[91 125]
[92 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
