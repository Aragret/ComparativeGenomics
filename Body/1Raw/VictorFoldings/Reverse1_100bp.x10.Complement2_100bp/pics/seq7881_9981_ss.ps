%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[94.49128723 538.70825195]
[84.29461670 527.69781494]
[74.92887115 515.97241211]
[66.44400787 503.59460449]
[58.88530731 490.63049316]
[52.29309845 477.14920044]
[46.70254898 463.22265625]
[42.14348984 448.92520142]
[38.64024734 434.33309937]
[36.21151352 419.52420044]
[34.87024307 404.57751465]
[34.62359619 389.57278442]
[35.47288895 374.59008789]
[37.41358566 359.70935059]
[40.43533325 345.00997925]
[44.52201080 330.57040405]
[49.65181351 316.46765137]
[55.79737091 302.77697754]
[62.92589569 289.57144165]
[70.99935150 276.92147827]
[79.97466278 264.89456177]
[89.80393982 253.55491638]
[100.43473816 242.96301270]
[111.81034088 233.17536926]
[123.87005615 224.24420166]
[136.54953003 216.21717834]
[129.47242737 202.99165344]
[122.39532471 189.76611328]
[115.31822205 176.54058838]
[108.24111176 163.31506348]
[101.16400909 150.08953857]
[101.66938782 165.08102417]
[98.98394775 179.83868408]
[93.22985840 193.69113159]
[84.66889954 206.00819397]
[73.69052124 216.22950745]
[60.79418564 223.89007568]
[46.56657410 228.64140320]
[31.65495491 230.26733398]
[16.73770714 228.69389343]
[2.49346638 223.99266052]
[-10.42975140 216.37750244]
[-21.44402504 206.19488525]
[-30.04827690 193.90803528]
[-35.85107422 180.07591248]
[-38.58842850 165.32778931]
[-38.13580322 150.33462524]
[-34.51379395 135.77848816]
[-27.88717842 122.32160187]
[-18.55742264 110.57614899]
[-6.94896698 101.07647705]
[6.41008043 94.25475311]
[20.91197205 90.42133331]
[35.89696884 89.75059509]
[50.68335342 92.27306366]
[64.59844208 97.87398529]
[77.00919342 106.29854584]
[87.35099792 117.16349030]
[95.15522766 129.97845459]
[93.81699371 115.03826904]
[85.34600830 107.04553986]
[84.39334106 95.43805695]
[91.44776917 86.17110443]
[90.33211517 71.21265411]
[89.21646881 56.25419617]
[88.10082245 41.29574585]
[84.70013428 35.62592316]
[84.67681122 29.94292259]
[87.18141937 25.87647438]
[86.51163483 10.89143562]
[85.84185028 -4.09360266]
[70.84877777 -4.83002234]
[55.99055099 -6.96719503]
[41.39773941 -10.48633862]
[27.19859314 -15.35652637]
[13.51789761 -21.53495789]
[0.47587919 -28.96733665]
[-11.81284428 -37.58834076]
[-23.24027634 -47.32221603]
[-33.70598984 -58.08340836]
[-43.11801147 -69.77735138]
[-51.39362717 -82.30127716]
[-58.46010590 -95.54512024]
[-64.25534058 -109.39248657]
[-68.72841644 -123.72169495]
[-71.84001160 -138.40679932]
[-73.56278229 -153.31875610]
[-73.88159180 -168.32652283]
[-72.79363251 -183.29818726]
[-70.30847168 -198.10218811]
[-66.44794464 -212.60842896]
[-61.24597931 -226.68940735]
[-54.74829483 -240.22138977]
[-47.01199341 -253.08544922]
[-38.10506439 -265.16854858]
[-28.10578156 -276.36447144]
[-17.10202026 -286.57485962]
[-5.19048738 -295.70993042]
[7.52413797 -303.68945312]
[20.93011665 -310.44329834]
[34.90963364 -315.91207886]
[49.33983231 -320.04772949]
[64.09390259 -322.81396484]
[79.04217529 -324.18643188]
[94.05328369 -324.15304565]
[108.99530029 -322.71414185]
[123.73692322 -319.88238525]
[138.14860535 -315.68258667]
[152.10366821 -310.15170288]
[165.47949219 -303.33834839]
[178.15850830 -295.30239868]
[190.02932739 -286.11444092]
[200.98757935 -275.85525513]
[210.93699646 -264.61499023]
[219.79011536 -252.49241638]
[227.46916199 -239.59408569]
[233.90661621 -226.03335571]
[239.04592896 -211.92938232]
[242.84193420 -197.40612793]
[245.26126099 -182.59123230]
[246.28265381 -167.61486816]
[245.89712524 -152.60867310]
[244.10807800 -137.70452881]
[240.93124390 -123.03339386]
[236.39451599 -108.72421265]
[230.53776550 -94.90274048]
[223.41249084 -81.69044495]
[215.08128357 -69.20343018]
[205.61735535 -57.55144882]
[195.10391235 -46.83688354]
[183.63331604 -37.15391159]
[171.30639648 -28.58761787]
[158.23146057 -21.21329308]
[144.52343750 -15.09574032]
[130.30278015 -10.28872299]
[115.69447327 -6.83448696]
[100.82688904 -4.76338816]
[101.49667358 10.22165108]
[102.16645813 25.20668983]
[103.05927277 40.18009567]
[104.17491913 55.13854980]
[105.29057312 70.09700012]
[106.40621948 85.05545807]
[116.20524597 98.66998291]
[108.75717926 113.70003510]
[110.09541321 128.64021301]
[114.38953400 143.01243591]
[121.46664429 156.23796082]
[128.54374695 169.46348572]
[135.62084961 182.68901062]
[142.69795227 195.91453552]
[149.77505493 209.14007568]
[163.48797607 203.04428101]
[177.60925293 197.96574402]
[192.06358337 193.93154907]
[206.77383423 190.96321106]
[221.66151428 189.07658386]
[236.64720154 188.28173828]
[251.65092468 188.58288574]
[266.59265137 189.97843933]
[281.39260864 192.46095276]
[295.97192383 196.01718140]
[310.25271606 200.62814331]
[324.15884399 206.26924133]
[337.61608887 212.91038513]
[350.55267334 220.51612854]
[362.89956665 229.04589844]
[374.59085083 238.45417786]
[385.56420898 248.69078064]
[395.76104736 259.70108032]
[405.12701416 271.42633057]
[413.61206055 283.80398560]
[421.17098999 296.76797485]
[427.76342773 310.24914551]
[433.35418701 324.17559814]
[437.91348267 338.47299194]
[441.41696167 353.06503296]
[443.84594727 367.87390137]
[445.18746948 382.82055664]
[445.43435669 397.82528687]
[444.58529663 412.80798340]
[442.64486694 427.68875122]
[439.62335205 442.38815308]
[435.53689575 456.82781982]
[430.40734863 470.93063354]
[424.26199341 484.62142944]
[417.13369751 497.82708740]
[409.06045532 510.47717285]
[400.08532715 522.50421143]
[390.25625610 533.84405518]
[379.62561035 544.43609619]
[368.25018311 554.22393799]
[356.19061279 563.15533447]
[343.51126099 571.18255615]
[330.27978516 578.26281738]
[316.56677246 584.35839844]
[302.44540405 589.43670654]
[287.99099731 593.47064209]
[273.28070068 596.43878174]
[258.39300537 598.32513428]
[243.40730286 599.11975098]
[228.40359497 598.81835938]
[213.46189880 597.42254639]
[198.66195679 594.93981934]
[184.08271790 591.38336182]
[169.80200195 586.77215576]
[155.89596558 581.13079834]
[142.43881226 574.48944092]
[129.50236511 566.88348389]
[117.15562439 558.35351562]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 152]
[27 151]
[28 150]
[29 149]
[30 148]
[31 147]
[59 146]
[60 145]
[63 143]
[64 142]
[65 141]
[66 140]
[69 139]
[70 138]
[71 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
