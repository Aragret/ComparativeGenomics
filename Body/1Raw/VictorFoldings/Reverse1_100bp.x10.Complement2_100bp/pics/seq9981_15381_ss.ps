%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[127.64276123 462.00610352]
[126.22121429 447.06054688]
[126.31900787 432.04782104]
[127.93512726 417.12203979]
[131.05299377 402.43634033]
[135.64060974 388.14141846]
[141.65090942 374.38397217]
[149.02220154 361.30517578]
[157.67884827 349.03921509]
[167.53202820 337.71200562]
[178.48062134 327.43972778]
[190.41227722 318.32785034]
[182.56053162 305.54699707]
[174.70877075 292.76617432]
[166.85702515 279.98532104]
[166.13493347 294.96792603]
[158.61248779 307.94534302]
[145.97024536 316.01834106]
[131.03248596 317.38342285]
[117.13635254 311.73562622]
[107.38629150 300.33666992]
[103.96047211 285.73312378]
[107.62423706 271.18743896]
[117.55909729 259.94915771]
[131.54557800 254.52897644]
[146.45906067 256.13775635]
[158.96783447 264.41607666]
[153.30505371 250.52606201]
[147.64227295 236.63603210]
[141.97947693 222.74600220]
[136.31669617 208.85597229]
[121.89430237 198.85789490]
[124.55142212 180.63644409]
[118.68246460 166.83227539]
[112.81349945 153.02809143]
[108.79805756 150.44250488]
[106.36422729 145.30699158]
[106.98209381 138.72445679]
[101.52673340 124.75166321]
[96.07138062 110.77886200]
[92.23287964 125.27941132]
[81.72869110 135.98745728]
[67.30458832 140.10392761]
[52.73100281 136.55279541]
[41.81742477 126.26232147]
[37.41664505 111.92240906]
[40.67901230 97.28147125]
[50.75175476 86.16662598]
[65.00187683 81.48325348]
[79.70443726 84.45558167]
[91.01571655 94.30592346]
[87.69345856 79.67845917]
[84.37120056 65.05100250]
[68.52684021 60.32360840]
[57.29289246 48.31969833]
[53.66635513 32.38027954]
[58.54471588 16.87681389]
[70.50615692 6.01235962]
[66.96648407 -8.56401539]
[63.42681503 -23.14039040]
[59.88714218 -37.71676636]
[56.34746933 -52.29314041]
[52.80779648 -66.86951447]
[48.62078476 -81.27330017]
[43.79478836 -95.47575378]
[38.96879196 -109.67820740]
[27.20290565 -120.25528717]
[30.43403244 -134.79519653]
[25.60803413 -148.99765015]
[20.78203583 -163.20011902]
[6.06727028 -160.18699646]
[-8.90911293 -159.04193115]
[-23.91091537 -159.78297424]
[-38.70153809 -162.39846802]
[-53.04770660 -166.84713745]
[-66.72316742 -173.05882263]
[-79.51223755 -180.93556213]
[-91.21320343 -190.35311890]
[-101.64154816 -201.16297913]
[-110.63277435 -213.19464111]
[-118.04509735 -226.25836182]
[-123.76161194 -240.14810181]
[-127.69214630 -254.64479065]
[-129.77471924 -269.51980591]
[-129.97650146 -284.53854370]
[-128.29428101 -299.46414185]
[-124.75460052 -314.06118774]
[-119.41329956 -328.09948730]
[-112.35459900 -341.35760498]
[-103.68983459 -353.62649536]
[-93.55566406 -364.71258545]
[-82.11190796 -374.44110107]
[-69.53906250 -382.65856934]
[-56.03541183 -389.23538208]
[-41.81393051 -394.06784058]
[-27.09891129 -397.07974243]
[-12.12243080 -398.22354126]
[2.87930918 -397.48120117]
[17.66971016 -394.86447144]
[32.01550674 -390.41461182]
[45.69044113 -384.20178223]
[58.47884750 -376.32394409]
[70.17902374 -366.90542603]
[80.60645294 -356.09466553]
[89.59667206 -344.06225586]
[97.00789642 -330.99792480]
[102.72323608 -317.10769653]
[106.65255737 -302.61068726]
[108.73387909 -287.73547363]
[108.93438721 -272.71673584]
[107.25091553 -257.79125977]
[103.71001434 -243.19451904]
[98.36752319 -229.15667725]
[91.30770874 -215.89913940]
[82.64191437 -203.63099670]
[72.50680542 -192.54574585]
[61.06223679 -182.81820679]
[48.48869705 -174.60180664]
[34.98449326 -168.02610779]
[39.81048965 -153.82365417]
[44.63648605 -139.62120056]
[56.05718231 -130.05998230]
[53.17124557 -114.50421143]
[57.99724197 -100.30175018]
[62.82324219 -86.09929657]
[70.40765381 -99.04057312]
[84.88607025 -102.96171570]
[97.96460724 -95.61651611]
[102.15126801 -81.21263123]
[95.04776001 -68.00126648]
[80.72328186 -63.55049133]
[67.38417053 -70.40918732]
[70.92384338 -55.83281326]
[74.46351624 -41.25643921]
[78.00318909 -26.68006325]
[81.54286194 -12.10368824]
[85.08253479 2.47268748]
[98.41225433 5.44516039]
[109.21269226 13.91152477]
[115.34093475 26.26441002]
[115.54997253 40.11845398]
[109.74200439 52.77087402]
[98.99865723 61.72874069]
[102.32092285 76.35620117]
[105.64318085 90.98365784]
[110.04417419 105.32350922]
[115.49953461 119.29630280]
[120.95489502 133.26910400]
[126.61767578 147.15913391]
[132.48663330 160.96330261]
[138.35560608 174.76748657]
[150.00352478 180.30723572]
[154.60760498 191.92558289]
[150.20672607 203.19319153]
[155.86950684 217.08322144]
[161.53230286 230.97323608]
[167.19508362 244.86326599]
[172.85786438 258.75329590]
[179.63786316 272.13357544]
[187.48960876 284.91439819]
[195.34136963 297.69525146]
[203.19313049 310.47610474]
[216.71420288 303.95141602]
[230.82600403 298.82812500]
[245.38371277 295.15878296]
[260.23797607 292.98110962]
[275.23632812 292.31738281]
[290.22485352 293.17446899]
[305.04977417 295.54351807]
[319.55899048 299.40023804]
[333.60354614 304.70507812]
[347.03933716 311.40359497]
[359.72854614 319.42703247]
[371.54089355 328.69305420]
[382.35519409 339.10659790]
[392.06048584 350.56079102]
[400.55715942 362.93807983]
[407.75802612 376.11148071]
[413.58920288 389.94580078]
[417.99084473 404.29910278]
[420.91778564 419.02404785]
[422.33996582 433.96954346]
[422.24282837 448.98226929]
[420.62738037 463.90811157]
[417.51016235 478.59396362]
[412.92315674 492.88909912]
[406.91348267 506.64678955]
[399.54275513 519.72595215]
[390.88665771 531.99224854]
[381.03396606 543.31988525]
[370.08581543 553.59265137]
[358.15457153 562.70507812]
[345.36264038 570.56365967]
[331.84127808 577.08770752]
[317.72924805 582.21038818]
[303.17135620 585.87908936]
[288.31701660 588.05609131]
[273.31863403 588.71917725]
[258.33013916 587.86145020]
[243.50531006 585.49176025]
[228.99629211 581.63433838]
[214.95196533 576.32891846]
[201.51644897 569.62982178]
[188.82760620 561.60583496]
[177.01565552 552.33923340]
[166.20181274 541.92523193]
[156.49703979 530.47064209]
[148.00090027 518.09295654]
[140.80061340 504.91921997]
[134.97006226 491.08465576]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 162]
[13 161]
[14 160]
[15 159]
[27 158]
[28 157]
[29 156]
[30 155]
[31 154]
[33 151]
[34 150]
[35 149]
[38 148]
[39 147]
[40 146]
[51 145]
[52 144]
[53 143]
[58 137]
[59 136]
[60 135]
[61 134]
[62 133]
[63 132]
[64 125]
[65 124]
[66 123]
[68 121]
[69 120]
[70 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
