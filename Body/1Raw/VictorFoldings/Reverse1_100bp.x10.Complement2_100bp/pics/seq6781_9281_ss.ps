%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[178.63020325 456.42330933]
[173.80419922 442.22085571]
[168.97821045 428.01840210]
[164.15220642 413.81594849]
[152.73150635 404.25473022]
[155.61744690 388.69894409]
[150.79145813 374.49649048]
[145.66307068 369.17471313]
[146.00103760 360.04653931]
[141.38702393 345.77380371]
[136.77302551 331.50106812]
[132.15901184 317.22833252]
[127.54500580 302.95559692]
[122.93099213 288.68286133]
[118.69372559 303.07192993]
[108.32135010 313.90771484]
[94.13108826 318.76940918]
[79.29306793 316.57098389]
[67.12214661 307.80349731]
[60.33734131 294.42565918]
[60.45439529 279.42611694]
[67.44715881 266.15579224]
[79.75342560 257.57931519]
[94.62394714 255.61271667]
[108.73661041 260.69531250]
[118.93862152 271.69165039]
[109.39894867 260.25292969]
[115.00350952 245.45768738]
[112.77839661 230.62364197]
[110.55327606 215.78961182]
[98.89752960 202.67051697]
[105.77946472 185.59069824]
[103.33374023 170.79142761]
[91.91201019 164.82705688]
[85.92159271 153.19964600]
[87.74867249 140.05154419]
[96.94816589 130.21366882]
[94.72304535 115.37962341]
[83.93856049 102.53162384]
[90.24811554 86.98924255]
[87.80239105 72.18997192]
[85.35665894 57.39070129]
[82.91093445 42.59143066]
[80.03805542 39.33558273]
[78.50486755 35.70049286]
[78.26609039 32.15389252]
[79.12918091 29.10074806]
[80.78759003 26.84069633]
[79.22706604 11.92209244]
[77.66654205 -2.99651265]
[76.10601807 -17.91511726]
[74.54549408 -32.83372116]
[72.98497009 -47.75232697]
[68.97975159 -55.96183777]
[71.51396942 -62.90442276]
[70.17573547 -77.84461212]
[68.83750153 -92.78479767]
[67.49926758 -107.72498322]
[66.16103363 -122.66516113]
[64.82279968 -137.60534668]
[55.88516235 -150.66020203]
[62.45613861 -164.02700806]
[61.11790466 -178.96719360]
[59.77967072 -193.90737915]
[58.44143677 -208.84756470]
[57.10320282 -223.78775024]
[55.76496887 -238.72793579]
[53.42948151 -253.54499817]
[50.10722351 -268.17245483]
[39.50556946 -279.91619873]
[44.23181915 -294.04107666]
[40.90955734 -308.66854858]
[35.95717621 -316.34393311]
[37.64844131 -323.53848267]
[34.54433441 -338.21377563]
[20.53172493 -344.61322021]
[13.06150723 -357.88159180]
[14.81583309 -372.82769775]
[24.91377068 -383.74417114]
[21.80966187 -398.41949463]
[18.70555115 -413.09478760]
[3.67532182 -412.58163452]
[-11.21564579 -414.68643188]
[-25.51483345 -419.34521484]
[-38.78770447 -426.41644287]
[-50.63090897 -435.68518066]
[-60.68454742 -446.86978149]
[-68.64310455 -459.63037109]
[-74.26471710 -473.57916260]
[-77.37857056 -488.29223633]
[-77.89001465 -503.32254028]
[-75.78352356 -518.21325684]
[-71.12310791 -532.51190186]
[-64.05039215 -545.78399658]
[-54.78030396 -557.62615967]
[-43.59455872 -567.67852783]
[-30.83306885 -575.63562012]
[-16.88364983 -581.25567627]
[-2.17020440 -584.36785889]
[12.86014080 -584.87756348]
[27.75063133 -582.76940918]
[42.04876328 -578.10736084]
[55.32002640 -571.03314209]
[67.16113281 -561.76171875]
[77.21223450 -550.57482910]
[85.16789246 -537.81243896]
[90.78634644 -523.86236572]
[93.89685822 -509.14859009]
[94.40489197 -494.11819458]
[92.29502869 -479.22793579]
[87.63137054 -464.93032837]
[80.55564117 -451.65985107]
[71.28286743 -439.81982422]
[60.09484100 -429.76998901]
[47.33154678 -421.81576538]
[33.38085175 -416.19888306]
[36.48496246 -401.52359009]
[39.58907318 -386.84829712]
[53.24246216 -380.95565796]
[60.89854813 -368.00003052]
[59.44079971 -352.84326172]
[49.21963501 -341.31787109]
[52.32374573 -326.64257812]
[55.53701782 -311.99078369]
[58.85927963 -297.36334229]
[69.22330475 -286.66583252]
[64.73468018 -271.49472046]
[68.05693817 -256.86727905]
[74.53813934 -270.39480591]
[87.24778748 -278.36129761]
[102.24765015 -278.29821777]
[114.88986969 -270.22515869]
[121.25711060 -256.64361572]
[119.37641907 -241.76199341]
[109.83053589 -230.19149780]
[95.57736969 -225.51739502]
[81.03341675 -229.18800354]
[70.70515442 -240.06617737]
[72.04338837 -225.12599182]
[73.38162231 -210.18580627]
[74.71985626 -195.24562073]
[76.05809021 -180.30543518]
[77.39632416 -165.36524963]
[86.23824310 -153.37901306]
[79.76298523 -138.94358826]
[81.10121918 -124.00339508]
[82.43945312 -109.06321716]
[83.77768707 -94.12303162]
[85.11592102 -79.18284607]
[86.45415497 -64.24266052]
[87.90357971 -49.31285095]
[89.46409607 -34.39424515]
[91.02462006 -19.47564125]
[92.58514404 -4.55703592]
[94.14566803 10.36156940]
[95.70619202 25.28017426]
[97.71020508 40.14570236]
[100.15592957 54.94497299]
[102.60166168 69.74424744]
[105.04738617 84.54351807]
[114.08937836 91.88406372]
[115.90273285 103.38854218]
[109.55709076 113.15451050]
[111.78221130 127.98854828]
[126.03804779 138.12712097]
[128.50212097 155.10484314]
[118.13301086 168.34570312]
[120.57873535 183.14497375]
[130.59043884 191.27691650]
[132.32281494 203.65361023]
[125.38732147 213.56448364]
[127.61243439 228.39852905]
[129.83755493 243.23257446]
[139.53639221 255.73229980]
[133.77265930 269.46652222]
[137.20372009 284.06884766]
[141.81773376 298.34158325]
[146.43174744 312.61431885]
[151.04576111 326.88705444]
[155.65975952 341.15979004]
[160.27377319 355.43252563]
[164.99391174 369.67050171]
[169.81990051 383.87295532]
[181.58578491 394.45004272]
[178.35466003 408.98995972]
[183.18066406 423.19241333]
[188.00665283 437.39486694]
[192.83265686 451.59732056]
[207.86959839 450.43930054]
[222.72198486 453.05801392]
[236.45616150 459.28881836]
[248.20880127 468.74008179]
[257.24111938 480.81768799]
[262.98532104 494.76239014]
[265.08035278 509.69763184]
[263.39447021 524.68457031]
[258.03369141 538.78112793]
[249.33500671 551.10119629]
[237.84519958 560.87030029]
[224.28651428 567.47430420]
[209.51129150 570.49816895]
[194.44830322 569.75170898]
[180.04441833 565.28192139]
[167.20507812 557.36975098]
[156.73738098 546.51257324]
[149.29933167 533.39294434]
[145.35848999 518.83544922]
[145.16256714 503.75521851]
[148.72390747 489.10028076]
[155.81861877 475.79177856]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 188]
[2 187]
[3 186]
[4 185]
[6 183]
[7 182]
[9 181]
[10 180]
[11 179]
[12 178]
[13 177]
[14 176]
[26 175]
[28 173]
[29 172]
[30 171]
[32 168]
[33 167]
[37 164]
[38 163]
[40 160]
[41 159]
[42 158]
[43 157]
[48 156]
[49 155]
[50 154]
[51 153]
[52 152]
[53 151]
[55 150]
[56 149]
[57 148]
[58 147]
[59 146]
[60 145]
[62 143]
[63 142]
[64 141]
[65 140]
[66 139]
[67 138]
[68 128]
[69 127]
[71 125]
[72 124]
[74 123]
[75 122]
[79 118]
[80 117]
[81 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
