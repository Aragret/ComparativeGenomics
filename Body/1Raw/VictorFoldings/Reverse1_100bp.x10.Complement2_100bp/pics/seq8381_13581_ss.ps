%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[19.10093689 676.79797363]
[17.81072807 691.92083740]
[11.14113426 705.55462646]
[-0.00583322 715.85559082]
[-14.12264061 721.43054199]
[-29.30010414 721.52557373]
[-43.48559570 716.12774658]
[-54.76065063 705.96716309]
[-61.60039902 692.41790771]
[-63.07983017 677.31243896]
[-58.99886322 662.69360352]
[-49.90940857 650.53851318]
[-37.04074478 642.49102783]
[-22.13325310 639.63952637]
[-19.46745682 624.87829590]
[-21.37218285 617.73730469]
[-16.65052032 609.91784668]
[-13.76524830 595.19793701]
[-10.87997532 580.47808838]
[-19.37677193 568.29858398]
[-16.66038704 553.32940674]
[-3.82780385 544.49975586]
[-0.94253135 529.77984619]
[1.94274127 515.05999756]
[-6.55405569 502.88049316]
[-3.83766961 487.91131592]
[8.99491310 479.08169556]
[11.88018513 464.36178589]
[14.76545811 449.64190674]
[12.96726227 442.47332764]
[17.80482101 434.72506714]
[20.90893173 420.04974365]
[24.01304245 405.37445068]
[27.11715126 390.69915771]
[25.51063347 387.56045532]
[25.34455872 383.48767090]
[27.04138565 379.16632080]
[30.70145607 375.44464111]
[34.45775604 360.92257690]
[38.21405792 346.40051270]
[41.97035980 331.87844849]
[45.72665787 317.35641479]
[40.13315201 300.72271729]
[53.14917374 287.69717407]
[56.68884659 273.12078857]
[60.22851944 258.54443359]
[63.76819229 243.96804810]
[67.30786133 229.39167786]
[70.84753418 214.81529236]
[69.33518219 211.63015747]
[69.29044342 207.55424500]
[71.11518097 203.28533936]
[74.88443756 199.67427063]
[79.07144928 185.27047729]
[83.25845337 170.86669922]
[87.44546509 156.46292114]
[90.00129700 141.68226624]
[90.89411926 126.70886230]
[91.78693390 111.73545837]
[85.70145416 99.14742279]
[93.23966217 87.37172699]
[94.13247681 72.39832306]
[95.02529144 57.42491913]
[95.91811371 42.45151138]
[96.81092834 27.47810555]
[89.90874481 13.24186802]
[98.38986969 0.99769348]
[99.28268433 -13.97571182]
[89.28310394 -2.79499674]
[74.85491943 1.30714619]
[60.46886826 -2.94037676]
[50.58261490 -14.22142506]
[48.25952911 -29.04044151]
[54.21944427 -42.80559540]
[66.61560822 -51.25160217]
[81.60694885 -51.76137543]
[94.54821777 -44.17695236]
[101.42948914 -30.84820366]
[104.31476593 -45.56809616]
[107.20003510 -60.28798676]
[110.08530426 -75.00788116]
[112.97058105 -89.72776794]
[115.85585022 -104.44766235]
[118.52164459 -119.20887756]
[120.85713196 -134.02593994]
[123.08225250 -148.85998535]
[125.30737305 -163.69403076]
[126.97891235 -178.60060120]
[128.09455872 -193.55906677]
[129.21020508 -208.51751709]
[129.65681458 -223.51086426]
[129.43348694 -238.50920105]
[121.49157715 -252.19264221]
[129.03852844 -265.03369141]
[119.23072052 -280.61859131]
[128.36940002 -295.60028076]
[127.92279816 -310.59362793]
[127.47619629 -325.58697510]
[113.51264191 -331.74993896]
[103.61244965 -343.36669922]
[99.74131775 -358.13073730]
[102.66784668 -373.11065674]
[111.81098938 -385.33218384]
[125.35535431 -392.36871338]
[140.61170959 -392.82318115]
[154.55087280 -386.60528564]
[164.40524292 -374.94961548]
[168.21821594 -360.17044067]
[165.23271179 -345.20217896]
[156.04151917 -333.01672363]
[142.46954346 -326.03359985]
[142.91615295 -311.04025269]
[143.36276245 -296.04690552]
[151.94920349 -287.52636719]
[152.44398499 -275.03881836]
[144.03686523 -265.25701904]
[151.96279907 -252.64636230]
[144.43182373 -238.73252869]
[144.65515137 -223.73419189]
[155.85258484 -233.71505737]
[170.83517456 -232.99250793]
[181.02020264 -221.98046875]
[180.57324219 -206.98712158]
[169.75032043 -196.60134888]
[154.75129700 -196.77258301]
[144.16865540 -207.40187073]
[143.05300903 -192.44340515]
[141.93736267 -177.48495483]
[154.83354187 -185.14581299]
[168.91697693 -179.98277283]
[173.80587769 -165.80184937]
[165.89634705 -153.05668640]
[151.01896667 -151.14254761]
[140.14141846 -161.46891785]
[137.91629028 -146.63487244]
[135.69117737 -131.80082703]
[137.80767822 -124.71971130]
[133.32092285 -116.76315308]
[135.32455444 -112.42789459]
[134.62608337 -106.78793335]
[130.57574463 -101.56238556]
[127.69047546 -86.84249878]
[124.80519867 -72.12260437]
[121.91992950 -57.40271378]
[119.03465271 -42.68282318]
[116.14938354 -27.96293068]
[114.25608826 -13.08289623]
[113.36327362 1.89050937]
[120.32931519 15.05574894]
[111.78433228 28.37092209]
[110.89151764 43.34432602]
[109.99870300 58.31773376]
[109.10588074 73.29113770]
[108.21306610 88.26454163]
[114.29854584 100.85257721]
[106.76033783 112.62827301]
[105.86752319 127.60167694]
[104.97470856 142.57508850]
[113.16034698 130.00546265]
[125.29116821 121.18259430]
[139.77116394 117.26727295]
[154.69523621 118.77462006]
[168.09986877 125.50633240]
[178.22143555 136.57673645]
[183.72830200 150.52931213]
[183.89591980 165.52836609]
[178.70223999 179.60054016]
[168.83058167 190.89436340]
[155.57974243 197.92395020]
[140.69308472 199.76445007]
[126.12921143 196.17369080]
[113.80424500 187.62411499]
[105.33975220 175.24057007]
[101.84925079 160.64993286]
[97.66223907 175.05371094]
[93.47522736 189.45748901]
[89.28821564 203.86128235]
[85.42391205 218.35496521]
[81.88423920 232.93135071]
[78.34456635 247.50772095]
[74.80489349 262.08410645]
[71.26522064 276.66046143]
[67.72554779 291.23684692]
[73.75736237 302.63772583]
[70.50907898 314.70556641]
[60.24871826 321.11270142]
[56.49241638 335.63476562]
[52.73611832 350.15682983]
[48.97981644 364.67889404]
[45.22351456 379.20092773]
[41.79245377 393.80325317]
[38.68834305 408.47857666]
[35.58423233 423.15386963]
[32.48012543 437.82916260]
[29.48534966 452.52716064]
[26.60007668 467.24707031]
[23.71480370 481.96694946]
[32.26443863 494.98776245]
[29.12867355 509.87472534]
[16.66263199 517.94525146]
[13.77735996 532.66516113]
[10.89208698 547.38500977]
[19.44172287 560.40582275]
[16.30595589 575.29278564]
[3.83991575 583.36334229]
[0.95464313 598.08325195]
[-1.93062949 612.80310059]
[-4.70624065 627.54406738]
[-7.37203598 642.30529785]
[5.59636497 650.19104004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 209]
[15 208]
[17 207]
[18 206]
[19 205]
[22 202]
[23 201]
[24 200]
[27 197]
[28 196]
[29 195]
[31 194]
[32 193]
[33 192]
[34 191]
[38 190]
[39 189]
[40 188]
[41 187]
[42 186]
[44 183]
[45 182]
[46 181]
[47 180]
[48 179]
[49 178]
[53 177]
[54 176]
[55 175]
[56 174]
[57 158]
[58 157]
[59 156]
[61 154]
[62 153]
[63 152]
[64 151]
[65 150]
[67 148]
[68 147]
[78 146]
[79 145]
[80 144]
[81 143]
[82 142]
[83 141]
[84 138]
[85 136]
[86 135]
[87 134]
[88 128]
[89 127]
[90 126]
[91 119]
[92 118]
[94 116]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
