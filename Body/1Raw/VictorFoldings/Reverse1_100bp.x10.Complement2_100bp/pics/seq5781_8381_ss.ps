%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGG\
) } def
/len { sequence length } bind def

/coor [
[264.92544556 374.79388428]
[275.94946289 364.58679199]
[267.35092163 352.29595947]
[258.75234985 340.00512695]
[250.15377808 327.71426392]
[241.55522156 315.42343140]
[232.95664978 303.13259888]
[224.35809326 290.84176636]
[210.30661011 295.99011230]
[195.38983154 297.32675171]
[180.62405396 294.75460815]
[167.01681519 288.44305420]
[155.49821472 278.81692505]
[146.85729980 266.52777100]
[141.68798828 252.40983582]
[140.34831238 237.42344666]
[142.93554688 222.58963013]
[149.27928162 208.92059326]
[158.95249939 197.35063171]
[150.35394287 185.05979919]
[141.75537109 172.76895142]
[133.15681458 160.47811890]
[124.55824280 148.18728638]
[112.27716064 152.67250061]
[99.27861023 154.07957458]
[86.32221222 152.32627869]
[74.16513824 147.51506042]
[63.51783752 139.92709351]
[55.00252914 130.00581360]
[49.11684799 118.33101654]
[46.20474243 105.58496094]
[46.43640137 92.51252747]
[49.79828262 79.87765503]
[56.09391785 68.41871643]
[64.95539856 58.80537033]
[56.91422653 46.14284515]
[48.87305450 33.48032379]
[40.83188248 20.81779671]
[32.79070663 8.15527248]
[24.01010513 -4.00618362]
[14.52120590 -15.62344742]
[5.03230762 -27.24071121]
[-4.45659065 -38.85797501]
[-13.94548893 -50.47523880]
[-23.43438721 -62.09249878]
[-35.80249023 -53.59017181]
[-48.83046722 -46.13824081]
[-62.42932892 -39.78760910]
[-76.50617981 -34.58166504]
[-90.96485138 -30.55596924]
[-105.70658875 -27.73801804]
[-120.63067627 -26.14706421]
[-135.63517761 -25.79397583]
[-150.61756897 -26.68116379]
[-165.47554016 -28.80256844]
[-180.10757446 -32.14369583]
[-194.41372681 -36.68172455]
[-208.29624939 -42.38565826]
[-221.66033936 -49.21652603]
[-234.41468811 -57.12766647]
[-246.47216797 -66.06504059]
[-257.75042725 -75.96759796]
[-268.17239380 -86.76769257]
[-277.66690063 -98.39154053]
[-286.16909790 -110.75974274]
[-293.62084961 -123.78781128]
[-299.97131348 -137.38674927]
[-305.17709351 -151.46365356]
[-309.20263672 -165.92237854]
[-312.02041626 -180.66415405]
[-313.61117554 -195.58825684]
[-313.96408081 -210.59275818]
[-313.07672119 -225.57514954]
[-310.95513916 -240.43309021]
[-307.61383057 -255.06507874]
[-303.07562256 -269.37118530]
[-297.37155151 -283.25363159]
[-290.54052734 -296.61764526]
[-282.62921143 -309.37188721]
[-273.69171143 -321.42926025]
[-263.78900146 -332.70739746]
[-252.98880005 -343.12924194]
[-241.36483765 -352.62362671]
[-228.99653625 -361.12564087]
[-215.96836853 -368.57727051]
[-202.36935425 -374.92758179]
[-188.29238892 -380.13317871]
[-173.83361816 -384.15853882]
[-159.09181213 -386.97613525]
[-144.16769409 -388.56674194]
[-129.16319275 -388.91946411]
[-114.18080139 -388.03192139]
[-99.32288361 -385.91015625]
[-84.69093323 -382.56869507]
[-70.38489532 -378.03030396]
[-56.50249863 -372.32604980]
[-43.13857651 -365.49487305]
[-30.38441849 -357.58343506]
[-18.32715034 -348.64575195]
[-7.04913521 -338.74295044]
[3.37258339 -327.94259644]
[12.86681461 -316.31851196]
[21.36870193 -303.95010376]
[28.82016754 -290.92187500]
[35.17031097 -277.32278442]
[40.37575150 -263.24575806]
[44.40093231 -248.78692627]
[47.21835327 -234.04508972]
[48.80877304 -219.12094116]
[49.16132736 -204.11643982]
[48.27360535 -189.13406372]
[46.15166855 -174.27618408]
[42.81001663 -159.64425659]
[38.27147675 -145.33828735]
[32.56704712 -131.45594788]
[25.73570251 -118.09210968]
[17.82410431 -105.33804321]
[8.88629723 -93.28088379]
[-1.01666117 -82.00299072]
[-11.81712437 -71.58139801]
[-2.32822585 -59.96413422]
[7.16067266 -48.34687042]
[16.64957047 -36.72961044]
[26.13846970 -25.11234474]
[35.62736893 -13.49508190]
[36.13290787 -28.48656082]
[45.26242828 -40.38831711]
[59.61084366 -44.76129532]
[73.82655334 -39.97447586]
[82.60744476 -27.81323051]
[82.67846680 -12.81339931]
[74.01312256 -0.56954849]
[59.84338379 4.35166693]
[45.45323181 0.11409924]
[53.49440384 12.77662373]
[61.53557968 25.43914986]
[69.57675171 38.10167313]
[77.61792755 50.76419830]
[93.87583923 46.26345825]
[110.72956085 46.99058533]
[126.53942871 52.87484360]
[139.76734924 63.34377289]
[149.12643433 77.37887573]
[153.70614624 93.61472321]
[153.06094360 110.47177887]
[147.25358582 126.31005859]
[136.84909058 139.58871460]
[145.44764709 151.87954712]
[154.04620361 164.17039490]
[162.64477539 176.46122742]
[171.24333191 188.75207520]
[185.42822266 183.63110352]
[200.44364929 182.35745239]
[215.26557922 185.01196289]
[228.88470459 191.40777588]
[240.37518311 201.10345459]
[248.95765686 213.43351746]
[254.05200195 227.55400085]
[255.31658936 242.50035095]
[252.67123413 257.25320435]
[246.30213928 270.80795288]
[236.64892578 282.24319458]
[245.24749756 294.53402710]
[253.84605408 306.82489014]
[262.44461060 319.11572266]
[271.04318237 331.40655518]
[279.64175415 343.69738770]
[288.24029541 355.98822021]
[301.60794067 349.13113403]
[315.78482056 344.15817261]
[330.50680542 341.16204834]
[345.49966431 340.19851685]
[360.48403931 341.28555298]
[375.18084717 344.40292358]
[389.31625366 349.49255371]
[402.62692261 356.45959473]
[414.86489868 365.17425537]
[425.80218506 375.47421265]
[435.23504639 387.16760254]
[442.98776245 400.03652954]
[448.91586304 413.84127808]
[452.90893555 428.32470703]
[454.89257812 443.21694946]
[454.82986450 458.24057007]
[452.72192383 473.11575317]
[448.60806274 487.56530762]
[442.56491089 501.32009888]
[434.70501709 514.12384033]
[425.17486572 525.73803711]
[414.15194702 535.94635010]
[401.84164429 544.55853271]
[388.47323608 551.41418457]
[374.29583740 556.38562012]
[359.57351685 559.38012695]
[344.58059692 560.34204102]
[329.59631348 559.25335693]
[314.89984131 556.13439941]
[300.76498413 551.04327393]
[287.45507812 544.07476807]
[275.21804810 535.35876465]
[264.28186035 525.05761719]
[254.85026550 513.36322021]
[247.09895325 500.49346924]
[241.17234802 486.68807983]
[237.18084717 472.20422363]
[235.19880676 457.31176758]
[235.26315308 442.28814697]
[237.37269592 427.41320801]
[241.48811340 412.96408081]
[247.53276062 399.20996094]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 168]
[3 167]
[4 166]
[5 165]
[6 164]
[7 163]
[8 162]
[19 151]
[20 150]
[21 149]
[22 148]
[23 147]
[35 138]
[36 137]
[37 136]
[38 135]
[39 134]
[40 125]
[41 124]
[42 123]
[43 122]
[44 121]
[45 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
