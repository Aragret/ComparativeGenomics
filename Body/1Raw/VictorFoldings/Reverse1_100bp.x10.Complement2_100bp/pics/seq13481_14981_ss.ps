%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUACUCUCAUUAUCUAUCCCGAGUCCGCAAACACAUACUAUACAAACGCCAAAGCUACUACACCAGAAACCUCAUCUUUGGACACUCCUUUCCAUAAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[129.95202637 604.37725830]
[124.22759247 590.37420654]
[123.11253357 575.28741455]
[126.71610260 560.59490967]
[134.68525696 547.73614502]
[146.23925781 537.97088623]
[160.24615479 532.25579834]
[159.13050842 517.29736328]
[158.01486206 502.33889771]
[156.89921570 487.38046265]
[154.89518738 472.51492310]
[152.00991821 457.79501343]
[149.12464905 443.07513428]
[146.23937988 428.35525513]
[143.35411072 413.63534546]
[140.46882629 398.91546631]
[137.07536316 395.55490112]
[135.75697327 390.02688599]
[137.72366333 383.71469116]
[135.27792358 368.91543579]
[132.83219910 354.11614990]
[130.38647461 339.31689453]
[120.67755127 328.02148438]
[126.06121826 313.14443970]
[123.61548615 298.34515381]
[121.16976166 283.54589844]
[118.72402954 268.74661255]
[106.50380707 260.30850220]
[103.81266785 245.33477783]
[112.74619293 232.57429504]
[110.30046844 217.77502441]
[100.65264130 210.47804260]
[98.49394989 198.16854858]
[105.51884460 187.35125732]
[103.29373169 172.51721191]
[101.06861115 157.68316650]
[98.84349060 142.84913635]
[96.61837769 128.01509094]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[88.54757690 74.21002960]
[74.35588074 73.58752441]
[60.52795792 70.35348511]
[47.54001617 64.62091827]
[35.83903122 56.58882141]
[25.82736015 46.53532028]
[17.84893227 34.80801010]
[12.17740250 21.81194878]
[9.00678635 7.99565840]
[8.44481564 -6.16434526]
[10.50927734 -20.17999268]
[15.12746048 -33.56848526]
[22.13871002 -45.86891556]
[31.30002213 -56.65815353]
[42.29445648 -65.56537628]
[54.74211121 -72.28484344]
[68.21324158 -76.58636475]
[66.43077087 -91.48007965]
[64.20565796 -106.31412506]
[61.53985977 -121.07534027]
[58.87406540 -135.83656311]
[48.80737305 -148.04197693]
[54.15961456 -161.94171143]
[40.40488434 -165.19041443]
[28.96192932 -173.41130066]
[21.53913116 -185.33639526]
[19.22914505 -199.14778137]
[22.34816742 -212.75480652]
[30.39310646 -224.11045837]
[42.12240219 -231.51936340]
[39.67667770 -246.31863403]
[37.23094940 -261.11788940]
[34.78522110 -275.91717529]
[24.90136337 -288.27111816]
[30.45996094 -302.08963013]
[28.01423454 -316.88888550]
[25.56850624 -331.68817139]
[20.15784454 -317.69799805]
[9.86098480 -306.79043579]
[-3.79459167 -300.58358765]
[-18.78316307 -299.99813843]
[-32.88126373 -305.12100220]
[-43.99752426 -315.19216919]
[-50.48291016 -328.71771240]
[-51.37535858 -343.69113159]
[-46.54248047 -357.89123535]
[-36.70119858 -369.21154785]
[-23.31141090 -375.97271729]
[-8.35941505 -377.17181396]
[5.93675089 -372.63092041]
[17.45633507 -363.02368164]
[24.48992348 -349.77709961]
[25.15970802 -364.76211548]
[25.82949257 -379.74716187]
[26.49927902 -394.73220825]
[27.16906357 -409.71725464]
[27.83884811 -424.70227051]
[13.74339104 -430.23370361]
[2.20933557 -440.04412842]
[-5.51219034 -453.06936646]
[-8.58361340 -467.89654541]
[-6.67176771 -482.91732788]
[0.01596307 -496.50234985]
[10.75414371 -507.17803955]
[24.37797737 -513.78631592]
[39.40965271 -515.61047363]
[54.21864700 -512.45257568]
[67.19858551 -504.65512085]
[76.94151306 -493.06399536]
[82.39057922 -478.93649292]
[82.95471191 -463.80505371]
[78.57272339 -449.31103516]
[69.71993256 -437.02661133]
[57.35662842 -428.28433228]
[42.82388687 -424.03250122]
[42.15410233 -409.04745483]
[41.48431778 -394.06240845]
[40.81453323 -379.07739258]
[40.14474487 -364.09234619]
[39.47496033 -349.10729980]
[40.36777878 -334.13388062]
[42.81350327 -319.33462524]
[45.25923157 -304.53533936]
[54.96815491 -293.23995972]
[49.58449173 -278.36288452]
[52.03022003 -263.56362915]
[54.47594833 -248.76435852]
[56.92167282 -233.96508789]
[72.33992004 -229.76649475]
[84.42764282 -219.22605896]
[90.73148346 -204.41574097]
[89.94270325 -188.28074646]
[82.16852570 -174.05380249]
[68.92082977 -164.60751343]
[78.79685211 -153.45791626]
[73.63528442 -138.50234985]
[76.30107880 -123.74114227]
[78.96687317 -108.97991943]
[81.19021606 -107.27262115]
[82.87123871 -104.58174896]
[83.63192749 -101.10946655]
[83.17436218 -97.19090271]
[81.32449341 -93.26255035]
[83.10695648 -78.36882782]
[98.88615417 -77.07241058]
[114.06179047 -72.54062653]
[127.97766113 -64.96706390]
[140.03155518 -54.67691803]
[149.70130920 -42.11296463]
[156.56741333 -27.81656075]
[160.33122253 -12.40430546]
[160.82795715 3.45856762]
[158.03392029 19.08688736]
[152.06755066 33.80514908]
[143.18449402 46.97670746]
[131.76661682 58.03131866]
[118.30556488 66.48982239]
[103.38162231 71.98491669]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[111.45242310 125.78997040]
[113.67753601 140.62400818]
[115.90265656 155.45805359]
[118.12776947 170.29209900]
[120.35289001 185.12614441]
[132.15492249 199.26097107]
[125.09973907 215.32929993]
[127.54546356 230.12857056]
[140.10946655 239.33638000]
[142.37896729 254.37977600]
[133.52330017 266.30090332]
[135.96902466 281.10015869]
[138.41476440 295.89944458]
[140.86048889 310.69869995]
[150.74433899 323.05264282]
[145.18574524 336.87115479]
[147.63146973 351.67044067]
[150.07719421 366.46969604]
[152.52293396 381.26898193]
[155.18872070 396.03018188]
[158.07398987 410.75009155]
[160.95927429 425.46997070]
[163.84454346 440.18984985]
[166.72981262 454.90975952]
[169.61508179 469.62963867]
[177.13391113 456.65014648]
[190.79875183 450.46371460]
[205.51298523 453.37774658]
[215.78854370 464.30535889]
[217.79290771 479.17083740]
[210.77850342 492.42971802]
[197.36152649 499.13677979]
[182.54617310 496.79043579]
[171.85766602 486.26480103]
[172.97331238 501.22326660]
[174.08895874 516.18170166]
[175.20460510 531.14013672]
[189.90431213 534.71417236]
[202.77908325 542.65747070]
[212.56755066 554.19183350]
[218.31074524 568.18719482]
[219.44601440 583.27252197]
[215.86213684 597.96978760]
[207.91023254 610.83923340]
[196.36933899 620.61999512]
[182.37010193 626.35382080]
[167.28404236 627.47894287]
[152.58912659 623.88525391]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 199]
[8 198]
[9 197]
[10 196]
[11 187]
[12 186]
[13 185]
[14 184]
[15 183]
[16 182]
[19 181]
[20 180]
[21 179]
[22 178]
[24 176]
[25 175]
[26 174]
[27 173]
[30 170]
[31 169]
[34 167]
[35 166]
[36 165]
[37 164]
[38 163]
[39 162]
[41 160]
[42 159]
[58 145]
[59 144]
[60 139]
[61 138]
[62 137]
[64 135]
[71 129]
[72 128]
[73 127]
[74 126]
[76 124]
[77 123]
[78 122]
[93 121]
[94 120]
[95 119]
[96 118]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
