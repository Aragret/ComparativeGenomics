%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[182.47607422 273.00711060]
[187.79112244 258.96841431]
[194.39744568 245.48913574]
[202.23696899 232.68771362]
[211.24081421 220.67666626]
[200.13357544 210.59552002]
[185.50920105 207.77116394]
[180.49047852 192.76705933]
[169.38323975 182.68592834]
[158.27600098 172.60478210]
[147.16877747 162.52365112]
[136.06153870 152.44250488]
[138.50540161 167.24209595]
[132.65794373 181.05538940]
[120.33106995 189.60221863]
[105.34439087 190.23422241]
[92.34169769 182.75559998]
[85.35200500 169.48367310]
[86.54116058 154.53088379]
[95.54067993 142.53051758]
[109.56196594 137.20103455]
[124.26060486 140.19393921]
[110.14467621 135.44105530]
[107.17549896 119.90097046]
[97.51468658 108.42626953]
[94.51099396 107.90920258]
[91.62905884 106.28779602]
[89.27826691 103.60503387]
[87.84639740 100.05454254]
[87.64512634 95.96890259]
[78.68443298 83.93952179]
[69.72373199 71.91014862]
[60.76303864 59.88076782]
[51.80234146 47.85139084]
[42.84164429 35.82201385]
[33.88095093 23.79263496]
[36.58644485 38.54662704]
[36.30825043 53.54404831]
[33.05744934 68.18755341]
[26.96351433 81.89389801]
[18.26916695 94.11717224]
[7.32069969 104.37051392]
[-5.44581413 112.24554443]
[-19.52188873 117.42860413]
[-34.34688187 119.71325684]
[-49.33031464 119.00849915]
[-63.87540817 115.34239960]
[-77.40283203 108.86098480]
[-89.37380219 99.82240295]
[-99.31150818 88.58666229]
[-106.82014465 75.60127258]
[-111.60064697 61.38343430]
[-113.46259308 46.49944687]
[-112.33184052 31.54212570]
[-108.25341797 17.10722160]
[-101.38977051 3.76966763]
[-92.01427460 -7.93930578]
[-80.50035095 -17.55333328]
[-67.30659485 -24.68949509]
[-52.95850754 -29.06355858]
[-38.02757263 -30.50130653]
[-23.10847664 -28.94547272]
[-8.79544735 -24.45802879]
[4.34143639 -17.21770477]
[15.77893639 -7.51288128]
[25.05925560 4.26637936]
[21.95514679 -10.40892315]
[18.85103607 -25.08422470]
[15.74692631 -39.75952911]
[12.64281559 -54.43482971]
[2.27798867 -62.11162567]
[-0.00531061 -74.39862061]
[6.48072720 -84.60929871]
[3.59545445 -99.32918549]
[0.16339286 -103.26213074]
[-1.27321446 -107.67681885]
[-0.86501843 -111.73248291]
[0.92546982 -114.76999664]
[-1.29964733 -129.60403442]
[-3.63513446 -144.42111206]
[-6.08086157 -159.22038269]
[-8.52658939 -174.01965332]
[-10.97231674 -188.81892395]
[-26.01177788 -189.05215454]
[-40.76786041 -191.96725464]
[-54.76622009 -197.47050476]
[-67.55686188 -205.38499451]
[-78.72863007 -215.45631409]
[-87.92238617 -227.36070251]
[-94.84259796 -240.71548462]
[-99.26680756 -255.09138489]
[-101.05279541 -270.02624512]
[-100.14314270 -285.03997803]
[-96.56710052 -299.64996338]
[-90.43961334 -313.38653564]
[-81.95766449 -325.80816650]
[-71.39390564 -336.51547241]
[-59.08792877 -345.16433716]
[-45.43531036 -351.47668457]
[-30.87492561 -355.24960327]
[-15.87483501 -356.36184692]
[-0.91722775 -354.77761841]
[13.51707077 -350.54788208]
[26.96405792 -343.80856323]
[38.99147034 -334.77633667]
[49.21266937 -323.74151611]
[57.29909515 -311.05886841]
[62.99079895 -297.13607788]
[66.10481262 -282.42068481]
[66.54103851 -267.38574219]
[64.28545380 -252.51457214]
[59.41056061 -238.28518677]
[52.07307053 -225.15502930]
[42.50885391 -213.54617310]
[31.02535820 -203.83180237]
[17.99173355 -196.32417297]
[3.82695413 -191.26464844]
[6.27268171 -176.46537781]
[8.71840858 -161.66610718]
[11.16413689 -146.86683655]
[15.35617161 -140.78007507]
[13.53439617 -131.82916260]
[15.75951385 -116.99511719]
[18.31534576 -102.21446228]
[21.20061874 -87.49456787]
[33.43054199 -74.90902710]
[27.31811905 -57.53894043]
[30.42222786 -42.86363983]
[33.52634048 -28.18833542]
[36.63044739 -13.51303291]
[39.73455811 1.16226912]
[45.91032791 14.83193970]
[54.87102509 26.86131668]
[63.83171844 38.89069366]
[72.79241180 50.92007065]
[81.75311279 62.94945145]
[90.71380615 74.97882843]
[99.67450714 87.00820160]
[108.98938751 98.76545715]
[118.65019989 110.24015808]
[133.45713806 115.81377411]
[135.73530579 130.53312683]
[146.14266968 141.33528137]
[157.24990845 151.41641235]
[168.35714722 161.49755859]
[179.46437073 171.57868958]
[190.57160950 181.65983582]
[205.99044800 185.20526123]
[210.21470642 199.48829651]
[221.32194519 209.56942749]
[232.40676880 199.44712830]
[244.39077759 190.40730286]
[257.16860962 182.52941895]
[270.62802124 175.88270569]
[284.65072632 170.52557373]
[299.11343384 166.50509644]
[313.88909912 163.85661316]
[328.84783936 162.60339355]
[343.85818481 162.75645447]
[358.78826904 164.31446838]
[373.50683594 167.26370239]
[387.88455200 171.57827759]
[401.79507446 177.22024536]
[415.11614990 184.14004517]
[427.73068237 192.27687073]
[439.52786255 201.55918884]
[450.40396118 211.90542603]
[460.26342773 223.22467041]
[469.01962280 235.41744995]
[476.59555054 248.37660217]
[482.92468262 261.98825073]
[487.95135498 276.13275146]
[491.63143921 290.68579102]
[493.93255615 305.51953125]
[494.83447266 320.50354004]
[494.32931519 335.50619507]
[492.42147827 350.39559937]
[489.12774658 365.04092407]
[484.47705078 379.31347656]
[478.51028442 393.08779907]
[471.27987671 406.24285889]
[462.84936523 418.66305542]
[453.29284668 430.23919678]
[442.69427490 440.86959839]
[431.14685059 450.46078491]
[418.75201416 458.92852783]
[405.61868286 466.19836426]
[391.86230469 472.20639038]
[377.60379028 476.89987183]
[362.96838379 480.23751831]
[348.08477783 482.18997192]
[333.08370972 482.74014282]
[318.09704590 481.88314819]
[303.25650024 479.62652588]
[288.69244385 475.99011230]
[274.53295898 471.00588989]
[260.90237427 464.71759033]
[247.92057800 457.18057251]
[235.70159912 448.46099854]
[224.35282898 438.63549805]
[213.97401428 427.79049683]
[204.65635681 416.02120972]
[196.48175049 403.43112183]
[189.52203369 390.13085938]
[183.83836365 376.23733521]
[179.48069763 361.87261963]
[176.48731995 347.16293335]
[174.88455200 332.23760986]
[174.68647766 317.22778320]
[175.89482117 302.26535034]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 150]
[6 149]
[8 147]
[9 146]
[10 145]
[11 144]
[12 143]
[22 142]
[24 140]
[25 139]
[30 138]
[31 137]
[32 136]
[33 135]
[34 134]
[35 133]
[36 132]
[66 131]
[67 130]
[68 129]
[69 128]
[70 127]
[73 125]
[74 124]
[78 123]
[79 122]
[80 120]
[81 119]
[82 118]
[83 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
