%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGAUUCGUAUCACAAUCUCAAACCUAAUCACCCGAUAAAAGACGAUCCCCCACCUUCGCCUACUCAUUCUUCUAAGGACGAUGUUGAUAUCACGAACxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[37.17825699 546.19891357]
[41.17434692 560.74133301]
[41.42751694 575.82067871]
[37.92184830 590.48907471]
[30.87771606 603.82440186]
[20.73791504 614.98840332]
[8.13984394 623.27935791]
[-6.12457180 628.17596436]
[-21.15865898 629.37060547]
[-36.01736450 626.78796387]
[-49.76665115 620.59057617]
[-61.54223633 611.16790771]
[-70.60388947 599.11236572]
[-76.38198853 585.18164062]
[-78.51332092 570.25152588]
[-76.86391449 555.26049805]
[-71.53743744 541.15100098]
[-62.86872482 528.80981445]
[-51.40269852 519.01281738]
[-37.86012268 512.37585449]
[-23.09229660 509.31607056]
[-8.02753735 510.02587891]
[-3.62653899 495.68603516]
[0.77445912 481.34619141]
[5.17545700 467.00634766]
[9.57645512 452.66650391]
[13.97745323 438.32666016]
[18.37845039 423.98678589]
[22.77944946 409.64694214]
[27.07357216 395.27474976]
[31.26058388 380.87097168]
[34.90867233 366.32135010]
[37.90344620 351.62332153]
[40.78871918 336.90344238]
[43.67399216 322.18356323]
[46.55926514 307.46365356]
[40.07322693 297.25299072]
[42.35652542 284.96597290]
[52.72135162 277.28918457]
[55.82546234 262.61389160]
[58.92957306 247.93858337]
[52.59627533 237.63247681]
[55.06225586 225.38082886]
[65.54022980 217.85920715]
[68.86249542 203.23175049]
[72.18475342 188.60429382]
[75.50701141 173.97682190]
[78.82926941 159.34936523]
[82.15152740 144.72190857]
[85.47379303 130.09445190]
[88.79605103 115.46698761]
[81.16312408 103.15095520]
[84.37232208 89.02129364]
[96.57649231 81.21075439]
[92.08786774 66.03963470]
[102.45189667 55.34214401]
[105.77415466 40.71468353]
[109.09641266 26.08722305]
[107.50891876 19.66917038]
[109.15401459 14.22943783]
[112.74148560 11.07680607]
[116.49778748 -3.44525337]
[120.25408936 -17.96731186]
[124.01039124 -32.48937225]
[127.76669312 -47.01143265]
[126.88600922 -56.10330582]
[131.68853760 -61.72092056]
[135.66062927 -76.18544006]
[139.63272095 -90.64997101]
[143.60481262 -105.11449432]
[147.57691956 -119.57901764]
[137.45300293 -108.51075745]
[124.65081787 -100.69384766]
[110.17999268 -96.74476624]
[95.18175507 -96.97496033]
[80.83893585 -101.36625671]
[68.28266907 -109.57235718]
[58.50318527 -120.94609070]
[52.27174377 -134.59046936]
[50.07977676 -149.42944336]
[52.10015869 -164.29275513]
[58.17354584 -178.00822449]
[67.82096863 -189.49418640]
[80.28159332 -197.84480286]
[94.57272339 -202.40151978]
[109.56729889 -202.80496216]
[124.08277893 -199.02334595]
[136.97442627 -191.35485840]
[147.22554016 -180.40431213]
[154.02767944 -167.03527832]
[156.84439087 -152.30210876]
[155.45274353 -137.36335754]
[163.49392700 -150.02587891]
[171.53509521 -162.68841553]
[172.40148926 -178.48587036]
[185.75587463 -185.08203125]
[193.79705811 -197.74456787]
[182.10147095 -207.16227722]
[171.53390503 -217.83029175]
[162.22724915 -229.61444092]
[154.29855347 -242.36653137]
[147.84750366 -255.92617798]
[142.95526123 -270.12286377]
[139.68333435 -284.77804565]
[138.07286072 -299.70742798]
[138.14411926 -314.72326660]
[139.89619446 -329.63668823]
[143.30705261 -344.26016235]
[148.33381653 -358.40979004]
[154.91325378 -371.90759277]
[162.96261597 -384.58386230]
[172.38069153 -396.27914429]
[183.04902649 -406.84640503]
[194.83345032 -416.15270996]
[207.58576965 -424.08102417]
[221.14561462 -430.53167725]
[235.34243774 -435.42349243]
[249.99772644 -438.69497681]
[264.92715454 -440.30499268]
[279.94299316 -440.23330688]
[294.85635376 -438.48077393]
[309.47973633 -435.06945801]
[323.62918091 -430.04229736]
[337.12680054 -423.46246338]
[349.80282593 -415.41271973]
[361.49786377 -405.99429321]
[372.06478882 -395.32565308]
[381.37072754 -383.54092407]
[389.29867554 -370.78836060]
[395.74890137 -357.22833252]
[400.64028931 -343.03137207]
[403.91134644 -328.37597656]
[405.52093506 -313.44650269]
[405.44876099 -298.43069458]
[403.69580078 -283.51736450]
[400.28405762 -268.89410400]
[395.25646973 -254.74476624]
[388.67620850 -241.24734497]
[380.62609863 -228.57156372]
[371.20733643 -216.87683105]
[360.53836060 -206.31022644]
[348.75338745 -197.00462341]
[336.00057983 -189.07707214]
[322.44036865 -182.62724304]
[308.24322510 -177.73626709]
[293.58773804 -174.46565247]
[278.65823364 -172.85652161]
[263.64239502 -172.92912292]
[248.72914124 -174.68254089]
[234.10597229 -178.09471130]
[219.95680237 -183.12274170]
[206.45957947 -189.70338440]
[198.41841125 -177.04086304]
[198.12718201 -162.14910889]
[184.19761658 -154.64723206]
[176.15644836 -141.98471069]
[168.11528015 -129.32218933]
[162.04144287 -115.60691833]
[158.06933594 -101.14239502]
[154.09724426 -86.67787170]
[150.12515259 -72.21334839]
[146.15306091 -57.74882507]
[142.28874207 -43.25513077]
[138.53245544 -28.73307037]
[134.77615356 -14.21101189]
[131.01985168 0.31104732]
[127.26354980 14.83310699]
[123.72387695 29.40948105]
[120.40161133 44.03694153]
[117.07935333 58.66440201]
[121.80560303 72.78926849]
[111.20394897 84.53301239]
[118.83687592 96.84904480]
[115.62767792 110.97870636]
[103.42350769 118.78924561]
[100.10124969 133.41670227]
[96.77899170 148.04417419]
[93.45673370 162.67163086]
[90.13446808 177.29908752]
[86.81221008 191.92654419]
[83.48995209 206.55401611]
[80.16769409 221.18147278]
[86.02082062 238.64064026]
[73.60487366 251.04269409]
[70.50076294 265.71798706]
[67.39665222 280.39331055]
[73.50907898 297.76339722]
[61.27915573 310.34893799]
[58.39388275 325.06881714]
[55.50860977 339.78872681]
[52.62333679 354.50860596]
[54.04361725 363.53195190]
[49.58397293 369.42544556]
[63.38803482 363.55621338]
[76.65542603 370.55453491]
[79.60591888 385.26147461]
[70.06452179 396.83566284]
[55.06480026 396.74502563]
[45.66436768 385.05795288]
[41.47735596 399.46176147]
[42.08694839 408.57580566]
[37.11929703 414.04794312]
[32.71829987 428.38778687]
[28.31730080 442.72763062]
[23.91630173 457.06750488]
[19.51530457 471.40734863]
[15.11430645 485.74719238]
[10.71330833 500.08703613]
[6.31231022 514.42687988]
[19.18159676 522.29022217]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 209]
[23 208]
[24 207]
[25 206]
[26 205]
[27 204]
[28 203]
[29 202]
[30 200]
[31 199]
[32 193]
[33 191]
[34 190]
[35 189]
[36 188]
[39 186]
[40 185]
[41 184]
[44 182]
[45 181]
[46 180]
[47 179]
[48 178]
[49 177]
[50 176]
[51 175]
[54 172]
[56 170]
[57 169]
[58 168]
[61 167]
[62 166]
[63 165]
[64 164]
[65 163]
[67 162]
[68 161]
[69 160]
[70 159]
[71 158]
[92 157]
[93 156]
[94 155]
[96 153]
[97 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
