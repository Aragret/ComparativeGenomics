%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCUUCAGUCCCAAUCCCACCAAUAUCAUCACACGUACCAAUAAUGAAAAUAAACCUCAACGUGGUUUUAAAAACCCCGGAUUCUGGUUACCUAUCGAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[275.95858765 484.63946533]
[288.39599609 476.16610718]
[282.52700806 462.36193848]
[276.65805054 448.55776978]
[270.38070679 434.93444824]
[263.70050049 421.50405884]
[257.02032471 408.07369995]
[250.34011841 394.64331055]
[243.65992737 381.21295166]
[231.06422424 373.26324463]
[231.84602356 357.46136475]
[225.16583252 344.03100586]
[211.85147095 343.04617310]
[200.67269897 335.55087280]
[194.60902405 323.41409302]
[195.33993530 309.75817871]
[202.78132629 298.15573120]
[196.30183411 284.62738037]
[189.82234192 271.09902954]
[183.34283447 257.57070923]
[172.04165649 253.25679016]
[166.53276062 242.03912354]
[170.25895691 229.69091797]
[163.98159790 216.06761169]
[156.80624390 202.89512634]
[148.76506042 190.23260498]
[140.72389221 177.57008362]
[132.68272400 164.90756226]
[124.64154816 152.24502563]
[116.60037231 139.58250427]
[108.55919647 126.91998291]
[100.42398071 114.31766510]
[88.02384186 107.85793304]
[87.03461456 93.91114044]
[78.80580902 81.36973572]
[70.57700348 68.82833862]
[56.53729630 61.53469086]
[56.02438354 46.64891815]
[41.98468018 39.35527039]
[41.47176743 24.46949959]
[33.24296188 11.92809868]
[25.01415253 -0.61330158]
[10.97445011 -7.90695000]
[10.46153641 -22.79272079]
[6.51635313 -24.60641670]
[3.64255404 -27.30934143]
[1.98812664 -30.45549393]
[1.54101026 -33.59662628]
[2.14222932 -36.33462906]
[-5.32551193 -49.34358215]
[-12.79325294 -62.35253525]
[-20.26099396 -75.36148834]
[-27.72873497 -88.37043762]
[-35.19647598 -101.37939453]
[-43.14316177 -114.10142517]
[-57.28989792 -121.18524170]
[-58.02438354 -136.06172180]
[-66.43900299 -148.47921753]
[-74.85362244 -160.89671326]
[-83.26824188 -173.31420898]
[-96.62548828 -166.44825745]
[-110.71295929 -161.24244690]
[-125.32521820 -157.77268982]
[-140.24917603 -156.08959961]
[-155.26719666 -156.21769714]
[-170.16027832 -158.15512085]
[-184.71122742 -161.87362671]
[-198.70783997 -167.31898499]
[-211.94602966 -174.41178894]
[-224.23272705 -183.04859924]
[-235.38876343 -193.10345459]
[-245.25143433 -204.42974854]
[-253.67694092 -216.86230469]
[-260.54238892 -230.21980286]
[-265.74768066 -244.30747986]
[-269.21688843 -258.91986084]
[-270.89941406 -273.84390259]
[-270.77075195 -288.86190796]
[-268.83276367 -303.75491333]
[-265.11373901 -318.30572510]
[-259.66784668 -332.30212402]
[-252.57455444 -345.54006958]
[-243.93728638 -357.82641602]
[-233.88200378 -368.98208618]
[-222.55532837 -378.84432983]
[-210.12246704 -387.26937866]
[-196.76470947 -394.13433838]
[-182.67684937 -399.33908081]
[-168.06433105 -402.80773926]
[-153.14024353 -404.48971558]
[-138.12223816 -404.36050415]
[-123.22930145 -402.42196655]
[-108.67862701 -398.70236206]
[-94.68241882 -393.25595093]
[-81.44476318 -386.16217041]
[-69.15870667 -377.52444458]
[-58.00342941 -367.46875000]
[-48.14159775 -356.14172363]
[-39.71702957 -343.70852661]
[-32.85257721 -330.35052490]
[-27.64834595 -316.26245117]
[-24.18023109 -301.64981079]
[-22.49880409 -286.72567749]
[-22.62858582 -271.70767212]
[-24.56768608 -256.81478882]
[-28.28782654 -242.26426697]
[-33.73475647 -228.26824951]
[-40.82904053 -215.03086853]
[-49.46722794 -202.74514771]
[-59.52334213 -191.59024048]
[-70.85074615 -181.72882080]
[-62.43612289 -169.31134033]
[-54.02150726 -156.89384460]
[-45.60688782 -144.47634888]
[-32.06201935 -138.28071594]
[-30.72566605 -122.51604462]
[-25.37475586 -136.52917480]
[-11.12972164 -141.22801208]
[1.50852835 -133.14872742]
[3.22354650 -118.24710083]
[-7.24891472 -107.50803375]
[-22.18752480 -108.84713745]
[-14.71978283 -95.83818054]
[-7.25204182 -82.82923126]
[0.21569924 -69.82027435]
[7.68344021 -56.81132507]
[15.15118122 -43.80237198]
[23.00293732 -31.02153015]
[36.45405960 -24.62492561]
[37.55555344 -8.84210968]
[45.78436279 3.69929075]
[54.01316833 16.24069023]
[67.46429443 22.63729477]
[68.56578827 38.42011261]
[82.01690674 44.81671524]
[83.11840057 60.59952927]
[91.34720612 73.14093018]
[99.57601929 85.68233490]
[111.97615814 92.14206696]
[112.96538544 106.08885956]
[120.28964233 111.54716492]
[121.22172546 118.87880707]
[129.26289368 131.54133606]
[137.30407715 144.20385742]
[145.34524536 156.86637878]
[153.38641357 169.52890015]
[161.42758179 182.19143677]
[169.46876526 194.85395813]
[171.03115845 179.93554688]
[180.32772827 168.16380310]
[194.47779846 163.18632507]
[209.09684753 166.54544067]
[219.65498352 177.20028687]
[222.88064575 191.84934998]
[217.77435303 205.95346069]
[205.91833496 215.14228821]
[190.98629761 216.56860352]
[177.60491943 209.79025269]
[183.88227844 223.41355896]
[199.16072083 233.69221497]
[196.87118530 251.09120178]
[203.35067749 264.61953735]
[209.83016968 278.14788818]
[216.30967712 291.67623901]
[232.98579407 294.50518799]
[244.57472229 306.59643555]
[246.65226746 323.04776001]
[238.59620667 337.35079956]
[245.27639771 350.78118896]
[258.34991455 359.69149780]
[257.09030151 374.53274536]
[263.77050781 387.96313477]
[270.45068359 401.39349365]
[277.13088989 414.82388306]
[283.81106567 428.25424194]
[287.51278687 430.52389526]
[290.04501343 433.54916382]
[291.31387329 436.86962891]
[291.38455200 440.04162598]
[290.46224976 442.68881226]
[296.33120728 456.49298096]
[302.20016479 470.29714966]
[316.93154907 467.21945190]
[331.98031616 467.07513428]
[346.76803589 469.86978149]
[360.72625732 475.49594116]
[373.31854248 483.73736572]
[384.06082153 494.27728271]
[392.54019165 506.71057129]
[398.43072510 520.55932617]
[401.50604248 535.29119873]
[401.64791870 550.33996582]
[398.85089111 565.12725830]
[393.22247314 579.08459473]
[384.97900391 591.67547607]
[374.43734741 602.41607666]
[362.00271606 610.89343262]
[348.15301514 616.78173828]
[333.42062378 619.85467529]
[318.37182617 619.99407959]
[303.58502197 617.19470215]
[289.62860107 611.56402588]
[277.03900146 603.31848145]
[266.30014038 592.77508545]
[257.82479858 580.33911133]
[251.93872070 566.48846436]
[248.86816406 551.75555420]
[248.73117065 536.70672607]
[251.53298950 521.92034912]
[257.16592407 507.96487427]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 182]
[3 181]
[4 180]
[5 175]
[6 174]
[7 173]
[8 172]
[9 171]
[11 169]
[12 168]
[17 164]
[18 163]
[19 162]
[20 161]
[23 159]
[24 158]
[25 148]
[26 147]
[27 146]
[28 145]
[29 144]
[30 143]
[31 142]
[32 140]
[34 138]
[35 137]
[36 136]
[38 134]
[40 132]
[41 131]
[42 130]
[44 128]
[49 127]
[50 126]
[51 125]
[52 124]
[53 123]
[54 122]
[55 116]
[57 114]
[58 113]
[59 112]
[60 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
