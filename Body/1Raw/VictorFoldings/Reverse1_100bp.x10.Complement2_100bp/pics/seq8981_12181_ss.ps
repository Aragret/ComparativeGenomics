%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[149.16896057 626.52990723]
[161.64601135 617.57342529]
[160.08547974 602.65484619]
[158.52496338 587.73620605]
[156.96444702 572.81762695]
[145.26812744 563.66711426]
[143.47300720 548.55975342]
[153.15022278 536.35363770]
[151.58969116 521.43499756]
[150.02917480 506.51641846]
[148.46864319 491.59780884]
[146.90812683 476.67919922]
[137.88873291 464.82595825]
[144.14834595 450.29571533]
[141.70262146 435.49642944]
[138.38035583 420.86898804]
[135.05810547 406.24151611]
[131.73583984 391.61404419]
[128.41357422 376.98660278]
[125.09132385 362.35913086]
[121.76905823 347.73168945]
[107.16856384 339.38516235]
[103.04089355 322.73352051]
[112.41432190 307.96334839]
[108.87464905 293.38696289]
[105.33497620 278.81057739]
[94.81283569 268.26858521]
[99.07508087 253.03231812]
[94.46041870 267.30484009]
[84.50033569 278.52075195]
[70.87327576 284.78997803]
[55.87563324 285.05603027]
[42.03477859 279.27410889]
[31.68314362 268.41851807]
[26.56515312 254.31866455]
[27.54328156 239.35058594]
[34.45269775 226.03668213]
[46.12904358 216.62059021]
[60.60464478 212.68905640]
[75.44011688 214.90464783]
[88.13541412 222.89396667]
[96.55178833 235.31224060]
[95.88200378 220.32719421]
[95.21221924 205.34216309]
[94.54243469 190.35711670]
[93.87265015 175.37208557]
[93.20286560 160.38703918]
[92.53308105 145.40200806]
[91.86329651 130.41696167]
[80.96799469 140.72679138]
[65.97053528 140.45065308]
[55.46214676 129.74674988]
[55.46250534 114.74674225]
[65.97141266 104.04333496]
[80.96887970 103.76791382]
[91.86329651 114.07740021]
[84.53608704 105.02458954]
[85.14273071 93.39389038]
[93.37198639 85.15248871]
[94.26480103 70.17908478]
[95.15762329 55.20568085]
[96.05043793 40.23227310]
[96.94325256 25.25886726]
[85.09408569 12.38965607]
[86.19672394 -4.73048019]
[99.08145905 -15.53892517]
[99.75124359 -30.52396393]
[100.42102814 -45.50900269]
[93.30765533 -59.64089966]
[101.60553741 -72.00998688]
[102.27532196 -86.99502563]
[102.94511414 -101.98006439]
[102.94511414 -116.98006439]
[102.27532196 -131.96510315]
[101.60553741 -146.95014954]
[100.60128021 -161.91648865]
[99.26304626 -176.85667419]
[97.59150696 -191.76324463]
[95.58749390 -206.62876892]
[93.47286987 -221.47897339]
[91.24774933 -236.31301880]
[89.02263641 -251.14706421]
[86.79751587 -265.98110962]
[76.90799713 -274.26119995]
[75.36007690 -286.66232300]
[82.44236755 -296.46884155]
[80.43835449 -311.33438110]
[78.43434143 -326.19989014]
[63.43722534 -327.67749023]
[49.18531418 -332.57440186]
[36.44718933 -340.62652588]
[25.90980721 -351.39965820]
[18.14143181 -364.31280518]
[13.56100368 -378.66955566]
[12.41553879 -393.69567871]
[14.76681042 -408.58087158]
[20.48801804 -422.52233887]
[29.27062416 -434.76824951]
[40.64099503 -444.65820312]
[53.98593521 -451.65887451]
[68.58577728 -455.39266968]
[83.65316772 -455.65829468]
[98.37553406 -452.44137573]
[111.95892334 -445.91540527]
[123.67080688 -436.43234253]
[132.87956238 -424.50357056]
[139.08859253 -410.77239990]
[141.96302795 -395.97937012]
[141.34786987 -380.92221069]
[137.27630615 -366.41293335]
[129.96788025 -353.23400879]
[119.81674194 -342.09619141]
[107.37033844 -333.60009766]
[93.29986572 -328.20391846]
[95.30388641 -313.33837891]
[97.30789948 -298.47286987]
[108.76702881 -285.18170166]
[101.63156128 -268.20620728]
[103.85667419 -253.37217712]
[106.08179474 -238.53813171]
[108.30690765 -223.70408630]
[112.40785980 -217.55558777]
[110.45301819 -208.63278198]
[112.45703125 -193.76725769]
[115.02423096 -191.35026550]
[116.54827118 -187.56974792]
[116.40105438 -182.92953491]
[114.20323181 -178.19490051]
[115.54146576 -163.25471497]
[117.99817657 -160.72550964]
[119.35189056 -156.88070679]
[118.99762726 -152.25169373]
[116.59057617 -147.61993408]
[117.26036072 -132.63488770]
[117.93015289 -117.64984894]
[128.82545471 -127.95967102]
[143.82290649 -127.68354034]
[154.33129883 -116.97962952]
[154.33093262 -101.97962952]
[143.82203674 -91.27622223]
[128.82456970 -91.00080109]
[117.93015289 -101.31027985]
[117.26036072 -86.32524109]
[116.59057617 -71.34020233]
[123.75186157 -58.28013611]
[115.40606689 -44.83921814]
[114.73628235 -29.85417938]
[114.06649780 -14.86914062]
[124.00671387 -6.67026615]
[127.46128082 5.94512463]
[122.95287323 18.43050385]
[111.91665649 26.15168381]
[111.02384186 41.12509155]
[110.13102722 56.09849548]
[109.23821259 71.07189941]
[108.34539032 86.04530334]
[116.23766327 100.84693909]
[106.84833527 114.74718475]
[106.84833527 129.74717712]
[107.51811981 144.73222351]
[108.18790436 159.71725464]
[108.85768890 174.70230103]
[109.52747345 189.68733215]
[110.19725800 204.67237854]
[110.86704254 219.65740967]
[111.53682709 234.64245605]
[113.65145111 249.49264526]
[124.42678070 261.07723999]
[119.91135406 275.27090454]
[123.45102692 289.84729004]
[126.99069977 304.42367554]
[139.22343445 310.06057739]
[145.87896729 321.54598999]
[144.72140503 334.57449341]
[136.39651489 344.40942383]
[139.71878052 359.03686523]
[143.04104614 373.66433716]
[146.36329651 388.29180908]
[149.68556213 402.91925049]
[153.00781250 417.54672241]
[156.33007812 432.17419434]
[163.45912170 418.97656250]
[176.93371582 412.38604736]
[191.72817993 414.86065674]
[202.32453918 425.47750854]
[204.77061462 440.27670288]
[198.15408325 453.73855591]
[184.94274902 460.84213257]
[170.06410217 458.93792725]
[159.06695557 448.73519897]
[168.19796753 461.65551758]
[161.82673645 475.11868286]
[163.38725281 490.03729248]
[164.94776917 504.95590210]
[166.50830078 519.87451172]
[168.06881714 534.79309082]
[180.06248474 544.73242188]
[181.43255615 559.88421631]
[171.88304138 571.25708008]
[173.44357300 586.17572021]
[175.00408936 601.09429932]
[176.56462097 616.01293945]
[190.62504578 622.19354248]
[199.69847107 634.58581543]
[201.34420776 649.85626221]
[195.11955261 663.89727783]
[182.69889832 672.93176270]
[167.42333984 674.52966309]
[153.40194702 668.26098633]
[144.40637207 655.81213379]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 202]
[3 201]
[4 200]
[5 199]
[8 196]
[9 195]
[10 194]
[11 193]
[12 192]
[14 190]
[15 181]
[16 180]
[17 179]
[18 178]
[19 177]
[20 176]
[21 175]
[24 171]
[25 170]
[26 169]
[28 167]
[42 166]
[43 165]
[44 164]
[45 163]
[46 162]
[47 161]
[48 160]
[49 159]
[56 158]
[59 156]
[60 155]
[61 154]
[62 153]
[63 152]
[66 148]
[67 147]
[68 146]
[70 144]
[71 143]
[72 142]
[73 135]
[74 134]
[75 133]
[76 129]
[77 128]
[78 124]
[79 123]
[80 121]
[81 120]
[82 119]
[83 118]
[86 116]
[87 115]
[88 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
