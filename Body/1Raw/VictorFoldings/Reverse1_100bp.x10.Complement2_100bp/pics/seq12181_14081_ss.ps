%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUAGGAAAUUUUCAACUCUUUCGGUACAACAAUCUGUACCCCCGUACUCAAUCGUCAAGAACACUCGAAAGAGCCAUUUAUUCCCCAGCAUUCGGAGAxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[67.05061340 541.36212158]
[52.15496063 543.61322021]
[37.13190460 542.49273682]
[22.73498535 538.05694580]
[9.68635082 530.52825928]
[-1.35948634 520.28436279]
[-9.84847069 507.83908081]
[-15.35479832 493.81668091]
[-17.60227585 478.92050171]
[-16.47816849 463.89770508]
[-12.03886223 449.50186157]
[-4.50703001 436.45504761]
[5.73953342 425.41168213]
[18.18686485 416.92572021]
[32.21061325 411.42279053]
[47.10734940 409.17892456]
[48.22299957 394.22045898]
[49.33864975 379.26202393]
[50.45429611 364.30355835]
[51.56994629 349.34512329]
[52.68559647 334.38665771]
[42.80170059 323.30316162]
[43.72003555 308.11724854]
[55.41246033 297.82525635]
[56.52810669 282.86682129]
[57.53236771 267.90048218]
[49.15748596 280.34478760]
[36.70051193 288.70086670]
[22.00936317 291.72909546]
[7.26338387 288.98025513]
[-5.34994745 280.86212158]
[-13.95951843 268.57901001]
[-17.28814888 253.95298767]
[-14.84205914 239.15377808]
[-6.98410940 226.37675476]
[5.12001896 217.51728821]
[19.67475128 213.88964844]
[34.52097702 216.03196716]
[47.45635223 223.62644958]
[56.56198502 235.54649353]
[60.48697662 250.02192688]
[64.45907593 235.55740356]
[68.43116760 221.09286499]
[72.40326691 206.62834167]
[76.37535858 192.16381836]
[79.58863831 177.51203918]
[82.03436279 162.71276855]
[84.48008728 147.91349792]
[86.92581940 133.11422729]
[81.36721802 119.29571533]
[91.25107574 106.94177246]
[93.58656311 92.12470245]
[95.81168365 77.29065704]
[98.03679657 62.45661545]
[100.26191711 47.62257004]
[94.65735626 32.82732010]
[104.19702911 21.38861847]
[106.42214203 6.55457497]
[108.64726257 -8.27946854]
[100.07117462 4.02706289]
[88.83171082 13.96056557]
[75.56452179 20.95924950]
[61.01992035 24.62730789]
[46.02048111 24.75729370]
[31.41449928 21.34185219]
[18.02800751 14.57414818]
[6.61807775 4.83692455]
[-2.17000151 -7.31913042]
[-7.83922243 -21.20653152]
[-10.06896305 -36.03988266]
[-8.73312092 -50.98028183]
[-3.90724397 -65.18277740]
[4.13574076 -77.84415436]
[14.94096375 -88.24834442]
[27.89733696 -95.80693817]
[42.27211380 -100.09246826]
[57.25233078 -100.86256409]
[71.99079132 -98.07367706]
[85.65395355 -91.88352203]
[97.46910095 -82.64218903]
[106.76803589 -70.87231445]
[113.02484894 -57.23955536]
[115.88570404 -42.51489639]
[115.18860626 -27.53003693]
[122.46183777 -40.64873123]
[129.73506165 -53.76742554]
[137.00830078 -66.88611603]
[143.38690186 -80.46232605]
[148.84225464 -94.43512726]
[146.65380859 -110.10424042]
[158.49003601 -119.14596558]
[156.30157471 -134.81507874]
[168.13781738 -143.85681152]
[173.59317017 -157.82960510]
[179.04853821 -171.80239868]
[165.90692139 -179.08122253]
[153.85276794 -188.04676819]
[143.10121155 -198.53903198]
[133.84410095 -210.37074280]
[126.24667358 -223.33078003]
[120.44449615 -237.18783569]
[116.54110718 -251.69462585]
[114.60618591 -266.59225464]
[114.67425537 -281.61486816]
[116.74409485 -296.49435425]
[120.77877045 -310.96517944]
[126.70627594 -324.76910400]
[134.42083740 -337.65975952]
[143.78477478 -349.40710449]
[154.63096619 -359.80151367]
[166.76585388 -368.65744019]
[179.97290039 -375.81689453]
[194.01637268 -381.15206909]
[208.64567566 -384.56777954]
[223.59971619 -386.00305176]
[238.61163330 -385.43225098]
[253.41351318 -382.86560059]
[267.74121094 -378.34890747]
[281.33901978 -371.96273804]
[293.96426392 -363.82110596]
[305.39166260 -354.06927490]
[315.41723633 -342.88128662]
[323.86212158 -330.45678711]
[330.57556152 -317.01754761]
[335.43774414 -302.80340576]
[338.36193848 -288.06796265]
[339.29595947 -273.07427979]
[338.22308350 -258.08987427]
[335.16250610 -243.38217163]
[330.16882324 -229.21366882]
[323.33117676 -215.83720398]
[314.77154541 -203.49148560]
[304.64276123 -192.39686584]
[293.12548828 -182.75132751]
[280.42535400 -174.72698975]
[266.76898193 -168.46708679]
[252.40005493 -164.08331299]
[237.57502747 -161.65390015]
[222.55845642 -161.22221375]
[207.61836243 -162.79595947]
[193.02133179 -166.34704590]
[187.56597900 -152.37425232]
[182.11061096 -138.40144348]
[184.68927002 -123.73175812]
[172.46282959 -113.69060516]
[175.04150391 -99.02091980]
[162.81506348 -88.97976685]
[157.35969543 -75.00696564]
[170.31364441 -82.56971741]
[185.30410767 -82.03485107]
[197.68612671 -73.56810760]
[203.62298584 -59.79299927]
[201.27510071 -44.97789001]
[191.36997986 -33.71340561]
[176.97683716 -29.48996925]
[162.55554199 -33.61625671]
[152.57469177 -44.81369400]
[150.12699890 -59.61288834]
[142.85375977 -46.49419403]
[135.58053589 -33.37549973]
[128.30729675 -20.25680733]
[123.48130798 -6.05435181]
[121.25618744 8.77969170]
[119.03107452 23.61373520]
[124.79479218 37.34795761]
[115.09596252 49.84768677]
[112.87084198 64.68173218]
[110.64572906 79.51577759]
[108.42060852 94.34981537]
[110.43428040 102.15479279]
[106.05034637 109.38749695]
[111.43401337 124.26454926]
[101.72509003 135.55995178]
[99.27935791 150.35922241]
[96.83363342 165.15849304]
[94.38790894 179.95776367]
[106.53063965 171.15129089]
[121.50155640 172.08483887]
[132.45616150 182.33161926]
[134.38615417 197.20693970]
[126.40917969 209.91000366]
[112.17218018 214.63313293]
[98.18413544 209.21697998]
[90.83988190 196.13592529]
[86.86779022 210.60044861]
[82.89569092 225.06497192]
[78.92359924 239.52949524]
[74.95149994 253.99401855]
[72.50577545 268.79327393]
[75.11884308 277.54598999]
[71.48655701 283.98245239]
[70.37091064 298.94091797]
[80.40724945 310.85351562]
[79.06272888 326.00759888]
[67.64405060 335.50231934]
[66.52839661 350.46075439]
[65.41275024 365.41921997]
[64.29710388 380.37765503]
[63.18145370 395.33612061]
[62.06580353 410.29458618]
[76.46487427 414.72341919]
[89.51715088 422.24575806]
[100.56795502 432.48428345]
[109.06296539 444.92544556]
[114.57608795 458.94519043]
[116.83078766 473.84030151]
[115.71395874 488.86364746]
[111.28162384 503.26162720]
[103.75611877 516.31207275]
[93.51490784 527.36041260]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 200]
[17 199]
[18 198]
[19 197]
[20 196]
[21 195]
[24 192]
[25 191]
[26 189]
[41 188]
[42 187]
[43 186]
[44 185]
[45 184]
[46 176]
[47 175]
[48 174]
[49 173]
[51 171]
[52 169]
[53 168]
[54 167]
[55 166]
[57 164]
[58 163]
[59 162]
[84 161]
[85 160]
[86 159]
[87 158]
[88 148]
[89 147]
[91 145]
[93 143]
[94 142]
[95 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
