%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[139.87797546 519.37884521]
[138.19761658 504.45828247]
[138.14031982 489.44348145]
[139.70678711 474.51052856]
[142.87863159 459.83447266]
[147.61866760 445.58737183]
[153.87132263 431.93630981]
[161.56329346 419.04132080]
[170.60438538 407.05358887]
[180.88859558 396.11364746]
[192.29536438 386.34979248]
[204.69093323 377.87646484]
[197.61381531 364.65093994]
[190.53671265 351.42541504]
[183.45960999 338.19989014]
[170.63279724 330.62875366]
[170.94377136 314.81060791]
[163.76841736 301.63812256]
[156.49517822 288.51943970]
[149.22195435 275.40072632]
[141.94871521 262.28204346]
[134.67549133 249.16334534]
[133.67852783 264.13018799]
[126.36188507 277.22470093]
[114.13828278 285.91857910]
[99.36790466 288.53314209]
[84.90268707 284.56359863]
[73.53562927 274.77633667]
[67.46154022 261.06118774]
[67.85322571 246.06631470]
[74.63506317 232.68696594]
[86.49757385 223.50651550]
[101.15030670 220.29756165]
[115.76403809 223.67967224]
[127.51789856 233.00085449]
[122.69190216 218.79838562]
[117.86589813 204.59593201]
[110.28148651 217.53721619]
[95.80307007 221.45835876]
[82.72454071 214.11315918]
[78.53787231 199.70927429]
[85.64138031 186.49790955]
[99.96585846 182.04713440]
[113.30496979 188.90582275]
[109.76529694 174.32945251]
[106.22562408 159.75308228]
[102.68595123 145.17669678]
[98.05281830 139.41859436]
[99.20380402 130.35696411]
[95.88154602 115.72950745]
[84.17134094 103.71920776]
[89.30743408 87.75058746]
[85.76776123 73.17421722]
[82.16350555 69.39844513]
[80.53120422 65.05230713]
[80.75789642 60.98246384]
[82.41097260 57.86802673]
[79.52569580 43.14813614]
[76.64042664 28.42824554]
[73.64565277 13.73024082]
[70.54154205 -0.94506127]
[67.43743134 -15.62036324]
[64.33332062 -30.29566574]
[61.22920990 -44.97097015]
[58.01593399 -59.62275696]
[54.69367599 -74.25021362]
[50.72158051 -88.71473694]
[46.10757065 -102.98747253]
[41.49356079 -117.26020813]
[27.70266724 -124.50238037]
[23.22672653 -139.04267883]
[30.21601868 -152.14556885]
[25.60200882 -166.41830444]
[20.98799896 -180.69102478]
[16.37398911 -194.96376038]
[11.12550259 -180.91195679]
[-0.82272500 -171.84333801]
[-15.76840401 -170.56791687]
[-29.08045197 -177.48089600]
[-36.63398743 -190.44023132]
[-36.08846664 -205.43029785]
[-27.61292076 -217.80628967]
[-13.83359432 -223.73336792]
[0.97984099 -221.37493896]
[12.23741817 -211.46159363]
[9.57162285 -226.22280884]
[6.90582752 -240.98403931]
[4.24003220 -255.74525452]
[-10.79723167 -256.98748779]
[-25.00027275 -262.08023071]
[-37.40070343 -270.67623901]
[-47.15304565 -282.18945312]
[-53.59236526 -295.83489990]
[-56.27962112 -310.68215942]
[-55.03158569 -325.71893311]
[-49.93336105 -339.92001343]
[-41.33254623 -352.31710815]
[-29.81556129 -362.06500244]
[-16.16765213 -368.49905396]
[-1.31935704 -371.18057251]
[13.71694279 -369.92675781]
[27.91604614 -364.82302856]
[40.30983734 -356.21743774]
[50.05328369 -344.69668579]
[56.48206711 -331.04629517]
[59.15785217 -316.19696045]
[57.89820862 -301.16116333]
[52.78901672 -286.96401978]
[44.17863083 -274.57354736]
[32.65412140 -264.83456421]
[19.00124931 -258.41104126]
[21.66704559 -243.64982605]
[24.33283997 -228.88861084]
[26.99863625 -214.12739563]
[30.64672279 -199.57777405]
[35.26073074 -185.30503845]
[39.87474060 -171.03230286]
[44.48875046 -156.75956726]
[57.82549286 -150.22758484]
[62.70807648 -135.81872559]
[55.76629257 -121.87421417]
[60.38030243 -107.60148621]
[64.99431610 -93.32875061]
[72.77056122 -106.15567017]
[87.30575562 -109.86081696]
[100.27347565 -102.32170868]
[104.24523163 -87.85708618]
[96.94580841 -74.75295258]
[82.55665588 -70.51593781]
[69.32113647 -77.57247925]
[72.64339447 -62.94501495]
[77.19028473 -57.11856079]
[75.90451050 -48.07507706]
[79.00862122 -33.39977646]
[82.11273193 -18.72447395]
[85.21684265 -4.04917145]
[88.32095337 10.62613106]
[92.78059387 16.51963425]
[91.36031342 25.54297256]
[94.24559021 40.26286316]
[97.13085938 54.98275375]
[100.34413147 69.63454437]
[103.88380432 84.21091461]
[113.44671631 90.85861969]
[116.11071014 102.19636536]
[110.50901031 112.40724945]
[113.83126831 127.03470612]
[117.26232910 141.63702393]
[120.80200195 156.21340942]
[124.34167480 170.78977966]
[127.88134766 185.36614990]
[132.06835938 199.76994324]
[136.89434814 213.97239685]
[141.72035217 228.17485046]
[147.79418945 241.89012146]
[155.06741333 255.00880432]
[162.34065247 268.12750244]
[169.61387634 281.24618530]
[176.88710022 294.36489868]
[183.78511047 300.35284424]
[184.16931152 307.73348999]
[197.50231934 316.25061035]
[196.68513489 331.12280273]
[203.76223755 344.34832764]
[210.83935547 357.57385254]
[217.91645813 370.79937744]
[231.84315491 365.18737793]
[246.29498291 361.11407471]
[261.10250854 358.62719727]
[276.09210205 357.75585938]
[291.08804321 358.51034546]
[305.91448975 360.88180542]
[320.39761353 364.84237671]
[334.36761475 370.34567261]
[347.66070557 377.32714844]
[360.12100220 385.70495605]
[371.60247803 395.38088989]
[381.97045898 406.24145508]
[391.10339355 418.15936279]
[398.89422607 430.99487305]
[405.25158691 444.59747314]
[410.10098267 458.80770874]
[413.38549805 473.45898438]
[415.06668091 488.37945557]
[415.12475586 503.39425659]
[413.55911255 518.32727051]
[410.38806152 533.00354004]
[405.64877319 547.25085449]
[399.39685059 560.90228271]
[391.70559692 573.79766846]
[382.66513062 585.78588867]
[372.38153076 596.72637939]
[360.97528076 606.49084473]
[348.58016968 614.96484375]
[335.34149170 622.04895020]
[321.41448975 627.66021729]
[306.96246338 631.73272705]
[292.15481567 634.21881104]
[277.16516113 635.08935547]
[262.16925049 634.33404541]
[247.34294128 631.96179199]
[232.86003113 628.00042725]
[218.89031982 622.49639893]
[205.59761047 615.51422119]
[193.13774109 607.13574219]
[181.65679932 597.45922852]
[171.28941345 586.59808350]
[162.15710449 574.67968750]
[154.36697388 561.84375000]
[148.01033020 548.24078369]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 166]
[13 165]
[14 164]
[15 163]
[17 161]
[18 159]
[19 158]
[20 157]
[21 156]
[22 155]
[35 154]
[36 153]
[37 152]
[44 151]
[45 150]
[46 149]
[47 148]
[49 147]
[50 146]
[52 143]
[53 142]
[57 141]
[58 140]
[59 139]
[60 137]
[61 136]
[62 135]
[63 134]
[64 133]
[65 131]
[66 130]
[67 123]
[68 122]
[69 121]
[72 118]
[73 117]
[74 116]
[75 115]
[85 114]
[86 113]
[87 112]
[88 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
