%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[160.06370544 712.57910156]
[159.82711792 697.54779053]
[162.00492859 682.67321777]
[166.54071045 668.34063721]
[173.31698608 654.92132568]
[182.15823364 642.76281738]
[192.83543396 632.18017578]
[205.07203674 623.44732666]
[218.55108643 616.79064941]
[214.15008545 602.45080566]
[209.74908447 588.11096191]
[205.34809875 573.77111816]
[194.81187439 567.82849121]
[191.02796936 555.91778564]
[196.54469299 544.25891113]
[192.35768127 529.85516357]
[188.17066956 515.45135498]
[183.98365784 501.04757690]
[169.47569275 502.44918823]
[154.95385742 501.15234375]
[140.91589355 497.19989014]
[127.84328461 490.72583008]
[116.18467712 481.95065308]
[106.34049225 471.17388916]
[98.64918518 458.76373291]
[93.37562561 445.14471436]
[90.70194244 430.78298950]
[90.72124481 416.17037964]
[93.43439484 401.80761719]
[98.74990845 388.18722534]
[106.48706055 375.77645874]
[116.38199615 365.00140381]
[128.09677124 356.23236084]
[141.23083496 349.77102661]
[137.25874329 335.30651855]
[133.28663635 320.84197998]
[129.31454468 306.37747192]
[125.34244537 291.91293335]
[121.37035370 277.44842529]
[115.49965668 291.25186157]
[103.15840912 299.77789307]
[88.17068481 300.38470459]
[75.18059540 292.88418579]
[68.21325684 279.60049438]
[69.42758179 264.64974976]
[78.44728851 252.66455078]
[92.47753143 247.35867310]
[107.17087555 250.37619019]
[117.97457123 260.78231812]
[115.97055817 245.91679382]
[113.96654510 231.05126953]
[111.96253204 216.18574524]
[109.62704468 201.36866760]
[106.96125031 186.60745239]
[104.29545593 171.84623718]
[101.62966156 157.08502197]
[91.06977081 152.76588440]
[83.83122253 143.79263306]
[81.80236053 132.32189941]
[85.60111237 121.18321228]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[88.54757690 74.21002960]
[78.65805817 65.92992401]
[77.11014557 53.52880478]
[84.19242859 43.72229004]
[82.18841553 28.85676193]
[80.18440247 13.99123383]
[78.18038940 -0.87429488]
[76.17637634 -15.73982334]
[66.66472626 -28.38257027]
[72.63228607 -42.02945328]
[70.62827301 -56.89498138]
[67.43638611 -61.02523422]
[66.26509857 -65.51760101]
[66.91396332 -69.54177856]
[68.88207245 -72.46733856]
[67.54383850 -87.40752411]
[66.20560455 -102.34770966]
[64.86737061 -117.28789520]
[63.52914047 -132.22807312]
[62.19090652 -147.16825867]
[58.70618439 -152.78681946]
[58.59825134 -158.46884155]
[61.04203415 -162.57212830]
[60.14921951 -177.54553223]
[58.69980240 -192.47534180]
[56.69578552 -207.34088135]
[54.69177246 -222.20640564]
[52.68775940 -237.07192993]
[37.77502441 -239.54211426]
[24.25366211 -246.29963684]
[13.32598209 -256.74365234]
[5.96366644 -269.94543457]
[2.82136655 -284.73117065]
[4.17849398 -299.78604126]
[9.91437435 -313.77142334]
[19.51897621 -325.44375610]
[32.13826752 -333.76510620]
[46.65014267 -337.99557495]
[61.76422501 -337.75897217]
[76.13657379 -333.07635498]
[88.48921204 -324.36407471]
[97.72374725 -312.39682007]
[103.01905823 -298.23876953]
[103.90428925 -283.14877319]
[100.30072021 -268.46865845]
[92.52877808 -255.50376892]
[81.27954102 -245.40692139]
[67.55329132 -239.07594299]
[69.55730438 -224.21041870]
[71.56131744 -209.34489441]
[73.56533051 -194.47935486]
[84.59700775 -204.64312744]
[99.44402313 -202.50628662]
[107.16171265 -189.64404297]
[102.06088257 -175.53796387]
[87.90167236 -170.58651733]
[75.12262726 -178.43835449]
[76.01544189 -163.46495056]
[77.13108826 -148.50650024]
[78.46932220 -133.56631470]
[79.80755615 -118.62612915]
[81.14579010 -103.68594360]
[82.48402405 -88.74575806]
[83.82225800 -73.80557251]
[85.49380493 -58.89899826]
[87.49781799 -44.03346634]
[96.86612701 -32.45400238]
[91.04190826 -17.74383736]
[93.04592133 -2.87830853]
[95.04993439 11.98721981]
[97.05394745 26.85274887]
[99.05796051 41.71827698]
[110.51709747 55.00944519]
[103.38162231 71.98491669]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[124.88098907 121.62721252]
[127.71504211 140.03593445]
[116.39087677 154.41921997]
[119.05667114 169.18043518]
[121.72246552 183.94166565]
[124.38825989 198.70288086]
[127.76139069 202.68647766]
[129.13211060 207.12207031]
[128.66357422 211.17120361]
[126.82806396 214.18173218]
[128.83207703 229.04725647]
[130.83609009 243.91278076]
[132.84010315 258.77832031]
[135.83486938 273.47631836]
[139.80697632 287.94082642]
[143.77906799 302.40536499]
[147.75115967 316.86987305]
[151.72326660 331.33441162]
[155.69535828 345.79891968]
[171.10725403 344.66232300]
[186.44128418 346.54458618]
[201.11192322 351.37200928]
[214.55935669 358.95846558]
[226.27081299 369.01266479]
[235.80012512 381.14910889]
[242.78469849 394.90316772]
[246.95938110 409.74859619]
[248.16642761 425.11785889]
[246.36152649 440.42376709]
[241.61543274 455.08187866]
[234.11114502 468.53280640]
[224.13688660 480.26370239]
[212.07504272 489.82757568]
[198.38743591 496.86056519]
[202.57444763 511.26434326]
[206.76145935 525.66815186]
[210.94847107 540.07189941]
[224.53314209 552.50323486]
[219.68794250 569.37011719]
[224.08894348 583.70996094]
[228.48992920 598.04980469]
[232.89093018 612.38964844]
[247.78356934 610.33886719]
[262.81231689 610.70373535]
[277.58786011 613.47485352]
[291.72753906 618.58032227]
[304.86508179 625.88793945]
[316.66015625 635.20843506]
[326.80728149 646.30047607]
[335.04360962 658.87658691]
[341.15579224 672.61108398]
[344.98550415 687.14825439]
[346.43359375 702.11157227]
[345.46249390 717.11334229]
[342.09738159 731.76501465]
[336.42544556 745.68713379]
[328.59356689 758.51904297]
[318.80462646 769.92834473]
[307.31216431 779.61956787]
[294.41387939 787.34161377]
[280.44384766 792.89459229]
[265.76397705 796.13452148]
[250.75445557 796.97753906]
[235.80410767 795.40179443]
[221.30015564 791.44812012]
[207.61828613 785.21893311]
[195.11289978 776.87554932]
[184.10792542 766.63415527]
[174.88841248 754.75994873]
[167.69317627 741.56054688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 182]
[10 181]
[11 180]
[12 179]
[15 177]
[16 176]
[17 175]
[18 174]
[34 159]
[35 158]
[36 157]
[37 156]
[38 155]
[39 154]
[49 153]
[50 152]
[51 151]
[52 150]
[53 146]
[54 145]
[55 144]
[56 143]
[61 140]
[63 138]
[64 137]
[67 135]
[68 134]
[69 133]
[70 132]
[71 131]
[73 129]
[74 128]
[78 127]
[79 126]
[80 125]
[81 124]
[82 123]
[83 122]
[86 121]
[87 120]
[88 114]
[89 113]
[90 112]
[91 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
