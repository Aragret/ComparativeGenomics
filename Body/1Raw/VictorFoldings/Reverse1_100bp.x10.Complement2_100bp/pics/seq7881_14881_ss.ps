%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[86.01500702 801.82385254]
[71.01399231 801.15332031]
[56.18237686 798.80743408]
[41.70668793 794.81567383]
[27.76896667 789.22814941]
[14.54449940 782.11529541]
[2.19959545 773.56640625]
[-9.11049461 763.68902588]
[-19.24353409 752.60748291]
[-28.07208824 740.46099854]
[-35.48513031 727.40240479]
[-41.38943100 713.59588623]
[-45.71074295 699.21514893]
[-48.39471436 684.44097900]
[-49.40759659 669.45916748]
[-48.73664856 654.45819092]
[-46.39030838 639.62664795]
[-42.39808655 625.15106201]
[-36.81018829 611.21350098]
[-29.69688225 597.98925781]
[-21.14763260 585.64459229]
[-11.26995277 574.33483887]
[-0.18806441 564.20208740]
[11.95866585 555.37390137]
[25.01747894 547.96124268]
[38.82414627 542.05737305]
[53.20503616 537.73651123]
[67.97929382 535.05297852]
[82.96112061 534.04052734]
[83.63090515 519.05548096]
[84.30068970 504.07046509]
[84.85890198 489.08084106]
[85.30550385 474.08749390]
[85.75211334 459.09414673]
[86.19871521 444.10079956]
[86.64532471 429.10745239]
[87.09192657 414.11410522]
[87.53853607 399.12075806]
[80.18360138 386.16876221]
[88.32835388 372.60507202]
[88.66333008 357.60879517]
[88.88665771 342.61047363]
[89.10998535 327.61212158]
[89.33331299 312.61380005]
[81.78636169 299.77273560]
[89.72827148 286.08929443]
[89.95159912 271.09094238]
[79.42552185 260.61538696]
[79.43835449 245.40176392]
[90.49745178 234.43208313]
[90.72077942 219.43374634]
[83.17382812 206.59268188]
[91.11573792 192.90924072]
[83.56877899 180.06817627]
[91.51068878 166.38473511]
[91.73401642 151.38639832]
[91.95734406 136.38806152]
[92.18067169 121.38972473]
[79.08417511 109.01057434]
[79.08417511 90.98942566]
[92.18067169 78.61027527]
[91.95734406 63.61194229]
[91.73401642 48.61360550]
[91.39904022 33.61734390]
[90.95243835 18.62399483]
[90.50582886 3.63064504]
[89.50157166 -11.33569908]
[87.94104767 -26.25430489]
[86.38052368 -41.17290878]
[84.81999969 -56.09151459]
[83.14846039 -70.99808502]
[73.82609558 -83.78104401]
[79.99617767 -97.33757019]
[78.10288239 -112.21760559]
[76.09886932 -127.08313751]
[74.09485626 -141.94866943]
[72.09084320 -156.81419373]
[59.80656052 -166.39198303]
[57.98596954 -181.49629211]
[67.19264221 -193.14845276]
[65.18862915 -208.01397705]
[63.18461227 -222.87951660]
[61.18059921 -237.74504089]
[56.93272781 -245.83166504]
[59.25911713 -252.84661865]
[57.47665024 -267.74032593]
[45.33633041 -277.49996948]
[43.74082184 -292.62969971]
[53.11995316 -304.14349365]
[51.33749008 -319.03723145]
[49.55502319 -333.93093872]
[47.77255630 -348.82464600]
[32.92791748 -351.73873901]
[19.71131516 -359.09921265]
[9.41757679 -370.18496704]
[3.05517817 -383.90994263]
[1.24744213 -398.92953491]
[4.17147207 -413.77221680]
[11.54080200 -426.98385620]
[22.63345909 -437.27017212]
[36.36270142 -443.62338257]
[51.38347244 -445.42105103]
[66.22418976 -442.48709106]
[79.43091583 -435.10888672]
[89.70979309 -424.00933838]
[96.05378723 -410.27584839]
[97.84140015 -395.25387573]
[94.89747620 -380.41513062]
[87.51045227 -367.21334839]
[76.40401459 -356.94192505]
[62.66627502 -350.60711670]
[64.44873810 -335.71340942]
[66.23120880 -320.81970215]
[68.01367188 -305.92596436]
[79.84492493 -296.95062256]
[81.86476898 -281.87164307]
[72.37036896 -269.52279663]
[74.15283203 -254.62908936]
[76.04612732 -239.74905396]
[78.05014038 -224.88352966]
[80.05415344 -210.01799011]
[82.05816650 -195.15246582]
[94.02173615 -186.35426331]
[96.26586151 -171.30705261]
[86.95636749 -158.81820679]
[88.96038055 -143.95268250]
[90.96439362 -129.08714294]
[92.96840668 -114.22161865]
[96.97736359 -108.01274872]
[94.88989258 -99.12004089]
[104.08476257 -87.40237427]
[98.04217529 -72.78055573]
[101.95824432 -66.51268005]
[99.73860168 -57.65203476]
[101.29912567 -42.73343277]
[102.85964966 -27.81482697]
[104.42017365 -12.89622211]
[115.74957275 -22.72702599]
[130.52638245 -20.14908600]
[137.85769653 -7.06276131]
[132.33914185 6.88519478]
[118.03878021 11.41286850]
[105.49917603 3.18403888]
[105.94578552 18.17738914]
[106.39238739 33.17073822]
[109.73365021 39.76299286]
[106.73235321 48.39027786]
[106.95568085 63.38861465]
[107.17900848 78.38694763]
[116.66265106 84.47524261]
[122.06604767 94.36513519]
[122.06604767 105.63486481]
[116.66265106 115.52475739]
[107.17900848 121.61305237]
[106.95568085 136.61138916]
[106.73235321 151.60972595]
[106.50902557 166.60806274]
[114.04000854 180.52189636]
[106.11407471 193.13256836]
[113.64505005 207.04640198]
[105.71911621 219.65707397]
[105.49578857 234.65541077]
[116.22338104 245.94949341]
[115.78323364 261.15676880]
[104.94993591 271.31427002]
[104.72660828 286.31262207]
[112.25758362 300.22647095]
[104.33164978 312.83712769]
[104.10832214 327.83544922]
[103.88499451 342.83380127]
[103.66166687 357.83212280]
[106.66296387 366.45941162]
[103.32170105 373.05166626]
[110.64469147 387.07608032]
[102.53188324 399.56735229]
[102.08528137 414.56069946]
[101.63867188 429.55404663]
[101.19206238 444.54739380]
[100.74546051 459.54077148]
[100.29885101 474.53411865]
[99.85224915 489.52746582]
[102.72476196 498.19845581]
[99.28572845 504.74023438]
[98.61594391 519.72528076]
[97.94615936 534.71032715]
[112.77790833 537.05535889]
[127.25383759 541.04626465]
[141.19189453 546.63293457]
[154.41679382 553.74499512]
[166.76220703 562.29315186]
[178.07287598 572.16986084]
[188.20658875 583.25079346]
[197.03585815 595.39672852]
[204.44969177 608.45489502]
[210.35481262 622.26104736]
[214.67698669 636.64154053]
[217.36184692 651.41552734]
[218.37562561 666.39727783]
[217.70556641 681.39831543]
[215.36012268 696.22998047]
[211.36875916 710.70581055]
[205.78169250 724.64367676]
[198.66918945 737.86840820]
[190.12066650 750.21356201]
[180.24366760 761.52392578]
[169.16238403 771.65728760]
[157.01618958 780.48620605]
[143.95780945 787.89965820]
[130.15148926 793.80438232]
[115.77086639 798.12609863]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 185]
[30 184]
[31 183]
[32 181]
[33 180]
[34 179]
[35 178]
[36 177]
[37 176]
[38 175]
[40 173]
[41 171]
[42 170]
[43 169]
[44 168]
[46 166]
[47 165]
[50 162]
[51 161]
[53 159]
[55 157]
[56 156]
[57 155]
[58 154]
[61 149]
[62 148]
[63 147]
[64 145]
[65 144]
[66 143]
[67 137]
[68 136]
[69 135]
[70 134]
[71 132]
[73 130]
[74 128]
[75 127]
[76 126]
[77 125]
[80 122]
[81 121]
[82 120]
[83 119]
[85 118]
[86 117]
[89 114]
[90 113]
[91 112]
[92 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
