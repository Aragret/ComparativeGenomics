%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[21.76480675 734.59289551]
[10.34996510 744.34100342]
[-1.91563427 752.99432373]
[-14.92734528 760.47900391]
[-28.57415199 766.73114014]
[-42.73962402 771.69738770]
[-57.30290604 775.33544922]
[-72.13973999 777.61425781]
[-87.12355042 778.51434326]
[-102.12648773 778.02807617]
[-117.02055359 776.15954590]
[-131.67868042 772.92474365]
[-145.97579956 768.35119629]
[-159.78993225 762.47802734]
[-173.00321960 755.35528564]
[-185.50291443 747.04370117]
[-197.18240356 737.61425781]
[-207.94201660 727.14739990]
[-217.68995667 715.73242188]
[-226.34306335 703.46667480]
[-233.82749939 690.45483398]
[-240.07940674 676.80792236]
[-245.04545593 662.64233398]
[-248.68328857 648.07897949]
[-250.96183777 633.24212646]
[-251.86167908 618.25830078]
[-251.37513733 603.25537109]
[-249.50636292 588.36132812]
[-246.27130127 573.70324707]
[-241.69754028 559.40625000]
[-235.82412720 545.59222412]
[-228.70114136 532.37902832]
[-220.38937378 519.87945557]
[-210.95974731 508.20013428]
[-200.49269104 497.44070435]
[-189.07752991 487.69293213]
[-176.81164551 479.04003906]
[-163.79968262 471.55581665]
[-150.15266418 465.30413818]
[-135.98703003 460.33831787]
[-121.42362213 456.70074463]
[-106.58671570 454.42242432]
[-91.60287476 453.52282715]
[-76.59995270 454.00964355]
[-61.70594788 455.87866211]
[-47.04793167 459.11395264]
[-32.75096893 463.68795776]
[-26.88200569 449.88378906]
[-21.01304626 436.07962036]
[-15.14408493 422.27542114]
[-9.27512455 408.47125244]
[-3.40616322 394.66708374]
[2.46279740 380.86291504]
[8.33175850 367.05871582]
[14.20071888 353.25454712]
[3.43589568 341.44485474]
[-1.11767471 326.06698608]
[1.50030661 310.18524170]
[10.81578827 296.98742676]
[25.00525284 289.14505005]
[41.25249100 288.27258301]
[46.91527557 274.38256836]
[52.57806396 260.49255371]
[58.24084854 246.60250854]
[49.14328766 232.93826294]
[49.99148941 216.37799072]
[60.64900970 203.45829773]
[77.06853485 199.39686584]
[82.52389526 185.42407227]
[87.97924805 171.45127869]
[93.43460846 157.47846985]
[95.65972900 142.64442444]
[94.54407501 127.68597412]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[90.49746704 73.42967224]
[89.38182068 58.47121811]
[88.15484619 43.52148438]
[86.81661224 28.58130074]
[85.47837830 13.64111519]
[84.14014435 -1.29906952]
[70.51303864 -12.26818085]
[69.06385803 -29.36247063]
[80.20269775 -41.96266937]
[78.64218140 -56.88127518]
[77.08165741 -71.79988098]
[65.92253876 -86.44760132]
[73.68817902 -102.18487549]
[71.90571594 -117.07859039]
[70.12325287 -131.97230530]
[68.34078217 -146.86602783]
[53.49614716 -149.78010559]
[40.27954102 -157.14057922]
[29.98580360 -168.22634888]
[23.62340546 -181.95132446]
[21.81566811 -196.97088623]
[24.73969841 -211.81356812]
[32.10902786 -225.02523804]
[43.20168686 -235.31155396]
[56.93092728 -241.66474915]
[71.95169830 -243.46241760]
[86.79241943 -240.52844238]
[99.99914551 -233.15026855]
[110.27801514 -222.05072021]
[116.62201691 -208.31723022]
[118.40962219 -193.29525757]
[115.46570587 -178.45649719]
[108.07867432 -165.25471497]
[96.97224426 -154.98329163]
[83.23450470 -148.64849854]
[85.01696777 -133.75477600]
[86.79943085 -118.86105347]
[88.58190155 -103.96733856]
[97.89427185 -96.24683380]
[99.50116730 -83.85321808]
[92.00025940 -73.36040497]
[93.56078339 -58.44179916]
[95.12130737 -43.52319336]
[106.16777802 -36.88957214]
[111.45550537 -24.92620850]
[108.84906769 -11.91018200]
[99.08032990 -2.63730359]
[100.41856384 12.30288124]
[101.75679779 27.24306679]
[103.09503174 42.18325043]
[106.82274628 48.56494141]
[104.34027100 57.35557175]
[105.45592499 72.31402588]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[109.50253296 126.57032776]
[110.61817932 141.52877808]
[116.26097870 127.63062286]
[124.47296906 115.07820892]
[134.94714355 104.34081268]
[147.29193115 95.81987000]
[161.04577637 89.83393860]
[175.69451904 86.60680389]
[190.69049072 86.25911713]
[205.47305298 88.80387878]
[219.48956299 94.14595032]
[232.21597290 102.08561707]
[243.17652893 112.32604218]
[251.96145630 124.48438263]
[258.24230957 138.10607910]
[261.78427124 152.68190002]
[262.45495605 167.66690063]
[260.22924805 182.50085449]
[255.19038391 196.62919617]
[247.52673340 209.52371216]
[237.52482605 220.70233154]
[225.55856323 229.74714661]
[212.07533264 236.32000732]
[197.57919312 240.17517090]
[182.61212158 241.16851807]
[167.73365784 239.26290894]
[153.50004578 234.52960205]
[140.44342041 227.14552307]
[129.05191040 217.38676453]
[119.75140381 205.61813354]
[112.88959503 192.27963257]
[108.72302246 177.86993408]
[107.40740967 162.93383789]
[101.95204926 176.90663147]
[96.49668884 190.87942505]
[91.04133606 204.85221863]
[99.32506561 215.86906433]
[101.06963348 229.43280029]
[95.92543793 241.98695374]
[85.33511353 250.29292297]
[72.13087463 252.26530457]
[66.46809387 266.15533447]
[60.80530548 280.04534912]
[55.14251709 293.93539429]
[65.01226807 304.05145264]
[70.26500702 317.12557983]
[70.13832855 331.17153931]
[64.68435669 344.06903076]
[54.75695038 353.88360596]
[41.87814713 359.15698242]
[28.00489616 359.12350464]
[22.13593483 372.92767334]
[16.26697350 386.73187256]
[10.39801311 400.53604126]
[4.52905273 414.34020996]
[-1.33990800 428.14437866]
[-7.20886898 441.94857788]
[-13.07782936 455.75274658]
[-18.94679070 469.55691528]
[-5.73326635 476.67922974]
[6.76671791 484.99038696]
[18.44651413 494.41943359]
[29.20647430 504.88595581]
[38.95479584 516.30059814]
[47.60830688 528.56610107]
[55.09317780 541.57763672]
[61.34554672 555.22436523]
[66.31207275 569.38977051]
[69.95037842 583.95300293]
[72.22942352 598.78979492]
[73.12976837 613.77355957]
[72.64373016 628.77648926]
[70.77545166 643.67059326]
[67.54087067 658.32879639]
[62.96759415 672.62597656]
[57.09463120 686.44018555]
[49.97209167 699.65362549]
[41.66074371 712.15344238]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 191]
[48 190]
[49 189]
[50 188]
[51 187]
[52 186]
[53 185]
[54 184]
[55 183]
[61 176]
[62 175]
[63 174]
[64 173]
[68 168]
[69 167]
[70 166]
[71 165]
[72 134]
[73 133]
[74 132]
[76 130]
[77 129]
[78 128]
[79 126]
[80 125]
[81 124]
[82 123]
[85 119]
[86 118]
[87 117]
[89 114]
[90 113]
[91 112]
[92 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
