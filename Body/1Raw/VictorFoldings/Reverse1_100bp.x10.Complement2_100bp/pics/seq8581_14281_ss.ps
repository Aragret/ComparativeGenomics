%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[62.57562637 593.22528076]
[53.00478363 604.88977051]
[40.74049377 613.67895508]
[26.61894798 618.99353027]
[11.60298347 620.47106934]
[-3.28358960 618.01092529]
[-17.02577972 611.78076172]
[-28.68661880 602.20544434]
[-37.47105408 589.93774414]
[-42.78015137 575.81414795]
[-44.25191879 560.79760742]
[-41.78601837 545.91198730]
[-35.55057144 532.17224121]
[-25.97072601 520.51507568]
[-13.69964981 511.73538208]
[0.42599380 506.43173218]
[15.44309521 504.96575928]
[17.88882256 490.16650391]
[12.33022499 476.34799194]
[22.21408272 463.99404907]
[24.65981102 449.19476318]
[17.60462189 433.12643433]
[29.40666008 418.99160767]
[31.63177681 404.15756226]
[33.85689545 389.32351685]
[36.08201218 374.48947144]
[38.30712891 359.65542603]
[29.69831467 352.16848755]
[25.73163223 341.34344482]
[27.50115585 329.82986450]
[34.68161392 320.50561523]
[45.58085251 315.75762939]
[48.24664688 300.99639893]
[42.89440155 287.09667969]
[52.96109772 274.89126587]
[55.62689209 260.13003540]
[58.29268646 245.36882019]
[56.80696869 242.99168396]
[56.17335129 239.88279724]
[56.67525482 236.36378479]
[58.47455978 232.85279846]
[61.58163834 229.81964111]
[65.12131500 215.24327087]
[59.28077316 198.69470215]
[72.10142517 185.47682190]
[75.42368317 170.84934998]
[78.74594116 156.22189331]
[77.16197968 149.00297546]
[82.22808838 141.40216064]
[85.76776123 126.82578278]
[89.30743408 112.24941254]
[84.17134094 96.28079224]
[95.88154602 84.27049255]
[99.20380402 69.64303589]
[102.52606964 55.01557159]
[101.37507629 45.95394897]
[106.00820923 40.19583511]
[109.54788208 25.61946106]
[113.08755493 11.04308605]
[116.62722778 -3.53328967]
[120.16690063 -18.10966492]
[123.59796143 -32.71198654]
[126.92021942 -47.33944702]
[122.43160248 -62.51056671]
[132.79562378 -73.20805359]
[134.91024780 -88.05825043]
[135.80307007 -103.03166199]
[136.69587708 -118.00506592]
[137.58869934 -132.97846985]
[138.48152161 -147.95187378]
[139.37432861 -162.92527771]
[132.47215271 -177.16151428]
[140.95327759 -189.40570068]
[130.74069214 -201.16754150]
[131.85943604 -216.33998108]
[143.13548279 -226.00363159]
[144.02830505 -240.97703552]
[144.92112732 -255.95043945]
[145.81393433 -270.92385864]
[146.70675659 -285.89724731]
[136.49417114 -297.65908813]
[137.61291504 -312.83154297]
[148.88896179 -322.49520874]
[149.78178406 -337.46859741]
[150.67460632 -352.44201660]
[151.56741333 -367.41540527]
[136.84765625 -370.43356323]
[122.70726776 -375.51593018]
[109.43414307 -382.55899048]
[97.29850769 -391.41943359]
[86.54743195 -401.91680908]
[77.39978027 -413.83743286]
[70.04179382 -426.93859863]
[64.62326813 -440.95361328]
[61.25452423 -455.59710693]
[60.00414276 -470.57101440]
[60.89757538 -485.57043457]
[63.91664124 -500.29000854]
[68.99987030 -514.43005371]
[76.04377747 -527.70275879]
[84.90495300 -539.83782959]
[95.40299225 -550.58825684]
[107.32418060 -559.73516846]
[120.42581177 -567.09234619]
[134.44116211 -572.51000977]
[149.08486938 -575.87786865]
[164.05883789 -577.12731934]
[179.05819702 -576.23297119]
[193.77758789 -573.21295166]
[207.91734314 -568.12884521]
[221.18959045 -561.08416748]
[233.32412720 -552.22222900]
[244.07391357 -541.72351074]
[253.22009277 -529.80175781]
[260.57644653 -516.69964600]
[265.99325562 -502.68399048]
[269.36016846 -488.04006958]
[270.60870361 -473.06600952]
[269.71340942 -458.06671143]
[266.69253540 -443.34750366]
[261.60754395 -429.20806885]
[254.56199646 -415.93624878]
[245.69932556 -403.80227661]
[235.19995117 -393.05313110]
[223.27763367 -383.90768433]
[210.17507935 -376.55215454]
[196.15907288 -371.13623047]
[181.51493835 -367.77020264]
[166.54081726 -366.52258301]
[165.64801025 -351.54919434]
[164.75518799 -336.57577515]
[163.86238098 -321.60238647]
[173.91018677 -310.66726685]
[173.21804810 -295.46936035]
[161.68016052 -285.00442505]
[160.78733826 -270.03103638]
[159.89453125 -255.05763245]
[159.00170898 -240.08422852]
[158.10890198 -225.11082458]
[168.15670776 -214.17568970]
[167.46456909 -198.97781372]
[155.92668152 -188.51287842]
[162.89271545 -175.34764099]
[154.34773254 -162.03247070]
[153.45492554 -147.05906677]
[152.56210327 -132.08566284]
[151.66928101 -117.11225128]
[150.77647400 -102.13884735]
[149.88365173 -87.16543579]
[159.06391907 -99.02809906]
[172.66687012 -105.34949493]
[187.65353394 -104.71741486]
[200.67588806 -97.27307129]
[208.82469177 -84.67954254]
[210.27947998 -69.75025177]
[204.71525574 -55.82044983]
[193.37507629 -46.00208664]
[178.79235840 -42.48860931]
[164.22494507 -46.06493759]
[152.92720032 -55.93210983]
[147.42308044 -69.88579559]
[152.14933777 -55.76093292]
[141.54768372 -44.01718903]
[138.22541809 -29.38972855]
[139.80938721 -22.17080498]
[134.74327087 -14.56999207]
[131.20359802 0.00638288]
[127.66393280 14.58275795]
[124.12425995 29.15913391]
[120.58458710 43.73550797]
[117.15352631 58.33782959]
[113.83126831 72.96529388]
[110.50901031 87.59275055]
[116.11071014 97.80363464]
[113.44671631 109.14138031]
[103.88380432 115.78908539]
[100.34413147 130.36546326]
[96.80445862 144.94183350]
[93.37339783 159.54415894]
[90.05113983 174.17161560]
[86.72888184 188.79907227]
[92.92977142 200.10888672]
[89.86151886 212.22373962]
[79.69768524 218.78294373]
[76.15801239 233.35931396]
[73.05390167 248.03462219]
[70.38810730 262.79583740]
[67.72231293 277.55703735]
[72.88388062 292.51260376]
[63.00786209 303.66220093]
[60.34206772 318.42343140]
[71.73014832 333.56362915]
[68.49081421 351.90539551]
[53.14117050 361.88055420]
[50.91605377 376.71459961]
[48.69093704 391.54864502]
[46.46582031 406.38269043]
[44.24070358 421.21673584]
[51.26560211 432.03402710]
[49.10690689 444.34350586]
[39.45907974 451.64050293]
[37.01335526 466.43978882]
[42.39701462 481.31683350]
[32.68809509 492.61224365]
[30.24236679 507.41149902]
[43.98936081 513.63104248]
[55.65759277 523.19738770]
[64.45149994 535.45825195]
[69.77149963 549.57775879]
[71.25486755 564.59313965]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 205]
[18 204]
[20 202]
[21 201]
[23 198]
[24 197]
[25 196]
[26 195]
[27 194]
[32 191]
[33 190]
[35 188]
[36 187]
[37 186]
[42 185]
[43 184]
[45 181]
[46 180]
[47 179]
[49 178]
[50 177]
[51 176]
[53 173]
[54 172]
[55 171]
[57 170]
[58 169]
[59 168]
[60 167]
[61 166]
[62 164]
[63 163]
[65 161]
[66 149]
[67 148]
[68 147]
[69 146]
[70 145]
[71 144]
[73 142]
[76 139]
[77 138]
[78 137]
[79 136]
[80 135]
[83 132]
[84 131]
[85 130]
[86 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
