%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[168.45945740 479.74691772]
[164.48736572 465.28240967]
[160.51527405 450.81787109]
[156.32826233 436.41409302]
[151.92726135 422.07424927]
[147.52626038 407.73440552]
[145.11579895 406.30340576]
[143.12692261 403.83135986]
[141.95901489 400.47406006]
[141.94769287 396.52890015]
[143.31764221 392.40856934]
[139.77796936 377.83218384]
[136.23829651 363.25579834]
[132.69862366 348.67944336]
[129.15895081 334.10305786]
[125.61927795 319.52667236]
[122.07960510 304.95031738]
[113.37087250 317.16333008]
[98.60035706 319.77713013]
[86.22928619 311.29440308]
[83.34436798 296.57446289]
[91.59821320 284.04953003]
[106.26264954 280.89447021]
[118.93666077 288.91586304]
[116.71154785 274.08181763]
[107.17343140 266.64199829]
[105.19824982 254.30172729]
[112.38341522 243.59022522]
[110.37940216 228.72470093]
[108.37538910 213.85917664]
[106.37137604 198.99363708]
[104.36736298 184.12811279]
[102.36334991 169.26258850]
[100.35933685 154.39706421]
[88.90019989 141.10589600]
[96.03567505 124.13041687]
[93.81055450 109.29637146]
[91.47506714 94.47930908]
[86.45455170 108.61417389]
[76.95585632 120.22342682]
[64.09487915 127.94322968]
[49.38252258 130.86665344]
[34.54716873 128.65028381]
[21.33166695 121.55447388]
[11.28855991 110.41284180]
[5.59770155 96.53428650]
[4.92764807 81.54926300]
[9.35711670 67.21818542]
[18.36573792 55.22465515]
[30.89518738 46.97766113]
[45.47351837 43.44605637]
[60.38808441 45.04472351]
[73.88673401 51.58585739]
[84.38366699 62.30101013]
[90.64610291 75.93289185]
[83.95664215 61.59547043]
[92.61912537 49.47892380]
[93.73477173 34.52046967]
[94.85041809 19.56201553]
[95.96607208 4.60356283]
[96.63585663 -10.38147545]
[89.10487366 -24.29531479]
[97.03080750 -36.90597916]
[97.25413513 -51.90431595]
[97.47746277 -66.90265656]
[94.47616577 -75.52993774]
[97.81742859 -82.12219238]
[98.26403046 -97.11553955]
[98.71063995 -112.10889435]
[83.79674530 -113.79273987]
[69.07284546 -116.70242310]
[54.63951492 -120.81806946]
[40.59535217 -126.11155701]
[27.03629494 -132.54673767]
[14.05496788 -140.07963562]
[1.74004459 -148.65881348]
[-9.82434845 -158.22564697]
[-20.55921364 -168.71479797]
[-30.39121819 -180.05459595]
[-39.25320053 -192.16760254]
[-47.08462524 -204.97105408]
[-53.83198929 -218.37748718]
[-59.44920731 -232.29533386]
[-63.89790344 -246.62951660]
[-67.14768982 -261.28210449]
[-69.17636108 -276.15301514]
[-69.97006989 -291.14065552]
[-69.52338409 -306.14266968]
[-67.83935547 -321.05654907]
[-64.92949677 -335.78039551]
[-60.81368256 -350.21368408]
[-55.52002335 -364.25778198]
[-49.08468628 -377.81677246]
[-41.55162430 -390.79800415]
[-32.97230530 -403.11282349]
[-23.40533257 -414.67709351]
[-12.91605663 -425.41183472]
[-1.57613325 -435.24371338]
[10.53697300 -444.10556030]
[23.34051704 -451.93682861]
[36.74703598 -458.68402100]
[50.66494751 -464.30108643]
[64.99917603 -468.74960327]
[79.65180969 -471.99920654]
[94.52274323 -474.02770996]
[109.51039886 -474.82122803]
[124.51239777 -474.37435913]
[139.42625427 -472.69018555]
[154.15008545 -469.78015137]
[168.58331299 -465.66415405]
[182.62734985 -460.37033081]
[196.18624878 -453.93481445]
[209.16740417 -446.40161133]
[221.48211670 -437.82214355]
[233.04627991 -428.25503540]
[243.78089905 -417.76562500]
[253.61264038 -406.42559814]
[262.47433472 -394.31237793]
[270.30545044 -381.50872803]
[277.05249023 -368.10214233]
[282.66937256 -354.18417358]
[287.11773682 -339.84988403]
[290.36715698 -325.19720459]
[292.39547729 -310.32623291]
[293.18884277 -295.33859253]
[292.74179077 -280.33657837]
[291.05740356 -265.42276001]
[288.14721680 -250.69895935]
[284.03103638 -236.26577759]
[278.73706055 -222.22180176]
[272.30139160 -208.66297913]
[264.76800537 -195.68191528]
[256.18841553 -183.36730957]
[246.62115479 -171.80325317]
[236.13162231 -161.06875610]
[224.79147339 -151.23716736]
[212.67814636 -142.37561035]
[199.87442017 -134.54464722]
[186.46774292 -127.79776001]
[172.54969788 -122.18104553]
[158.21536255 -117.73285675]
[143.56265259 -114.48359680]
[128.69166565 -112.45545959]
[113.70398712 -111.66228485]
[113.25738525 -96.66893768]
[112.81077576 -81.67558289]
[112.47579956 -66.67932892]
[112.25247192 -51.68098831]
[112.02914429 -36.68265152]
[119.57609558 -23.84159470]
[111.63419342 -10.15814781]
[113.48761749 -8.05506420]
[114.61965179 -5.09109735]
[114.69823456 -1.53733468]
[113.49546814 2.22004175]
[110.92452240 5.71921158]
[109.80887604 20.67766571]
[108.69322205 35.63611984]
[107.57757568 50.59457016]
[114.34683228 63.86206436]
[105.60455322 77.04853821]
[106.27433777 92.03357697]
[110.59120178 98.84072876]
[108.64459991 107.07125854]
[110.86972046 121.90530396]
[120.75923920 130.18540955]
[122.30715179 142.58653259]
[115.22486877 152.39305115]
[117.22888184 167.25857544]
[119.23289490 182.12409973]
[121.23690796 196.98962402]
[123.24092102 211.85516357]
[125.24493408 226.72068787]
[127.24894714 241.58621216]
[138.83923340 255.89518738]
[131.54559326 271.85668945]
[133.77070618 286.69073486]
[136.65597534 301.41064453]
[140.19564819 315.98699951]
[143.73532104 330.56338501]
[147.27499390 345.13977051]
[150.81466675 359.71612549]
[154.35433960 374.29251099]
[157.89401245 388.86889648]
[161.86610413 403.33340454]
[166.26710510 417.67324829]
[170.66810608 432.01309204]
[175.24011230 436.78890991]
[176.52154541 442.32559204]
[174.97979736 446.84579468]
[178.95188904 461.31030273]
[182.92398071 475.77484131]
[198.03305054 476.23049927]
[212.33601379 481.12100220]
[224.56105042 490.01141357]
[233.62113953 502.11126709]
[238.71066284 516.34460449]
[239.37704468 531.44586182]
[235.56103516 546.07220459]
[227.60197449 558.92303467]
[216.20755005 568.85577393]
[202.39096069 574.98706055]
[187.38076782 576.77185059]
[172.51165771 574.05139160]
[159.10578918 567.06750488]
[148.35520935 556.44128418]
[141.21583557 543.11761475]
[138.32250977 528.28118896]
[139.93249512 513.25122070]
[145.90264893 499.36422729]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 192]
[2 191]
[3 190]
[4 187]
[5 186]
[6 185]
[11 184]
[12 183]
[13 182]
[14 181]
[15 180]
[16 179]
[17 178]
[24 177]
[25 176]
[28 174]
[29 173]
[30 172]
[31 171]
[32 170]
[33 169]
[34 168]
[36 165]
[37 164]
[38 162]
[55 161]
[57 159]
[58 158]
[59 157]
[60 156]
[61 151]
[63 149]
[64 148]
[65 147]
[67 146]
[68 145]
[69 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
