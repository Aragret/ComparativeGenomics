%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[116.47727203 514.97991943]
[114.92401123 500.01904297]
[116.06728363 485.02130127]
[119.87033844 470.46875000]
[126.21092987 456.82922363]
[134.88522339 444.54116821]
[145.61439514 433.99960327]
[158.05352783 425.54336548]
[171.80276489 419.44433594]
[168.26309204 404.86795044]
[164.72341919 390.29156494]
[161.18374634 375.71520996]
[157.64407349 361.13882446]
[154.10440063 346.56243896]
[143.94056702 340.00323486]
[140.87231445 327.88839722]
[147.07321167 316.57858276]
[143.75094604 301.95111084]
[140.42868042 287.32366943]
[136.67237854 272.80160522]
[132.48538208 258.39782715]
[128.29837036 243.99403381]
[124.11135101 229.59025574]
[121.21401978 227.58082581]
[119.14603424 224.06820679]
[118.60327911 219.45748901]
[120.07445526 214.44921875]
[116.53478241 199.87284851]
[112.99510956 185.29647827]
[109.45543671 170.72009277]
[105.91576385 156.14372253]
[95.39361572 145.60173035]
[99.65586853 130.36546326]
[96.11619568 115.78908539]
[84.22846985 103.95446014]
[89.12624359 87.91114807]
[85.36994171 73.38908386]
[82.26333618 88.06385803]
[75.65068817 101.52762604]
[65.93637848 112.95706177]
[53.71442413 121.65326691]
[39.73221207 127.08444977]
[24.84476089 128.91850281]
[9.96243954 127.04326630]
[-4.00469112 121.57341766]
[-16.20253563 112.84343719]
[-25.88519096 101.38716125]
[-32.46055984 87.90515137]
[-35.52655411 73.22183990]
[-34.89568710 58.23511505]
[-30.60653687 43.86141586]
[-22.92138863 30.97970390]
[-12.31019115 20.37770081]
[0.57817721 12.70372200]
[14.95558834 8.42703438]
[29.94285774 7.80915976]
[44.62350845 10.88788128]
[58.09981155 17.47493362]
[69.54768372 27.16751480]
[78.26708984 39.37292099]
[83.72483826 53.34481812]
[85.06307220 38.40463257]
[86.40130615 23.46444702]
[86.95951843 8.47483730]
[86.73619080 -6.52349997]
[86.51286316 -21.52183723]
[86.28953552 -36.52017593]
[79.48317719 -23.15329552]
[68.92390442 -12.49957371]
[55.61816406 -5.57445335]
[40.83417511 -3.03799438]
[25.98104858 -5.13195467]
[12.47449398 -11.65675163]
[1.60186827 -21.99048424]
[-5.60051870 -35.14820480]
[-8.44618130 -49.87580490]
[-6.66388941 -64.76954651]
[-0.42351973 -78.40984344]
[9.68013573 -89.49659729]
[22.68406105 -96.97309113]
[37.34880447 -100.12670898]
[52.27661514 -98.65686798]
[66.04467010 -92.70366669]
[77.34069061 -82.83451843]
[85.08800507 -69.99009705]
[88.54827881 -55.39352036]
[92.30458069 -69.91558075]
[96.06088257 -84.43763733]
[99.81718445 -98.95970154]
[103.57347870 -113.48175812]
[107.32978058 -128.00381470]
[109.33379364 -142.86933899]
[109.55712128 -157.86767578]
[109.78044891 -172.86601257]
[110.00377655 -187.86436462]
[110.11544800 -202.86393738]
[110.11544800 -217.86393738]
[110.11544800 -232.86393738]
[96.05825806 -238.64874268]
[85.28838348 -249.37619019]
[79.44815826 -263.41043091]
[79.42816162 -278.61135864]
[85.23144531 -292.66091919]
[95.97306061 -303.41668701]
[110.01497650 -309.23846436]
[125.21591187 -309.23846436]
[139.25782776 -303.41668701]
[149.99945068 -292.66091919]
[155.80273438 -278.61135864]
[155.78273010 -263.41043091]
[149.94250488 -249.37619019]
[139.17263794 -238.64874268]
[125.11544800 -232.86393738]
[125.11544800 -217.86393738]
[125.11544800 -202.86393738]
[128.25894165 -196.17512512]
[125.00211334 -187.64103699]
[124.77878571 -172.64268494]
[124.55545807 -157.64434814]
[124.33213043 -142.64601135]
[131.78477478 -155.66362000]
[143.19544983 -165.39996338]
[157.22366333 -170.71122742]
[172.22135925 -170.97344971]
[186.42666626 -166.15582275]
[198.17073059 -156.82431030]
[206.07386780 -144.07518005]
[209.20764160 -129.40618896]
[207.20390320 -114.54061890]
[200.29801941 -101.22488403]
[189.30133057 -91.02328491]
[175.50567627 -85.13430786]
[160.53178406 -84.24977875]
[146.13874817 -88.47360992]
[134.01747131 -97.30958557]
[125.59193420 -109.71968079]
[121.85184479 -124.24751282]
[118.09554291 -109.72545624]
[114.33924103 -95.20339966]
[110.58293915 -80.68133545]
[106.82663727 -66.15927887]
[103.07033539 -51.63721848]
[101.28787231 -36.74350357]
[101.51119995 -21.74516487]
[101.73452759 -6.74682760]
[101.95785522 8.25150967]
[112.34220123 -2.57278419]
[127.24071503 -4.31471729]
[139.84199524 3.82209945]
[144.38490295 18.11762238]
[138.79248047 32.03612900]
[125.62152100 39.21427155]
[110.89360046 36.37029266]
[101.34149170 24.80268097]
[100.00325775 39.74286652]
[98.66502380 54.68305206]
[99.89199829 69.63278198]
[103.64830017 84.15484619]
[113.30912781 90.65943146]
[116.14162445 101.95625305]
[110.69256592 112.24941254]
[114.23223877 126.82578278]
[125.00756836 138.41038513]
[120.49214172 152.60404968]
[124.03181458 167.18041992]
[127.57148743 181.75680542]
[131.11116028 196.33317566]
[134.65083313 210.90954590]
[138.51513672 225.40324402]
[142.70214844 239.80702209]
[146.88916016 254.21081543]
[151.07617188 268.61459351]
[154.31558228 271.50598145]
[156.26986694 274.93313599]
[156.92840576 278.42620850]
[156.43423462 281.56030273]
[155.05615234 284.00140381]
[158.37840271 298.62887573]
[161.70066833 313.25631714]
[174.52131653 326.47421265]
[168.68077087 343.02276611]
[172.22044373 357.59915161]
[175.76011658 372.17553711]
[179.29978943 386.75189209]
[182.83946228 401.32827759]
[186.37913513 415.90466309]
[201.39428711 415.01864624]
[216.32632446 416.82815552]
[230.69522095 421.27502441]
[244.03909302 428.21627808]
[255.92898560 437.42877197]
[265.98269653 448.61639404]
[273.87701416 461.41949463]
[279.35818481 475.42651367]
[282.25003052 490.18716431]
[282.45956421 505.22695923]
[279.98007202 520.06243896]
[274.89123535 534.21673584]
[267.35665894 547.23480225]
[257.61853027 558.69818115]
[245.98991394 568.23834229]
[232.84460449 575.54864502]
[218.60516357 580.39410400]
[203.72933960 582.61889648]
[188.69534302 582.15155029]
[173.98641968 579.00708008]
[160.07543945 573.28656006]
[147.40954590 565.17395020]
[136.39593506 554.92993164]
[127.38861084 542.88385010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 186]
[10 185]
[11 184]
[12 183]
[13 182]
[14 181]
[17 179]
[18 178]
[19 177]
[20 172]
[21 171]
[22 170]
[23 169]
[27 168]
[28 167]
[29 166]
[30 165]
[31 164]
[33 162]
[34 161]
[36 158]
[37 157]
[61 156]
[62 155]
[63 154]
[64 146]
[65 145]
[66 144]
[67 143]
[86 142]
[87 141]
[88 140]
[89 139]
[90 138]
[91 137]
[92 120]
[93 119]
[94 118]
[95 117]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
