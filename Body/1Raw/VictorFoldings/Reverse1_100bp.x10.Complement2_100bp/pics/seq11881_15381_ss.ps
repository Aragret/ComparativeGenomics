%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[156.76812744 424.57827759]
[158.61338806 409.67663574]
[162.08677673 395.06848145]
[167.14611816 380.93106079]
[173.73002625 367.43606567]
[181.75856018 354.74725342]
[191.13426208 343.01867676]
[201.74331665 332.39270020]
[213.45693970 322.99835205]
[205.41577148 310.33581543]
[197.37458801 297.67327881]
[189.33341980 285.01077271]
[181.29225159 272.34823608]
[175.05288696 268.38693237]
[173.22724915 259.43679810]
[165.37548828 246.65594482]
[161.02091980 244.69462585]
[157.85221863 239.97697449]
[157.48678589 233.37561035]
[150.01904297 220.36665344]
[145.06553650 234.52514648]
[131.61172485 241.15800476]
[117.36455536 236.46563721]
[110.48546600 223.13604736]
[114.91510010 208.80502319]
[128.11596680 201.68202209]
[142.52526855 205.84684753]
[136.24790955 192.22352600]
[129.97055054 178.60020447]
[123.69318390 164.97689819]
[117.21369171 151.44854736]
[110.53349304 138.01817322]
[97.93779755 130.06848145]
[98.71959686 114.26660156]
[87.17493439 106.37911224]
[87.85002899 92.41358948]
[81.16983032 78.98321533]
[74.48963928 65.55284119]
[67.80944824 52.12246323]
[61.12924957 38.69208908]
[44.44597244 33.43019104]
[36.87900162 18.03357124]
[42.67248154 2.24514627]
[35.79306793 -11.08428288]
[28.91365433 -24.41371155]
[14.12648678 -29.31038284]
[7.33966637 -42.92631912]
[12.09902287 -56.99345016]
[5.21961021 -70.32287598]
[-1.65980220 -83.65230560]
[-8.53921509 -96.98173523]
[-15.41862774 -110.31116486]
[-22.13528824 -116.50183105]
[-22.29956627 -123.89065552]
[-28.97976112 -137.32102966]
[-35.65995407 -150.75140381]
[-42.28369904 -157.04138184]
[-42.33795166 -164.43183899]
[-48.81744766 -177.96018982]
[-55.29694366 -191.48854065]
[-61.82630539 -197.87643433]
[-61.77051926 -205.26687622]
[-68.04788208 -218.89019775]
[-74.32524109 -232.51350403]
[-88.59078979 -227.82395935]
[-103.29792786 -224.79116821]
[-118.25492096 -223.45465088]
[-133.26676941 -223.83186340]
[-148.13775635 -225.91787720]
[-162.67401123 -229.68547058]
[-176.68603516 -235.08557129]
[-189.99114990 -242.04774475]
[-202.41587830 -250.48121643]
[-213.79826355 -260.27609253]
[-223.98989868 -271.30459595]
[-232.85791016 -283.42303467]
[-240.28669739 -296.47335815]
[-246.17941284 -310.28543091]
[-250.45921326 -324.67922974]
[-253.07031250 -339.46704102]
[-253.97868347 -354.45611572]
[-253.17247009 -369.45104980]
[-250.66218567 -384.25631714]
[-246.48054504 -398.67895508]
[-240.68209839 -412.53085327]
[-233.34239197 -425.63150024]
[-224.55715942 -437.81005859]
[-214.44090271 -448.90777588]
[-203.12553406 -458.77993774]
[-190.75854492 -467.29788208]
[-177.50117493 -474.35055542]
[-163.52627563 -479.84600830]
[-149.01602173 -483.71255493]
[-134.15959167 -485.89984131]
[-119.15066528 -486.37933350]
[-104.18491364 -485.14477539]
[-89.45745087 -482.21224976]
[-75.16028595 -477.61999512]
[-61.47979355 -471.42791748]
[-48.59434128 -463.71670532]
[-36.67191315 -454.58688354]
[-25.86794281 -444.15750122]
[-16.32328224 -432.56451416]
[-8.16236496 -419.95907593]
[-1.49158645 -406.50552368]
[3.60208702 -392.37921143]
[7.05224848 -377.76434326]
[8.81391811 -362.85147095]
[8.86412907 -347.83496094]
[7.20222616 -332.91064453]
[3.84987640 -318.27301025]
[-1.14921594 -304.11297607]
[-7.72987700 -290.61511230]
[-15.80631447 -277.95538330]
[-25.27323532 -266.29882812]
[-36.00722122 -255.79742432]
[-47.86832809 -246.58808899]
[-60.70192337 -238.79086304]
[-54.42456436 -225.16755676]
[-48.14720154 -211.54423523]
[-41.76859665 -197.96803284]
[-35.28910065 -184.43968201]
[-28.80960655 -170.91133118]
[-22.22957802 -157.43161011]
[-15.54938412 -144.00122070]
[-8.86918926 -130.57084656]
[-2.08919811 -117.19058228]
[4.79021454 -103.86115265]
[11.66962719 -90.53172302]
[18.54903984 -77.20229340]
[25.42845154 -63.87285995]
[39.65175247 -59.60281754]
[46.81834030 -46.18288040]
[42.24308395 -31.29312515]
[49.12249756 -17.96369553]
[56.00191116 -4.63426638]
[68.70450592 -2.47241449]
[77.98108673 6.74860191]
[80.28694916 19.82122421]
[74.55962372 32.01189423]
[81.23982239 45.44226837]
[87.92001343 58.87264633]
[94.60021210 72.30302429]
[101.28040314 85.73339844]
[112.82506561 93.62088776]
[112.14997101 107.58641052]
[125.22348022 116.49672699]
[123.96386719 131.33798218]
[130.64405823 144.76835632]
[135.93357849 148.73480225]
[138.10060120 153.98846436]
[137.31649780 158.69953918]
[143.59385681 172.32284546]
[149.87121582 185.94616699]
[156.14859009 199.56948853]
[163.02799988 212.89891052]
[170.49574280 225.90786743]
[178.15634155 238.80418396]
[186.00808716 251.58503723]
[193.95477295 264.30706787]
[201.99594116 276.96960449]
[210.03712463 289.63211060]
[218.07829285 302.29464722]
[226.11946106 314.95718384]
[239.60322571 308.35025024]
[253.73197937 303.26678467]
[268.33419800 299.76849365]
[283.23266602 297.89782715]
[298.24645996 297.67749023]
[313.19338989 299.11016846]
[327.89199829 302.17843628]
[342.16384888 306.84512329]
[355.83566284 313.05349731]
[368.74154663 320.72824097]
[380.72479248 329.77618408]
[391.63992310 340.08749390]
[401.35446167 351.53698730]
[409.75045776 363.98568726]
[416.72604370 377.28247070]
[422.19650269 391.26593018]
[426.09542847 405.76632690]
[428.37548828 420.60763550]
[429.00900269 435.60971069]
[427.98831177 450.59042358]
[425.32580566 465.36788940]
[421.05374146 479.76278687]
[415.22406006 493.60034180]
[407.90747070 506.71258545]
[399.19281006 518.94030762]
[389.18588257 530.13519287]
[378.00811768 540.16119385]
[365.79525757 548.89666748]
[352.69552612 556.23565674]
[338.86791992 562.08892822]
[324.48034668 566.38549805]
[309.70742798 569.07324219]
[294.72848511 570.11950684]
[279.72537231 569.51153564]
[264.88018799 567.25683594]
[250.37315369 563.38262939]
[236.38038635 557.93603516]
[223.07171631 550.98315430]
[210.60870361 542.60839844]
[199.14265442 532.91339111]
[188.81275940 522.01586914]
[179.74438477 510.04809570]
[172.04763794 497.15533447]
[165.81593323 483.49411011]
[161.12492371 469.23022461]
[158.03157043 454.53689575]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 164]
[10 163]
[11 162]
[12 161]
[13 160]
[15 159]
[16 158]
[19 157]
[20 156]
[27 155]
[28 154]
[29 153]
[30 152]
[31 149]
[32 148]
[34 146]
[36 144]
[37 143]
[38 142]
[39 141]
[40 140]
[43 136]
[44 135]
[45 134]
[48 131]
[49 130]
[50 129]
[51 128]
[52 127]
[54 126]
[55 125]
[56 124]
[58 123]
[59 122]
[60 121]
[62 120]
[63 119]
[64 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
