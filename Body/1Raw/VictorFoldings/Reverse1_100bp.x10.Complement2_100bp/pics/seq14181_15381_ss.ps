%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGUCCCAACUAAGCCCUCCUAGGAUAACCACGCCCCCGAAACAUACUAAUACCCGCAACUAAUCAUCAUCAAUGACCAACUUGUAACAAACAACCACAUxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[71.78237152 853.74859619]
[56.77882004 853.55584717]
[41.81558990 852.43981934]
[26.94944572 850.40478516]
[12.23677731 847.45843506]
[-2.26660538 843.61193848]
[-16.50568581 838.87988281]
[-30.42644691 833.28027344]
[-43.97608566 826.83422852]
[-57.10320282 819.56634521]
[-69.75800323 811.50408936]
[-81.89247894 802.67810059]
[-93.46060181 793.12182617]
[-104.41848755 782.87158203]
[-114.72457886 771.96612549]
[-124.33976746 760.44696045]
[-133.22758484 748.35766602]
[-141.35430908 735.74420166]
[-148.68913269 722.65435791]
[-155.20420837 709.13781738]
[-160.87484741 695.24578857]
[-165.67950439 681.03106689]
[-169.59999084 666.54748535]
[-172.62141418 651.85003662]
[-174.73231506 636.99450684]
[-175.92468262 622.03717041]
[-176.19400024 607.03479004]
[-175.53924561 592.04431152]
[-173.96290588 577.12255859]
[-171.47094727 562.32611084]
[-168.07284546 547.71118164]
[-163.78146362 533.33319092]
[-158.61309814 519.24658203]
[-152.58734131 505.50488281]
[-145.72708130 492.16021729]
[-138.05830383 479.26318359]
[-129.61012268 466.86270142]
[-120.41457367 455.00582886]
[-110.50654602 443.73751831]
[-99.92362213 433.10055542]
[-88.70594025 423.13525391]
[-76.89606476 413.87939453]
[-64.53879547 405.36816406]
[-51.68099213 397.63378906]
[-38.37144089 390.70559692]
[-24.66063118 384.60992432]
[-10.60056877 379.36987305]
[3.75541043 375.00527954]
[18.35284996 371.53277588]
[33.13637161 368.96545410]
[48.04990387 367.31311035]
[63.03686905 366.58200073]
[78.04041290 366.77487183]
[79.15606689 351.81643677]
[80.27171326 336.85797119]
[81.38735962 321.89950562]
[82.50301361 306.94107056]
[83.61865997 291.98260498]
[84.39997864 277.00296021]
[84.84658813 262.00961304]
[85.29319763 247.01628113]
[85.73979950 232.02291870]
[86.18640900 217.02957153]
[83.24344635 210.25013733]
[86.75292969 201.81678772]
[87.42271423 186.83174133]
[84.58101654 180.00924683]
[88.21566772 171.62907410]
[89.10848236 156.65567017]
[90.00129700 141.68226624]
[90.89411926 126.70886230]
[91.78693390 111.73545837]
[85.70145416 99.14742279]
[93.23966217 87.37172699]
[85.27770996 77.22431183]
[86.32959747 64.77130890]
[95.28794098 56.64268112]
[96.40358734 41.68423080]
[97.51924133 26.72577667]
[90.82978058 12.38835335]
[99.49226379 0.27180663]
[100.60791016 -14.68664646]
[101.72355652 -29.64509964]
[92.36769104 -17.92043686]
[78.67214203 -11.80226612]
[63.69653702 -12.65740395]
[50.78646469 -20.29480934]
[42.82606125 -33.00826645]
[41.59370804 -47.95755768]
[47.36471558 -61.80297470]
[58.84981918 -71.45140839]
[73.48322296 -74.74738312]
[87.99578857 -70.95456696]
[99.14537048 -60.92028046]
[104.44112396 -46.88619232]
[107.98079681 -61.46256638]
[111.52046967 -76.03894043]
[115.06014252 -90.61531830]
[101.40761566 -96.94736481]
[89.25292206 -105.82147217]
[79.06325531 -116.89652252]
[71.23027802 -129.74684143]
[66.05506134 -143.87849426]
[63.73653793 -158.74827576]
[64.36381531 -173.78465271]
[67.91279602 -188.40966797]
[74.24705505 -202.06117249]
[83.12312317 -214.21443176]
[94.19982910 -224.40229797]
[107.05141449 -232.23320007]
[121.18389893 -237.40612793]
[136.05406189 -239.72224426]
[151.09034729 -239.09252930]
[165.71478271 -235.54118347]
[179.36524963 -229.20471191]
[191.51707458 -220.32667542]
[201.70315552 -209.24832153]
[209.53196716 -196.39547729]
[214.70260620 -182.26216125]
[217.01632690 -167.39161682]
[216.38417053 -152.35543823]
[212.83045959 -137.73158264]
[206.49179077 -124.08213043]
[197.61178589 -111.93174744]
[186.53178406 -101.74745941]
[173.67765808 -93.92071533]
[159.54350281 -88.75236511]
[144.67259216 -86.44106293]
[129.63652039 -87.07564545]
[126.09683990 -72.49926758]
[122.55716705 -57.92289352]
[119.01749420 -43.34651947]
[116.68201447 -28.52945137]
[115.56636047 -13.57099819]
[114.45071411 1.38745534]
[121.21997070 14.65494919]
[112.47769165 27.84142494]
[111.36204529 42.79987717]
[110.24639893 57.75833130]
[118.70699310 73.13315582]
[108.21306610 88.26454163]
[114.29854584 100.85257721]
[106.76033783 112.62827301]
[105.86752319 127.60167694]
[104.97470856 142.57508850]
[104.08188629 157.54849243]
[103.18907166 172.52189636]
[102.40775299 187.50152588]
[101.73796844 202.48657227]
[101.17975616 217.47618103]
[100.73314667 232.46952820]
[100.28654480 247.46287537]
[99.83993530 262.45623779]
[99.39333344 277.44958496]
[101.86907196 282.04498291]
[102.29221344 286.66821289]
[100.99589539 290.53274536]
[98.57711029 293.09826660]
[97.46146393 308.05670166]
[96.34581757 323.01516724]
[95.23017120 337.97363281]
[94.11451721 352.93206787]
[92.99887085 367.89053345]
[107.86503601 369.92541504]
[122.57773590 372.87164307]
[137.08114624 376.71798706]
[151.32028198 381.44989014]
[165.24110413 387.04940796]
[178.79080200 393.49526978]
[191.91798401 400.76303101]
[204.57286072 408.82516479]
[216.70742798 417.65103149]
[228.27565002 427.20718384]
[239.23364258 437.45736694]
[249.53982544 448.36267090]
[259.15512085 459.88177490]
[268.04306030 471.97094727]
[276.16992188 484.58435059]
[283.50488281 497.67413330]
[290.02008057 511.19061279]
[295.69085693 525.08258057]
[300.49566650 539.29724121]
[304.41629028 553.78076172]
[307.43783569 568.47821045]
[309.54888916 583.33374023]
[310.74139404 598.29107666]
[311.01086426 613.29339600]
[310.35626221 628.28393555]
[308.78005981 643.20568848]
[306.28826904 658.00213623]
[302.89028931 672.61712646]
[298.59906006 686.99517822]
[293.43084717 701.08178711]
[287.40521240 714.82354736]
[280.54507446 728.16827393]
[272.87643433 741.06542969]
[264.42837524 753.46594238]
[255.23294067 765.32293701]
[245.32502747 776.59130859]
[234.74220276 787.22839355]
[223.52462769 797.19384766]
[211.71484375 806.44976807]
[199.35765076 814.96118164]
[186.49992371 822.69567871]
[173.19044495 829.62396240]
[159.47969055 835.71978760]
[145.41967773 840.95996094]
[131.06373596 845.32470703]
[116.46633911 848.79736328]
[101.68283844 851.36480713]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 163]
[54 162]
[55 161]
[56 160]
[57 159]
[58 158]
[59 154]
[60 153]
[61 152]
[62 151]
[63 150]
[65 149]
[66 148]
[68 147]
[69 146]
[70 145]
[71 144]
[72 143]
[74 141]
[77 139]
[78 138]
[79 137]
[81 135]
[82 134]
[83 133]
[95 132]
[96 131]
[97 130]
[98 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
