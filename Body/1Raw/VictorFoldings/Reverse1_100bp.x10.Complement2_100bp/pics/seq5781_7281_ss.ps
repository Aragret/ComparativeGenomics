%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxAAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCU\
) } def
/len { sequence length } bind def

/coor [
[43.36767197 425.29077148]
[44.44257736 440.27951050]
[43.32355881 455.26504517]
[40.03446198 469.92791748]
[34.64540100 483.95559692]
[27.27124214 497.04907227]
[18.06916428 508.92929077]
[7.23531246 519.34301758]
[-4.99939108 528.06823730]
[-18.37416267 534.91906738]
[-32.60391617 539.74938965]
[-47.38534546 542.45623779]
[-62.40338135 542.98199463]
[-77.33791351 541.31542969]
[-91.87062073 537.49200439]
[-105.69172668 531.59326172]
[-118.50662994 523.74499512]
[-130.04219055 514.11437988]
[-140.05252075 502.90673828]
[-148.32426453 490.36096191]
[-154.68109131 476.74447632]
[-158.98750305 462.34753418]
[-161.15171814 447.47695923]
[-161.12760925 432.44973755]
[-158.91569519 417.58618164]
[-154.56309509 403.20309448]
[-148.16261292 389.60708618]
[-139.85066223 377.08792114]
[-129.80441284 365.91247559]
[-118.23800659 356.31893921]
[-105.39797974 348.51177979]
[-91.55802155 342.65744019]
[-77.01312256 338.88067627]
[-62.07331848 337.26202393]
[-47.05704498 337.83596802]
[-32.28437805 340.59027100]
[-18.07019615 345.46621704]
[-11.19078350 332.13677979]
[-4.31137133 318.80734253]
[2.56804109 305.47793579]
[8.94664574 291.90173340]
[14.81560707 278.09753418]
[20.68456841 264.29336548]
[18.54382133 249.55340576]
[31.06380272 239.88073730]
[36.93276215 226.07655334]
[42.80172348 212.27238464]
[48.67068481 198.46820068]
[54.53964615 184.66401672]
[50.30701447 173.33215332]
[55.08356476 161.78363037]
[66.81267548 156.41792297]
[72.88650513 142.70265198]
[78.96034241 128.98738098]
[71.14571381 121.22182465]
[66.06085205 111.44857788]
[64.18680573 100.59223938]
[65.70086670 89.67987061]
[70.45980072 79.74383545]
[78.01338196 71.72413635]
[87.64701080 66.37947845]
[98.44930267 64.21549225]
[109.39828491 65.43689728]
[116.27770233 52.10747147]
[123.15711212 38.77804184]
[117.61193085 26.50345421]
[120.11216736 13.46661091]
[129.52500916 4.38473082]
[142.25837708 2.41224170]
[149.33547974 -10.81328583]
[156.41259766 -24.03881264]
[163.48970032 -37.26433945]
[170.56680298 -50.48986816]
[157.05000305 -43.98630524]
[142.08525085 -45.01386642]
[129.58427429 -53.30395126]
[122.81479645 -66.68955231]
[123.54635620 -81.67169952]
[131.58772278 -94.33409882]
[144.83689880 -101.36683655]
[159.83058167 -100.93156433]
[172.64945984 -93.14205933]
[179.94270325 -80.03448486]
[179.80412292 -65.03598022]
[188.76481628 -77.06536102]
[189.37048340 -82.24997711]
[191.67398071 -86.28076172]
[194.95146179 -88.70421600]
[198.40403748 -89.41983032]
[207.89292908 -101.03709412]
[217.38183594 -112.65435791]
[226.87072754 -124.27162170]
[236.35961914 -135.88888550]
[245.84852600 -147.50614929]
[255.33741760 -159.12341309]
[264.65231323 -170.88066101]
[273.79110718 -182.77529907]
[282.92990112 -194.66993713]
[272.04513550 -205.01107788]
[262.30093384 -216.43334961]
[253.80409241 -228.81161499]
[246.64770508 -242.01023865]
[240.91017151 -255.88462830]
[236.65435791 -270.28274536]
[233.92689514 -285.04684448]
[232.75767517 -300.01516724]
[233.15950012 -315.02371216]
[235.12796021 -329.90802002]
[238.64149475 -344.50503540]
[243.66160583 -358.65481567]
[250.13330078 -372.20230103]
[257.98565674 -384.99911499]
[267.13265991 -396.90499878]
[277.47406006 -407.78955078]
[288.89657593 -417.53344727]
[301.27505493 -426.02999878]
[314.47384644 -433.18606567]
[328.34835815 -438.92324829]
[342.74658203 -443.17871094]
[357.51074219 -445.90582275]
[372.47909546 -447.07467651]
[387.48764038 -446.67248535]
[402.37188721 -444.70367432]
[416.96881104 -441.18978882]
[431.11846924 -436.16931152]
[444.66583252 -429.69729614]
[457.46243286 -421.84463501]
[469.36810303 -412.69735718]
[480.25238037 -402.35568237]
[489.99603271 -390.93292236]
[498.49227905 -378.55426025]
[505.64801025 -365.35528564]
[511.38488770 -351.48062134]
[515.64001465 -337.08230591]
[518.36669922 -322.31805420]
[519.53521729 -307.34970093]
[519.13269043 -292.34115601]
[517.16351318 -277.45693970]
[513.64923096 -262.86010742]
[508.62844849 -248.71057129]
[502.15609741 -235.16337585]
[494.30310059 -222.36695862]
[485.15554810 -210.46151733]
[474.81359863 -199.57748413]
[463.39062500 -189.83412170]
[451.01174927 -181.33818054]
[437.81259155 -174.18275452]
[423.93780518 -168.44622803]
[409.53936768 -164.19146729]
[394.77505493 -161.46508789]
[379.80667114 -160.29695129]
[364.79815674 -160.69985962]
[349.91397095 -162.66941833]
[335.31723022 -166.18400574]
[321.16781616 -171.20515442]
[307.62078857 -177.67784119]
[294.82455444 -185.53112793]
[285.68572998 -173.63648987]
[276.54693604 -161.74186707]
[276.26815796 -156.97412109]
[272.99133301 -152.33090210]
[266.95468140 -149.63452148]
[257.46578979 -138.01725769]
[247.97688293 -126.39998627]
[238.48799133 -114.78272247]
[228.99909973 -103.16545868]
[219.51019287 -91.54820251]
[210.02130127 -79.93093872]
[200.79420471 -68.10466766]
[191.83349609 -56.07528687]
[183.79232788 -43.41276169]
[176.71522522 -30.18723488]
[169.63812256 -16.96170807]
[162.56101990 -3.73618054]
[155.48390198 9.48934746]
[161.04167175 25.36227989]
[153.24630737 40.64452744]
[136.48654175 45.65745544]
[129.60713196 58.98688507]
[122.72771454 72.31631470]
[133.62971497 87.67205811]
[135.23516846 106.43571472]
[127.10028839 123.42029572]
[111.47385406 133.93061829]
[92.67560577 135.06121826]
[86.60177612 148.77648926]
[80.52793884 162.49174500]
[82.91347504 180.75074768]
[68.34382629 190.53298950]
[62.47486115 204.33715820]
[56.60589981 218.14134216]
[50.73694229 231.94551086]
[44.86798096 245.74969482]
[46.58893967 261.47702026]
[34.48874283 270.16232300]
[28.61978340 283.96649170]
[22.75082397 297.77069092]
[37.42606354 294.66629028]
[49.09956741 304.08590698]
[49.16605759 319.08575439]
[37.57652664 328.60852051]
[22.87433815 325.63433838]
[15.89747047 312.35733032]
[9.01805782 325.68676758]
[2.13864541 339.01620483]
[-4.74076748 352.34564209]
[7.46819973 361.10684204]
[18.27135277 371.55239868]
[27.43841934 383.45965576]
[34.77400589 396.57479858]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 206]
[38 205]
[39 204]
[40 203]
[41 197]
[42 196]
[43 195]
[45 193]
[46 192]
[47 191]
[48 190]
[49 189]
[52 187]
[53 186]
[54 185]
[63 180]
[64 179]
[65 178]
[69 175]
[70 174]
[71 173]
[72 172]
[73 171]
[84 170]
[85 169]
[89 168]
[90 167]
[91 166]
[92 165]
[93 164]
[94 163]
[95 162]
[96 159]
[97 158]
[98 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
