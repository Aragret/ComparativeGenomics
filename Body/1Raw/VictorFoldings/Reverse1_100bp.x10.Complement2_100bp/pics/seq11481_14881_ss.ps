%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[59.22606277 623.60711670]
[45.38012314 617.59106445]
[33.67146301 608.06164551]
[24.96893883 595.72601318]
[19.91833687 581.49951172]
[18.89444542 566.43780518]
[21.97324371 551.65863037]
[28.92626572 538.25872803]
[39.23754883 527.23236084]
[52.14192963 519.39788818]
[66.68181610 515.33654785]
[66.68181610 500.33654785]
[66.68181610 485.33654785]
[66.68181610 470.33654785]
[66.68181610 455.33654785]
[66.68181610 440.33654785]
[54.29256058 428.96356201]
[53.95547485 411.81127930]
[66.36746216 399.48397827]
[66.14413452 384.48565674]
[65.92080688 369.48730469]
[65.69747925 354.48898315]
[65.47415161 339.49063110]
[57.01551056 330.84320068]
[56.70670319 318.34967041]
[65.25852966 308.69415283]
[65.25852966 293.69415283]
[57.52122879 280.96688843]
[65.25852966 267.16671753]
[65.25852966 252.16670227]
[65.25852966 237.16670227]
[57.63919449 250.08746338]
[45.70166779 259.17016602]
[31.21680832 263.06744385]
[16.33336067 261.20117188]
[3.25919199 253.84822083]
[-6.06621933 242.09930420]
[-10.25950527 227.69735718]
[-8.69861603 212.77879333]
[-1.61510062 199.55668640]
[9.94024372 189.99249268]
[24.25325012 185.50495911]
[39.20066833 186.75982666]
[52.56513977 193.57090759]
[62.36412430 204.92784119]
[67.14374542 219.14399719]
[70.24785614 204.46868896]
[73.35196686 189.79338074]
[76.45607758 175.11808777]
[79.56018829 160.44277954]
[82.66429901 145.76748657]
[77.72827148 131.71455383]
[88.15390778 119.81426239]
[91.25801849 105.13896179]
[89.71247101 97.22796631]
[94.51913452 90.26902771]
[97.84139252 75.64156342]
[85.98135376 67.75546265]
[77.54320526 56.31872940]
[73.52414703 42.71725082]
[74.38739777 28.59062195]
[80.00889587 15.63450718]
[89.69470215 5.39708710]
[102.26651764 -0.90592343]
[116.20507050 -2.53562760]
[119.74474335 -17.11200333]
[123.28441620 -31.68837929]
[119.02217102 -46.92464447]
[129.54431152 -57.46664429]
[133.08398438 -72.04302216]
[136.62365723 -86.61939240]
[140.16333008 -101.19577026]
[143.70300293 -115.77214813]
[147.24267578 -130.34852600]
[150.78234863 -144.92489624]
[154.32202148 -159.50126648]
[157.20729065 -174.22116089]
[159.43241882 -189.05520630]
[161.65753174 -203.88925171]
[163.88264465 -218.72329712]
[166.10775757 -233.55734253]
[168.33288574 -248.39138794]
[170.44750977 -263.24157715]
[172.45152283 -278.10711670]
[174.45553589 -292.97262573]
[176.34883118 -307.85266113]
[178.02037048 -322.75924683]
[179.58088684 -337.67785645]
[181.14141846 -352.59646606]
[166.60630798 -356.42150879]
[152.82548523 -362.42062378]
[140.12199402 -370.45315552]
[128.79360962 -380.33084106]
[119.10588837 -391.82208252]
[111.28593445 -404.65753174]
[105.51705933 -418.53628540]
[101.93447876 -433.13305664]
[100.62218475 -448.10565186]
[101.61093903 -463.10308838]
[104.87756348 -477.77377319]
[110.34547424 -491.77386475]
[117.88650513 -504.77514648]
[127.32389069 -516.47283936]
[138.43638611 -526.59277344]
[150.96351624 -534.89770508]
[164.61161804 -541.19293213]
[179.06074524 -545.33087158]
[193.97222900 -547.21459961]
[208.99649048 -546.79986572]
[223.78134155 -544.09649658]
[237.98022461 -539.16772461]
[251.26028442 -532.12921143]
[263.31021118 -523.14593506]
[273.84753418 -512.42840576]
[282.62527466 -500.22793579]
[289.43762207 -486.83047485]
[294.12493896 -472.55007935]
[296.57730103 -457.72152710]
[296.73724365 -442.69238281]
[294.60101318 -427.81497192]
[290.21868896 -413.43807983]
[283.69299316 -399.89865112]
[275.17691040 -387.51412964]
[264.87005615 -376.57476807]
[253.01405334 -367.33706665]
[239.88679504 -360.01751709]
[225.79602051 -354.78775024]
[211.07205200 -351.77029419]
[196.06001282 -351.03591919]
[194.49949646 -336.11734009]
[192.93896484 -321.19873047]
[195.36953735 -314.21917725]
[191.24253845 -306.07019043]
[193.56892395 -299.05523682]
[189.32106018 -290.96862793]
[187.31704712 -276.10308838]
[185.31303406 -261.23757935]
[187.53472900 -254.18873596]
[183.16693115 -246.16625977]
[180.94180298 -231.33221436]
[178.71669006 -216.49818420]
[176.49157715 -201.66413879]
[174.26644897 -186.83009338]
[172.04133606 -171.99604797]
[184.71629333 -180.01762390]
[199.38056946 -176.86184692]
[207.63381958 -164.33651733]
[204.74819946 -149.61669922]
[192.37670898 -141.13456726]
[177.60632324 -143.74908447]
[168.89839172 -155.96159363]
[165.35871887 -141.38522339]
[161.81904602 -126.80884552]
[158.27937317 -112.23247528]
[154.73971558 -97.65609741]
[151.20004272 -83.07971954]
[147.66036987 -68.50334930]
[144.12069702 -53.92697144]
[148.63612366 -39.73330307]
[137.86079407 -28.14870644]
[134.32112122 -13.57233047]
[130.78144836 1.00404477]
[143.71980286 10.15418625]
[152.17672729 23.60147285]
[154.83219910 39.30253220]
[151.25047302 54.85807800]
[141.95114136 67.87953186]
[128.33410645 76.35578918]
[112.46884918 78.96382141]
[109.14659119 93.59128571]
[105.93331909 108.24307251]
[102.82920837 122.91837311]
[107.54320526 138.02098083]
[97.33959961 148.87159729]
[94.23548889 163.54689026]
[91.13137817 178.22219849]
[88.02726746 192.89749146]
[84.92316437 207.57279968]
[81.81905365 222.24810791]
[80.25852966 237.16670227]
[80.25852966 252.16670227]
[80.25852966 267.16671753]
[87.99582672 280.96688843]
[80.25852966 293.69415283]
[80.25852966 308.69415283]
[89.83321381 324.42333984]
[80.47248840 339.26730347]
[80.69581604 354.26565552]
[80.91914368 369.26397705]
[81.14247131 384.26232910]
[81.36579895 399.26065063]
[92.04623413 407.46691895]
[95.99264526 420.14117432]
[91.97821808 432.58972168]
[81.68181610 440.33654785]
[81.68181610 455.33654785]
[81.68181610 470.33654785]
[81.68181610 485.33654785]
[81.68181610 500.33654785]
[81.68181610 515.33654785]
[96.22170258 519.39788818]
[109.12608337 527.23236084]
[119.43737030 538.25872803]
[126.39038849 551.65863037]
[129.46919250 566.43780518]
[128.44529724 581.49951172]
[123.39469910 595.72601318]
[114.69217682 608.06164551]
[102.98351288 617.59106445]
[89.13757324 623.60711670]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 200]
[12 199]
[13 198]
[14 197]
[15 196]
[16 195]
[19 191]
[20 190]
[21 189]
[22 188]
[23 187]
[26 185]
[27 184]
[29 182]
[30 181]
[31 180]
[46 179]
[47 178]
[48 177]
[49 176]
[50 175]
[51 174]
[53 172]
[54 171]
[56 170]
[57 169]
[65 162]
[66 161]
[67 160]
[69 158]
[70 157]
[71 156]
[72 155]
[73 154]
[74 153]
[75 152]
[76 151]
[77 144]
[78 143]
[79 142]
[80 141]
[81 140]
[82 139]
[83 137]
[84 136]
[85 135]
[86 133]
[87 131]
[88 130]
[89 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
