%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[66.45072937 512.11108398]
[56.34301376 523.20874023]
[45.25444412 533.32647705]
[33.27962494 542.37786865]
[20.52071571 550.28576660]
[7.08658028 556.98272705]
[-6.90816641 562.41149902]
[-21.34412384 566.52581787]
[-36.09812546 569.29064941]
[-51.04429245 570.68231201]
[-66.05510712 570.68890381]
[-81.00250244 569.31048584]
[-95.75894928 566.55877686]
[-110.19853973 562.45721436]
[-124.19808960 557.04083252]
[-137.63815308 550.35583496]
[-150.40405273 542.45922852]
[-162.38688660 533.41839600]
[-173.48442078 523.31054688]
[-183.60195923 512.22180176]
[-192.65318298 500.24679565]
[-200.56086731 487.48776245]
[-207.25755310 474.05352783]
[-212.68611145 460.05868530]
[-216.80021667 445.62265015]
[-219.56475830 430.86862183]
[-220.95616150 415.92242432]
[-220.96255493 400.91159058]
[-219.58389282 385.96423340]
[-216.83192444 371.20782471]
[-212.73013306 356.76831055]
[-207.31350708 342.76885986]
[-200.62826538 329.32888794]
[-192.73146057 316.56311035]
[-183.69044495 304.58044434]
[-173.58236694 293.48309326]
[-162.49345398 283.36572266]
[-150.51832581 274.31469727]
[-137.75915527 266.40722656]
[-124.32479858 259.71075439]
[-110.32987213 254.28244019]
[-95.89377594 250.16857910]
[-81.13968658 247.40428162]
[-66.19347382 246.01312256]
[-51.18265533 246.00697327]
[-36.23530579 247.38589478]
[-21.47895241 250.13810730]
[-7.03949499 254.24014282]
[6.95987368 259.65701294]
[13.64006805 246.22662354]
[20.32026291 232.79624939]
[19.06064987 217.95500183]
[32.13416290 209.04467773]
[38.81435776 195.61430359]
[38.04502106 192.17330933]
[38.90414047 188.18872070]
[41.62905502 184.42997742]
[46.10449219 181.74342346]
[53.37771988 168.62472534]
[60.65095139 155.50604248]
[67.92417908 142.38734436]
[75.19741058 129.26864624]
[82.47064209 116.14995575]
[89.74386597 103.03125763]
[95.40665436 89.14123535]
[99.37875366 74.67671204]
[95.57203674 59.32029343]
[106.40338898 49.09625244]
[110.37548828 34.63172913]
[98.43466187 25.26730728]
[91.00881195 12.08020020]
[89.20239258 -2.90480900]
[93.25975037 -17.40051270]
[102.53262329 -29.20638847]
[115.58347321 -36.54264069]
[130.40830994 -38.31848145]
[134.38040161 -52.78300476]
[138.35249329 -67.24752808]
[142.32460022 -81.71205139]
[138.51788330 -97.06846619]
[149.34922791 -107.29251099]
[153.32133484 -121.75703430]
[157.29342651 -136.22155762]
[161.26551819 -150.68608093]
[147.26467896 -156.10525513]
[133.88392639 -162.91308594]
[121.26058197 -171.03971863]
[109.52417755 -180.40174866]
[98.79513550 -190.90312195]
[89.18356323 -202.43606567]
[80.78809357 -214.88223267]
[73.69487762 -228.11390686]
[67.97669983 -241.99531555]
[63.69223404 -256.38400269]
[60.88545609 -271.13232422]
[59.58515930 -286.08892822]
[59.80469131 -301.10034180]
[61.54180145 -316.01254272]
[64.77865601 -330.67248535]
[69.48204803 -344.92974854]
[75.60371399 -358.63800049]
[83.08082581 -371.65658569]
[91.83666229 -383.85192871]
[101.78137970 -395.09887695]
[112.81291199 -405.28201294]
[124.81807709 -414.29681396]
[137.67367554 -422.05084229]
[151.24777222 -428.46447754]
[165.40109253 -433.47192383]
[179.98840332 -437.02175903]
[194.86000061 -439.07760620]
[209.86329651 -439.61834717]
[224.84429932 -438.63845825]
[239.64932251 -436.14794922]
[254.12640381 -432.17239380]
[268.12701416 -426.75262451]
[281.50744629 -419.94418335]
[294.13046265 -411.81701660]
[305.86645508 -402.45446777]
[316.59503174 -391.95260620]
[326.20608521 -380.41925049]
[334.60101318 -367.97271729]
[341.69363403 -354.74072266]
[347.41122437 -340.85906982]
[351.69503784 -326.47018433]
[354.50115967 -311.72174072]
[355.80081177 -296.76507568]
[355.58062744 -281.75366211]
[353.84286499 -266.84155273]
[350.60534668 -252.18174744]
[345.90133667 -237.92471313]
[339.77905273 -224.21672058]
[332.30139160 -211.19845581]
[323.54501343 -199.00350952]
[313.59979248 -187.75700378]
[302.56781006 -177.57435608]
[290.56225586 -168.56005859]
[277.70632935 -160.80661011]
[264.13192749 -154.39356995]
[249.97837830 -149.38674927]
[235.39091492 -145.83753967]
[220.51922607 -143.78234863]
[205.51591492 -143.24226379]
[190.53494263 -144.22282410]
[175.73004150 -146.71398926]
[171.75794983 -132.24946594]
[167.78585815 -117.78493500]
[163.81375122 -103.32041168]
[167.90458679 -88.99859619]
[156.78912354 -77.73995972]
[152.81703186 -63.27543259]
[148.84492493 -48.81090927]
[144.87283325 -34.34638596]
[156.71162415 -25.24845886]
[164.18548584 -12.27592182]
[166.12855530 2.60995555]
[162.21383667 17.14483070]
[153.00781250 29.10571861]
[139.88867188 36.65097427]
[124.84001160 38.60382462]
[120.86791229 53.06834793]
[124.95874023 67.39016724]
[113.84327698 78.64880371]
[109.87117767 93.11332703]
[120.34622955 82.37678528]
[133.83151245 75.80813599]
[148.74278259 74.17904663]
[163.32829285 77.68090820]
[175.87452698 85.90232849]
[184.90759277 97.87745667]
[189.36628723 112.19947052]
[188.72680664 127.18583679]
[183.06427002 141.07595825]
[173.04391479 152.23805237]
[159.84291077 159.36080933]
[145.01210022 161.60743713]
[130.29380798 158.71401978]
[117.41712189 151.02047729]
[107.89476013 139.43061829]
[102.84542084 125.30602264]
[102.86256409 110.30448914]
[95.58933258 123.42318726]
[88.31610107 136.54188538]
[81.04287720 149.66056824]
[73.76964569 162.77926636]
[66.49641418 175.89796448]
[59.22318649 189.01664734]
[52.24473190 202.29449463]
[45.56453705 215.72488403]
[46.34634018 231.52674866]
[33.75064087 239.47644043]
[27.07044411 252.90682983]
[20.39024925 266.33718872]
[33.15641785 274.23336792]
[45.13955307 283.27380371]
[56.23741531 293.38131714]
[66.35532379 304.46972656]
[75.40694427 316.44439697]
[83.31506348 329.20315552]
[90.01219940 342.63717651]
[95.44121552 356.63183594]
[99.55579376 371.06771851]
[102.32083130 385.82168579]
[103.71273804 400.76782227]
[103.71963501 415.77865601]
[102.34146881 430.72607422]
[99.58998871 445.48254395]
[95.48867035 459.92221069]
[90.07251740 473.92184448]
[83.38773346 487.36203003]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 193]
[50 192]
[51 191]
[53 189]
[54 188]
[58 187]
[59 186]
[60 185]
[61 184]
[62 183]
[63 182]
[64 181]
[65 164]
[66 163]
[68 161]
[69 160]
[76 153]
[77 152]
[78 151]
[79 150]
[81 148]
[82 147]
[83 146]
[84 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
