%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[51.61899948 581.47021484]
[39.18181992 589.89312744]
[25.76962852 596.65637207]
[11.60266876 601.64892578]
[-3.08642483 604.78875732]
[-18.05644417 606.02441406]
[-33.06156921 605.33557129]
[-47.85540390 602.73345947]
[-62.19501495 598.26092529]
[-75.84493256 591.99127197]
[-88.58102417 584.02758789]
[-100.19413757 574.50061035]
[-110.49357605 563.56671143]
[-119.31022644 551.40551758]
[-126.49929810 538.21667480]
[-131.94274902 524.21673584]
[-135.55117798 509.63568115]
[-137.26535034 494.71289062]
[-137.05711365 479.69338989]
[-134.92987061 464.82385254]
[-130.91857910 450.34844971]
[-125.08908844 436.50482178]
[-117.53712463 423.52038574]
[-108.38670349 411.60827637]
[-97.78808594 400.96414185]
[-85.91530609 391.76275635]
[-72.96333313 384.15521240]
[-59.14483643 378.26644897]
[-44.68674088 374.19314575]
[-29.82645226 372.00222778]
[-14.80799675 371.72961426]
[0.12201150 373.37982178]
[3.66168404 358.80343628]
[7.20135641 344.22708130]
[10.74102879 329.65069580]
[9.06538200 325.17840576]
[10.18140221 319.60601807]
[14.60918140 314.69619751]
[18.58127785 300.23168945]
[22.55337334 285.76715088]
[13.12309933 274.26898193]
[12.26149178 259.24496460]
[20.50821114 246.44476318]
[34.87687683 240.89070129]
[38.84897614 226.42617798]
[42.82107162 211.96165466]
[46.79316711 197.49713135]
[50.76526260 183.03260803]
[54.73735809 168.56808472]
[44.37558746 179.41398621]
[31.08398247 186.36619568]
[16.26523972 188.69102478]
[1.48321486 186.14314270]
[-11.70210838 178.99140930]
[-21.89925194 167.99058533]
[-28.03208733 154.30158997]
[-29.45340157 139.36907959]
[-26.01319885 124.76891327]
[-18.07453346 112.04187012]
[-6.47519159 102.53107452]
[7.56072140 97.24021912]
[22.55196190 96.72766113]
[36.91646957 101.04749298]
[49.13832092 109.74383545]
[57.92771530 121.89894104]
[62.35709000 136.23004150]
[61.95896530 151.22494507]
[69.42670441 138.21600342]
[76.89444733 125.20704651]
[76.52043152 110.31713867]
[90.10112000 102.20075989]
[91.06393433 94.19791412]
[97.77812195 89.05490875]
[105.43872070 76.15857697]
[113.09931946 63.26225281]
[120.75991821 50.36592484]
[128.42051697 37.46960068]
[136.08111572 24.57327271]
[143.74171448 11.67694569]
[150.22120667 -1.85140014]
[155.46792603 -15.90387154]
[160.71464539 -29.95634270]
[165.96136475 -44.00881577]
[171.20808411 -58.06128693]
[176.45478821 -72.11375427]
[172.98669434 -90.19838715]
[186.94825745 -100.83048248]
[184.29425049 -116.42749786]
[195.85603333 -125.81761932]
[193.20201111 -141.41462708]
[204.76379395 -150.80476379]
[209.80072021 -164.93379211]
[214.83763123 -179.06282043]
[219.87454224 -193.19184875]
[224.91146851 -207.32087708]
[229.94837952 -221.44990540]
[234.98529053 -235.57893372]
[221.76332092 -242.72593689]
[209.78735352 -251.80760193]
[199.33811951 -262.61102295]
[190.66058350 -274.88299561]
[183.95814514 -288.33578491]
[179.38792419 -302.65408325]
[177.05706787 -317.50222778]
[177.02018738 -332.53216553]
[179.27815247 -347.39157104]
[183.77804565 -361.73211670]
[190.41438293 -375.21765137]
[199.03158569 -387.53204346]
[209.42765808 -398.38662720]
[221.35891724 -407.52694702]
[234.54566956 -414.73876953]
[248.67878723 -419.85299683]
[263.42697144 -422.74978638]
[278.44451904 -423.36120605]
[293.37936401 -421.67294312]
[307.88146973 -417.72454834]
[321.61083984 -411.60858154]
[334.24563599 -403.46844482]
[345.48971558 -393.49490356]
[355.07946777 -381.92178345]
[362.79010010 -369.02038574]
[368.44088745 -355.09307861]
[371.89935303 -340.46643066]
[373.08441162 -325.48321533]
[371.96829224 -310.49475098]
[368.57717896 -295.85232544]
[362.99053955 -281.89916992]
[355.33935547 -268.96243286]
[345.80294800 -257.34530640]
[334.60488892 -247.32014465]
[322.00765991 -239.12193298]
[308.30657959 -232.94287109]
[293.82281494 -228.92779541]
[278.89587402 -227.17082214]
[263.87570190 -227.71313477]
[249.11431885 -230.54202271]
[244.07740784 -216.41299438]
[239.04049683 -202.28396606]
[234.00357056 -188.15493774]
[228.96665955 -174.02589417]
[223.92974854 -159.89686584]
[218.89282227 -145.76783752]
[221.90711975 -131.18142700]
[209.98506165 -120.78070831]
[212.99934387 -106.19429779]
[201.07730103 -95.79357147]
[205.97691345 -84.73371887]
[201.89620972 -72.92136383]
[190.50726318 -66.86703491]
[185.26054382 -52.81456757]
[180.01382446 -38.76209641]
[174.76710510 -24.70962524]
[169.52038574 -10.65715313]
[164.27368164 3.39531803]
[176.29867554 -5.57124472]
[191.00653076 -8.51731300]
[205.55735779 -4.87404728]
[217.14163208 4.65509462]
[223.52261353 18.23018456]
[223.46823120 33.23008728]
[216.98898315 46.75855255]
[205.33592224 56.20344925]
[190.75906372 59.74111557]
[176.07296753 56.68848038]
[164.11328125 47.63496399]
[157.18925476 34.32865524]
[156.63803101 19.33754349]
[148.97743225 32.23387146]
[141.31683350 45.13019562]
[133.65625000 58.02652359]
[125.99564362 70.92285156]
[118.33504486 83.81917572]
[110.67445374 96.71550751]
[103.11006927 109.66850281]
[102.94994354 125.48889923]
[89.90339661 132.67478943]
[82.43566132 145.68374634]
[74.96791840 158.69268799]
[69.20188141 172.54017639]
[65.22978973 187.00469971]
[61.25769043 201.46922302]
[57.28559494 215.93374634]
[53.31349945 230.39826965]
[49.34140015 244.86279297]
[58.85844040 256.97610474]
[59.41145706 272.19277954]
[50.99781418 284.66973877]
[37.01789856 289.73925781]
[33.04579926 304.20379639]
[29.07370567 318.66830444]
[25.31740379 333.19036865]
[21.77773094 347.76675415]
[18.23806000 362.34310913]
[14.69838715 376.91949463]
[28.72244835 382.30038452]
[41.94325256 389.43051147]
[54.14370346 398.19277954]
[65.12345886 408.44329834]
[74.70221710 420.01376343]
[82.72269440 432.71417236]
[89.05317688 446.33596802]
[93.58972168 460.65545654]
[96.25782776 475.43753052]
[97.01367950 490.43945312]
[95.84487915 505.41482544]
[92.77060699 520.11779785]
[87.84134674 534.30688477]
[81.13805389 547.74914551]
[72.77078247 560.22381592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 195]
[33 194]
[34 193]
[35 192]
[38 191]
[39 190]
[40 189]
[44 185]
[45 184]
[46 183]
[47 182]
[48 181]
[49 180]
[67 179]
[68 178]
[69 177]
[71 175]
[73 174]
[74 173]
[75 172]
[76 171]
[77 170]
[78 169]
[79 168]
[80 155]
[81 154]
[82 153]
[83 152]
[84 151]
[85 150]
[87 147]
[89 145]
[91 143]
[92 142]
[93 141]
[94 140]
[95 139]
[96 138]
[97 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
