%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[128.60249329 652.41796875]
[114.27503967 657.17474365]
[99.19548035 657.88842773]
[84.48281097 654.50616455]
[71.22880554 647.27880859]
[60.41700745 636.74279785]
[52.84972000 623.67993164]
[49.08848572 609.05957031]
[49.41241455 593.96661377]
[53.79747009 579.52105713]
[61.91824722 566.79486084]
[73.17213440 556.73242188]
[86.72401428 550.08044434]
[101.56825256 547.33251953]
[102.90649414 532.39233398]
[104.24472809 517.45214844]
[94.52693939 506.22268677]
[95.67127228 491.05215454]
[107.51563263 480.93539429]
[108.85386658 465.99520874]
[110.19210052 451.05502319]
[110.30376434 436.05541992]
[109.18811798 421.09698486]
[108.07247162 406.13851929]
[106.95681763 391.18008423]
[98.29434204 379.06353760]
[104.98380280 364.72610474]
[102.01371765 360.98608398]
[101.36156464 355.34060669]
[104.06439972 349.30682373]
[103.39461517 334.32180786]
[102.72483063 319.33676147]
[102.05504608 304.35171509]
[98.61600494 297.80993652]
[101.48851776 289.13891602]
[101.04191589 274.14556885]
[87.05481720 268.92156982]
[76.10373688 258.71276855]
[69.87867737 245.05212402]
[69.35657501 230.00834656]
[74.64811707 215.87281799]
[84.97611237 204.81047058]
[98.78950500 198.52828979]
[98.34290314 183.53494263]
[97.56157684 168.55531311]
[96.44593048 153.59684753]
[95.33028412 138.63839722]
[94.21463013 123.67994690]
[93.09898376 108.72149658]
[82.51548004 119.35113525]
[67.51644897 119.52165222]
[56.69401932 109.13536072]
[56.24777222 94.14200592]
[66.43333435 83.13045502]
[81.41596222 82.40862274]
[92.61249542 92.38916779]
[92.83582306 77.39083099]
[93.05915070 62.39249039]
[93.28247833 47.39415359]
[92.72426605 32.40454483]
[91.38603210 17.46435928]
[90.04779816 2.52417493]
[79.10800171 -12.28806400]
[87.10708618 -27.90797424]
[85.54656982 -42.82658005]
[83.98604584 -57.74518204]
[74.47611237 -66.45862579]
[73.48348236 -78.91648865]
[80.99658966 -88.39698792]
[79.65835571 -103.33716583]
[78.32012177 -118.27735138]
[76.98188782 -133.21754456]
[68.04425049 -146.27239990]
[74.61522675 -159.63920593]
[73.27699280 -174.57939148]
[71.93875885 -189.51957703]
[62.38824463 -177.95291138]
[47.66055679 -175.10769653]
[34.48899078 -182.28474426]
[28.89541435 -196.20277405]
[33.43712997 -210.49868774]
[46.03772736 -218.63655090]
[60.93638611 -216.89585876]
[71.32239532 -206.07073975]
[71.54572296 -221.06907654]
[71.76905060 -236.06741333]
[64.23806763 -249.98126221]
[72.16400146 -262.59191895]
[72.38732910 -277.59027100]
[72.61065674 -292.58859253]
[70.06677246 -297.14663696]
[69.57484436 -301.76306152]
[70.81348419 -305.64645386]
[73.19380188 -308.24768066]
[74.08661652 -323.22109985]
[74.86793518 -338.20074463]
[75.53771973 -353.18579102]
[61.30138016 -358.26690674]
[49.19620895 -367.31988525]
[40.29858780 -379.53970337]
[35.39969254 -393.83978271]
[34.93512726 -408.94857788]
[38.94620132 -423.52261353]
[47.07625198 -436.26599121]
[58.60236359 -446.04556274]
[72.49963379 -451.99176025]
[87.53234100 -453.57583618]
[102.36376953 -450.65692139]
[115.67513275 -443.49459839]
[126.28279114 -432.72570801]
[133.24351501 -419.30780029]
[135.93835449 -404.43402100]
[134.12770081 -389.42694092]
[127.97255707 -375.62094116]
[118.02021790 -364.24365234]
[105.15564728 -356.30676270]
[90.52275848 -352.51599121]
[89.85297394 -337.53094482]
[92.69467163 -330.70843506]
[89.06002045 -322.32827759]
[88.16720581 -307.35488892]
[87.60899353 -292.36526489]
[87.38566589 -277.36694336]
[87.16233826 -262.36859131]
[94.70928955 -249.52754211]
[86.76738739 -235.84408569]
[86.54405975 -220.84574890]
[86.32073212 -205.84741211]
[86.87893677 -190.85780334]
[88.21717834 -175.91761780]
[89.55541229 -160.97743225]
[98.39732361 -148.99121094]
[91.92207336 -134.55577087]
[93.26030731 -119.61558533]
[94.59854126 -104.67540741]
[95.93677521 -89.73522186]
[106.79099274 -75.94563293]
[98.90464783 -59.30570602]
[100.46517181 -44.38710022]
[102.02569580 -29.46849632]
[111.22209167 -21.61019897]
[112.64427948 -9.19403458]
[104.98798370 1.18594086]
[106.32621765 16.12612534]
[107.66445160 31.06631088]
[117.21496582 19.49964523]
[131.94265747 16.65443802]
[145.11421204 23.83147621]
[150.70779419 37.74951935]
[146.16607666 52.04542160]
[133.56547546 60.18328857]
[118.66682434 58.44260025]
[108.28081512 47.61748123]
[108.05748749 62.61582184]
[107.83415985 77.61415863]
[107.61083221 92.61249542]
[108.05744171 107.60584259]
[109.17308807 122.56430054]
[110.28873444 137.52275085]
[111.40438080 152.48120117]
[112.52003479 167.43965149]
[115.46041870 171.75256348]
[116.36225128 176.30668640]
[115.47500610 180.28511047]
[113.33625031 183.08833313]
[113.78285980 198.08169556]
[127.94568634 203.53054810]
[138.91381836 213.95854187]
[145.03733826 227.75405884]
[145.41157532 242.80223083]
[140.01065063 256.80917358]
[129.68661499 267.65167236]
[116.03526306 273.69897461]
[116.48187256 288.69232178]
[117.04008484 303.68194580]
[117.70986938 318.66696167]
[118.37965393 333.65200806]
[119.04943848 348.63705444]
[119.94225311 363.61044312]
[128.68453979 376.79693604]
[121.91527557 390.06442261]
[123.03092194 405.02288818]
[124.14656830 419.98132324]
[125.26222229 434.93978882]
[132.77532959 421.95697021]
[145.41177368 413.87487793]
[160.34854126 412.49905396]
[174.24871826 418.13687134]
[184.00698853 429.52880859]
[187.44329834 444.12991333]
[183.78999329 458.67822266]
[173.86320496 469.92361450]
[159.88063049 475.35385132]
[144.96600342 473.75582886]
[132.45127869 465.48648071]
[125.13228607 452.39324951]
[123.79405212 467.33343506]
[122.45581818 482.27362061]
[132.31367493 494.33432007]
[130.74368286 509.46673584]
[119.18490601 518.79034424]
[117.84667206 533.73052979]
[116.50843811 548.67071533]
[130.62802124 554.01306152]
[142.78198242 562.96759033]
[152.06842041 574.86987305]
[157.79823303 588.83666992]
[159.54621887 603.83160400]
[157.18267822 618.74188232]
[150.88299561 632.46105957]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 203]
[15 202]
[16 201]
[19 198]
[20 197]
[21 196]
[22 184]
[23 183]
[24 182]
[25 181]
[27 179]
[30 178]
[31 177]
[32 176]
[33 175]
[35 174]
[36 173]
[43 166]
[44 165]
[45 161]
[46 160]
[47 159]
[48 158]
[49 157]
[56 156]
[57 155]
[58 154]
[59 153]
[60 145]
[61 144]
[62 143]
[64 140]
[65 139]
[66 138]
[69 136]
[70 135]
[71 134]
[72 133]
[74 131]
[75 130]
[76 129]
[84 128]
[85 127]
[86 126]
[88 124]
[89 123]
[90 122]
[94 121]
[95 120]
[96 118]
[97 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
