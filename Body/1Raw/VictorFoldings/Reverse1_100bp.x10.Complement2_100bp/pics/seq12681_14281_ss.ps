%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAUGCGGGAGAGUCGGCUACUUGUCAACCUUAUCCAACAAUCGCCAUUGAUUCUAAUCAUACCAUUAAUCCUUCUACUCAUCUAUAAACUUCUUGACxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[100.84687805 646.17279053]
[87.31788635 639.61407471]
[75.05303192 630.91790771]
[64.38690948 620.32153320]
[55.61048126 608.11395264]
[48.96318817 594.62829590]
[44.62637329 580.23242188]
[42.71834183 565.31903076]
[43.29114914 550.29498291]
[46.32917404 535.57012939]
[51.74952698 521.54626465]
[59.40434265 508.60586548]
[69.08479309 497.10202026]
[80.52678680 487.34851074]
[93.41817474 479.61145020]
[107.40727234 474.10192871]
[122.11244965 470.97021484]
[121.44266510 455.98516846]
[113.14478302 443.61608887]
[120.25815582 429.48419189]
[119.58837128 414.49914551]
[118.91858673 399.51412964]
[118.24879456 384.52908325]
[117.57901001 369.54403687]
[116.90922546 354.55899048]
[106.68157196 340.29849243]
[115.30306244 324.02731323]
[114.41024780 309.05392456]
[113.51743317 294.08050537]
[112.17919922 279.14031982]
[110.39672852 264.24661255]
[108.61426544 249.35289001]
[106.83180237 234.45916748]
[95.68778229 227.99075317]
[90.22253418 216.10743713]
[92.63488770 203.05404663]
[102.26448822 193.63674927]
[100.70396423 178.71815491]
[99.14344025 163.79954529]
[90.12404633 151.94628906]
[96.38365936 137.41604614]
[94.82313538 122.49744415]
[93.26261139 107.57884216]
[89.35857391 100.52681732]
[91.79161835 92.42674255]
[90.45338440 77.48655701]
[89.11515045 62.54637146]
[87.77690887 47.60618973]
[86.43867493 32.66600418]
[85.10044098 17.72581863]
[83.76220703 2.78563285]
[82.09066772 -12.12094116]
[80.08665466 -26.98646927]
[78.08264160 -41.85199738]
[76.07862854 -56.71752548]
[72.88674164 -60.84777451]
[71.71545410 -65.34014130]
[72.36431885 -69.36431885]
[74.33242798 -72.28987885]
[72.99419403 -87.23006439]
[71.65596008 -102.17024994]
[70.31772614 -117.11043549]
[68.97949219 -132.05061340]
[59.42898178 -120.48395538]
[44.70129395 -117.63874817]
[31.52973175 -124.81578827]
[25.93615150 -138.73382568]
[30.47786713 -153.02972412]
[43.07846451 -161.16760254]
[57.97712326 -159.42691040]
[68.36312866 -148.60179138]
[68.58645630 -163.60012817]
[68.80978394 -178.59846497]
[69.03311157 -193.59680176]
[69.25643921 -208.59513855]
[69.47976685 -223.59347534]
[69.70309448 -238.59181213]
[62.17211914 -252.50566101]
[70.09805298 -265.11633301]
[70.32138062 -280.11465454]
[70.54470825 -295.11300659]
[56.83511734 -299.51049805]
[44.93397141 -307.58483887]
[35.80122375 -318.67391968]
[30.17048454 -331.87289429]
[28.49006462 -346.10797119]
[30.88730812 -360.22387695]
[37.15899277 -373.07748413]
[46.78850937 -383.63055420]
[58.98842621 -391.03338623]
[72.76485443 -394.69342041]
[73.21146393 -409.68676758]
[73.65806580 -424.68011475]
[74.10467529 -439.67346191]
[74.55127716 -454.66680908]
[74.99788666 -469.66015625]
[60.63310623 -474.33239746]
[48.16730499 -482.86355591]
[38.61102676 -494.56201172]
[32.73895645 -508.47949219]
[31.02711678 -523.48767090]
[33.61427689 -538.36999512]
[40.29071045 -551.91998291]
[50.51518631 -563.03918457]
[63.45885086 -570.82623291]
[78.07242584 -574.64990234]
[93.17124939 -574.20013428]
[107.53131866 -569.51342773]
[119.98854828 -560.96978760]
[129.53306580 -549.26171875]
[135.39115906 -535.33837891]
[137.08792114 -520.32843018]
[134.48580933 -505.44876099]
[127.79576874 -491.90548706]
[117.56012726 -480.79656982]
[104.60864258 -473.02252197]
[89.99123383 -469.21356201]
[89.54463196 -454.22021484]
[89.09802246 -439.22686768]
[88.65142059 -424.23352051]
[88.20481110 -409.24017334]
[87.75820923 -394.24679565]
[102.55854797 -389.12078857]
[115.06593323 -379.66030884]
[124.04878235 -366.78186035]
[128.61790466 -351.73928833]
[128.31454468 -336.00158691]
[123.15638733 -321.10952759]
[113.63701630 -308.52487183]
[100.67869568 -299.48669434]
[85.54304504 -294.88967896]
[85.31971741 -279.89132690]
[85.09638977 -264.89300537]
[92.64334106 -252.05194092]
[84.70143127 -238.36848450]
[84.47810364 -223.37014771]
[84.25477600 -208.37181091]
[84.03144836 -193.37347412]
[83.80812073 -178.37513733]
[83.58479309 -163.37680054]
[83.36146545 -148.37846375]
[83.91967773 -133.38885498]
[85.25791168 -118.44866943]
[86.59614563 -103.50848389]
[87.93437958 -88.56829834]
[89.27261353 -73.62811279]
[90.94415283 -58.72153854]
[92.94817352 -43.85601044]
[94.95218658 -28.99048233]
[96.95619965 -14.12495518]
[99.52339172 -11.70796204]
[101.04743958 -7.92744160]
[100.90022278 -3.28722310]
[98.70239258 1.44739878]
[100.04062653 16.38758469]
[101.37886047 31.32776833]
[102.71709442 46.26795578]
[104.05532837 61.20813751]
[105.39356232 76.14832306]
[106.73179626 91.08850861]
[108.18122101 106.01831818]
[109.74174500 120.93692017]
[111.30226135 135.85552979]
[120.43328094 148.77586365]
[114.06204224 162.23902893]
[115.62256622 177.15762329]
[117.18309021 192.07623291]
[130.97200012 202.84124756]
[132.67552185 219.91206360]
[121.72551727 232.67671204]
[123.50798035 247.57041931]
[125.29045105 262.46414185]
[127.07291412 277.35784912]
[129.79754639 280.73873901]
[131.16688538 284.43865967]
[131.24707031 287.99240112]
[130.24850464 291.00393677]
[128.49082947 293.18768311]
[129.38365173 308.16110229]
[130.27647400 323.13449097]
[139.38783264 332.26388550]
[139.82321167 344.75366211]
[131.89427185 353.88922119]
[132.56405640 368.87426758]
[133.23384094 383.85928345]
[133.90362549 398.84432983]
[134.57341003 413.82937622]
[135.24319458 428.81442261]
[143.58898926 442.25534058]
[136.42770386 455.31539917]
[137.09748840 470.30044556]
[152.02342224 472.10772705]
[166.44827271 476.34722900]
[179.97853088 482.90332031]
[192.24505615 491.59713745]
[202.91322327 502.19146729]
[211.69200134 514.39733887]
[218.34188843 527.88171387]
[222.68148804 542.27679443]
[224.59239197 557.18981934]
[224.02247620 572.21392822]
[220.98728943 586.93933105]
[215.56964111 600.96429443]
[207.91731262 613.90612793]
[198.23907471 625.41186523]
[186.79896545 635.16760254]
[173.90907288 642.90710449]
[159.92103577 648.41931152]
[145.21646118 651.55389404]
[130.19650269 652.22521973]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 191]
[18 190]
[20 188]
[21 187]
[22 186]
[23 185]
[24 184]
[25 183]
[27 180]
[28 179]
[29 178]
[30 173]
[31 172]
[32 171]
[33 170]
[37 167]
[38 166]
[39 165]
[41 163]
[42 162]
[43 161]
[45 160]
[46 159]
[47 158]
[48 157]
[49 156]
[50 155]
[51 154]
[52 150]
[53 149]
[54 148]
[55 147]
[59 146]
[60 145]
[61 144]
[62 143]
[63 142]
[71 141]
[72 140]
[73 139]
[74 138]
[75 137]
[76 136]
[77 135]
[79 133]
[80 132]
[81 131]
[91 122]
[92 121]
[93 120]
[94 119]
[95 118]
[96 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
