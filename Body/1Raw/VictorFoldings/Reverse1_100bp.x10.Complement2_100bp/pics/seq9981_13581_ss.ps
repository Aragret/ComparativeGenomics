%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[66.96512604 611.03985596]
[63.22974777 596.49322510]
[61.27504730 581.60241699]
[61.12953186 566.58453369]
[62.79532623 551.65863037]
[66.24813080 537.04235840]
[71.43760681 522.94891357]
[78.28806305 509.58367920]
[86.69960022 497.14169312]
[96.54956055 485.80432129]
[107.69429779 475.73693848]
[119.97129822 467.08636475]
[133.20150757 459.97869873]
[127.74615479 446.00592041]
[122.29080200 432.03311157]
[116.83544159 418.06030273]
[111.38008881 404.08752441]
[105.92472839 390.11471558]
[100.46936798 376.14190674]
[95.01401520 362.16912842]
[93.73251343 377.11428833]
[89.20124817 391.41348267]
[81.64129639 404.36907959]
[71.42153168 415.34890747]
[59.04060364 423.81723022]
[45.10259628 429.36087036]
[30.28758049 431.70935059]
[15.31841469 430.74807739]
[0.92547584 426.52392578]
[-12.18897247 419.24304199]
[-23.38504791 409.26068115]
[-32.11646652 397.06384277]
[-37.95720673 383.24771118]
[-40.62228394 368.48635864]
[-39.98165894 353.50006104]
[-36.06659698 339.01998901]
[-29.06812096 325.75268555]
[-19.32769775 314.34548950]
[-7.32058620 305.35498047]
[6.36735916 299.21981812]
[21.06827354 296.23934937]
[36.06486511 296.55902100]
[50.62542343 300.16323853]
[64.03949738 306.87609863]
[75.65258789 316.37008667]
[84.89807129 328.18200684]
[91.32267761 341.72921753]
[91.54600525 326.73086548]
[91.76933289 311.73254395]
[81.24326324 301.25698853]
[81.25608826 286.04336548]
[92.31519318 275.07366943]
[92.53852081 260.07531738]
[92.76184845 245.07699585]
[92.98517609 230.07865906]
[93.20850372 215.08032227]
[83.84777832 200.23634338]
[93.42246246 184.50715637]
[93.42246246 169.50715637]
[93.31079865 154.50758362]
[93.08747101 139.50924683]
[92.86414337 124.51090240]
[92.64081573 109.51256561]
[92.19420624 94.51921844]
[91.52442169 79.53417969]
[90.85463715 64.54914093]
[80.58715820 49.26318741]
[89.27572632 34.01603317]
[88.38291168 19.04262924]
[87.37864685 4.07628441]
[86.26300049 -10.88216877]
[85.14735413 -25.84062195]
[84.03170776 -40.79907608]
[82.91605377 -55.75753021]
[81.80040741 -70.71598053]
[80.68476105 -85.67443848]
[74.42321014 -72.04384613]
[63.92666626 -61.32831573]
[50.42824936 -54.78670120]
[35.51374054 -53.18749619]
[20.93528175 -56.71858215]
[8.40553665 -64.96512604]
[-0.60351431 -76.95832825]
[-5.03349638 -91.28925323]
[-4.36397982 -106.27429962]
[1.32638168 -120.15305328]
[11.36909008 -131.29504395]
[24.58433723 -138.39132690]
[39.41960907 -140.60824585]
[54.13207626 -137.68533325]
[66.99332428 -129.96598816]
[76.49243927 -118.35707855]
[81.51372528 -104.22084808]
[83.95944977 -119.02011871]
[86.40518188 -133.81939697]
[88.85090637 -148.61866760]
[83.46724701 -163.49571228]
[93.17617035 -174.79112244]
[95.62189484 -189.59039307]
[81.81742859 -195.66389465]
[69.95758057 -204.98027039]
[60.78787994 -216.95388794]
[54.88473129 -230.83206177]
[52.61921692 -245.74240112]
[54.13375092 -260.74761963]
[59.33312225 -274.90451050]
[67.89050293 -287.32312012]
[79.26795959 -297.22283936]
[92.75029755 -303.98135376]
[107.49001312 -307.17379761]
[122.56054688 -306.59948730]
[137.01455688 -302.29455566]
[149.94345093 -294.52960205]
[160.53450012 -283.79272461]
[168.12196350 -270.75888062]
[172.22886658 -256.24737549]
[172.59704590 -241.17039490]
[169.20336914 -226.47570801]
[162.26116943 -213.08703613]
[152.20681763 -201.84599304]
[139.67234802 -193.45921326]
[125.44570160 -188.45388794]
[110.42116547 -187.14466858]
[107.97544098 -172.34539795]
[113.53403473 -158.52688599]
[103.65017700 -146.17294312]
[101.20445251 -131.37367249]
[98.75872040 -116.57439423]
[96.31299591 -101.77512360]
[95.64321136 -86.79008484]
[96.75885773 -71.83163452]
[97.87451172 -56.87317657]
[98.99015808 -41.91472626]
[100.10580444 -26.95627022]
[101.22145844 -11.99781799]
[102.33710480 2.96063566]
[105.96939087 9.39711761]
[103.35631561 18.14981270]
[104.24913025 33.12321854]
[113.08546448 41.38431931]
[113.95182800 53.85160446]
[105.83967590 63.87935638]
[106.50946045 78.86439514]
[107.17924500 93.84943390]
[110.14834595 98.17359924]
[110.48334503 103.85348511]
[107.63915253 109.28923798]
[107.86248016 124.28757477]
[108.08580780 139.28591919]
[108.30913544 154.28425598]
[111.56596375 162.81835938]
[108.42246246 169.50715637]
[108.42246246 184.50715637]
[116.97428894 194.16268921]
[116.66548157 206.65621948]
[108.20684052 215.30364990]
[107.98351288 230.30198669]
[107.76018524 245.30032349]
[107.53685760 260.29864502]
[107.31352997 275.29699707]
[118.04111481 286.59109497]
[117.60097504 301.79833984]
[106.76766968 311.95587158]
[106.54434204 326.95419312]
[106.32101440 341.95254517]
[108.98680878 356.71377563]
[114.44216919 370.68655396]
[119.89752960 384.65936279]
[125.35288239 398.63214111]
[130.80824280 412.60494995]
[136.26359558 426.57775879]
[141.71894836 440.55053711]
[147.17431641 454.52334595]
[161.72052002 450.78634644]
[176.61111450 448.82995605]
[191.62896729 448.68276978]
[206.55505371 450.34689331]
[221.17170715 453.79806519]
[235.26579285 458.98593140]
[248.63175964 465.83489990]
[261.07470703 474.24505615]
[272.41317749 484.09371948]
[282.48181152 495.23733521]
[291.13375854 507.51336670]
[298.24288940 520.74279785]
[303.70553589 534.73266602]
[307.44201660 549.27899170]
[309.39782715 564.16967773]
[309.54446411 579.18756104]
[307.87979126 594.11358643]
[304.42807007 608.73010254]
[299.23965454 622.82397461]
[292.39019775 636.18969727]
[283.97958374 648.63232422]
[274.13046265 659.97039795]
[262.98648071 670.03863525]
[250.71012878 678.69012451]
[237.48045349 685.79876709]
[223.49035645 691.26092529]
[208.94386292 694.99682617]
[194.05311584 696.95208740]
[179.03526306 697.09814453]
[164.10929871 695.43292236]
[149.49290466 691.98065186]
[135.39920044 686.79174805]
[122.03374481 679.94177246]
[109.59143066 671.53070068]
[98.25370789 661.68115234]
[88.18591309 650.53680420]
[79.53485870 638.26013184]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 173]
[14 172]
[15 171]
[16 170]
[17 169]
[18 168]
[19 167]
[20 166]
[47 165]
[48 164]
[49 163]
[52 160]
[53 159]
[54 158]
[55 157]
[56 156]
[58 153]
[59 152]
[60 150]
[61 149]
[62 148]
[63 147]
[64 144]
[65 143]
[66 142]
[68 139]
[69 138]
[70 136]
[71 135]
[72 134]
[73 133]
[74 132]
[75 131]
[76 130]
[93 129]
[94 128]
[95 127]
[96 126]
[98 124]
[99 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
