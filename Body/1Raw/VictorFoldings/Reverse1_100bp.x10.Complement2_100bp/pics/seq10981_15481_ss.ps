%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[-31.84471703 602.95208740]
[-28.01664734 617.63916016]
[-29.75654793 632.71685791]
[-36.82911301 646.14605713]
[-48.27783585 656.11053467]
[-62.55437469 661.26275635]
[-77.72793579 660.90582275]
[-91.74642944 655.08807373]
[-102.71396637 644.59625244]
[-109.14727020 630.84936523]
[-110.17630005 615.70654297]
[-105.66188049 601.21569824]
[-96.21455383 589.33660889]
[-83.11199188 581.67584229]
[-68.12621307 579.26947021]
[-65.02210236 564.59417725]
[-61.91799164 549.91882324]
[-58.81388092 535.24353027]
[-55.70977020 520.56823730]
[-52.60565948 505.89294434]
[-49.61088562 491.19494629]
[-46.72561264 476.47503662]
[-48.52380753 469.30648804]
[-43.68624878 461.55819702]
[-40.58213806 446.88290405]
[-51.74630356 456.90097046]
[-66.40307617 460.09140015]
[-80.72121429 455.62030029]
[-90.95799255 444.65634155]
[-94.43753815 430.06549072]
[-90.25030518 415.66177368]
[-79.49083710 405.21026611]
[-64.97161865 401.44299316]
[-50.48794556 405.34469604]
[-39.82581711 415.89547729]
[-35.77229691 430.33651733]
[-30.52557945 416.28402710]
[-25.27886200 402.23156738]
[-36.30342484 394.20605469]
[-44.87898254 383.58731079]
[-50.41421509 371.09701538]
[-52.52472305 357.58624268]
[-51.05970383 343.97750854]
[-46.11272812 331.20172119]
[-38.01577377 320.13455200]
[-27.31696320 311.53637695]
[-14.74346352 306.00009155]
[-1.15205777 303.91015625]
[12.52923012 305.41595459]
[18.19201660 291.52593994]
[23.85480309 277.63589478]
[29.51758957 263.74588013]
[34.76430893 249.69340515]
[39.59030533 235.49095154]
[44.41630173 221.28849792]
[49.24230194 207.08604431]
[48.41795349 199.74150085]
[54.24732208 192.70898438]
[59.28423691 178.57995605]
[64.32115173 164.45092773]
[69.35807037 150.32189941]
[55.37684631 155.75563049]
[41.59342194 149.83810425]
[35.90356445 135.95913696]
[41.56668091 122.06925201]
[55.33868790 116.12518311]
[69.33034515 121.53198242]
[75.52657318 135.19142151]
[81.80393219 121.56810760]
[88.08129120 107.94479370]
[86.99069214 94.00556183]
[98.29539490 85.77784729]
[104.57275391 72.15452576]
[110.85011292 58.53121185]
[117.12747192 44.90789413]
[122.79026031 31.01786804]
[127.82717896 16.88883972]
[125.17316437 1.29182780]
[136.73493958 -8.09829712]
[141.77186584 -22.22732544]
[146.80877686 -36.35635757]
[151.84568787 -50.48538589]
[156.88261414 -64.61441803]
[161.91952515 -78.74344635]
[166.95643616 -92.87247467]
[170.06054688 -107.54777527]
[171.06481934 -122.51412201]
[171.95762634 -137.48753357]
[172.85044861 -152.46093750]
[173.63175964 -167.44056702]
[166.51838684 -181.57246399]
[174.81628418 -193.94155884]
[175.48606873 -208.92658997]
[175.70939636 -223.92492676]
[167.76748657 -237.60838318]
[175.31443787 -250.44943237]
[175.09111023 -265.44778442]
[174.86778259 -280.44610596]
[174.64445496 -295.44445801]
[160.95903015 -302.29772949]
[152.03547668 -314.73272705]
[149.92439270 -329.89193726]
[155.11085510 -344.29190063]
[166.40307617 -354.62362671]
[181.20619202 -358.51293945]
[196.11853027 -355.06610107]
[207.71336365 -345.07516479]
[213.32626343 -330.83599854]
[211.66746521 -315.62066650]
[203.11810303 -302.92550659]
[189.64279175 -295.66778564]
[189.86611938 -280.66943359]
[190.08944702 -265.67111206]
[190.31277466 -250.67276001]
[198.23870850 -238.06210327]
[190.70773315 -224.14825439]
[192.62295532 -222.10128784]
[193.84272766 -219.17234802]
[194.02708435 -215.62249756]
[192.93672180 -211.83097839]
[190.47109985 -208.25680542]
[189.80131531 -193.27177429]
[196.96260071 -180.21170044]
[188.61680603 -166.77078247]
[191.45849609 -159.94827271]
[187.82385254 -151.56811523]
[186.93103027 -136.59471130]
[186.03822327 -121.62130737]
[188.77801514 -114.75724792]
[185.01901245 -106.43212891]
[192.99075317 -119.13847351]
[204.45840454 -128.80766296]
[218.32891846 -134.51808167]
[233.28024292 -135.72546387]
[247.88732910 -132.31472778]
[260.75790405 -124.61094666]
[270.66525269 -113.34841919]
[276.66503906 -99.60060120]
[278.18542480 -84.67784882]
[275.08148193 -70.00251007]
[267.64907837 -56.97334290]
[256.59658813 -46.83220291]
[242.97749329 -40.54567719]
[228.08988953 -38.71295929]
[213.35273743 -41.50873184]
[200.17070007 -48.66652298]
[189.80020142 -59.50409317]
[183.22970581 -72.98847198]
[181.08547974 -87.83555603]
[176.04855347 -73.70652771]
[171.01164246 -59.57749939]
[165.97471619 -45.44846725]
[160.93780518 -31.31943893]
[155.90089417 -17.19041061]
[150.86396790 -3.06138062]
[153.87826538 11.52502823]
[141.95620728 21.92575645]
[136.91929626 36.05478668]
[150.90051270 30.62105560]
[164.68394470 36.53858566]
[170.37379456 50.41754532]
[164.71067810 64.30743408]
[150.93867493 70.25149536]
[136.94700623 64.84470367]
[130.75079346 51.18525696]
[124.47342682 64.80857086]
[118.19606781 78.43189240]
[111.91870880 92.05520630]
[113.00930786 105.99443817]
[101.70460510 114.22215271]
[95.42724609 127.84547424]
[89.14988708 141.46878052]
[83.48709869 155.35881042]
[78.45018005 169.48783875]
[73.41326904 183.61686707]
[68.37635040 197.74591064]
[63.44475555 211.91203308]
[58.61875916 226.11448669]
[53.79276276 240.31695557]
[48.96676254 254.51940918]
[49.96365356 258.74554443]
[49.60040665 262.67398071]
[48.13762665 265.91366577]
[45.93614197 268.19842529]
[43.40761566 269.40866089]
[37.74483109 283.29870605]
[32.08204269 297.18872070]
[26.41925621 311.07873535]
[39.10338211 321.55804443]
[47.92278290 335.42553711]
[52.02557755 351.32034302]
[51.02209091 367.68673706]
[45.02184677 382.92654419]
[34.62173462 395.55517578]
[20.84665298 404.34619141]
[5.04852533 408.45050049]
[-11.22638988 407.47827148]
[-16.47310829 421.53076172]
[-21.71982574 435.58322144]
[-25.90683746 449.98699951]
[-29.01094818 464.66232300]
[-32.00572205 479.36032104]
[-34.89099503 494.08020020]
[-33.47071457 503.10354614]
[-37.93035889 508.99703979]
[-41.03446960 523.67236328]
[-44.13857651 538.34765625]
[-47.24268723 553.02294922]
[-50.34679794 567.69824219]
[-53.45090866 582.37353516]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 210]
[16 209]
[17 208]
[18 207]
[19 206]
[20 205]
[21 203]
[22 202]
[24 201]
[25 200]
[36 199]
[37 198]
[38 197]
[49 188]
[50 187]
[51 186]
[52 185]
[53 180]
[54 179]
[55 178]
[56 177]
[58 176]
[59 175]
[60 174]
[61 173]
[68 172]
[69 171]
[70 170]
[72 168]
[73 167]
[74 166]
[75 165]
[76 158]
[77 157]
[79 155]
[80 154]
[81 153]
[82 152]
[83 151]
[84 150]
[85 149]
[86 130]
[87 128]
[88 127]
[89 126]
[90 124]
[92 122]
[93 121]
[94 116]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
