%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[31.00254822 652.72473145]
[19.08168602 663.10107422]
[3.32117152 661.92559814]
[-6.92856169 649.89569092]
[-5.58652878 634.14849854]
[6.55106592 624.02648926]
[7.66671467 609.06805420]
[8.78236294 594.10961914]
[9.89801216 579.15112305]
[11.01366043 564.19268799]
[12.12930965 549.23425293]
[13.24495792 534.27575684]
[0.27357590 526.91314697]
[-8.24981213 514.59802246]
[-10.59059525 499.74267578]
[-6.23158216 485.28518677]
[4.01392317 474.10858154]
[18.15327072 468.46585083]
[19.26891899 453.50741577]
[20.38456726 438.54895020]
[10.21963120 449.57955933]
[-4.26802588 453.46643066]
[-18.58924675 449.00518799]
[-28.30644226 437.57818604]
[-30.40863800 422.72622681]
[-24.24444199 409.05133057]
[-11.72390079 400.79083252]
[3.27336287 400.50430298]
[16.10028267 408.28057861]
[22.78234291 421.71029663]
[25.88645172 407.03500366]
[28.99056244 392.35968018]
[32.09467316 377.68438721]
[35.19878387 363.00909424]
[38.30289459 348.33377075]
[41.40700150 333.65847778]
[44.51111221 318.98318481]
[47.61522293 304.30786133]
[39.30070114 292.00323486]
[42.23965454 277.07617188]
[55.20227814 268.43856812]
[58.30638504 253.76325989]
[61.41049576 239.08795166]
[55.07720184 228.78184509]
[57.54318237 216.53019714]
[68.02115631 209.00857544]
[71.34341431 194.38111877]
[74.66567230 179.75366211]
[77.98793793 165.12619019]
[81.31019592 150.49873352]
[84.63245392 135.87127686]
[87.84572601 121.21949005]
[90.94983673 106.54418182]
[93.94461060 91.84618378]
[96.82988739 77.12628937]
[99.71515656 62.40639877]
[98.29487610 53.38306046]
[102.75451660 47.48955536]
[98.04051971 32.38694763]
[108.24412537 21.53633881]
[111.34823608 6.86103630]
[114.45234680 -7.81426573]
[108.08376312 -19.03050041]
[110.97130585 -31.18968964]
[121.03634644 -37.89949036]
[116.54772949 -53.07061005]
[126.91175079 -63.76809692]
[130.23400879 -78.39556122]
[124.38088226 -95.85472107]
[136.79682922 -108.25678253]
[139.90093994 -122.93209076]
[143.00505066 -137.60739136]
[146.10916138 -152.28269958]
[139.74057007 -163.49893188]
[142.62811279 -175.65811157]
[152.69316101 -182.36791992]
[156.01541138 -196.99537659]
[159.33767700 -211.62283325]
[162.65994263 -226.25028992]
[148.38505554 -230.89173889]
[134.59140015 -236.81205750]
[121.39324951 -243.96218872]
[108.89999390 -252.28286743]
[97.21514130 -261.70513916]
[86.43553162 -272.15097046]
[76.65048218 -283.53378296]
[67.94107819 -295.75921631]
[60.37948990 -308.72601318]
[54.02837372 -322.32669067]
[48.94036102 -336.44857788]
[45.15761566 -350.97460938]
[42.71147919 -365.78445435]
[41.62222290 -380.75540161]
[41.89887238 -395.76333618]
[43.53913498 -410.68395996]
[46.52942276 -425.39361572]
[50.84495163 -439.77035522]
[56.44996262 -453.69512939]
[63.29800797 -467.05252075]
[71.33234406 -479.73181152]
[80.48639679 -491.62796021]
[90.68431091 -502.64239502]
[101.84157562 -512.68383789]
[113.86573792 -521.66912842]
[126.65716553 -529.52368164]
[140.10986328 -536.18255615]
[154.11233521 -541.59051514]
[168.54858398 -545.70269775]
[183.29895020 -548.48504639]
[198.24124146 -549.91461182]
[213.25160217 -549.97943115]
[228.20567322 -548.67895508]
[242.97952271 -546.02404785]
[257.45074463 -542.03668213]
[271.49938965 -536.74987793]
[285.00909424 -530.20745850]
[297.86785889 -522.46362305]
[309.96917725 -513.58258057]
[321.21273804 -503.63781738]
[331.50540161 -492.71188354]
[340.76184082 -480.89520264]
[348.90536499 -468.28576660]
[355.86853027 -454.98803711]
[361.59356689 -441.11218262]
[366.03311157 -426.77322388]
[369.15029907 -412.08996582]
[370.91937256 -397.18405151]
[371.32559204 -382.17904663]
[370.36569214 -367.19927979]
[368.04751587 -352.36886597]
[364.39038086 -337.81066895]
[359.42449951 -323.64538574]
[353.19107056 -309.99035645]
[345.74176025 -296.95877075]
[337.13824463 -284.65856934]
[327.45187378 -273.19168091]
[316.76284790 -262.65316772]
[305.15982056 -253.13031006]
[292.73889160 -244.70205688]
[279.60296631 -237.43821716]
[265.86096191 -231.39900208]
[251.62669373 -226.63446045]
[237.01812744 -223.18405151]
[222.15634155 -221.07638550]
[207.16445923 -220.32891846]
[192.16671753 -220.94784546]
[177.28739929 -222.92803955]
[173.96513367 -208.30058289]
[170.64288330 -193.67311096]
[167.32061768 -179.04565430]
[173.40689087 -162.58587646]
[160.78445435 -149.17858887]
[157.68034363 -134.50328064]
[154.57623291 -119.82798004]
[151.47213745 -105.15267944]
[157.80541992 -94.84656525]
[155.33944702 -82.59492493]
[144.86146545 -75.07329559]
[141.53921509 -60.44583893]
[146.26545715 -46.32097244]
[135.66380310 -34.57722855]
[141.75009155 -18.11745453]
[129.12765503 -4.71015596]
[126.02353668 9.96514702]
[122.91943359 24.64044952]
[127.85545349 38.69338226]
[117.42982483 50.59366608]
[114.43505096 65.29167175]
[111.54977417 80.01155853]
[108.66450500 94.73145294]
[110.32765961 102.61856079]
[105.62513733 109.64829254]
[102.52102661 124.32360077]
[103.80680847 133.36708069]
[99.25991058 139.19352722]
[95.93765259 153.82099915]
[92.61539459 168.44845581]
[89.29313660 183.07591248]
[85.97087860 197.70336914]
[82.64861298 212.33084106]
[88.50174713 229.78999329]
[76.08580017 242.19206238]
[72.98168945 256.86737061]
[69.87757874 271.54266357]
[78.23240662 284.68933105]
[74.87534332 299.52795410]
[62.29052734 307.41198730]
[59.18641663 322.08728027]
[56.08230591 336.76257324]
[52.97819519 351.43789673]
[49.87408447 366.11318970]
[46.76997375 380.78848267]
[43.66586304 395.46380615]
[40.56175613 410.13909912]
[37.45764542 424.81439209]
[35.34302139 439.66461182]
[34.22737122 454.62304688]
[33.11172485 469.58151245]
[46.25758743 477.25924683]
[54.73178864 489.83203125]
[56.89793396 504.77618408]
[52.37938690 519.11993408]
[42.12346649 530.03442383]
[28.20341110 535.39141846]
[27.08776283 550.34985352]
[25.97211456 565.30834961]
[24.85646629 580.26678467]
[23.74081612 595.22521973]
[22.62516785 610.18371582]
[21.50951958 625.14215088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 210]
[7 209]
[8 208]
[9 207]
[10 206]
[11 205]
[12 204]
[18 198]
[19 197]
[20 196]
[30 195]
[31 194]
[32 193]
[33 192]
[34 191]
[35 190]
[36 189]
[37 188]
[38 187]
[41 184]
[42 183]
[43 182]
[46 180]
[47 179]
[48 178]
[49 177]
[50 176]
[51 175]
[52 173]
[53 172]
[54 170]
[55 169]
[56 168]
[58 167]
[60 165]
[61 164]
[62 163]
[65 161]
[67 159]
[68 158]
[70 155]
[71 154]
[72 153]
[73 152]
[76 150]
[77 149]
[78 148]
[79 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
