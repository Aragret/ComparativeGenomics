%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[46.29104233 613.36065674]
[45.79533386 628.44897461]
[41.24612808 642.84362793]
[32.98101425 655.47656250]
[21.61331749 665.41021729]
[7.98659277 671.90753174]
[-6.88796425 674.48632812]
[-21.90656281 672.95520020]
[-35.95472336 667.42785645]
[-47.98997879 658.31439209]
[-57.11923599 646.29113770]
[-62.66503906 632.25024414]
[-64.21585083 617.23364258]
[-61.65660095 602.35571289]
[-55.17719269 588.72045898]
[-45.25844574 577.33972168]
[-32.63639450 569.05804443]
[-18.24768257 564.48992920]
[-3.16004491 563.97442627]
[0.37962756 549.39807129]
[3.91930008 534.82171631]
[7.45897245 520.24530029]
[10.67224598 505.59353638]
[13.55751896 490.87362671]
[16.44279099 476.15374756]
[19.32806396 461.43383789]
[22.21333694 446.71395874]
[17.06863213 432.73608398]
[27.31593132 420.68188477]
[22.17122650 406.70401001]
[32.41852570 394.64981079]
[35.30379868 379.92993164]
[38.18906784 365.21002197]
[26.18450928 356.35812378]
[19.18492889 343.11746216]
[18.62600899 328.08920288]
[24.67213631 314.25213623]
[36.17317581 304.37219238]
[50.88286591 300.44967651]
[53.76813889 285.72976685]
[56.65341187 271.00988770]
[46.69546127 262.11709595]
[42.39750671 249.36282349]
[44.98352814 236.04434204]
[53.88304520 225.66084290]
[66.85270691 220.99409485]
[69.95681763 206.31878662]
[73.06092834 191.64347839]
[76.16503906 176.96818542]
[79.26914978 162.29287720]
[82.37326050 147.61758423]
[85.47737122 132.94227600]
[88.58148193 118.26697540]
[91.68559265 103.59166718]
[90.06130219 100.09394836]
[89.98663330 95.89724731]
[91.73920441 91.70970154]
[95.26989746 88.33715820]
[99.02619934 73.81509399]
[102.78249359 59.29303741]
[106.43058777 44.74341583]
[109.97026062 30.16704178]
[108.95430756 21.08928490]
[113.67266083 15.40079308]
[117.32074738 0.85117304]
[120.86042023 -13.72520256]
[124.40009308 -28.30157852]
[127.93976593 -42.87795258]
[131.47943115 -57.45432663]
[135.01910400 -72.03070068]
[138.55877686 -86.60707855]
[134.29653931 -101.84334564]
[144.81867981 -112.38534546]
[148.35835266 -126.96172333]
[151.57162476 -141.61351013]
[154.45689392 -156.33340454]
[157.34217834 -171.05328369]
[160.22744751 -185.77317810]
[163.11271667 -200.49307251]
[165.99798584 -215.21296692]
[168.88327026 -229.93286133]
[171.76853943 -244.65274048]
[157.41026306 -249.03953552]
[143.57914734 -254.87942505]
[130.42181396 -262.11050415]
[118.07773590 -270.65612793]
[106.67776489 -280.42572021]
[96.34275055 -291.31570435]
[87.18225098 -303.21063232]
[79.29337311 -315.98440552]
[72.75974274 -329.50164795]
[67.65061188 -343.61904907]
[64.02015686 -358.18695068]
[61.90684509 -373.05093384]
[61.33308792 -388.05340576]
[62.30496216 -403.03540039]
[64.81217194 -417.83801270]
[68.82814026 -432.30441284]
[74.31028748 -446.28115845]
[81.20050812 -459.62017822]
[89.42575073 -472.17999268]
[98.89883423 -483.82751465]
[109.51934052 -494.43927002]
[121.17467499 -503.90270996]
[133.74128723 -512.11761475]
[147.08596802 -518.99682617]
[161.06726074 -524.46740723]
[175.53695679 -528.47143555]
[190.34164429 -530.96643066]
[205.32441711 -531.92596436]
[220.32643127 -531.33978271]
[235.18865967 -529.21423340]
[249.75357056 -525.57171631]
[263.86672974 -520.45092773]
[277.37857056 -513.90618896]
[290.14584351 -506.00674438]
[302.03320312 -496.83642578]
[312.91464233 -486.49243164]
[322.67480469 -475.08441162]
[331.21026611 -462.73327637]
[338.43048096 -449.56997681]
[344.25894165 -435.73403931]
[348.63388062 -421.37216187]
[351.50888062 -406.63653564]
[352.85351562 -391.68341064]
[352.65350342 -376.67126465]
[350.91094971 -361.75927734]
[347.64437866 -347.10549927]
[342.88833618 -332.86526489]
[336.69332886 -319.18954468]
[329.12493896 -306.22326660]
[320.26348877 -294.10394287]
[310.20281982 -282.95999146]
[299.04965210 -272.90957642]
[286.92218018 -264.05923462]
[273.94900513 -256.50277710]
[260.26757812 -250.32029724]
[246.02297974 -245.57736206]
[231.36621094 -242.32421875]
[216.45262146 -240.59536743]
[201.44030762 -240.40911865]
[186.48843384 -241.76747131]
[183.60314941 -227.04757690]
[180.71788025 -212.32769775]
[177.83261108 -197.60780334]
[174.94734192 -182.88790894]
[172.06205750 -168.16801453]
[169.17678833 -153.44812012]
[166.29151917 -138.72824097]
[167.94459534 -135.61380005]
[168.17127991 -131.54396057]
[166.53898621 -127.19781494]
[162.93472290 -123.42205048]
[159.39505005 -108.84567261]
[163.91047668 -94.65200806]
[153.13516235 -83.06740570]
[149.59548950 -68.49102783]
[146.05581665 -53.91465759]
[142.51614380 -39.33827972]
[138.97647095 -24.76190567]
[135.43679810 -10.18552971]
[131.89712524 4.39084530]
[133.37342834 11.63255119]
[128.19471741 19.15709496]
[124.54663086 33.70671463]
[121.00695801 48.28308868]
[122.48326874 55.52479553]
[117.30455780 63.04933929]
[113.54825592 77.57139587]
[109.79195404 92.09346008]
[106.36089325 106.69577789]
[103.25678253 121.37107849]
[100.15267181 136.04638672]
[97.04856110 150.72167969]
[93.94445038 165.39698792]
[90.84033966 180.07229614]
[87.73623657 194.74758911]
[84.63212585 209.42289734]
[81.52801514 224.09820557]
[93.02822113 236.50148010]
[94.85131836 253.15013123]
[86.47575378 267.46136475]
[71.37330627 273.89514160]
[68.48802948 288.61505127]
[65.60276031 303.33493042]
[77.74312592 312.52041626]
[84.66324615 326.01110840]
[85.03820801 341.10678101]
[78.84719086 354.81198120]
[67.36696625 364.43038940]
[52.90896225 368.09530640]
[50.02368927 382.81518555]
[47.13841629 397.53509521]
[52.07674789 412.56582642]
[42.03582382 423.56716919]
[46.97415161 438.59790039]
[36.93322754 449.59924316]
[34.04795456 464.31912231]
[31.16268349 479.03900146]
[28.27741051 493.75891113]
[25.39213753 508.47879028]
[27.08547211 513.41638184]
[26.74914360 518.04675293]
[24.84006310 521.64819336]
[22.03534698 523.78497314]
[18.49567604 538.36138916]
[14.95600319 552.93774414]
[11.41633034 567.51409912]
[24.58720589 574.89184570]
[35.27837372 585.55023193]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 208]
[20 207]
[21 206]
[22 205]
[23 201]
[24 200]
[25 199]
[26 198]
[27 197]
[29 195]
[31 193]
[32 192]
[33 191]
[39 185]
[40 184]
[41 183]
[46 179]
[47 178]
[48 177]
[49 176]
[50 175]
[51 174]
[52 173]
[53 172]
[54 171]
[58 170]
[59 169]
[60 168]
[61 166]
[62 165]
[64 164]
[65 162]
[66 161]
[67 160]
[68 159]
[69 158]
[70 157]
[71 156]
[73 154]
[74 153]
[75 149]
[76 148]
[77 147]
[78 146]
[79 145]
[80 144]
[81 143]
[82 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
