%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[34.63188171 799.50616455]
[19.82110214 801.92657471]
[4.86968946 803.21984863]
[-10.13671398 803.37872314]
[-25.11215401 802.40216064]
[-39.97084808 800.29589844]
[-54.62768936 797.07183838]
[-68.99872589 792.74853516]
[-83.00163269 787.35076904]
[-96.55620575 780.90942383]
[-109.58480835 773.46142578]
[-122.01280975 765.04937744]
[-133.76902771 755.72155762]
[-144.78610229 745.53131104]
[-155.00096130 734.53704834]
[-164.35507202 722.80169678]
[-172.79486084 710.39251709]
[-180.27197266 697.38061523]
[-186.74359131 683.84045410]
[-192.17265320 669.84967041]
[-196.52804565 655.48834229]
[-199.78483582 640.83874512]
[-201.92436218 625.98474121]
[-202.93435669 611.01153564]
[-202.80905151 596.00482178]
[-201.54916382 581.05053711]
[-199.16189575 566.23443604]
[-195.66094971 551.64123535]
[-191.06634521 537.35461426]
[-185.40441895 523.45642090]
[-178.70759583 510.02624512]
[-171.01425171 497.14099121]
[-162.36842346 484.87448120]
[-152.81965637 473.29699707]
[-142.42263794 462.47482300]
[-131.23693848 452.46994019]
[-119.32659912 443.33972168]
[-106.75986481 435.13638306]
[-93.60870361 427.90695190]
[-79.94845581 421.69287109]
[-65.85736847 416.52966309]
[-51.41614532 412.44696045]
[-36.70751190 409.46813965]
[-21.81571579 407.61022949]
[-6.82605886 406.88391113]
[8.17560005 407.29330444]
[23.10333061 408.83612061]
[25.76912689 394.07489014]
[28.43492126 379.31365967]
[31.10071754 364.55245972]
[29.61500168 362.17532349]
[28.98138237 359.06643677]
[29.48328590 355.54742432]
[31.28259087 352.03643799]
[34.38967133 349.00326538]
[37.92934036 334.42691040]
[41.46901321 319.85052490]
[45.00868607 305.27413940]
[48.54835892 290.69778442]
[52.08803177 276.12139893]
[46.24749374 259.57284546]
[59.06814194 246.35494995]
[62.39039993 231.72749329]
[65.71266174 217.10003662]
[60.98641205 202.97515869]
[71.58806610 191.23141479]
[74.91032410 176.60395813]
[70.18407440 162.47909546]
[80.78572845 150.73535156]
[76.05947876 136.61048889]
[86.66113281 124.86674500]
[89.98339081 110.23928070]
[86.03180695 96.82747650]
[95.38915253 86.43845367]
[89.18826294 75.12864685]
[92.25651550 63.01379776]
[102.42034149 56.45459366]
[105.96001434 41.87821960]
[108.73562622 27.13725662]
[110.73963928 12.27172756]
[112.74365234 -2.59380078]
[110.78881836 -11.51660442]
[114.88976288 -17.66510201]
[117.11488342 -32.49914551]
[119.33999634 -47.33319092]
[110.21747589 -59.95925140]
[112.68537903 -74.97138214]
[124.77861786 -83.59049988]
[127.00373840 -98.42454529]
[129.22885132 -113.25858307]
[123.62429047 -128.05383301]
[133.16397095 -139.49253845]
[135.38908386 -154.32658386]
[129.78451538 -169.12182617]
[139.32418823 -180.56053162]
[125.16119385 -185.64930725]
[112.26325989 -193.40364075]
[101.12615967 -203.52545166]
[92.17796326 -215.62570190]
[85.76262665 -229.23928833]
[82.12673187 -243.84294128]
[81.41002655 -258.87530518]
[83.64007568 -273.75863647]
[88.73114777 -287.92080688]
[96.48756409 -300.81747437]
[106.61118317 -311.95294189]
[118.71287537 -320.89920044]
[132.32749939 -327.31231689]
[146.93173218 -330.94586182]
[161.96423340 -331.66012573]
[176.84719849 -329.42767334]
[191.00854492 -324.33432007]
[203.90396118 -316.57580566]
[215.03779602 -306.45037842]
[223.98207092 -294.34722900]
[230.39300537 -280.73156738]
[234.02416992 -266.12677002]
[234.73600769 -251.09414673]
[232.50114441 -236.21154785]
[227.40548706 -222.05102539]
[219.64489746 -209.15686035]
[209.51766968 -198.02467346]
[197.41307068 -189.08235168]
[183.79637146 -182.67361450]
[169.19096375 -179.04481506]
[154.15823364 -178.33541870]
[159.92195129 -164.60119629]
[150.22312927 -152.10147095]
[147.99801636 -137.26742554]
[153.76173401 -123.53320312]
[144.06289673 -111.03347015]
[141.83778381 -96.19942474]
[139.61267090 -81.36537933]
[148.64483643 -69.57743835]
[146.59956360 -54.50191116]
[134.17404175 -45.10807037]
[131.94892883 -30.27402878]
[129.72380066 -15.43998432]
[127.60918427 -0.58978701]
[125.60517120 14.27574158]
[123.60115814 29.14126968]
[135.47630310 19.97715950]
[150.46838379 20.46456146]
[161.72322083 30.38064194]
[164.09524536 45.19190216]
[156.50001526 58.12683487]
[142.40995789 63.27176285]
[128.26686096 58.27449036]
[120.53639221 45.41789246]
[116.99671936 59.99426651]
[122.83725739 76.54283142]
[110.01660919 89.76071930]
[113.96819305 103.17252350]
[104.61084747 113.56154633]
[101.28858948 128.18901062]
[105.77721405 143.36012268]
[95.41318512 154.05761719]
[99.90180969 169.22872925]
[89.53778076 179.92622375]
[86.21552277 194.55368042]
[90.70414734 209.72480774]
[80.34011841 220.42228699]
[77.01786041 235.04974365]
[73.69560242 249.67721558]
[79.89649200 260.98703003]
[76.82823181 273.10186768]
[66.66440582 279.66107178]
[63.12473297 294.23745728]
[59.58506393 308.81381226]
[56.04539108 323.39019775]
[52.50571823 337.96658325]
[48.96604538 352.54293823]
[45.86193466 367.21826172]
[43.19614029 381.97946167]
[40.53034210 396.74069214]
[37.86454773 411.50189209]
[52.38895798 415.27801514]
[66.58618927 420.14175415]
[80.37491608 426.06530762]
[93.67615509 433.01470947]
[106.41372681 440.95019531]
[118.51466370 449.82626343]
[129.90965271 459.59210205]
[140.53341675 470.19177246]
[150.32511902 481.56454468]
[159.22866821 493.64526367]
[167.19305420 506.36477661]
[174.17266846 519.65020752]
[180.12753296 533.42541504]
[185.02351379 547.61157227]
[188.83261108 562.12738037]
[191.53295898 576.88964844]
[193.10913086 591.81390381]
[193.55206299 606.81463623]
[192.85925293 621.80584717]
[191.03463745 636.70178223]
[188.08868408 651.41705322]
[184.03826904 665.86737061]
[178.90658569 679.96997070]
[172.72303772 693.64404297]
[165.52302551 706.81134033]
[157.34782410 719.39636230]
[148.24421692 731.32708740]
[138.26438904 742.53515625]
[127.46547699 752.95629883]
[115.90935516 762.53094482]
[103.66220856 771.20416260]
[90.79418182 778.92626953]
[77.37899780 785.65313721]
[63.49348831 791.34606934]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 176]
[48 175]
[49 174]
[50 173]
[55 172]
[56 171]
[57 170]
[58 169]
[59 168]
[60 167]
[62 164]
[63 163]
[64 162]
[66 160]
[67 159]
[69 157]
[71 155]
[72 154]
[74 152]
[77 150]
[78 149]
[79 141]
[80 140]
[81 139]
[83 138]
[84 137]
[85 136]
[88 133]
[89 132]
[90 131]
[92 129]
[93 128]
[95 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
