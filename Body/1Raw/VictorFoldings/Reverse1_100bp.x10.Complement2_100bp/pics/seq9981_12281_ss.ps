%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[183.02481079 675.56494141]
[177.62910461 661.47418213]
[176.06517029 646.46697998]
[178.43963623 631.56652832]
[184.59062195 617.78869629]
[194.09870911 606.07293701]
[206.31565857 597.21807861]
[220.40847778 591.82781982]
[218.84794617 576.90924072]
[217.28742981 561.99060059]
[215.72689819 547.07202148]
[214.16638184 532.15338135]
[212.60586548 517.23480225]
[211.04533386 502.31619263]
[209.48481750 487.39758301]
[207.92428589 472.47897339]
[205.92027283 457.61346436]
[203.47454834 442.81417847]
[201.02882385 428.01492310]
[197.38073730 413.46530151]
[192.55473328 399.26284790]
[187.72874451 385.06039429]
[182.90274048 370.85794067]
[178.07673645 356.65545654]
[173.25074768 342.45300293]
[168.42474365 328.25054932]
[163.59875488 314.04809570]
[158.77275085 299.84564209]
[153.94676208 285.64318848]
[149.12075806 271.44073486]
[137.70005798 261.87951660]
[140.58599854 246.32374573]
[135.75999451 232.12129211]
[130.93400574 217.91883850]
[126.10800171 203.71638489]
[121.28200531 189.51393127]
[110.57352448 183.88764954]
[106.43667603 172.09484863]
[111.60382080 160.27691650]
[106.98981476 146.00418091]
[102.37580109 131.73144531]
[97.76179504 117.45871735]
[83.33426666 105.66301727]
[87.58837128 87.51929474]
[82.55145264 73.39026642]
[77.51454163 59.26123810]
[72.47762299 45.13220978]
[67.44070435 31.00317955]
[64.03493500 28.30972862]
[61.88012695 25.00498390]
[61.01484680 21.55727577]
[61.32159805 18.39934731]
[62.55194473 15.88054085]
[58.36493301 1.47675908]
[47.45784378 -5.40787125]
[44.26700211 -17.49101257]
[49.97563934 -28.15581512]
[46.00354385 -42.62033844]
[42.03144836 -57.08486176]
[38.05935287 -71.54938507]
[34.08725357 -86.01390839]
[31.25789261 -71.28317261]
[25.26359367 -57.53295517]
[16.39683342 -45.43417358]
[5.09024334 -35.57714462]
[-8.10450554 -28.44281769]
[-22.54361153 -24.37929535]
[-37.52255630 -23.58484077]
[-52.31048965 -26.09822083]
[-66.18586731 -31.79680061]
[-78.47168732 -40.40253448]
[-88.56849670 -51.49552917]
[-95.98364258 -64.53453064]
[-100.35532379 -78.88333893]
[-101.47024536 -93.84185028]
[-99.27400208 -108.68019867]
[-93.87374878 -122.67438507]
[-85.53298950 -135.14160156]
[-74.65867615 -145.47355652]
[-61.78139114 -153.16612244]
[-47.52944946 -157.84397888]
[-32.59823608 -159.27885437]
[-17.71627617 -157.40074158]
[-3.60969424 -152.30130005]
[9.03321934 -144.22932434]
[19.59558868 -133.57867432]
[27.56205177 -120.86901855]
[32.54241180 -106.72692871]
[23.04801369 -119.07577515]
[25.06785393 -134.15473938]
[36.89910889 -143.13009644]
[38.68157578 -158.02380371]
[40.46403885 -172.91752625]
[42.24650574 -187.81124878]
[44.02897263 -202.70495605]
[45.81143951 -217.59867859]
[47.59390259 -232.49240112]
[33.48615265 -237.80603027]
[21.06038284 -246.34205627]
[11.03901386 -257.60418701]
[4.00467253 -270.93765259]
[0.36632782 -285.56729126]
[0.33550772 -300.64251709]
[3.91400433 -315.28689575]
[10.89376831 -328.64901733]
[20.86900520 -339.95202637]
[33.25976944 -348.53878784]
[47.34567642 -353.91006470]
[62.30778885 -355.75360107]
[77.27622986 -353.96218872]
[91.38076019 -348.63998413]
[103.80135345 -340.09643555]
[113.81589508 -328.82821655]
[120.84214783 -315.49050903]
[124.47162628 -300.85867310]
[124.49330139 -285.78341675]
[120.90592957 -271.14123535]
[113.91806793 -257.78332520]
[103.93597412 -246.48637390]
[91.54000854 -237.90711975]
[77.45085144 -232.54438782]
[62.48762131 -230.70993042]
[60.70515442 -215.81620789]
[58.92269135 -200.92250061]
[57.14022446 -186.02877808]
[55.35775757 -171.13505554]
[53.57529068 -156.24134827]
[51.79282761 -141.34762573]
[61.17195892 -129.83383179]
[59.57645035 -114.70408630]
[47.43613052 -104.94445801]
[48.55177689 -89.98600769]
[52.52387619 -75.52148438]
[56.49597168 -61.05696106]
[60.46806717 -46.59243393]
[64.44016266 -32.12791061]
[77.57228088 -20.48684502]
[72.76871490 -2.71025205]
[76.95572662 11.69353008]
[81.56974030 25.96626282]
[86.60665131 40.09529114]
[91.64356995 54.22432327]
[96.68048859 68.35335541]
[101.71739960 82.48238373]
[110.93698883 86.20874786]
[116.66573334 94.33698273]
[117.07513428 104.27272797]
[112.03453064 112.84471130]
[116.64853668 127.11744690]
[121.26255035 141.39018250]
[125.87655640 155.66290283]
[139.82531738 167.68428040]
[135.48446655 184.68792725]
[140.31045532 198.89038086]
[145.13645935 213.09283447]
[149.96246338 227.29528809]
[154.78845215 241.49774170]
[166.55433655 252.07482910]
[163.32321167 266.61474609]
[168.14921570 280.81719971]
[172.97520447 295.01965332]
[177.80120850 309.22210693]
[182.62719727 323.42456055]
[187.45320129 337.62701416]
[192.27920532 351.82946777]
[197.10519409 366.03192139]
[201.93119812 380.23437500]
[206.75718689 394.43682861]
[211.58319092 408.63928223]
[215.60575867 394.18872070]
[225.81564331 383.19973755]
[239.93196106 378.12728882]
[254.80107117 380.10458374]
[267.10116577 388.68988037]
[274.08441162 401.96520996]
[274.19067383 416.96484375]
[267.39627075 430.33779907]
[255.21905518 439.09652710]
[240.37947083 441.28433228]
[226.19268799 436.41241455]
[215.82809448 425.56918335]
[218.27381897 440.36846924]
[220.71954346 455.16772461]
[223.59242249 458.42358398]
[225.12561035 462.05865479]
[225.36439514 465.60525513]
[224.50129700 468.65841675]
[222.84289551 470.91845703]
[224.40341187 485.83706665]
[225.96394348 500.75567627]
[227.52445984 515.67425537]
[229.08499146 530.59289551]
[230.64550781 545.51147461]
[232.20603943 560.43011475]
[233.76655579 575.34869385]
[235.32707214 590.26727295]
[250.23030090 592.62451172]
[264.01522827 598.75952148]
[275.74197388 608.25402832]
[284.61099243 620.46069336]
[290.01757812 634.54730225]
[291.59307861 649.55328369]
[289.23013306 664.45556641]
[283.08978271 678.23815918]
[273.59075928 689.96124268]
[261.38064575 698.82550049]
[247.29199219 704.22668457]
[232.28538513 705.79638672]
[217.38398743 703.42767334]
[203.60380554 697.28204346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 196]
[9 195]
[10 194]
[11 193]
[12 192]
[13 191]
[14 190]
[15 189]
[16 188]
[17 183]
[18 182]
[19 181]
[20 169]
[21 168]
[22 167]
[23 166]
[24 165]
[25 164]
[26 163]
[27 162]
[28 161]
[29 160]
[30 159]
[32 157]
[33 156]
[34 155]
[35 154]
[36 153]
[39 151]
[40 150]
[41 149]
[42 148]
[44 144]
[45 143]
[46 142]
[47 141]
[48 140]
[53 139]
[54 138]
[57 136]
[58 135]
[59 134]
[60 133]
[61 132]
[88 131]
[91 128]
[92 127]
[93 126]
[94 125]
[95 124]
[96 123]
[97 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
