%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUCCAAAACCGAGCAUUCUUCCGGAUCUAUCCCCUAACACGCCACACACUACGAUCCCAUCUUAGGCUCAUACAACCUCUUUAUUUUACACGUAUCACCxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[119.07616425 570.02630615]
[104.64012909 574.78753662]
[89.48130035 573.65698242]
[75.91127777 566.80694580]
[65.99938965 555.28204346]
[61.25713730 540.83978271]
[62.40766907 525.68243408]
[69.27554321 512.12145996]
[80.81345367 502.22473145]
[95.26196289 497.50146484]
[96.37760925 482.54299927]
[97.49326324 467.58456421]
[86.02739716 458.11502075]
[82.29198456 443.53729248]
[87.92256927 429.38986206]
[100.95458221 421.17565918]
[102.07022858 406.21722412]
[103.18588257 391.25875854]
[104.30152893 376.30032349]
[105.41717529 361.34185791]
[106.53282166 346.38339233]
[106.64449310 331.38381958]
[105.75167847 316.41040039]
[97.27055359 304.16622925]
[104.17273712 289.92999268]
[103.27992249 274.95660400]
[94.79879761 262.71243286]
[101.70098114 248.47618103]
[100.80815887 233.50277710]
[99.91534424 218.52937317]
[89.47650146 204.42272949]
[97.85478973 188.02497864]
[96.73913574 173.06652832]
[95.62348938 158.10807800]
[94.50784302 143.14962769]
[93.39218903 128.19117737]
[91.35852814 126.26182556]
[89.96657562 123.41067505]
[89.57125092 119.87809753]
[90.43400574 116.02839661]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[92.09580994 72.91117859]
[91.87248230 57.91284180]
[91.64915466 42.91450500]
[91.42582703 27.91616821]
[90.64450836 12.93653011]
[81.70687103 -0.11832374]
[88.27784729 -13.48513126]
[74.65074158 -24.45424271]
[73.20156097 -41.54853439]
[84.34040070 -54.14873123]
[82.77987671 -69.06733704]
[81.21935272 -83.98593903]
[79.65883636 -98.90454865]
[78.09831238 -113.82315063]
[76.53778839 -128.74176025]
[74.97726440 -143.66035461]
[73.41674042 -158.57896423]
[71.85621643 -173.49757385]
[62.72520447 -186.41790771]
[69.09643555 -199.88107300]
[67.53591919 -214.79966736]
[65.64262390 -229.67970276]
[63.41750717 -244.51374817]
[61.19239044 -259.34780884]
[58.96727371 -274.18182373]
[56.74215317 -289.01586914]
[54.51703644 -303.84991455]
[52.29191971 -318.68395996]
[36.70941162 -323.36578369]
[24.77131081 -334.33508301]
[18.83330727 -349.35839844]
[20.03700638 -365.40942383]
[28.09081650 -379.27844238]
[41.33845520 -388.21435547]
[38.89273071 -403.01361084]
[36.44700241 -417.81289673]
[34.00127411 -432.61215210]
[18.97214699 -432.45169067]
[4.09467411 -434.58740234]
[-10.28239441 -438.96920776]
[-23.82203865 -445.49444580]
[-36.20687103 -454.01010132]
[-47.14657593 -464.31655884]
[-56.38470459 -476.17224121]
[-63.70470810 -489.29925537]
[-68.93498993 -503.38983154]
[-71.95294952 -518.11370850]
[-72.68783569 -533.12573242]
[-71.12242889 -548.07397461]
[-67.29341888 -562.60803223]
[-61.29056931 -576.38720703]
[-53.25458908 -589.08850098]
[-43.37385559 -600.41424561]
[-31.87998772 -610.09881592]
[-19.04241753 -617.91528320]
[-5.16207647 -623.68041992]
[9.43566036 -627.25903320]
[24.40860176 -628.56726074]
[39.40575790 -627.57446289]
[54.07558060 -624.30383301]
[68.07418060 -618.83215332]
[81.07341003 -611.28759766]
[92.76855469 -601.84704590]
[102.88546753 -590.73175049]
[111.18697357 -578.20239258]
[117.47850037 -564.55261230]
[121.61254120 -550.10235596]
[123.49220276 -535.19036865]
[123.07342529 -520.16619873]
[120.36601257 -505.38208008]
[115.43344116 -491.18453979]
[108.39132690 -477.90637207]
[99.40476227 -465.85888672]
[88.68439484 -455.32446289]
[76.48152161 -446.55004883]
[63.08221054 -439.74133301]
[48.80054474 -435.05789185]
[51.24627304 -420.25863647]
[53.69200134 -405.45935059]
[56.13772964 -390.66006470]
[69.62707520 -387.41882324]
[80.89775848 -379.25524902]
[88.22876740 -367.37521362]
[90.48519135 -353.55496216]
[87.29375458 -339.87576294]
[79.10414886 -328.41040039]
[67.12596130 -320.90908813]
[69.35108185 -306.07504272]
[71.57619476 -291.24099731]
[73.80131531 -276.40695190]
[76.02643585 -261.57290649]
[78.25154877 -246.73886108]
[80.47666931 -231.90483093]
[83.07955933 -229.52632141]
[84.65972137 -225.76890564]
[84.58161163 -221.12701416]
[82.45452118 -216.36019897]
[84.01504517 -201.44158936]
[93.03443909 -189.58833313]
[86.77482605 -175.05809021]
[88.33534241 -160.13949585]
[89.89586639 -145.22088623]
[91.45639038 -130.30227661]
[93.01691437 -115.38367462]
[94.57743835 -100.46507263]
[96.13796234 -85.54646301]
[97.69848633 -70.62786102]
[99.25901031 -55.70925522]
[110.30548096 -49.07563400]
[115.59320068 -37.11227036]
[112.98677063 -24.09624481]
[103.21803284 -14.82336617]
[112.05994415 -2.83713388]
[105.58469391 11.59829617]
[117.05920410 1.93725920]
[131.79598999 4.73491955]
[138.93165588 17.92894554]
[133.20603943 31.79319191]
[118.83985901 36.10745239]
[106.42416382 27.69284058]
[106.64749146 42.69117737]
[106.87081909 57.68951416]
[107.09414673 72.68785095]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[108.35064697 127.07552338]
[109.46629333 142.03398132]
[110.58193970 156.99243164]
[111.69759369 171.95088196]
[112.81324005 186.90933228]
[122.05952454 195.90205383]
[122.68080139 208.38395691]
[114.88874817 217.63655090]
[115.78157043 232.60995483]
[116.67438507 247.58335876]
[125.21936798 260.89852905]
[118.25332642 274.06378174]
[119.14614105 289.03717041]
[127.69112396 302.35235596]
[120.72508240 315.51760864]
[121.61789703 330.49099731]
[130.21800232 318.20123291]
[144.05650330 312.41366577]
[158.84535217 314.92156982]
[170.00209045 324.94790649]
[174.06968689 339.38586426]
[169.78771973 353.76168823]
[158.48303223 363.62091064]
[143.65850830 365.90850830]
[129.90765381 359.91564941]
[121.49127960 347.49905396]
[120.37563324 362.45751953]
[119.25997925 377.41595459]
[118.14433289 392.37442017]
[117.02868652 407.33285522]
[115.91303253 422.29132080]
[127.58236694 432.34780884]
[131.05200195 447.17395020]
[125.19544220 461.03631592]
[112.45171356 468.70019531]
[111.33606720 483.65866089]
[110.22041321 498.61712646]
[123.80841827 505.43142700]
[133.75057983 516.93017578]
[138.53082275 531.35992432]
[137.42016602 546.52026367]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 206]
[11 205]
[12 204]
[16 200]
[17 199]
[18 198]
[19 197]
[20 196]
[21 195]
[22 185]
[23 184]
[25 182]
[26 181]
[28 179]
[29 178]
[30 177]
[32 174]
[33 173]
[34 172]
[35 171]
[36 170]
[41 169]
[43 167]
[44 166]
[45 165]
[46 164]
[47 163]
[48 157]
[50 155]
[53 151]
[54 150]
[55 149]
[56 148]
[57 147]
[58 146]
[59 145]
[60 144]
[61 143]
[63 141]
[64 140]
[65 136]
[66 135]
[67 134]
[68 133]
[69 132]
[70 131]
[71 130]
[77 123]
[78 122]
[79 121]
[80 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
