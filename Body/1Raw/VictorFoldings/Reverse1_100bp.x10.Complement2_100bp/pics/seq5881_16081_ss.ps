%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[88.35506439 730.41320801]
[74.22299194 725.34350586]
[60.69828415 718.82427979]
[47.92911911 710.92706299]
[36.05540466 701.73834229]
[25.20723534 691.35882568]
[15.50346947 679.90216064]
[7.05042791 667.49395752]
[-0.05927418 654.27008057]
[-5.74773884 640.37554932]
[-9.95263958 625.96246338]
[-12.62790585 611.18884277]
[-13.74422646 596.21643066]
[-13.28936863 581.20941162]
[-11.26831818 566.33215332]
[-7.70321751 551.74768066]
[-2.63312793 537.61572266]
[3.88639975 524.09118652]
[11.78393364 511.32220459]
[20.97294426 499.44869995]
[31.35275269 488.60079956]
[42.80963135 478.89730835]
[55.21805191 470.44454956]
[68.44206238 463.33517456]
[82.33676910 457.64706421]
[96.74993896 453.44250488]
[111.52365112 450.76757812]
[110.40800476 435.80914307]
[109.29235077 420.85067749]
[100.33400726 412.72204590]
[99.28211975 400.26904297]
[107.24407196 390.12164307]
[106.35125732 375.14822388]
[105.45844269 360.17483521]
[104.56562805 345.20141602]
[101.02957153 338.71157837]
[103.77266693 329.99874878]
[103.10288239 315.01370239]
[94.80500031 302.64462280]
[101.91837311 288.51272583]
[101.24858856 273.52767944]
[100.57880402 258.54266357]
[92.28091431 246.17356873]
[99.39428711 232.04167175]
[98.72450256 217.05662537]
[98.05471802 202.07159424]
[97.38493347 187.08654785]
[84.50020599 176.27810669]
[83.39756012 159.15797424]
[95.24672699 146.28875732]
[94.35391235 131.31535339]
[93.46109772 116.34194183]
[85.64812469 110.19019318]
[82.41595459 100.78594971]
[84.79622650 91.13085175]
[92.02921295 84.30659485]
[91.58261108 69.31324005]
[91.13600159 54.31989288]
[90.68939972 39.32654190]
[82.54464722 25.76285744]
[89.89957428 12.81085968]
[89.45297241 -2.18249035]
[89.00636292 -17.17584038]
[80.17085266 -26.57246208]
[80.10754395 -39.06965256]
[88.30496216 -47.96508789]
[88.08163452 -62.96342468]
[87.85830688 -77.96176147]
[84.60147858 -86.49586487]
[87.74497986 -93.18467712]
[87.74497986 -108.18467712]
[87.74497986 -123.18467712]
[87.63331604 -138.18426514]
[87.40998840 -153.18260193]
[85.05187225 -156.82858276]
[84.07488251 -160.65089417]
[84.36484528 -164.19367981]
[85.67129517 -167.08500671]
[87.64661407 -169.07405090]
[88.31639862 -184.05908203]
[88.98618317 -199.04412842]
[89.65596771 -214.02915955]
[74.84758759 -216.53746033]
[60.45970154 -220.84655762]
[46.71042633 -226.89114380]
[33.80819702 -234.57957458]
[21.94860458 -243.79531860]
[11.31144238 -254.39863586]
[2.05796456 -266.22879028]
[-5.67154837 -279.10644531]
[-11.75991821 -292.83639526]
[-16.11484718 -307.21047974]
[-18.67031670 -322.01080322]
[-19.38758469 -337.01296997]
[-18.25577736 -351.98956299]
[-15.29205513 -366.71356201]
[-10.54134560 -380.96173096]
[-4.07566786 -394.51809692]
[4.00695896 -407.17709351]
[13.58400440 -418.74688721]
[24.51028442 -429.05203247]
[36.62015533 -437.93630981]
[49.73004150 -445.26507568]
[63.64119339 -450.92718506]
[78.14272308 -454.83679199]
[93.01480103 -456.93469238]
[108.03195190 -457.18899536]
[122.96653748 -455.59591675]
[137.59213257 -452.17959595]
[151.68704224 -446.99179077]
[165.03758240 -440.11117554]
[177.44134521 -431.64205933]
[188.71031189 -421.71279907]
[198.67362976 -410.47393799]
[207.18028259 -398.09588623]
[214.10130310 -384.76623535]
[219.33175659 -370.68710327]
[222.79235840 -356.07192993]
[224.43066406 -341.14224243]
[224.22180176 -326.12438965]
[222.16897583 -311.24603271]
[218.30326843 -296.73272705]
[212.68331909 -282.80447388]
[205.39430237 -269.67245483]
[196.54672241 -257.53573608]
[186.27470398 -246.57830811]
[174.73397827 -236.96627808]
[162.09948730 -228.84535217]
[148.56278992 -222.33865356]
[134.32907104 -217.54483032]
[119.61411285 -214.53652954]
[104.64100647 -213.35937500]
[103.97122192 -198.37434387]
[103.30143738 -183.38929749]
[102.63165283 -168.40426636]
[102.40832520 -153.40592957]
[102.63165283 -138.40759277]
[105.87438965 -131.76631165]
[102.74497986 -123.18467712]
[102.74497986 -108.18467712]
[102.74497986 -93.18467712]
[102.85665131 -78.18508911]
[103.07997894 -63.18675232]
[103.30330658 -48.18841553]
[113.10183716 -33.62971878]
[103.99971771 -17.62244606]
[104.44631958 -2.62909627]
[104.89292908 12.36425400]
[113.00573730 24.85551453]
[105.68274689 38.87993622]
[106.12935638 53.87328720]
[106.57595825 68.86663818]
[107.02256775 83.85998535]
[117.58404541 99.21405029]
[108.43450165 115.44912720]
[109.32731628 130.42253113]
[110.22013092 145.39593506]
[121.25634766 153.11712646]
[125.76475525 165.60249329]
[122.31019592 178.21789551]
[112.36997223 186.41676331]
[113.03975677 201.40180969]
[113.70954132 216.38684082]
[114.37932587 231.37188721]
[122.72512054 244.81280518]
[115.56384277 257.87286377]
[116.23362732 272.85791016]
[116.90341187 287.84295654]
[125.24920654 301.28387451]
[118.08792114 314.34393311]
[118.75770569 329.32897949]
[119.53903198 344.30859375]
[120.43184662 359.28201294]
[121.32466125 374.25543213]
[122.21747589 389.22882080]
[132.71141052 404.36022949]
[124.25080872 419.73504639]
[125.36645508 434.69348145]
[126.48210144 449.65194702]
[141.48916626 450.10571289]
[156.36657715 452.12567139]
[170.95133972 455.68969727]
[185.08364868 460.75875854]
[198.60868835 467.27731323]
[211.37823486 475.17391968]
[223.25239563 484.36206055]
[234.10105896 494.74108887]
[243.80538940 506.19726562]
[252.25903320 518.60504150]
[259.36938477 531.82855225]
[265.05850220 545.72283936]
[269.26412964 560.13568115]
[271.94009399 574.90924072]
[273.05715942 589.88153076]
[272.60302734 604.88854980]
[270.58270264 619.76593018]
[267.01831055 634.35058594]
[261.94888306 648.48278809]
[255.43002319 662.00769043]
[247.53311157 674.77703857]
[238.34468079 686.65093994]
[227.96539307 697.49938965]
[216.50898743 707.20343018]
[204.10098267 715.65679932]
[190.87731934 722.76678467]
[176.98287964 728.45562744]
[162.56991577 732.66082764]
[147.79634094 735.33648682]
[132.82400513 736.45318604]
[117.81697083 735.99865723]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 179]
[28 178]
[29 177]
[32 175]
[33 174]
[34 173]
[35 172]
[37 171]
[38 170]
[40 168]
[41 167]
[42 166]
[44 164]
[45 163]
[46 162]
[47 161]
[50 157]
[51 156]
[52 155]
[56 153]
[57 152]
[58 151]
[59 150]
[61 148]
[62 147]
[63 146]
[66 144]
[67 143]
[68 142]
[70 141]
[71 140]
[72 139]
[73 137]
[74 136]
[79 135]
[80 134]
[81 133]
[82 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
