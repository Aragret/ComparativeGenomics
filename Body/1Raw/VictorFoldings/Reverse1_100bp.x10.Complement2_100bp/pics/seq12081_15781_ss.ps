%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGUCUAAGUGUUAGACUACAAAACCAAUUUGAUAUAAAUGUUCUCCUUUUGGGCCAUUACUACAGCCCCAACUCCCUAUCCUCCUCUUACCCCCUAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[54.53526306 528.93133545]
[43.10156631 538.64898682]
[31.05678558 547.59802246]
[18.45249367 555.74017334]
[5.34266615 563.04046631]
[-8.21655750 569.46777344]
[-22.16711426 574.99444580]
[-36.44926453 579.59686279]
[-51.00185013 583.25537109]
[-65.76255798 585.95422363]
[-80.66816711 587.68188477]
[-95.65486908 588.43103027]
[-110.65847015 588.19830322]
[-125.61473083 586.98486328]
[-140.45960999 584.79577637]
[-155.12951660 581.64050293]
[-169.56166077 577.53253174]
[-183.69422913 572.48944092]
[-197.46670532 566.53283691]
[-210.82009888 559.68817139]
[-223.69725037 551.98486328]
[-236.04299927 543.45581055]
[-247.80448914 534.13757324]
[-258.93136597 524.07000732]
[-269.37594604 513.29632568]
[-279.09353638 501.86257935]
[-288.04251099 489.81774902]
[-296.18453979 477.21340942]
[-303.48480225 464.10351562]
[-309.91198730 450.54425049]
[-315.43856812 436.59368896]
[-320.04092407 422.31149292]
[-323.69934082 407.75888062]
[-326.39810181 392.99816895]
[-328.12570190 378.09252930]
[-328.87472534 363.10583496]
[-328.64193726 348.10223389]
[-327.42837524 333.14599609]
[-325.23922729 318.30111694]
[-322.08389282 303.63122559]
[-317.97579956 289.19909668]
[-312.93261719 275.06655884]
[-306.97592163 261.29412842]
[-300.13122559 247.94078064]
[-292.42779541 235.06367493]
[-283.89868164 222.71797180]
[-274.58038330 210.95654297]
[-264.51278687 199.82974243]
[-253.73901367 189.38520813]
[-242.30520630 179.66769409]
[-230.26031494 170.71878052]
[-217.65592957 162.57681274]
[-204.54600525 155.27664185]
[-190.98670959 148.84954834]
[-177.03608704 143.32302856]
[-162.75389099 138.72076416]
[-148.20124817 135.06245422]
[-133.44052124 132.36376953]
[-118.53488159 130.63626099]
[-103.54817963 129.88732910]
[-88.54457855 130.12017822]
[-73.58832550 131.33383179]
[-58.74348068 133.52305603]
[-44.07360077 136.67851257]
[-29.64150620 140.78666687]
[-15.50900078 145.82992554]
[-1.73660016 151.78671265]
[11.61671925 158.63150024]
[24.49377441 166.33499146]
[36.83942413 174.86418152]
[46.15430832 163.10693359]
[55.46919250 151.34967041]
[64.34008789 139.25392151]
[72.75470734 126.83643341]
[81.16932678 114.41893768]
[89.58394623 102.00144196]
[97.53062439 89.27940369]
[104.99836731 76.27044678]
[112.46611023 63.26149750]
[108.56027985 48.18229675]
[116.31894684 35.09575272]
[130.71873474 31.46506882]
[138.18647766 18.45611572]
[145.65422058 5.44716406]
[153.12194824 -7.56178808]
[160.58969116 -20.57073975]
[148.24374390 -29.10560608]
[136.65527344 -38.64362717]
[125.90557098 -49.11790466]
[116.07003784 -60.45496368]
[107.21767426 -72.57528687]
[99.41056824 -85.39385223]
[92.70348358 -98.82074738]
[87.14345551 -112.76178741]
[82.76950073 -127.11919403]
[79.61228943 -141.79225159]
[77.69397736 -156.67803955]
[77.02800751 -171.67213440]
[77.61905670 -186.66937256]
[79.46297455 -201.56455994]
[82.54684448 -216.25320435]
[86.84901428 -230.63227844]
[92.33931732 -244.60093689]
[98.97924042 -258.06115723]
[106.72220612 -270.91857910]
[115.51390076 -283.08297729]
[125.29267120 -294.46902466]
[135.98989868 -304.99688721]
[147.53057861 -314.59268188]
[159.83374023 -323.18911743]
[172.81309509 -330.72589111]
[186.37757874 -337.15014648]
[200.43208313 -342.41683960]
[214.87799072 -346.48895264]
[229.61398315 -349.33801270]
[244.53669739 -350.94396973]
[259.54144287 -351.29559326]
[274.52301025 -350.39041138]
[289.37628174 -348.23477173]
[303.99710083 -344.84378052]
[318.28286743 -340.24124146]
[332.13339233 -334.45941162]
[345.45153809 -327.53890991]
[358.14385986 -319.52819824]
[370.12136841 -310.48352051]
[381.29998779 -300.46832275]
[391.60137939 -289.55282593]
[400.95324707 -277.81359863]
[409.28997803 -265.33300781]
[416.55313110 -252.19857788]
[422.69171143 -238.50244141]
[427.66271973 -224.34066772]
[431.43124390 -209.81260681]
[433.97088623 -195.02014160]
[435.26379395 -180.06704712]
[435.30090332 -165.05821228]
[434.08197021 -150.09890747]
[431.61553955 -135.29406738]
[427.91894531 -120.74754333]
[423.01803589 -106.56135559]
[416.94726562 -92.83502197]
[409.74917603 -79.66482544]
[401.47427368 -67.14314270]
[392.18060303 -55.35780716]
[381.93334961 -44.39148712]
[370.80438232 -34.32110214]
[358.87176514 -25.21729279]
[346.21920776 -17.14391518]
[332.93545532 -10.15759754]
[319.11370850 -4.30734777]
[304.85089111 0.36580005]
[290.24703979 3.82906604]
[275.40460205 6.05815792]
[260.42770386 7.03743935]
[245.42138672 6.76004219]
[230.49090576 5.22791100]
[215.74099731 2.45179391]
[201.27513123 -1.54883707]
[187.19474792 -6.74591970]
[173.59864807 -13.10299969]
[166.13090515 -0.09404708]
[158.66316223 12.91490555]
[151.19541931 25.92385674]
[143.72769165 38.93281174]
[147.85415649 53.19842529]
[140.46612549 66.49773407]
[125.47505951 70.72924042]
[118.00732422 83.73818970]
[110.53958130 96.74714661]
[125.47973633 95.40861511]
[135.95118713 106.14867401]
[134.23475647 121.05014038]
[121.59574127 129.12821960]
[107.35115051 124.42804718]
[102.00144196 110.41605377]
[93.58682251 122.83354950]
[85.17220306 135.25105286]
[76.75758362 147.66854858]
[91.75591278 147.44491577]
[101.39955139 158.93406677]
[98.57955933 173.66659546]
[85.37473297 180.78225708]
[71.51917267 175.03562927]
[67.22644043 160.66456604]
[57.91156006 172.42181396]
[48.59667587 184.17906189]
[59.72365952 194.24645996]
[70.16837311 205.02005005]
[79.88610077 216.45368958]
[88.83522034 228.49841309]
[96.97740936 241.10266113]
[104.27780914 254.21244812]
[110.70515442 267.77163696]
[116.23191833 281.72216797]
[120.83444214 296.00427246]
[124.49300385 310.55685425]
[127.19195557 325.31753540]
[128.91972351 340.22314453]
[129.66891479 355.20983887]
[129.43632507 370.21343994]
[128.22294617 385.16970825]
[126.03397369 400.01458740]
[122.87878418 414.68453979]
[118.77088928 429.11669922]
[113.72786713 443.24929810]
[107.77133179 457.02178955]
[100.92678070 470.37524414]
[93.22352600 483.25241089]
[84.69454956 495.59823608]
[75.37638092 507.35977173]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 186]
[71 185]
[72 184]
[73 178]
[74 177]
[75 176]
[76 175]
[77 169]
[78 168]
[79 167]
[82 164]
[83 163]
[84 162]
[85 161]
[86 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
