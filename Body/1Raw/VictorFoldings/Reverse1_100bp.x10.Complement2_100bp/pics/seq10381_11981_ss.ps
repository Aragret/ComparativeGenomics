%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[175.18051147 224.80410767]
[168.10340881 211.57856750]
[161.02630615 198.35304260]
[153.94920349 185.12751770]
[146.87210083 171.90199280]
[139.79498291 158.67646790]
[132.71788025 145.45094299]
[125.64077759 132.22540283]
[115.81019592 120.89581299]
[103.71444702 112.02491760]
[91.42360687 103.42635345]
[78.94380951 95.10441589]
[66.46401978 86.78247070]
[53.62508011 79.02607727]
[40.45260239 71.85070801]
[27.28012657 64.67534637]
[14.10765171 57.49997711]
[0.93517554 50.32461166]
[-12.23729992 43.14924622]
[-25.40977669 35.97388077]
[-38.58225250 28.79851341]
[-51.75472641 21.62314606]
[-64.92720032 14.44778061]
[-78.09967804 7.27241421]
[-86.16024017 19.92959213]
[-95.06576538 32.00718689]
[-104.77474213 43.44889069]
[-115.24188995 54.20135498]
[-126.41841888 64.21443939]
[-138.25221252 73.44147491]
[-150.68809509 81.83942413]
[-163.66809082 89.36913300]
[-177.13166809 95.99550629]
[-191.01606750 101.68763733]
[-205.25653076 106.41899109]
[-219.78668213 110.16750336]
[-234.53877258 112.91570282]
[-249.44401550 114.65077209]
[-264.43292236 115.36462402]
[-279.43560791 115.05392456]
[-294.38208008 113.72013092]
[-309.20272827 111.36945343]
[-323.82836914 108.01285553]
[-338.19088745 103.66599274]
[-352.22326660 98.34912872]
[-365.86010742 92.08704376]
[-379.03778076 84.90895081]
[-391.69491577 76.84830475]
[-403.77246094 67.94269562]
[-415.21408081 58.23364639]
[-425.96649170 47.76642227]
[-435.97949219 36.58982849]
[-445.20645142 24.75597191]
[-453.60430908 12.32003212]
[-461.13394165 -0.66000891]
[-467.76022339 -14.12363243]
[-473.45227051 -28.00806427]
[-478.18350220 -42.24856949]
[-481.93191528 -56.77874756]
[-484.68002319 -71.53085327]
[-486.41500854 -86.43611145]
[-487.12875366 -101.42501831]
[-486.81796265 -116.42768860]
[-485.48406982 -131.37417603]
[-483.13327026 -146.19479370]
[-479.77658081 -160.82043457]
[-475.42962646 -175.18290710]
[-470.11267090 -189.21524048]
[-463.85049438 -202.85203552]
[-456.67230225 -216.02967834]
[-448.61157227 -228.68675232]
[-439.70590210 -240.76422119]
[-429.99676514 -252.20579529]
[-419.52947998 -262.95812988]
[-408.35281372 -272.97106934]
[-396.51889038 -282.19793701]
[-384.08288574 -290.59570312]
[-371.10281372 -298.12524414]
[-357.63912964 -304.75143433]
[-343.75466919 -310.44338989]
[-329.51412964 -315.17456055]
[-314.98391724 -318.92288208]
[-300.23178101 -321.67086792]
[-285.32653809 -323.40573120]
[-270.33761597 -324.11938477]
[-255.33494568 -323.80850220]
[-240.38847351 -322.47448730]
[-225.56787109 -320.12362671]
[-210.94226074 -316.76684570]
[-196.57980347 -312.41976929]
[-182.54750061 -307.10272217]
[-168.91075134 -300.84045410]
[-155.73315430 -293.66217041]
[-143.07614136 -285.60137939]
[-130.99871826 -276.69558716]
[-119.55721283 -266.98638916]
[-108.80496216 -256.51901245]
[-98.79209900 -245.34230042]
[-89.56530762 -233.50831604]
[-81.16761017 -221.07226562]
[-73.63815308 -208.09211731]
[-67.01205444 -194.62840271]
[-61.32020569 -180.74389648]
[-56.58913803 -166.50334167]
[-52.84091949 -151.97309875]
[-50.09301758 -137.22096252]
[-48.35824585 -122.31568146]
[-47.64469528 -107.32676697]
[-47.95569611 -92.32409668]
[-49.28979111 -77.37763214]
[-51.64076614 -62.55704880]
[-54.99765396 -47.93145370]
[-59.34481049 -33.56903839]
[-64.66195679 -19.53676414]
[-70.92431641 -5.90006161]
[-57.75183868 1.27530468]
[-44.57936096 8.45067120]
[-31.40688515 15.62603760]
[-18.23440933 22.80140305]
[-5.06193399 29.97677040]
[8.11054230 37.15213776]
[21.28301811 44.32750320]
[34.45549393 51.50286865]
[47.62796783 58.67823410]
[60.80044556 65.85359955]
[57.60984421 51.19686127]
[65.60127258 38.50288391]
[80.19688416 35.04335785]
[93.03563690 42.80005646]
[96.76291656 57.32958984]
[89.24356842 70.30878448]
[74.78596497 74.30267334]
[87.26575470 82.62461853]
[99.74555206 90.94656372]
[103.59617615 90.73425293]
[107.52168274 92.22026062]
[110.76148987 95.39999390]
[112.58534241 99.92916870]
[124.68109131 108.80006409]
[117.78250885 95.48054504]
[113.57620239 81.08238983]
[112.21942139 66.14387512]
[113.76288605 51.22349548]
[118.14890289 36.87905884]
[125.21349335 23.64684296]
[134.69255066 12.02154350]
[146.23167419 2.43777871]
[159.39947510 -4.74615335]
[173.70367432 -9.26167679]
[188.60949707 -10.93997478]
[203.55966187 -9.71830368]
[217.99525452 -5.64233589]
[231.37660217 1.13554466]
[243.20341492 10.36194229]
[253.03355408 21.69192314]
[260.49951172 34.70190430]
[265.32214355 48.90549850]
[267.32116699 63.77169800]
[266.42187500 78.74471283]
[262.65783691 93.26477814]
[256.16983032 106.78903198]
[247.20036316 118.81187439]
[236.08477783 128.88381958]
[223.23866272 136.62831116]
[209.14225769 141.75582886]
[194.32258606 144.07467651]
[179.33366394 143.49815369]
[164.73588562 140.04782104]
[151.07499695 133.85266113]
[138.86630249 125.14830017]
[145.94340515 138.37382507]
[153.02052307 151.59936523]
[160.09762573 164.82489014]
[167.17472839 178.05041504]
[174.25183105 191.27593994]
[181.32893372 204.50146484]
[188.40603638 217.72698975]
[202.69561768 213.03878784]
[217.58221436 210.90335083]
[232.61347961 211.38557434]
[247.33259583 214.47080994]
[261.29226685 220.06530762]
[274.06829834 227.99903870]
[285.27243042 238.03091431]
[294.56420898 249.85607910]
[301.66119385 263.11517334]
[306.34777832 277.40527344]
[308.48153687 292.29211426]
[307.99758911 307.32333374]
[304.91070557 322.04208374]
[299.31463623 336.00112915]
[291.37945557 348.77627563]
[281.34628296 359.97927856]
[269.52008057 369.26968384]
[256.26019287 376.36517334]
[241.96954346 381.05014038]
[227.08245850 383.18218994]
[212.05131531 382.69656372]
[197.33290100 379.60800171]
[183.37448120 374.01034546]
[170.60025024 366.07369995]
[159.39839172 356.03930664]
[150.10931396 344.21203613]
[143.01531982 330.95132446]
[138.33197021 316.66015625]
[136.20159912 301.77282715]
[136.68894958 286.74172974]
[139.77919006 272.02365112]
[145.37843323 258.06588745]
[153.31649780 245.29254150]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 177]
[2 176]
[3 175]
[4 174]
[5 173]
[6 172]
[7 171]
[8 170]
[9 139]
[10 138]
[11 134]
[12 133]
[13 132]
[14 125]
[15 124]
[16 123]
[17 122]
[18 121]
[19 120]
[20 119]
[21 118]
[22 117]
[23 116]
[24 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
