%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[112.41107178 604.19866943]
[111.51825714 589.22528076]
[110.62544250 574.25189209]
[109.73262787 559.27844238]
[108.83981323 544.30505371]
[107.72416687 529.34661865]
[106.38592529 514.40643311]
[105.04769135 499.46624756]
[103.70945740 484.52606201]
[102.37122345 469.58587646]
[88.58536530 466.36663818]
[76.44926453 459.03613281]
[67.15632629 448.29971313]
[61.62511444 435.19836426]
[60.40863419 421.00784302]
[63.63900757 407.11444092]
[71.01331329 394.87951660]
[81.82192230 385.50607300]
[95.01676941 379.92059326]
[93.90111542 364.96212769]
[92.78546906 350.00366211]
[91.66982269 335.04522705]
[89.25103760 332.47970581]
[87.95471954 328.61517334]
[88.37786102 323.99194336]
[90.85359955 319.39654541]
[88.05348969 315.52764893]
[87.65406036 309.85864258]
[90.62362671 303.95159912]
[82.88632202 291.22433472]
[90.62362671 277.42416382]
[90.62362671 262.42416382]
[90.62362671 247.42414856]
[90.62362671 232.42414856]
[90.62362671 217.42414856]
[79.14109039 210.61286926]
[72.47008514 198.92347717]
[72.44599152 185.35627747]
[79.18203735 173.45483398]
[91.01184845 166.38049316]
[91.23517609 151.38215637]
[83.03775024 142.48672485]
[83.10105896 129.98953247]
[91.93657684 120.59291077]
[92.38317871 105.59956360]
[89.74391937 101.06654358]
[89.83229828 95.37747955]
[93.07291412 90.16831207]
[93.96572876 75.19490814]
[94.85854340 60.22150421]
[95.75135803 45.24810028]
[96.64417267 30.27469254]
[97.53698730 15.30128670]
[98.42980957 0.32788119]
[99.32262421 -14.64552498]
[92.42044067 -28.88176155]
[100.90156555 -41.12593842]
[101.79438019 -56.09934235]
[94.89219666 -70.33557892]
[103.37332153 -82.57975769]
[103.14999390 -97.57809448]
[101.81175995 -112.51828003]
[100.47352600 -127.45846558]
[99.13529205 -142.39865112]
[88.71121216 -131.61260986]
[73.71638489 -131.21879578]
[62.74052048 -141.44281006]
[62.07109451 -156.42785645]
[72.09158325 -167.58984375]
[87.06179810 -168.53465271]
[98.40569305 -158.72192383]
[98.40569305 -173.72192383]
[98.40569305 -188.72192383]
[90.66838837 -202.52209473]
[98.40569305 -215.24935913]
[88.83100128 -230.97853088]
[98.19172668 -245.82252502]
[97.96839905 -260.82086182]
[88.16059113 -276.40573120]
[97.29927826 -291.38742065]
[89.15452576 -304.95111084]
[96.50945282 -317.90310669]
[96.06285095 -332.89645386]
[95.61624146 -347.88983154]
[95.16963959 -362.88317871]
[80.25945282 -364.78921509]
[65.83104706 -369.00436401]
[52.23972321 -375.42483521]
[39.82018661 -383.89248657]
[28.87827301 -394.19885254]
[19.68344116 -406.09008789]
[12.46212196 -419.27337646]
[7.39214563 -433.42407227]
[4.59836626 -448.19366455]
[4.14958239 -463.21847534]
[6.05684566 -478.12850952]
[10.27318764 -492.55657959]
[16.69477844 -506.14736938]
[25.16347885 -518.56622314]
[35.47074127 -529.50726318]
[47.36273956 -538.70111084]
[60.54662323 -545.92132568]
[74.69772339 -550.99017334]
[89.46755981 -553.78271484]
[104.49241638 -554.23028564]
[119.40228271 -552.32177734]
[133.82998657 -548.10424805]
[147.42025757 -541.68151855]
[159.83839417 -533.21179199]
[170.77861023 -522.90362549]
[179.97148132 -511.01089478]
[187.19062805 -497.82641602]
[192.25827026 -483.67489624]
[195.04960632 -468.90481567]
[195.49591064 -453.87991333]
[193.58618164 -438.97021484]
[189.36746216 -424.54284668]
[182.94363403 -410.95312500]
[174.47288513 -398.53567505]
[164.16381836 -387.59631348]
[152.27029419 -378.40441895]
[139.08522034 -371.18637085]
[124.93328857 -366.11990356]
[110.16298676 -363.32977295]
[110.60959625 -348.33642578]
[111.05619812 -333.34307861]
[111.50280762 -318.34973145]
[119.61561584 -305.85845947]
[112.29262543 -291.83404541]
[120.87908173 -283.31350708]
[121.37386322 -270.82595825]
[112.96674347 -261.04418945]
[113.19007111 -246.04585266]
[121.64871216 -237.39842224]
[121.95751190 -224.90489197]
[113.40569305 -215.24935913]
[121.14299011 -202.52209473]
[113.40569305 -188.72192383]
[113.40569305 -173.72192383]
[113.40569305 -158.72192383]
[114.07547760 -143.73687744]
[115.41371155 -128.79669189]
[116.75194550 -113.85651398]
[118.09017944 -98.91632843]
[125.82370758 -111.76905060]
[138.89935303 -119.11939240]
[153.89916992 -119.04598236]
[166.90225220 -111.56802368]
[174.50961304 -98.64022064]
[174.73271179 -83.64187622]
[167.51322937 -70.49353027]
[154.73832703 -62.63211441]
[139.74732971 -62.11259460]
[126.45884705 -69.07077026]
[118.34672546 -81.68694305]
[125.31276703 -68.52169800]
[116.76778412 -55.20652771]
[115.87496948 -40.23311996]
[122.84101105 -27.06788254]
[114.29602814 -13.75270844]
[113.40321350 1.22069705]
[112.51039886 16.19410324]
[111.61757660 31.16750908]
[110.72476196 46.14091492]
[109.83194733 61.11431885]
[108.93913269 76.08772278]
[108.04631805 91.06113434]
[107.37653351 106.04617310]
[106.92992401 121.03952026]
[116.03205109 137.04679871]
[106.23351288 151.60548401]
[106.01018524 166.60382080]
[119.68142700 176.56341553]
[124.67288208 192.55049133]
[119.20650482 208.20553589]
[105.62362671 217.42414856]
[105.62362671 232.42414856]
[105.62362671 247.42414856]
[105.62362671 262.42416382]
[105.62362671 277.42416382]
[113.36092377 291.22433472]
[105.62362671 303.95159912]
[105.84695435 318.94992065]
[106.62827301 333.92956543]
[107.74392700 348.88803101]
[108.85957336 363.84646606]
[109.97521973 378.80493164]
[125.33311462 383.04461670]
[138.28895569 392.27127075]
[147.28695679 405.35440063]
[151.25434875 420.70175171]
[149.72923279 436.45309448]
[142.91429138 450.70578003]
[131.65010071 461.74444580]
[117.31140900 468.24765015]
[118.64964294 483.18783569]
[119.98787689 498.12802124]
[121.32611084 513.06817627]
[122.66434479 528.00836182]
[126.14907074 533.62695312]
[126.25700378 539.30895996]
[123.81321716 543.41223145]
[124.70603180 558.38568115]
[125.59884644 573.35906982]
[126.49166870 588.33245850]
[127.38448334 603.30584717]
[138.38104248 614.98730469]
[135.96183777 630.84686279]
[121.98270416 638.71856689]
[107.16721344 632.56384277]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 206]
[2 205]
[3 204]
[4 203]
[5 202]
[6 199]
[7 198]
[8 197]
[9 196]
[10 195]
[19 187]
[20 186]
[21 185]
[22 184]
[26 183]
[29 182]
[31 180]
[32 179]
[33 178]
[34 177]
[35 176]
[40 172]
[41 171]
[44 169]
[45 168]
[48 167]
[49 166]
[50 165]
[51 164]
[52 163]
[53 162]
[54 161]
[55 160]
[57 158]
[58 157]
[60 155]
[61 144]
[62 143]
[63 142]
[64 141]
[71 140]
[72 139]
[73 138]
[75 136]
[77 133]
[78 132]
[80 129]
[82 127]
[83 126]
[84 125]
[85 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
