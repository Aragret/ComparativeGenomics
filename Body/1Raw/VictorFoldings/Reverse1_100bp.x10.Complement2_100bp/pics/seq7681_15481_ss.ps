%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[47.92528915 737.54913330]
[33.53822708 741.81591797]
[18.88342667 745.04547119]
[4.03557014 747.22137451]
[-10.92968082 748.33245850]
[-25.93606758 748.37310791]
[-40.90711594 747.34307861]
[-55.76654434 745.24768066]
[-70.43862152 742.09753418]
[-84.84858704 737.90875244]
[-98.92301178 732.70257568]
[-112.59017181 726.50567627]
[-125.78042603 719.34948730]
[-138.42654419 711.27056885]
[-150.46411133 702.31011963]
[-161.83175659 692.51367188]
[-172.47157288 681.93127441]
[-182.32934570 670.61676025]
[-191.35481262 658.62786865]
[-199.50201416 646.02563477]
[-206.72941589 632.87426758]
[-213.00018311 619.24084473]
[-218.28237915 605.19476318]
[-222.54907227 590.80767822]
[-225.77853394 576.15283203]
[-227.95428467 561.30499268]
[-229.06526184 546.33972168]
[-229.10578918 531.33331299]
[-228.07566833 516.36230469]
[-225.98014832 501.50286865]
[-222.82989502 486.83084106]
[-218.64097595 472.42089844]
[-213.43473816 458.34649658]
[-207.23770142 444.67941284]
[-200.08143616 431.48919678]
[-192.00244141 418.84313965]
[-183.04185486 406.80563354]
[-173.24534607 395.43807983]
[-162.66285706 384.79833984]
[-151.34828186 374.94064331]
[-139.35929871 365.91528320]
[-126.75699615 357.76818848]
[-113.60559082 350.54086304]
[-99.97210693 344.27020264]
[-85.92601013 338.98812866]
[-71.53887939 334.72152710]
[-56.88402939 331.49218750]
[-42.03614044 329.31655884]
[-27.07087135 328.20568848]
[-12.06448460 328.16528320]
[2.90654969 329.19549561]
[17.76594353 331.29113770]
[32.43797302 334.44149780]
[36.62498474 320.03771973]
[40.81199646 305.63394165]
[36.93485260 291.25280762]
[48.21670914 280.16091919]
[44.33956528 265.77978516]
[55.62142181 254.68786621]
[59.80843353 240.28408813]
[63.67274094 225.79040527]
[67.21240997 211.21401978]
[70.75208282 196.63764954]
[74.29175568 182.06127930]
[77.83142853 167.48489380]
[81.15368652 152.85743713]
[84.25779724 138.18212891]
[87.36190796 123.50682831]
[90.46601868 108.83152771]
[93.13181305 94.07031250]
[85.99634552 77.09484100]
[97.45548248 63.80367279]
[99.45949554 48.93814468]
[101.46350861 34.07261658]
[103.46752167 19.20708847]
[105.47153473 4.34156036]
[107.47554779 -10.52396774]
[109.47956085 -25.38949585]
[111.48357391 -40.25502396]
[112.93299103 -55.18483353]
[106.03081512 -69.42107391]
[114.51193237 -81.66524506]
[115.40474701 -96.63864899]
[116.29756927 -111.61206055]
[116.74417114 -126.60540771]
[116.74417114 -141.60540771]
[116.74417114 -156.60540771]
[116.74417114 -171.60540771]
[116.74417114 -186.60540771]
[116.74417114 -201.60540771]
[116.74417114 -216.60540771]
[116.74417114 -231.60540771]
[102.05558777 -234.95103455]
[88.47997284 -241.48175049]
[76.69827271 -250.87001038]
[67.30145264 -262.64486694]
[60.76086426 -276.21575928]
[57.40456390 -290.90188599]
[57.40091705 -305.96667480]
[60.75009537 -320.65444946]
[67.28411102 -334.22848511]
[76.67521667 -346.00790405]
[88.45236969 -355.40188599]
[102.02481842 -361.93917847]
[116.71177673 -365.29193115]
[131.77656555 -365.29193115]
[146.46353149 -361.93917847]
[160.03598022 -355.40188599]
[171.81312561 -346.00790405]
[181.20423889 -334.22848511]
[187.73825073 -320.65444946]
[191.08743286 -305.96667480]
[191.08378601 -290.90188599]
[187.72747803 -276.21575928]
[181.18688965 -262.64486694]
[171.79006958 -250.87001038]
[160.00837708 -241.48175049]
[146.43275452 -234.95103455]
[131.74417114 -231.60540771]
[131.74417114 -216.60540771]
[131.74417114 -201.60540771]
[131.74417114 -186.60540771]
[131.74417114 -171.60540771]
[131.74417114 -156.60540771]
[131.74417114 -141.60540771]
[131.74417114 -126.60540771]
[133.62870789 -124.53015137]
[134.80474854 -121.58336639]
[134.93623352 -118.03116608]
[133.78953552 -114.25630188]
[131.27096558 -110.71923828]
[130.37815857 -95.74583435]
[129.48533630 -80.77243042]
[136.45138550 -67.60719299]
[127.90640259 -54.29201889]
[140.68708801 -62.14402390]
[154.84582520 -57.19124603]
[159.94532776 -43.08468246]
[152.22642517 -30.22316933]
[137.37919617 -28.08773613]
[126.34910583 -38.25101089]
[124.34509277 -23.38548279]
[122.34107208 -8.51995468]
[120.33705902 6.34557390]
[118.33304596 21.21110153]
[116.32903290 36.07662964]
[114.32501984 50.94215775]
[112.32100677 65.80768585]
[119.40329742 75.61420441]
[117.85537720 88.01531982]
[107.96585846 96.29542542]
[109.56322479 98.89118195]
[110.25140381 102.12551880]
[109.79206085 105.66281128]
[108.07418060 109.08409119]
[105.14131927 111.93563843]
[102.03720856 126.61093903]
[98.93310547 141.28623962]
[95.82899475 155.96154785]
[97.51186371 162.35525513]
[95.94794464 167.81887817]
[92.40780640 171.02456665]
[88.86813354 185.60093689]
[85.32846069 200.17732239]
[81.78878784 214.75369263]
[78.24911499 229.33006287]
[79.72028351 234.33833313]
[79.17753601 238.94905090]
[77.10955048 242.46166992]
[74.21221924 244.47109985]
[70.02520752 258.87487793]
[73.60286713 274.28628540]
[62.62049103 284.34793091]
[66.19815063 299.75930786]
[55.21577835 309.82095337]
[51.02876663 324.22473145]
[46.84175491 338.62850952]
[60.91625977 343.83444214]
[74.58351135 350.03115845]
[87.77387238 357.18710327]
[100.42012787 365.26583862]
[112.45782471 374.22613525]
[123.82562256 384.02236938]
[134.46560669 394.60464478]
[144.32354736 405.91897583]
[153.34919739 417.90774536]
[161.49658203 430.50985718]
[168.72419739 443.66110229]
[174.99517822 457.29443359]
[180.27758789 471.34042358]
[184.54449463 485.72744751]
[187.77418518 500.38223267]
[189.95016479 515.23004150]
[191.06137085 530.19531250]
[191.10212708 545.20172119]
[190.07223511 560.17272949]
[187.97694397 575.03222656]
[184.82691956 589.70428467]
[180.63821411 604.11431885]
[175.43218994 618.18878174]
[169.23535156 631.85595703]
[162.07929993 645.04626465]
[154.00048828 657.69244385]
[145.04010010 669.73010254]
[135.24377441 681.09783936]
[124.66143036 691.73773193]
[113.34701538 701.59558105]
[101.35816956 710.62115479]
[88.75598907 718.76843262]
[75.60469818 725.99591064]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 177]
[54 176]
[55 175]
[57 173]
[59 171]
[60 170]
[61 166]
[62 165]
[63 164]
[64 163]
[65 162]
[66 159]
[67 158]
[68 157]
[69 156]
[70 151]
[72 148]
[73 147]
[74 146]
[75 145]
[76 144]
[77 143]
[78 142]
[79 141]
[80 135]
[82 133]
[83 132]
[84 131]
[85 126]
[86 125]
[87 124]
[88 123]
[89 122]
[90 121]
[91 120]
[92 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
