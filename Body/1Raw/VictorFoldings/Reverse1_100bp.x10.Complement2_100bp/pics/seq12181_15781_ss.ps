%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUAGGAAAUUUUCAACUCUUUCGGUACAACAAUCUGUACCCCCGUACUCAAUCGUCAAGAACACUCGAAAGAGCCAUUUAUUCCCCAGCAUUCGGAGAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[43.41466141 634.26489258]
[40.51472092 649.11230469]
[33.16684341 662.33593750]
[22.09089470 672.64025879]
[8.37198353 679.01568604]
[-6.64585066 680.83776855]
[-21.49131203 677.92785645]
[-34.70999527 670.57110596]
[-45.00687027 659.48828125]
[-51.37314987 645.76507568]
[-53.18513107 630.74603271]
[-50.26530075 615.90252686]
[-42.89970779 602.68878174]
[-31.80995750 592.39935303]
[-18.08251572 586.04223633]
[-3.06225324 584.24035645]
[-0.17698056 569.52044678]
[2.70829201 554.80053711]
[5.59356451 540.08068848]
[8.47883701 525.36077881]
[-5.23630953 531.43487549]
[-18.60642624 524.63488770]
[-21.77555847 509.97348022]
[-12.40754128 498.25851440]
[2.59187198 498.12582397]
[12.16526604 509.67163086]
[16.13736153 495.20712280]
[20.10945892 480.74258423]
[16.01863098 466.42077637]
[27.13409615 455.16213989]
[31.10619164 440.69760132]
[35.07828903 426.23309326]
[39.05038452 411.76855469]
[43.02248001 397.30404663]
[29.63820839 387.39862061]
[21.06623650 373.08068848]
[18.64580917 356.53222656]
[22.77618980 340.28778076]
[32.85111618 326.84637451]
[47.34762192 318.28695679]
[64.05618286 315.94692993]
[67.59585571 301.37054443]
[71.13552856 286.79415894]
[73.80132294 272.03295898]
[75.58379364 257.13922119]
[77.36625671 242.24551392]
[79.14871979 227.35179138]
[80.93119049 212.45808411]
[74.76110840 198.90155029]
[84.08347321 186.11859131]
[85.86593628 171.22488403]
[87.42646027 156.30627441]
[88.76469421 141.36608887]
[90.10292816 126.42590332]
[91.44116211 111.48571777]
[85.73317719 98.72208405]
[93.61865234 87.17604828]
[91.26733398 78.34943390]
[95.08964539 72.02394867]
[96.65016937 57.10534668]
[90.39055634 42.57510757]
[99.40995026 30.72184753]
[100.97047424 15.80324268]
[102.53099823 0.88463819]
[104.09152222 -14.03396702]
[105.65204620 -28.95257187]
[107.21256256 -43.87117767]
[107.21256256 -58.87117767]
[105.65204620 -73.78977966]
[104.09152222 -88.70838928]
[94.58158875 -97.42182922]
[93.58895874 -109.87969208]
[101.10206604 -119.36018372]
[99.76383209 -134.30036926]
[97.31810760 -149.09963989]
[93.77843475 -163.67601013]
[90.23876190 -178.25239563]
[86.69908905 -192.82876587]
[83.15941620 -207.40515137]
[79.61974335 -221.98152161]
[76.08007050 -236.55789185]
[71.80043793 -241.59736633]
[70.85082245 -247.20051575]
[72.65888214 -251.62091064]
[69.55477142 -266.29623413]
[66.45066071 -280.97152710]
[51.38344193 -281.46371460]
[36.87202072 -285.54809570]
[23.76008415 -292.98721313]
[12.80993557 -303.34857178]
[4.65820503 -316.02975464]
[-0.22117707 -330.29351807]
[-1.54453003 -345.31060791]
[0.76508433 -360.20788574]
[6.57338810 -374.11929321]
[15.54269409 -386.23599243]
[27.15153885 -395.85360718]
[40.72499847 -402.41290283]
[55.47393036 -405.53259277]
[70.54085541 -405.03128052]
[85.04978943 -400.93811035]
[98.15721893 -393.49102783]
[109.10108185 -383.12304688]
[117.24512482 -370.43688965]
[122.11585999 -356.17016602]
[123.43010712 -341.15231323]
[121.11145782 -326.25643921]
[115.29472351 -312.34857178]
[106.31806946 -300.23727417]
[94.70339966 -290.62670898]
[81.12596130 -284.07562256]
[84.23007202 -269.40032959]
[87.33418274 -254.72502136]
[90.65644836 -240.09756470]
[94.19611359 -225.52119446]
[97.73578644 -210.94480896]
[101.27545929 -196.36843872]
[104.81513214 -181.79206848]
[108.35480499 -167.21568298]
[111.89447784 -152.63931274]
[117.63585663 -166.49703979]
[129.47648621 -175.70571899]
[144.32122803 -177.85821533]
[158.28973389 -172.39187622]
[167.73066711 -160.73558044]
[170.17616272 -145.93627930]
[164.98699951 -131.86245728]
[153.51960754 -122.19297028]
[138.77153015 -119.45541382]
[124.59788513 -124.36537933]
[114.70401764 -135.63861084]
[116.04225159 -120.69841766]
[126.89647675 -106.90882874]
[119.01012421 -90.26890564]
[120.57064819 -75.35030365]
[122.13117218 -60.43169785]
[128.36494446 -74.07501221]
[139.29278564 -84.35034943]
[153.29359436 -89.73341370]
[168.29043579 -89.42567444]
[182.05862427 -83.47277832]
[192.55572510 -72.75779724]
[198.22456360 -58.87023926]
[198.22419739 -43.87023926]
[192.55467224 -29.98295784]
[182.05703735 -19.26849174]
[168.28855896 -13.31626892]
[153.29170227 -13.00926495]
[139.29116821 -18.39302254]
[128.36383057 -28.66889191]
[122.13117218 -42.31065369]
[120.57064819 -27.39204788]
[119.01012421 -12.47344398]
[117.44960022 2.44516110]
[115.88907623 17.36376572]
[114.32855988 32.28237152]
[120.69979095 45.74552917]
[111.56877899 58.66586685]
[110.00825500 73.58447266]
[108.55883789 88.51428223]
[114.26682281 101.27791595]
[106.38134766 112.82395172]
[105.04311371 127.76413727]
[103.70487976 142.70433044]
[102.36664581 157.64450073]
[104.79737091 163.79293823]
[103.89377594 169.40368652]
[100.75965881 173.00733948]
[98.97718811 187.90106201]
[105.01977539 202.52288818]
[95.82490540 214.24053955]
[94.04244232 229.13426208]
[92.25997162 244.02798462]
[90.47750854 258.92169189]
[88.69504547 273.81542969]
[99.84181976 263.77801514]
[114.74708557 262.09484863]
[127.85154724 269.39367676]
[134.26756287 282.95227051]
[131.60211182 297.71353149]
[120.84935760 308.17193604]
[106.01979828 310.42672729]
[92.64449310 303.63693237]
[85.71190643 290.33383179]
[82.17223358 304.91021729]
[78.63256073 319.48660278]
[89.91201019 326.79638672]
[98.37584686 337.20843506]
[103.21129608 349.70062256]
[103.96088409 363.05221558]
[100.56568146 375.96307373]
[93.36966705 387.18038940]
[83.08495331 395.62005615]
[70.72129059 400.47167969]
[57.48700333 401.27612305]
[53.51490784 415.74066162]
[49.54281235 430.20516968]
[45.57071686 444.66970825]
[41.59862137 459.13421631]
[45.40533829 474.49063110]
[34.57398224 484.71469116]
[30.60188675 499.17919922]
[26.62978935 513.64373779]
[23.19872856 528.24603271]
[20.31345558 542.96594238]
[17.42818260 557.68585205]
[14.54291058 572.40570068]
[11.65763855 587.12561035]
[24.88616943 594.46466064]
[35.19788361 605.53369141]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 208]
[17 207]
[18 206]
[19 205]
[20 204]
[26 203]
[27 202]
[28 201]
[30 199]
[31 198]
[32 197]
[33 196]
[34 195]
[41 186]
[42 185]
[43 184]
[44 175]
[45 174]
[46 173]
[47 172]
[48 171]
[50 169]
[51 168]
[52 165]
[53 164]
[54 163]
[55 162]
[57 160]
[59 159]
[60 158]
[62 156]
[63 155]
[64 154]
[65 153]
[66 152]
[67 151]
[68 136]
[69 135]
[70 134]
[73 132]
[74 131]
[75 120]
[76 119]
[77 118]
[78 117]
[79 116]
[80 115]
[81 114]
[84 113]
[85 112]
[86 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
