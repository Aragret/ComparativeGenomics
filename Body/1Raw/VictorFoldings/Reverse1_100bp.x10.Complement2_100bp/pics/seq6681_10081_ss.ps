%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[-52.35669708 416.91580200]
[-44.41812134 429.69149780]
[-38.88851166 443.67947388]
[-35.94561768 458.43002319]
[-35.68404770 473.46902466]
[-38.11220551 488.31301880]
[-43.15203857 502.48480225]
[-50.64153671 515.52886963]
[-60.33994293 527.02581787]
[-71.93549347 536.60620117]
[-85.05543518 543.96191406]
[-99.27802277 548.85656738]
[-114.14605713 551.13287354]
[-129.18159485 550.71752930]
[-143.90129089 547.62396240]
[-157.83198547 541.95159912]
[-170.52586365 533.88281250]
[-181.57485962 523.67700195]
[-190.62380981 511.66213989]
[-197.38180542 498.22454834]
[-201.63160706 483.79614258]
[-203.23663330 468.84072876]
[-202.14524841 453.83911133]
[-198.39256287 439.27349854]
[-192.09919739 425.61212158]
[-183.46746826 413.29412842]
[-172.77482605 402.71551514]
[-160.36503601 394.21630859]
[-146.63697815 388.06973267]
[-132.03198242 384.47335815]
[-117.01951599 383.54284668]
[-102.08219147 385.30807495]
[-87.70016479 389.71228027]
[-80.82075500 376.38287354]
[-73.94133759 363.05343628]
[-67.06192780 349.72399902]
[-60.18251419 336.39456177]
[-53.30310440 323.06515503]
[-46.42369080 309.73571777]
[-60.37723160 315.24014282]
[-74.92969513 311.60339355]
[-84.65336609 300.18191528]
[-85.92156219 285.23562622]
[-78.26126862 272.33911133]
[-64.52959442 266.30245972]
[-49.84811020 269.37719727]
[-39.69264603 280.41653442]
[-37.85115814 295.30416870]
[-29.43654060 282.88668823]
[-29.73925972 279.37374878]
[-28.35549545 275.53967285]
[-25.15283775 272.17868042]
[-20.35859871 270.11413574]
[-11.39790249 258.08474731]
[-2.43720627 246.05537415]
[6.52348948 234.02598572]
[-8.46986866 233.57968140]
[-17.59086800 221.67138672]
[-14.11584377 207.07946777]
[-0.60645747 200.56053162]
[12.97867584 206.92010498]
[16.62542534 221.46852112]
[26.45600700 210.13893127]
[35.14583206 197.91244507]
[42.61357117 184.90348816]
[50.08131409 171.89454651]
[57.54905319 158.88558960]
[65.01679230 145.87663269]
[72.48453522 132.86769104]
[79.95227814 119.85873413]
[87.42002106 106.84977722]
[87.57736206 92.86883545]
[99.57102966 85.68247986]
[107.03877258 72.67353058]
[114.50650787 59.66457367]
[111.89682007 47.03317261]
[118.38453674 36.35172653]
[130.02552795 33.06325912]
[137.68612671 20.16693306]
[145.25050354 7.21393394]
[152.71824646 -5.79501820]
[160.18598938 -18.80397034]
[160.34611511 -34.62436676]
[173.39265442 -41.81025314]
[159.68821716 -35.71202087]
[144.76068115 -37.18468094]
[132.51206970 -45.84329224]
[126.14414215 -59.42450714]
[127.32145691 -74.37823486]
[135.73626709 -86.79560089]
[149.18894958 -93.43074036]
[164.16302490 -92.54924774]
[176.74430847 -84.38153076]
[183.64405823 -71.06262207]
[183.05897522 -56.07489014]
[192.37385559 -67.83214569]
[201.68873596 -79.58939362]
[211.00361633 -91.34664917]
[220.31851196 -103.10389709]
[229.63339233 -114.86114502]
[218.96066284 -125.42316437]
[209.51464844 -137.09518433]
[201.41000366 -149.73550415]
[194.74511719 -163.19070435]
[189.60089111 -177.29745483]
[186.03977966 -191.88449097]
[184.10499573 -206.77474976]
[183.82003784 -221.78747559]
[185.18836975 -236.74043274]
[188.19337463 -251.45210266]
[192.79856873 -265.74389648]
[198.94804382 -279.44232178]
[206.56718445 -292.38110352]
[215.56346130 -304.40316772]
[225.82768250 -315.36257935]
[237.23526001 -325.12631226]
[249.64772034 -333.57583618]
[262.91436768 -340.60858154]
[276.87414551 -346.13916016]
[291.35763550 -350.10046387]
[306.18899536 -352.44436646]
[321.18820190 -353.14245605]
[336.17315674 -352.18624878]
[350.96194458 -349.58737183]
[365.37509155 -345.37731934]
[379.23760986 -339.60723877]
[392.38122559 -332.34713745]
[404.64636230 -323.68521118]
[415.88415527 -313.72653198]
[425.95819092 -302.59204102]
[434.74618530 -290.41687012]
[442.14144897 -277.34884644]
[448.05419922 -263.54660034]
[452.41268921 -249.17762756]
[455.16397095 -234.41641235]
[456.27465820 -219.44210815]
[455.73132324 -204.43652344]
[453.54046631 -189.58177185]
[449.72875977 -175.05819702]
[444.34246826 -161.04211426]
[437.44692993 -147.70364380]
[429.12588501 -135.20471191]
[419.48031616 -123.69703674]
[408.62734985 -113.32032013]
[396.69869995 -104.20052338]
[383.83920288 -96.44835663]
[370.20492554 -90.15791321]
[355.96136475 -85.40556335]
[341.28149414 -82.24899292]
[326.34344482 -80.72651672]
[311.32858276 -80.85662079]
[296.41915894 -82.63772583]
[281.79617310 -86.04820251]
[267.63711548 -91.04666138]
[254.11389160 -97.57241821]
[241.39064026 -105.54626465]
[232.07575989 -93.78901672]
[222.76087952 -82.03176117]
[213.44598389 -70.27451324]
[204.13110352 -58.51726151]
[194.81622314 -46.76000977]
[186.40161133 -34.34251404]
[186.77561951 -19.45260429]
[173.19493103 -11.33622932]
[165.72718811 1.67272282]
[158.25944519 14.68167496]
[157.65567017 22.04762650]
[150.58244324 27.82752991]
[142.92184448 40.72385788]
[143.64999390 58.25773239]
[127.51546478 67.13231659]
[120.04772186 80.14126587]
[112.57997894 93.15022278]
[112.42263794 107.13116455]
[100.42897034 114.31752014]
[92.96122742 127.32646942]
[85.49349213 140.33541870]
[78.02574921 153.34437561]
[70.55800629 166.35333252]
[63.09026718 179.36228943]
[55.62252426 192.37123108]
[48.15478134 205.38018799]
[61.32758713 198.20541382]
[76.27305603 196.92761230]
[90.47263336 201.76208496]
[101.53342438 211.89416504]
[107.59149170 225.61639404]
[107.62596130 240.61636353]
[101.63100433 254.36628723]
[90.61688995 264.54907227]
[76.43968201 269.44876099]
[61.48849487 268.23962402]
[48.28286362 261.12545776]
[39.04816818 249.30513000]
[35.34061813 234.77055359]
[37.78559875 219.96951294]
[27.95501900 231.29910278]
[18.55286789 242.98667908]
[9.59217167 255.01606750]
[0.63147539 267.04544067]
[-8.32922077 279.07482910]
[-17.01904488 291.30130005]
[-25.43366432 303.71881104]
[-33.09426117 316.61511230]
[-39.97367477 329.94454956]
[-46.85308456 343.27398682]
[-53.73249817 356.60342407]
[-60.61191177 369.93283081]
[-67.49132538 383.26226807]
[-74.37073517 396.59170532]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 210]
[34 209]
[35 208]
[36 207]
[37 206]
[38 205]
[39 204]
[48 203]
[49 202]
[53 201]
[54 200]
[55 199]
[56 198]
[62 197]
[63 196]
[64 182]
[65 181]
[66 180]
[67 179]
[68 178]
[69 177]
[70 176]
[71 175]
[73 173]
[74 172]
[75 171]
[78 169]
[79 168]
[80 166]
[81 165]
[82 164]
[84 162]
[95 161]
[96 160]
[97 159]
[98 158]
[99 157]
[100 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
