%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[178.88227844 360.39208984]
[186.18991089 347.25250244]
[195.56069946 335.49502563]
[206.73899841 325.44039917]
[219.41986084 317.36291504]
[213.55088806 303.55874634]
[207.68193054 289.75457764]
[201.81297302 275.95040894]
[195.94401550 262.14620972]
[189.06460571 248.81678772]
[181.21284485 236.03594971]
[173.07762146 223.43363953]
[164.66300964 211.01614380]
[156.24838257 198.59864807]
[147.83377075 186.18115234]
[136.01768494 183.59140015]
[128.90570068 173.31504822]
[130.75894165 160.55070496]
[122.53012848 148.00930786]
[114.30132294 135.46791077]
[106.07250977 122.92650604]
[97.84370422 110.38510132]
[88.97280884 98.28935242]
[79.48390961 86.67208862]
[69.99501038 75.05482483]
[55.27269745 69.26137543]
[53.21393204 54.50973892]
[43.72503281 42.89247513]
[34.23613358 31.27521133]
[24.74723434 19.65794945]
[15.25833702 8.04068565]
[0.53602427 2.24723339]
[-1.52274466 -12.50440121]
[-16.24505806 -18.29785347]
[-18.30382538 -33.04948807]
[-27.79272461 -44.66675186]
[-37.28162384 -56.28401566]
[-47.27979660 -67.46598816]
[-57.76729584 -78.19036865]
[-68.25479889 -88.91474915]
[-78.74230194 -99.63912964]
[-89.22979736 -110.36351013]
[-99.71730042 -121.08789062]
[-111.29924774 -111.54156494]
[-123.64906311 -103.01185608]
[-136.67776489 -95.56022644]
[-150.29147339 -89.24036407]
[-164.39210510 -84.09779358]
[-178.87806702 -80.16958618]
[-193.64497375 -77.48402405]
[-208.58644104 -76.06047821]
[-223.59480286 -75.90919495]
[-238.56193542 -77.03126526]
[-253.37997437 -79.41860199]
[-267.94216919 -83.05400085]
[-282.14361572 -87.91128540]
[-295.88195801 -93.95543671]
[-309.05819702 -101.14292145]
[-321.57745361 -109.42194366]
[-333.34948730 -118.73286438]
[-344.28948975 -129.00857544]
[-354.31863403 -140.17506409]
[-363.36462402 -152.15185547]
[-371.36233521 -164.85266113]
[-378.25411987 -178.18595886]
[-383.99032593 -192.05570984]
[-388.52963257 -206.36195374]
[-391.83929443 -221.00161743]
[-393.89550781 -235.86923218]
[-394.68344116 -250.85766602]
[-394.19741821 -265.85891724]
[-392.44094849 -280.76489258]
[-389.42666626 -295.46823120]
[-385.17633057 -309.86297607]
[-379.72052002 -323.84539795]
[-373.09854126 -337.31472778]
[-365.35815430 -350.17398071]
[-356.55508423 -362.33047485]
[-346.75280762 -373.69659424]
[-336.02188110 -384.19046021]
[-324.43969727 -393.73651123]
[-312.08966064 -402.26586914]
[-299.06076050 -409.71719360]
[-285.44689941 -416.03668213]
[-271.34613037 -421.17889404]
[-256.86007690 -425.10671997]
[-242.09309387 -427.79190063]
[-227.15159607 -429.21505737]
[-212.14321899 -429.36596680]
[-197.17613220 -428.24349976]
[-182.35813904 -425.85580444]
[-167.79603577 -422.22000122]
[-153.59472656 -417.36236572]
[-139.85655212 -411.31787109]
[-126.68046570 -404.13003540]
[-114.16143036 -395.85067749]
[-102.38964081 -386.53945923]
[-91.44991302 -376.26345825]
[-81.42106628 -365.09674072]
[-72.37536621 -353.11968994]
[-64.37798309 -340.41870117]
[-57.48653793 -327.08520508]
[-51.75069046 -313.21530151]
[-47.21176529 -298.90893555]
[-43.90246582 -284.26919556]
[-41.84663773 -269.40151978]
[-41.05909348 -254.41308594]
[-41.54550171 -239.41183472]
[-43.30236435 -224.50588989]
[-46.31702042 -209.80264282]
[-50.56774902 -195.40802002]
[-56.02392578 -181.42573547]
[-62.64623260 -167.95655823]
[-70.38696289 -155.09751892]
[-79.19033051 -142.94126892]
[-88.99291992 -131.57539368]
[-78.50541687 -120.85101318]
[-68.01792145 -110.12663269]
[-57.53041840 -99.40225220]
[-47.04291534 -88.67787170]
[-36.55541611 -77.95349121]
[-35.30530930 -92.90130615]
[-23.94117355 -102.69193268]
[-8.97289848 -101.71685791]
[1.02500534 -90.53464508]
[0.32528609 -75.55097198]
[-10.67122555 -65.34917450]
[-25.66436005 -65.77291107]
[-16.17546082 -54.15565109]
[-6.68656301 -42.53838730]
[7.35703993 -37.57587814]
[10.09451866 -21.99329948]
[24.13812256 -17.03079224]
[26.87560081 -1.44821298]
[36.36449814 10.16905022]
[45.85339737 21.78631401]
[55.34229660 33.40357590]
[64.83119202 45.02083969]
[78.87479401 49.98334885]
[81.61227417 65.56592560]
[91.10117340 77.18318939]
[100.59007263 88.80045319]
[102.00769806 73.86759186]
[112.60367584 63.25037766]
[127.53366089 61.80285645]
[139.97187805 70.18681335]
[144.23173523 84.56922150]
[138.36567688 98.37463379]
[125.05560303 105.29140472]
[110.38510132 102.15629578]
[118.61391449 114.69770050]
[126.84272003 127.23909760]
[135.07153320 139.78050232]
[143.30033875 152.32189941]
[159.93449402 160.22039795]
[160.25126648 177.76652527]
[168.66587830 190.18402100]
[177.08050537 202.60151672]
[185.49511719 215.01901245]
[190.19239807 217.29557800]
[193.24177551 220.79623413]
[194.45295715 224.68827820]
[193.99368286 228.18418884]
[201.84544373 240.96504211]
[203.04580688 226.01313782]
[211.47975159 213.60876465]
[224.94265747 206.99436951]
[239.91535950 207.89895630]
[252.48402405 216.08605957]
[259.36322021 229.41560364]
[258.75479126 244.40324402]
[250.81771851 257.13128662]
[237.62675476 264.27264404]
[222.63000488 263.96054077]
[209.74818420 256.27725220]
[215.61714172 270.08145142]
[221.48611450 283.88562012]
[227.35507202 297.68978882]
[233.22402954 311.49395752]
[247.83927917 307.96627808]
[262.83584595 306.89245605]
[277.80459595 308.30175781]
[292.33718872 312.15579224]
[306.03717041 318.34936523]
[318.53076172 326.71356201]
[329.47720337 337.02014160]
[338.57778931 348.98797607]
[345.58425903 362.29058838]
[350.30551147 376.56503296]
[352.61273193 391.42190552]
[352.44296265 406.45590210]
[349.80084229 421.25686646]
[344.75845337 435.42105103]
[337.45336914 448.56204224]
[328.08483887 460.32131958]
[316.90847778 470.37811279]
[304.22918701 478.45803833]
[290.39282227 484.34066772]
[275.77691650 487.86553955]
[260.78015137 488.93646240]
[245.81166077 487.52426147]
[231.27981567 483.66744995]
[217.58102417 477.47122192]
[205.08901978 469.10464478]
[194.14459229 458.79592896]
[185.04632568 446.82635498]
[178.04238892 433.52239990]
[173.32388306 419.24703979]
[171.01953125 404.38973999]
[171.19219971 389.35577393]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 179]
[6 178]
[7 177]
[8 176]
[9 175]
[10 164]
[11 163]
[12 159]
[13 158]
[14 157]
[15 156]
[18 154]
[19 153]
[20 152]
[21 151]
[22 150]
[23 142]
[24 141]
[25 140]
[27 138]
[28 137]
[29 136]
[30 135]
[31 134]
[33 132]
[35 130]
[36 129]
[37 128]
[38 121]
[39 120]
[40 119]
[41 118]
[42 117]
[43 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
