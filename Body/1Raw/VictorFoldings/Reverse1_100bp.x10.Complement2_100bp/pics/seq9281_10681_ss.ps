%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[154.09857178 622.18353271]
[157.07971191 607.41162109]
[163.38769531 593.72564697]
[172.68231201 581.86364746]
[184.46234131 572.46533203]
[198.09248352 566.03759766]
[194.98837280 551.36230469]
[191.88426208 536.68701172]
[188.78015137 522.01171875]
[185.67604065 507.33639526]
[182.57192993 492.66110229]
[172.36833191 481.81048584]
[177.08232117 466.70788574]
[173.97822571 452.03259277]
[170.87411499 437.35726929]
[166.41445923 431.46377563]
[167.83474731 422.44042969]
[164.94947815 407.72055054]
[162.06419373 393.00064087]
[159.17892456 378.28076172]
[156.07481384 363.60546875]
[152.75256348 348.97799683]
[149.43029785 334.35055542]
[136.83108521 322.13470459]
[142.42361450 304.59033203]
[138.88394165 290.01394653]
[135.34426880 275.43759155]
[122.53029633 267.93173218]
[118.73292542 253.19964600]
[126.69261932 239.81005859]
[123.15294647 225.23368835]
[118.51981354 219.47558594]
[119.67079926 210.41395569]
[116.34854126 195.78649902]
[113.02628326 181.15902710]
[109.48661041 166.58265686]
[105.73030853 152.06059265]
[101.97400665 137.53854370]
[98.21771240 123.01647949]
[94.46141052 108.49442291]
[89.55445862 102.09954834]
[90.75900269 93.72817230]
[85.69289398 86.12735748]
[87.27685547 78.90843964]
[83.95459747 64.28097534]
[80.63233948 49.65351868]
[77.31008148 35.02605820]
[67.22916412 46.13349152]
[52.25070953 45.32975769]
[43.41628265 33.20734406]
[47.23829269 18.70244217]
[60.89929199 12.50752258]
[74.32788849 19.18795204]
[72.10276794 4.35390854]
[69.87765503 -10.48013496]
[66.06468201 -15.88132286]
[65.61874390 -21.54684639]
[67.81396484 -25.78831482]
[66.03150177 -40.68203354]
[64.24903107 -55.57574844]
[62.46656799 -70.46946716]
[60.68410110 -85.36318207]
[58.68008804 -100.22871399]
[56.45497131 -115.06275940]
[54.11948395 -129.87982178]
[51.67375565 -144.67909241]
[49.00796127 -159.44030762]
[46.12268829 -174.16020203]
[43.23741531 -188.88009644]
[35.71859360 -175.90060425]
[22.05374718 -169.71417236]
[7.33951998 -172.62818909]
[-2.93604231 -183.55580139]
[-4.94040966 -198.42129517]
[2.07399774 -211.68017578]
[15.49097919 -218.38723755]
[30.30633163 -216.04089355]
[40.99483871 -205.51524353]
[32.25255966 -218.70172119]
[39.02182007 -231.96922302]
[37.90616989 -246.92767334]
[36.79051971 -261.88610840]
[35.67487335 -276.84457397]
[34.55922318 -291.80303955]
[33.44357681 -306.76147461]
[32.32792664 -321.71994019]
[31.21227837 -336.67837524]
[30.09663010 -351.63684082]
[15.16685295 -353.55691528]
[0.92931038 -358.44335938]
[-12.03298092 -366.09606934]
[-23.18922234 -376.20166016]
[-32.08257294 -388.34634399]
[-38.34885788 -402.03277588]
[-41.73147202 -416.70053101]
[-42.09190369 -431.74893188]
[-39.41539383 -446.56179810]
[-33.81153870 -460.53256226]
[-25.50981712 -473.08908081]
[-14.85017872 -483.71719360]
[-2.26912785 -491.98171997]
[11.71814823 -497.54415894]
[26.53888130 -500.17681885]
[41.58617020 -499.77182007]
[56.24383545 -496.34579468]
[69.91165924 -490.03900146]
[82.02995300 -481.10974121]
[92.10247040 -469.92361450]
[99.71675873 -456.93872070]
[104.56101990 -442.68676758]
[106.43687439 -427.75137329]
[105.26751709 -412.74414062]
[101.10082245 -398.27957153]
[94.10742188 -384.95001221]
[84.57368469 -373.30130005]
[72.89001465 -363.81039429]
[59.53485489 -356.86602783]
[45.05508423 -352.75250244]
[46.17073059 -337.79403687]
[47.28638077 -322.83557129]
[48.40202713 -307.87713623]
[49.51767731 -292.91867065]
[50.63332748 -277.96023560]
[51.74897385 -263.00177002]
[52.86462402 -248.04331970]
[53.98027039 -233.08486938]
[62.64275360 -220.96832275]
[55.95329285 -206.63088989]
[57.95730591 -191.76536560]
[60.84257889 -177.04547119]
[63.72785187 -162.32559204]
[67.12131500 -158.96501160]
[68.43971252 -153.43701172]
[66.47303009 -147.12481689]
[68.91875458 -132.32554626]
[73.11078644 -126.23879242]
[71.28901672 -117.28787231]
[73.51412964 -102.45382690]
[76.75415039 -98.94508362]
[77.82440186 -93.36372375]
[75.57781982 -87.14565277]
[77.36028290 -72.25193024]
[79.14275360 -57.35821533]
[80.92521667 -42.46449661]
[82.70767975 -27.57078171]
[84.71169281 -12.70525265]
[86.93681335 2.12879109]
[89.16192627 16.96283531]
[91.93753815 31.70379829]
[95.25980377 46.33125687]
[98.58206177 60.95871735]
[101.90431976 75.58618164]
[105.33538055 90.18849945]
[108.98346710 104.73812103]
[112.73976898 119.26017761]
[116.49607086 133.78224182]
[120.25237274 148.30430603]
[124.00866699 162.82635498]
[128.36285400 167.80155945]
[129.39579773 173.38993835]
[127.65374756 177.83677673]
[130.97599792 192.46423340]
[134.29826355 207.09169006]
[137.72932434 221.69401550]
[141.26899719 236.27038574]
[154.48304749 244.51821899]
[157.86512756 259.35116577]
[149.92065430 271.89791870]
[153.46032715 286.47427368]
[157.00000000 301.05065918]
[167.58879089 308.41546631]
[170.23690796 320.62902832]
[164.05775452 331.02828979]
[167.38002014 345.65573120]
[170.70227051 360.28320312]
[174.90640259 365.38583374]
[175.77249146 371.00250244]
[173.89881897 375.39547729]
[176.78408813 390.11538696]
[179.66935730 404.83526611]
[182.55464172 419.55517578]
[185.54940796 434.25317383]
[188.65351868 448.92846680]
[191.75762939 463.60375977]
[202.18325806 475.50405884]
[197.24723816 489.55700684]
[200.35134888 504.23229980]
[203.45545959 518.90759277]
[206.55957031 533.58288574]
[209.66368103 548.25817871]
[212.76779175 562.93353271]
[227.83326721 563.29156494]
[242.40991211 567.11492920]
[255.71165466 574.19732666]
[267.02111816 584.15686035]
[275.72839355 596.45648193]
[281.36395264 610.43280029]
[283.62384033 625.33209229]
[282.38619995 640.35089111]
[277.71774292 654.67926025]
[269.87026978 667.54449463]
[259.26696777 678.25274658]
[246.47969055 686.22656250]
[232.19798279 691.03594971]
[217.19209290 692.42150879]
[202.27124023 690.30847168]
[188.24008179 684.81085205]
[175.85533142 676.22515869]
[165.78485107 665.01434326]
[158.57174683 651.78302002]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 191]
[7 190]
[8 189]
[9 188]
[10 187]
[11 186]
[13 184]
[14 183]
[15 182]
[17 181]
[18 180]
[19 179]
[20 178]
[21 175]
[22 174]
[23 173]
[25 170]
[26 169]
[27 168]
[30 165]
[31 164]
[33 163]
[34 162]
[35 161]
[36 158]
[37 157]
[38 156]
[39 155]
[40 154]
[42 153]
[44 152]
[45 151]
[46 150]
[47 149]
[53 148]
[54 147]
[55 146]
[58 145]
[59 144]
[60 143]
[61 142]
[62 141]
[63 138]
[64 137]
[65 135]
[66 134]
[67 131]
[68 130]
[69 129]
[78 128]
[80 126]
[81 125]
[82 124]
[83 123]
[84 122]
[85 121]
[86 120]
[87 119]
[88 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
