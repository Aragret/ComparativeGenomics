%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[50.50037766 712.27819824]
[37.39025879 719.62835693]
[23.31174469 724.89105225]
[8.59485626 727.94287109]
[-6.41542149 728.71228027]
[-21.36722565 727.18127441]
[-35.91006470 723.38574219]
[-49.70303345 717.41461182]
[-62.42280579 709.40783691]
[-73.77120972 699.55322266]
[-83.48222351 688.08166504]
[-91.32820892 675.26208496]
[-97.12524414 661.39508057]
[-100.73744202 646.80560303]
[-102.08011627 631.83569336]
[-101.12180328 616.83630371]
[-97.88496399 602.15899658]
[-92.44547272 588.14782715]
[-84.93083954 575.13128662]
[-75.51721954 563.41442871]
[-64.42527771 553.27197266]
[-51.91503525 544.94165039]
[-38.27973938 538.61877441]
[-23.83902550 534.45147705]
[-8.93140411 532.53753662]
[6.09366894 532.92175293]
[8.75946426 518.16052246]
[11.42525959 503.39932251]
[6.07301569 489.49957275]
[16.13970947 477.29415894]
[18.80550575 462.53292847]
[21.47130013 447.77172852]
[11.30047226 434.37796021]
[14.01705360 417.43878174]
[28.42225647 407.51361084]
[30.86798286 392.71432495]
[33.31371307 377.91506958]
[35.75943756 363.11578369]
[38.20516586 348.31652832]
[40.65089417 333.51724243]
[43.09662247 318.71798706]
[45.54234695 303.91870117]
[43.79728317 300.85485840]
[43.44951630 296.79357910]
[44.95169067 292.40075684]
[48.44192886 288.51934814]
[51.54603958 273.84405518]
[54.65014648 259.16876221]
[53.04362869 256.03005981]
[52.87755585 251.95727539]
[54.57438278 247.63592529]
[58.23445129 243.91424561]
[61.99075317 229.39218140]
[65.74705505 214.87011719]
[69.50335693 200.34806824]
[73.25965118 185.82600403]
[77.01595306 171.30393982]
[80.77225494 156.78187561]
[84.09451294 142.15441895]
[86.97978973 127.43453217]
[89.86505890 112.71463776]
[84.02105713 96.99128723]
[95.18329620 84.47007751]
[97.84909058 69.70886230]
[100.51488495 54.94764328]
[103.18067932 40.18642807]
[105.84648132 25.42521095]
[108.51227570 10.66399384]
[103.35070801 -4.29156685]
[113.22672272 -15.44116402]
[115.89251709 -30.20238113]
[104.28296661 -40.16056824]
[99.24986267 -54.49809647]
[102.05042267 -69.33127594]
[111.83412933 -80.69503784]
[125.89753723 -85.60281372]
[128.56332397 -100.36402893]
[131.22912598 -115.12524414]
[129.61636353 -119.15673828]
[129.39283752 -123.09559631]
[130.35885620 -126.51644135]
[132.19705200 -129.10249329]
[134.51808167 -130.67442322]
[138.05775452 -145.25079346]
[141.59742737 -159.82717896]
[140.10566711 -166.26815796]
[141.83155823 -171.68278503]
[145.46557617 -174.78166199]
[149.43766785 -189.24618530]
[153.40977478 -203.71070862]
[157.05786133 -218.26033020]
[152.56922913 -233.43144226]
[162.93325806 -244.12893677]
[166.25552368 -258.75640869]
[152.31871033 -264.39212036]
[139.46647644 -272.19061279]
[128.03173828 -281.94985962]
[118.31067657 -293.41708374]
[110.55508423 -306.29525757]
[104.96585846 -320.25076294]
[101.68776703 -334.92218018]
[100.80572510 -349.92944336]
[102.34257507 -364.88385010]
[106.25851440 -379.39804077]
[112.45210266 -393.09606934]
[120.76291656 -405.62307739]
[130.97569275 -416.65466309]
[142.82588196 -425.90502930]
[156.00654602 -433.13455200]
[170.17626953 -438.15603638]
[184.96801758 -440.83935547]
[199.99865723 -441.11502075]
[214.87886047 -438.97592163]
[229.22319031 -434.47741699]
[242.66007996 -427.73605347]
[254.84150696 -418.92645264]
[265.45193481 -408.27679443]
[274.21652222 -396.06292725]
[280.90823364 -382.60125732]
[285.35375977 -368.24041748]
[287.43792725 -353.35241699]
[287.10678101 -338.32290649]
[284.36889648 -323.54116821]
[279.29516602 -309.39007568]
[272.01702881 -296.23617554]
[262.72299194 -284.42019653]
[251.65380859 -274.24822998]
[239.09619141 -265.98370361]
[225.37541199 -259.84069824]
[210.84686279 -255.97836304]
[195.88688660 -254.49670410]
[180.88298035 -255.43414307]
[177.56071472 -240.80667114]
[182.28697205 -226.68180847]
[171.68531799 -214.93806458]
[173.24491882 -211.77580261]
[173.35034180 -207.70100403]
[171.58937073 -203.40539551]
[167.87429810 -199.73861694]
[163.90219116 -185.27409363]
[159.93009949 -170.80957031]
[156.17379761 -156.28750610]
[152.63412476 -141.71113586]
[149.09445190 -127.13475037]
[145.99034119 -112.45944977]
[143.32455444 -97.69823456]
[140.65875244 -82.93701935]
[152.11714172 -73.42014313]
[157.30799866 -59.35205841]
[154.74328613 -44.47628403]
[145.01312256 -32.80492401]
[130.65373230 -27.53658676]
[127.98793793 -12.77536869]
[133.34017944 1.12437022]
[123.27349091 13.32978916]
[120.60769653 28.09100533]
[117.94190216 42.85222244]
[115.27610779 57.61344147]
[112.61030579 72.37465668]
[109.94451141 87.13587189]
[115.99656677 97.08644867]
[113.84149170 108.53182983]
[104.58495331 115.59991455]
[101.69967651 130.31980896]
[98.81440735 145.03968811]
[100.36697388 149.09475708]
[100.53182983 153.03649902]
[99.51499176 156.44258118]
[97.63848114 159.00097656]
[95.29431915 160.53817749]
[91.53801727 175.06024170]
[87.78171539 189.58230591]
[84.02541351 204.10435486]
[80.26911163 218.62641907]
[76.51280975 233.14848328]
[72.75650787 247.67053223]
[69.32544708 262.27285767]
[66.22134399 276.94815063]
[63.11722946 291.62347412]
[60.34161758 306.36444092]
[57.89589310 321.16369629]
[55.45016479 335.96298218]
[53.00443649 350.76223755]
[50.55870819 365.56152344]
[48.11298370 380.36077881]
[45.66725540 395.16006470]
[43.22152710 409.95932007]
[52.27352524 419.93307495]
[53.90465164 433.10693359]
[47.74178314 444.64385986]
[36.23251724 450.43750000]
[33.56672287 465.19873047]
[30.90092659 479.95996094]
[36.06249619 494.91549683]
[26.18647766 506.06509399]
[23.52068138 520.82629395]
[20.85488701 535.58752441]
[35.06523895 540.48309326]
[48.36169815 547.49053955]
[60.43257523 556.44567871]
[70.99491119 567.13854980]
[79.80111694 579.31848145]
[86.64475250 592.70001221]
[91.36540222 606.96942139]
[93.85239410 621.79223633]
[94.04744720 636.82092285]
[91.94597626 651.70330811]
[87.59724426 666.09039307]
[81.10319519 679.64501953]
[72.61605835 692.04943848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 197]
[27 196]
[28 195]
[30 193]
[31 192]
[32 191]
[35 187]
[36 186]
[37 185]
[38 184]
[39 183]
[40 182]
[41 181]
[42 180]
[46 179]
[47 178]
[48 177]
[52 176]
[53 175]
[54 174]
[55 173]
[56 172]
[57 171]
[58 170]
[59 165]
[60 164]
[61 163]
[63 160]
[64 159]
[65 158]
[66 157]
[67 156]
[68 155]
[70 153]
[71 152]
[76 147]
[77 146]
[78 145]
[83 144]
[84 143]
[85 142]
[88 141]
[89 140]
[90 139]
[91 135]
[93 133]
[94 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
