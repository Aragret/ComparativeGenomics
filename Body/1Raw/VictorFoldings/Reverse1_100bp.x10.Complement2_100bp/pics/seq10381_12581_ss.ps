%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[57.34291077 291.83706665]
[63.47669220 305.56198120]
[67.32927704 320.09310913]
[68.80088806 335.05407715]
[67.85338593 350.05734253]
[64.51132965 364.71432495]
[58.86128235 378.64532471]
[51.04959106 391.48953247]
[41.27859879 402.91424561]
[29.80139923 412.62350464]
[16.91527748 420.36587524]
[2.95401669 425.94076538]
[-11.72075462 429.20376587]
[-26.72892380 430.07040405]
[-41.68174362 428.51818848]
[-56.19189835 424.58734131]
[-69.88353729 418.37966919]
[-82.40202332 410.05599976]
[-93.42309570 399.83187866]
[-102.66127014 387.97219849]
[-109.87727356 374.78411865]
[-114.88417816 360.60925293]
[-117.55229950 345.81472778]
[-117.81253052 330.78381348]
[-115.65812683 315.90582275]
[-111.14488983 301.56613159]
[-104.38972473 288.13616943]
[-95.56761169 275.96380615]
[-84.90705872 265.36431885]
[-72.68420410 256.61230469]
[-59.21565247 249.93441772]
[-44.85026169 245.50364685]
[-29.96013260 243.43475342]
[-14.93095970 243.78134155]
[-0.15203229 246.53443909]
[13.99383926 251.62269592]
[21.26706886 238.50401306]
[28.54029846 225.38531494]
[35.81352615 212.26661682]
[43.08675766 199.14791870]
[50.35998535 186.02923584]
[57.23939896 172.69979858]
[63.71889496 159.17146301]
[70.19839478 145.64311218]
[76.67788696 132.11476135]
[83.05649567 118.53855896]
[89.33385468 104.91524506]
[76.85368347 113.23661804]
[62.08180618 115.84270477]
[47.50754547 112.29432678]
[35.58692169 103.18945312]
[28.32876968 90.06240845]
[26.95621300 75.12534332]
[31.70055199 60.89539719]
[41.76228333 49.77058029]
[55.44582748 43.62561417]
[70.44526672 43.49603653]
[84.23293304 49.40367889]
[94.48536682 60.35300064]
[99.47483826 74.49885559]
[98.36009216 89.45899963]
[107.14069366 77.29754639]
[115.92129517 65.13608551]
[124.70190430 52.97463226]
[133.48249817 40.81317902]
[118.48416138 40.59014511]
[109.18688202 28.81897354]
[112.44426727 14.17692947]
[125.85509491 7.45758486]
[139.53340149 13.61419010]
[143.39636230 28.10670090]
[153.05717468 16.63199997]
[162.71798706 5.15730047]
[172.37878418 -6.31739950]
[182.03959656 -17.79209900]
[191.70040894 -29.26679993]
[201.36122131 -40.74150085]
[186.53509521 -38.46427536]
[173.14953613 -45.23382568]
[166.19702148 -58.52528000]
[168.27069092 -73.38124847]
[178.59710693 -84.26083374]
[193.32476807 -87.10620880]
[206.96061707 -80.85611725]
[214.41882324 -67.84169769]
[212.91720581 -52.91593170]
[223.87310791 -63.16132355]
[234.82901001 -73.40671539]
[245.78492737 -83.65210724]
[246.05059814 -101.14350128]
[258.63659668 -112.80143738]
[275.42276001 -111.77026367]
[286.22491455 -122.17763519]
[297.02706909 -132.58500671]
[307.82922363 -142.99238586]
[318.63137817 -153.39974976]
[329.43353271 -163.80712891]
[320.00085449 -175.48248291]
[311.62167358 -187.93553162]
[304.35971069 -201.07148743]
[298.27029419 -214.79039001]
[293.39971924 -228.98782349]
[289.78509521 -243.55572510]
[287.45388794 -258.38323975]
[286.42388916 -273.35748291]
[286.70291138 -288.36453247]
[288.28881836 -303.29016113]
[291.16958618 -318.02075195]
[295.32324219 -332.44424438]
[300.71817017 -346.45080566]
[307.31335449 -359.93386841]
[315.05856323 -372.79080200]
[323.89489746 -384.92376709]
[333.75503540 -396.24041748]
[344.56399536 -406.65463257]
[356.23950195 -416.08715820]
[368.69265747 -424.46618652]
[381.82870483 -431.72793579]
[395.54769897 -437.81716919]
[409.74520874 -442.68756104]
[424.31314087 -446.30197144]
[439.14068604 -448.63296509]
[454.11495972 -449.66275024]
[469.12200928 -449.38351440]
[484.04760742 -447.79739380]
[498.77816772 -444.91644287]
[513.20159912 -440.76260376]
[527.20806885 -435.36746216]
[540.69104004 -428.77206421]
[553.54785156 -421.02667236]
[565.68072510 -412.19018555]
[576.99725342 -402.32986450]
[587.41131592 -391.52078247]
[596.84362793 -379.84515381]
[605.22247314 -367.39187622]
[612.48406982 -354.25570679]
[618.57312012 -340.53665161]
[623.44329834 -326.33908081]
[627.05749512 -311.77105713]
[629.38830566 -296.94351196]
[630.41790771 -281.96920776]
[630.13842773 -266.96215820]
[628.55212402 -252.03659058]
[625.67095947 -237.30607605]
[621.51690674 -222.88272095]
[616.12152100 -208.87629700]
[609.52600098 -195.39343262]
[601.78039551 -182.53669739]
[592.94372559 -170.40397644]
[583.08325195 -159.08760071]
[572.27404785 -148.67369080]
[560.59826660 -139.24150085]
[548.14489746 -130.86282349]
[535.00860596 -123.60143280]
[521.28942871 -117.51258087]
[507.09182739 -112.64260864]
[492.52377319 -109.02858734]
[477.69616699 -106.69802094]
[462.72186279 -105.66864777]
[447.71481323 -105.94829559]
[432.78927612 -107.53483582]
[418.05877686 -110.41620636]
[403.63549805 -114.57046509]
[389.62915039 -119.96600342]
[376.14636230 -126.56175232]
[363.28976440 -134.30751038]
[351.15716553 -143.14433289]
[339.84091187 -153.00497437]
[329.03875732 -142.59759521]
[318.23660278 -132.19023132]
[307.43444824 -121.78285217]
[296.63229370 -111.37548065]
[285.83013916 -100.96810150]
[287.39520264 -88.17826080]
[281.21575928 -76.65018463]
[269.35037231 -70.69846344]
[256.03030396 -72.69619751]
[245.07440186 -62.45080566]
[234.11849976 -52.20541382]
[223.16259766 -41.96002197]
[212.83592224 -31.08069038]
[203.17510986 -19.60598946]
[193.51429749 -8.13128948]
[183.85348511 3.34341073]
[174.19267273 14.81811047]
[164.53187561 26.29281044]
[154.87106323 37.76750946]
[145.64396667 49.59378052]
[136.86335754 61.75523758]
[128.08274841 73.91669464]
[119.30215454 86.07814789]
[110.52154541 98.23960114]
[102.95716858 111.19260406]
[96.67980957 124.81591797]
[95.93066406 133.91957092]
[90.20623016 138.59425354]
[83.72673798 152.12260437]
[77.24723816 165.65095520]
[70.76774597 179.17929077]
[71.25537872 183.49394226]
[70.42787933 187.35137939]
[68.59049225 190.39430237]
[66.13311005 192.40126038]
[63.47867966 193.30245972]
[56.20545197 206.42115784]
[48.93222046 219.53985596]
[41.65899277 232.65853882]
[34.38576126 245.77723694]
[27.11253357 258.89593506]
[38.92226028 268.19790649]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 209]
[37 208]
[38 207]
[39 206]
[40 205]
[41 204]
[42 199]
[43 198]
[44 197]
[45 196]
[46 194]
[47 193]
[61 192]
[62 191]
[63 190]
[64 189]
[65 188]
[71 187]
[72 186]
[73 185]
[74 184]
[75 183]
[76 182]
[77 181]
[86 180]
[87 179]
[88 178]
[89 177]
[92 173]
[93 172]
[94 171]
[95 170]
[96 169]
[97 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
