%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[104.08718109 211.98019409]
[104.66414642 226.97822571]
[103.96710968 241.97116089]
[102.00108337 256.85095215]
[98.78022766 271.51043701]
[94.32775879 285.84393311]
[88.67575836 299.74819946]
[81.86494446 313.12304688]
[73.94438934 325.87210083]
[64.97116089 337.90353394]
[55.00991440 349.13061523]
[44.13242722 359.47247314]
[32.41706848 368.85461426]
[19.94824600 377.20938110]
[6.81580496 384.47662354]
[-6.88563633 390.60397339]
[-21.05735588 395.54727173]
[-35.59724808 399.27090454]
[-50.40054321 401.74804688]
[-65.36058807 402.96084595]
[-80.36959076 402.90054321]
[-95.31941223 401.56762695]
[-110.10233307 398.97164917]
[-124.61184692 395.13134766]
[-138.74340820 390.07437134]
[-152.39518738 383.83715820]
[-165.46882629 376.46466064]
[-177.87013245 368.01000977]
[-189.50975037 358.53408813]
[-200.30381775 348.10516357]
[-210.17454529 336.79843140]
[-219.05084229 324.69531250]
[-226.86872864 311.88305664]
[-233.57189941 298.45391846]
[-239.11203003 284.50469971]
[-243.44921875 270.13589478]
[-246.55221558 255.45101929]
[-248.39865112 240.55590820]
[-248.97523499 225.55786133]
[-248.27780151 210.56494141]
[-246.31138611 195.68519592]
[-243.09016418 181.02581787]
[-238.63732910 166.69242859]
[-232.98495483 152.78829956]
[-226.17379761 139.41362000]
[-218.25291443 126.66476440]
[-209.27937317 114.63357544]
[-199.31784058 103.40674591]
[-188.44009399 93.06517029]
[-176.72448730 83.68334961]
[-164.25544739 75.32889557]
[-151.12281799 68.06198883]
[-137.42121887 61.93499756]
[-123.24937439 56.99206543]
[-108.70938873 53.26881027]
[-93.90602112 50.79205322]
[-78.94594574 49.57963943]
[-63.93694687 49.64031219]
[-48.98715973 50.97362518]
[-34.20430374 53.56997681]
[-19.69489288 57.41065979]
[-5.56346893 62.46799850]
[8.08815002 68.70555878]
[21.16160202 76.07839203]
[33.56269073 84.53337860]
[45.20206451 94.00960541]
[55.99586105 104.43878937]
[65.86630249 115.74578094]
[77.96205902 106.87488556]
[90.05780792 98.00399017]
[94.17869568 91.07644653]
[102.40033722 89.09265137]
[114.62682343 80.40283203]
[126.85330963 71.71300507]
[139.07978821 63.02318192]
[151.30627441 54.33335876]
[143.24507141 41.67974854]
[135.83509827 28.63408279]
[129.09538269 15.22985458]
[123.04323578 1.50146818]
[117.69419098 -12.51583385]
[113.06198120 -26.78606987]
[109.15849304 -41.27260971]
[105.99374390 -55.93826294]
[103.57585907 -70.74538422]
[101.91105652 -85.65596771]
[101.00359344 -100.63173676]
[100.85580444 -115.63423920]
[101.46807861 -130.62496948]
[102.83882904 -145.56546021]
[104.96454620 -160.41734314]
[107.83977509 -175.14248657]
[111.45713043 -189.70310974]
[115.80732727 -204.06184387]
[120.87919617 -218.18179321]
[126.65972900 -232.02673340]
[133.13406372 -245.56114197]
[140.28561401 -258.75024414]
[148.09599304 -271.56021118]
[156.54516602 -283.95812988]
[165.61143494 -295.91220093]
[175.27154541 -307.39172363]
[185.50067139 -318.36721802]
[196.27256775 -328.81054688]
[207.55960083 -338.69488525]
[219.33276367 -347.99487305]
[231.56187439 -356.68658447]
[244.21549988 -364.74777222]
[257.26116943 -372.15771484]
[270.66543579 -378.89739990]
[284.39382935 -384.94949341]
[298.41116333 -390.29849243]
[312.68139648 -394.93066406]
[327.16793823 -398.83413696]
[341.83361816 -401.99884033]
[356.64074707 -404.41668701]
[371.55133057 -406.08145142]
[386.52709961 -406.98886108]
[401.52960205 -407.13659668]
[416.52032471 -406.52429199]
[431.46081543 -405.15350342]
[446.31268311 -403.02774048]
[461.03784180 -400.15246582]
[475.59844971 -396.53506470]
[489.95715332 -392.18484497]
[504.07708740 -387.11294556]
[517.92205811 -381.33236694]
[531.45642090 -374.85800171]
[544.64550781 -367.70642090]
[557.45544434 -359.89599609]
[569.85333252 -351.44677734]
[581.80737305 -342.38049316]
[593.28686523 -332.72033691]
[604.26239014 -322.49118042]
[614.70568848 -311.71926880]
[624.58996582 -300.43222046]
[633.88989258 -288.65899658]
[642.58160400 -276.42987061]
[650.64276123 -263.77624512]
[658.05267334 -250.73052979]
[664.79229736 -237.32626343]
[670.84436035 -223.59783936]
[676.19329834 -209.58050537]
[680.82543945 -195.31024170]
[684.72888184 -180.82368469]
[687.89355469 -166.15802002]
[690.31134033 -151.35087585]
[691.97607422 -136.44029236]
[692.88342285 -121.46452332]
[693.03112793 -106.46201324]
[692.41882324 -91.47128296]
[691.04797363 -76.53079987]
[688.92218018 -61.67893600]
[686.04687500 -46.95379639]
[682.42944336 -32.39319229]
[678.07916260 -18.03449821]
[673.00720215 -3.91456962]
[667.22656250 9.93034554]
[660.75219727 23.46470642]
[653.60058594 36.65377426]
[645.79010010 49.46368790]
[637.34088135 61.86156464]
[628.27453613 73.81558228]
[618.61437988 85.29505920]
[608.38519287 96.27051544]
[597.61322021 106.71378326]
[586.32611084 116.59806061]
[574.55291748 125.89796448]
[562.32379150 134.58963013]
[549.67010498 142.65074158]
[536.62438965 150.06060791]
[523.22009277 156.80020142]
[509.49163818 162.85223389]
[495.47430420 168.20117188]
[481.20404053 172.83326721]
[466.71746826 176.73663330]
[452.05178833 179.90126038]
[437.24462891 182.31903076]
[422.33404541 183.98370361]
[407.35827637 184.89105225]
[392.35577393 185.03871155]
[377.36502075 184.42631531]
[362.42456055 183.05543518]
[347.57269287 180.92959595]
[332.84756470 178.05426025]
[318.28695679 174.43678284]
[303.92828369 170.08647156]
[289.80838013 165.01448059]
[275.96347046 159.23384094]
[262.42913818 152.75938416]
[249.24008179 145.60772705]
[236.43019104 137.79724121]
[224.03233337 129.34797668]
[212.07833862 120.28160095]
[200.59889221 110.62140656]
[189.62345886 100.39218903]
[179.18022156 89.62019348]
[169.29597473 78.33309174]
[159.99610901 66.55984497]
[147.76962280 75.24966431]
[135.54313660 83.93949127]
[123.31665039 92.62931824]
[111.09016418 101.31913757]
[98.92870331 110.09974670]
[86.83295441 118.97064209]
[74.73719788 127.84153748]
[82.55541992 140.65361023]
[89.25892639 154.08256531]
[94.79942322 168.03164673]
[99.13698578 182.40034485]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 206]
[69 205]
[70 204]
[72 203]
[73 202]
[74 201]
[75 200]
[76 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
