%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUAUCACAAUUACAGUAAUUCCUCUCUUCCUUCUCUUCAUUCGGCUCCCGCAGAAACUAACACAUCAUUCCCACCUUCCACUAAAAUAGCCUUACCCUCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[101.19715881 611.13702393]
[103.91982269 596.25610352]
[111.10948181 582.94580078]
[122.06175232 572.51013184]
[135.70365906 565.97155762]
[133.69964600 551.10601807]
[131.69563293 536.24047852]
[129.69161987 521.37493896]
[127.68759918 506.50942993]
[125.68358612 491.64389038]
[123.67957306 476.77835083]
[119.67062378 470.56948853]
[121.75809479 461.67678833]
[119.97563171 446.78305054]
[107.38292694 443.59439087]
[96.59680939 436.29821777]
[88.91326141 425.74499512]
[85.26437378 413.17807007]
[86.10529327 400.08715820]
[91.35759735 388.03182983]
[100.41601562 378.45562744]
[112.21813202 372.51327515]
[110.87989807 357.57308960]
[109.54166412 342.63290405]
[108.20343018 327.69271851]
[99.36151123 315.70648193]
[105.83676910 301.27105713]
[104.49853516 286.33087158]
[100.77082062 279.94918823]
[103.25328827 271.15856934]
[102.13764191 256.20010376]
[101.02199554 241.24165344]
[97.38970947 234.80517578]
[100.00278473 226.05247498]
[99.10996246 211.07907104]
[98.21714783 196.10566711]
[89.73603058 183.86149597]
[96.63820648 169.62525940]
[95.74539185 154.65185547]
[81.73513031 151.68481445]
[68.97147369 145.19023132]
[58.32556152 135.61134338]
[50.52399063 123.60192108]
[46.09922791 109.98163605]
[45.35327530 95.68009186]
[48.33703995 81.67338562]
[54.84688187 68.91749573]
[64.43848419 58.28303528]
[76.45722198 50.49582291]
[90.08277893 46.08734131]
[89.41299438 31.10230064]
[88.74320984 16.11726189]
[73.32192230 6.58092737]
[66.76964569 -10.15667248]
[71.53414154 -27.32497215]
[85.52577972 -38.10020447]
[84.41013336 -53.05865860]
[83.29448700 -68.01711273]
[82.17883301 -82.97556305]
[81.06318665 -97.93401337]
[79.94754028 -112.89247131]
[65.13090515 -124.69847107]
[63.67387772 -143.26699829]
[76.03645325 -156.76818848]
[66.90544128 -169.68852234]
[73.27667999 -183.15168762]
[71.71615601 -198.07029724]
[62.58514023 -210.99063110]
[68.95637512 -224.45378113]
[59.44644547 -233.16722107]
[58.45381165 -245.62509155]
[65.96691895 -255.10559082]
[64.62868500 -270.04577637]
[63.29045105 -284.98596191]
[61.95221710 -299.92614746]
[60.61398315 -314.86633301]
[59.05345917 -329.78494263]
[57.27099609 -344.67864990]
[55.48852921 -359.57235718]
[53.70606232 -374.46609497]
[39.11359024 -378.62966919]
[27.25885582 -388.03756714]
[19.92897987 -401.23175049]
[18.21369553 -416.18652344]
[22.34344673 -430.61947632]
[31.65898895 -442.33978271]
[44.71639633 -449.58087158]
[42.93392944 -464.47460938]
[41.15146255 -479.36831665]
[39.36899948 -494.26202393]
[24.43233299 -496.39709473]
[10.55759907 -502.32620239]
[-1.30920339 -511.64505005]
[-10.35897541 -523.71832275]
[-15.97468853 -537.72283936]
[-17.77345276 -552.70373535]
[-15.63262844 -567.63958740]
[-9.69817734 -581.51202393]
[-0.37472233 -593.37524414]
[11.70204926 -602.42034912]
[25.70872116 -608.03063965]
[40.69029999 -609.82360840]
[55.62530899 -607.67700195]
[69.49546051 -601.73724365]
[81.35506439 -592.40917969]
[90.39550781 -580.32891846]
[96.00040436 -566.32006836]
[97.78760529 -551.33782959]
[95.63524628 -536.40362549]
[89.69008636 -522.53576660]
[80.35746765 -510.67977905]
[68.27371979 -501.64398193]
[54.26271439 -496.04449463]
[56.04518127 -481.15078735]
[57.82764816 -466.25708008]
[59.61011124 -451.36334229]
[74.00749969 -447.40802002]
[85.82569122 -438.21694946]
[93.24467468 -425.16616821]
[95.10683441 -410.22894287]
[91.09750366 -395.67770386]
[81.79762268 -383.73803711]
[68.59977722 -376.24856567]
[70.38224792 -361.35482788]
[72.16471100 -346.46112061]
[73.94718170 -331.56741333]
[77.08129883 -327.96374512]
[77.98488617 -322.35299683]
[75.55416870 -316.20455933]
[76.89240265 -301.26437378]
[78.23063660 -286.32418823]
[79.56887054 -271.38400269]
[80.90710449 -256.44381714]
[91.76132965 -242.65423584]
[83.87497711 -226.01431274]
[92.89437866 -214.16105652]
[86.63475800 -199.63081360]
[88.19528198 -184.71220398]
[97.21467590 -172.85894775]
[90.95506287 -158.32870483]
[101.16445923 -153.23612976]
[107.71555328 -143.74935913]
[108.88565063 -132.15950012]
[104.26895905 -121.33419800]
[94.90599060 -114.00811768]
[96.02163696 -99.04966736]
[97.13729095 -84.09120941]
[98.25293732 -69.13275909]
[99.36858368 -54.17430496]
[100.48423767 -39.21585083]
[111.64163971 -34.43176270]
[119.75424194 -25.30385971]
[123.23661041 -13.52361488]
[121.36901855 -1.30921149]
[114.44524384 9.01211452]
[103.72824860 15.44747639]
[104.39803314 30.43251610]
[105.06781769 45.41755295]
[120.22089386 49.04863358]
[133.74009705 56.79662704]
[144.53308105 68.03548431]
[151.72776794 81.85709381]
[154.74279785 97.14467621]
[153.33456421 112.66296387]
[147.61685181 127.15807343]
[138.05168152 139.45878601]
[125.41188812 148.57121277]
[110.71879578 153.75903320]
[111.61161804 168.73243713]
[120.15660095 182.04760742]
[113.19055939 195.21284485]
[114.08337402 210.18624878]
[114.97618866 225.15966797]
[115.98044586 240.12600708]
[117.09609985 255.08445740]
[118.21174622 270.04290771]
[119.43872070 284.99264526]
[120.77695465 299.93283081]
[129.71458435 312.98767090]
[123.14361572 326.35449219]
[124.48184967 341.29467773]
[125.82008362 356.23486328]
[127.15831757 371.17504883]
[143.34361267 376.91314697]
[155.35372925 389.10940552]
[160.80683899 405.27612305]
[158.65170288 422.14529419]
[149.36990356 436.32916260]
[134.86933899 445.00061035]
[136.65180969 459.89431763]
[138.54510498 474.77435303]
[140.54911804 489.63989258]
[142.55313110 504.50540161]
[144.55714417 519.37091064]
[146.56115723 534.23645020]
[148.56517029 549.10198975]
[150.56918335 563.96752930]
[165.45556641 566.66027832]
[178.78028870 573.82312012]
[189.23794556 584.75439453]
[195.80397034 598.38317871]
[197.83512878 613.37414551]
[195.13241577 628.25872803]
[187.96060181 641.57861328]
[177.02232361 652.02893066]
[163.38919067 658.58587646]
[148.39685059 660.60699463]
[133.51409912 657.89428711]
[120.19898224 650.71356201]
[109.75598907 639.76824951]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 197]
[6 196]
[7 195]
[8 194]
[9 193]
[10 192]
[11 191]
[13 190]
[14 189]
[22 183]
[23 182]
[24 181]
[25 180]
[27 178]
[28 177]
[30 176]
[31 175]
[32 174]
[34 173]
[35 172]
[36 171]
[38 169]
[39 168]
[50 158]
[51 157]
[52 156]
[56 150]
[57 149]
[58 148]
[59 147]
[60 146]
[61 145]
[64 140]
[66 138]
[67 137]
[69 135]
[72 133]
[73 132]
[74 131]
[75 130]
[76 129]
[77 126]
[78 125]
[79 124]
[80 123]
[87 116]
[88 115]
[89 114]
[90 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
