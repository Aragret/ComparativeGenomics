%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[79.66135406 575.83996582]
[69.37554932 564.81036377]
[62.15658188 551.56884766]
[58.45822906 536.94787598]
[58.51298523 521.86651611]
[62.31739807 507.27276611]
[69.63232422 494.08401489]
[79.99794769 483.12936401]
[92.76266479 475.09738159]
[107.12407684 470.49295044]
[106.23126221 455.51956177]
[105.33844757 440.54614258]
[104.44563293 425.57275391]
[101.53156281 421.78894043]
[100.96353149 416.13433838]
[103.75590515 410.14151001]
[103.30929565 395.14816284]
[102.86269379 380.15478516]
[102.41608429 365.16143799]
[92.40187836 350.75024414]
[101.26467133 334.60922241]
[100.59488678 319.62420654]
[99.92510223 304.63916016]
[99.25531769 289.65411377]
[98.58552551 274.66906738]
[97.91574097 259.68405151]
[97.24595642 244.69900513]
[96.57617188 229.71395874]
[87.86381531 221.32221985]
[87.18316650 208.84341431]
[95.44371796 198.93756104]
[94.99711609 183.94421387]
[94.55050659 168.95085144]
[80.30059814 166.30122375]
[66.91577148 160.74003601]
[54.98379898 152.51152039]
[45.02866364 141.97702026]
[37.48753357 129.59913635]
[32.69157028 115.92145538]
[30.85137749 101.54459381]
[32.04777145 87.09990692]
[36.22821426 73.22171021]
[43.20912170 60.51945114]
[52.68393707 49.55093765]
[64.23658752 40.79784012]
[77.35974884 34.64453888]
[91.47712708 31.36124802]
[91.25379944 16.36291122]
[91.03047180 1.36457312]
[90.80714417 -13.63376427]
[90.58381653 -28.63210106]
[90.36048889 -43.63043976]
[87.10366058 -52.16453934]
[90.24716187 -58.85335159]
[90.24716187 -73.85334778]
[90.24716187 -88.85334778]
[90.24716187 -103.85334778]
[90.24716187 -118.85334778]
[83.33768463 -105.53948212]
[72.85370636 -94.81166077]
[59.70218658 -87.59795380]
[45.02086639 -84.52241516]
[30.07983208 -85.85111237]
[16.17162704 -91.46910858]
[4.49945021 -100.89037323]
[-3.92693663 -113.29988861]
[-8.37856770 -127.62409973]
[-8.47033119 -142.62380981]
[-4.19429016 -157.00141907]
[4.07963610 -169.51310730]
[15.63566971 -179.07647705]
[29.47409821 -184.86421204]
[44.39775848 -186.37561035]
[59.11560822 -183.47993469]
[72.35440063 -176.42767334]
[82.96884918 -165.82893372]
[90.04070282 -152.60058594]
[92.95800018 -137.89056396]
[97.14501190 -152.29434204]
[101.33202362 -166.69812012]
[105.51903534 -181.10191345]
[107.19057465 -196.00848389]
[106.29776001 -210.98188782]
[105.40494537 -225.95529175]
[104.51213074 -240.92869568]
[103.61930847 -255.90209961]
[94.50794220 -265.03149414]
[94.07257080 -277.52127075]
[102.00151062 -286.65682983]
[101.33172607 -301.64184570]
[100.66194153 -316.62689209]
[85.85645294 -319.43658447]
[72.09825897 -325.58544922]
[60.12930298 -334.74191284]
[50.59506989 -346.41217041]
[44.00972748 -359.96688843]
[40.72840881 -374.67501831]
[40.92807770 -389.74343872]
[44.59796524 -404.35946655]
[51.54015350 -417.73492432]
[61.38026428 -429.14846802]
[73.58763123 -437.98458862]
[87.50392914 -443.76675415]
[102.37866211 -446.18313599]
[117.40966797 -445.10345459]
[131.78633118 -440.58587646]
[144.73333740 -432.87408447]
[155.55247498 -422.38397217]
[163.66027832 -409.68121338]
[168.61950684 -395.45086670]
[170.16271973 -380.46035767]
[168.20668030 -365.51809692]
[162.85688782 -351.42993164]
[154.40184021 -338.95559692]
[143.29751587 -328.76782227]
[130.14276123 -321.41604614]
[115.64698029 -317.29669189]
[116.31676483 -302.31164551]
[116.98654938 -287.32659912]
[127.21421051 -273.06610107]
[118.59272003 -256.79492188]
[119.48553467 -241.82151794]
[120.37834930 -226.84811401]
[121.27116394 -211.87469482]
[122.16397858 -196.90129089]
[128.03529358 -210.70446777]
[137.11422729 -222.64486694]
[148.84561157 -231.99230957]
[162.51205444 -238.17520142]
[177.27786255 -240.81547546]
[192.24008179 -239.75164795]
[206.48379517 -235.04879761]
[219.13796997 -226.99449158]
[229.42880249 -216.08126831]
[236.72702026 -202.97644043]
[240.58630371 -188.48141479]
[240.77069092 -173.48255920]
[237.26889038 -158.89703369]
[230.29502869 -145.61677551]
[220.27557373 -134.45385742]
[207.82322693 -126.09091949]
[193.69943237 -121.03934479]
[178.76786804 -119.60803223]
[163.94161987 -121.88452148]
[150.12731934 -127.72959900]
[138.16969299 -136.78582764]
[128.79998779 -148.49943542]
[122.59113312 -162.15409851]
[119.92281342 -176.91490173]
[115.73580170 -162.51110840]
[111.54878998 -148.10733032]
[107.36178589 -133.70355225]
[105.24716187 -118.85334778]
[105.24716187 -103.85334778]
[105.24716187 -88.85334778]
[105.24716187 -73.85334778]
[105.24716187 -58.85335159]
[105.35882568 -43.85376740]
[105.58215332 -28.85542870]
[105.80548096 -13.85709190]
[106.02880859 1.14124537]
[106.25213623 16.13958359]
[106.47546387 31.13792038]
[121.59700775 34.29241562]
[135.64134216 40.72426987]
[147.90795898 50.11267471]
[157.78501892 61.98935699]
[164.77989197 75.76193237]
[168.54367065 90.74345398]
[168.88862610 106.18667603]
[165.79756165 121.32131958]
[159.42465210 135.39248657]
[150.08775330 147.69836426]
[138.25259399 157.62513733]
[124.50946808 164.67768860]
[109.54386139 168.50425720]
[109.99046326 183.49760437]
[110.43707275 198.49095154]
[120.47583008 213.92807007]
[111.56121063 229.04417419]
[112.23099518 244.02922058]
[112.90077972 259.01425171]
[113.57056427 273.99929810]
[114.24035645 288.98434448]
[114.91014099 303.96936035]
[115.57992554 318.95440674]
[116.24971008 333.93945312]
[125.22414398 343.20349121]
[125.47351074 355.69833374]
[117.40943909 364.71484375]
[117.85604095 379.70819092]
[118.30265045 394.70153809]
[118.74925232 409.69488525]
[119.41903687 424.67993164]
[120.31185150 439.65335083]
[121.20467377 454.62673950]
[122.09748840 469.60015869]
[136.90429688 472.46536255]
[150.53302002 478.92358398]
[162.12693787 488.56887817]
[170.95727539 500.79492188]
[176.46891785 514.83319092]
[178.31541443 529.80114746]
[176.38070679 544.75805664]
[170.78637695 558.76354980]
[161.88412476 570.93731689]
[150.23352051 580.51409912]
[136.56697083 586.89184570]
[121.74352264 589.66967773]
[106.69502258 588.67303467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 197]
[11 196]
[12 195]
[13 194]
[16 193]
[17 192]
[18 191]
[19 190]
[21 187]
[22 186]
[23 185]
[24 184]
[25 183]
[26 182]
[27 181]
[28 180]
[31 178]
[32 177]
[33 176]
[47 163]
[48 162]
[49 161]
[50 160]
[51 159]
[52 158]
[54 157]
[55 156]
[56 155]
[57 154]
[58 153]
[78 152]
[79 151]
[80 150]
[81 149]
[82 125]
[83 124]
[84 123]
[85 122]
[86 121]
[89 119]
[90 118]
[91 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
