%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[174.30238342 463.51657104]
[177.36485291 448.81558228]
[182.08319092 434.55953979]
[188.39587402 420.93426514]
[196.22061157 408.11743164]
[205.45536804 396.27609253]
[215.97976685 385.56466675]
[227.65660095 376.12277222]
[219.61541748 363.46026611]
[211.57424927 350.79772949]
[203.53308105 338.13519287]
[195.49189758 325.47268677]
[187.45072937 312.81015015]
[175.71699524 309.86975098]
[168.91412354 299.38619995]
[171.14657593 286.68267822]
[163.29483032 273.90185547]
[155.44306946 261.12100220]
[153.65872192 276.01449585]
[144.18792725 287.64651489]
[129.96531677 292.41278076]
[115.39791107 288.83636475]
[104.99958038 278.02551270]
[101.99236298 263.33004761]
[107.30808258 249.30354309]
[119.29959869 240.29223633]
[134.25122070 239.08840942]
[147.53019714 246.06523132]
[141.45635986 232.34997559]
[137.40286255 229.82446289]
[134.89283752 224.72575378]
[135.41264343 218.13475037]
[129.74984741 204.24472046]
[124.08706665 190.35469055]
[112.11752319 181.49018860]
[114.07244873 165.79023743]
[105.93747711 178.39270020]
[91.02841949 180.04194641]
[80.33567810 169.52218628]
[81.74153900 154.58821106]
[94.20965576 146.24879456]
[108.54778290 150.65031433]
[103.93376923 136.37757874]
[99.31976318 122.10484314]
[94.70574951 107.83211517]
[90.69757843 104.44855499]
[88.87046814 99.06014252]
[90.17370605 93.06526947]
[85.98669434 78.66148376]
[81.79968262 64.25770569]
[77.61267090 49.85391998]
[73.42565918 35.45013809]
[70.18624115 32.55874634]
[68.23195648 29.13160706]
[67.57342529 25.63850784]
[68.06758881 22.50443649]
[69.44567871 20.06332779]
[66.12342072 5.43586779]
[62.80116272 -9.19159222]
[59.47890472 -23.81905174]
[55.84276581 -9.26644039]
[48.46327209 3.79277372]
[37.87315750 14.41583538]
[24.83692741 21.83585548]
[10.29568005 25.51717758]
[-4.70083952 25.19404411]
[-19.07001877 20.88978004]
[-31.77453423 12.91511631]
[-41.89723969 1.84574997]
[-48.70736313 -11.51921272]
[-51.71327591 -26.21494293]
[-50.69798279 -41.18054199]
[-45.73477936 -55.33563232]
[-37.18195724 -67.65834808]
[-25.65695572 -77.25909424]
[-11.99177551 -83.44479370]
[2.82708359 -85.76888275]
[17.72983551 -84.06359863]
[31.64063644 -78.45204163]
[43.55525589 -69.33930969]
[52.61356354 -57.38326263]
[58.16191864 -43.44588852]
[59.50015259 -58.38607407]
[60.83838654 -73.32626343]
[62.17662048 -88.26644897]
[63.06943512 -103.23985291]
[63.51604080 -118.23320007]
[63.85101700 -133.22946167]
[64.07434845 -148.22779846]
[64.29767609 -163.22613525]
[64.52100372 -178.22447205]
[61.97711945 -182.78251648]
[61.48518753 -187.39892578]
[62.72382736 -191.28233337]
[65.10414124 -193.88357544]
[65.99696350 -208.85697937]
[66.88977814 -223.83038330]
[67.78259277 -238.80378723]
[68.67540741 -253.77719116]
[54.75520325 -259.77749634]
[43.72884369 -270.17919922]
[36.92781830 -283.72622681]
[35.17338181 -298.78271484]
[38.67739105 -313.53051758]
[47.01672363 -326.18875122]
[59.18436050 -335.22891235]
[73.71099854 -339.55932617]
[88.84248352 -338.65710449]
[102.75160980 -332.63113403]
[113.75878143 -322.20913696]
[120.53482819 -308.64959717]
[122.26151276 -293.58990479]
[118.73033142 -278.84860229]
[110.36768341 -266.20571899]
[98.18341064 -257.18801880]
[83.64881134 -252.88438416]
[82.75599670 -237.91096497]
[81.86318207 -222.93756104]
[80.97036743 -207.96415710]
[80.07755280 -192.99075317]
[79.51934052 -178.00114441]
[79.29601288 -163.00280762]
[79.07268524 -148.00447083]
[78.84935760 -133.00613403]
[81.89292145 -126.27126312]
[78.50939178 -117.78659821]
[78.06278992 -102.79324341]
[79.88468933 -100.66279602]
[80.97247314 -97.68230438]
[80.99813843 -94.12776947]
[79.73957062 -90.38871765]
[77.11680603 -86.92821503]
[75.77857208 -71.98802948]
[74.44033813 -57.04784012]
[73.10210419 -42.10765457]
[74.10636139 -27.14131165]
[77.42861938 -12.51385212]
[80.75088501 2.11360860]
[84.07314301 16.74106789]
[87.82944489 31.26312828]
[92.01645660 45.66690826]
[96.20346832 60.07069016]
[100.39048004 74.47447205]
[104.57748413 88.87825775]
[108.97848511 103.21810150]
[113.59249115 117.49083710]
[118.20650482 131.76356506]
[122.82051086 146.03630066]
[127.96247101 160.12744141]
[140.33705139 169.98544312]
[137.97709656 184.69190979]
[143.63987732 198.58193970]
[149.30265808 212.47195435]
[155.17163086 226.27613831]
[161.24545288 239.99140930]
[168.22390747 253.26925659]
[176.07566833 266.05007935]
[183.92741394 278.83093262]
[200.31903076 287.22119141]
[200.11325073 304.76898193]
[208.15443420 317.43151855]
[216.19560242 330.09402466]
[224.23677063 342.75656128]
[232.27795410 355.41906738]
[240.31912231 368.08160400]
[253.83026123 361.52819824]
[268.00036621 356.55770874]
[282.64471436 353.23492432]
[297.57235718 351.60314941]
[312.58874512 351.68368530]
[327.49804688 353.47546387]
[342.10589600 356.95510864]
[356.22189331 362.07730103]
[369.66195679 368.77520752]
[382.25091553 376.96157837]
[393.82458496 386.52960205]
[404.23214722 397.35461426]
[413.33786011 409.29544067]
[421.02304077 422.19644165]
[427.18750000 435.88940430]
[431.75088501 450.19583130]
[434.65365601 464.92916870]
[435.85800171 479.89736938]
[435.34820557 494.90530396]
[433.13095093 509.75729370]
[429.23510742 524.25970459]
[423.71145630 538.22351074]
[416.63204956 551.46661377]
[408.08914185 563.81634521]
[398.19415283 575.11175537]
[387.07601929 585.20562744]
[374.87976074 593.96624756]
[361.76434326 601.27947998]
[347.90072632 607.04998779]
[333.46972656 611.20245361]
[318.65939331 613.68286133]
[303.66287231 614.45880127]
[288.67565918 613.52020264]
[273.89312744 610.87921143]
[259.50802612 606.57037354]
[245.70785522 600.64978027]
[232.67254639 593.19464111]
[220.57206726 584.30218506]
[209.56413269 574.08831787]
[199.79228210 562.68621826]
[191.38389587 550.24444580]
[184.44859314 536.92529297]
[179.07681274 522.90240479]
[175.33856201 508.35858154]
[173.28257751 493.48339844]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 165]
[9 164]
[10 163]
[11 162]
[12 161]
[13 160]
[16 158]
[17 157]
[18 156]
[28 155]
[29 154]
[32 153]
[33 152]
[34 151]
[36 149]
[42 148]
[43 147]
[44 146]
[45 145]
[48 144]
[49 143]
[50 142]
[51 141]
[52 140]
[57 139]
[58 138]
[59 137]
[60 136]
[82 135]
[83 134]
[84 133]
[85 132]
[86 127]
[87 126]
[88 124]
[89 123]
[90 122]
[91 121]
[95 120]
[96 119]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
