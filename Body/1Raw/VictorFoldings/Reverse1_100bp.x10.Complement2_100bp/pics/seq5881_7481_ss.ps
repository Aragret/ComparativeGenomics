%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxAGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUA\
) } def
/len { sequence length } bind def

/coor [
[145.37266541 795.61053467]
[130.67868042 798.67834473]
[115.76430511 800.37725830]
[100.75680542 800.69281006]
[85.78421021 799.62225342]
[70.97426605 797.17480469]
[56.45333099 793.37121582]
[42.34529114 788.24407959]
[28.77051353 781.83703613]
[15.84481812 774.20477295]
[3.67848420 765.41247559]
[-7.62468719 755.53503418]
[-17.96825981 744.65686035]
[-27.26398468 732.87066650]
[-35.43254852 720.27703857]
[-42.40426254 706.98345947]
[-48.11964798 693.10327148]
[-52.52993393 678.75500488]
[-55.59749603 664.06097412]
[-57.29616547 649.14654541]
[-57.61144638 634.13903809]
[-56.54064941 619.16650391]
[-54.09291458 604.35656738]
[-50.28911591 589.83569336]
[-45.16171646 575.72772217]
[-38.75445557 562.15307617]
[-31.12200546 549.22747803]
[-22.32947922 537.06134033]
[-12.45189381 525.75830078]
[-1.57352579 515.41491699]
[10.21281433 506.11938477]
[22.80656624 497.95101929]
[36.10028458 490.97955322]
[49.98054886 485.26440430]
[64.32893372 480.85433960]
[79.02301788 477.78701782]
[93.93743896 476.08859253]
[108.94495392 475.77355957]
[123.91751099 476.84460449]
[126.36323547 462.04534912]
[128.80895996 447.24606323]
[131.25469971 432.44680786]
[133.70042419 417.64752197]
[134.59323120 402.67413330]
[133.92344666 387.68908691]
[133.25366211 372.70404053]
[132.58387756 357.71902466]
[131.91409302 342.73397827]
[131.24430847 327.74893188]
[110.95869446 320.79199219]
[95.64515686 305.71762085]
[88.34077454 285.46353149]
[90.51660919 263.99984741]
[101.78161621 245.55070496]
[119.95230103 233.76306152]
[117.06703186 219.04318237]
[114.18175507 204.32328796]
[101.95183563 191.73774719]
[108.06425476 174.36766052]
[104.96014404 159.69235229]
[101.85603333 145.01704407]
[98.75192261 130.34175110]
[95.64781189 115.66644287]
[86.28707123 108.73696899]
[83.96182251 97.32493591]
[89.86505890 87.28536224]
[86.97978973 72.56546783]
[76.73040771 64.73520660]
[74.63029480 52.41557693]
[81.26763916 42.30260468]
[78.60183716 27.54138565]
[75.93604279 12.78016853]
[72.56291962 8.79656315]
[71.19219971 4.36097717]
[71.66073608 0.31183842]
[73.49624634 -2.69868135]
[71.49223328 -17.56420898]
[69.48822021 -32.42973709]
[58.45654297 -22.26597404]
[43.60952377 -24.40281105]
[35.89183426 -37.26505280]
[40.99266815 -51.37113190]
[55.15187836 -56.32257462]
[67.93092346 -48.47074509]
[67.03810883 -63.44414902]
[66.14529419 -78.41755676]
[65.25247192 -93.39096069]
[64.35965729 -108.36436462]
[55.24829102 -117.49375916]
[54.81291962 -129.98352051]
[62.74185944 -139.11907959]
[62.07207489 -154.10412598]
[47.30957031 -157.18945312]
[33.77851105 -163.84988403]
[22.32947350 -173.66671753]
[13.68215084 -186.02287292]
[8.38012218 -200.14163208]
[6.75667715 -215.13546753]
[8.91386700 -230.06187439]
[14.71608829 -243.98254395]
[23.79861069 -256.02243042]
[35.59049606 -265.42465210]
[49.35050201 -271.59823608]
[64.21365356 -274.15509033]
[79.24565125 -272.93447876]
[93.50156403 -268.01312256]
[106.08525848 -259.70037842]
[116.20570374 -248.51881409]
[123.22673035 -235.17131042]
[126.70698547 -220.49688721]
[126.42769623 -205.41799927]
[122.40642548 -190.88252258]
[114.89595032 -177.80415344]
[104.36837769 -167.00503540]
[91.48548889 -159.16398621]
[77.05711365 -154.77391052]
[77.72689819 -139.78886414]
[87.95455933 -125.52836609]
[79.33306885 -109.25717926]
[80.22588348 -94.28377533]
[81.11869812 -79.31037140]
[82.01151276 -64.33696747]
[82.90432739 -49.36355972]
[84.35374451 -34.43375015]
[86.35775757 -19.56822395]
[88.36177826 -4.70269489]
[90.69725800 10.11437321]
[93.36306000 24.87558937]
[96.02885437 39.63680649]
[108.07003784 52.40304184]
[101.69967651 69.68019867]
[104.58495331 84.40008545]
[115.93238068 96.75371552]
[110.32312012 112.56233978]
[113.42723083 127.23764038]
[116.53134155 141.91294861]
[119.63544464 156.58824158]
[122.73955536 171.26354980]
[133.10438538 178.94033813]
[135.38768005 191.22734070]
[128.90164185 201.43801880]
[131.78692627 216.15789795]
[134.67219543 230.87779236]
[143.74893188 231.40074158]
[152.56523132 233.59417725]
[160.81661987 237.37977600]
[168.21859741 242.62426758]
[174.51646423 249.14414978]
[179.49409485 256.71206665]
[182.98130798 265.06475830]
[184.85972595 273.91226196]
[185.06680298 282.94784546]
[183.59785461 291.85882568]
[180.50617981 300.33721924]
[175.90109253 308.09051514]
[169.94409180 314.85168457]
[162.84320068 320.38839722]
[154.84565735 324.51104736]
[146.22935486 327.07916260]
[146.89913940 342.06417847]
[147.56892395 357.04922485]
[148.23870850 372.03427124]
[148.90849304 387.01931763]
[149.57827759 402.00433350]
[156.61306763 388.75625610]
[168.13311768 379.14956665]
[182.42951965 374.60940552]
[197.38145447 375.80920410]
[210.77090454 382.57104492]
[220.61163330 393.89184570]
[225.44381714 408.09219360]
[224.55062866 423.06558228]
[218.06457520 436.59078979]
[206.94783020 446.66140747]
[192.84947205 451.78356934]
[177.86093140 451.19741821]
[164.20565796 444.98986816]
[153.90933228 434.08181763]
[148.49969482 420.09326172]
[146.05397034 434.89251709]
[143.60823059 449.69180298]
[141.16250610 464.49105835]
[138.71678162 479.29034424]
[153.23783875 483.09341431]
[167.34605408 488.22012329]
[180.92105103 494.62667847]
[193.84700012 502.25848389]
[206.01362610 511.05041504]
[217.31712341 520.92742920]
[227.66105652 531.80529785]
[236.95718384 543.59118652]
[245.12615967 556.18450928]
[252.09832764 569.47790527]
[257.81417847 583.35784912]
[262.22491455 597.70599365]
[265.29296875 612.39996338]
[266.99215698 627.31427002]
[267.30792236 642.32177734]
[266.23764038 657.29437256]
[263.79037476 672.10437012]
[259.98709106 686.62536621]
[254.86015320 700.73352051]
[248.45333862 714.30841064]
[240.82131958 727.23419189]
[232.02919006 739.40069580]
[222.15199280 750.70404053]
[211.27397156 761.04779053]
[199.48793030 770.34368896]
[186.89445496 778.51245117]
[173.60096741 785.48443604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 183]
[40 182]
[41 181]
[42 180]
[43 179]
[44 164]
[45 163]
[46 162]
[47 161]
[48 160]
[49 159]
[55 143]
[56 142]
[57 141]
[59 138]
[60 137]
[61 136]
[62 135]
[63 134]
[66 132]
[67 131]
[70 129]
[71 128]
[72 127]
[76 126]
[77 125]
[78 124]
[84 123]
[85 122]
[86 121]
[87 120]
[88 119]
[91 117]
[92 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
