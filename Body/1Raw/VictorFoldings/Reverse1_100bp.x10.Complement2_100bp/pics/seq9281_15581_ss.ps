%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[78.24294281 596.27545166]
[63.19156647 599.05297852]
[48.57689667 594.50659180]
[37.75727081 583.68090820]
[33.21896362 569.06372070]
[36.00484467 554.01391602]
[45.47474289 541.98980713]
[59.45253754 535.75439453]
[60.34535217 520.78100586]
[61.23816681 505.80758667]
[62.13098526 490.83419800]
[62.91230774 475.85455322]
[63.58209229 460.86950684]
[64.25187683 445.88449097]
[64.92166138 430.89944458]
[65.59144592 415.91439819]
[66.26123047 400.92935181]
[66.93101501 385.94433594]
[64.42641449 381.87786865]
[64.44973755 376.19488525]
[67.85041809 370.52505493]
[68.96606445 355.56658936]
[59.08217239 344.48309326]
[60.00051117 329.29721069]
[71.69293213 319.00521851]
[72.80857849 304.04675293]
[65.15515137 294.67916870]
[65.96219635 282.20791626]
[75.34134674 273.35385132]
[76.67958069 258.41366577]
[77.90655518 243.46392822]
[79.02220154 228.50546265]
[80.13784790 213.54701233]
[70.41667938 208.07440186]
[63.40781403 199.32946777]
[60.15370941 188.55163574]
[61.16113663 177.28692627]
[66.32269287 167.16613770]
[74.92680359 159.66880798]
[85.75559235 155.90695190]
[87.53805542 141.01322937]
[89.32051849 126.11951447]
[91.10298920 111.22579956]
[85.77754974 98.29786682]
[94.00329590 86.99173737]
[95.78575897 72.09801483]
[97.56822968 57.20429993]
[99.35069275 42.31058502]
[101.13316345 27.41686630]
[102.91562653 12.52314949]
[104.69808960 -2.37056804]
[94.82801819 8.92463970]
[80.87294769 14.42516899]
[65.95046234 12.90218830]
[53.39429092 4.69593525]
[46.00951385 -8.36029243]
[45.44591141 -23.34970093]
[51.82939148 -36.92361450]
[63.73386765 -46.04959106]
[78.49984741 -48.68886185]
[92.82858276 -44.25180817]
[103.51898193 -33.72967529]
[108.18280029 -19.47311783]
[112.36981201 -33.87689972]
[116.55682373 -48.28068161]
[120.74383545 -62.68446350]
[124.82350159 -77.11901855]
[128.79559326 -91.58354187]
[132.76770020 -106.04806519]
[131.46836853 -112.53060150]
[133.35472107 -117.89144897]
[137.07937622 -120.88074493]
[141.48037720 -135.22059631]
[145.88137817 -149.56044006]
[144.71090698 -154.64739990]
[145.52713013 -159.21763611]
[147.80053711 -162.60093689]
[150.81233215 -164.43435669]
[148.15830994 -180.03135681]
[159.72009277 -189.42149353]
[164.75701904 -203.55052185]
[169.79393005 -217.67955017]
[167.13990784 -233.27655029]
[178.70169067 -242.66668701]
[183.73861694 -256.79571533]
[188.77552795 -270.92474365]
[191.00064087 -285.75878906]
[190.33085632 -300.74383545]
[189.66107178 -315.72885132]
[188.99128723 -330.71389771]
[188.32150269 -345.69894409]
[187.65171814 -360.68399048]
[172.88922119 -363.76931763]
[159.35815430 -370.42974854]
[147.90911865 -380.24658203]
[139.26179504 -392.60272217]
[133.95976257 -406.72149658]
[132.33631897 -421.71533203]
[134.49351501 -436.64172363]
[140.29573059 -450.56240845]
[149.37825012 -462.60226440]
[161.17013550 -472.00451660]
[174.93014526 -478.17810059]
[189.79330444 -480.73495483]
[204.82530212 -479.51431274]
[219.08120728 -474.59295654]
[231.66490173 -466.28024292]
[241.78535461 -455.09866333]
[248.80638123 -441.75115967]
[252.28663635 -427.07675171]
[252.00733948 -411.99786377]
[247.98606873 -397.46237183]
[240.47558594 -384.38400269]
[229.94802856 -373.58489990]
[217.06513977 -365.74383545]
[202.63676453 -361.35375977]
[203.30654907 -346.36871338]
[203.97633362 -331.38369751]
[204.64611816 -316.39865112]
[205.31590271 -301.41360474]
[205.98568726 -286.42855835]
[212.00740051 -300.16680908]
[220.89828491 -312.24786377]
[232.22450256 -322.08233643]
[245.43345642 -329.19030762]
[259.88064575 -333.22503662]
[274.86114502 -333.98959351]
[289.64404297 -331.44671631]
[303.50802612 -325.72048950]
[315.77664185 -317.09024048]
[325.85131836 -305.97714233]
[333.24041748 -292.92337036]
[337.58346558 -278.56585693]
[338.66854858 -263.60516357]
[336.44271851 -248.77122498]
[331.01455688 -234.78784180]
[322.64895630 -222.33728027]
[311.75405884 -212.02703857]
[298.86145020 -204.36018372]
[284.60018921 -199.71076965]
[269.66613770 -198.30567932]
[254.78796387 -200.21347046]
[240.69158936 -205.34104919]
[228.06480408 -213.43821716]
[217.52369690 -224.10992432]
[209.58261108 -236.83544922]
[204.62898254 -250.99389648]
[202.90455627 -265.88781738]
[197.86764526 -251.75878906]
[192.83073425 -237.62976074]
[195.84501648 -223.04335022]
[183.92295837 -212.64262390]
[178.88604736 -198.51359558]
[173.84912109 -184.38456726]
[176.86341858 -169.79815674]
[164.94136047 -159.39743042]
[160.22122192 -145.15943909]
[155.82022095 -130.81959534]
[151.41923523 -116.47975159]
[147.23222351 -102.07596588]
[143.26011658 -87.61144257]
[139.28802490 -73.14691925]
[140.54806519 -65.86447144]
[135.14761353 -58.49745178]
[130.96060181 -44.09366989]
[126.77359772 -29.68988800]
[122.58658600 -15.28610611]
[119.59181213 -0.58810222]
[117.80934143 14.30561543]
[116.02687836 29.19933319]
[114.24440765 44.09304810]
[112.46194458 58.98676682]
[110.67948151 73.88048553]
[108.89701080 88.77420044]
[114.22245026 101.70213318]
[105.99670410 113.00826263]
[104.21424103 127.90198517]
[102.43177032 142.79570007]
[100.64930725 157.68942261]
[115.22724152 170.09181213]
[119.35211945 188.62812805]
[111.53382874 205.76881409]
[95.09630585 214.66265869]
[93.98065186 229.62112427]
[92.86500549 244.57957458]
[95.34747314 253.37020874]
[91.61976624 259.75189209]
[90.28152466 274.69207764]
[98.41474915 291.21273804]
[87.76703644 305.16241455]
[86.65138245 320.12084961]
[96.68772125 332.03344727]
[95.34320068 347.18756104]
[83.92452240 356.68225098]
[82.80886841 371.64068604]
[81.91605377 386.61410522]
[81.24626923 401.59915161]
[80.57648468 416.58419800]
[79.90670013 431.56921387]
[79.23691559 446.55426025]
[78.56713104 461.53930664]
[77.89734650 476.52435303]
[80.64044189 485.23715210]
[77.10439301 491.72702026]
[76.21157074 506.70040894]
[75.31875610 521.67382812]
[74.42594147 536.64721680]
[87.56374359 544.49938965]
[95.53769684 557.56365967]
[96.51545715 572.83789062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 207]
[9 206]
[10 205]
[11 204]
[12 202]
[13 201]
[14 200]
[15 199]
[16 198]
[17 197]
[18 196]
[21 195]
[22 194]
[25 191]
[26 190]
[29 188]
[30 187]
[31 185]
[32 184]
[33 183]
[40 179]
[41 178]
[42 177]
[43 176]
[45 174]
[46 173]
[47 172]
[48 171]
[49 170]
[50 169]
[51 168]
[63 167]
[64 166]
[65 165]
[66 164]
[67 162]
[68 161]
[69 160]
[72 159]
[73 158]
[74 157]
[78 156]
[80 154]
[81 153]
[82 152]
[84 150]
[85 149]
[86 148]
[87 121]
[88 120]
[89 119]
[90 118]
[91 117]
[92 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
