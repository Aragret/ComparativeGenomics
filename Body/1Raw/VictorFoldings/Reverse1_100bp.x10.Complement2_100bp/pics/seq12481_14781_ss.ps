%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUUCGAAUCCCUCUCGACCCAACAAACCCAACACCGAGUCACAGUCAAGCUCUAUUAUUGAAGAACCAGAUCCGUGUACUUAUAACAACACCCCUxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[233.37539673 526.89398193]
[239.16212463 513.02697754]
[246.86352539 500.12469482]
[256.32278442 488.44979858]
[267.34735107 478.23999023]
[279.71273804 469.70312500]
[273.03253174 456.27276611]
[266.35232544 442.84237671]
[259.67214966 429.41198730]
[252.99194336 415.98162842]
[246.31175232 402.55123901]
[239.63156128 389.12088013]
[225.67822266 390.61880493]
[212.02262878 387.25680542]
[200.30996704 379.41888428]
[191.95849609 368.02963257]
[187.98786926 354.44503784]
[188.89460754 340.29119873]
[194.59011841 327.26959229]
[204.40896606 316.95254517]
[197.92947388 303.42419434]
[192.20503235 298.74951172]
[191.45588684 289.64587402]
[185.17852783 276.02255249]
[178.49833679 262.59216309]
[171.42123413 249.36663818]
[164.34413147 236.14111328]
[157.26702881 222.91558838]
[142.98171997 218.85777283]
[135.61613464 205.54603577]
[139.96919250 190.58981323]
[132.89208984 177.36427307]
[125.81497955 164.13874817]
[118.73787689 150.91322327]
[105.91106415 143.34207153]
[106.22203827 127.52392578]
[99.14493561 114.29840088]
[87.37055206 106.75814056]
[87.62953949 92.77870178]
[80.55243683 79.55317688]
[77.88478088 94.31405640]
[67.73842621 105.36175537]
[53.25733185 109.27301025]
[38.92862320 104.83588409]
[29.19220352 93.42527008]
[27.06501007 78.57686615]
[33.20617676 64.89161682]
[45.71279526 56.61004257]
[60.70955658 56.29827881]
[73.54972076 64.05312347]
[68.30300140 50.00064850]
[56.22741699 39.77857590]
[59.02420044 25.14890480]
[53.77748489 11.09643459]
[48.53076553 -2.95603704]
[43.28404617 -17.00850868]
[41.78017807 -2.08408594]
[37.03651810 12.14608192]
[29.28451538 24.98767281]
[18.90241241 35.81412125]
[6.39677382 44.09717560]
[-7.62222385 49.43268585]
[-22.47056198 51.56032944]
[-37.42375565 50.37628555]
[-51.75220871 45.93833160]
[-64.75680542 38.46300125]
[-75.80301666 28.31503487]
[-84.35187531 15.98957253]
[-89.98625946 2.08800268]
[-92.43126678 -12.71138763]
[-91.56759644 -27.68650246]
[-87.43737793 -42.10667419]
[-80.24214935 -55.26830673]
[-70.33296967 -66.52922058]
[-58.19333267 -75.33996582]
[-44.41556168 -81.27065277]
[-29.67190170 -84.03189850]
[-14.68172932 -83.48899078]
[-0.17644878 -79.66841125]
[13.13619518 -72.75656891]
[24.60664940 -63.09072113]
[33.67524719 -51.14247513]
[39.89744186 -37.50110245]
[40.34404755 -52.49445343]
[40.79065323 -67.48780060]
[41.23725891 -82.48115540]
[38.76152039 -87.07656097]
[38.33837509 -91.69979095]
[39.63469696 -95.56432343]
[42.05347824 -98.12983704]
[43.16912842 -113.08828735]
[35.35913467 -123.35311890]
[36.59630966 -135.78907776]
[45.67469025 -143.78343201]
[47.01292419 -158.72361755]
[48.35115814 -173.66380310]
[49.68939209 -188.60398865]
[35.51788330 -193.78382874]
[23.17045975 -202.45582581]
[13.48898697 -214.02870178]
[7.13356304 -227.71340942]
[4.53751278 -242.57687378]
[5.87783861 -257.60571289]
[11.06315517 -271.77523804]
[19.73991776 -284.11929321]
[31.31653214 -293.79629517]
[45.00368500 -300.14645386]
[59.86816406 -302.73675537]
[74.89648438 -301.39062500]
[89.06398773 -296.19982910]
[101.40470886 -287.51831055]
[111.07723999 -275.93795776]
[117.42209625 -262.24835205]
[120.00666809 -247.38287354]
[118.65473938 -232.35508728]
[113.45848083 -218.18959045]
[104.77218628 -205.85221863]
[93.18810272 -196.18415833]
[79.49604797 -189.84458923]
[64.62957764 -187.26574707]
[63.29134369 -172.32556152]
[61.95310974 -157.38537598]
[60.61487579 -142.44519043]
[68.84562683 -126.94611359]
[58.12757874 -111.97264099]
[57.01193237 -97.01418304]
[56.23060989 -82.03454590]
[55.78400421 -67.04119873]
[55.33739853 -52.04784775]
[54.89079285 -37.05449677]
[57.33651733 -22.25522614]
[62.58323669 -8.20275497]
[67.82995605 5.84971619]
[73.07667542 19.90218735]
[84.77697754 29.11913300]
[82.35547638 44.75392914]
[87.60219574 58.80640030]
[93.77796173 72.47607422]
[100.85506439 85.70159912]
[112.62944794 93.24185944]
[112.37046051 107.22129822]
[119.44756317 120.44682312]
[132.78057861 128.96394348]
[131.96339417 143.83612061]
[139.04051208 157.06164551]
[146.11761475 170.28717041]
[153.19471741 183.51269531]
[168.05314636 188.18867493]
[175.04194641 201.70205688]
[170.49255371 215.83848572]
[177.56965637 229.06401062]
[184.64675903 242.28953552]
[191.72386169 255.51506042]
[195.49150085 257.67349243]
[198.11270142 260.62203979]
[199.47984314 263.90322876]
[199.64494324 267.07174683]
[198.80184937 269.74517822]
[205.07920837 283.36849976]
[211.45780945 296.94470215]
[217.93731689 310.47305298]
[233.98617554 309.50241089]
[249.14237976 314.75219727]
[261.09478760 325.39059448]
[268.03286743 339.76651001]
[268.92086792 355.66577148]
[263.65234375 370.65216064]
[253.06193542 382.44067383]
[259.74212646 395.87106323]
[266.42233276 409.30142212]
[273.10250854 422.73181152]
[279.78271484 436.16217041]
[286.46292114 449.59255981]
[293.14309692 463.02294922]
[307.41162109 458.31225586]
[322.20529175 455.68020630]
[337.22299194 455.18038940]
[352.15893555 456.82299805]
[366.70907593 460.57458496]
[380.57717896 466.35873413]
[393.48089600 474.05773926]
[405.15753174 483.51483154]
[415.36938477 494.53747559]
[423.90853882 506.90130615]
[430.60113525 520.35455322]
[435.31097412 534.62335205]
[437.94207764 549.41717529]
[438.44094849 564.43487549]
[436.79742432 579.37072754]
[433.04495239 593.92065430]
[427.25991821 607.78839111]
[419.56011963 620.69165039]
[410.10232544 632.36767578]
[399.07904053 642.57885742]
[386.71469116 651.11724854]
[373.26104736 657.80902100]
[358.99194336 662.51794434]
[344.19793701 665.14819336]
[329.18020630 665.64611816]
[314.24444580 664.00164795]
[299.69476318 660.24829102]
[285.82739258 654.46240234]
[272.92462158 646.76177979]
[261.24914551 637.30328369]
[251.03865051 626.27935791]
[242.50103760 613.91448975]
[235.81008911 600.46038818]
[231.10205078 586.19104004]
[228.47274780 571.39685059]
[227.97573853 556.37908936]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 174]
[7 173]
[8 172]
[9 171]
[10 170]
[11 169]
[12 168]
[20 161]
[21 160]
[23 159]
[24 158]
[25 153]
[26 152]
[27 151]
[28 150]
[31 147]
[32 146]
[33 145]
[34 144]
[36 142]
[37 141]
[39 139]
[40 138]
[50 137]
[51 136]
[53 134]
[54 133]
[55 132]
[56 131]
[83 130]
[84 129]
[85 128]
[86 127]
[90 126]
[91 125]
[94 123]
[95 122]
[96 121]
[97 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
