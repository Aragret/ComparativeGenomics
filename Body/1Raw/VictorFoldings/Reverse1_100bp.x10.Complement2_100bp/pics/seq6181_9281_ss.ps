%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[80.30966949 570.62500000]
[70.85232544 558.96215820]
[62.73540878 546.32971191]
[56.05745697 532.88098145]
[50.89953232 518.77923584]
[47.32424927 504.19570923]
[45.37501144 489.30731201]
[45.07547379 474.29489136]
[46.42927933 459.34060669]
[49.41999054 444.62600708]
[54.01129913 430.32977295]
[60.14748001 416.62536621]
[67.75403595 403.67919922]
[76.73863983 391.64837646]
[86.99221802 380.67901611]
[98.39030457 370.90420532]
[110.79454041 362.44262695]
[124.05435181 355.39703369]
[138.00875854 349.85287476]
[134.03666687 335.38836670]
[130.06457520 320.92382812]
[126.09247589 306.45932007]
[122.12037659 291.99478149]
[114.77752686 305.07464600]
[100.78993988 310.49194336]
[86.55254364 305.77001953]
[78.57450104 293.06762695]
[80.50325775 278.19213867]
[91.45700836 267.94442749]
[106.42784882 267.00964355]
[118.57235718 275.81661987]
[116.12663269 261.01736450]
[113.68090820 246.21809387]
[110.38899994 242.75796509]
[109.23577881 237.19316101]
[111.38953400 230.94233704]
[109.38551331 216.07679749]
[107.38150024 201.21127319]
[95.92237091 187.92010498]
[103.05783844 170.94464111]
[100.83272552 156.11059570]
[98.60760498 141.27655029]
[96.38248444 126.44250488]
[94.15737152 111.60845947]
[91.49157715 96.84724426]
[88.38746643 82.17194366]
[85.28335571 67.49663544]
[82.17924500 52.82133484]
[79.07513428 38.14603424]
[74.23757935 30.39775467]
[76.03577423 23.22919273]
[73.15049744 8.50930119]
[70.26522827 -6.21059036]
[65.54356384 -14.03003502]
[67.44828796 -21.17103004]
[64.78249359 -35.93224716]
[54.71580124 -48.13766479]
[60.06804657 -62.03740692]
[55.45403671 -76.31014252]
[48.97454071 -89.83848572]
[42.49504471 -103.36682892]
[36.01554871 -116.89517212]
[29.53605270 -130.42352295]
[23.05655670 -143.95187378]
[8.85149670 -139.08023071]
[-5.82308340 -135.89068604]
[-20.76872635 -134.42634583]
[-35.78330994 -134.70704651]
[-50.66378021 -136.72895813]
[-65.20889282 -140.46475220]
[-79.22194672 -145.86390686]
[-92.51342773 -152.85340881]
[-104.90357971 -161.33872986]
[-116.22484589 -171.20510864]
[-126.32411957 -182.31910706]
[-135.06481934 -194.53045654]
[-142.32873535 -207.67396545]
[-148.01762390 -221.57191467]
[-152.05456543 -236.03634644]
[-154.38496399 -250.87162781]
[-154.97727966 -265.87716675]
[-153.82353210 -280.84997559]
[-150.93930054 -295.58761597]
[-146.36360168 -309.89074707]
[-140.15832520 -323.56594849]
[-132.40737915 -336.42825317]
[-123.21557617 -348.30374146]
[-112.70725250 -359.03182983]
[-101.02449799 -368.46737671]
[-88.32531738 -376.48281860]
[-74.78144836 -382.96975708]
[-60.57606888 -387.84045410]
[-45.90127563 -391.02902222]
[-30.95553398 -392.49234009]
[-15.94096851 -392.21066284]
[-1.06063354 -390.18774414]
[13.48423100 -386.45098877]
[27.49692345 -381.05087280]
[40.78793716 -374.06048584]
[53.17752457 -365.57437134]
[64.49813080 -355.70721436]
[74.59666443 -344.59252930]
[83.33654785 -332.38061523]
[90.59958649 -319.23663330]
[96.28755188 -305.33828735]
[100.32352448 -290.87359619]
[102.65292358 -276.03814697]
[103.24424744 -261.03259277]
[102.08949280 -246.05984497]
[99.20428467 -231.32240295]
[94.62763214 -217.01957703]
[88.42144012 -203.34480286]
[80.66963196 -190.48300171]
[71.47704315 -178.60810852]
[60.96799850 -167.88073730]
[49.28461456 -158.44595337]
[36.58489990 -150.43136597]
[43.06439590 -136.90301514]
[49.54389191 -123.37467194]
[56.02338791 -109.84632874]
[62.50288391 -96.31797791]
[68.98238373 -82.78963470]
[69.57014465 -97.77811432]
[74.70181274 -111.87300873]
[83.88826752 -123.73087311]
[96.25391388 -132.22149658]
[110.62014008 -136.53561401]
[125.61764526 -136.26202393]
[139.81697083 -131.42680359]
[151.86470032 -122.49082184]
[160.61256409 -110.30578613]
[165.22674561 -96.03311157]
[165.26744080 -81.03316498]
[160.73078918 -66.73564911]
[152.04919434 -54.50332260]
[140.05012512 -45.50208282]
[125.87725830 -40.58987427]
[110.88146210 -40.23489380]
[96.49203491 -44.47097778]
[84.08049011 -52.89437103]
[74.82926178 -64.70320129]
[84.70527649 -53.55360413]
[79.54370880 -38.59804153]
[82.20950317 -23.83682632]
[84.98511505 -9.09586334]
[87.87039185 5.62402821]
[90.75566101 20.34391975]
[93.75043488 35.04192352]
[96.85454559 49.71722794]
[99.95865631 64.39253235]
[103.06276703 79.06783295]
[106.16687775 93.74313354]
[108.57128143 95.61618805]
[110.34730530 98.40550232]
[111.15425110 101.88002014]
[110.74158478 105.68606567]
[108.99141693 109.38334656]
[111.21652985 124.21738434]
[113.44165039 139.05143738]
[115.66676331 153.88546753]
[117.89188385 168.71951294]
[127.78140259 176.99963379]
[129.32931519 189.40074158]
[122.24703217 199.20726013]
[124.25104523 214.07278442]
[126.25505829 228.93832397]
[128.48017883 243.77235413]
[130.92590332 258.57162476]
[133.37162781 273.37091064]
[136.58489990 288.02270508]
[140.55700684 302.48721313]
[144.52909851 316.95175171]
[148.50119019 331.41625977]
[152.47328186 345.88079834]
[167.30209351 343.52078247]
[182.30052185 342.80642700]
[197.28651428 343.74636841]
[212.07812500 346.32922363]
[226.49583435 350.52365112]
[240.36459351 356.27868652]
[253.51606750 363.52450562]
[265.79061890 372.17315674]
[277.03921509 382.11962891]
[287.12530518 393.24316406]
[295.92648315 405.40878296]
[303.33590698 418.46878052]
[309.26364136 432.26464844]
[313.63769531 446.62884521]
[316.40499878 461.38708496]
[317.53195190 476.36016846]
[317.00485229 491.36633301]
[314.83013916 506.22344971]
[311.03417969 520.75115967]
[305.66308594 534.77307129]
[298.78201294 548.11901855]
[290.47451782 560.62695312]
[280.84146118 572.14508057]
[269.99975586 582.53356934]
[258.08102417 591.66632080]
[245.22991943 599.43243408]
[231.60246277 605.73767090]
[217.36408997 610.50543213]
[202.68763733 613.67791748]
[187.75125122 615.21661377]
[172.73625183 615.10278320]
[157.82490540 613.33789062]
[143.19822693 609.94323730]
[129.03376770 604.96014404]
[115.50346375 598.44903564]
[102.77157593 590.48901367]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 174]
[20 173]
[21 172]
[22 171]
[23 170]
[31 169]
[32 168]
[33 167]
[36 166]
[37 165]
[38 164]
[40 161]
[41 160]
[42 159]
[43 158]
[44 157]
[45 152]
[46 151]
[47 150]
[48 149]
[49 148]
[51 147]
[52 146]
[53 145]
[55 144]
[56 143]
[58 141]
[59 122]
[60 121]
[61 120]
[62 119]
[63 118]
[64 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
