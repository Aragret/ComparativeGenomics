%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[63.92140579 434.14938354]
[49.33190155 438.26306152]
[34.21552658 437.13562012]
[20.39766312 430.90325928]
[9.54687977 420.31854248]
[2.97346330 406.65963745]
[1.47118533 391.57589722]
[5.22145319 376.88876343]
[13.77140427 364.37182617]
[26.08859062 355.53649902]
[40.68564987 351.44973755]
[41.80130005 336.49130249]
[42.91694641 321.53283691]
[44.03259659 306.57440186]
[45.14824677 291.61593628]
[46.26389313 276.65747070]
[44.53893280 274.44781494]
[43.58531952 271.42172241]
[43.71839905 267.86956787]
[45.14267731 264.19046021]
[47.91734314 260.85052490]
[49.92135620 245.98498535]
[51.92536926 231.11946106]
[53.92938232 216.25392151]
[44.65213013 228.04089355]
[31.60816574 235.44731140]
[16.73247910 237.37446594]
[2.23179126 233.53648376]
[-9.74280643 224.50271606]
[-17.41495323 211.61326599]
[-19.64653206 196.78018188]
[-16.10650253 182.20390320]
[-7.32000542 170.04669189]
[5.40953398 162.11204529]
[20.19376373 159.57698059]
[34.83953094 162.81758118]
[47.17422485 171.35310364]
[55.36806870 183.91737366]
[58.20555496 198.64465332]
[63.24246979 184.51562500]
[68.17406464 170.34948730]
[73.00006104 156.14703369]
[77.82605743 141.94458008]
[82.65205383 127.74211884]
[71.00974274 115.17041016]
[67.31762695 98.43842316]
[72.58821106 82.13467407]
[85.37611389 70.73025513]
[102.17441559 67.35266876]
[106.57541656 53.01282501]
[110.97641754 38.67297745]
[115.37741089 24.33312988]
[110.03488159 12.59344482]
[113.99570465 0.74035656]
[124.61923218 -5.04472828]
[129.23324585 -19.31746101]
[128.89527893 -28.44563866]
[134.02365112 -33.76744080]
[131.13771057 -49.32320786]
[142.55841064 -58.88442993]
[147.38441467 -73.08688354]
[152.21040344 -87.28933716]
[157.03640747 -101.49179840]
[161.86239624 -115.69425201]
[166.68840027 -129.89671326]
[171.51438904 -144.09916687]
[160.52409363 -152.14323425]
[152.25437927 -162.94360352]
[147.36721802 -175.62014771]
[146.24942017 -189.14321899]
[148.98207092 -202.41723633]
[155.33462524 -214.36947632]
[164.78446960 -224.03680420]
[176.55979919 -230.64315796]
[189.70268250 -233.66198730]
[203.14698792 -232.85813904]
[208.39370728 -246.91061401]
[213.64042664 -260.96307373]
[218.88714600 -275.01556396]
[224.13386536 -289.06802368]
[210.55468750 -295.46063232]
[197.54978943 -302.95278931]
[185.20802307 -311.49328613]
[173.61366272 -321.02377319]
[162.84594727 -331.47921753]
[152.97842407 -342.78811646]
[144.07847595 -354.87326050]
[136.20693970 -367.65206909]
[129.41754150 -381.03729248]
[123.75669098 -394.93743896]
[119.26305389 -409.25759888]
[115.96732330 -423.89990234]
[113.89200592 -438.76437378]
[113.05128479 -453.74948120]
[113.45090485 -468.75280762]
[115.08813477 -483.67187500]
[117.95178986 -498.40481567]
[122.02230835 -512.85095215]
[127.27188873 -526.91156006]
[133.66465759 -540.49066162]
[141.15695190 -553.49548340]
[149.69760132 -565.83715820]
[159.22825623 -577.43139648]
[169.68380737 -588.19897461]
[180.99282837 -598.06634521]
[193.07807922 -606.96612549]
[205.85697937 -614.83752441]
[219.24227905 -621.62677002]
[233.14250183 -627.28747559]
[247.46270752 -631.78094482]
[262.10507202 -635.07647705]
[276.96957397 -637.15161133]
[291.95465088 -637.99218750]
[306.95797729 -637.59234619]
[321.87704468 -635.95495605]
[336.60992432 -633.09112549]
[351.05599976 -629.02044678]
[365.11657715 -623.77069092]
[378.69561768 -617.37774658]
[391.70031738 -609.88531494]
[404.04190063 -601.34454346]
[415.63601685 -591.81372070]
[426.40347290 -581.35803223]
[436.27075195 -570.04888916]
[445.17037964 -557.96356201]
[453.04162598 -545.18457031]
[459.83071899 -531.79919434]
[465.49121094 -517.89892578]
[469.98452759 -503.57864380]
[473.27990723 -488.93624878]
[475.35485840 -474.07171631]
[476.19522095 -459.08660889]
[475.79525757 -444.08328247]
[474.15765381 -429.16424561]
[471.29367065 -414.43139648]
[467.22280884 -399.98538208]
[461.97290039 -385.92486572]
[455.57980347 -372.34591675]
[448.08718872 -359.34127808]
[439.54623413 -346.99981689]
[430.01531982 -335.40579224]
[419.55950928 -324.63845825]
[408.25024414 -314.77133179]
[396.16479492 -305.87182617]
[383.38568115 -298.00073242]
[370.00024414 -291.21182251]
[356.09988403 -285.55148315]
[341.77957153 -281.05834961]
[327.13714600 -277.76312256]
[312.27258301 -275.68835449]
[297.28747559 -274.84817505]
[282.28414917 -275.24832153]
[267.36514282 -276.88607788]
[252.63230896 -279.75027466]
[238.18634033 -283.82128906]
[232.93962097 -269.76882935]
[227.69290161 -255.71635437]
[222.44618225 -241.66389465]
[217.19946289 -227.61141968]
[229.92631531 -217.17488098]
[238.32409668 -202.98976135]
[241.36268616 -186.76156616]
[238.65756226 -170.44844055]
[230.51832581 -156.02490234]
[217.91339111 -145.24287415]
[202.35481262 -139.41883850]
[185.71685791 -139.27316284]
[180.89085388 -125.07070923]
[176.06484985 -110.86825562]
[171.23886108 -96.66580200]
[166.41285706 -82.46334076]
[161.58686829 -68.26088715]
[156.76086426 -54.05843353]
[159.99198914 -39.51851654]
[148.22610474 -28.94144249]
[143.50596619 -14.70345211]
[138.89196777 -0.43071917]
[143.48550415 16.50641060]
[129.71725464 28.73412704]
[125.31626129 43.07397461]
[120.91526031 57.41382217]
[116.51426697 71.75366974]
[125.95294952 80.07462311]
[131.55346680 91.34233093]
[132.48754883 103.89041138]
[128.61706543 115.86314392]
[120.51442719 125.48989105]
[109.37792206 131.34693909]
[96.85451508 132.56811523]
[92.02851868 146.77056885]
[87.20251465 160.97302246]
[82.37651825 175.17547607]
[82.57853699 184.30767822]
[77.37149811 189.55253601]
[72.33458710 203.68156433]
[68.79491425 218.25793457]
[66.79090118 233.12347412]
[64.78688049 247.98899841]
[62.78287125 262.85452271]
[61.22234726 277.77313232]
[60.10669708 292.73159790]
[58.99105072 307.69003296]
[57.87540054 322.64849854]
[56.75975418 337.60693359]
[55.64410400 352.56539917]
[69.47343445 358.77227783]
[80.34370422 369.33700562]
[86.94227600 382.98376465]
[88.47235107 398.06469727]
[84.74915314 412.75869751]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 205]
[12 204]
[13 203]
[14 202]
[15 201]
[16 200]
[21 199]
[22 198]
[23 197]
[24 196]
[39 195]
[40 194]
[41 192]
[42 191]
[43 190]
[44 189]
[49 182]
[50 181]
[51 180]
[52 179]
[55 177]
[56 176]
[58 175]
[60 173]
[61 172]
[62 171]
[63 170]
[64 169]
[65 168]
[66 167]
[76 159]
[77 158]
[78 157]
[79 156]
[80 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
