%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[-1.95955241 582.26129150]
[-13.40434742 572.09881592]
[-18.80463791 557.77764893]
[-16.91947746 542.58868408]
[-8.18206024 530.02221680]
[5.39981699 522.96594238]
[5.39981699 507.96594238]
[-2.33748341 495.23867798]
[5.39981699 481.43850708]
[5.39981699 466.43850708]
[-2.33748341 453.71124268]
[5.39981699 439.91107178]
[5.39981699 424.91107178]
[-1.71999025 438.11364746]
[-12.69611549 448.33737183]
[-26.37022400 454.50332642]
[-41.29925156 455.96075439]
[-55.90770340 452.55587769]
[-68.65391541 444.64804077]
[-78.19274902 433.07174683]
[-83.51754761 419.04867554]
[-84.06637573 404.05871582]
[-79.78131104 389.68380737]
[-71.11456299 377.44094849]
[-58.98076630 368.62216187]
[-44.66041565 364.15814209]
[-29.66478157 364.51992798]
[-15.57638359 369.66940308]
[-3.88200545 379.06311035]
[4.18421650 391.70968628]
[7.77104998 406.27471924]
[11.52735043 391.75265503]
[15.28365135 377.23062134]
[19.03995132 362.70855713]
[22.79625320 348.18649292]
[26.55255318 333.66442871]
[13.25512600 325.38766479]
[3.15371609 313.39196777]
[-2.75366592 298.84381104]
[-3.87762046 283.16284180]
[-0.09614393 267.88320923]
[8.23225498 254.50346375]
[20.30250931 244.33972168]
[34.94079971 238.39610291]
[50.71871185 237.26554871]
[54.25838470 222.68916321]
[57.79805756 208.11279297]
[43.82536697 213.56842041]
[30.77222443 206.17819214]
[28.26091766 191.38990784]
[38.14269257 180.10494995]
[53.13306808 180.64215088]
[62.18136597 192.60389709]
[66.79537964 178.33116150]
[71.40938568 164.05844116]
[76.02339172 149.78570557]
[80.63740540 135.51296997]
[68.50362396 125.37832642]
[61.18146133 111.36670685]
[59.78949738 95.61862946]
[64.54038239 80.53987885]
[74.70832825 68.43399811]
[88.74002075 61.15036774]
[104.49186707 59.80168915]
[108.89286804 45.46184158]
[95.16821289 51.51444626]
[81.13430786 46.21828079]
[74.83039856 32.60723114]
[79.86765289 18.47832298]
[93.36050415 11.92523670]
[107.57963562 16.70187950]
[114.37960052 30.07102394]
[120.04238892 16.18099785]
[125.70517731 2.29097080]
[119.08702087 -9.43995380]
[120.41419220 -22.64787102]
[128.97924805 -32.53330612]
[141.48587036 -35.63394547]
[147.35482788 -49.43812180]
[144.69772339 -67.65957642]
[159.12010193 -77.65765381]
[164.78289795 -91.54767609]
[170.44567871 -105.43770599]
[168.49075317 -121.13767242]
[180.46029663 -130.00216675]
[186.12307739 -143.89219666]
[191.78587341 -157.78222656]
[197.44865417 -171.67224121]
[193.17480469 -183.84175110]
[198.17730713 -195.29420471]
[209.27458191 -200.10844421]
[215.14353943 -213.91261292]
[221.01251221 -227.71679688]
[213.19912720 -240.99299622]
[214.68403625 -256.14715576]
[224.68919373 -267.38818359]
[239.22106934 -270.54452515]
[245.09002686 -284.34869385]
[250.95898438 -298.15286255]
[256.82794189 -311.95706177]
[244.11457825 -319.97991943]
[232.85289001 -329.93835449]
[223.33459473 -341.57443237]
[215.80622864 -354.58673096]
[210.46279907 -368.63818359]
[207.44271851 -383.36486816]
[206.82420349 -398.38531494]
[208.62329102 -413.31045532]
[212.79336548 -427.75366211]
[219.22642517 -441.34088135]
[227.75582886 -453.72009277]
[238.16064453 -464.57070923]
[250.17137146 -473.61166382]
[263.47689819 -480.60876465]
[277.73257446 -485.38076782]
[292.56912231 -487.80404663]
[307.60229492 -487.81588745]
[322.44265747 -485.41592407]
[336.70581055 -480.66635132]
[350.02233887 -473.69018555]
[362.04727173 -464.66815186]
[372.46911621 -453.83389282]
[381.01800537 -441.46810913]
[387.47241211 -427.89102173]
[391.66519165 -413.45437622]
[393.48776245 -398.53210449]
[392.89288330 -383.51071167]
[389.89596558 -368.77929688]
[384.57464600 -354.71945190]
[377.06674194 -341.69531250]
[367.56674194 -330.04428101]
[356.32073975 -320.06814575]
[343.61999512 -312.02529907]
[329.79351807 -306.12408447]
[315.19943237 -302.51733398]
[300.21575928 -301.29846191]
[285.23059082 -302.49908447]
[270.63214111 -306.08810425]
[264.76318359 -292.28390503]
[258.89419556 -278.47973633]
[253.02525330 -264.67556763]
[260.83480835 -252.02056885]
[259.68148804 -237.01611328]
[249.79856873 -225.43243408]
[234.81668091 -221.84783936]
[228.94772339 -208.04365540]
[223.07876587 -194.23948669]
[226.14292908 -176.96008301]
[211.33868408 -166.00946045]
[205.67590332 -152.11943054]
[200.01310730 -138.22940063]
[194.35032654 -124.33937836]
[196.71029663 -109.63292694]
[184.33570862 -99.77491760]
[178.67292786 -85.88489532]
[173.01013184 -71.99486542]
[177.41101074 -60.72726440]
[172.80693054 -49.10890961]
[161.15901184 -43.56916428]
[155.29005432 -29.76498604]
[162.24177551 -14.45118904]
[155.84091187 1.46558845]
[139.59519958 7.95375729]
[133.93241882 21.84378433]
[128.26962280 35.73381042]
[123.23271179 49.86284256]
[118.83171082 64.20269012]
[129.90864563 72.76852417]
[137.40126038 84.59783936]
[140.41160583 98.27299500]
[138.57893372 112.15512085]
[132.12286377 124.58054352]
[121.81709290 134.06016541]
[108.89672089 139.45794678]
[94.91014099 140.12698364]
[90.29612732 154.39970398]
[85.68212128 168.67243958]
[81.06810760 182.94517517]
[76.45410156 197.21791077]
[72.37443542 211.65246582]
[68.83476257 226.22883606]
[65.29508972 240.80522156]
[77.69020844 248.12994385]
[87.50744629 258.63967896]
[93.95731354 271.47610474]
[96.52484894 285.59439087]
[95.01068878 299.84811401]
[89.54653931 313.08245850]
[80.58374786 324.22778320]
[68.85606384 332.38595581]
[55.31953049 336.90286255]
[41.07461166 337.42074585]
[37.31831360 351.94277954]
[33.56201172 366.46484375]
[29.80570984 380.98690796]
[26.04940987 395.50897217]
[22.29310989 410.03103638]
[20.39981651 424.91107178]
[20.39981651 439.91107178]
[28.13711739 453.71124268]
[20.39981651 466.43850708]
[20.39981651 481.43850708]
[28.13711739 495.23867798]
[20.39981651 507.96594238]
[20.39981651 522.96594238]
[33.98169327 530.02221680]
[42.71911240 542.58868408]
[44.60427094 557.77764893]
[39.20398331 572.09881592]
[27.75918579 582.26129150]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 205]
[7 204]
[9 202]
[10 201]
[12 199]
[13 198]
[31 197]
[32 196]
[33 195]
[34 194]
[35 193]
[36 192]
[45 182]
[46 181]
[47 180]
[53 179]
[54 178]
[55 177]
[56 176]
[57 175]
[64 167]
[65 166]
[72 165]
[73 164]
[74 163]
[78 160]
[79 159]
[81 156]
[82 155]
[83 154]
[85 152]
[86 151]
[87 150]
[88 149]
[91 147]
[92 146]
[93 145]
[97 141]
[98 140]
[99 139]
[100 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
