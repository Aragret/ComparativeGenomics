%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[88.40054321 636.04486084]
[79.17060089 624.20190430]
[71.27523804 611.43041992]
[64.80701447 597.88018799]
[59.84178162 583.71002197]
[56.43774414 569.08605957]
[54.63481522 554.17980957]
[54.45413589 539.16595459]
[55.89781952 524.22064209]
[58.94894409 509.51901245]
[63.57173538 495.23345947]
[69.71199036 481.53146362]
[77.29772186 468.57369995]
[86.23999023 456.51205444]
[96.43395233 445.48797607]
[107.76008606 435.63070679]
[120.08560181 427.05581665]
[133.26599121 419.86383057]
[147.14671326 414.13906860]
[142.95970154 399.73529053]
[138.77268982 385.33151245]
[134.58567810 370.92773438]
[130.39866638 356.52392578]
[126.21165466 342.12014771]
[122.02464294 327.71636963]
[117.83763123 313.31259155]
[113.55052185 327.68688965]
[103.51535797 338.83569336]
[89.66978455 344.60632324]
[74.68716431 343.88455200]
[61.46039581 336.80975342]
[52.54336929 324.74798584]
[49.65782166 310.02813721]
[53.36090469 295.49240112]
[62.93761444 283.94741821]
[76.53883362 277.62234497]
[91.53839111 277.73843384]
[105.04009247 284.27325439]
[114.43753815 295.96621704]
[112.87701416 281.04760742]
[111.31649017 266.12899780]
[109.75596619 251.21040344]
[108.19544220 236.29179382]
[106.63491821 221.37318420]
[105.07440186 206.45458984]
[103.40285492 191.54800415]
[101.62039185 176.65429688]
[99.83792877 161.76057434]
[83.92070770 159.63096619]
[69.09062195 153.46966553]
[56.35033035 143.69326782]
[46.56121445 130.96273804]
[40.38512039 116.13880920]
[38.23961639 100.22372437]
[40.26976395 84.29351807]
[46.33829880 69.42523193]
[56.03492737 56.62411880]
[68.70405579 46.75566864]
[83.48911285 40.48709488]
[81.26399994 25.65305328]
[79.03887939 10.81900883]
[76.81376648 -4.01503468]
[72.44596863 -12.03751373]
[74.66765594 -19.08633614]
[72.66364288 -33.95186234]
[69.88803101 -48.69282532]
[66.34835815 -63.26920319]
[62.80868530 -77.84558105]
[59.26901245 -92.42195129]
[55.72933960 -106.99832916]
[52.18966675 -121.57470703]
[37.28395844 -119.74813080]
[22.26698685 -119.66439056]
[7.34183407 -121.32461548]
[-7.28965044 -124.70635986]
[-21.42959404 -129.76388550]
[-34.88676834 -136.42878723]
[-47.47917938 -144.61094666]
[-59.03653336 -154.19969177]
[-69.40252686 -165.06535339]
[-78.43697357 -177.06098938]
[-86.01769257 -190.02436829]
[-92.04216766 -203.78018188]
[-96.42891693 -218.14239502]
[-99.11861420 -232.91676331]
[-100.07489014 -247.90348816]
[-99.28480530 -262.89990234]
[-96.75905609 -277.70318604]
[-92.53179169 -292.11312866]
[-86.66017914 -305.93487549]
[-79.22363281 -318.98150635]
[-70.32272339 -331.07653809]
[-60.07781601 -342.05645752]
[-48.62746811 -351.77273560]
[-36.12653351 -360.09399414]
[-22.74407005 -366.90765381]
[-8.66106129 -372.12161255]
[5.93203545 -375.66534424]
[20.83786583 -377.49093628]
[35.85484695 -377.57366943]
[50.77988815 -375.91244507]
[65.41114807 -372.52972412]
[79.55075073 -367.47125244]
[93.00747681 -360.80545044]
[105.59934998 -352.62246704]
[117.15605927 -343.03295898]
[127.52133179 -332.16659546]
[136.55497742 -320.17034912]
[144.13482666 -307.20645142]
[150.15838623 -293.45025635]
[154.54417419 -279.08776855]
[157.23287964 -264.31320190]
[158.18815613 -249.32641602]
[157.39707947 -234.33004761]
[154.87034607 -219.52694702]
[150.64212036 -205.11726379]
[144.76957703 -191.29591370]
[137.33216858 -178.24978638]
[128.43045044 -166.15533447]
[118.18480682 -155.17610168]
[106.73381042 -145.46058655]
[94.23231506 -137.14018250]
[80.84940338 -130.32739258]
[66.76604462 -125.11437225]
[70.30571747 -110.53800201]
[73.84539032 -95.96162415]
[77.38506317 -81.38524628]
[80.92473602 -66.80887604]
[84.46440887 -52.23249817]
[92.19344330 -65.08792877]
[106.33612061 -70.08638000]
[120.42661285 -64.94262695]
[128.02291870 -52.00833130]
[125.65212250 -37.19687271]
[114.39811707 -27.27985191]
[99.40608215 -26.79119682]
[87.52916718 -35.95587921]
[89.53318024 -21.09034920]
[91.64780426 -6.24015188]
[93.87292480 8.59389210]
[96.09804535 23.42793465]
[98.32315826 38.26197815]
[112.15306854 39.44673538]
[125.36911011 43.69011307]
[137.30372620 50.77777481]
[147.35408020 60.35171509]
[155.01251221 71.92834473]
[159.89221191 84.92290497]
[161.74665833 98.67903137]
[160.48220825 112.50187683]
[156.16273499 125.69323730]
[149.00639343 137.58680725]
[139.37469482 147.58181763]
[127.75411224 155.17340088]
[114.73164368 159.97810364]
[116.51410675 174.87182617]
[118.29657745 189.76554871]
[122.42357635 197.91450500]
[119.99300385 204.89405823]
[121.55352783 219.81266785]
[123.11405182 234.73127747]
[124.67457581 249.64987183]
[126.23509216 264.56848145]
[127.79561615 279.48709106]
[129.35614014 294.40570068]
[132.24140930 309.12557983]
[136.42842102 323.52935791]
[140.61543274 337.93313599]
[144.80244446 352.33691406]
[148.98945618 366.74072266]
[153.17646790 381.14450073]
[157.36347961 395.54827881]
[161.55049133 409.95205688]
[176.33706665 407.34356689]
[191.31900024 406.34909058]
[206.32063293 406.98031616]
[221.16606140 409.22979736]
[235.68125916 413.07122803]
[249.69601440 418.45953369]
[263.04602051 425.33151245]
[275.57476807 433.60665894]
[287.13537598 443.18789673]
[297.59225464 453.96289062]
[306.82284546 465.80535889]
[314.71887207 478.57638550]
[321.18783569 492.12628174]
[326.15383911 506.29620361]
[329.55865479 520.91998291]
[331.36239624 535.82611084]
[331.54388428 550.83990479]
[330.10098267 565.78533936]
[327.05065918 580.48712158]
[322.42864990 594.77294922]
[316.28912354 608.47528076]
[308.70407104 621.43341064]
[299.76245117 633.49554443]
[289.56909180 644.52020264]
[278.24349976 654.37805176]
[265.91842651 662.95361328]
[252.73843384 670.14636230]
[238.85801697 675.87182617]
[224.43994141 680.06298828]
[209.65321350 682.67071533]
[194.67123413 683.66436768]
[179.66963196 683.03234863]
[164.82432556 680.78204346]
[150.30934143 676.93981934]
[136.29486084 671.55078125]
[122.94522095 664.67803955]
[110.41692352 656.40228271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 173]
[20 172]
[21 171]
[22 170]
[23 169]
[24 168]
[25 167]
[26 166]
[39 165]
[40 164]
[41 163]
[42 162]
[43 161]
[44 160]
[45 159]
[46 157]
[47 156]
[48 155]
[59 142]
[60 141]
[61 140]
[62 139]
[64 138]
[65 137]
[66 129]
[67 128]
[68 127]
[69 126]
[70 125]
[71 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
