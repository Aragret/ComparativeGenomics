%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[65.22064209 526.76867676]
[62.32070160 541.61608887]
[54.97282410 554.83972168]
[43.89687347 565.14404297]
[30.17796326 571.51947021]
[15.16013050 573.34155273]
[0.31466797 570.43164062]
[-12.90401554 563.07489014]
[-23.20088959 551.99206543]
[-29.56716919 538.26885986]
[-31.37915230 523.24981689]
[-28.45931816 508.40631104]
[-21.09372520 495.19256592]
[-10.00397682 484.90313721]
[3.72346568 478.54605103]
[18.74372864 476.74414062]
[13.59902287 462.76623535]
[23.84632111 450.71206665]
[26.73159409 435.99215698]
[29.61686707 421.27227783]
[32.50214005 406.55236816]
[35.16793442 391.79116821]
[37.61366272 376.99188232]
[40.05939102 362.19262695]
[42.50511551 347.39334106]
[40.76005173 344.32952881]
[40.41228485 340.26821899]
[41.91445923 335.87539673]
[45.40469742 331.99401855]
[48.50880814 317.31869507]
[51.61291504 302.64340210]
[54.71702576 287.96810913]
[48.38373184 277.66198730]
[50.84971237 265.41033936]
[61.32768631 257.88873291]
[64.64994812 243.26126099]
[67.97220612 228.63380432]
[71.18547821 213.98200989]
[74.28958893 199.30670166]
[77.39369965 184.63140869]
[80.49781036 169.95610046]
[83.27342224 155.21514893]
[85.71914673 140.41587830]
[88.16487122 125.61660004]
[90.61060333 110.81732941]
[85.86773682 97.66450500]
[94.59012604 86.73694611]
[97.03585052 71.93767548]
[99.48158264 57.13840103]
[101.37487030 42.25836563]
[102.71310425 27.31818199]
[103.49443054 12.33854389]
[103.71775818 -2.65979314]
[103.94108582 -17.65813065]
[104.16441345 -32.65646744]
[104.38774109 -47.65480423]
[91.97575378 -59.98209000]
[92.31284332 -77.13438416]
[104.70209503 -88.50738525]
[104.70209503 -103.50738525]
[104.70209503 -118.50738525]
[102.91963196 -133.40109253]
[99.37995911 -147.97747803]
[95.84028625 -162.55384827]
[92.30061340 -177.13021851]
[88.76094055 -191.70660400]
[75.54689026 -199.95443726]
[72.16481018 -214.78736877]
[80.10929108 -227.33412170]
[76.56961823 -241.91049194]
[73.02994537 -256.48687744]
[69.49027252 -271.06323242]
[57.25753784 -276.70016479]
[50.60200119 -288.18554688]
[51.75956345 -301.21408081]
[60.08444595 -311.04901123]
[56.76218796 -325.67645264]
[53.43992615 -340.30392456]
[49.23580170 -345.40655518]
[48.36971283 -351.02322388]
[50.24338531 -355.41619873]
[47.35811234 -370.13610840]
[44.47283936 -384.85598755]
[41.58757019 -399.57586670]
[26.53541374 -399.70822144]
[11.81809044 -402.86816406]
[-1.96173513 -408.92633057]
[-14.23978806 -417.63461304]
[-24.51329041 -428.63644409]
[-32.36154938 -441.48129272]
[-37.46318054 -455.64312744]
[-39.60927963 -470.54211426]
[-38.71195984 -485.56805420]
[-34.80797195 -500.10574341]
[-28.05717659 -513.55981445]
[-18.73601723 -525.37933350]
[-7.22618961 -535.08026123]
[6.00098658 -542.26544189]
[20.40386581 -546.64056396]
[35.39266205 -548.02655029]
[50.35359192 -546.36657715]
[64.67401123 -541.72863770]
[77.76751709 -534.30267334]
[89.09792328 -524.39276123]
[98.20127106 -512.40466309]
[104.70478058 -498.82937622]
[108.34213257 -484.22268677]
[108.96438599 -469.18283081]
[106.54605865 -454.32562256]
[101.18617249 -440.25949097]
[93.10421753 -427.56039429]
[82.63114166 -416.74838257]
[70.19581604 -408.26617432]
[56.30746078 -402.46115112]
[59.19273376 -387.74127197]
[62.07800674 -373.02136230]
[64.96327972 -358.30148315]
[68.06739044 -343.62619019]
[71.38964844 -328.99871826]
[74.71190643 -314.37124634]
[89.31240082 -306.02474976]
[93.44007111 -289.37310791]
[84.06664276 -274.60290527]
[87.60631561 -260.02655029]
[91.14598846 -245.45016479]
[94.68566132 -230.87379456]
[107.49964142 -223.36795044]
[111.29701233 -208.63586426]
[103.33731842 -195.24627686]
[106.87699127 -180.66989136]
[110.41666412 -166.09352112]
[113.95633698 -151.51715088]
[117.49600983 -136.94076538]
[121.45131683 -151.40989685]
[130.06024170 -163.69348145]
[142.31143188 -172.34844971]
[156.76559448 -176.35803223]
[171.72471619 -175.25120544]
[185.43136597 -169.15797424]
[196.27532959 -158.79417419]
[202.98266602 -145.37731934]
[204.76541138 -130.48364258]
[201.41409302 -115.86280823]
[193.32246399 -103.23246765]
[181.44110107 -94.07642365]
[167.16581726 -89.47030640]
[152.17366028 -89.95525360]
[138.22589111 -95.47428894]
[126.96108246 -105.37903595]
[119.70209503 -118.50738525]
[119.70209503 -103.50738525]
[119.70209503 -88.50738525]
[129.99850464 -80.76054382]
[134.01292419 -68.31198883]
[130.06651306 -55.63774872]
[119.38607788 -47.43147659]
[119.16275024 -32.43313980]
[118.93942261 -17.43480301]
[118.71609497 -2.43646550]
[118.49276733 12.56187153]
[130.91009521 4.14700842]
[145.27586365 8.46262741]
[151.00016785 22.32741547]
[143.86326599 35.52076721]
[129.12620544 38.31703568]
[117.65328979 28.65641594]
[116.31505585 43.59659958]
[129.32386780 36.12860489]
[143.32887268 41.50074768]
[148.00610352 55.75288773]
[139.90768433 68.37887573]
[125.00346375 70.07130432]
[114.28085327 59.58412933]
[111.83512878 74.38339996]
[109.38939667 89.18267059]
[114.13226318 102.33549500]
[105.40987396 113.26305389]
[102.96414948 128.06233215]
[100.51841736 142.86160278]
[98.07269287 157.66087341]
[99.91228485 162.54583740]
[99.71396637 167.18415833]
[97.91296387 170.84085083]
[95.17311096 173.06021118]
[92.06900024 187.73551941]
[88.96488953 202.41081238]
[85.86077881 217.08612061]
[87.14656067 226.12960815]
[82.59966278 231.95605469]
[79.27740479 246.58351135]
[75.95514679 261.21096802]
[81.80827332 278.67013550]
[69.39232635 291.07220459]
[66.28821564 305.74749756]
[63.18410873 320.42282104]
[60.07999802 335.09811401]
[57.30438995 349.83908081]
[54.85866165 364.63833618]
[52.41293335 379.43762207]
[49.96720505 394.23687744]
[51.93389511 400.54907227]
[50.61549377 406.07708740]
[47.22203064 409.43765259]
[44.33675766 424.15753174]
[41.45148468 438.87744141]
[38.56621170 453.59732056]
[43.50454330 468.62808228]
[33.46361923 479.62939453]
[46.69215012 486.96841431]
[57.00386810 498.03744507]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 208]
[18 206]
[19 205]
[20 204]
[21 203]
[22 200]
[23 199]
[24 198]
[25 197]
[29 196]
[30 195]
[31 194]
[32 193]
[35 191]
[36 190]
[37 189]
[38 187]
[39 186]
[40 185]
[41 184]
[42 180]
[43 179]
[44 178]
[45 177]
[47 175]
[48 174]
[49 173]
[50 167]
[51 166]
[52 160]
[53 159]
[54 158]
[55 157]
[56 156]
[59 152]
[60 151]
[61 150]
[62 133]
[63 132]
[64 131]
[65 130]
[66 129]
[69 126]
[70 125]
[71 124]
[72 123]
[76 120]
[77 119]
[78 118]
[81 117]
[82 116]
[83 115]
[84 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
