%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[96.64706421 429.36218262]
[89.51058960 442.56845093]
[81.16880035 455.04840088]
[71.69502258 466.69235229]
[61.17249680 477.39801025]
[49.69370270 487.07125854]
[37.35952377 495.62710571]
[24.27834892 502.99035645]
[10.56514359 509.09628296]
[-3.65958071 513.89123535]
[-18.27081299 517.33312988]
[-33.14014435 519.39160156]
[-48.13690186 520.04864502]
[-63.12929153 519.29846191]
[-77.98555756 517.14770508]
[-92.57513428 513.61517334]
[-106.76980591 508.73196411]
[-120.44483185 502.54098511]
[-133.48002625 495.09664917]
[-145.76083374 486.46438599]
[-157.17933655 476.72003174]
[-167.63517761 465.94924927]
[-177.03648376 454.24667358]
[-185.30059814 441.71517944]
[-192.35493469 428.46484375]
[-198.13748169 414.61218262]
[-202.59741211 400.27886963]
[-205.69554138 385.59091187]
[-207.40463257 370.67739868]
[-207.70967102 355.66934204]
[-206.60798645 340.69866943]
[-204.10925293 325.89697266]
[-200.23542786 311.39428711]
[-195.02055359 297.31808472]
[-188.51046753 283.79205322]
[-180.76237488 270.93508911]
[-171.84436035 258.86016846]
[-161.83482361 247.67341614]
[-150.82170105 237.47314453]
[-138.90179443 228.34896851]
[-126.17985535 220.38111877]
[-112.76769257 213.63958740]
[-98.78316498 208.18362427]
[-84.34918213 204.06118774]
[-69.59258270 201.30848694]
[-54.64305878 199.94973755]
[-39.63198853 199.99687195]
[-24.69128990 201.44946289]
[-9.95226955 204.29476929]
[4.45554590 208.50776672]
[18.40553474 214.05143738]
[31.77510452 220.87705994]
[39.81627655 208.21453857]
[40.10750580 193.32276917]
[54.03705978 185.82090759]
[62.07823563 173.15837097]
[70.11940765 160.49584961]
[78.16058350 147.83332825]
[84.02954102 134.02914429]
[87.56921387 119.45277405]
[91.10888672 104.87640381]
[89.79956818 96.92289734]
[94.81128693 90.11015320]
[98.56758881 75.58809662]
[102.32389069 61.06603241]
[106.08019257 46.54397583]
[100.21878815 35.05455399]
[103.64638519 23.03643036]
[114.00099945 16.78274918]
[117.97309875 2.31822538]
[121.94519043 -12.14629841]
[111.81849670 -19.35255623]
[104.40548706 -29.29842949]
[100.40904999 -41.01576614]
[100.20042419 -53.36968994]
[103.78473663 -65.16851807]
[110.80196381 -75.27871704]
[120.56303406 -82.73378754]
[132.11747742 -86.82667542]
[144.34596252 -87.17678833]
[148.95997620 -101.44952393]
[153.57397461 -115.72225952]
[158.18798828 -129.99499512]
[162.80200195 -144.26773071]
[161.74229431 -148.47854614]
[162.04701233 -152.41194153]
[163.46139526 -155.67306519]
[165.62861633 -157.99034119]
[168.13885498 -159.23809814]
[173.59420776 -173.21089172]
[179.04956055 -187.18370056]
[184.50491333 -201.15649414]
[171.25918579 -208.23368835]
[158.94346619 -216.82786560]
[147.73069763 -226.81835938]
[137.77825928 -238.06492615]
[129.22587585 -250.40968323]
[122.19361115 -263.67932129]
[116.78018951 -277.68759155]
[113.06159973 -292.23779297]
[111.09004974 -307.12570190]
[110.89321136 -322.14227295]
[112.47386169 -337.07672119]
[115.80979919 -351.71939087]
[120.85418701 -365.86471558]
[127.53622437 -379.31414795]
[135.76210022 -391.87881470]
[145.41633606 -403.38238525]
[156.36340332 -413.66336060]
[168.44961548 -422.57739258]
[181.50531006 -429.99932861]
[195.34718323 -435.82501221]
[209.78096008 -439.97262573]
[224.60397339 -442.38397217]
[239.60813904 -443.02520752]
[254.58283997 -441.88729858]
[269.31784058 -438.98620605]
[283.60626221 -434.36273193]
[297.24758911 -428.08169556]
[310.05023193 -420.23132324]
[321.83450317 -410.92181396]
[332.43499756 -400.28384399]
[341.70285034 -388.46676636]
[349.50796509 -375.63647461]
[355.74081421 -361.97308350]
[360.31384277 -347.66842651]
[363.16287231 -332.92327881]
[364.24792480 -317.94464111]
[363.55374146 -302.94284058]
[361.09005737 -288.12841797]
[356.89151001 -273.70938110]
[351.01699829 -259.88815308]
[343.54901123 -246.85874939]
[334.59237671 -234.80407715]
[324.27282715 -223.89337158]
[312.73526001 -214.27981567]
[300.14160156 -206.09834290]
[286.66870117 -199.46383667]
[272.50564575 -194.46940613]
[257.85128784 -191.18518066]
[242.91133118 -189.65727234]
[227.89553833 -189.90710449]
[213.01470947 -191.93121338]
[198.47772217 -195.70114136]
[193.02235413 -181.72833252]
[187.56700134 -167.75553894]
[182.11164856 -153.78274536]
[177.07473755 -139.65371704]
[172.46072388 -125.38098145]
[167.84671021 -111.10824585]
[163.23269653 -96.83551788]
[158.61869812 -82.56278229]
[171.87139893 -70.83751678]
[178.67878723 -54.44685364]
[177.62583923 -36.67694855]
[168.87852478 -21.11249161]
[154.15963745 -10.91359425]
[136.40971375 -8.17420197]
[132.43762207 6.29032183]
[128.46553040 20.75484467]
[133.81076050 37.46997070]
[120.60224915 50.30027390]
[116.84594727 64.82233429]
[113.08965302 79.34439087]
[109.33335114 93.86645508]
[105.68526459 108.41607666]
[102.14559174 122.99244690]
[98.60591888 137.56881714]
[108.30052185 126.12265778]
[120.59691620 117.53204346]
[134.67951965 112.36675262]
[149.61428833 110.96939087]
[164.41065979 113.43263245]
[178.08721924 119.59310150]
[189.73687744 129.04220581]
[198.58694458 141.15319824]
[204.05043030 155.12283325]
[205.76495361 170.02452087]
[203.61679077 184.86990356]
[197.74844360 198.67434692]
[188.54911804 210.52223206]
[176.62898254 219.62774658]
[162.77865601 225.38694763]
[147.91677856 227.41784668]
[133.02908325 225.58575439]
[119.10301971 220.01216125]
[107.06225586 211.06677246]
[97.70541382 199.34289551]
[91.65309143 185.61811829]
[89.30672455 170.80278015]
[90.82310486 155.87449646]
[82.78192902 168.53703308]
[74.74076080 181.19955444]
[66.69958496 193.86207581]
[65.83319855 209.65954590]
[52.47880173 216.25570679]
[44.43762970 228.91822815]
[56.30064392 238.11624146]
[67.25021362 248.38470459]
[77.19009399 259.63339233]
[86.03294373 271.76345825]
[93.70104980 284.66830444]
[100.12702179 298.23446655]
[105.25438690 312.34280396]
[109.03807831 326.86926270]
[111.44485474 341.68621826]
[112.45355225 356.66342163]
[112.05531311 371.66928101]
[110.25363922 386.57192993]
[107.06436920 401.24035645]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 197]
[53 196]
[55 194]
[56 193]
[57 192]
[58 191]
[59 168]
[60 167]
[61 166]
[63 165]
[64 164]
[65 163]
[66 162]
[69 160]
[70 159]
[71 158]
[80 152]
[81 151]
[82 150]
[83 149]
[84 148]
[89 147]
[90 146]
[91 145]
[92 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
