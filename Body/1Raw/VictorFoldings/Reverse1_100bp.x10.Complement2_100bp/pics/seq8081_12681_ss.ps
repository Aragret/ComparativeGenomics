%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[156.58157349 599.18359375]
[153.91622925 614.00213623]
[148.22781372 627.94256592]
[139.76498413 640.39550781]
[128.89772034 650.81646729]
[116.10109711 658.74987793]
[101.93450928 663.84906006]
[87.01726532 665.89099121]
[72.00148010 664.78649902]
[57.54359055 660.58374023]
[44.27562332 653.46649170]
[32.77759933 643.74597168]
[23.55216408 631.84698486]
[17.00261307 618.28985596]
[13.41526413 603.66711426]
[12.94694138 588.61804199]
[15.61811829 573.80053711]
[21.31202126 559.86230469]
[29.77973938 547.41278076]
[40.65109634 536.99609375]
[53.45084763 529.06768799]
[67.61944580 523.97406006]
[82.53749084 521.93798828]
[97.55283356 523.04846191]
[101.73984528 508.64465332]
[105.92685699 494.24087524]
[102.04971313 479.85974121]
[113.33156586 468.76785278]
[117.51857758 454.36407471]
[121.70558929 439.96029663]
[123.15501404 425.03048706]
[121.81677246 410.09030151]
[120.47853851 395.15011597]
[119.14030457 380.20993042]
[117.80207062 365.26974487]
[116.46383667 350.32955933]
[112.73612976 343.94784546]
[115.21859741 335.15722656]
[114.10294342 320.19879150]
[112.98729706 305.24032593]
[111.87165070 290.28186035]
[110.75600433 275.32342529]
[109.64035034 260.36495972]
[108.52470398 245.40650940]
[93.95949554 234.31730652]
[92.09333038 215.78543091]
[104.57594299 201.53416443]
[103.01541901 186.61555481]
[101.45490265 171.69696045]
[86.56597900 161.04634094]
[84.14888000 142.57823181]
[96.20164490 127.96163177]
[94.19763184 113.09610748]
[85.80446625 101.91368866]
[90.93683624 88.90790558]
[88.93282318 74.04238129]
[86.92881012 59.17685318]
[84.92479706 44.31132507]
[82.69967651 29.47728157]
[80.25395203 14.67800999]
[77.80822754 -0.12126087]
[69.90628815 12.62861919]
[56.06330490 18.40545273]
[41.44236374 15.05462456]
[31.49671364 3.82591033]
[29.93583488 -11.09265709]
[37.34189987 -24.13682175]
[50.95262527 -30.44143105]
[65.69155121 -27.65502357]
[76.06193542 -16.81580734]
[75.39215088 -31.80084610]
[74.72236633 -46.78588486]
[74.05257416 -61.77092361]
[63.78509521 -77.05687714]
[72.47367096 -92.30403137]
[71.58084869 -107.27743530]
[56.28778076 -111.74530029]
[43.47074509 -121.16384125]
[34.66852570 -134.37948608]
[30.93007851 -149.78419495]
[32.68954086 -165.51107788]
[39.71592331 -179.66072083]
[51.14322662 -190.53047180]
[65.57714081 -196.81945801]
[64.46149445 -211.77790833]
[63.34584427 -226.73635864]
[54.60356522 -239.92283630]
[61.37282562 -253.19032288]
[60.25717545 -268.14877319]
[59.14152908 -283.10723877]
[48.42348099 -298.08071899]
[56.65423203 -313.57980347]
[55.31599808 -328.51998901]
[40.56470490 -331.87475586]
[27.57311058 -339.62545776]
[17.61400032 -351.01278687]
[11.66306591 -364.92114258]
[10.30331898 -379.98785400]
[13.66797543 -394.73690796]
[21.42739868 -407.72329712]
[32.82139969 -417.67477417]
[46.73371124 -423.61639404]
[61.80134583 -424.96603394]
[76.54813385 -421.59149170]
[89.52932739 -413.82336426]
[99.47316742 -402.42269897]
[105.40545654 -388.50640869]
[106.74501038 -373.43789673]
[103.36059570 -358.69335938]
[95.58377075 -345.71737671]
[84.17644501 -335.78118896]
[70.25618744 -329.85821533]
[71.59442139 -314.91802979]
[80.67279816 -306.92367554]
[81.90997314 -294.48773193]
[74.09998322 -284.22286987]
[75.21562958 -269.26443481]
[76.33127594 -254.30596924]
[84.99375916 -242.18942261]
[78.30429840 -227.85200500]
[79.41994476 -212.89355469]
[80.53559875 -197.93510437]
[94.27200317 -194.51098633]
[106.29761505 -187.00059509]
[115.42967987 -176.12698364]
[120.76521301 -162.94474792]
[121.77028656 -148.73770142]
[118.33341217 -134.89395142]
[110.77776337 -122.77015686]
[99.83079529 -113.55868530]
[86.55426025 -108.17024994]
[87.44707489 -93.19684601]
[96.28340912 -84.93574524]
[97.14977264 -72.46846008]
[89.03761292 -62.44070816]
[89.70740509 -47.45566940]
[90.37718964 -32.47063065]
[91.04697418 -17.48559380]
[92.60749817 -2.56698823]
[95.05322266 12.23228264]
[97.49894714 27.03155327]
[100.79085541 30.49167252]
[101.94407654 36.05648041]
[99.79032135 42.30731201]
[101.79433441 57.17284012]
[103.79835510 72.03836823]
[105.80236816 86.90389252]
[114.19553375 98.08631134]
[109.06316376 111.09209442]
[111.06717682 125.95761871]
[121.74353027 131.18753052]
[128.50047302 140.82312012]
[129.75413513 152.40423584]
[125.30804443 163.04135132]
[116.37350464 170.13642883]
[117.93402863 185.05503845]
[119.49455261 199.97364807]
[130.01045227 205.51911926]
[136.47752380 215.35160828]
[137.38580322 226.96492004]
[132.62498474 237.46493530]
[123.48315430 244.29086304]
[124.59880829 259.24932861]
[125.71445465 274.20776367]
[126.83010101 289.16622925]
[127.94575500 304.12466431]
[129.06140137 319.08312988]
[130.17704773 334.04159546]
[131.40402222 348.99130249]
[132.74226379 363.93148804]
[134.08049011 378.87167358]
[135.41873169 393.81185913]
[136.75695801 408.75204468]
[138.09519958 423.69223022]
[143.50683594 409.70245361]
[151.95964050 397.31091309]
[163.01017761 387.16766357]
[176.07878113 379.80480957]
[190.47987366 375.60855103]
[205.45800781 374.79904175]
[220.22747803 377.41876221]
[234.01348877 383.33026123]
[246.09286499 392.22344971]
[255.83193970 403.63180542]
[262.71981812 416.95687866]
[266.39517212 431.49963379]
[266.66522217 446.49719238]
[263.51577759 461.16284180]
[257.11209106 474.72720337]
[247.79002380 486.47879028]
[236.03865051 495.80105591]
[222.47438049 502.20504761]
[207.80880737 505.35476685]
[192.81123352 505.08502197]
[178.26840210 501.40994263]
[164.94322205 494.52230835]
[153.53466797 484.78344727]
[144.64125061 472.70425415]
[138.72947693 458.91836548]
[136.10937500 444.14730835]
[131.92236328 458.55108643]
[127.73535156 472.95486450]
[131.31301880 488.36624146]
[120.33063507 498.42788696]
[116.14362335 512.83166504]
[111.95661163 527.23547363]
[125.22737885 534.34747314]
[136.72923279 544.06347656]
[145.95935059 555.95880127]
[152.51422119 569.51342773]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 206]
[25 205]
[26 204]
[28 202]
[29 201]
[30 200]
[31 174]
[32 173]
[33 172]
[34 171]
[35 170]
[36 169]
[38 168]
[39 167]
[40 166]
[41 165]
[42 164]
[43 163]
[44 162]
[47 157]
[48 156]
[49 155]
[52 150]
[53 149]
[55 147]
[56 146]
[57 145]
[58 144]
[59 141]
[60 140]
[61 139]
[70 138]
[71 137]
[72 136]
[73 135]
[75 132]
[76 131]
[84 122]
[85 121]
[86 120]
[88 118]
[89 117]
[90 116]
[92 113]
[93 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
