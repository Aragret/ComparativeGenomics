%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[64.23614502 641.88391113]
[52.43384171 651.46380615]
[37.86245346 655.79315186]
[22.74400330 654.21166992]
[9.38394737 646.96069336]
[-0.18040395 635.14581299]
[-4.49055624 620.56872559]
[-2.88924265 605.45233154]
[4.37934828 592.10186768]
[16.20681000 582.55303955]
[30.78953934 578.26208496]
[32.35006332 563.34344482]
[33.91058350 548.42486572]
[35.47110748 533.50628662]
[37.03163147 518.58764648]
[38.36986542 503.64746094]
[39.48551178 488.68902588]
[40.60116196 473.73056030]
[37.96385956 466.82647705]
[41.84640503 458.55825806]
[43.18463898 443.61807251]
[44.52287292 428.67788696]
[45.86110687 413.73770142]
[34.40700531 423.42291260]
[19.40811729 423.60543823]
[7.72173023 414.20178223]
[4.69070435 399.51123047]
[11.70078468 386.25003052]
[25.54705620 380.48110962]
[39.89918900 384.84185791]
[48.19602585 397.34045410]
[51.08129883 382.62057495]
[53.96657181 367.90066528]
[56.52240372 353.12002563]
[58.74752045 338.28598022]
[60.97263718 323.45193481]
[63.19775391 308.61788940]
[65.42287445 293.78384399]
[54.69307709 283.48776245]
[52.05225372 268.67254639]
[58.71947861 254.98309326]
[72.32633972 247.76094055]
[74.55146027 232.92689514]
[65.51929474 221.13894653]
[67.56455994 206.06341553]
[79.99008179 196.66958618]
[82.21519470 181.83554077]
[84.44031525 167.00149536]
[86.66543579 152.16744995]
[88.55872345 137.28741455]
[90.11924744 122.36881256]
[91.67977142 107.45020294]
[93.12918854 92.52040100]
[94.46742249 77.58021545]
[95.80565643 62.64002609]
[97.14389038 47.69984436]
[89.48759460 37.31986618]
[90.90978241 24.90370369]
[100.10617828 17.04540443]
[101.66670227 2.12680006]
[103.22722626 -12.79180431]
[104.78775024 -27.71040916]
[102.56811523 -36.57105255]
[106.48417664 -42.83892822]
[108.26664734 -57.73264313]
[109.60488129 -72.67282867]
[110.49769592 -87.64623260]
[111.39051056 -102.61963654]
[112.28332520 -117.59304810]
[113.17613983 -132.56645203]
[114.06896210 -147.53985596]
[114.96177673 -162.51325989]
[101.08979797 -168.57904053]
[90.15064240 -179.00529480]
[83.45127869 -192.51968384]
[81.78297424 -207.48252869]
[85.32791901 -222.08578491]
[93.63948822 -234.57147217]
[105.69846344 -243.44334412]
[120.03797150 -247.64616394]
[120.93079376 -262.61956787]
[114.02861023 -276.85580444]
[122.50973511 -289.09997559]
[123.40254974 -304.07339478]
[124.29536438 -319.04678345]
[124.85357666 -334.03640747]
[125.07690430 -349.03475952]
[125.30023193 -364.03308105]
[125.52355957 -379.03143311]
[117.99257660 -392.94525146]
[125.91851044 -405.55593872]
[123.66999817 -409.27050781]
[122.80724335 -413.12020874]
[123.20256805 -416.65280151]
[124.59452057 -419.50393677]
[126.62818146 -421.43328857]
[127.74382782 -436.39172363]
[128.85948181 -451.35018921]
[129.97512817 -466.30865479]
[116.05061340 -472.25729370]
[104.81375885 -482.40676880]
[97.48346710 -495.65612793]
[94.85486603 -510.56817627]
[97.21308899 -525.52539062]
[104.30233002 -538.90527344]
[115.35360718 -549.25646973]
[129.16815186 -555.45623779]
[144.24748230 -556.83203125]
[158.95588684 -553.23461914]
[171.69790649 -545.05413818]
[181.09140015 -533.17810059]
[186.11743164 -518.89459229]
[186.23078918 -503.75308228]
[181.41920471 -489.39596558]
[172.20458984 -477.38055420]
[159.58647156 -469.01025391]
[144.93357849 -465.19299316]
[143.81793213 -450.23452759]
[142.70228577 -435.27609253]
[141.58663940 -420.31762695]
[140.91685486 -405.33258057]
[148.46380615 -392.49154663]
[140.52189636 -378.80810547]
[140.29856873 -363.80975342]
[140.07524109 -348.81143188]
[139.85191345 -333.81307983]
[142.03216553 -331.04199219]
[142.97854614 -327.07723999]
[142.14462280 -322.51019287]
[139.26876831 -318.15399170]
[138.37594604 -303.18057251]
[137.48313904 -288.20718384]
[144.44917297 -275.04193115]
[135.90419006 -261.72674561]
[135.01138306 -246.75335693]
[148.74986267 -240.87632751]
[159.66914368 -230.63433838]
[166.43812561 -217.24945068]
[168.22264099 -202.32841492]
[164.78810120 -187.66983032]
[156.53027344 -175.04728699]
[144.42967224 -165.99482727]
[129.93518066 -161.62045288]
[129.04235840 -146.64704895]
[128.14955139 -131.67362976]
[127.25672913 -116.70023346]
[126.36391449 -101.72682190]
[125.47109985 -86.75341797]
[124.57828522 -71.78001404]
[126.33595276 -69.59626770]
[127.33451080 -66.58470917]
[127.25433350 -63.03098297]
[125.88499451 -59.33105850]
[123.16036224 -55.95017624]
[121.37789917 -41.05646133]
[119.70635223 -26.14988708]
[118.14583588 -11.23128128]
[116.58531189 3.68732309]
[115.02478790 18.60592842]
[123.02387238 34.22583771]
[112.08407593 49.03807831]
[110.74584198 63.97826385]
[109.40760803 78.91844940]
[108.06937408 93.85863495]
[110.54403687 101.52991486]
[106.59837341 109.01072693]
[105.03784943 123.92933655]
[103.47732544 138.84794617]
[105.60442352 143.61476135]
[105.68253326 148.25665283]
[104.10237122 152.01406860]
[101.49947357 154.39256287]
[99.27436066 169.22660828]
[97.04924011 184.06065369]
[94.82412720 198.89469910]
[103.94664001 211.52076721]
[101.47873688 226.53289795]
[89.38549805 235.15200806]
[87.16038513 249.98605347]
[98.04943085 260.88259888]
[100.40673828 275.92575073]
[93.53536224 289.31411743]
[80.25691223 296.00897217]
[78.03179932 310.84298706]
[75.80667877 325.67703247]
[73.58156586 340.51107788]
[71.35644531 355.34512329]
[73.26856995 360.20217896]
[73.13932800 364.84292603]
[71.39296722 368.52603149]
[68.68646240 370.78594971]
[65.80119324 385.50582886]
[62.91591644 400.22573853]
[60.80129242 415.07592773]
[59.46305847 430.01611328]
[58.12482452 444.95629883]
[56.78659058 459.89648438]
[55.55961609 474.84622192]
[54.44396591 489.80465698]
[53.32831955 504.76312256]
[55.85031128 510.87466431]
[55.03034973 516.49822998]
[51.95023346 520.14819336]
[50.38971329 535.06677246]
[48.82918930 549.98541260]
[47.26866531 564.90399170]
[45.70814514 579.82257080]
[59.08723068 587.03845215]
[68.68263245 598.82812500]
[73.03112030 613.39379883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 207]
[12 206]
[13 205]
[14 204]
[15 203]
[16 200]
[17 199]
[18 198]
[20 197]
[21 196]
[22 195]
[23 194]
[31 193]
[32 192]
[33 191]
[34 187]
[35 186]
[36 185]
[37 184]
[38 183]
[42 179]
[43 178]
[46 175]
[47 174]
[48 173]
[49 172]
[50 168]
[51 167]
[52 166]
[53 164]
[54 163]
[55 162]
[56 161]
[59 159]
[60 158]
[61 157]
[62 156]
[64 155]
[65 154]
[66 149]
[67 148]
[68 147]
[69 146]
[70 145]
[71 144]
[72 143]
[80 135]
[81 134]
[83 132]
[84 131]
[85 130]
[86 126]
[87 125]
[88 124]
[89 123]
[91 121]
[96 120]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
