%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[52.36545944 558.63317871]
[43.87343979 546.16125488]
[38.89966202 531.91613770]
[37.78324127 516.86901855]
[40.60029984 502.04583740]
[47.15876389 488.45727539]
[57.01146698 477.02981567]
[69.48663330 468.54260254]
[83.73369598 463.57434082]
[82.61804199 448.61587524]
[81.50239563 433.65744019]
[80.38674927 418.69897461]
[79.27109528 403.74050903]
[67.65402222 413.22964478]
[52.96051407 410.21289062]
[46.02208328 396.91409302]
[51.95347977 383.13662720]
[66.38230133 379.03674316]
[78.67134094 387.63525391]
[78.67134094 372.63525391]
[78.67134094 357.63525391]
[66.38066864 366.23406982]
[51.95223999 362.13281250]
[46.02214432 348.35479736]
[52.96183395 335.05664062]
[67.65562439 332.04125977]
[79.27109528 341.52999878]
[80.38674927 326.57156372]
[81.50239563 311.61309814]
[82.61804199 296.65463257]
[83.73369598 281.69619751]
[70.97461700 268.56906128]
[71.87813568 249.96539307]
[86.33669281 237.72348022]
[87.00648499 222.73843384]
[87.67626953 207.75340271]
[88.34605408 192.76835632]
[75.16120911 185.79518127]
[66.27493286 173.73931885]
[63.49288559 158.96023560]
[67.41950989 144.37936401]
[77.32770538 132.90266418]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[93.72218323 72.48873901]
[94.39196777 57.50370407]
[95.06175232 42.51866531]
[95.73153687 27.53362465]
[96.40132141 12.54858589]
[97.07110596 -2.43645287]
[97.74089050 -17.42149162]
[98.41067505 -32.40653229]
[99.08045959 -47.39157104]
[99.75024414 -62.37660980]
[97.85695648 -77.25664520]
[93.45595551 -91.59648895]
[89.05496216 -105.93634033]
[84.65396118 -120.27618408]
[80.25296021 -134.61602783]
[75.85196686 -148.95587158]
[71.13182831 -163.19386292]
[66.09491730 -177.32289124]
[61.05799866 -191.45191956]
[56.02108002 -205.58096313]
[50.98416519 -219.70999146]
[42.29458237 -207.48332214]
[27.32675171 -206.50146484]
[17.11440277 -217.48817444]
[19.18569756 -232.34448242]
[32.01375580 -240.11885071]
[46.14104080 -235.08149719]
[42.16894531 -249.54602051]
[38.19684982 -264.01052856]
[27.08138466 -275.26919556]
[31.17221260 -289.59100342]
[27.20011711 -304.05551147]
[23.22801971 -318.52005005]
[19.25592422 -332.98455811]
[4.26452637 -331.73052979]
[-10.70202160 -333.25271606]
[-25.13396454 -337.49932861]
[-38.53975677 -344.32568359]
[-50.46280289 -353.49932861]
[-60.49700546 -364.70779419]
[-68.30060577 -377.56930542]
[-73.60781860 -391.64581299]
[-76.23787689 -406.45788574]
[-76.10120392 -421.50100708]
[-73.20245361 -436.26284790]
[-67.64035797 -450.24060059]
[-59.60435867 -462.95822144]
[-49.36816025 -473.98248291]
[-37.28040314 -482.93798828]
[-23.75279236 -489.51965332]
[-9.24607277 -493.50332642]
[5.74566174 -494.75335693]
[20.71179962 -493.22711182]
[35.14259720 -488.97662354]
[48.54655075 -482.14663696]
[60.46712112 -472.96978760]
[70.49830627 -461.75863647]
[78.29843903 -448.89501953]
[83.60185242 -434.81707764]
[86.22792053 -420.00430298]
[86.08718872 -404.96121216]
[83.18446350 -390.20013428]
[77.61859894 -376.22387695]
[69.57917023 -363.50845337]
[59.34000397 -352.48690796]
[47.24983215 -343.53469849]
[33.72044754 -336.95666504]
[37.69254303 -322.49212646]
[41.66463852 -308.02761841]
[45.63673782 -293.56307983]
[56.46809006 -283.33905029]
[52.66137314 -267.98263550]
[56.63346863 -253.51811218]
[60.60556793 -239.05358887]
[65.11319733 -224.74690247]
[70.15010834 -210.61787415]
[75.18702698 -196.48884583]
[80.22394562 -182.35981750]
[85.26085663 -168.23078918]
[88.27265930 -166.39736938]
[90.54605865 -163.01406860]
[91.36227417 -158.44383240]
[90.19181061 -153.35687256]
[94.59281158 -139.01702881]
[98.99380493 -124.67718506]
[103.39480591 -110.33733368]
[107.79580688 -95.99748993]
[112.19680023 -81.65763855]
[114.64505005 -96.45649719]
[120.64990997 -110.20210266]
[129.84417725 -122.05390930]
[141.66563416 -131.28717041]
[155.39138794 -137.33728027]
[170.18209839 -139.83425903]
[185.13330078 -138.62542725]
[199.33074951 -133.78469849]
[211.90623474 -125.60808563]
[222.09078979 -114.59559631]
[229.26159668 -101.42063904]
[232.98017883 -86.88887787]
[233.01913452 -71.88892365]
[229.37608337 -57.33804321]
[222.27380371 -44.12602234]
[212.14659119 -33.06077576]
[199.61373901 -24.81895638]
[185.44163513 -19.90455055]
[170.49690247 -18.61807442]
[155.69342041 -21.03820038]
[141.93643188 -27.01693344]
[130.06716919 -36.18867493]
[120.81147003 -47.99256516]
[114.73528290 -61.70682144]
[114.06549835 -46.72178268]
[113.39571381 -31.73674583]
[112.72592926 -16.75170708]
[112.05614471 -1.76666772]
[111.38636017 13.21837139]
[110.71657562 28.20340919]
[110.04679108 43.18844986]
[109.37700653 58.17348862]
[108.70722198 73.15852356]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[119.64645386 134.79418945]
[128.49124146 147.10908508]
[131.10136414 161.98213196]
[127.01188660 176.45407104]
[117.08547974 187.66905212]
[103.33109283 193.43814087]
[102.66130829 208.42318726]
[101.99152374 223.40821838]
[101.32173157 238.39326477]
[110.89867401 245.43731689]
[115.83562469 256.12036133]
[115.01112366 267.73992920]
[108.74539185 277.41754150]
[98.69214630 282.81182861]
[97.57649994 297.77029419]
[96.46084595 312.72875977]
[95.34519958 327.68719482]
[94.22955322 342.64566040]
[93.67134094 357.63525391]
[93.67134094 372.63525391]
[93.67134094 387.63525391]
[94.22955322 402.62487793]
[95.34519958 417.58331299]
[96.46084595 432.54177856]
[97.57649994 447.50024414]
[98.69214630 462.45867920]
[113.51857758 465.25857544]
[127.11472321 471.80130005]
[138.55358887 481.64074707]
[147.05522156 494.10607910]
[152.04000854 508.34738159]
[153.16804504 523.39361572]
[150.36242676 538.21899414]
[143.81446838 551.81262207]
[133.97059631 563.24768066]
[121.50197601 571.74450684]
[107.25876617 576.72375488]
[92.21206665 577.84600830]
[77.38780212 575.03466797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 197]
[10 196]
[11 195]
[12 194]
[13 193]
[19 192]
[20 191]
[21 190]
[27 189]
[28 188]
[29 187]
[30 186]
[31 185]
[34 180]
[35 179]
[36 178]
[37 177]
[43 171]
[44 170]
[46 168]
[47 167]
[48 166]
[49 165]
[50 164]
[51 163]
[52 162]
[53 161]
[54 160]
[55 159]
[56 158]
[57 134]
[58 133]
[59 132]
[60 131]
[61 130]
[62 129]
[63 125]
[64 124]
[65 123]
[66 122]
[67 121]
[73 120]
[74 119]
[75 118]
[77 116]
[78 115]
[79 114]
[80 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
