%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[31.78497887 813.17498779]
[16.78692436 812.50457764]
[1.93364418 810.32031250]
[-12.62244415 806.64453125]
[-26.73197174 801.51501465]
[-40.25014877 794.98431396]
[-53.03826141 787.11950684]
[-64.96508026 778.00128174]
[-75.90821075 767.72320557]
[-85.75537109 756.39074707]
[-94.40550232 744.12017822]
[-101.76984406 731.03747559]
[-107.77282715 717.27685547]
[-112.35284424 702.97949219]
[-115.46291351 688.29211426]
[-117.07109833 673.36547852]
[-117.16091156 658.35272217]
[-115.73143005 643.40789795]
[-112.79730988 628.68438721]
[-108.38867950 614.33325195]
[-102.55076599 600.50177002]
[-95.34347534 587.33190918]
[-86.84077454 574.95874023]
[-77.12990570 563.50927734]
[-66.31053162 553.10101318]
[-54.49365997 543.84075928]
[-41.80056000 535.82348633]
[-28.36148643 529.13153076]
[-14.31434155 523.83355713]
[0.19672623 519.98388672]
[15.02280998 517.62207031]
[30.01177025 516.77227783]
[30.68155479 501.78723145]
[31.35133934 486.80221558]
[32.02112579 471.81716919]
[32.69091034 456.83212280]
[33.36069489 441.84707642]
[34.03047943 426.86206055]
[34.70026779 411.87701416]
[25.31893158 423.58129883]
[11.37849426 429.11883545]
[-3.47704864 427.04208374]
[-15.36449432 417.89395142]
[-21.17649269 404.06570435]
[-19.39380264 389.17199707]
[-10.48241234 377.10604858]
[3.22826004 371.02185059]
[18.15427780 372.50979614]
[30.39401627 381.18093872]
[36.74787903 394.76779175]
[39.63315201 380.04791260]
[42.51842499 365.32803345]
[45.40369797 350.60812378]
[48.28897095 335.88824463]
[51.17424393 321.16833496]
[54.05951309 306.44845581]
[56.94478607 291.72857666]
[59.83005905 277.00866699]
[54.68535614 263.03079224]
[64.93265533 250.97660828]
[67.70826721 236.23564148]
[70.37406158 221.47442627]
[73.03985596 206.71321106]
[61.58146667 197.19633484]
[56.39061356 183.12825012]
[58.95532227 168.25247192]
[68.68548584 156.58111572]
[83.04486847 151.31277466]
[85.71067047 136.55155945]
[88.37646484 121.79033661]
[91.04225922 107.02912140]
[79.78491211 116.94235229]
[64.97150421 119.30091858]
[51.19211960 113.37397766]
[42.71645355 100.99806976]
[42.17078781 86.00799561]
[49.72420120 73.04859924]
[63.03618240 66.13549042]
[77.98187256 67.41076660]
[89.93019104 76.47927094]
[95.17883301 90.53128815]
[99.79283905 76.25855255]
[96.67562103 60.74747849]
[107.95269775 51.01727676]
[112.56670380 36.74454498]
[117.18071747 22.47181129]
[116.84275055 13.34363556]
[121.97113037 8.02183437]
[126.79712677 -6.18062162]
[126.59510803 -15.31281757]
[131.80213928 -20.55767632]
[134.46794128 -35.31889343]
[134.69126892 -50.31723022]
[134.91459656 -65.31556702]
[127.38362122 -79.22940826]
[135.30955505 -91.84007263]
[135.53288269 -106.83840942]
[135.75621033 -121.83674622]
[121.67559052 -127.50248718]
[110.59517670 -137.87500000]
[104.01351166 -151.55148315]
[102.82070160 -166.68229675]
[107.17807007 -181.22113037]
[116.49631500 -193.20173645]
[129.51522827 -201.00381470]
[144.47409058 -203.57220459]
[159.34985352 -200.55957031]
[172.13069153 -192.37332153]
[181.08810425 -180.12060547]
[185.01066589 -165.45848083]
[183.36788940 -150.36987305]
[176.38192749 -136.89541626]
[164.99760437 -126.85741425]
[150.75454712 -121.61341858]
[150.53121948 -106.61508179]
[150.30789185 -91.61674500]
[157.85484314 -78.77568817]
[149.91293335 -65.09223938]
[149.68960571 -50.09390259]
[149.46627808 -35.09556580]
[156.38496399 -48.40465164]
[166.47328186 -59.50536728]
[179.06210327 -67.66143799]
[193.31646729 -72.33190918]
[208.29090881 -73.20700073]
[222.99226379 -70.22867584]
[236.44540405 -63.59446716]
[247.75807190 -53.74440384]
[256.17990112 -41.33180237]
[261.15234375 -27.17994690]
[262.34555054 -12.22747993]
[259.68038940 2.53385448]
[253.33366394 16.12499046]
[243.72630310 27.64447975]
[231.49552917 36.32826996]
[217.45257568 41.60040283]
[202.52885437 43.11119461]
[187.71420288 40.76043701]
[173.99121094 34.70405197]
[162.27011108 25.34373283]
[153.32827759 13.30032063]
[147.75881958 -0.62739164]
[145.93116760 -15.52075958]
[140.99958801 -1.35462403]
[136.17358398 12.84783173]
[131.45344543 27.08582115]
[126.83943939 41.35855484]
[122.22543335 55.63128662]
[125.67267609 70.12148285]
[114.06557465 80.87256622]
[109.45156097 95.14529419]
[105.80347443 109.69491577]
[103.13768005 124.45613098]
[100.47188568 139.21734619]
[97.80609131 153.97856140]
[109.41564178 163.93675232]
[114.44874573 178.27427673]
[111.64818573 193.10746765]
[101.86447906 204.47122192]
[87.80107117 209.37899780]
[85.13527679 224.14021301]
[82.46948242 238.90142822]
[84.02394867 247.90261841]
[79.65254211 253.86187744]
[84.59087372 268.89263916]
[74.54994965 279.89395142]
[71.66468048 294.61383057]
[68.77940369 309.33374023]
[65.89413452 324.05361938]
[63.00886154 338.77349854]
[60.12358856 353.49340820]
[57.23831558 368.21328735]
[54.35304260 382.93319702]
[51.46776962 397.65307617]
[49.68530655 412.54678345]
[49.01551819 427.53182983]
[48.34573364 442.51687622]
[47.67594910 457.50192261]
[47.00616455 472.48693848]
[46.33638000 487.47198486]
[45.66659546 502.45703125]
[44.99680710 517.44207764]
[59.85018539 519.62567139]
[74.40643311 523.30084229]
[88.51618958 528.42974854]
[102.03465271 534.95983887]
[114.82311249 542.82409668]
[126.75032806 551.94177246]
[137.69392395 562.21936035]
[147.54158020 573.55139160]
[156.19224548 585.82153320]
[163.55715942 598.90393066]
[169.56074524 612.66430664]
[174.14140320 626.96148682]
[177.25210571 641.64868164]
[178.86096191 656.57525635]
[178.95143127 671.58801270]
[177.52259827 686.53289795]
[174.58914185 701.25659180]
[170.18113708 715.60791016]
[164.34382629 729.43963623]
[157.13711548 742.60980225]
[148.63496399 754.98333740]
[138.92460632 766.43322754]
[128.10568237 776.84197998]
[116.28921509 786.10278320]
[103.59647369 794.12060547]
[90.15769196 800.81311035]
[76.11077881 806.11175537]
[61.59988022 809.96203613]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 182]
[33 181]
[34 180]
[35 179]
[36 178]
[37 177]
[38 176]
[39 175]
[50 174]
[51 173]
[52 172]
[53 171]
[54 170]
[55 169]
[56 168]
[57 167]
[58 166]
[60 164]
[61 162]
[62 161]
[63 160]
[68 155]
[69 154]
[70 153]
[71 152]
[81 151]
[82 150]
[84 148]
[85 147]
[86 146]
[88 145]
[89 144]
[91 143]
[92 120]
[93 119]
[94 118]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
