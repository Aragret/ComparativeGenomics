%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[159.55711365 678.56909180]
[159.15377808 663.52502441]
[161.69343567 648.69140625]
[167.07847595 634.63836670]
[175.10189819 621.90606689]
[185.45533752 610.98394775]
[197.74079895 602.29180908]
[211.48608398 596.16375732]
[208.16381836 581.53625488]
[204.84156799 566.90881348]
[201.51930237 552.28137207]
[198.19705200 537.65393066]
[194.87478638 523.02642822]
[182.17398071 515.33062744]
[178.59635925 500.54364014]
[186.75453186 487.27404785]
[176.39050293 476.57656860]
[180.87913513 461.40545654]
[177.55686951 446.77798462]
[174.23460388 432.15054321]
[170.91235352 417.52307129]
[158.31312561 405.30725098]
[163.90567017 387.76287842]
[160.36599731 373.18649292]
[156.82632446 358.61010742]
[153.28665161 344.03375244]
[149.74697876 329.45736694]
[146.20730591 314.88098145]
[142.66763306 300.30462646]
[139.12796021 285.72824097]
[128.96414185 279.16903687]
[125.89588165 267.05419922]
[132.09677124 255.74436951]
[128.77450562 241.11691284]
[125.34345245 226.51458740]
[121.80377960 211.93821716]
[118.26410675 197.36184692]
[114.72443390 182.78546143]
[110.96813202 168.26341248]
[106.99604034 153.79888916]
[96.16468048 143.57484436]
[99.97139740 128.21842957]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[85.56407928 75.75366974]
[74.44860840 64.49502563]
[78.53943634 50.17321396]
[74.56734467 35.70869064]
[60.19867706 30.15462875]
[51.95195770 17.35443306]
[52.81356430 2.33039737]
[62.24383926 -9.16777325]
[58.27174377 -23.63229752]
[54.56539536 -9.09740829]
[45.91817093 3.15924311]
[33.46776199 11.52508450]
[18.85223198 14.89944553]
[3.99450707 12.83837128]
[-9.15062332 5.61303139]
[-18.85369301 -5.82595730]
[-23.83809280 -19.97359848]
[-23.44804382 -34.96852493]
[-17.73486137 -48.83789825]
[-7.45021248 -59.75696564]
[6.05277967 -66.28913116]
[20.99756432 -67.57498169]
[35.41790009 -63.44533539]
[47.41653824 -54.44352341]
[55.41574097 -41.75167465]
[54.74595642 -56.73671341]
[54.07617188 -71.72175598]
[53.40638351 -86.70679474]
[52.73659897 -101.69183350]
[42.67913437 -90.56315613]
[27.83909225 -88.37841034]
[15.00113773 -96.13643646]
[10.03461075 -110.29035950]
[15.21014214 -124.36920166]
[28.16154671 -131.93630981]
[42.96762085 -129.53210449]
[52.85990143 -118.25401306]
[53.75271606 -133.22741699]
[46.85053253 -147.46365356]
[55.33165741 -159.70783997]
[56.22447205 -174.68124390]
[49.32229233 -188.91748047]
[57.80341339 -201.16165161]
[58.69623184 -216.13505554]
[59.58904648 -231.10845947]
[60.48186111 -246.08186340]
[61.37467957 -261.05526733]
[62.04446411 -276.04031372]
[54.72147751 -290.06472778]
[62.83428574 -302.55599976]
[63.28089142 -317.54934692]
[63.72749710 -332.54269409]
[64.17410278 -347.53604126]
[64.62070465 -362.52938843]
[50.74198914 -368.73016357]
[40.29628754 -379.77352905]
[34.87649536 -393.97543335]
[35.30909729 -409.17022705]
[41.52811813 -423.04077148]
[52.58520889 -433.47192383]
[66.79423523 -438.87304688]
[81.98843384 -438.42044067]
[95.85079193 -432.18319702]
[106.26740265 -421.11239624]
[111.64981079 -406.89627075]
[111.17723846 -391.70266724]
[104.92174530 -377.84854126]
[93.83724976 -367.44650269]
[79.61405945 -362.08279419]
[79.16744995 -347.08944702]
[78.72084808 -332.09609985]
[78.27423859 -317.10275269]
[77.82763672 -302.10940552]
[85.18256378 -289.15740967]
[77.03781128 -275.59371948]
[79.60268402 -271.56500244]
[79.66397858 -265.88229370]
[76.34808350 -260.16244507]
[75.45526886 -245.18905640]
[74.56245422 -230.21565247]
[73.66963959 -215.24224854]
[72.77681732 -200.26884460]
[79.74285889 -187.10359192]
[71.19787598 -173.78842163]
[70.30506134 -158.81501770]
[77.27110291 -145.64978027]
[68.72612000 -132.33460999]
[67.83330536 -117.36119843]
[67.72164154 -102.36161804]
[68.39142609 -87.37657928]
[69.06121063 -72.39154053]
[69.73099518 -57.40650177]
[70.40077972 -42.42146301]
[72.73626709 -27.60439301]
[76.70835876 -13.13986969]
[90.68827820 -8.07036018]
[99.10192108 4.40660191]
[98.54890442 19.62328911]
[89.03186798 31.73659325]
[93.00395966 46.20111847]
[103.83531952 56.42515945]
[100.02860260 71.78157043]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[114.43592072 124.24633026]
[125.55139160 135.50497437]
[121.46056366 149.82678223]
[125.43265533 164.29130554]
[129.86042786 169.20112610]
[130.97645569 174.77351379]
[129.30081177 179.24578857]
[132.84048462 193.82217407]
[136.38015747 208.39854431]
[139.91983032 222.97491455]
[144.98593140 230.57572937]
[143.40197754 237.79464722]
[146.72422791 252.42211914]
[159.54487610 265.63998413]
[153.70434570 282.18856812]
[157.24401855 296.76495361]
[160.78369141 311.34130859]
[164.32336426 325.91769409]
[167.86303711 340.49407959]
[171.40270996 355.07043457]
[174.94238281 369.64682007]
[178.48205566 384.22320557]
[189.07084656 391.58798218]
[191.71896362 403.80154419]
[185.53981018 414.20080566]
[188.86207581 428.82827759]
[192.18432617 443.45571899]
[195.50659180 458.08319092]
[206.10824585 469.82693481]
[201.38198853 483.95181274]
[214.47177124 492.39544678]
[217.63264465 507.27709961]
[209.50224304 519.70416260]
[212.82450867 534.33166504]
[216.14675903 548.95910645]
[219.46902466 563.58654785]
[222.79129028 578.21405029]
[226.11354065 592.84149170]
[241.15739441 592.43084717]
[255.99224854 594.96331787]
[270.04788208 600.34149170]
[282.78405762 608.35876465]
[293.71121216 618.70690918]
[302.40933228 630.98809814]
[308.54406738 644.73040771]
[311.87966919 659.40557861]
[312.28787231 674.44952393]
[309.75302124 689.28393555]
[304.37252808 703.33874512]
[296.35324097 716.07360840]
[286.00332642 726.99908447]
[273.72067261 735.69519043]
[259.97738647 741.82769775]
[245.30168152 745.16094971]
[230.25770569 745.56671143]
[215.42366028 743.02947998]
[201.36976624 737.64666748]
[188.63619995 729.62530518]
[177.71240234 719.27368164]
[169.01826477 706.98962402]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 188]
[9 187]
[10 186]
[11 185]
[12 184]
[13 183]
[16 180]
[18 178]
[19 177]
[20 176]
[21 175]
[23 172]
[24 171]
[25 170]
[26 169]
[27 168]
[28 167]
[29 166]
[30 165]
[33 163]
[34 162]
[35 160]
[36 159]
[37 158]
[38 157]
[39 154]
[40 153]
[42 151]
[43 150]
[45 148]
[46 147]
[48 145]
[49 144]
[53 140]
[54 139]
[70 138]
[71 137]
[72 136]
[73 135]
[74 134]
[82 133]
[83 132]
[85 130]
[86 129]
[88 127]
[89 126]
[90 125]
[91 124]
[92 123]
[93 120]
[95 118]
[96 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
