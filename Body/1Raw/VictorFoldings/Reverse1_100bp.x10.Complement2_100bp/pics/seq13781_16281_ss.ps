%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAAAAUAAAAUUCAAACAACCAAUCCAUCAACUCCAGAUCCCGACAAUCUUCAGGAUCCUUUCACUGUCGCUCCCGACACUCAAAAUCCAUCUCCCCCxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[84.49211884 636.72766113]
[70.29645538 641.60699463]
[55.71113968 645.15570068]
[40.86060715 647.34344482]
[25.87156105 648.15161133]
[10.87188721 647.57336426]
[-4.01044130 645.61352539]
[-18.64845085 642.28887939]
[-32.91725159 637.62774658]
[-46.69510651 631.66992188]
[-59.86445999 624.46630859]
[-72.31295776 616.07824707]
[-83.93439484 606.57733154]
[-94.62961578 596.04467773]
[-104.30736542 584.57012939]
[-112.88508606 572.25152588]
[-120.28958130 559.19403076]
[-126.45768738 545.50903320]
[-131.33677673 531.31329346]
[-134.88520813 516.72790527]
[-137.07273865 501.87734985]
[-137.88067627 486.88830566]
[-137.30213928 471.88864136]
[-135.34205627 457.00634766]
[-132.01715088 442.36837769]
[-127.35580444 428.09967041]
[-121.39777374 414.32189941]
[-114.19389343 401.15267944]
[-105.80562592 388.70431519]
[-96.30455017 377.08303833]
[-85.77170563 366.38800049]
[-74.29697418 356.71041870]
[-61.97825241 348.13290405]
[-48.92063904 340.72863770]
[-35.23554230 334.56076050]
[-21.03971481 329.68191528]
[-6.45427942 326.13369751]
[8.39632607 323.94644165]
[23.38539886 323.13873291]
[38.38505173 323.71752930]
[53.26731491 325.67785645]
[56.58957672 311.05041504]
[59.91183472 296.42294312]
[63.23409653 281.79547119]
[65.89988708 267.03427124]
[67.90390015 252.16874695]
[69.90792084 237.30320740]
[71.91193390 222.43768311]
[70.07641602 219.42716980]
[69.60788727 215.37802124]
[70.97860718 210.94244385]
[74.35173035 206.95883179]
[77.01752472 192.19761658]
[79.57335663 177.41696167]
[82.01908112 162.61769104]
[76.46048737 148.79917908]
[86.34434509 136.44523621]
[88.79006958 121.64596558]
[91.23580170 106.84669495]
[78.44282532 114.67866516]
[63.82715225 111.30492401]
[55.76130295 98.65810394]
[58.86576462 83.98287201]
[71.36215973 75.68587494]
[86.09197998 78.52000427]
[94.61711884 90.86081696]
[98.37342072 76.33876038]
[102.02150726 61.78913879]
[105.56118011 47.21276474]
[109.10085297 32.63639069]
[112.64052582 18.06001282]
[100.55947876 6.77107859]
[95.84695435 -8.97972298]
[99.69847107 -24.86628151]
[110.97076416 -36.57487869]
[126.51898956 -40.97547531]
[129.84124756 -55.60293198]
[133.16349792 -70.23039246]
[136.48576355 -84.85785675]
[137.26708984 -99.83749390]
[135.48461914 -114.73120880]
[133.70214844 -129.62492371]
[131.91969299 -144.51864624]
[130.13722229 -159.41235352]
[128.35475159 -174.30607605]
[125.22472382 -178.48339844]
[124.12044525 -182.99270630]
[124.82915497 -187.00677490]
[126.84059906 -189.90270996]
[125.72495270 -204.86116028]
[124.60930634 -219.81961060]
[123.49365997 -234.77806091]
[108.69197845 -237.74670410]
[95.24063110 -244.59973145]
[84.13780975 -254.82859802]
[76.20740509 -267.67428589]
[72.03791046 -282.18350220]
[71.93872833 -297.27963257]
[75.91722107 -311.84237671]
[83.67815399 -324.79113770]
[94.64562225 -335.16503906]
[108.00576019 -342.19421387]
[122.76715851 -345.35705566]
[137.83442688 -344.41891479]
[152.08946228 -339.44937134]
[164.47445679 -330.81719971]
[174.07035828 -319.16296387]
[180.16510010 -305.35150146]
[182.30638123 -290.40768433]
[180.33534241 -275.44046021]
[174.39820862 -261.56051636]
[164.93559265 -249.79779053]
[152.64965820 -241.02520752]
[138.45210266 -235.89370728]
[139.56776428 -220.93525696]
[140.68341064 -205.97680664]
[141.79905701 -191.01835632]
[143.24847412 -176.08854675]
[145.03094482 -161.19482422]
[146.81340027 -146.30110168]
[148.59587097 -131.40739441]
[150.37834167 -116.51367188]
[152.16079712 -101.61995697]
[157.20011902 -115.74813080]
[165.55226135 -128.20773315]
[176.70646667 -138.23687744]
[189.98066711 -145.22225952]
[204.56314087 -148.73670959]
[219.56216431 -148.56535339]
[234.06054688 -144.71862793]
[247.17167664 -137.43179321]
[258.09384155 -127.15043640]
[266.15911865 -114.50325012]
[270.87432861 -100.26363373]
[271.95114136 -85.30233002]
[269.32369995 -70.53424072]
[263.15264893 -56.86243439]
[253.81539917 -45.12294769]
[241.88288879 -36.03365326]
[228.08480835 -30.15036774]
[213.26492310 -27.83285522]
[198.32945251 -29.22283363]
[184.19174194 -34.23530197]
[171.71627808 -42.56374741]
[161.66596985 -53.69888687]
[154.65538025 -66.95979309]
[151.11322021 -81.53559113]
[147.79096985 -66.90813446]
[144.46870422 -52.28067398]
[141.14645386 -37.65321350]
[151.75753784 -29.05544281]
[157.65734863 -16.66507912]
[157.64300537 -2.87562943]
[151.66032410 9.62179947]
[140.82539368 18.36369324]
[127.21690369 21.59968567]
[123.67723083 36.17605972]
[120.13755798 50.75243759]
[116.59788513 65.32881165]
[118.07419586 72.57051849]
[112.89547729 80.09506226]
[109.13918304 94.61711884]
[106.03507233 109.29241943]
[103.58934021 124.09169006]
[101.14361572 138.89096069]
[106.52727509 153.76802063]
[96.81835175 165.06341553]
[94.37262726 179.86268616]
[96.06093597 188.83973694]
[91.77873993 194.86341858]
[89.11294556 209.62463379]
[86.77745819 224.44169617]
[84.77344513 239.30722046]
[82.76943207 254.17276001]
[80.76541901 269.03826904]
[93.31953430 260.82888794]
[108.02917480 263.76596069]
[116.46799469 276.16705322]
[113.80184174 290.92819214]
[101.55802155 299.59356689]
[86.75034332 297.19924927]
[77.86155701 285.11773682]
[74.53929901 299.74520874]
[71.21703339 314.37268066]
[67.89477539 329.00012207]
[82.16373444 333.66076660]
[95.94178772 339.61810303]
[109.11138153 346.82131958]
[121.56015778 355.20895386]
[133.18191528 364.70947266]
[143.87748718 375.24176025]
[153.55561829 386.71603394]
[162.13374329 399.03430176]
[169.53868103 412.09155273]
[175.70724487 425.77633667]
[180.58679199 439.97192383]
[184.13572693 454.55718994]
[186.32374573 469.40768433]
[187.13217163 484.39672852]
[186.55413818 499.39639282]
[184.59454346 514.27874756]
[181.27014160 528.91680908]
[176.60926819 543.18572998]
[170.65168762 556.96368408]
[163.44825745 570.13311768]
[155.06040955 582.58178711]
[145.55970764 594.20336914]
[135.02722168 604.89874268]
[123.55281830 614.57672119]
[111.23438263 623.15460205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 185]
[42 184]
[43 183]
[44 182]
[45 175]
[46 174]
[47 173]
[48 172]
[52 171]
[53 170]
[54 168]
[55 167]
[57 165]
[58 164]
[59 163]
[66 162]
[67 161]
[68 159]
[69 158]
[70 157]
[71 156]
[76 150]
[77 149]
[78 148]
[79 147]
[80 123]
[81 122]
[82 121]
[83 120]
[84 119]
[85 118]
[89 117]
[90 116]
[91 115]
[92 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
