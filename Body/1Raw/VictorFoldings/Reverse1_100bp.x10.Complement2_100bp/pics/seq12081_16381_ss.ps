%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGUCUAAGUGUUAGACUACAAAACCAAUUUGAUAUAAAUGUUCUCCUUUUGGGCCAUUACUACAGCCCCAACUCCCUAUCCUCCUCUUACCCCCUAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[23.34086609 581.47308350]
[8.48180199 583.75439453]
[-6.55078793 583.62249756]
[-21.36752319 581.08074951]
[-35.58461380 576.19500732]
[-48.83380508 569.09179688]
[-60.77191162 559.95520020]
[-71.08969879 549.02178955]
[-79.51992798 536.57476807]
[-85.84422302 522.93664551]
[-89.89876556 508.46054077]
[-91.57855225 493.52151489]
[-90.84004974 478.50650024]
[-87.70240784 463.80441284]
[-82.24687958 449.79608154]
[-74.61479187 436.84436035]
[-65.00382233 425.28469849]
[-53.66292953 415.41656494]
[-40.88586426 407.49551392]
[-27.00358200 401.72677612]
[-12.37566757 398.25976562]
[2.61897945 397.18423462]
[3.95721364 382.24404907]
[5.29544783 367.30386353]
[6.63368225 352.36367798]
[0.06270688 338.99688721]
[9.00034428 325.94201660]
[10.33857822 311.00183105]
[11.67681217 296.06164551]
[3.84842801 308.85681152]
[-6.77985573 319.44171143]
[-19.60695648 327.21765137]
[-33.90744400 331.74490356]
[-48.87255096 332.76745605]
[-63.65592957 330.22744751]
[-77.42150879 324.26849365]
[-89.39077759 315.22766113]
[-98.88681793 303.61624146]
[-105.37258148 290.09091187]
[-108.48126221 275.41656494]
[-108.03705597 260.42315674]
[-104.06508636 245.95858765]
[-96.78997803 232.84094238]
[-86.62318420 221.81205750]
[-74.13967133 213.49568176]
[-60.04546356 208.36215210]
[-45.13763809 206.70178223]
[-30.25931740 208.60847473]
[-16.25193405 213.97441101]
[-3.90767813 222.49610901]
[6.07532454 233.69163513]
[13.13248634 246.92781067]
[16.86469078 261.45608521]
[17.06074905 276.45587158]
[23.54024506 262.92752075]
[30.01973915 249.39916992]
[36.49923706 235.87083435]
[42.97873306 222.34248352]
[49.45822906 208.81413269]
[42.04449463 197.71104431]
[41.07740784 184.28684998]
[46.91624832 172.04032898]
[58.13243866 164.21629333]
[71.85750580 162.94609070]
[78.53769684 149.51571655]
[83.67965698 135.42457581]
[87.21932983 120.84820557]
[90.75900269 106.27182770]
[94.19006348 91.66950226]
[97.51232910 77.04204559]
[100.83458710 62.41458511]
[104.15684509 47.78712463]
[97.33151245 28.81932640]
[111.07205963 15.21475697]
[113.95733643 0.49486569]
[116.84260559 -14.22502613]
[119.72788239 -28.94491768]
[107.12363434 -37.39528275]
[98.73754120 -49.99355698]
[95.82159424 -64.80270386]
[98.78957367 -79.56003571]
[107.15867615 -92.02289581]
[119.62773895 -100.30950165]
[134.27943420 -103.18304443]
[137.16470337 -117.90293884]
[140.04997253 -132.62283325]
[142.93524170 -147.34271240]
[145.82052612 -162.06260681]
[148.70579529 -176.78250122]
[138.31416321 -188.15440369]
[136.63092041 -203.28782654]
[144.09326172 -216.35600281]
[157.65740967 -222.45124817]
[160.54267883 -237.17114258]
[163.42794800 -251.89103699]
[165.87368774 -266.69030762]
[167.87770081 -281.55581665]
[169.88171387 -296.42135620]
[171.88572693 -311.28689575]
[158.01878357 -317.25433350]
[146.27677917 -326.74264526]
[137.53106689 -339.04772949]
[132.43061829 -353.25643921]
[131.35392761 -368.31445312]
[134.38088989 -383.10430908]
[141.28689575 -396.52853394]
[151.55946350 -407.59094238]
[164.43629456 -415.47064209]
[178.96185303 -419.58291626]
[194.05824280 -419.62258911]
[208.60520935 -415.58670044]
[221.52326965 -407.77478027]
[231.85383606 -396.76651001]
[238.83029175 -383.37875366]
[241.93493652 -368.60501099]
[240.93739319 -353.54156494]
[235.91168213 -339.30621338]
[227.23075867 -326.95535278]
[215.53877258 -317.40545654]
[201.70338440 -311.36523438]
[186.75125122 -309.28286743]
[184.74723816 -294.41735840]
[182.74322510 -279.55181885]
[180.73921204 -264.68627930]
[182.32958984 -262.37786865]
[183.10139465 -259.30038452]
[182.75712585 -255.76245117]
[181.11639404 -252.17462158]
[178.14784241 -249.00575256]
[175.26257324 -234.28587341]
[172.37730408 -219.56597900]
[182.63664246 -208.80104065]
[184.61331177 -193.88270569]
[177.34146118 -180.50459290]
[163.42568970 -173.89723206]
[160.54040527 -159.17733765]
[157.65513611 -144.45744324]
[154.76986694 -129.73754883]
[151.88459778 -115.01766205]
[148.99932861 -100.29777527]
[161.48199463 -92.10557556]
[169.90002441 -79.72484589]
[172.94485474 -65.02471924]
[170.12203979 -50.23894119]
[161.83113098 -37.62646866]
[149.30949402 -29.12635422]
[134.44776917 -26.05964470]
[131.56250000 -11.33975315]
[128.67723083 3.38013840]
[125.79195404 18.10002899]
[132.23229980 26.03318787]
[133.26452637 36.41985321]
[128.30758667 45.85430908]
[118.78430176 51.10938263]
[115.46204376 65.73684692]
[112.13978577 80.36430359]
[108.81752777 94.99176025]
[110.24511719 102.92488861]
[105.33538055 109.81150055]
[101.79570770 124.38787842]
[98.25603485 138.96424866]
[108.54523468 128.04946899]
[122.05094910 121.52294159]
[136.99627686 120.24332428]
[151.41488647 124.37898254]
[163.40977478 133.38580322]
[171.40278625 146.07876587]
[174.34234619 160.78791809]
[171.84165955 175.57800293]
[164.22976685 188.50312805]
[152.50811768 197.86279297]
[138.21891785 202.42553711]
[123.24214172 201.59107971]
[109.54825592 195.46920776]
[98.93891907 184.86534119]
[92.80996704 171.17460632]
[91.96807861 156.19590759]
[85.28787994 169.62628174]
[93.31562805 184.51425171]
[90.91148376 201.08897400]
[79.21896362 212.84680176]
[62.98657227 215.29364014]
[56.50707626 228.82197571]
[50.02758026 242.35032654]
[43.54808426 255.87867737]
[37.06858826 269.40701294]
[30.58909416 282.93536377]
[26.61699677 297.39987183]
[25.27876282 312.34005737]
[23.94052887 327.28024292]
[30.41578484 341.71569824]
[21.57386780 353.70190430]
[20.23563385 368.64208984]
[18.89739799 383.58227539]
[17.55916405 398.52246094]
[32.12397385 402.24569702]
[45.90287018 408.25723267]
[58.53894043 416.40127563]
[69.70488739 426.46694946]
[79.11148834 438.19351196]
[86.51507568 451.27722168]
[91.72389984 465.37915039]
[94.60301971 480.13403320]
[95.07786560 495.15969849]
[93.13614655 510.06692505]
[88.82814026 524.46960449]
[82.26545715 537.99468994]
[73.61806488 550.29180908]
[63.10996628 561.04241943]
[51.01334000 569.96807861]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 195]
[23 194]
[24 193]
[25 192]
[27 190]
[28 189]
[29 188]
[54 187]
[55 186]
[56 185]
[57 184]
[58 183]
[59 182]
[64 178]
[65 177]
[66 161]
[67 160]
[68 159]
[69 157]
[70 156]
[71 155]
[72 154]
[74 150]
[75 149]
[76 148]
[77 147]
[84 140]
[85 139]
[86 138]
[87 137]
[88 136]
[89 135]
[93 131]
[94 130]
[95 129]
[96 124]
[97 123]
[98 122]
[99 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
