%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[217.00221252 534.79052734]
[229.00852966 525.73754883]
[222.12911987 512.40814209]
[215.24969482 499.07870483]
[208.37028503 485.74926758]
[201.49087524 472.41983032]
[194.61146545 459.09039307]
[187.73205566 445.76098633]
[180.85264587 432.43154907]
[179.73631287 447.38995361]
[172.70422363 460.63946533]
[160.94140625 469.94732666]
[146.43011475 473.74499512]
[131.61573792 471.39248657]
[118.99477386 463.28625488]
[110.69406128 450.79232788]
[108.11242676 436.01614380]
[111.68492126 421.44778442]
[120.80950928 409.54223633]
[133.94854736 402.30581665]
[148.88786316 400.95797729]
[163.10993958 405.72586060]
[174.21905518 415.80734253]
[170.03204346 401.40356445]
[165.84503174 386.99978638]
[154.86267090 376.93814087]
[158.44032288 361.52673340]
[154.25331116 347.12295532]
[150.06629944 332.71917725]
[145.18067932 327.17370605]
[145.92588806 318.06970215]
[141.95379639 303.60519409]
[137.98170471 289.14065552]
[134.00959778 274.67614746]
[130.03750610 260.21160889]
[125.85049438 245.80783081]
[121.44950104 231.46798706]
[117.04850006 217.12814331]
[112.64750671 202.78829956]
[101.51654053 192.89128113]
[104.86435699 177.42832947]
[99.95798492 191.60321045]
[88.68646240 201.50033569]
[73.99614716 204.53259277]
[59.72704315 199.90736389]
[49.60906601 188.83367920]
[46.28702545 174.20616150]
[50.62930298 159.84841919]
[61.50082779 149.51353455]
[76.05981445 145.90301514]
[90.50057983 149.96063232]
[101.04789734 160.62498474]
[98.82278442 145.79093933]
[89.28466797 138.35112000]
[87.30947876 126.01084900]
[94.49465179 115.29935455]
[85.67522430 107.69284821]
[84.20520782 96.13948059]
[90.83880615 86.56677246]
[89.05633545 71.67305756]
[87.27387238 56.77933884]
[85.49140930 41.88562393]
[83.70893860 26.99190521]
[81.92647552 12.09818840]
[80.14400482 -2.79552937]
[76.01700592 -10.94449711]
[78.44757843 -17.92404556]
[76.88705444 -32.84265137]
[67.75604248 -45.76298904]
[74.12728119 -59.22614670]
[72.45573425 -74.13272095]
[70.67327118 -89.02643585]
[61.35090637 -101.80940247]
[67.52098846 -115.36592102]
[65.73851776 -130.25964355]
[53.59820175 -140.01927185]
[52.00269318 -155.14900208]
[61.38182449 -166.66281128]
[59.59935760 -181.55651855]
[57.81689453 -196.45024109]
[56.03442764 -211.34396362]
[54.25196075 -226.23767090]
[44.92959595 -239.02062988]
[51.09967804 -252.57716370]
[39.72371674 -267.05709839]
[47.25419235 -282.90826416]
[45.25017929 -297.77377319]
[43.24616623 -312.63931274]
[28.24905014 -314.11691284]
[13.99713802 -319.01382446]
[1.25901449 -327.06594849]
[-9.27836895 -337.83908081]
[-17.04674339 -350.75222778]
[-21.62717247 -365.10897827]
[-22.77263832 -380.13510132]
[-20.42136574 -395.02026367]
[-14.70015812 -408.96173096]
[-5.91755152 -421.20764160]
[5.45281792 -431.09762573]
[18.79776192 -438.09826660]
[33.39760208 -441.83209229]
[48.46498871 -442.09771729]
[63.18735886 -438.88079834]
[76.77075195 -432.35482788]
[88.48262787 -422.87176514]
[97.69139099 -410.94299316]
[103.90041351 -397.21182251]
[106.77485657 -382.41876221]
[106.15969849 -367.36160278]
[102.08812714 -352.85232544]
[94.77970123 -339.67343140]
[84.62857056 -328.53561401]
[72.18215942 -320.03952026]
[58.11169434 -314.64334106]
[60.11570740 -299.77780151]
[62.11972046 -284.91226196]
[71.54601288 -277.33126831]
[73.33724976 -264.96295166]
[65.99339294 -254.35961914]
[75.18827057 -242.64196777]
[69.14567566 -228.02014160]
[70.92814636 -213.12641907]
[72.71060944 -198.23271179]
[74.49308014 -183.33898926]
[76.27554321 -168.44526672]
[88.10679626 -159.46990967]
[90.12664032 -144.39096069]
[80.63224030 -132.04209900]
[82.41470337 -117.14839172]
[91.60957336 -105.43072510]
[85.56698608 -90.80890656]
[87.34945679 -75.91519165]
[91.26551819 -69.64731598]
[89.04588318 -60.78667068]
[98.06527710 -48.93341064]
[91.80566406 -34.40317535]
[93.36618805 -19.48456955]
[95.03772736 -4.57799530]
[96.82019043 10.31572247]
[98.60266113 25.20944023]
[100.38512421 40.10315704]
[102.16758728 54.99687576]
[103.95005798 69.89059448]
[105.73252106 84.78430939]
[116.12969971 97.94770813]
[109.36018372 113.29534149]
[120.95046234 127.60431671]
[113.65682220 143.56582642]
[115.88194275 158.39987183]
[119.20420074 173.02732849]
[130.64994812 183.95002747]
[126.98735046 198.38729858]
[131.38835144 212.72714233]
[135.78935242 227.06698608]
[140.19033813 241.40684509]
[144.76234436 246.18264771]
[146.04377747 251.71934509]
[144.50202942 256.23953247]
[148.47413635 270.70404053]
[152.44622803 285.16857910]
[156.41831970 299.63308716]
[160.39041138 314.09762573]
[164.47007751 328.53216553]
[168.65708923 342.93594360]
[172.84410095 357.33972168]
[184.12596130 368.43164062]
[180.24882507 382.81277466]
[184.43583679 397.21655273]
[188.62284851 411.62033081]
[194.18206787 425.55212402]
[201.06147766 438.88156128]
[207.94088745 452.21099854]
[214.82031250 465.54040527]
[221.69972229 478.86984253]
[228.57913208 492.19927979]
[235.45854187 505.52871704]
[242.33795166 518.85815430]
[256.67254639 514.31640625]
[271.56854248 512.26269531]
[286.59732056 512.75616455]
[301.32650757 515.78259277]
[315.33230591 521.25482178]
[328.21173096 529.01556396]
[339.59420776 538.84136963]
[349.15228271 550.44964600]
[356.61090088 563.50628662]
[361.75549316 577.63574219]
[364.43801880 592.43145752]
[364.58132935 607.46765137]
[362.18127441 622.31176758]
[357.30691528 636.53668213]
[350.09848022 649.73315430]
[340.76339722 661.52142334]
[329.57022095 671.56243896]
[316.84106445 679.56719971]
[302.94210815 685.30535889]
[288.27328491 688.61193848]
[273.25662231 689.39178467]
[258.32418823 687.62237549]
[243.90563965 683.35461426]
[230.41581726 676.71142578]
[218.24282837 667.88378906]
[207.73693848 657.12579346]
[199.20042419 644.74694824]
[192.87887573 631.10345459]
[188.95419312 616.58776855]
[187.53929138 601.61761475]
[188.67488098 586.62365723]
[192.32829285 572.03735352]
[198.39440918 558.27832031]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 177]
[3 176]
[4 175]
[5 174]
[6 173]
[7 172]
[8 171]
[9 170]
[23 169]
[24 168]
[25 167]
[27 165]
[28 164]
[29 163]
[31 162]
[32 161]
[33 160]
[34 159]
[35 158]
[36 155]
[37 154]
[38 153]
[39 152]
[41 150]
[52 149]
[53 148]
[56 146]
[59 144]
[60 143]
[61 142]
[62 141]
[63 140]
[64 139]
[65 138]
[67 137]
[68 136]
[70 134]
[71 132]
[72 131]
[74 129]
[75 128]
[78 125]
[79 124]
[80 123]
[81 122]
[82 121]
[84 119]
[86 116]
[87 115]
[88 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
