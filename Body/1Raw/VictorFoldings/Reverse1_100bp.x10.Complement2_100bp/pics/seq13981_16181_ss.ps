%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAACCCAACUCCACUACUACCUCCACCUCUAAACCACGACACUUUAACAAAAUCCAUUAUCGAAAAGAUCAGUCCAAUCCAGAUCCUCCUCAUCCCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[142.11437988 687.40380859]
[140.55386353 672.48516846]
[138.99333191 657.56658936]
[127.94686127 650.93298340]
[122.65913391 638.96960449]
[125.26557159 625.95355225]
[135.03431702 616.68072510]
[133.69607544 601.74053955]
[132.35784912 586.80035400]
[131.01960754 571.86016846]
[129.68138123 556.91998291]
[125.95366669 550.53826904]
[128.43612671 541.74761963]
[127.32048035 526.78918457]
[126.20483398 511.83071899]
[125.08918762 496.87228394]
[116.42670441 484.75573730]
[123.11616516 470.41830444]
[119.48387909 463.98181152]
[122.09695435 455.22912598]
[121.20413971 440.25573730]
[120.31131744 425.28231812]
[119.08434296 410.33258057]
[117.52381897 395.41397095]
[115.96330261 380.49536133]
[114.40277863 365.57678223]
[112.84225464 350.65817261]
[103.82286072 338.80490112]
[110.08247375 324.27465820]
[108.52194977 309.35607910]
[99.50255585 297.50280762]
[105.76216888 282.97256470]
[104.20165253 268.05395508]
[101.12152863 264.40405273]
[100.30157471 258.78045654]
[102.82356262 252.66889954]
[101.70791626 237.71044922]
[100.59226990 222.75199890]
[91.92978668 210.63545227]
[98.61924744 196.29803467]
[97.50360107 181.33956909]
[93.87131500 174.90309143]
[96.48439026 166.15039062]
[95.59156799 151.17698669]
[94.69875336 136.20358276]
[93.80593872 121.23017883]
[92.91312408 106.25677490]
[89.87996674 101.97729492]
[89.46044159 96.30302429]
[92.22339630 90.82552338]
[84.07864380 77.26184082]
[91.43357086 64.30984497]
[90.98696899 49.31649017]
[90.54035950 34.32314301]
[79.31916046 23.51932526]
[79.07982635 8.30757332]
[89.44876862 -2.32354355]
[89.00215912 -17.31689262]
[88.55555725 -32.31024170]
[88.10894775 -47.30359268]
[78.07019043 -62.74071884]
[86.98480988 -77.85681915]
[86.31502533 -92.84185791]
[77.96923065 -106.28278351]
[85.13050842 -119.34284973]
[84.46072388 -134.32788086]
[83.79093933 -149.31292725]
[82.67529297 -164.27137756]
[81.11476898 -179.18998718]
[71.98375702 -192.11032104]
[78.35498810 -205.57348633]
[76.79446411 -220.49208069]
[67.66345215 -233.41242981]
[74.03469086 -246.87557983]
[72.47416687 -261.79418945]
[63.34315109 -274.71453857]
[69.71438599 -288.17767334]
[68.15386200 -303.09628296]
[55.74007797 -309.08700562]
[47.96910095 -320.34002686]
[46.78269958 -333.85528564]
[52.38422394 -346.09323120]
[63.21329498 -353.90176392]
[61.87506104 -368.84194946]
[59.25230026 -372.30245972]
[57.99372482 -376.04150391]
[58.01939011 -379.59603882]
[59.10717392 -382.57653809]
[60.92908096 -384.70697021]
[60.48247528 -399.70031738]
[60.03586960 -414.69366455]
[59.58926392 -429.68704224]
[59.14265823 -444.68038940]
[56.73051834 -448.29086304]
[55.69672775 -452.09820557]
[55.93391800 -455.64489746]
[57.19717407 -458.55535889]
[59.14265823 -460.57357788]
[59.58926392 -475.56692505]
[60.03586960 -490.56030273]
[46.46389771 -497.54342651]
[37.27270126 -509.72888184]
[34.28720093 -524.69714355]
[38.10016632 -539.47631836]
[47.95453262 -551.13195801]
[61.89370728 -557.34985352]
[77.15006256 -556.89544678]
[90.69442749 -549.85888672]
[99.83756256 -537.63732910]
[102.76409912 -522.65740967]
[98.89295959 -507.89340210]
[88.99277496 -496.27664185]
[75.02922058 -490.11367798]
[74.58261108 -475.12033081]
[74.13600922 -460.12698364]
[74.13600922 -445.12698364]
[74.58261108 -430.13363647]
[75.02922058 -415.14028931]
[75.47582245 -400.14694214]
[75.92243195 -385.15359497]
[76.81524658 -370.18017578]
[78.15348053 -355.23999023]
[92.50463867 -347.26992798]
[99.34589386 -332.16500854]
[95.80064392 -315.79635620]
[83.07246399 -304.65679932]
[84.63298798 -289.73822021]
[93.65238190 -277.88494873]
[87.39276886 -263.35470581]
[88.95329285 -248.43611145]
[97.97268677 -236.58283997]
[91.71307373 -222.05261230]
[93.27359772 -207.13400269]
[102.29299164 -195.28074646]
[96.03337097 -180.75050354]
[97.59389496 -165.83189392]
[99.68409729 -163.96395874]
[101.16033173 -161.15551758]
[101.66065216 -157.63627625]
[100.91290283 -153.76258850]
[98.77597809 -149.98271179]
[99.44576263 -134.99766541]
[100.11554718 -120.01263428]
[108.41343689 -107.64353943]
[101.30006409 -93.51164246]
[101.96984863 -78.52660370]
[110.68220520 -70.13486481]
[111.36285400 -57.65605927]
[103.10230255 -47.75019836]
[103.54890442 -32.75685120]
[103.99551392 -17.76350021]
[104.44211578 -2.77014947]
[115.42545319 7.22494888]
[116.09195709 22.42397499]
[105.53371429 33.87653732]
[105.98031616 48.86988449]
[106.42692566 63.86323547]
[114.53973389 76.35449982]
[107.21674347 90.37892151]
[107.88652802 105.36396027]
[108.77934265 120.33736420]
[109.67215729 135.31077576]
[110.56497955 150.28417969]
[111.45779419 165.25758362]
[112.46205139 180.22392273]
[113.57769775 195.18237305]
[122.31998444 208.36885071]
[115.55072021 221.63635254]
[116.66637421 236.59480286]
[117.78202057 251.55325317]
[119.12025452 266.49343872]
[120.68077850 281.41204834]
[129.81179810 294.33239746]
[123.44055939 307.79553223]
[125.00107574 322.71414185]
[134.13209534 335.63449097]
[127.76085663 349.09765625]
[129.32138062 364.01623535]
[130.88189697 378.93484497]
[132.44242859 393.85345459]
[134.00294495 408.77206421]
[137.07044983 412.99551392]
[138.10746765 417.52075195]
[137.33906555 421.52383423]
[135.28472900 424.38949585]
[136.17753601 439.36291504]
[137.07035828 454.33630371]
[138.07461548 469.30267334]
[146.81689453 482.48913574]
[140.04763794 495.75662231]
[141.16328430 510.71508789]
[142.27893066 525.67352295]
[143.39457703 540.63201904]
[144.62156677 555.58172607]
[145.95979309 570.52191162]
[147.29803467 585.46209717]
[148.63626099 600.40228271]
[149.97450256 615.34246826]
[163.60159302 626.31158447]
[165.05078125 643.40588379]
[153.91194153 656.00604248]
[155.47245789 670.92468262]
[157.03298950 685.84326172]
[170.53419495 693.49157715]
[176.93067932 707.62896729]
[173.76284790 722.81921387]
[162.24880981 733.22143555]
[146.81593323 734.83575439]
[133.39848328 727.04144287]
[127.15573883 712.83551025]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 203]
[2 202]
[3 201]
[7 198]
[8 197]
[9 196]
[10 195]
[11 194]
[13 193]
[14 192]
[15 191]
[16 190]
[18 188]
[20 187]
[21 186]
[22 185]
[23 181]
[24 180]
[25 179]
[26 178]
[27 177]
[29 175]
[30 174]
[32 172]
[33 171]
[36 170]
[37 169]
[38 168]
[40 166]
[41 165]
[43 164]
[44 163]
[45 162]
[46 161]
[47 160]
[50 159]
[52 157]
[53 156]
[54 155]
[57 152]
[58 151]
[59 150]
[60 149]
[62 146]
[63 145]
[65 143]
[66 142]
[67 141]
[68 136]
[69 135]
[71 133]
[72 132]
[74 130]
[75 129]
[77 127]
[78 126]
[83 122]
[84 121]
[89 120]
[90 119]
[91 118]
[92 117]
[93 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
