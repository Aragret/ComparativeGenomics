%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCUUCAGUCCCAAUCCCACCAAUAUCAUCACACGUACCAAUAAUGAAAAUAAACCUCAACGUGGUUUUAAAAACCCCGGAUUCUGGUUACCUAUCGAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[69.11381531 597.53991699]
[73.46230316 582.97424316]
[83.05770111 571.18457031]
[96.43679047 563.96875000]
[94.87626648 549.05010986]
[93.31574249 534.13153076]
[91.75521851 519.21289062]
[90.19470215 504.29431152]
[87.11458588 500.64437866]
[86.29462433 495.02081299]
[88.81661987 488.90924072]
[87.70096588 473.95080566]
[86.58531952 458.99234009]
[85.46967316 444.03390503]
[71.23876190 435.85104370]
[64.62316132 420.64593506]
[68.41172028 404.33190918]
[81.30433655 393.38308716]
[79.96610260 378.44290161]
[78.62786865 363.50271606]
[74.90015411 357.12103271]
[77.38262177 348.33038330]
[76.26697540 333.37194824]
[64.84829712 323.87722778]
[63.50377655 308.72314453]
[73.54011536 296.81054688]
[72.42446136 281.85208130]
[65.54444122 295.18121338]
[53.88890839 304.62304688]
[39.42201233 308.58651733]
[24.58168983 306.40365601]
[11.86879158 298.44238281]
[3.42566538 286.04425049]
[0.67512572 271.29858398]
[4.08068705 256.69030762]
[13.06845284 244.68112183]
[26.12382698 237.29484558]
[41.04674911 235.77615356]
[55.32244492 240.38099670]
[66.54520416 250.33335876]
[72.82417297 263.95773315]
[74.60664368 249.06399536]
[76.38910675 234.17028809]
[78.17156982 219.27656555]
[79.95404053 204.38284302]
[81.73650360 189.48913574]
[83.51897430 174.59541321]
[69.28428650 169.94744873]
[56.22972870 162.61201477]
[44.85688400 152.87094116]
[35.60269928 141.09851074]
[28.82274055 127.74703217]
[24.77749443 113.32947540]
[23.62238884 98.39978790]
[25.40180206 83.53157806]
[30.04736710 69.29610443]
[37.38059616 56.24031067]
[47.11973953 44.86581802]
[58.89060211 35.60964584]
[72.24094391 28.82742882]
[86.65781403 24.77974892]
[101.58731079 23.62211990]
[103.36977386 8.72840214]
[105.15224457 -6.16531515]
[106.93470764 -21.05903244]
[92.84562683 -26.40537071]
[80.45308685 -34.96325302]
[70.47499084 -46.23165131]
[63.48809814 -59.55266571]
[59.89469528 -74.14995575]
[59.89945221 -89.17396545]
[63.49774551 -103.75135803]
[70.47619629 -117.03583527]
[80.42532349 -128.25718689]
[92.76353455 -136.76602173]
[106.77117157 -142.07131958]
[121.63245392 -143.86872864]
[123.41492462 -158.76245117]
[115.77719116 -175.51794434]
[126.83551788 -189.14439392]
[128.39604187 -204.06300354]
[129.95655823 -218.98161316]
[127.61765289 -225.16554260]
[128.60469055 -230.76222229]
[131.79211426 -234.31881714]
[133.79612732 -249.18434143]
[135.80014038 -264.04986572]
[137.80415344 -278.91540527]
[139.47569275 -293.82196045]
[140.81391907 -308.76214600]
[142.15216064 -323.70233154]
[143.49038696 -338.64251709]
[144.82862854 -353.58270264]
[146.16685486 -368.52288818]
[147.50509644 -383.46307373]
[148.50935364 -398.42944336]
[149.17913818 -413.41445923]
[149.84892273 -428.39950562]
[150.51870728 -443.38455200]
[136.61302185 -449.46701050]
[125.84635162 -460.16482544]
[119.67480469 -474.03118896]
[118.93302917 -489.19082642]
[123.72133636 -503.59347534]
[133.39215088 -515.29132080]
[146.63758850 -522.70233154]
[161.66630554 -524.82421875]
[176.44577026 -521.36999512]
[188.97721863 -512.80682373]
[197.56584167 -500.29284668]
[201.05010986 -485.52044678]
[198.95881653 -470.48745728]
[191.57478333 -457.22695923]
[179.89663696 -447.53237915]
[165.50375366 -442.71475220]
[164.83396912 -427.72970581]
[164.16418457 -412.74468994]
[163.49438477 -397.75964355]
[165.59117126 -394.92489624]
[166.41908264 -390.93368530]
[165.44955444 -386.39349365]
[162.44528198 -382.12484741]
[161.10704041 -367.18466187]
[159.76881409 -352.24447632]
[158.43057251 -337.30429077]
[157.09234619 -322.36410522]
[155.75410461 -307.42391968]
[154.41587830 -292.48373413]
[156.38398743 -289.55819702]
[157.03285217 -285.53399658]
[155.86155701 -281.04162598]
[152.66967773 -276.91137695]
[150.66566467 -262.04586792]
[148.66165161 -247.18032837]
[146.65763855 -232.31480408]
[144.87516785 -217.42108154]
[143.31465149 -202.50247192]
[141.75411987 -187.58387756]
[149.12524414 -177.99256897]
[147.94725037 -165.55087280]
[138.30863953 -156.97998047]
[136.52616882 -142.08625793]
[150.54359436 -136.83267212]
[162.90370178 -128.37171936]
[172.88557434 -117.19163513]
[179.90571594 -103.93941498]
[183.55224609 -89.38335419]
[183.60896301 -74.36852264]
[180.06825256 -59.76770020]
[173.13169861 -46.43062592]
[163.19865417 -35.13457108]
[150.84326172 -26.53902435]
[136.78123474 -21.14719963]
[121.82843018 -19.27656555]
[120.04595947 -4.38284922]
[118.26349640 10.51086807]
[116.48102570 25.40458488]
[130.71571350 30.05255508]
[143.77026367 37.38799286]
[155.14311218 47.12905502]
[164.39729309 58.90148163]
[171.17726135 72.25296783]
[175.22250366 86.67052460]
[176.37760925 101.60021210]
[174.59820557 116.46842194]
[169.95263672 130.70390320]
[162.61940002 143.75968933]
[152.88026428 155.13418579]
[141.10939026 164.39035034]
[127.75905609 171.17257690]
[113.34218597 175.22024536]
[98.41268921 176.37788391]
[96.63022614 191.27159119]
[94.84775543 206.16531372]
[93.06529236 221.05903625]
[91.28282166 235.95274353]
[89.50035858 250.84646606]
[87.71789551 265.74017334]
[87.38291931 280.73645020]
[88.49856567 295.69488525]
[100.19098663 305.98687744]
[101.10932159 321.17279053]
[91.22543335 332.25628662]
[92.34107971 347.21475220]
[93.56805420 362.16448975]
[94.90628815 377.10467529]
[96.24452209 392.04483032]
[108.56773376 398.21972656]
[116.17031097 409.58718872]
[117.15536499 423.11862183]
[111.37225342 435.27178955]
[100.42812347 442.91824341]
[101.54376984 457.87670898]
[102.65942383 472.83514404]
[103.77507019 487.79360962]
[105.11330414 502.73379517]
[106.67382812 517.65240479]
[108.23435211 532.57098389]
[109.79487610 547.48962402]
[111.35539246 562.40820312]
[125.93812561 566.69915771]
[137.76557922 576.24798584]
[145.03417969 589.59851074]
[146.63549805 604.71484375]
[142.32533264 619.29193115]
[132.76098633 631.10681152]
[119.40093231 638.35784912]
[104.28247833 639.93927002]
[89.71109009 635.60992432]
[77.90879059 626.03002930]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 200]
[5 199]
[6 198]
[7 197]
[8 196]
[11 195]
[12 194]
[13 193]
[14 192]
[18 187]
[19 186]
[20 185]
[22 184]
[23 183]
[26 180]
[27 179]
[41 178]
[42 177]
[43 176]
[44 175]
[45 174]
[46 173]
[47 172]
[62 157]
[63 156]
[64 155]
[65 154]
[77 142]
[78 141]
[80 138]
[81 137]
[82 136]
[85 135]
[86 134]
[87 133]
[88 132]
[89 128]
[90 127]
[91 126]
[92 125]
[93 124]
[94 123]
[95 122]
[96 118]
[97 117]
[98 116]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
