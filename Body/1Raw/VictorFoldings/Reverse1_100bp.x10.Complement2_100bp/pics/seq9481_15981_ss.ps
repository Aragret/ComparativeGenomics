%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[74.88330078 382.70391846]
[77.52704620 397.57629395]
[75.87229156 412.59091187]
[70.05319214 426.53057861]
[60.54147339 438.26531982]
[48.10820389 446.84381104]
[33.76129913 451.57064819]
[18.66379738 452.06265259]
[4.03958130 448.27993774]
[-8.92582607 440.52911377]
[-19.18137741 429.43856812]
[-25.89570236 415.90731812]
[-28.52449989 401.03231812]
[-26.85466576 386.01937866]
[-21.02156448 372.08554077]
[-11.49806118 360.36038208]
[0.94381732 351.79437256]
[15.29546356 347.08197021]
[30.39345360 346.60513306]
[34.14975357 332.08306885]
[37.90605545 317.56100464]
[41.66235733 303.03894043]
[45.41865540 288.51687622]
[39.82514954 271.88320923]
[52.84117126 258.85766602]
[56.38084412 244.28128052]
[59.92051697 229.70491028]
[63.46018982 215.12854004]
[58.94475937 200.93487549]
[69.72008514 189.35026550]
[73.25975800 174.77389526]
[76.79943085 160.19752502]
[75.32312012 152.95581055]
[80.50183105 145.43127441]
[72.74504089 132.76763916]
[76.34758759 117.98669434]
[89.68296814 109.93651581]
[86.13245392 96.41299438]
[95.79496765 86.30718994]
[99.55126953 71.78512573]
[89.68732452 83.08568573]
[77.26439667 91.49227142]
[63.10644531 96.44731903]
[48.15252686 97.62217712]
[33.39447403 94.93891144]
[19.81114006 88.57549286]
[8.30345631 78.95399475]
[-0.36531353 66.71257782]
[-5.62020111 52.66315842]
[-7.11266804 37.73759079]
[-4.74372482 22.92583466]
[1.32950461 9.21030045]
[10.70420551 -2.49931049]
[22.75858688 -11.42634106]
[36.69312668 -16.97869492]
[51.58359528 -18.78810120]
[66.44235992 -16.73455238]
[80.28389740 -10.95425034]
[92.19013977 -1.83058238]
[101.37139893 10.03131104]
[107.21871185 23.84467316]
[109.34423828 38.69331360]
[107.60576630 53.59735489]
[115.83457184 41.05595398]
[124.06337738 28.51455307]
[126.15468597 19.62274361]
[132.50923157 15.84894848]
[140.92384338 3.43145323]
[149.33847046 -8.98604202]
[157.75308228 -21.40353775]
[166.16770935 -33.82103348]
[174.58232117 -46.23852921]
[181.06181335 -59.76687241]
[185.46281433 -74.10671997]
[189.86381531 -88.44657135]
[194.26481628 -102.78641510]
[186.62646484 -113.88011932]
[186.77000427 -127.15377045]
[194.41896057 -137.76393127]
[206.59909058 -141.96798706]
[211.21310425 -156.24072266]
[215.82710266 -170.51345825]
[220.44111633 -184.78617859]
[206.65272522 -190.72038269]
[193.48060608 -197.91967773]
[181.04054260 -206.32081604]
[169.44183350 -215.84996033]
[158.78642273 -226.42335510]
[149.16795349 -237.94808960]
[140.67095947 -250.32289124]
[133.37011719 -263.43899536]
[127.32956696 -277.18112183]
[122.60240936 -291.42852783]
[119.23018646 -306.05596924]
[117.24253845 -320.93493652]
[116.65692139 -335.93466187]
[117.47849274 -350.92330933]
[119.70003510 -365.76916504]
[123.30200958 -380.34173584]
[128.25277710 -394.51300049]
[134.50881958 -408.15838623]
[142.01515198 -421.15795898]
[150.70582581 -433.39752197]
[160.50445557 -444.76950073]
[171.32492065 -455.17391968]
[183.07212830 -464.51934814]
[195.64286804 -472.72369385]
[208.92663574 -479.71484375]
[222.80670166 -485.43130493]
[237.16107178 -489.82293701]
[251.86363220 -492.85104370]
[266.78512573 -494.48910522]
[281.79446411 -494.72265625]
[296.75970459 -493.54968262]
[311.54934692 -490.98046875]
[326.03341675 -487.03759766]
[340.08462524 -481.75573730]
[353.57949829 -475.18127441]
[366.39938354 -467.37203979]
[378.43170166 -458.39660645]
[389.57064819 -448.33389282]
[399.71835327 -437.27230835]
[408.78564453 -425.30908203]
[416.69281006 -412.54934692]
[423.37036133 -399.10522461]
[428.75967407 -385.09487915]
[432.81329346 -370.64141846]
[435.49566650 -355.87185669]
[436.78320312 -340.91604614]
[436.66458130 -325.90536499]
[435.14080811 -310.97174072]
[432.22534180 -296.24645996]
[427.94375610 -281.85885620]
[422.33370972 -267.93545532]
[415.44448853 -254.59854126]
[407.33663940 -241.96536255]
[398.08139038 -230.14694214]
[387.76013184 -219.24713135]
[376.46353149 -209.36172485]
[364.29086304 -200.57759094]
[351.34912109 -192.97195435]
[337.75204468 -186.61161804]
[323.61911011 -181.55250549]
[309.07452393 -177.83905029]
[294.24612427 -175.50392151]
[279.26422119 -174.56761169]
[264.26043701 -175.03837585]
[249.36669922 -176.91204834]
[234.71385193 -180.17218018]
[230.09983826 -165.89944458]
[225.48582458 -151.62670898]
[220.87182617 -137.35397339]
[229.16204834 -122.72145081]
[224.20674133 -106.29708099]
[208.60466003 -98.38541412]
[204.20365906 -84.04557037]
[199.80265808 -69.70572662]
[195.40167236 -55.36587524]
[205.85063171 -66.12779999]
[218.87988281 -73.56007385]
[233.46186829 -77.07655334]
[248.44660950 -76.39990997]
[262.65231323 -71.58351898]
[274.95870972 -63.00720978]
[284.39520264 -51.34735107]
[290.21765137 -37.52348709]
[291.96682739 -22.62582207]
[289.50479126 -7.82925367]
[283.02575684 5.69930267]
[273.04061890 16.89292717]
[260.33688354 24.86884499]
[245.91642761 28.99803925]
[230.91648865 28.95486832]
[216.52003479 24.74273491]
[203.86242676 16.69382477]
[193.94189453 5.44290972]
[187.54081726 -8.12271690]
[185.16400146 -22.93321228]
[186.99981689 -37.82390976]
[178.58520508 -25.40641403]
[170.17057800 -12.98891926]
[161.75596619 -0.57142365]
[153.34133911 11.84607220]
[144.92672729 24.26356697]
[136.60478210 36.74336243]
[128.37597656 49.28475952]
[120.14716339 61.82616043]
[114.07333374 75.54142761]
[110.31703186 90.06348419]
[113.86754608 103.58700562]
[104.20503235 113.69281006]
[111.96449280 127.19941711]
[107.94819641 141.87333679]
[95.02389526 149.18757629]
[91.37580872 163.73719788]
[87.83613586 178.31356812]
[84.29646301 192.88993835]
[88.55870819 208.12620544]
[78.03656006 218.66821289]
[74.49689484 233.24458313]
[70.95722198 247.82095337]
[67.41754913 262.39733887]
[73.44936371 273.79821777]
[70.20107269 285.86602783]
[59.94071579 292.27319336]
[56.18441391 306.79525757]
[52.42811584 321.31732178]
[48.67181396 335.83935547]
[44.91551208 350.36141968]
[57.88870239 358.09921265]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 209]
[20 208]
[21 207]
[22 206]
[23 205]
[25 202]
[26 201]
[27 200]
[28 199]
[30 197]
[31 196]
[32 195]
[34 194]
[37 191]
[39 189]
[40 188]
[63 187]
[64 186]
[65 185]
[67 184]
[68 183]
[69 182]
[70 181]
[71 180]
[72 179]
[73 158]
[74 157]
[75 156]
[76 155]
[80 152]
[81 151]
[82 150]
[83 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
