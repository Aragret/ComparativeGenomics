%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[240.07934570 355.02767944]
[250.05256653 343.79019165]
[261.49273682 334.05014038]
[253.45156860 321.38763428]
[245.41040039 308.72509766]
[237.36923218 296.06259155]
[229.32804871 283.40005493]
[221.28688049 270.73751831]
[212.87226868 258.32003784]
[204.09165955 246.15856934]
[195.31105042 233.99711609]
[186.53045654 221.83566284]
[177.48045349 209.87332153]
[168.16557312 198.11607361]
[158.85069275 186.35882568]
[144.07164001 184.90438843]
[134.45753479 173.11355591]
[136.08328247 157.62179565]
[126.76840973 145.86454773]
[117.45352173 134.10729980]
[108.13864136 122.35004425]
[98.82376099 110.59279633]
[88.49709320 99.71346283]
[77.24099731 89.79880524]
[65.98490143 79.88415527]
[54.72880173 69.96950531]
[43.47270584 60.05485535]
[32.21660995 50.14020538]
[25.82111168 48.46416092]
[21.83107376 44.41735840]
[20.77863693 39.75887680]
[9.82272816 29.51348686]
[15.11335659 43.54948425]
[17.07160187 58.42111206]
[15.59473991 73.34822845]
[10.76024246 87.54779816]
[2.82171774 100.27492523]
[-7.80439520 110.86197662]
[-20.56067276 118.75358582]
[-34.77794266 123.53575897]
[-49.71039963 124.95764160]
[-64.57471466 122.94464111]
[-78.59113312 117.60236359]
[-91.02438354 109.21104431]
[-101.22225189 98.21088409]
[-108.64975739 85.17891693]
[-112.91728973 70.79878998]
[-113.80097198 55.82484055]
[-111.25444794 41.04257965]
[-105.41130066 27.22745514]
[-96.57805634 15.10417938]
[-85.21808624 5.30871677]
[-71.92731476 -1.64508414]
[-57.40294266 -5.39243984]
[-42.40689850 -5.73677158]
[-27.72583580 -2.66001701]
[-14.12989712 3.67642403]
[-2.33112168 12.94132137]
[-8.81061745 -0.58702409]
[-15.29011345 -14.11536980]
[-21.76960945 -27.64371490]
[-28.24910545 -41.17206192]
[-34.72859955 -54.70040512]
[-41.30862808 -68.18013763]
[-47.98882294 -81.61051941]
[-54.66901779 -95.04089355]
[-61.34921265 -108.47126770]
[-68.02940369 -121.90164185]
[-74.70960236 -135.33201599]
[-88.99480438 -130.66824341]
[-103.80683899 -128.13418579]
[-118.82999420 -127.78388214]
[-133.74404907 -129.62478638]
[-148.23109436 -133.61767578]
[-161.98236084 -139.67742920]
[-174.70472717 -147.67488098]
[-186.12701416 -157.43955994]
[-196.00576782 -168.76335144]
[-204.13040161 -181.40487671]
[-210.32775879 -195.09468079]
[-214.46572876 -209.54096985]
[-216.45611572 -224.43580627]
[-216.25648499 -239.46171570]
[-213.87110901 -254.29841614]
[-209.35081482 -268.62966919]
[-202.79196167 -282.14999390]
[-194.33435059 -294.57122803]
[-184.15826416 -305.62857056]
[-172.48060608 -315.08636475]
[-159.55026245 -322.74301147]
[-145.64286804 -328.43530273]
[-131.05485535 -332.04193115]
[-116.09716034 -333.48596191]
[-101.08860779 -332.73669434]
[-86.34912109 -329.81002808]
[-72.19286346 -324.76840210]
[-58.92156982 -317.71923828]
[-46.81813049 -308.81280518]
[-36.14052200 -298.23892212]
[-27.11634445 -286.22302246]
[-19.93794441 -273.02117920]
[-14.75833225 -258.91482544]
[-11.68791103 -244.20460510]
[-10.79212666 -229.20410156]
[-12.09007263 -214.23301697]
[-15.55408382 -199.61048889]
[-21.11032486 -185.64817810]
[-28.64036369 -172.64370728]
[-37.98369598 -160.87425232]
[-48.94116974 -150.59069824]
[-61.27922440 -142.01222229]
[-54.59902954 -128.58183289]
[-47.91883469 -115.15146637]
[-41.23863983 -101.72108459]
[-34.55844879 -88.29071045]
[-27.87825203 -74.86033630]
[-22.08485603 -70.27140045]
[-21.20025444 -61.17990112]
[-14.72075939 -47.65155792]
[-8.24126339 -34.12321091]
[-1.76176775 -20.59486580]
[4.71772814 -7.06651974]
[11.19722366 6.46182585]
[20.06811905 18.55757713]
[31.02402878 28.80296898]
[42.13126373 38.88410950]
[53.38735962 48.79875946]
[64.64345551 58.71340942]
[75.89955139 68.62805939]
[87.15564728 78.54270935]
[98.41174316 88.45736694]
[94.32503510 74.02480316]
[96.81977081 59.23371506]
[105.41426086 46.94002914]
[118.44904327 39.51745987]
[133.40730286 38.39919281]
[147.40083313 43.80114746]
[157.72770691 54.68028641]
[162.39396667 68.93602753]
[160.49861145 83.81580353]
[152.40763855 96.44655609]
[139.68327332 104.38950348]
[124.78237915 106.11096954]
[110.58100891 101.27790833]
[119.89588928 113.03516388]
[129.21076965 124.79241180]
[138.52566528 136.54966736]
[147.84054565 148.30691528]
[163.29345703 150.26780701]
[172.57258606 162.32403564]
[170.60794067 177.04394531]
[179.92282104 188.80119324]
[189.23770142 200.55844116]
[194.09129333 202.47933960]
[197.39259338 205.74348450]
[198.88990784 209.53466797]
[198.69190979 213.05506897]
[207.47251892 225.21652222]
[216.25311279 237.37797546]
[225.03372192 249.53942871]
[229.05595398 251.17515564]
[232.04757690 253.74705505]
[233.84083557 256.81619263]
[234.42776489 259.93423462]
[233.94940186 262.69635010]
[241.99058533 275.35888672]
[250.03175354 288.02139282]
[258.07293701 300.68392944]
[266.11410522 313.34646606]
[274.15527344 326.00897217]
[287.83563232 319.79656982]
[302.24746704 315.54861450]
[317.11026001 313.34780884]
[332.13470459 313.23703003]
[347.02832031 315.21838379]
[361.50125122 319.25332642]
[375.27172852 325.26330566]
[388.07174683 333.13134766]
[399.65209961 342.70431519]
[409.78741455 353.79580688]
[418.28036499 366.19000244]
[424.96566772 379.64556885]
[429.71319580 393.90066528]
[432.43051147 408.67773438]
[433.06475830 423.68920898]
[431.60354614 438.64282227]
[428.07531738 453.24755859]
[422.54879761 467.21908569]
[415.13150024 480.28546143]
[405.96786499 492.19232178]
[395.23623657 502.70794678]
[383.14550781 511.62759399]
[369.93103027 518.77770996]
[355.85003662 524.01904297]
[341.17657471 527.24957275]
[326.19635010 528.40643311]
[311.20086670 527.46716309]
[296.48208618 524.44995117]
[282.32647705 519.41357422]
[269.00961304 512.45605469]
[256.79067993 503.71289062]
[245.90751648 493.35415649]
[236.57199097 481.58154297]
[228.96582031 468.62423706]
[223.23704529 454.73440552]
[219.49719238 440.18243408]
[217.81906128 425.25158691]
[218.23530579 410.23251343]
[220.73782349 395.41754150]
[225.27790833 381.09503174]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 170]
[4 169]
[5 168]
[6 167]
[7 166]
[8 165]
[9 160]
[10 159]
[11 158]
[12 157]
[13 153]
[14 152]
[15 151]
[18 148]
[19 147]
[20 146]
[21 145]
[22 144]
[23 131]
[24 130]
[25 129]
[26 128]
[27 127]
[28 126]
[31 125]
[32 124]
[58 123]
[59 122]
[60 121]
[61 120]
[62 119]
[63 118]
[64 116]
[65 115]
[66 114]
[67 113]
[68 112]
[69 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
