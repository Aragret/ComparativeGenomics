%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[69.61881256 676.36315918]
[55.25656509 671.85644531]
[42.09567261 664.55059814]
[30.67507553 654.74468994]
[21.46243668 642.84039307]
[14.83500862 629.32519531]
[11.06417942 614.75238037]
[10.30436325 599.71887207]
[12.58667278 584.84014893]
[17.81764984 570.72552490]
[25.78308868 557.95306396]
[36.15681076 547.04565430]
[48.51401520 538.45007324]
[62.34869003 532.51824951]
[77.09430695 529.49304199]
[77.09430695 514.49304199]
[77.09430695 499.49304199]
[77.09430695 484.49304199]
[74.87303925 481.75476074]
[73.86773682 477.80450439]
[74.63356781 473.22555542]
[77.44424438 468.82702637]
[78.11402893 453.84197998]
[75.27233124 447.01947021]
[78.90698242 438.63931274]
[79.79979706 423.66589355]
[80.69261169 408.69250488]
[73.72657013 395.52725220]
[82.27155304 382.21206665]
[83.16436768 367.23867798]
[76.19832611 354.07342529]
[84.74330902 340.75827026]
[76.95126343 331.50567627]
[77.57254028 319.02377319]
[86.81882477 310.03103638]
[87.93447113 295.07260132]
[89.05011749 280.11413574]
[79.16622925 269.03063965]
[80.08456421 253.84472656]
[91.77698517 243.55274963]
[92.89263153 228.59429932]
[94.00828552 213.63583374]
[95.12393188 198.67738342]
[96.23957825 183.71893311]
[97.35522461 168.76048279]
[97.24356079 153.76089478]
[95.90532684 138.82070923]
[94.56709290 123.88052368]
[93.22885895 108.94033813]
[83.67834473 120.50700378]
[68.95066071 123.35221100]
[55.77909470 116.17517090]
[50.18551636 102.25713348]
[54.72723389 87.96122742]
[67.32782745 79.82335663]
[82.22648621 81.56404877]
[92.61249542 92.38916779]
[92.83582306 77.39083099]
[85.30484772 63.47698975]
[93.23077393 50.86632538]
[85.69979858 36.95248795]
[93.62573242 24.34182167]
[93.84906006 9.34348392]
[84.50962067 -6.52649832]
[94.09030914 -21.22946548]
[94.09030914 -36.22946548]
[90.96089935 -44.81111145]
[94.20364380 -51.45237732]
[94.42697144 -66.45071411]
[94.65029907 -81.44905090]
[94.87362671 -96.44738770]
[94.98529053 -111.44697571]
[94.98529053 -126.44697571]
[94.98529053 -141.44697571]
[94.98529053 -156.44697571]
[94.98529053 -171.44697571]
[94.98529053 -186.44697571]
[82.39114380 -198.58808899]
[82.47282410 -215.74351501]
[94.69137573 -227.29969788]
[94.46804810 -242.29803467]
[94.24472046 -257.29638672]
[94.02139282 -272.29470825]
[85.32675934 -281.82183838]
[85.44952393 -294.31860352]
[93.77848053 -303.09100342]
[93.77848053 -318.09100342]
[92.88566589 -333.06439209]
[91.10319519 -347.95812988]
[89.32073212 -362.85183716]
[74.38407135 -364.98687744]
[60.50933456 -370.91598511]
[48.64253235 -380.23486328]
[39.59275818 -392.30813599]
[33.97704697 -406.31265259]
[32.17827988 -421.29351807]
[34.31910706 -436.22937012]
[40.25355530 -450.10180664]
[49.57701111 -461.96502686]
[61.65378189 -471.01013184]
[75.66045380 -476.62042236]
[90.64203644 -478.41342163]
[105.57704163 -476.26681519]
[119.44719696 -470.32699585]
[131.30679321 -460.99896240]
[140.34724426 -448.91870117]
[145.95214844 -434.90988159]
[147.73933411 -419.92761230]
[145.58697510 -404.99343872]
[139.64181519 -391.12557983]
[130.30920410 -379.26956177]
[118.22544861 -370.23379517]
[104.21444702 -364.63430786]
[105.99691772 -349.74057007]
[107.77938080 -334.84686279]
[116.24274445 -347.23120117]
[130.32986450 -352.38412476]
[144.78660583 -348.38378906]
[154.22094727 -336.72216797]
[155.11412048 -321.74880981]
[147.13299561 -309.04833984]
[133.25433350 -303.35775757]
[118.65451813 -306.79953003]
[108.77848053 -318.09100342]
[108.77848053 -303.09100342]
[118.35917664 -288.38803101]
[109.01972961 -272.51803589]
[109.24305725 -257.51971436]
[109.46638489 -242.52136230]
[109.68971252 -227.52302551]
[120.10031891 -219.93034363]
[124.29963684 -207.54293823]
[120.54236603 -194.81135559]
[109.98529053 -186.44697571]
[109.98529053 -171.44697571]
[109.98529053 -156.44697571]
[109.98529053 -141.44697571]
[109.98529053 -126.44697571]
[109.98529053 -111.44697571]
[113.12879181 -104.75816345]
[109.87196350 -96.22406006]
[109.64863586 -81.22572327]
[109.42530823 -66.22738647]
[109.20198059 -51.22904968]
[109.09030914 -36.22946548]
[109.09030914 -21.22946548]
[117.41926575 -12.45706367]
[117.54203033 0.03968392]
[108.84739685 9.56681252]
[108.62406921 24.56514931]
[116.17102051 37.40620804]
[108.22911072 51.08965302]
[115.77606964 63.93070984]
[107.83415985 77.61415863]
[107.61083221 92.61249542]
[108.16904449 107.60210419]
[109.50727844 122.54228973]
[110.84551239 137.48246765]
[112.18374634 152.42265320]
[119.50272369 139.32943726]
[132.01744080 131.06010437]
[146.93206787 129.46203613]
[160.91465759 134.89227295]
[170.84143066 146.13768005]
[174.49476624 160.68597412]
[171.05845642 175.28706360]
[161.30020142 186.67901611]
[147.40002441 192.31684875]
[132.46325684 190.94104004]
[119.82680511 182.85894775]
[112.31368256 169.87612915]
[111.19803619 184.83457947]
[110.08238220 199.79302979]
[108.96673584 214.75148010]
[107.85108948 229.70994568]
[106.73543549 244.66839600]
[116.77177429 256.58099365]
[115.42725372 271.73507690]
[104.00857544 281.22979736]
[102.89292908 296.18823242]
[101.77727509 311.14669800]
[110.15556335 327.54443359]
[99.71672058 341.65109253]
[106.61889648 355.88732910]
[98.13777924 368.13150024]
[97.24495697 383.10488892]
[104.14714050 397.34112549]
[95.66601562 409.58529663]
[94.77320099 424.55871582]
[93.88038635 439.53213501]
[93.09906769 454.51174927]
[92.42928314 469.49679565]
[92.09430695 484.49304199]
[92.09430695 499.49304199]
[92.09430695 514.49304199]
[92.09430695 529.49304199]
[106.83992004 532.51824951]
[120.67459106 538.45007324]
[133.03179932 547.04565430]
[143.40551758 557.95306396]
[151.37095642 570.72552490]
[156.60192871 584.84014893]
[158.88424683 599.71887207]
[158.12443542 614.75238037]
[154.35359192 629.32519531]
[147.72616577 642.84039307]
[138.51353455 654.74468994]
[127.09293365 664.55059814]
[113.93204498 671.85644531]
[99.56979370 676.36315918]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 196]
[16 195]
[17 194]
[18 193]
[22 192]
[23 191]
[25 190]
[26 189]
[27 188]
[29 186]
[30 185]
[32 183]
[35 181]
[36 180]
[37 179]
[40 176]
[41 175]
[42 174]
[43 173]
[44 172]
[45 171]
[46 159]
[47 158]
[48 157]
[49 156]
[57 155]
[58 154]
[60 152]
[62 150]
[63 149]
[65 146]
[66 145]
[68 144]
[69 143]
[70 142]
[71 141]
[72 139]
[73 138]
[74 137]
[75 136]
[76 135]
[77 134]
[80 130]
[81 129]
[82 128]
[83 127]
[86 125]
[87 124]
[88 115]
[89 114]
[90 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
