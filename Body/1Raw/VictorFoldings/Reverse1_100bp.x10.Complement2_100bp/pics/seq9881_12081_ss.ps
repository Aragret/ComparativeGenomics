%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[94.47592163 784.81030273]
[79.76564026 781.80114746]
[65.46694183 777.21917725]
[51.74747849 771.11804199]
[38.76809692 763.56939697]
[26.68097496 754.66156006]
[15.62783051 744.49914551]
[5.73825407 733.20117188]
[-2.87180400 720.90020752]
[-10.10139561 707.74041748]
[-15.86575603 693.87609863]
[-20.09730339 679.46978760]
[-22.74642181 664.69042969]
[-23.78205490 649.71130371]
[-23.19205856 634.70800781]
[-20.98335075 619.85644531]
[-17.18182755 605.33074951]
[-11.83206081 591.30120850]
[-4.99677134 577.93237305]
[3.24389887 565.38098145]
[12.79333305 553.79406738]
[23.53956795 543.30761719]
[35.35660934 534.04455566]
[48.10591125 526.11340332]
[61.63798904 519.60729980]
[75.79419708 514.60235596]
[90.40854645 511.15737915]
[105.30970001 509.31268311]
[105.08637238 494.31436157]
[104.86304474 479.31600952]
[104.63971710 464.31768799]
[104.41638947 449.31933594]
[104.19306183 434.32101440]
[103.96973419 419.32266235]
[103.74640656 404.32431030]
[103.52307892 389.32598877]
[103.29975128 374.32763672]
[103.07642365 359.32931519]
[102.85309601 344.33096313]
[102.62976837 329.33264160]
[102.40644073 314.33428955]
[102.18311310 299.33596802]
[101.95978546 284.33761597]
[101.73645782 269.33929443]
[101.51313019 254.34095764]
[101.28980255 239.34262085]
[101.06647491 224.34428406]
[93.14054108 211.73361206]
[100.67151642 197.81977844]
[99.89019775 182.84013367]
[98.55196381 167.89994812]
[97.21372986 152.95976257]
[95.87549591 138.01957703]
[94.53726196 123.07939148]
[93.19902802 108.13921356]
[91.19500732 93.27368164]
[88.52921295 78.51246643]
[85.86341858 63.75124741]
[83.19762421 48.99002838]
[80.53182983 34.22881317]
[75.70583344 20.02635765]
[68.82641602 6.69692802]
[61.94700623 -6.63250113]
[48.74228287 -15.34719086]
[49.78079224 -30.20554733]
[42.90137863 -43.53497696]
[28.76797676 -38.44557953]
[14.09117508 -35.24455643]
[-0.87788528 -33.98669052]
[-15.88306618 -34.69349670]
[-30.66760826 -37.35288239]
[-44.97852707 -41.91934586]
[-58.57094574 -48.31474686]
[-71.21228027 -56.42964935]
[-82.68622589 -66.12519836]
[-92.79644012 -77.23548889]
[-101.36991882 -89.57041931]
[-108.25997925 -102.91890717]
[-113.34870148 -117.05255127]
[-116.54902649 -131.72950745]
[-117.80618286 -146.69862366]
[-117.09865570 -161.70376587]
[-114.43856812 -176.48818970]
[-109.87142181 -190.79888916]
[-103.47537994 -204.39100647]
[-95.35987091 -217.03195190]
[-85.66378021 -228.50543213]
[-74.55300140 -238.61511230]
[-62.21767044 -247.18801880]
[-48.86885071 -254.07743835]
[-34.73496628 -259.16549683]
[-20.05786133 -262.36511230]
[-5.08867979 -263.62155151]
[9.91643333 -262.91333008]
[24.70072174 -260.25253296]
[39.01120758 -255.68469238]
[52.60301971 -249.28800964]
[65.24358368 -241.17190552]
[76.71659851 -231.47525024]
[86.82575226 -220.36399841]
[95.39806366 -208.02825928]
[102.28684998 -194.67910767]
[107.37422943 -180.54498291]
[110.57315063 -165.86772156]
[111.82888031 -150.89848328]
[111.11993408 -135.89340210]
[108.45843506 -121.10924530]
[103.88993073 -106.79898071]
[97.49259186 -93.20747375]
[89.37588501 -80.56729889]
[79.67869568 -69.09474182]
[68.56695557 -58.98611450]
[56.23080826 -50.41439056]
[63.11021805 -37.08496094]
[75.82288361 -29.32368088]
[75.27643585 -13.51191425]
[82.15584564 -0.18248458]
[89.03526306 13.14694500]
[88.98146057 -1.85295892]
[93.10044098 -16.27634430]
[101.06735229 -28.98572159]
[112.25389862 -38.97877884]
[125.77786255 -45.46741867]
[140.57267761 -47.93992233]
[155.47157288 -46.20129776]
[169.29956055 -40.38865662]
[180.96611023 -30.96041489]
[189.55113220 -18.66011810]
[194.37759399 -4.45781851]
[195.06484985 10.52642918]
[191.55870056 25.11090469]
[184.13566589 38.14541626]
[173.38114929 48.60200882]
[160.14329529 55.65602875]
[145.46609497 58.75117111]
[130.50706482 57.64333725]
[116.44592285 52.41989517]
[104.39160156 43.49278641]
[95.29304504 31.56301689]
[97.95883942 46.32423401]
[100.62463379 61.08545303]
[103.29043579 75.84667206]
[105.95623016 90.60788727]
[115.37644958 78.93486786]
[130.27635193 77.20485687]
[142.12059021 86.40887451]
[144.12425232 101.27445221]
[135.13954163 113.28590393]
[120.31331635 115.56253052]
[108.13920593 106.80097961]
[109.47744751 121.74115753]
[110.81568146 136.68135071]
[112.15391541 151.62153625]
[113.49214935 166.56172180]
[114.83038330 181.50190735]
[126.30489349 171.84086609]
[141.04168701 174.63851929]
[148.17735291 187.83255005]
[142.45173645 201.69679260]
[128.08555603 206.01106262]
[115.66985321 197.59645081]
[123.61176300 211.27989197]
[116.06481171 224.12095642]
[116.28813934 239.11929321]
[116.51146698 254.11763000]
[116.73479462 269.11596680]
[116.95812225 284.11428833]
[117.18144989 299.11264038]
[117.40477753 314.11096191]
[117.62810516 329.10931396]
[117.85143280 344.10763550]
[118.07476044 359.10598755]
[118.29808807 374.10430908]
[118.52141571 389.10266113]
[118.74474335 404.10098267]
[118.96807098 419.09933472]
[119.19139862 434.09768677]
[119.41472626 449.09600830]
[119.63805389 464.09436035]
[119.86138153 479.09268188]
[120.08470917 494.09103394]
[120.30803680 509.08935547]
[135.25750732 510.48956299]
[149.96795654 513.49792480]
[164.26689148 518.07910156]
[177.98667908 524.17950439]
[190.96647644 531.72747803]
[203.05407715 540.63464355]
[214.10775757 550.79644775]
[223.99794006 562.09387207]
[232.60867310 574.39440918]
[239.83897400 587.55383301]
[245.60408020 601.41784668]
[249.83639526 615.82391357]
[252.48631287 630.60308838]
[253.52275085 645.58221436]
[252.93356323 660.58551025]
[250.72564697 675.43719482]
[246.92491150 689.96307373]
[241.57589722 703.99291992]
[234.74133301 717.36212158]
[226.50132751 729.91400146]
[216.95251465 741.50140381]
[206.20684814 751.98840332]
[194.39030457 761.25213623]
[181.64143372 769.18395996]
[168.10971069 775.69079590]
[153.95376587 780.69647217]
[139.33959961 784.14227295]
[124.43855286 785.98773193]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 182]
[29 181]
[30 180]
[31 179]
[32 178]
[33 177]
[34 176]
[35 175]
[36 174]
[37 173]
[38 172]
[39 171]
[40 170]
[41 169]
[42 168]
[43 167]
[44 166]
[45 165]
[46 164]
[47 163]
[49 161]
[50 155]
[51 154]
[52 153]
[53 152]
[54 151]
[55 150]
[56 143]
[57 142]
[58 141]
[59 140]
[60 139]
[61 118]
[62 117]
[63 116]
[65 114]
[66 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
