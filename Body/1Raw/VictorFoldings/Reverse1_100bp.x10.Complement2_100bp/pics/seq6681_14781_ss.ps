%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[68.87636566 655.64666748]
[54.76928711 650.42126465]
[41.86270142 642.69244385]
[30.59620094 632.72344971]
[21.35351753 620.85388184]
[14.44945431 607.48791504]
[10.11916161 593.08087158]
[8.51012611 578.12341309]
[9.67715168 563.12500000]
[13.58048916 548.59643555]
[20.08719444 535.03259277]
[28.97564888 522.89544678]
[39.94311523 512.59838867]
[52.61605072 504.49215698]
[66.56281281 498.85278320]
[81.30838013 495.87237549]
[81.08505249 480.87405396]
[73.15911865 468.26339722]
[80.69010162 454.34954834]
[80.46677399 439.35119629]
[80.24344635 424.35287476]
[69.04601288 434.33374023]
[54.06342697 433.61117554]
[43.87838745 422.59915161]
[44.32535553 407.60580444]
[55.14828110 397.22003174]
[70.14730072 397.39126587]
[80.72993469 408.02053833]
[81.84558105 393.06210327]
[75.07632446 379.79458618]
[83.81860352 366.60812378]
[84.93424988 351.64965820]
[86.04990387 336.69122314]
[87.16555023 321.73275757]
[87.94686890 306.75311279]
[88.39347839 291.75976562]
[88.84008789 276.76641846]
[89.28668976 261.77307129]
[89.73329926 246.77972412]
[75.18148041 240.50512695]
[64.12483215 229.09899902]
[58.27763748 214.28733826]
[58.56276703 198.32731628]
[64.96612549 183.66331482]
[76.53431702 172.55262756]
[91.51644135 166.71788025]
[91.73976898 151.71954346]
[91.96309662 136.72120667]
[92.18642426 121.72286987]
[92.40975189 106.72453308]
[89.37137604 99.25855255]
[92.74971008 91.50498962]
[93.19631958 76.51164246]
[82.63806915 65.05908203]
[83.30458069 49.86005402]
[94.28791046 39.86495590]
[94.73451996 24.87160683]
[95.18112183 9.87825680]
[85.51886749 21.35173988]
[71.21922302 25.88164520]
[56.71307755 22.06433296]
[46.49533081 11.08263588]
[43.73205948 -3.66064429]
[49.27949142 -17.59714317]
[61.41869354 -26.40848541]
[76.38820648 -27.36437988]
[89.54956055 -20.16863251]
[96.82462311 -7.05067301]
[99.27034760 -21.84994316]
[101.71607971 -36.64921570]
[92.36777496 -43.28423309]
[86.19841766 -52.88525391]
[84.06707764 -64.04452515]
[86.24406433 -75.14270020]
[92.37728119 -84.58380890]
[101.54856873 -91.02474213]
[112.41094208 -93.56631470]
[115.51504517 -108.24161530]
[118.61915588 -122.91691589]
[121.72326660 -137.59222412]
[108.29429626 -144.45501709]
[97.10810089 -154.55226135]
[88.92317963 -167.19120789]
[84.29242706 -181.50703430]
[83.52579498 -196.52203369]
[86.66954041 -211.21235657]
[93.50348663 -224.57789612]
[103.55645752 -235.71029663]
[116.13869476 -243.85472107]
[130.38926697 -248.46102905]
[145.33489990 -249.22094727]
[148.43901062 -263.89624023]
[151.54312134 -278.57156372]
[153.98884583 -293.37081909]
[155.77131653 -308.26455688]
[157.55378723 -323.15826416]
[159.33624268 -338.05197144]
[161.11871338 -352.94570923]
[162.90118408 -367.83941650]
[164.68363953 -382.73312378]
[150.94590759 -389.06793213]
[139.83947754 -399.33935547]
[132.45243835 -412.54113770]
[129.50852966 -427.37988281]
[131.29612732 -442.40185547]
[137.64013672 -456.13534546]
[147.91900635 -467.23489380]
[161.12573242 -474.61309814]
[175.96644592 -477.54705811]
[190.98721313 -475.74938965]
[204.71646118 -469.39617920]
[215.80911255 -459.10986328]
[223.17845154 -445.89822388]
[226.10247803 -431.05554199]
[224.29473877 -416.03594971]
[217.93234253 -402.31097412]
[207.63861084 -391.22521973]
[194.42199707 -383.86474609]
[179.57736206 -380.95065308]
[177.79489136 -366.05694580]
[176.01243591 -351.16323853]
[174.22996521 -336.26950073]
[172.44749451 -321.37579346]
[170.66503906 -306.48208618]
[168.88256836 -291.58834839]
[181.31306458 -299.98376465]
[196.06480408 -297.26599121]
[204.68731689 -284.99194336]
[202.24124146 -270.19274902]
[190.12779236 -261.34603882]
[175.28610229 -263.51962280]
[166.21842957 -275.46743774]
[163.11431885 -260.79214478]
[160.01020813 -246.11683655]
[173.36805725 -239.37019348]
[184.53288269 -229.38803101]
[192.73960876 -216.84632874]
[197.42379761 -202.59674072]
[198.26042175 -187.60873413]
[195.18646240 -172.90364075]
[188.40559387 -159.48509216]
[178.37466431 -148.27049255]
[165.77297974 -140.02832031]
[151.45626831 -135.32542419]
[136.39857483 -134.48811340]
[133.29446411 -119.81280518]
[130.19035339 -105.13750458]
[127.08624268 -90.46220398]
[140.38783264 -77.33358765]
[143.11080933 -58.69185638]
[133.97576904 -42.04371643]
[116.51535034 -34.20348740]
[114.06961823 -19.40421677]
[111.62389374 -4.60494566]
[110.17447662 10.32486343]
[109.72786713 25.31821251]
[109.28126526 40.31156158]
[119.65019989 50.94268036]
[119.41086578 66.15443420]
[108.18966675 76.95825195]
[107.74306488 91.95159912]
[107.40808868 106.94786072]
[107.18476105 121.94619751]
[106.96143341 136.94453430]
[106.73810577 151.94287109]
[106.51477814 166.94120789]
[119.75004578 172.20227051]
[130.37225342 181.64524841]
[137.11901855 194.12060547]
[139.19783020 208.12007141]
[136.37916565 221.95904541]
[129.02156067 233.97924805]
[118.02622986 242.74745178]
[104.72664642 247.22633362]
[104.28003693 262.21966553]
[103.83343506 277.21304321]
[103.38682556 292.20639038]
[102.94022369 307.19973755]
[105.41596222 311.79513550]
[105.83910370 316.41836548]
[104.54278564 320.28289795]
[102.12400055 322.84841919]
[101.00835419 337.80685425]
[99.89270782 352.76531982]
[98.77705383 367.72375488]
[105.46651459 382.06118774]
[96.80403900 394.17773438]
[95.68838501 409.13619995]
[95.24178314 424.12954712]
[95.46511078 439.12786865]
[95.68843842 454.12622070]
[103.63034821 467.80966187]
[96.08338928 480.65072632]
[96.30671692 495.64904785]
[111.13449097 498.18911743]
[125.24297333 503.41073608]
[138.15164185 511.13607788]
[149.42083740 521.10198975]
[158.66671753 532.96911621]
[165.57437134 546.33319092]
[169.90855408 560.73907471]
[171.52162170 575.69610596]
[170.35864258 590.69488525]
[166.45921326 605.22448730]
[159.95616150 618.79003906]
[151.07098389 630.92956543]
[140.10629272 641.22955322]
[127.43554688 649.33923340]
[113.49030304 654.98236084]
[98.74553680 657.96673584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 194]
[17 193]
[19 191]
[20 190]
[21 189]
[28 188]
[29 187]
[31 185]
[32 184]
[33 183]
[34 182]
[35 178]
[36 177]
[37 176]
[38 175]
[39 174]
[46 166]
[47 165]
[48 164]
[49 163]
[50 162]
[52 161]
[53 160]
[56 157]
[57 156]
[58 155]
[68 154]
[69 153]
[70 152]
[77 148]
[78 147]
[79 146]
[80 145]
[91 134]
[92 133]
[93 132]
[94 125]
[95 124]
[96 123]
[97 122]
[98 121]
[99 120]
[100 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
