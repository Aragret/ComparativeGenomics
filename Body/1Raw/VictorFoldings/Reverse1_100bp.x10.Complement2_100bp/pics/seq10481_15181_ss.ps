%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[15.93321800 555.88793945]
[14.13442516 570.80364990]
[10.32129765 585.33544922]
[4.56487131 599.21270752]
[-3.02761555 612.17675781]
[-12.31471920 623.98626709]
[-23.12342644 634.42108154]
[-35.25237656 643.28686523]
[-48.47562027 650.41845703]
[-62.54681015 655.68298340]
[-77.20381165 658.98242188]
[-92.17356873 660.25524902]
[-107.17720795 659.47772217]
[-121.93522644 656.66442871]
[-136.17268372 651.86767578]
[-149.62434387 645.17694092]
[-162.03961182 636.71673584]
[-173.18721008 626.64471436]
[-182.85943604 615.14855957]
[-190.87614441 602.44244385]
[-197.08795166 588.76300049]
[-201.37915039 574.36511230]
[-203.66981506 559.51696777]
[-203.91723633 544.49523926]
[-202.11682129 529.57971191]
[-198.30212402 515.04833984]
[-192.54420471 501.17172241]
[-184.95030212 488.20843506]
[-175.66192627 476.39999390]
[-164.85209656 465.96633911]
[-152.72218323 457.10183716]
[-139.49816895 449.97167969]
[-125.42640686 444.70867920]
[-110.76905060 441.41082764]
[-95.79915619 440.13964844]
[-80.79559326 440.91876221]
[-66.03788757 443.73367310]
[-51.80094910 448.53195190]
[-45.12075424 435.10156250]
[-38.44055939 421.67120361]
[-31.76036453 408.24081421]
[-25.08016968 394.81045532]
[-18.39997673 381.38006592]
[-11.71978092 367.94967651]
[-12.97939491 353.10842896]
[0.09411810 344.19812012]
[0.25839609 336.80929565]
[6.97505617 330.61862183]
[13.85446930 317.28918457]
[19.92830276 303.57394409]
[25.17502022 289.52145386]
[30.42173958 275.46899414]
[35.66845703 261.41650391]
[40.81041718 247.32537842]
[45.84733200 233.19635010]
[50.88425064 219.06732178]
[55.92116547 204.93829346]
[51.02154922 193.87843323]
[55.10225677 182.06608582]
[66.49119568 176.01176453]
[71.73791504 161.95928955]
[76.98462677 147.90681458]
[81.81063080 133.70436096]
[86.21162415 119.36450958]
[90.61262512 105.02466583]
[93.82589722 90.37287903]
[95.82991028 75.50734711]
[96.16488647 60.51108932]
[94.82665253 45.57090378]
[93.48841858 30.63072014]
[92.15018463 15.69053459]
[90.81195068 0.75034988]
[89.47371674 -14.18983555]
[88.13548279 -29.13002014]
[86.79724884 -44.07020569]
[77.16310120 -48.65354538]
[70.35256958 -56.76056671]
[67.54320526 -66.88533783]
[69.17734528 -77.18302917]
[74.89393616 -85.80603027]
[83.60559082 -91.23539734]
[75.25979614 -104.67631531]
[82.42108154 -117.73638153]
[81.75128937 -132.72142029]
[81.08150482 -147.70646667]
[80.41172028 -162.69149780]
[79.74193573 -177.67654419]
[77.27631378 -181.25070190]
[76.18595123 -185.04222107]
[76.37030792 -188.59207153]
[77.59009552 -191.52101135]
[79.50531006 -193.56799316]
[71.97433472 -207.48182678]
[79.90026855 -220.09248352]
[80.12359619 -235.09083557]
[77.12229919 -243.71810913]
[80.46355438 -250.31036377]
[80.91016388 -265.30371094]
[81.35676575 -280.29705811]
[81.80337524 -295.29040527]
[68.23139954 -302.27355957]
[59.04020691 -314.45898438]
[56.05470657 -329.42727661]
[59.86767197 -344.20645142]
[69.72203827 -355.86209106]
[83.66121674 -362.07998657]
[98.91756439 -361.62554932]
[112.46192932 -354.58901978]
[121.60507202 -342.36749268]
[124.53160095 -327.38757324]
[120.66046906 -312.62350464]
[110.76027679 -301.00674438]
[96.79672241 -294.84381104]
[96.35012054 -279.85046387]
[95.90351105 -264.85711670]
[95.45690918 -249.86375427]
[95.12193298 -234.86750793]
[94.89860535 -219.86915588]
[102.44555664 -207.02810669]
[94.50364685 -193.34466553]
[94.72697449 -178.34632874]
[95.39675903 -163.36128235]
[96.06654358 -148.37625122]
[96.73632812 -133.39120483]
[97.40612030 -118.40616608]
[105.70400238 -106.03707886]
[98.59062958 -91.90518188]
[113.89324188 -79.84929657]
[115.41941833 -60.12179184]
[101.73743439 -45.40843964]
[103.07566833 -30.46825409]
[104.41390228 -15.52806950]
[105.75213623 -0.58788431]
[107.09037018 14.35230064]
[108.42860413 29.29248619]
[109.76683807 44.23266983]
[111.10507202 59.17285538]
[117.33555603 45.52803802]
[128.02337646 35.00328064]
[141.76235962 28.98329544]
[156.74491882 28.26011658]
[170.99983215 32.92889404]
[182.65162659 42.37536240]
[190.16729736 55.35668182]
[192.55804443 70.16493225]
[189.50930786 84.85183716]
[181.42221069 97.48508453]
[169.36074829 106.40254974]
[154.91180420 110.43098450]
[139.97640991 109.04038239]
[126.51954651 102.41369629]
[116.31171417 91.42278290]
[110.69544220 77.51136017]
[108.69142914 92.37689209]
[118.72856903 81.22988892]
[132.76399231 75.93773651]
[147.66215515 77.68272400]
[160.09475708 86.07500458]
[167.28431702 99.23973846]
[167.62469482 114.23587799]
[161.03982544 127.71324921]
[149.00079346 136.66096497]
[134.19715881 139.08010864]
[119.93607330 134.43020630]
[109.40351105 123.75007629]
[104.95246887 109.42565918]
[100.55147552 123.76551056]
[96.15047455 138.10536194]
[97.27275085 142.29992676]
[97.02662659 146.23744202]
[95.66095734 149.51925659]
[93.52847290 151.86854553]
[91.03710175 153.15353394]
[85.79038239 167.20600891]
[80.54366302 181.25846863]
[84.01176453 199.34310913]
[70.05019379 209.97520447]
[65.01328278 224.10423279]
[59.97636414 238.23326111]
[54.93944550 252.36228943]
[55.00547791 261.49649048]
[49.72092819 266.66323853]
[44.47420883 280.71569824]
[39.22749329 294.76818848]
[33.98077393 308.82064819]
[47.18135452 301.69711304]
[62.06286240 303.57879639]
[73.07485962 313.76388550]
[76.11015320 328.45358276]
[70.03664398 342.16897583]
[57.11960602 349.79461670]
[42.17677307 348.48626709]
[30.78145409 338.73196411]
[27.18389893 324.16860962]
[20.30448532 337.49804688]
[13.52449417 350.87832642]
[14.30629539 366.68020630]
[1.71059477 374.62988281]
[-4.96959972 388.06027222]
[-11.64979458 401.49063110]
[-18.32998848 414.92102051]
[-25.01018333 428.35137939]
[-31.69037819 441.78176880]
[-38.37057495 455.21212769]
[-25.95438576 463.67098999]
[-14.80570507 473.74176025]
[-5.13222218 485.23687744]
[2.88585138 497.94216919]
[9.09914398 511.62094116]
[13.39190578 526.01837158]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 204]
[39 203]
[40 202]
[41 201]
[42 200]
[43 199]
[44 198]
[46 196]
[48 195]
[49 194]
[50 185]
[51 184]
[52 183]
[53 182]
[54 180]
[55 179]
[56 178]
[57 177]
[60 175]
[61 174]
[62 173]
[63 168]
[64 167]
[65 166]
[66 154]
[67 153]
[68 137]
[69 136]
[70 135]
[71 134]
[72 133]
[73 132]
[74 131]
[75 130]
[81 127]
[83 125]
[84 124]
[85 123]
[86 122]
[87 121]
[92 120]
[94 118]
[95 117]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
