%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[-28.80255318 584.05377197]
[-22.85891914 597.87091064]
[-19.47815323 612.52734375]
[-18.76893234 627.55187988]
[-20.75405502 642.46154785]
[-25.36970520 656.77716064]
[-32.46751022 670.03839111]
[-41.81930923 681.81903076]
[-53.12447357 691.74035645]
[-66.01959229 699.48345947]
[-80.09014130 704.79943848]
[-94.88381195 707.51739502]
[-109.92504883 707.54986572]
[-124.73033142 704.89599609]
[-138.82374573 699.64093018]
[-151.75222778 691.95361328]
[-163.10018921 682.08129883]
[-172.50285339 670.34118652]
[-179.65792847 657.11077881]
[-184.33544922 642.81524658]
[-186.38504028 627.91430664]
[-185.74079895 612.88684082]
[-182.42344666 598.21594238]
[-176.53961182 584.37322998]
[-168.27845764 571.80371094]
[-157.90553284 560.91143799]
[-145.75428772 552.04650879]
[-132.21533203 545.49389648]
[-117.72387695 541.46429443]
[-102.74578094 540.08721924]
[-87.76251984 541.40692139]
[-73.25573730 545.38098145]
[-66.77624512 531.85266113]
[-60.29674911 518.32427979]
[-53.81725311 504.79592896]
[-48.05121994 490.94845581]
[-43.01430130 476.81942749]
[-37.97738647 462.69039917]
[-32.94047165 448.56137085]
[-28.11447144 434.35891724]
[-23.50046349 420.08618164]
[-19.20633888 405.71395874]
[-15.23424339 391.24945068]
[-11.26214695 376.78491211]
[-16.97078514 366.12011719]
[-13.77994442 354.03698730]
[-2.87285185 347.15234375]
[1.31415939 332.74856567]
[5.50117064 318.34478760]
[9.68818188 303.94100952]
[-3.41499448 311.24215698]
[-18.16890335 308.53619385]
[-27.82825661 297.06027222]
[-27.97692680 282.06100464]
[-18.54694557 270.39587402]
[-3.84957242 267.39801025]
[9.39575195 274.43798828]
[15.13353062 288.29907227]
[20.79631615 274.40905762]
[26.45910454 260.51904297]
[32.12189102 246.62901306]
[20.66354942 237.02342224]
[12.72446251 224.32928467]
[9.09280014 209.78311157]
[10.13643074 194.80639648]
[15.76570129 180.86674500]
[25.44098854 169.33401489]
[38.22440338 161.34573364]
[52.87069321 157.69488525]
[67.94853973 158.75122070]
[73.61132812 144.86119080]
[79.27411652 130.97116089]
[84.93690491 117.08113861]
[78.59143829 107.76760864]
[77.48837280 96.55199432]
[81.89781189 86.18070984]
[90.74000549 79.19340515]
[101.84972382 77.30108643]
[107.92355347 63.58582306]
[113.99739075 49.87055588]
[120.07122040 36.15528870]
[125.83725739 22.30780220]
[131.29261780 8.33500481]
[136.74797058 -5.63779306]
[142.20332336 -19.61058998]
[142.40928650 -28.74269867]
[147.84532166 -33.74982071]
[153.50811768 -47.63984680]
[159.17089844 -61.52987289]
[164.62625122 -75.50267029]
[169.87297058 -89.55514526]
[175.11968994 -103.60761261]
[175.18966675 -112.74177551]
[180.55055237 -117.82927704]
[186.00590515 -131.80207825]
[190.19291687 -146.20585632]
[193.07818604 -160.92575073]
[195.96347046 -175.64562988]
[191.02513123 -190.67639160]
[201.06605530 -201.67770386]
[187.44854736 -208.15953064]
[175.87133789 -217.82489014]
[167.06219482 -230.06620789]
[161.57487488 -244.11399841]
[159.75430298 -259.08517456]
[161.71492004 -274.03866577]
[167.33349609 -288.03445435]
[176.25682068 -300.19277954]
[187.92399597 -309.74935913]
[201.60157776 -316.10345459]
[216.42980957 -318.85562134]
[231.47656250 -317.83288574]
[245.79598999 -313.09951782]
[258.48794556 -304.95306396]
[268.75463867 -293.90560913]
[275.95068359 -280.65161133]
[279.62368774 -266.02426147]
[279.54281616 -250.94300842]
[275.71313477 -236.35588074]
[268.37536621 -223.17984009]
[257.99078369 -212.24313354]
[245.21217346 -204.23327637]
[230.84280396 -199.65374756]
[215.78594971 -198.79243469]
[220.93064880 -184.81455994]
[210.68334961 -172.76036072]
[207.79808044 -158.04046631]
[204.91281128 -143.32058716]
[215.31491089 -154.12780762]
[229.34558105 -159.43255615]
[244.29573059 -158.21052551]
[257.27868652 -150.69770813]
[265.78768921 -138.34468079]
[268.17974854 -123.53664398]
[263.99301147 -109.13278198]
[254.03585815 -97.91426086]
[240.23086548 -92.04720306]
[225.24357605 -92.66444397]
[211.96777344 -99.64679718]
[202.96682739 -111.64608765]
[199.97869873 -126.34671783]
[194.52334595 -112.37391663]
[189.17216492 -98.36089325]
[183.92544556 -84.30842590]
[178.67872620 -70.25595093]
[179.81105042 -65.61624908]
[178.04077148 -60.21595764]
[173.06092834 -55.86708450]
[167.39813232 -41.97705841]
[161.73535156 -28.08703232]
[156.17613220 -14.15523338]
[150.72076416 -0.18243600]
[145.26541138 13.79036140]
[139.81005859 27.76315880]
[140.88331604 31.12179947]
[140.38310242 35.16714859]
[138.00439453 39.15400314]
[133.78648376 42.22912216]
[127.71265411 55.94438934]
[121.63882446 69.65965271]
[115.56498718 83.37492371]
[122.77389526 99.89137268]
[115.72286987 116.47584534]
[98.82692719 122.74391937]
[93.16414642 136.63394165]
[87.50135803 150.52397156]
[81.83856964 164.41400146]
[93.35716248 174.20069885]
[101.27610016 187.05110168]
[104.83057404 201.70013428]
[103.68470001 216.71020508]
[97.96325684 230.61227417]
[88.23818970 242.04966736]
[75.47150421 249.91044617]
[60.92006683 253.43548584]
[46.01191711 252.29179382]
[40.34912872 266.18182373]
[34.68634415 280.07183838]
[29.02355766 293.96188354]
[24.09196472 308.12802124]
[19.90495300 322.53179932]
[15.71794128 336.93557739]
[11.53093052 351.33935547]
[16.33449554 369.11593628]
[3.20237708 380.75701904]
[-0.76971906 395.22152710]
[-4.74181509 409.68606567]
[-3.42041159 414.73590088]
[-4.10019732 419.32843018]
[-6.27185488 422.77792358]
[-9.22772980 424.70019531]
[-13.84173870 438.97293091]
[-12.83316612 445.50701904]
[-14.95700932 450.77828979]
[-18.81143951 453.59829712]
[-23.84835625 467.72732544]
[-28.88527298 481.85635376]
[-33.92218781 495.98538208]
[-20.40767097 489.47708130]
[-5.84098196 493.05639648]
[3.11818600 505.08691406]
[2.37382126 520.06842041]
[-7.73376274 531.15161133]
[-22.58351517 533.26934814]
[-35.38632584 525.45349121]
[-40.28890610 511.27545166]
[-46.76840210 524.80377197]
[-53.24789810 538.33215332]
[-59.72739410 551.86047363]
[-47.53792191 560.67279053]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 209]
[33 208]
[34 207]
[35 206]
[36 198]
[37 197]
[38 196]
[39 195]
[40 192]
[41 191]
[42 187]
[43 186]
[44 185]
[47 183]
[48 182]
[49 181]
[50 180]
[58 179]
[59 178]
[60 177]
[61 176]
[70 167]
[71 166]
[72 165]
[73 164]
[78 161]
[79 160]
[80 159]
[81 158]
[82 154]
[83 153]
[84 152]
[85 151]
[87 150]
[88 149]
[89 148]
[90 145]
[91 144]
[92 143]
[94 142]
[95 141]
[96 128]
[97 127]
[98 126]
[100 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
