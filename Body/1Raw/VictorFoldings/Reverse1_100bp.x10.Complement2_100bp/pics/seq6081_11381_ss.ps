%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[257.70898438 325.27029419]
[248.39410400 313.51306152]
[234.42593384 308.34201050]
[231.92076111 292.72039795]
[222.60588074 280.96313477]
[219.16435242 280.19619751]
[215.92330933 277.72421265]
[213.68008423 273.65957642]
[213.15167236 268.46652222]
[204.37107849 256.30505371]
[195.59046936 244.14361572]
[186.80986023 231.98216248]
[178.02926636 219.82069397]
[169.24865723 207.65924072]
[155.52532959 201.86964417]
[153.72019958 186.15174866]
[144.93959045 173.99029541]
[136.15899658 161.82884216]
[127.37838745 149.66738892]
[111.00398254 143.35504150]
[109.28619385 125.02117157]
[100.32549286 112.99179840]
[91.01061249 101.23454285]
[81.34980011 89.75984192]
[71.68899536 78.28514099]
[62.02818298 66.81044006]
[52.36737061 55.33574295]
[42.70656204 43.86104202]
[38.84254074 58.35481262]
[25.16364861 64.51012421]
[11.75345230 57.78951263]
[8.49745083 43.14715958]
[17.79584694 31.37686729]
[32.79270935 31.15456581]
[24.01210403 18.99311066]
[15.23150158 6.83165455]
[6.45089817 -5.32980156]
[-2.32970524 -17.49125671]
[-11.37970543 -29.45359421]
[-20.69458771 -41.21084595]
[-35.32901382 -47.22284698]
[-37.16792297 -62.00350189]
[-41.25918579 -63.45799255]
[-44.36266708 -65.89375305]
[-46.29118347 -68.87975311]
[-47.01675415 -71.96846771]
[-46.66220474 -74.74919891]
[-55.26076889 -87.04003143]
[-61.08013916 -90.17794037]
[-64.00254059 -95.05201721]
[-63.92595291 -99.82728577]
[-72.15476227 -112.36869049]
[-80.38356781 -124.91008759]
[-88.61237335 -137.45149231]
[-101.89965057 -130.46551514]
[-115.79914093 -124.79457092]
[-130.18107605 -120.49161530]
[-144.91117859 -117.59682465]
[-159.85189819 -116.13722229]
[-174.86373901 -116.12643433]
[-189.80653381 -117.56457520]
[-204.54077148 -120.43820190]
[-218.92887878 -124.72048950]
[-232.83650208 -130.37145996]
[-246.13380432 -137.33833313]
[-258.69659424 -145.55609131]
[-270.40762329 -154.94796753]
[-281.15753174 -165.42630005]
[-290.84591675 -176.89323425]
[-299.38235474 -189.24171448]
[-306.68710327 -202.35643005]
[-312.69198608 -216.11494446]
[-317.34094238 -230.38879395]
[-320.59054565 -245.04470825]
[-322.41046143 -259.94583130]
[-322.78372192 -274.95303345]
[-321.70678711 -289.92620850]
[-319.18975830 -304.72552490]
[-315.25610352 -319.21282959]
[-309.94259644 -333.25283813]
[-303.29879761 -346.71447754]
[-295.38677979 -359.47204590]
[-286.28039551 -371.40643311]
[-276.06469727 -382.40618896]
[-264.83502197 -392.36862183]
[-252.69625854 -401.20071411]
[-239.76171875 -408.81997681]
[-226.15220642 -415.15533447]
[-211.99476624 -420.14755249]
[-197.42160034 -423.75009155]
[-182.56875610 -425.92926025]
[-167.57493591 -426.66473389]
[-152.58013916 -425.94967651]
[-137.72434998 -423.79067993]
[-123.14629364 -420.20800781]
[-108.98207855 -415.23501587]
[-95.36395264 -408.91821289]
[-82.41907501 -401.31652832]
[-70.26830292 -392.50094604]
[-59.02509689 -382.55380249]
[-48.79442596 -371.56793213]
[-39.67181778 -359.64596558]
[-31.74245071 -346.89916992]
[-25.08035660 -333.44659424]
[-19.74774361 -319.41381836]
[-15.79440022 -304.93188477]
[-13.25723839 -290.13598633]
[-12.15994740 -275.16430664]
[-12.51277351 -260.15658569]
[-14.31242180 -245.25302124]
[-17.54208946 -230.59269714]
[-22.17161942 -216.31254578]
[-28.15778923 -202.54586792]
[-35.44470215 -189.42121887]
[-43.96432495 -177.06114197]
[-53.63710785 -165.58103943]
[-64.37273407 -155.08810425]
[-76.07097626 -145.68029785]
[-67.84216309 -133.13890076]
[-59.61335754 -120.59749603]
[-51.38455200 -108.05609131]
[-42.96993256 -95.63859558]
[-34.37136841 -83.34776306]
[-25.41067314 -71.31838226]
[-11.44251060 -66.14733887]
[-8.93733692 -50.52572632]
[0.37754619 -38.76847839]
[3.81907845 -38.00153732]
[7.06012058 -35.52955627]
[9.30334091 -31.46492004]
[9.83175087 -26.27186012]
[18.61235428 -14.11040497]
[27.39295769 -1.94894886]
[36.17356110 10.21250725]
[44.95416260 22.37396240]
[54.18126297 34.20023346]
[63.84207153 45.67493439]
[73.50288391 57.14963150]
[83.16369629 68.62433624]
[92.82450104 80.09902954]
[102.48531342 91.57373047]
[105.48900604 92.09079742]
[108.37094116 93.71220398]
[110.72173309 96.39496613]
[112.15360260 99.94545746]
[112.35487366 104.03109741]
[121.31556702 116.06047821]
[133.94178772 118.69512177]
[141.15753174 128.89889526]
[139.53984070 140.88677979]
[148.32044983 153.04824829]
[157.10104370 165.20970154]
[165.88165283 177.37115479]
[180.23303223 184.03062439]
[181.41011047 198.87864685]
[190.19071960 211.04010010]
[198.97132874 223.20155334]
[207.75192261 235.36300659]
[216.53253174 247.52445984]
[225.31312561 259.68591309]
[234.36312866 271.64825439]
[243.67800903 283.40551758]
[258.31243896 289.41751099]
[260.15133667 304.19815063]
[269.46624756 315.95541382]
[282.35675049 308.24246216]
[296.14376831 302.27813721]
[310.59133911 298.16442871]
[325.45227051 295.97177124]
[340.47225952 295.73767090]
[355.39431763 297.46612549]
[369.96307373 301.12756348]
[383.92926025 306.65936279]
[397.05389404 313.96682739]
[409.11239624 322.92492676]
[419.89840698 333.38040161]
[429.22741699 345.15429688]
[436.93972778 358.04519653]
[442.90341187 371.83248901]
[447.01644897 386.28024292]
[449.20840454 401.14129639]
[449.44177246 416.16128540]
[447.71261597 431.08325195]
[444.05047607 445.65185547]
[438.51800537 459.61776733]
[431.20993042 472.74203491]
[422.25125122 484.80010986]
[411.79525757 495.58566284]
[400.02090454 504.91409302]
[387.12966919 512.62579346]
[373.34207153 518.58880615]
[358.89410400 522.70117188]
[344.03298950 524.89239502]
[329.01296997 525.12506104]
[314.09106445 523.39520264]
[299.52267456 519.73236084]
[285.55700684 514.19921875]
[272.43307495 506.89053345]
[260.37542725 497.93127441]
[249.59039307 487.47479248]
[240.26252747 475.69998169]
[232.55142212 462.80834961]
[226.58905029 449.02050781]
[222.47740173 434.57232666]
[220.28686523 419.71109009]
[220.05491638 404.69107056]
[221.78550720 389.76925659]
[225.44903564 375.20101929]
[230.98281860 361.23562622]
[238.29216003 348.11206055]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 165]
[2 164]
[4 162]
[5 161]
[9 160]
[10 159]
[11 158]
[12 157]
[13 156]
[14 155]
[16 153]
[17 152]
[18 151]
[19 150]
[21 147]
[22 146]
[23 141]
[24 140]
[25 139]
[26 138]
[27 137]
[28 136]
[34 135]
[35 134]
[36 133]
[37 132]
[38 131]
[39 127]
[40 126]
[42 124]
[47 123]
[48 122]
[51 121]
[52 120]
[53 119]
[54 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
