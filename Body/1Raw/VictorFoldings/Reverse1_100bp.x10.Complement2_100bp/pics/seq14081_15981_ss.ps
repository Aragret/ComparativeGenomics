%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUAACAUUAACUCUAACGAGCCCCCUUAUCCAAUACACUAAUCCUCAUCCCAAUCCUACUCACCCUUCUUCUUUCUCUCCUUCAUUUCAAAUUAAUACxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[32.48926544 430.06564331]
[29.68999481 444.81582642]
[25.38891029 459.20001221]
[19.63160515 473.06570435]
[12.47910881 486.26593018]
[4.00724316 498.66073608]
[-5.69418526 510.11877441]
[-16.52233696 520.51855469]
[-28.36242485 529.74981689]
[-41.08893967 537.71472168]
[-54.56697464 544.32885742]
[-68.65364838 549.52209473]
[-83.19964600 553.23931885]
[-98.05075836 555.44122314]
[-113.04956818 556.10443115]
[-128.03706360 555.22192383]
[-142.85438538 552.80303955]
[-157.34445190 548.87341309]
[-171.35366821 543.47473145]
[-184.73352051 536.66418457]
[-197.34217834 528.51397705]
[-209.04597473 519.11053467]
[-219.72085571 508.55346680]
[-229.25366211 496.95477295]
[-237.54333496 484.43737793]
[-244.50199890 471.13394165]
[-250.05587769 457.18554688]
[-254.14611816 442.73999023]
[-256.72933960 427.95043945]
[-257.77819824 412.97366333]
[-257.28152466 397.96841431]
[-255.24461365 383.09375000]
[-251.68904114 368.50738525]
[-246.65251160 354.36395264]
[-240.18841553 340.81332397]
[-232.36526489 327.99917603]
[-223.26600647 316.05734253]
[-212.98709106 305.11441040]
[-201.63746643 295.28637695]
[-189.33744812 286.67742920]
[-176.21745300 279.37884521]
[-162.41651917 273.46795654]
[-148.08096313 269.00747681]
[-133.36276245 266.04461670]
[-118.41791534 264.61087036]
[-103.40486145 264.72134399]
[-88.48274231 266.37493896]
[-73.80973816 269.55407715]
[-59.54139709 274.22509766]
[-45.82896423 280.33847046]
[-32.81780243 287.82937622]
[-24.03720093 275.66790771]
[-15.25659752 263.50646973]
[-6.47599411 251.34501648]
[-5.29890823 236.49699402]
[9.05247021 229.83752441]
[17.83307266 217.67607117]
[18.67212296 200.14715576]
[35.53407288 192.74740601]
[43.66928864 180.14509583]
[51.32988358 167.24876404]
[58.99048233 154.35243225]
[66.65107727 141.45611572]
[74.31167603 128.55978394]
[81.97227478 115.66345978]
[89.63287354 102.76712799]
[95.19210052 88.83533478]
[98.51435852 74.20787048]
[101.83661652 59.58041382]
[100.24912262 53.16236115]
[101.89421844 47.72262573]
[105.48168945 44.56999588]
[109.23799133 30.04793739]
[112.99429321 15.52587700]
[116.75059509 1.00381804]
[120.39868164 -13.54580212]
[123.93835449 -28.12217712]
[127.47802734 -42.69855499]
[131.01770020 -57.27492905]
[134.55737305 -71.85130310]
[121.21730804 -64.99252319]
[106.89305115 -69.44398499]
[99.79016876 -82.65569305]
[103.97752380 -97.05937195]
[117.05641174 -104.40394592]
[131.53463745 -100.48211670]
[139.11830139 -87.54141235]
[136.23236084 -103.09718323]
[147.65306091 -112.65840149]
[152.47904968 -126.86085510]
[157.30505371 -141.06330872]
[162.13105774 -155.26576233]
[166.95704651 -169.46823120]
[171.78305054 -183.67068481]
[176.60903931 -197.87313843]
[163.21397400 -204.68142700]
[150.92422485 -213.32681274]
[139.98999023 -223.63328552]
[130.63386536 -235.39100647]
[123.04635620 -248.36059570]
[117.38191986 -262.27801514]
[113.75587463 -276.85995483]
[112.24205017 -291.80950928]
[112.87126160 -306.82232666]
[115.63069916 -321.59277344]
[120.46417999 -335.82015991]
[127.27330780 -349.21481323]
[135.91944885 -361.50402832]
[146.22659302 -372.43762207]
[157.98489380 -381.79299927]
[170.95495605 -389.37973022]
[184.87274170 -395.04330444]
[199.45487976 -398.66842651]
[214.40452576 -400.18133545]
[229.41731262 -399.55120850]
[244.18759155 -396.79086304]
[258.41467285 -391.95648193]
[271.80889893 -385.14651489]
[284.09759521 -376.49963379]
[295.03054810 -366.19180298]
[304.38519287 -354.43292236]
[311.97109985 -341.46240234]
[317.63381958 -327.54425049]
[321.25805664 -312.96188354]
[322.77005005 -298.01214600]
[322.13897705 -282.99938965]
[319.37771606 -268.22927856]
[314.54244995 -254.00251770]
[307.73168945 -240.60871887]
[299.08401489 -228.32055664]
[288.77551270 -217.38824463]
[277.01605225 -208.03430176]
[264.04507446 -200.44920349]
[250.12657166 -194.78735352]
[235.54397583 -191.16401672]
[220.59414673 -189.65296936]
[205.58143616 -190.28495789]
[190.81150818 -193.04713440]
[185.98550415 -178.84468079]
[181.15950012 -164.64222717]
[176.33351135 -150.43977356]
[171.50750732 -136.23731995]
[166.68151855 -122.03485870]
[161.85551453 -107.83240509]
[165.08663940 -93.29248810]
[153.32075500 -82.71541595]
[149.13374329 -68.31163025]
[145.59407043 -53.73525620]
[142.05439758 -39.15888214]
[138.51472473 -24.58250618]
[134.97505188 -10.00613022]
[136.45137024 -2.76442432]
[131.27264404 4.76011848]
[127.51634979 19.28217888]
[123.76004791 33.80423737]
[120.00374603 48.32629776]
[116.46407318 62.90267181]
[113.14181519 77.53012848]
[109.81955719 92.15759277]
[119.38519287 80.60343170]
[131.68182373 72.01315308]
[145.82174683 67.00689697]
[160.78417969 65.94606781]
[175.48899841 68.90724945]
[188.87461853 75.67667389]
[199.97473145 85.76564789]
[207.98802185 98.44583893]
[212.33598328 112.80185699]
[212.70475769 127.79732513]
[209.06770325 142.34970093]
[201.68737793 155.40844727]
[191.09658813 166.03083801]
[178.05989075 173.45004272]
[163.51841736 177.13044739]
[148.52191162 176.80636597]
[134.15299988 172.50119019]
[121.44898987 164.52572632]
[111.32698822 153.45571899]
[104.51770782 140.09031677]
[101.51272583 125.39440155]
[102.52919769 110.42772675]
[94.86859894 123.32405853]
[87.20800018 136.22038269]
[79.54740906 149.11671448]
[71.88681030 162.01303101]
[64.22621155 174.90936279]
[56.56561279 187.80569458]
[71.52404785 186.68974304]
[81.83442688 197.58451843]
[79.89633179 212.45878601]
[67.13844299 220.34779358]
[52.96541214 215.43605042]
[47.82490921 201.34596252]
[49.29727173 214.15982056]
[41.88247681 224.21987915]
[29.99452972 226.45666504]
[21.21392632 238.61811829]
[19.40879250 254.33601379]
[5.68546152 260.12561035]
[-3.09514165 272.28707886]
[-11.87574482 284.44851685]
[-20.65634727 296.60998535]
[-9.45168686 306.60296631]
[0.66608322 317.69506836]
[9.58970833 329.76870728]
[17.22459412 342.69592285]
[23.48980522 356.33963013]
[28.31892586 370.55523682]
[31.66076660 385.19204712]
[33.47990417 400.09490967]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 202]
[52 201]
[53 200]
[54 199]
[56 197]
[57 196]
[59 193]
[60 187]
[61 186]
[62 185]
[63 184]
[64 183]
[65 182]
[66 181]
[67 159]
[68 158]
[69 157]
[72 156]
[73 155]
[74 154]
[75 153]
[76 151]
[77 150]
[78 149]
[79 148]
[80 147]
[87 146]
[89 144]
[90 143]
[91 142]
[92 141]
[93 140]
[94 139]
[95 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
