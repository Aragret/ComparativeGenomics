%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[128.02569580 667.11517334]
[114.50689697 660.60614014]
[101.38554382 653.32904053]
[88.70523834 645.30810547]
[76.50810242 636.56994629]
[64.83464050 627.14361572]
[53.72364807 617.06036377]
[43.21202469 606.35375977]
[33.33469009 595.05932617]
[24.12445450 583.21466064]
[15.61191940 570.85894775]
[7.82535839 558.03338623]
[0.79063880 544.78051758]
[-5.46887064 531.14440918]
[-10.93237591 517.17028809]
[-15.58172894 502.90463257]
[-19.40148354 488.39480591]
[-22.37895203 473.68899536]
[-24.50424194 458.83609009]
[-25.77029419 443.88540649]
[-26.17290306 428.88662720]
[-25.71073151 413.88955688]
[-24.38531494 398.94403076]
[-22.20105553 384.09967041]
[-19.16520882 369.40582275]
[-15.28786087 354.91125488]
[-10.58189106 340.66418457]
[-5.06293297 326.71188354]
[1.25068092 313.10070801]
[8.33797646 299.87588501]
[16.17541122 287.08132935]
[24.73694801 274.75958252]
[33.99414825 262.95153809]
[43.91625977 251.69642639]
[54.47032166 241.03164673]
[65.62127686 230.99261475]
[77.33207703 221.61270142]
[89.56381989 212.92304993]
[102.27587891 204.95251465]
[115.42602539 197.72760010]
[128.97056580 191.27229309]
[123.30778503 177.38226318]
[117.64499664 163.49224854]
[111.98220825 149.60221863]
[100.01266479 140.73771667]
[101.96759033 125.03775787]
[96.30480957 111.14772797]
[93.85840607 125.94688416]
[85.67229462 138.51620483]
[73.12598419 146.73751831]
[58.33374405 149.22540283]
[43.78832245 145.56060791]
[31.94088364 136.36070251]
[24.78792763 123.17604065]
[23.53485489 108.22846985]
[28.39282608 94.03691864]
[38.54319000 82.99291229]
[52.27543259 76.95755768]
[67.27542877 76.94792175]
[81.01541901 82.96562195]
[91.18081665 93.99800110]
[88.29554749 79.27810669]
[85.41027069 64.55821991]
[82.52500153 49.83832550]
[79.63972473 35.11843491]
[76.75445557 20.39854431]
[73.86917877 5.67865276]
[69.94232941 20.15552521]
[62.82454681 33.35920715]
[52.88922119 44.59705734]
[40.65753555 53.27956009]
[26.77114296 58.95125198]
[11.95849514 61.31460571]
[-3.00336719 60.24564743]
[-17.32957458 55.80044556]
[-30.26860046 48.21219254]
[-41.14169312 37.87895203]
[-49.37846756 25.34278297]
[-54.54684448 11.26130962]
[-56.37569427 -3.62678313]
[-54.76908493 -18.54049492]
[-49.81129456 -32.69748306]
[-41.76239777 -45.35509872]
[-31.04462242 -55.84934998]
[-18.22020531 -63.62973022]
[-3.96188641 -68.28809357]
[10.98236942 -69.58007812]
[25.82861710 -67.43789673]
[39.79805374 -61.97393799]
[52.15786743 -53.47481918]
[62.25968933 -42.38639069]
[69.57359314 -29.29033279]
[73.71618652 -14.87199974]
[76.38198853 -29.63321686]
[79.04778290 -44.39443207]
[81.71357727 -59.15565109]
[84.37937164 -73.91687012]
[87.04516602 -88.67808533]
[73.18498993 -94.58090210]
[60.98611832 -103.42031860]
[51.06045151 -114.75296021]
[43.90584564 -128.01039124]
[39.88118362 -142.52761841]
[39.18833160 -157.57646179]
[41.86204910 -172.40208435]
[47.76821899 -186.26081848]
[56.61059570 -198.45755005]
[67.94564819 -208.38047791]
[81.20480347 -215.53186035]
[95.72300720 -219.55300903]
[110.77201843 -220.24221802]
[125.59698486 -217.56491089]
[139.45429993 -211.65538025]
[151.64888000 -202.81004333]
[161.56906128 -191.47259521]
[168.71723938 -178.21170044]
[172.73486328 -163.69253540]
[173.42042542 -148.64335632]
[170.73953247 -133.81903076]
[164.82664490 -119.96314240]
[155.97834778 -107.77070618]
[144.63850403 -97.85327911]
[131.37586975 -90.70831299]
[116.85572815 -86.69419861]
[101.80638123 -86.01229095]
[99.14058685 -71.25107574]
[96.47479248 -56.48985672]
[93.80899811 -41.72863770]
[91.14320374 -26.96742058]
[88.47740936 -12.20620441]
[88.58907318 2.79338026]
[91.47434998 17.51327133]
[94.35961914 32.23316193]
[97.24488831 46.95305634]
[100.13016510 61.67294693]
[103.01543427 76.39283752]
[105.90071106 91.11273193]
[110.19483185 105.48493958]
[115.85762024 119.37496948]
[128.23220825 129.23297119]
[125.87223816 143.93942261]
[131.53501892 157.82945251]
[137.19781494 171.71948242]
[142.86059570 185.60951233]
[157.05772400 180.75489807]
[171.51095581 176.72627258]
[186.17227173 173.53701782]
[200.99298096 171.19772339]
[215.92385864 169.71617126]
[230.91526794 169.09729004]
[245.91744995 169.34310913]
[260.88055420 170.45283508]
[275.75485229 172.42277527]
[290.49096680 175.24638367]
[305.03991699 178.91427612]
[319.35339355 183.41427612]
[333.38385010 188.73144531]
[347.08465576 194.84808350]
[360.41033936 201.74391174]
[373.31658936 209.39599609]
[385.76052856 217.77893066]
[397.70086670 226.86486816]
[409.09790039 236.62362671]
[419.91378784 247.02276611]
[430.11260986 258.02777100]
[439.66043091 269.60208130]
[448.52560425 281.70721436]
[456.67864990 294.30300903]
[464.09246826 307.34756470]
[470.74246216 320.79760742]
[476.60650635 334.60842896]
[481.66516113 348.73413086]
[485.90158081 363.12783813]
[489.30172729 377.74169922]
[491.85427856 392.52716064]
[493.55078125 407.43511963]
[494.38555908 422.41607666]
[494.35589600 437.42022705]
[493.46185303 452.39776611]
[491.70642090 467.29891968]
[489.09539795 482.07418823]
[485.63748169 496.67446899]
[481.34414673 511.05130005]
[476.22967529 525.15686035]
[470.31103516 538.94439697]
[463.60791016 552.36804199]
[456.14254761 565.38317871]
[447.93975830 577.94659424]
[439.02679443 590.01660156]
[429.43322754 601.55303955]
[419.19097900 612.51763916]
[408.33404541 622.87390137]
[396.89849854 632.58752441]
[384.92233276 641.62615967]
[372.44531250 649.95977783]
[359.50891113 657.56079102]
[346.15606689 664.40386963]
[332.43115234 670.46624756]
[318.37979126 675.72784424]
[304.04861450 680.17120361]
[289.48526001 683.78155518]
[274.73809814 686.54687500]
[259.85610962 688.45794678]
[244.88874817 689.50848389]
[229.88572693 689.69494629]
[214.89686584 689.01678467]
[199.97198486 687.47619629]
[185.16064453 685.07830811]
[170.51203918 681.83105469]
[156.07485962 677.74530029]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 144]
[42 143]
[43 142]
[44 141]
[46 139]
[47 138]
[61 137]
[62 136]
[63 135]
[64 134]
[65 133]
[66 132]
[67 131]
[93 130]
[94 129]
[95 128]
[96 127]
[97 126]
[98 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
