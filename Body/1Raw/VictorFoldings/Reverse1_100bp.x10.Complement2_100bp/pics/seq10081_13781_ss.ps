%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[-4.76426697 524.68695068]
[2.11355090 538.11669922]
[5.28018999 552.86914062]
[4.51974297 567.93847656]
[-0.11594088 582.29718018]
[-8.31079292 594.96630859]
[-19.50607491 605.08203125]
[-32.93847275 611.95465088]
[-47.69214630 615.11560059]
[-62.76116180 614.34936523]
[-77.11809540 609.70812988]
[-89.78405762 601.50836182]
[-99.89546967 590.30920410]
[-106.76290894 576.87414551]
[-109.91815948 562.11926270]
[-109.14607239 547.05053711]
[-104.49930573 532.69537354]
[-96.29467010 520.03259277]
[-85.09157562 509.92550659]
[-71.65387726 503.06323242]
[-56.89776611 499.91369629]
[-41.82934570 500.69158936]
[-37.21533966 486.41885376]
[-32.60132980 472.14614868]
[-27.98731995 457.87341309]
[-23.37331009 443.60067749]
[-18.75930023 429.32794189]
[-14.14529133 415.05520630]
[-26.72876930 406.95547485]
[-36.79451752 395.86593628]
[-43.65194321 382.53851318]
[-46.82825470 367.87893677]
[-46.10106659 352.88522339]
[-41.51395035 338.57971191]
[-33.37387085 325.93942261]
[-22.23066330 315.82925415]
[-8.83988667 308.94281006]
[5.88840246 305.75488281]
[20.95149803 306.48864746]
[25.56550598 292.21591187]
[30.17951584 277.94317627]
[34.79352570 263.67044067]
[39.40753555 249.39770508]
[38.47392654 242.06625366]
[44.19794464 234.94772339]
[49.02394485 220.74526978]
[53.84994125 206.54281616]
[48.78620529 195.55714417]
[52.69058990 183.68534851]
[63.98812485 177.46212769]
[69.02503967 163.33308411]
[74.06195831 149.20405579]
[79.09887695 135.07502747]
[84.13578796 120.94599915]
[89.17270660 106.81697083]
[78.36878204 117.22251129]
[65.34178162 124.65872955]
[50.88832855 128.67091370]
[35.89224625 129.01371765]
[21.27055359 125.66616821]
[7.91737175 118.83296967]
[-3.35074639 108.93199158]
[-11.84475136 96.56865692]
[-17.04523087 82.49900818]
[-18.63417625 67.58340454]
[-16.51441765 52.73394012]
[-10.81558418 38.85866547]
[-1.88615954 26.80605698]
[9.72781849 17.31313896]
[23.31615067 10.96040440]
[38.04790497 8.13632774]
[53.02222824 9.01360130]
[67.32344055 13.53858089]
[80.07700348 21.43456078]
[90.50305176 32.21870041]
[97.96401215 45.23154068]
[102.00364685 59.67734909]
[102.37493896 74.67275238]
[99.05516052 89.30080414]
[108.54405975 77.68354034]
[118.03295898 66.06627655]
[127.52185822 54.44901657]
[137.01075745 42.83175278]
[146.41290283 31.14417076]
[155.72778320 19.38692093]
[165.04267883 7.62966871]
[174.35755920 -4.12758255]
[183.67243958 -15.88483429]
[190.15193176 -29.41317940]
[193.47419739 -44.04063797]
[196.79644775 -58.66809845]
[200.11871338 -73.29556274]
[203.33198547 -87.94734955]
[206.43609619 -102.62265015]
[209.54020691 -117.29795074]
[208.25442505 -126.34143829]
[212.80131531 -132.16789246]
[216.12358093 -146.79534912]
[202.41421509 -153.01130676]
[190.23695374 -161.85998535]
[180.09043884 -172.97903442]
[172.39016724 -185.91311646]
[167.45146179 -200.13261414]
[165.47654724 -215.05523682]
[166.54632568 -230.06991577]
[170.61695862 -244.56179810]
[177.52177429 -257.93746948]
[186.97801208 -269.64920044]
[198.59844971 -279.21737671]
[211.90725708 -286.25021362]
[226.35940552 -290.45971680]
[241.36312866 -291.67352295]
[256.30401611 -289.84188843]
[270.57025146 -285.03985596]
[283.57763672 -277.46405029]
[294.79351807 -267.42468262]
[303.75863647 -255.33288574]
[310.10586548 -241.68379211]
[313.57528687 -227.03633118]
[314.02481079 -211.99031067]
[311.43606567 -197.16184998]
[305.91506958 -183.15817261]
[297.68783569 -170.55270386]
[287.09133911 -159.86163330]
[274.55944824 -151.52278137]
[260.60534668 -145.87757874]
[245.80046082 -143.15721130]
[230.75103760 -143.47308350]
[227.42878723 -128.84562683]
[224.21551514 -114.19384003]
[221.11140442 -99.51853943]
[218.00729370 -84.84323883]
[219.69856262 -77.64869690]
[214.74617004 -69.97329712]
[211.42391968 -55.34584045]
[208.10165405 -40.71837997]
[204.77938843 -26.09091949]
[214.25157166 -37.72182083]
[225.78503418 -47.31240845]
[238.94859314 -54.50412369]
[253.25010681 -59.02809906]
[268.15493774 -60.71520996]
[283.10580444 -59.50237656]
[297.54382324 -55.43494415]
[310.92916870 -48.66497803]
[322.76144409 -39.44557190]
[332.59826660 -28.12140465]
[340.07189941 -15.11583996]
[344.90295410 -0.91509736]
[346.91076660 13.94991684]
[346.02032471 28.92346382]
[342.26486206 43.44574356]
[335.78485107 56.97383499]
[326.82247925 69.00197601]
[315.71289062 79.08049011]
[302.87133789 86.83258057]
[288.77798462 91.96843719]
[273.95965576 94.29603577]
[258.97039795 93.72837830]
[244.37059021 90.28666687]
[230.70603943 84.09959412]
[218.48759460 75.39844513]
[208.17208862 64.50853729]
[200.14514160 51.83699036]
[194.70686340 37.85753632]
[192.06054688 23.09281349]
[192.30516052 8.09480858]
[195.42968750 -6.56995106]
[186.11480713 5.18730021]
[176.79992676 16.94455147]
[167.48504639 28.70180321]
[158.17015076 40.45905304]
[156.48039246 47.65394592]
[148.62802124 52.32065201]
[139.13911438 63.93791580]
[129.65022278 75.55517578]
[120.16132355 87.17243958]
[110.67242432 98.78970337]
[103.30173492 111.85388947]
[98.26481628 125.98291779]
[93.22790527 140.11195374]
[88.19098663 154.24098206]
[83.15406799 168.37001038]
[78.11715698 182.49903870]
[81.85411835 200.53002930]
[68.05239868 211.36882019]
[63.22639847 225.57127380]
[58.40040207 239.77372742]
[53.68026733 254.01171875]
[49.06625748 268.28445435]
[44.45224762 282.55718994]
[39.83824158 296.82992554]
[35.22423172 311.10266113]
[47.86635971 319.32528687]
[57.94139099 330.53149414]
[64.76700592 343.95336914]
[67.88328552 358.67327881]
[67.08367920 373.68655396]
[62.42868805 387.97012329]
[54.24133682 400.55215454]
[43.08476257 410.57827759]
[29.72349167 417.36950684]
[15.07103443 420.46829224]
[0.12744187 419.66921997]
[-4.48656750 433.94195557]
[-9.10057640 448.21469116]
[-13.71458626 462.48739624]
[-18.32859612 476.76013184]
[-22.94260406 491.03286743]
[-27.55661392 505.30560303]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 210]
[23 209]
[24 208]
[25 207]
[26 206]
[27 205]
[28 204]
[39 193]
[40 192]
[41 191]
[42 190]
[43 189]
[45 188]
[46 187]
[47 186]
[50 184]
[51 183]
[52 182]
[53 181]
[54 180]
[55 179]
[79 178]
[80 177]
[81 176]
[82 175]
[83 174]
[84 172]
[85 171]
[86 170]
[87 169]
[88 168]
[89 137]
[90 136]
[91 135]
[92 134]
[93 132]
[94 131]
[95 130]
[97 129]
[98 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
