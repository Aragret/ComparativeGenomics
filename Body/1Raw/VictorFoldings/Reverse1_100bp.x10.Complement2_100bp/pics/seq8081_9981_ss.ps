%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[94.02931213 346.34600830]
[90.12431335 331.85574341]
[87.32638550 317.11163330]
[85.65155029 302.19812012]
[85.10941315 287.20068359]
[85.70307159 272.20516968]
[87.42913055 257.29751587]
[90.27770233 242.56311035]
[94.23246002 228.08631897]
[99.27075958 213.95010376]
[105.36374664 200.23539734]
[112.47650909 187.02078247]
[120.56831360 174.38195801]
[129.59280396 162.39129639]
[139.49830627 151.11749268]
[129.01080322 140.39311218]
[114.58046722 136.70330811]
[110.46369171 121.42708588]
[99.97619629 110.70271301]
[88.21894073 101.38782501]
[75.37999725 93.63143921]
[62.54106140 85.87504578]
[49.70212173 78.11865234]
[31.28805733 78.18046570]
[23.42302322 62.49263000]
[10.47002411 54.92825317]
[-2.48297429 47.36387253]
[-15.43597317 39.79949570]
[-28.38897133 32.23511505]
[-36.90397644 44.59257889]
[-46.31865311 56.27915573]
[-56.58034897 67.22949219]
[-67.63166809 77.38234711]
[-79.41082001 86.68093872]
[-91.85192108 95.07327271]
[-104.88539886 102.51240540]
[-118.43836212 108.95673370]
[-132.43501282 114.37023163]
[-146.79708862 118.72261047]
[-161.44424438 121.98953247]
[-176.29458618 124.15273285]
[-191.26507568 125.20011139]
[-206.27195740 125.12580872]
[-221.23133850 123.93023682]
[-236.05952454 121.62009430]
[-250.67362976 118.20828247]
[-264.99188232 113.71389771]
[-278.93426514 108.16207123]
[-292.42272949 101.58384705]
[-305.38189697 94.01601410]
[-317.73928833 85.50090027]
[-329.42578125 76.08612061]
[-340.37603760 65.82433319]
[-350.52877808 54.77291870]
[-359.82727051 42.99368668]
[-368.21951294 30.55251122]
[-375.65850830 17.51896858]
[-382.10272217 3.96595025]
[-387.51611328 -10.03075027]
[-391.86834717 -24.39285660]
[-395.13516235 -39.04005051]
[-397.29821777 -53.89041519]
[-398.34545898 -68.86090088]
[-398.27102661 -83.86779022]
[-397.07531738 -98.82715607]
[-394.76504517 -113.65532684]
[-391.35311890 -128.26939392]
[-386.85861206 -142.58761597]
[-381.30664062 -156.52993774]
[-374.72830200 -170.01835632]
[-367.16036987 -182.97746277]
[-358.64514160 -195.33477783]
[-349.23025513 -207.02117920]
[-338.96838379 -217.97134399]
[-327.91687012 -228.12399292]
[-316.13754272 -237.42237854]
[-303.69631958 -245.81449890]
[-290.66268921 -253.25340271]
[-277.10961914 -259.69750977]
[-263.11288452 -265.11074829]
[-248.75073242 -269.46286011]
[-234.10350037 -272.72952271]
[-219.25312805 -274.89248657]
[-204.28262329 -275.93957520]
[-189.27574158 -275.86502075]
[-174.31639099 -274.66918945]
[-159.48823547 -272.35876465]
[-144.87419128 -268.94671631]
[-130.55601501 -264.45208740]
[-116.61374664 -258.89999390]
[-103.12538147 -252.32153320]
[-90.16634369 -244.75347900]
[-77.80910492 -236.23814392]
[-66.12277222 -226.82316589]
[-55.17271042 -216.56117249]
[-45.02014923 -205.50958252]
[-35.72186661 -193.73019409]
[-27.32986641 -181.28886414]
[-19.89107704 -168.25518799]
[-13.44710255 -154.70205688]
[-8.03397846 -140.70526123]
[-3.68197918 -126.34307861]
[-0.41544208 -111.69583130]
[1.74736440 -96.84542847]
[2.79434490 -81.87492371]
[2.71964431 -66.86803436]
[1.52368033 -51.90869141]
[-0.78685874 -37.08055878]
[-4.19905138 -22.46655083]
[-8.69381428 -8.14840508]
[-14.24601173 5.79380846]
[-20.82459259 19.28211784]
[-7.87159395 26.84649658]
[5.08140469 34.41087723]
[18.03440285 41.97525406]
[30.98740196 49.53963470]
[42.76288986 46.77115250]
[53.61615372 52.96715546]
[57.45851135 65.27970886]
[70.29745483 73.03610229]
[83.13639069 80.79249573]
[95.97533417 88.54888916]
[88.35645294 75.62786865]
[85.28133392 60.94646454]
[87.07450867 46.05403519]
[93.54673767 32.52220917]
[104.01498413 21.77903748]
[117.37451935 14.95827198]
[132.21546936 12.77972317]
[146.97164917 15.47329903]
[160.08578491 22.75473976]
[170.17391968 33.85561752]
[176.17143250 47.60443115]
[177.44538879 62.55023575]
[173.86132812 77.11576080]
[165.79751587 89.76387787]
[154.10491943 99.15979767]
[140.01750183 104.31195068]
[125.02194214 104.67660522]
[110.70056915 100.21520996]
[121.18807220 110.93959045]
[136.36854553 115.39647675]
[139.73518372 129.90560913]
[150.22268677 140.62998962]
[161.71487427 130.97872925]
[173.90408325 122.22426605]
[186.72045898 114.41672516]
[200.09062195 107.60083771]
[213.93797302 101.81565094]
[228.18318176 97.09429169]
[242.74467468 93.46380615]
[257.53903198 90.94499207]
[272.48150635 89.55228424]
[287.48651123 89.29364777]
[302.46813965 90.17057037]
[317.34048462 92.17802429]
[332.01846313 95.30451202]
[346.41790771 99.53213501]
[360.45642090 104.83666992]
[374.05352783 111.18772888]
[387.13137817 118.54893494]
[399.61505127 126.87812805]
[411.43301392 136.12759399]
[422.51763916 146.24435425]
[432.80535889 157.17047119]
[442.23730469 168.84333801]
[450.75942993 181.19610596]
[458.32290649 194.15802002]
[464.88442993 207.65481567]
[470.40640259 221.60922241]
[474.85720825 235.94126892]
[478.21133423 250.56889343]
[480.44958496 265.40829468]
[481.55914307 280.37445068]
[481.53363037 295.38168335]
[480.37322998 310.34399414]
[478.08453369 325.17568970]
[474.68072510 339.79180908]
[470.18121338 354.10867310]
[464.61184692 368.04421997]
[458.00448608 381.51864624]
[450.39697266 394.45477295]
[441.83291626 406.77847290]
[432.36135864 418.41921997]
[422.03652954 429.31030273]
[410.91760254 439.38934326]
[399.06826782 448.59857178]
[386.55636597 456.88528442]
[373.45355225 464.20199585]
[359.83493042 470.50680542]
[345.77850342 475.76358032]
[331.36474609 479.94223022]
[316.67623901 483.01882935]
[301.79714966 484.97570801]
[286.81265259 485.80169678]
[271.80859375 485.49206543]
[256.87094116 484.04858398]
[242.08522034 481.47949219]
[227.53614807 477.79953003]
[213.30706787 473.02978516]
[199.47947693 467.19754028]
[186.13255310 460.33627319]
[173.34278870 452.48519897]
[161.18341064 443.68936157]
[149.72409058 433.99908447]
[139.03044128 423.46990967]
[129.16374207 412.16213989]
[120.18050385 400.14056396]
[112.13216400 387.47399902]
[105.06484222 374.23501587]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 144]
[16 143]
[18 141]
[19 140]
[20 122]
[21 121]
[22 120]
[23 119]
[25 116]
[26 115]
[27 114]
[28 113]
[29 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
