%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGGCUAUAGCGGCUAUGCCAACAUAUCCUAACGAACUUACCGACGACACAACCGUAGACGAGCCCGCAUAGUAGUUGACUACUCGUUCUUCCUAUAUUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[89.27851105 723.87603760]
[74.33353424 722.27978516]
[59.80740356 718.42077637]
[46.04063034 712.38946533]
[33.35593033 704.32733154]
[22.05065155 694.42321777]
[12.38980484 682.90936279]
[4.59985399 670.05566406]
[-1.13659298 656.16345215]
[-4.68506527 641.55841064]
[-5.96238232 626.58276367]
[-4.93860149 611.58770752]
[-1.63772142 596.92468262]
[3.86287999 582.93737793]
[11.43426132 569.95373535]
[20.89893723 558.27813721]
[32.03504562 548.18420410]
[44.58153534 539.90856934]
[58.24430084 533.64526367]
[72.70306396 529.54101562]
[87.61890411 527.69213867]
[88.06550598 512.69879150]
[88.51211548 497.70547485]
[88.95871735 482.71209717]
[78.58977509 472.08099365]
[78.82911682 456.86923218]
[90.05030823 446.06542969]
[90.49691772 431.07208252]
[90.94352722 416.07873535]
[91.39012909 401.08538818]
[81.32894135 393.03540039]
[77.68694305 380.47283936]
[82.00895691 367.92172241]
[92.92899323 360.03707886]
[90.08729553 353.21459961]
[93.72194672 344.83441162]
[94.61476135 329.86102295]
[95.50757599 314.88760376]
[96.40039062 299.91421509]
[96.73536682 284.91793823]
[88.80944061 272.30728149]
[96.34041595 258.39343262]
[96.11708832 243.39509583]
[95.89376068 228.39675903]
[95.67043304 213.39842224]
[95.44710541 198.40008545]
[95.22377777 183.40174866]
[95.00045013 168.40341187]
[94.66547394 153.40715027]
[84.65126801 138.99595642]
[93.51406097 122.85494232]
[92.84426880 107.86990356]
[91.06180573 92.97618866]
[88.17653656 78.25629425]
[77.92923737 66.20211029]
[83.07393646 52.22422409]
[80.18866730 37.50433350]
[76.75660706 33.57138824]
[75.31999969 29.15670204]
[75.72819519 25.10103607]
[77.51868439 22.06352234]
[75.29356384 7.22947931]
[62.86804581 -2.16436100]
[60.82277679 -17.23988914]
[69.85494232 -29.02783012]
[67.62982941 -43.86187363]
[65.40470886 -58.69591904]
[63.17959213 -73.52996063]
[56.65291214 -60.02431870]
[44.65258408 -51.02475357]
[29.85951424 -48.54179764]
[15.57851028 -53.13014603]
[4.99998617 -63.76475143]
[0.48721114 -78.06981659]
[3.04835033 -92.84954834]
[12.11123848 -104.80212402]
[25.65120316 -111.25730896]
[40.64338303 -110.77298737]
[53.73848343 -103.45736694]
[62.01103973 -90.94474792]
[62.23436737 -105.94308472]
[59.23307037 -114.57037354]
[62.57432938 -121.16262817]
[63.02093506 -136.15597534]
[63.46754074 -151.14932251]
[63.91414642 -166.14266968]
[64.36075592 -181.13603210]
[64.47241974 -196.13560486]
[63.91420746 -211.12521362]
[63.02139282 -226.09863281]
[62.12857819 -241.07203674]
[61.23575974 -256.04544067]
[60.34294510 -271.01882935]
[59.45013046 -285.99224854]
[58.55731201 -300.96566772]
[44.02271652 -305.26928711]
[31.83844185 -314.28701782]
[23.47579765 -326.92987061]
[19.94461441 -341.67120361]
[21.67129898 -356.73089600]
[28.44734764 -370.29043579]
[39.45452118 -380.71240234]
[53.36364365 -386.73837280]
[68.49512482 -387.64059448]
[83.02176666 -383.31018066]
[95.18940735 -374.27005005]
[103.52873230 -361.61178589]
[107.03274536 -346.86398315]
[105.27831268 -331.80749512]
[98.47728729 -318.26046753]
[87.45092773 -307.85876465]
[73.53071594 -301.85845947]
[74.42353821 -286.88507080]
[75.31635284 -271.91165161]
[76.20916748 -256.93826294]
[77.10198212 -241.96484375]
[77.99479675 -226.99143982]
[78.88761139 -212.01803589]
[81.26792908 -209.41679382]
[82.50656891 -205.53340149]
[82.01464081 -200.91697693]
[79.47075653 -196.35893250]
[81.73254395 -193.65400696]
[82.79655457 -189.71917725]
[82.09897614 -185.12931824]
[79.35410309 -180.68942261]
[78.90749359 -165.69607544]
[78.46089172 -150.70271301]
[78.01428223 -135.70936584]
[77.56768036 -120.71601868]
[77.23270416 -105.71975708]
[77.00937653 -90.72142029]
[78.01363373 -75.75508118]
[80.23875427 -60.92103577]
[82.46386719 -46.08699036]
[84.68898773 -31.25294876]
[96.78222656 -22.63383102]
[99.25012970 -7.62169933]
[90.12760925 5.00436211]
[92.35272980 19.83840561]
[94.90856171 34.61906052]
[97.79383087 49.33895111]
[107.83475494 60.34027481]
[102.89642334 75.37102509]
[105.78170013 90.09091187]
[112.13613129 76.50337982]
[124.37612915 67.83259583]
[139.30220032 66.34510040]
[153.01268005 72.42971802]
[161.92370605 84.49593353]
[163.70594788 99.38967896]
[157.89352417 113.21775818]
[146.00581360 122.36554718]
[131.15020752 124.44184113]
[117.20993042 118.90389252]
[107.82930756 107.20011902]
[108.49909973 122.18515778]
[117.47353363 131.44918823]
[117.72290039 143.94406128]
[109.65882111 152.96055603]
[113.04235077 161.44522095]
[109.99878693 168.18008423]
[110.22211456 183.17842102]
[110.44544220 198.17675781]
[110.66876984 213.17509460]
[110.89209747 228.17343140]
[111.11542511 243.17176819]
[111.33875275 258.17010498]
[119.28066254 271.85354614]
[111.73371124 284.69461060]
[123.89498901 275.91378784]
[138.38288879 279.79974365]
[144.51745605 293.48797607]
[137.77651978 306.88796997]
[123.12925720 310.12176514]
[111.37380219 300.80700684]
[110.48098755 315.78042603]
[109.58816528 330.75384521]
[108.69535065 345.72723389]
[107.91403198 360.70687866]
[119.95348358 373.39825439]
[119.10585785 390.53289795]
[106.38347626 401.53198242]
[105.93687439 416.52532959]
[105.49026489 431.51867676]
[105.04366302 446.51202393]
[115.60191345 457.96459961]
[114.93540192 473.16360474]
[103.95207214 483.15872192]
[103.50546265 498.15206909]
[103.05886078 513.14538574]
[102.61225128 528.13879395]
[117.39159393 530.87219238]
[131.58044434 535.82971191]
[144.84617615 542.89514160]
[156.87785339 551.90289307]
[167.39341736 562.64172363]
[176.14636230 574.86004639]
[182.93151855 588.27130127]
[187.58982849 602.56115723]
[190.01210022 617.39465332]
[190.14154053 632.42413330]
[187.97512817 647.29711914]
[183.56364441 661.66510010]
[177.01048279 675.19128418]
[168.46928406 687.55847168]
[158.14024353 698.47692871]
[146.26550293 707.69055176]
[133.12342834 714.98339844]
[119.02207184 720.18457031]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 192]
[22 191]
[23 190]
[24 189]
[27 186]
[28 185]
[29 184]
[30 183]
[34 180]
[36 179]
[37 178]
[38 177]
[39 176]
[40 170]
[42 168]
[43 167]
[44 166]
[45 165]
[46 164]
[47 163]
[48 162]
[49 160]
[51 157]
[52 156]
[53 145]
[54 144]
[56 142]
[57 141]
[61 140]
[62 139]
[65 136]
[66 135]
[67 134]
[68 133]
[80 132]
[81 131]
[83 130]
[84 129]
[85 128]
[86 127]
[87 126]
[88 122]
[89 118]
[90 117]
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
