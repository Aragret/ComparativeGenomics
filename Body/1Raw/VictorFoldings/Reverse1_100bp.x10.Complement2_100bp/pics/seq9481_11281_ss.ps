%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[131.21192932 622.76281738]
[122.45108795 610.57257080]
[114.90769958 597.59362793]
[108.65219116 583.94720459]
[103.74296570 569.76080322]
[100.22586060 555.16674805]
[98.13372803 540.30139160]
[97.48608398 525.30352783]
[98.28898621 510.31317139]
[100.53493500 495.47030640]
[104.20296478 480.91348267]
[109.25881958 466.77862549]
[115.65530396 453.19772339]
[123.33267975 440.29760742]
[132.21926880 428.19866943]
[142.23211670 417.01394653]
[153.27769470 406.84777832]
[165.25291443 397.79516602]
[178.04592896 389.94061279]
[191.53730774 383.35742188]
[186.29058838 369.30496216]
[181.04386902 355.25247192]
[175.79714966 341.20001221]
[162.18203735 335.27005005]
[156.66093445 321.09359741]
[162.97314453 306.85302734]
[157.72642517 292.80053711]
[152.47970581 278.74807739]
[147.12852478 264.73504639]
[141.67315674 250.76225281]
[136.21780396 236.78945923]
[121.94586945 226.57775879]
[124.87398529 208.39788818]
[119.21119690 194.50785828]
[114.32940674 208.69123840]
[102.10970306 217.39059448]
[87.10973358 217.36129761]
[74.92411041 208.61425781]
[70.09777832 194.41191101]
[74.43083191 180.05139160]
[86.30715179 170.88880920]
[101.29716492 170.34156799]
[113.81069946 178.61471558]
[109.83860779 164.15019226]
[105.86650848 149.68566895]
[90.23482513 149.06854248]
[75.55789185 143.65391541]
[63.27071381 133.97117615]
[54.57461166 120.96701050]
[50.31983185 105.91286469]
[50.92235947 90.28060913]
[56.32329178 75.59864044]
[65.99456787 63.30242538]
[78.99061584 54.59419632]
[74.80360413 40.19041443]
[70.61659241 25.78663254]
[66.42958069 11.38285065]
[61.02912903 4.01583338]
[62.28917313 -3.26661730]
[58.31707764 -17.73114204]
[53.88929749 -22.64095879]
[52.77327728 -28.21334839]
[54.44892502 -32.68562317]
[50.90925217 -47.26200104]
[47.26116562 -61.81161880]
[43.50486374 -76.33367920]
[39.74856186 -90.85573578]
[35.99225998 -105.37779999]
[32.23596191 -119.89985657]
[28.37165642 -134.39355469]
[24.39955902 -148.85807800]
[20.42746353 -163.32260132]
[16.45536613 -177.78712463]
[8.11412334 -165.32022095]
[-6.57201815 -162.26780701]
[-19.19016838 -170.37843323]
[-22.51207733 -185.00596619]
[-14.63480473 -197.77110291]
[-0.07081100 -201.36137390]
[12.83641434 -193.72088623]
[10.17061901 -208.48210144]
[7.50482321 -223.24331665]
[4.83902788 -238.00453186]
[2.17323208 -252.76574707]
[-12.87395477 -253.02725220]
[-27.58093262 -256.21960449]
[-41.38240433 -262.22006226]
[-53.74787903 -270.79800415]
[-64.20205688 -281.62374878]
[-72.34311676 -294.28112793]
[-77.85812378 -308.28366089]
[-80.53510284 -323.09310913]
[-80.27116394 -338.14025879]
[-77.07644653 -352.84671021]
[-71.07374573 -366.64721680]
[-62.49378967 -379.01132202]
[-51.66637039 -389.46374512]
[-39.00766754 -397.60275269]
[-25.00424194 -403.11547852]
[-10.19435215 -405.79006958]
[4.85274982 -405.52368164]
[19.55869293 -402.32659912]
[33.35822296 -396.32165527]
[45.72091675 -387.73971558]
[56.17159271 -376.91058350]
[64.30854797 -364.25057983]
[69.81903076 -350.24624634]
[72.49121857 -335.43594360]
[72.22240448 -320.38888550]
[69.02292633 -305.68344116]
[63.01575470 -291.88488770]
[54.43179703 -279.52359009]
[43.60099792 -269.07467651]
[30.93965721 -260.93975830]
[16.93445015 -255.43154907]
[19.60024452 -240.67033386]
[22.26604080 -225.90911865]
[24.93183517 -211.14788818]
[27.59763145 -196.38667297]
[30.91989136 -181.75921631]
[34.89198685 -167.29469299]
[38.86408234 -152.83016968]
[42.83617783 -138.36564636]
[47.63870239 -132.74803162]
[46.75802231 -123.65615845]
[50.51432037 -109.13410187]
[54.27062225 -94.61203766]
[58.02692413 -80.08998108]
[61.78322220 -65.56792450]
[66.50157166 -59.87942886]
[65.48562622 -50.80167389]
[69.02529907 -36.22529602]
[72.78160095 -21.70323753]
[76.75369263 -7.23871374]
[80.83336639 7.19583941]
[85.02037048 21.59962082]
[89.20738220 36.00340271]
[93.39439392 50.40718460]
[107.63159943 50.55467606]
[121.25073242 54.70664978]
[133.14881897 62.52684402]
[142.36222839 73.38191223]
[148.14482117 86.39273071]
[150.02824402 100.50557709]
[147.85998535 114.57747650]
[141.81564331 127.46877289]
[132.38471985 138.13542175]
[120.33103180 145.71356201]
[124.30313110 160.17808533]
[128.27522278 174.64262390]
[133.10122681 188.84507751]
[138.76400757 202.73509216]
[150.32815552 208.44764709]
[154.75874329 220.13327026]
[150.19059753 231.33409119]
[155.64596558 245.30690002]
[161.10131836 259.27969360]
[167.13748169 266.13552856]
[166.53218079 273.50134277]
[171.77890015 287.55383301]
[177.02560425 301.60629272]
[191.12612915 308.22546387]
[196.24685669 322.55139160]
[189.84962463 335.95327759]
[195.09632874 350.00576782]
[200.34304810 364.05822754]
[205.58976746 378.11071777]
[220.09432983 374.24114990]
[234.90463257 371.78958130]
[249.88241577 370.77883911]
[264.88781738 371.21844482]
[279.78076172 373.10421753]
[294.42214966 376.41857910]
[308.67532349 381.13058472]
[322.40713501 387.19622803]
[335.48944092 394.55889893]
[347.80007935 403.14984131]
[359.22406006 412.88882446]
[369.65475464 423.68493652]
[378.99478149 435.43737793]
[387.15689087 448.03640747]
[394.06494141 461.36434937]
[399.65435791 475.29684448]
[403.87298584 489.70373535]
[406.68145752 504.45053101]
[408.05352783 519.39953613]
[407.97637939 534.41119385]
[406.45074463 549.34527588]
[403.49084473 564.06243896]
[399.12435913 578.42523193]
[393.39202881 592.29949951]
[386.34738159 605.55578613]
[378.05618286 618.07025146]
[368.59585571 629.72607422]
[358.05474854 640.41436768]
[346.53125000 650.03546143]
[334.13299561 658.49938965]
[320.97570801 665.72717285]
[307.18225098 671.65136719]
[292.88140869 676.21667480]
[278.20672607 679.38037109]
[263.29519653 681.11297607]
[248.28605652 681.39831543]
[233.31945801 680.23370361]
[218.53512573 677.63000488]
[204.07110596 673.61157227]
[190.06246948 668.21588135]
[176.63996887 661.49340820]
[163.92897034 653.50677490]
[152.04814148 644.33062744]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 167]
[21 166]
[22 165]
[23 164]
[26 161]
[27 160]
[28 159]
[29 157]
[30 156]
[31 155]
[33 152]
[34 151]
[43 150]
[44 149]
[45 148]
[54 138]
[55 137]
[56 136]
[57 135]
[59 134]
[60 133]
[63 132]
[64 131]
[65 129]
[66 128]
[67 127]
[68 126]
[69 125]
[70 123]
[71 122]
[72 121]
[73 120]
[80 119]
[81 118]
[82 117]
[83 116]
[84 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
