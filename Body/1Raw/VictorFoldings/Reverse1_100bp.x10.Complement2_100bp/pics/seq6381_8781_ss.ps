%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[94.89981079 522.97918701]
[100.17737579 508.85125732]
[108.80328369 496.48013306]
[120.23530579 486.64346313]
[133.75480652 479.95962524]
[130.65069580 465.28433228]
[127.54658508 450.60900879]
[124.44247437 435.93371582]
[121.33836365 421.25842285]
[117.47406006 406.76470947]
[112.86005402 392.49197388]
[101.58296967 382.76177979]
[104.70019531 367.25070190]
[100.08618164 352.97796631]
[95.47217560 338.70526123]
[91.70341492 335.77172852]
[89.73745728 330.43957520]
[90.94012451 323.93841553]
[86.75312042 309.53460693]
[82.56610870 295.13082886]
[78.37909698 280.72705078]
[75.76936340 295.49829102]
[69.98045349 309.33621216]
[61.29480743 321.56567383]
[50.13622665 331.58996582]
[37.04916000 338.91995239]
[22.67215347 343.19799805]
[7.70669508 344.21536255]
[-7.11701775 341.92242432]
[-21.07570457 336.43106079]
[-33.48828888 328.00921631]
[-43.74913025 317.06777954]
[-51.35758591 304.14062500]
[-55.94242096 289.85848999]
[-57.27992630 274.91824341]
[-55.30484772 260.04882812]
[-50.11354828 245.97579956]
[-41.95932770 233.38577271]
[-31.24004555 222.89306641]
[-18.47872162 215.00962830]
[-4.29800701 210.12010193]
[10.61018848 208.46308899]
[25.51846123 210.11941528]
[39.69940186 215.00827026]
[52.46109390 222.89111328]
[63.18086624 233.38331604]
[71.33567047 245.97296143]
[76.52603912 260.03933716]
[78.08656311 245.12072754]
[68.53704834 233.74784851]
[69.90711975 218.59603882]
[81.90078735 208.65673828]
[83.46131134 193.73812866]
[85.02182770 178.81953430]
[86.58235168 163.90092468]
[88.14287567 148.98231506]
[89.59229279 134.05250549]
[90.93052673 119.11232758]
[92.26876068 104.17214203]
[90.51972961 101.67606354]
[89.64025879 98.48842621]
[89.88824463 94.93006134]
[91.39944458 91.41259766]
[94.15737152 88.39154053]
[96.38248444 73.55749512]
[98.60760498 58.72345352]
[100.83272552 43.88940811]
[103.05783844 29.05536461]
[105.28295898 14.22132015]
[103.22250366 7.93911695]
[104.45845795 2.39209485]
[107.80151367 -1.01862872]
[110.46730804 -15.77984619]
[113.13310242 -30.54106331]
[115.79889679 -45.30228043]
[118.46469116 -60.06349945]
[121.13048553 -74.82471466]
[123.79627991 -89.58592987]
[126.46208191 -104.34715271]
[119.76236725 -115.36879730]
[122.28660583 -127.60856628]
[132.14741516 -134.61506653]
[135.03268433 -149.33496094]
[137.91795349 -164.05485535]
[140.80322266 -178.77473450]
[143.24896240 -193.57400513]
[145.25297546 -208.43954468]
[147.14625549 -223.31958008]
[148.92872620 -238.21328735]
[150.71119690 -253.10700989]
[152.49366760 -268.00073242]
[153.94308472 -282.93054199]
[155.05873108 -297.88897705]
[156.17437744 -312.84744263]
[153.69190979 -321.63806152]
[157.41961670 -328.01974487]
[158.75785828 -342.95993042]
[160.09608459 -357.90011597]
[146.03488159 -363.41909790]
[134.09895325 -372.67709351]
[125.25592804 -384.92361450]
[120.22264862 -399.16592407]
[119.40715027 -414.24938965]
[122.87553406 -428.95135498]
[130.34663391 -442.07989502]
[141.21481323 -452.57083130]
[154.59902954 -459.57366943]
[169.41427612 -462.52069092]
[184.45956421 -461.17303467]
[198.51521301 -455.63995361]
[210.44183350 -446.36996460]
[219.27255249 -434.11456299]
[224.29151917 -419.86721802]
[225.09187317 -404.78292847]
[221.60871887 -390.08447266]
[214.12442017 -376.96343994]
[203.24571228 -366.48342896]
[189.85447693 -359.49404907]
[175.03627014 -356.56188965]
[173.69804382 -341.62170410]
[172.35980225 -326.68151855]
[171.13282776 -311.73178101]
[170.01718140 -296.77334595]
[168.90153503 -281.81488037]
[170.91297913 -278.91894531]
[171.62168884 -274.90487671]
[170.51741028 -270.39556885]
[167.38737488 -266.21826172]
[165.60490417 -251.32453918]
[163.82244873 -236.43083191]
[162.03997803 -221.53710938]
[164.36636353 -214.52214050]
[160.11849976 -206.43553162]
[158.11448669 -191.56999207]
[159.70486450 -189.26156616]
[160.47666931 -186.18408203]
[160.13240051 -182.64616394]
[158.49166870 -179.05833435]
[155.52311707 -175.88946533]
[152.63784790 -161.16957092]
[149.75257874 -146.44967651]
[146.86730957 -131.72979736]
[153.44094849 -115.45852661]
[141.22329712 -101.68135071]
[138.55749512 -86.92013550]
[135.89170837 -72.15892029]
[133.22590637 -57.39770126]
[130.56011963 -42.63648605]
[127.89431763 -27.87526703]
[125.22852325 -13.11405087]
[122.56272888 1.64716685]
[120.11699677 16.44643784]
[117.89188385 31.28048134]
[115.66676331 46.11452484]
[113.44165039 60.94857025]
[111.21652985 75.78261566]
[108.99141693 90.61665344]
[107.20894623 105.51037598]
[105.87071228 120.45056152]
[104.53247833 135.39074707]
[106.88379669 144.21736145]
[103.06147766 150.54284668]
[101.50096130 165.46144104]
[99.94043732 180.38005066]
[98.37991333 195.29866028]
[96.81938934 210.21725464]
[106.49658966 222.42338562]
[104.70147705 237.53074646]
[93.00516510 246.68125916]
[91.44464111 261.59985352]
[92.78287506 276.54003906]
[96.96988678 290.94381714]
[101.15689850 305.34759521]
[105.34391022 319.75140381]
[109.74491119 334.09124756]
[114.35891724 348.36398315]
[118.97292328 362.63671875]
[130.58003235 373.38778687]
[127.13278198 387.87799072]
[131.74679565 402.15072632]
[138.49827576 388.75604248]
[152.23002625 382.71954346]
[166.66406250 386.80105591]
[175.20133972 399.13452148]
[173.93873596 414.08129883]
[163.45349121 424.80789185]
[148.53932190 426.41024780]
[136.01367188 418.15429688]
[139.11778259 432.82962036]
[142.22189331 447.50491333]
[145.32600403 462.18020630]
[148.43011475 476.85552979]
[163.49812317 477.49255371]
[177.93408203 481.85763550]
[190.83053589 489.67636108]
[201.37678528 500.45724487]
[208.90991211 513.52258301]
[212.95634460 528.05108643]
[213.26174927 543.12945557]
[209.80691528 557.80987549]
[202.80902100 571.16949463]
[192.70796204 582.36859131]
[180.13868713 590.70312500]
[165.89131165 595.64916992]
[150.86146545 596.89581299]
[135.99389648 594.36468506]
[122.22322083 588.21496582]
[110.41506958 578.83319092]
[101.31170654 566.80902100]
[95.48538208 552.89843750]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 192]
[6 191]
[7 190]
[8 189]
[9 188]
[10 180]
[11 179]
[13 177]
[14 176]
[15 175]
[18 174]
[19 173]
[20 172]
[21 171]
[48 170]
[49 169]
[52 166]
[53 165]
[54 164]
[55 163]
[56 162]
[57 160]
[58 159]
[59 158]
[64 157]
[65 156]
[66 155]
[67 154]
[68 153]
[69 152]
[72 151]
[73 150]
[74 149]
[75 148]
[76 147]
[77 146]
[78 145]
[79 144]
[82 142]
[83 141]
[84 140]
[85 139]
[86 134]
[87 133]
[88 131]
[89 130]
[90 129]
[91 128]
[92 124]
[93 123]
[94 122]
[96 121]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
