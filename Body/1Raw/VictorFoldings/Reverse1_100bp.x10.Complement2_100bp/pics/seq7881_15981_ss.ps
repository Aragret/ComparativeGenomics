%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[44.00712204 269.81207275]
[48.53363419 284.14007568]
[50.97490311 298.96643066]
[51.28122711 313.98931885]
[49.44636917 328.90286255]
[45.50768661 343.40347290]
[39.54536819 357.19592285]
[31.68079185 369.99938965]
[22.07407761 381.55325317]
[10.92080116 391.62228394]
[-1.55196857 400.00146484]
[-15.09030247 406.52023315]
[-29.41857910 411.04586792]
[-44.24509048 413.48620605]
[-59.26799011 413.79159546]
[-74.18142700 411.95581055]
[-88.68179321 408.01623535]
[-102.47386169 402.05307007]
[-115.27686310 394.18771362]
[-126.83013153 384.58026123]
[-136.89846802 373.42636108]
[-145.27688599 360.95309448]
[-151.79479980 347.41433716]
[-156.31954956 333.08578491]
[-158.75897217 318.25912476]
[-159.06344604 303.23620605]
[-157.22673035 288.32287598]
[-153.28625488 273.82275391]
[-147.32223511 260.03106689]
[-139.45606995 247.22854614]
[-129.84793091 235.67587280]
[-118.69340515 225.60823059]
[-106.21959686 217.23059082]
[-92.68045807 210.71350098]
[-78.35162354 206.18965149]
[-63.52480698 203.75112915]
[-48.50187302 203.44760132]
[-33.58866119 205.28523254]
[-19.08878517 209.22659302]
[-5.29745007 215.19148254]
[2.55430555 202.41064453]
[10.40606117 189.62979126]
[18.25781631 176.84895325]
[26.10957146 164.06811523]
[13.13219643 171.59059143]
[-1.57169461 174.55633545]
[-16.45036507 172.65234375]
[-29.93363190 166.07955933]
[-40.59857559 155.53161621]
[-47.31969833 142.12167358]
[-49.38770294 127.26491547]
[-46.58435059 112.52919769]
[-39.20548248 99.46963501]
[-28.02981186 89.46441650]
[-14.23673058 83.56942749]
[0.71814239 82.40676880]
[15.25658512 86.09915161]
[27.84432030 94.25690460]
[37.15293503 106.01911926]
[42.20006561 120.14450073]
[42.45308304 135.14236450]
[37.88519287 149.43013000]
[41.68232727 135.02766418]
[56.98876572 131.02473450]
[67.79092407 120.61735535]
[78.59307861 110.20998383]
[89.39523315 99.80261230]
[99.72190094 88.92327118]
[109.55248260 77.59368134]
[119.38306427 66.26409149]
[129.21365356 54.93449402]
[115.12847900 60.09280014]
[100.12880707 60.19181442]
[85.97677612 55.21990204]
[74.33494568 45.76116180]
[66.57099152 32.92679214]
[63.59701157 18.22456551]
[65.76239014 3.38168430]
[72.81274414 -9.85812473]
[83.91979980 -19.93946266]
[97.77870941 -25.67798424]
[112.76134491 -26.39953232]
[127.10755920 -22.01934052]
[139.13197327 -13.05198956]
[147.42198181 -0.55095530]
[151.00366211 14.01515293]
[149.45626831 28.93512535]
[142.96064758 42.45745087]
[149.72677612 28.15604782]
[164.58314514 27.08952904]
[176.80963135 18.39970398]
[189.03611755 9.70988083]
[201.26260376 1.02005601]
[213.48908997 -7.66976833]
[225.51846313 -16.63046455]
[237.34472656 -25.85756302]
[249.17100525 -35.08465958]
[260.99728394 -44.31175995]
[252.75991821 -56.85763168]
[245.57260132 -70.03318024]
[239.48312378 -83.75073242]
[234.53202820 -97.91898346]
[230.75225830 -112.44365692]
[228.16897583 -127.22808838]
[226.79936218 -142.17388916]
[226.65252686 -157.18159485]
[227.72947693 -172.15133667]
[230.02301025 -186.98347473]
[233.51788330 -201.57931519]
[238.19082642 -215.84173584]
[244.01075745 -229.67579651]
[250.93893433 -242.98944092]
[258.92922974 -255.69407654]
[267.92852783 -267.70513916]
[277.87686157 -278.94271851]
[288.70809937 -289.33200073]
[300.35012817 -298.80386353]
[312.72543335 -307.29528809]
[325.75173950 -314.74972534]
[339.34228516 -321.11761475]
[353.40664673 -326.35650635]
[367.85122681 -330.43161011]
[382.57992554 -333.31579590]
[397.49472046 -334.98980713]
[412.49630737 -335.44256592]
[427.48489380 -334.67105103]
[442.36068726 -332.68038940]
[457.02474976 -329.48379517]
[471.37948608 -325.10260010]
[485.32931519 -319.56591797]
[498.78143311 -312.91061401]
[511.64633179 -305.18096924]
[523.83837891 -296.42843628]
[535.27642822 -286.71124268]
[545.88439941 -276.09408569]
[555.59161377 -264.64761353]
[564.33355713 -252.44796753]
[572.05206299 -239.57635498]
[578.69567871 -226.11845398]
[584.22021484 -212.16381836]
[588.58898926 -197.80531311]
[591.77282715 -183.13847351]
[593.75054932 -168.26092529]
[594.50909424 -153.27168274]
[594.04327393 -138.27049255]
[592.35632324 -123.35717773]
[589.45935059 -108.63099670]
[585.37170410 -94.18994141]
[580.12060547 -80.13012695]
[573.74090576 -66.54511261]
[566.27514648 -53.52531052]
[557.77301025 -41.15736008]
[548.29101562 -29.52357483]
[537.89233398 -18.70137405]
[526.64611816 -8.76278210]
[514.62725830 0.22606403]
[501.91567993 8.20534229]
[488.59600830 15.12195206]
[474.75689697 20.92986298]
[460.49044800 25.59042358]
[445.89157104 29.07262039]
[431.05743408 31.35327530]
[416.08679199 32.41721344]
[401.07919312 32.25735855]
[386.13461304 30.87476540]
[371.35241699 28.27864265]
[356.83102417 24.48626328]
[342.66708374 19.52286530]
[328.95483398 13.42148304]
[315.78552246 6.22271824]
[303.24679565 -2.02552152]
[291.42211914 -11.26834488]
[280.39016724 -21.44424057]
[270.22436523 -32.48548889]
[258.39810181 -23.25839043]
[246.57183838 -14.03129292]
[234.74555969 -4.80419445]
[233.95301819 -1.36846721]
[231.45698547 1.85408270]
[227.37576294 4.06698179]
[222.17890930 4.55671740]
[209.95242310 13.24654198]
[197.72593689 21.93636703]
[185.49945068 30.62619019]
[173.27296448 39.31601334]
[167.38136292 52.99586487]
[151.65046692 54.68393707]
[140.54324341 64.76507568]
[130.71266174 76.09466553]
[120.88208008 87.42426300]
[111.05149841 98.75385284]
[126.05147552 98.77706146]
[136.73886108 109.30226135]
[136.99143982 124.30013275]
[126.66450500 135.17922974]
[111.67381287 135.70748901]
[100.60670471 125.58231354]
[99.80260468 110.60476685]
[89.00045013 121.01213837]
[78.19829559 131.41950989]
[67.39614105 141.82688904]
[62.82636261 156.97375488]
[48.29256439 160.23228455]
[38.89041519 171.91986084]
[31.03865814 184.70071411]
[23.18690300 197.48155212]
[15.33514786 210.26239014]
[7.48339272 223.04324341]
[19.03785133 232.64923096]
[29.10756302 243.80189514]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 208]
[41 207]
[42 206]
[43 205]
[44 204]
[62 203]
[64 201]
[65 200]
[66 199]
[67 198]
[68 191]
[69 190]
[70 189]
[71 188]
[88 187]
[90 185]
[91 184]
[92 183]
[93 182]
[94 181]
[95 177]
[96 176]
[97 175]
[98 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
