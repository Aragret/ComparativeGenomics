%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[72.43985748 598.59570312]
[71.14889526 583.56964111]
[73.63615417 568.69464111]
[79.74526978 554.90588379]
[89.09222412 543.07012939]
[101.08946228 533.93139648]
[114.98282623 528.06408691]
[112.75771332 513.23004150]
[110.53259277 498.39599609]
[108.30747986 483.56195068]
[105.06745148 480.05319214]
[103.99720764 474.47183228]
[106.24378967 468.25375366]
[104.46132660 453.36004639]
[95.26644897 441.64239502]
[101.30903625 427.02056885]
[99.52657318 412.12683105]
[97.74411011 397.23312378]
[88.54923248 385.51547241]
[94.59181976 370.89364624]
[92.80935669 355.99993896]
[91.02689362 341.10620117]
[89.24442291 326.21249390]
[87.46195984 311.31878662]
[80.53605652 324.62411499]
[68.27310181 333.26239014]
[53.41266251 335.30380249]
[39.27460098 330.29229736]
[29.01740074 319.34744263]
[24.93254089 304.91433716]
[27.93259239 290.21740723]
[37.34733582 278.53997803]
[51.07349396 272.49078369]
[66.04460144 273.42126465]
[78.91609192 281.12353516]
[86.81242371 293.87692261]
[87.48220825 278.89187622]
[88.15200043 263.90682983]
[88.82178497 248.92179871]
[81.66049957 235.86172485]
[90.00629425 222.42080688]
[90.67607880 207.43577576]
[91.12268829 192.44242859]
[91.34601593 177.44409180]
[91.56934357 162.44575500]
[91.79267120 147.44740295]
[92.01599884 132.44906616]
[92.23932648 117.45073700]
[82.22293854 106.98085785]
[82.43866730 92.49294281]
[92.76233673 82.32593536]
[92.98566437 67.32759857]
[93.20899200 52.32926178]
[93.43231964 37.33092499]
[85.90134430 23.41708565]
[93.82727814 10.80642033]
[93.49230194 -4.18983889]
[92.59948730 -19.16324425]
[91.70666504 -34.13665009]
[90.81385040 -49.11005783]
[88.58873749 -63.94409943]
[85.04906464 -78.52047729]
[81.50939178 -93.09684753]
[68.49337006 -106.12239075]
[74.08687592 -122.75608063]
[70.33057404 -137.27813721]
[66.57427216 -151.80020142]
[62.81797409 -166.32225037]
[57.63925934 -173.84680176]
[59.11557007 -181.08850098]
[54.83593750 -186.12797546]
[53.88632202 -191.73112488]
[55.69438171 -196.15151978]
[52.59027481 -210.82682800]
[49.48616409 -225.50213623]
[46.38205338 -240.17742920]
[43.27794266 -254.85273743]
[39.16982269 -240.42625427]
[30.85699463 -227.94038391]
[19.13178253 -218.58520508]
[5.11175871 -213.25239563]
[-9.86677742 -212.45022583]
[-24.37616730 -216.25517273]
[-37.03346634 -224.30456543]
[-46.63226318 -235.83119202]
[-52.25766373 -249.73640442]
[-53.37348557 -264.69485474]
[-49.87338257 -279.28076172]
[-42.09095383 -292.10394287]
[-30.76797867 -301.94213867]
[-16.98368645 -307.85766602]
[-2.05190825 -309.28665161]
[12.60415268 -306.09292603]
[25.58757401 -298.58090210]
[35.66085815 -287.46652222]
[41.86418915 -273.80810547]
[42.75700760 -288.78152466]
[43.64982224 -303.75491333]
[44.54263687 -318.72833252]
[30.62243271 -324.72863770]
[19.59607315 -335.13034058]
[12.79504776 -348.67736816]
[11.04061127 -363.73385620]
[14.54462242 -378.48165894]
[22.88395309 -391.13989258]
[35.05158997 -400.18005371]
[49.57823181 -404.51046753]
[64.70971680 -403.60821533]
[78.61883545 -397.58227539]
[89.62600708 -387.16027832]
[96.40206146 -373.60073853]
[98.12874603 -358.54104614]
[94.59756470 -343.79974365]
[86.23491669 -331.15686035]
[74.05064392 -322.13916016]
[59.51604462 -317.83551025]
[58.62322998 -302.86212158]
[57.73041153 -287.88870239]
[56.83759689 -272.91531372]
[57.95324326 -257.95684814]
[61.05735397 -243.28153992]
[64.16146851 -228.60624695]
[67.26557922 -213.93093872]
[70.36968231 -199.25563049]
[73.69194794 -184.62817383]
[77.34003448 -170.07855225]
[81.09633636 -155.55650330]
[84.85263062 -141.03443909]
[88.60893250 -126.51237488]
[98.86929321 -120.10522461]
[102.11757660 -108.03739929]
[96.08576202 -96.63652039]
[99.62543488 -82.06015015]
[103.16510773 -67.48377228]
[108.08979034 -81.65231323]
[118.61276245 -92.34188843]
[132.70219421 -97.48851776]
[147.63764954 -96.09846497]
[160.53532410 -88.44012451]
[168.90486145 -75.99220276]
[171.13026428 -61.15820312]
[166.78181458 -46.80233383]
[156.69914246 -35.69648743]
[142.82905579 -29.98503113]
[127.84965515 -30.77075768]
[114.65321350 -37.90195465]
[105.78725433 -50.00287247]
[106.68007660 -35.02946472]
[107.57289124 -20.05606079]
[108.46570587 -5.08265448]
[120.22277069 -14.39776897]
[134.86973572 -11.16258049]
[141.60940552 2.23805165]
[135.47354126 15.92567921]
[120.98526764 19.81029320]
[108.82561493 11.02974796]
[116.37256622 23.87080574]
[108.43065643 37.55425262]
[108.20732880 52.55258942]
[107.98400116 67.55092621]
[107.76067352 82.54926300]
[117.77706146 93.01914215]
[117.56133270 107.50705719]
[107.23766327 117.67406464]
[107.01433563 132.67239380]
[106.79100800 147.67073059]
[106.56768036 162.66908264]
[106.34435272 177.66741943]
[106.12102509 192.66575623]
[109.00231171 198.61636353]
[108.51852417 204.27877808]
[105.66111755 208.10556030]
[104.99133301 223.09059143]
[112.10470581 237.22248840]
[103.80682373 249.59158325]
[103.13703918 264.57662964]
[102.46724701 279.56164551]
[101.79746246 294.54669189]
[102.35567474 309.53631592]
[104.13814545 324.43002319]
[105.92060852 339.32373047]
[107.70307159 354.21746826]
[109.48554230 369.11117554]
[118.80790710 381.89413452]
[112.63782501 395.45065308]
[114.42028809 410.34439087]
[116.20275879 425.23809814]
[125.52512360 438.02105713]
[119.35504150 451.57757568]
[121.13750458 466.47128296]
[123.14151764 481.33682251]
[125.36663818 496.17086792]
[127.59175110 511.00491333]
[129.81686401 525.83892822]
[144.82025146 527.37170410]
[158.97080994 532.58831787]
[171.37901306 541.16076660]
[181.26487732 552.55029297]
[188.00697327 566.04083252]
[191.18150330 580.78442383]
[190.58888245 595.85424805]
[186.26637268 610.30297852]
[178.48570251 623.22241211]
[167.73597717 633.80041504]
[154.69290161 641.37200928]
[140.17640686 645.46130371]
[125.09898376 645.81115723]
[110.40843964 642.39959717]
[97.02821350 635.44110107]
[85.79940796 625.37310791]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 194]
[8 193]
[9 192]
[10 191]
[13 190]
[14 189]
[16 187]
[17 186]
[18 185]
[20 183]
[21 182]
[22 181]
[23 180]
[24 179]
[36 178]
[37 177]
[38 176]
[39 175]
[41 173]
[42 172]
[43 169]
[44 168]
[45 167]
[46 166]
[47 165]
[48 164]
[51 161]
[52 160]
[53 159]
[54 158]
[56 156]
[57 150]
[58 149]
[59 148]
[60 147]
[61 134]
[62 133]
[63 132]
[65 129]
[66 128]
[67 127]
[68 126]
[70 125]
[73 124]
[74 123]
[75 122]
[76 121]
[77 120]
[96 119]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
