%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[63.93901443 487.13748169]
[55.44699860 474.66558838]
[50.47321701 460.42044067]
[49.35680008 445.37332153]
[52.17385483 430.55014038]
[58.73231888 416.96157837]
[68.58502197 405.53411865]
[81.06019592 397.04693604]
[95.30725098 392.07864380]
[94.19159698 377.12017822]
[93.07595062 362.16174316]
[84.41347504 350.04519653]
[91.10292816 335.70776367]
[89.98728180 320.74932861]
[88.87163544 305.79086304]
[80.20915222 293.67431641]
[86.89861298 279.33688354]
[85.78296661 264.37844849]
[77.12048340 252.26188660]
[83.80994415 237.92446899]
[82.69429779 222.96601868]
[81.57864380 208.00756836]
[72.91616821 195.89102173]
[79.60562897 181.55358887]
[78.48997498 166.59513855]
[72.78625488 180.46841431]
[63.72852707 192.42489624]
[51.91755676 201.67156982]
[38.13671875 207.59512329]
[23.30005264 209.80268860]
[8.39161682 208.14781189]
[-5.59976244 202.74029541]
[-17.74608803 193.93878174]
[-27.24173927 182.32702637]
[-33.45690155 168.67523193]
[-35.97935104 153.88883972]
[-34.64177322 138.94859314]
[-29.53289223 124.84542847]
[-20.99155807 112.51474762]
[-9.58429050 102.77440643]
[3.93231106 96.27044678]
[18.66173744 93.43425751]
[33.62703705 94.45394135]
[47.83562088 99.26187134]
[60.34507751 107.53915405]
[70.32570648 118.73679352]
[77.11552429 132.11209106]
[80.26460266 146.78300476]
[84.02090454 132.26094055]
[87.77720642 117.73889160]
[91.53350830 103.21682739]
[90.06701660 99.65007019]
[90.17982483 95.45422363]
[92.11762238 91.34910583]
[95.79538727 88.13758087]
[100.19638824 73.79772949]
[104.59738159 59.45788574]
[108.99838257 45.11803818]
[113.39937592 30.77819061]
[117.80037689 16.43834305]
[112.45784760 4.69865847]
[116.41866302 -7.15442991]
[127.04219055 -12.93951511]
[131.65620422 -27.21224785]
[128.53898621 -42.72332382]
[139.81605530 -52.45352554]
[144.43006897 -66.72625732]
[149.04408264 -80.99899292]
[153.65809631 -95.27172089]
[158.27209473 -109.54445648]
[144.62211609 -118.22570038]
[133.67996216 -130.12564087]
[126.18182373 -144.43544006]
[122.63009644 -160.18443298]
[123.25964355 -176.30595398]
[128.02236938 -191.70951843]
[136.59074402 -205.35469055]
[148.38043213 -216.32124329]
[162.59004211 -223.87132263]
[178.25564575 -227.49903870]
[194.31619263 -226.96432495]
[198.50320435 -241.36811829]
[202.69021606 -255.77189636]
[206.87721252 -270.17568970]
[211.06422424 -284.57946777]
[215.14390564 -299.01400757]
[219.11599731 -313.47854614]
[223.08808899 -327.94305420]
[214.15858459 -342.98577881]
[218.78021240 -359.50714111]
[233.62274170 -367.41525269]
[237.37902832 -381.93728638]
[241.13533020 -396.45935059]
[244.89163208 -410.98141479]
[239.56092834 -428.60711670]
[252.34062195 -440.63400269]
[255.88029480 -455.21038818]
[259.41998291 -469.78677368]
[245.76744080 -476.11880493]
[233.61274719 -484.99291992]
[223.42308044 -496.06796265]
[215.59010315 -508.91827393]
[210.41488647 -523.04992676]
[208.09635925 -537.91973877]
[208.72364807 -552.95611572]
[212.27262878 -567.58111572]
[218.60688782 -581.23260498]
[227.48295593 -593.38586426]
[238.55966187 -603.57373047]
[251.41123962 -611.40466309]
[265.54373169 -616.57757568]
[280.41387939 -618.89367676]
[295.45016479 -618.26397705]
[310.07461548 -614.71264648]
[323.72506714 -608.37615967]
[335.87689209 -599.49810791]
[346.06298828 -588.41973877]
[353.89181519 -575.56689453]
[359.06243896 -561.43359375]
[361.37615967 -546.56304932]
[360.74401855 -531.52685547]
[357.19030762 -516.90301514]
[350.85162354 -503.25357056]
[341.97161865 -491.10317993]
[330.89160156 -480.91888428]
[318.03747559 -473.09216309]
[303.90332031 -467.92379761]
[289.03240967 -465.61251831]
[273.99633789 -466.24710083]
[270.45666504 -451.67071533]
[266.91699219 -437.09432983]
[272.94064331 -426.60421753]
[270.11096191 -414.43142700]
[259.41369629 -407.22512817]
[255.65739441 -392.70306396]
[251.90109253 -378.18099976]
[248.14479065 -363.65893555]
[256.17315674 -353.58050537]
[256.94232178 -340.52331543]
[249.94775391 -329.24114990]
[237.55261230 -323.97094727]
[233.58052063 -309.50643921]
[229.60842896 -295.04190063]
[230.86846924 -287.75946045]
[225.46801758 -280.39245605]
[221.28100586 -265.98867798]
[217.09399414 -251.58488464]
[212.90698242 -237.18110657]
[208.71997070 -222.77731323]
[220.80876160 -215.93931580]
[231.07028198 -206.56829834]
[238.98355103 -195.13528442]
[244.14570618 -182.21617126]
[246.29258728 -168.46260071]
[245.31224060 -154.56916809]
[241.25068665 -141.23835754]
[234.30987549 -129.14492798]
[224.83757019 -118.90187836]
[213.30995178 -111.02929688]
[200.30766296 -105.92797852]
[186.48661804 -103.85901642]
[172.54483032 -104.93045044]
[167.93081665 -90.65771484]
[163.31681824 -76.38497925]
[158.70280457 -62.11224747]
[154.08879089 -47.83951569]
[157.53604126 -33.34931946]
[145.92893982 -22.59823799]
[141.31492615 -8.32550526]
[145.90846252 8.61162376]
[132.14022827 20.83934212]
[127.73922729 35.17918777]
[123.33822632 49.51903534]
[118.93723297 63.85888290]
[114.53623199 78.19873047]
[110.13523102 92.53857422]
[106.05556488 106.97312927]
[102.29926300 121.49518585]
[98.54296875 136.01724243]
[94.78666687 150.53930664]
[93.44843292 165.47949219]
[94.56407928 180.43794250]
[103.30635834 193.62442017]
[96.53710175 206.89192200]
[97.65274811 221.85037231]
[98.76839447 236.80882263]
[107.51067352 249.99530029]
[100.74141693 263.26278687]
[101.85706329 278.22125244]
[110.59934998 291.40771484]
[103.83008575 304.67520142]
[104.94573975 319.63366699]
[106.06138611 334.59213257]
[114.80366516 347.77859497]
[108.03440857 361.04608154]
[109.15005493 376.00454712]
[110.26570129 390.96298218]
[125.09213257 393.76287842]
[138.68827820 400.30560303]
[150.12713623 410.14505005]
[158.62878418 422.61038208]
[163.61355591 436.85168457]
[164.74160767 451.89794922]
[161.93598938 466.72329712]
[155.38801575 480.31692505]
[145.54414368 491.75198364]
[133.07553101 500.24880981]
[118.83232117 505.22808838]
[103.78562164 506.35031128]
[88.96135712 503.53897095]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 197]
[10 196]
[11 195]
[13 193]
[14 192]
[15 191]
[17 189]
[18 188]
[20 186]
[21 185]
[22 184]
[24 182]
[25 181]
[48 180]
[49 179]
[50 178]
[51 177]
[55 176]
[56 175]
[57 174]
[58 173]
[59 172]
[60 171]
[63 169]
[64 168]
[66 166]
[67 165]
[68 164]
[69 163]
[70 162]
[81 149]
[82 148]
[83 147]
[84 146]
[85 145]
[86 143]
[87 142]
[88 141]
[91 137]
[92 136]
[93 135]
[94 134]
[96 131]
[97 130]
[98 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
