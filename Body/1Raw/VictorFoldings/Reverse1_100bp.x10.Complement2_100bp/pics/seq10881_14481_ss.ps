%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[86.98330688 523.20068359]
[74.46607208 531.60198975]
[60.30175781 536.76300049]
[45.31385803 538.38354492]
[30.37374306 536.36950684]
[16.35001945 530.83789062]
[4.05800533 522.11035156]
[-5.78765821 510.69427490]
[-12.61455631 497.25341797]
[-16.02578354 482.56918335]
[-15.82301331 467.49526978]
[-12.01803589 452.90811157]
[-4.83206749 439.65573120]
[5.31710911 428.50863647]
[17.83943367 420.11492920]
[32.00687790 414.96252441]
[46.99575806 413.35107422]
[48.99977112 398.48553467]
[51.00378418 383.61999512]
[53.00780106 368.75448608]
[55.01181412 353.88894653]
[43.14733887 347.97052002]
[33.66759109 338.66824341]
[27.50493050 326.87734985]
[25.27152061 313.73876953]
[27.19854927 300.52874756]
[33.11237335 288.53485107]
[42.45008087 278.93048096]
[54.31302643 272.66009521]
[67.55332184 270.34631348]
[69.99904633 255.54702759]
[62.94385910 239.47869873]
[74.74589539 225.34387207]
[76.97101593 210.50982666]
[79.19612885 195.67578125]
[81.42124939 180.84173584]
[83.53587341 165.99154663]
[85.53988647 151.12602234]
[87.54389954 136.26048279]
[89.54791260 121.39495850]
[91.55192566 106.52942657]
[91.99853516 91.53607941]
[90.88288116 76.57762909]
[89.76723480 61.61917496]
[88.65158844 46.66072083]
[87.53593445 31.70226669]
[78.28965759 22.70954323]
[77.66838074 10.22764492]
[85.46042633 0.97504759]
[84.56761169 -13.99835777]
[70.07312012 -18.37273216]
[57.97251129 -27.42520332]
[49.71468735 -40.04774475]
[46.28015518 -54.70632553]
[48.06465912 -69.62735748]
[54.83364868 -83.01224518]
[65.75292969 -93.25423431]
[79.49140930 -99.13126373]
[78.59859467 -114.10466766]
[77.70578003 -129.07807922]
[76.81296539 -144.05148315]
[73.27329254 -158.62785339]
[67.19945526 -172.34312439]
[61.12562180 -186.05839539]
[55.05178833 -199.77365112]
[48.97795486 -213.48892212]
[42.90412140 -227.20419312]
[41.97751999 -212.23283386]
[36.73541260 -198.17864990]
[27.63129807 -186.25744629]
[15.45277214 -177.50053406]
[1.25339901 -172.66546631]
[-13.73843384 -172.17054749]
[-28.22578239 -176.05856323]
[-40.95534515 -183.99317932]
[-50.82588959 -195.28797913]
[-56.98351669 -208.96583557]
[-58.89552307 -223.84347534]
[-56.39651108 -238.63383484]
[-49.70265961 -252.05741882]
[-39.39305878 -262.95291138]
[-26.35959625 -270.37780762]
[-11.72978973 -273.68972778]
[3.23073173 -272.60217285]
[17.22773552 -267.20919800]
[29.05033875 -257.97741699]
[37.67419434 -245.70855713]
[35.67017746 -260.57409668]
[33.66616440 -275.43960571]
[31.66215134 -290.30514526]
[16.71001625 -292.38751221]
[2.87462330 -298.42773438]
[-8.81735039 -307.97763062]
[-17.49828339 -320.32849121]
[-22.52399063 -334.56384277]
[-23.52153206 -349.62728882]
[-20.41688347 -364.40103149]
[-13.44043255 -377.78878784]
[-3.10987520 -388.79705811]
[9.80819130 -396.60897827]
[24.35515976 -400.64486694]
[39.45154953 -400.60519409]
[53.97711182 -396.49291992]
[66.85394287 -388.61322021]
[77.12651062 -377.55081177]
[84.03250885 -364.12658691]
[87.05947876 -349.33673096]
[85.98278809 -334.27871704]
[80.88233948 -320.07000732]
[72.13661957 -307.76492310]
[60.39462662 -298.27661133]
[46.52767944 -292.30917358]
[48.53169250 -277.44363403]
[50.53570557 -262.57809448]
[52.53972244 -247.71257019]
[56.61938858 -233.27803040]
[62.69322205 -219.56275940]
[68.76705933 -205.84748840]
[74.84088898 -192.13221741]
[80.91472626 -178.41696167]
[86.98855591 -164.70169067]
[87.63095856 -179.68792725]
[91.79382324 -194.09870911]
[99.24172211 -207.11903381]
[109.55344391 -218.01252747]
[122.14581299 -226.16313171]
[136.30667114 -231.10987854]
[151.23513794 -232.57299805]
[166.08694458 -230.46975708]
[180.02217102 -224.91909790]
[192.25267029 -216.23493958]
[202.08679199 -204.90840149]
[208.96833801 -191.58007812]
[212.50813293 -177.00373840]
[212.50598145 -162.00373840]
[208.96202087 -147.42840576]
[202.07666016 -134.10205078]
[192.23930359 -122.77832794]
[180.00630188 -114.09767151]
[166.06950378 -108.55100250]
[151.21708679 -106.45201111]
[136.28903198 -107.91940308]
[122.12960052 -112.87020111]
[109.53956604 -121.02440643]
[99.23096466 -131.92085266]
[91.78636932 -144.94429016]
[92.67918396 -129.97088623]
[93.57199860 -114.99748230]
[94.46481323 -100.02407837]
[108.80432892 -95.82125092]
[120.86330414 -86.94937897]
[129.17488098 -74.46369171]
[132.71981812 -59.86044693]
[131.05151367 -44.89759445]
[124.35214996 -31.38320732]
[113.41299438 -20.95694733]
[99.54101562 -14.89117432]
[100.43383026 0.08223175]
[110.87267303 14.18887806]
[102.49439240 30.58661842]
[103.61003876 45.54507065]
[104.72569275 60.50352478]
[105.84133911 75.46197510]
[106.95698547 90.42043304]
[113.59421539 76.96877289]
[124.82313538 67.02335358]
[138.97801208 62.05952454]
[153.95904541 62.81364059]
[167.54388428 69.17382812]
[177.71731567 80.19660187]
[182.97015381 94.24678040]
[182.52317810 109.24011993]
[176.44268799 122.95244598]
[165.63070679 133.34960938]
[151.69111633 138.88925171]
[136.69175720 138.74960327]
[122.85772705 132.95138550]
[112.24118805 122.35472870]
[106.41745758 108.53344727]
[104.41344452 123.39897156]
[102.40943146 138.26449585]
[100.40541077 153.13003540]
[98.40139771 167.99555969]
[100.35623932 176.91836548]
[96.25529480 183.06686401]
[94.03017426 197.90089417]
[91.80506134 212.73493958]
[89.57994080 227.56898499]
[96.60483551 238.38627625]
[94.44614410 250.69577026]
[84.79831696 257.99276733]
[82.35259247 272.79202271]
[96.81355286 281.48297119]
[106.80537415 295.03198242]
[110.81797028 311.34378052]
[108.26320648 327.90927124]
[99.56092072 342.19143677]
[86.07022858 352.01400757]
[69.87734222 355.89297485]
[67.87332916 370.75848389]
[65.86931610 385.62402344]
[63.86529922 400.48953247]
[61.86128616 415.35507202]
[75.88835907 420.87817383]
[88.18566132 429.59823608]
[98.03824615 441.00833130]
[104.87329102 454.44506836]
[108.29341888 469.12722778]
[108.09979248 484.20126343]
[104.30365753 498.79071045]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 203]
[18 202]
[19 201]
[20 200]
[21 199]
[30 192]
[31 191]
[33 188]
[34 187]
[35 186]
[36 185]
[37 183]
[38 182]
[39 181]
[40 180]
[41 179]
[42 164]
[43 163]
[44 162]
[45 161]
[46 160]
[49 158]
[50 157]
[58 149]
[59 148]
[60 147]
[61 146]
[62 121]
[63 120]
[64 119]
[65 118]
[66 117]
[67 116]
[87 115]
[88 114]
[89 113]
[90 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
