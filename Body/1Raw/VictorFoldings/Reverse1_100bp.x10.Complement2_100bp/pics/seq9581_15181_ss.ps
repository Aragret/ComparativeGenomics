%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[33.67259216 280.77752686]
[31.83202171 295.67147827]
[28.87030602 310.38357544]
[24.80440903 324.82952881]
[19.65762138 338.92663574]
[13.45942116 352.59408569]
[6.24531317 365.75366211]
[-1.94338059 378.32992554]
[-11.05975533 390.25088501]
[-21.05159187 401.44824219]
[-31.86166000 411.85784912]
[-43.42803574 421.42007446]
[-55.68447113 430.08016968]
[-68.56076050 437.78851318]
[-81.98314667 444.50094604]
[-95.87474823 450.17904663]
[-110.15599823 454.79028320]
[-124.74507904 458.30822754]
[-139.55844116 460.71270752]
[-154.51123047 461.99002075]
[-169.51780701 462.13278198]
[-184.49218750 461.14019775]
[-199.34861755 459.01797485]
[-214.00199890 455.77822876]
[-228.36839294 451.43954468]
[-242.36550903 446.02679443]
[-255.91317749 439.57092285]
[-268.93377686 432.10894775]
[-281.35275269 423.68362427]
[-293.09896851 414.34317017]
[-304.10513306 404.14111328]
[-314.30819702 393.13589478]
[-323.64971924 381.39056396]
[-332.07620239 368.97235107]
[-339.53939819 355.95242310]
[-345.99649048 342.40536499]
[-351.41055298 328.40875244]
[-355.75057983 314.04275513]
[-358.99166870 299.38967896]
[-361.11526489 284.53344727]
[-362.10922241 269.55914307]
[-361.96783447 254.55256653]
[-360.69192505 239.59965515]
[-358.28878784 224.78607178]
[-354.77218628 210.19665527]
[-350.16229248 195.91499329]
[-344.48547363 182.02285767]
[-337.77426147 168.59985352]
[-330.06710815 155.72285461]
[-321.40814209 143.46562195]
[-311.84698486 131.89836121]
[-301.43838501 121.08733368]
[-290.24197388 111.09445953]
[-278.32183838 101.97698212]
[-265.74633789 93.78713226]
[-252.58743286 86.57180786]
[-238.92054749 80.37234497]
[-224.82392883 75.22425842]
[-210.37834167 71.15702057]
[-195.66651917 68.19394684]
[-180.77273560 66.35200500]
[-165.78231812 65.64173889]
[-150.78109741 66.06722260]
[-135.85502625 67.62601471]
[-121.08959961 70.30918884]
[-106.56938934 74.10137939]
[-92.37755585 78.98085785]
[-78.59539795 84.91967773]
[-65.30186462 91.88382721]
[-52.57309723 99.83340454]
[-40.48200226 108.72288513]
[-29.09784126 118.50134277]
[-18.48582077 129.11276245]
[-8.70672703 140.49638367]
[0.18342601 152.58699036]
[12.90546227 144.64030457]
[25.62749863 136.69361877]
[38.34953308 128.74693298]
[41.37721634 117.03540802]
[51.91111755 110.31077576]
[64.59764862 112.63773346]
[77.43659210 104.88134003]
[90.27552795 97.12495422]
[94.99802399 90.59268188]
[103.36386871 89.35029602]
[116.31687164 81.78591919]
[129.26986694 74.22154236]
[142.22286987 66.65715790]
[155.17585754 59.09278107]
[168.12886047 51.52840042]
[181.08186340 43.96402359]
[194.03486633 36.39964294]
[206.93118286 28.73904610]
[219.77012634 20.98265648]
[232.60906982 13.22626400]
[245.44801331 5.46987295]
[238.61352539 -7.88971996]
[232.73843384 -21.69813347]
[227.85202026 -35.88657761]
[223.97862244 -50.38435745]
[221.13754272 -65.11925507]
[219.34291077 -80.01785278]
[218.60369873 -95.00592804]
[218.92356873 -110.00881958]
[220.30094910 -124.95176697]
[222.72895813 -139.76033020]
[226.19549561 -154.36074829]
[230.68330383 -168.68026733]
[236.17002869 -182.64753723]
[242.62832642 -196.19299316]
[250.02601624 -209.24914551]
[258.32626343 -221.75094604]
[267.48767090 -233.63610840]
[277.46466064 -244.84542847]
[288.20748901 -255.32304382]
[299.66262817 -265.01678467]
[311.77304077 -273.87832642]
[324.47836304 -281.86355591]
[337.71530151 -288.93264771]
[351.41793823 -295.05041504]
[365.51797485 -300.18637085]
[379.94515991 -304.31494141]
[394.62762451 -307.41552734]
[409.49224854 -309.47268677]
[424.46496582 -310.47619629]
[439.47116089 -310.42102051]
[454.43609619 -309.30749512]
[469.28518677 -307.14111328]
[483.94445801 -303.93267822]
[498.34094238 -299.69818115]
[512.40283203 -294.45870972]
[526.06011963 -288.24035645]
[539.24475098 -281.07415771]
[551.89099121 -272.99575806]
[563.93591309 -264.04541016]
[575.31951904 -254.26773071]
[585.98504639 -243.71141052]
[595.87933350 -232.42906189]
[604.95312500 -220.47686768]
[613.16125488 -207.91439819]
[620.46276855 -194.80421448]
[626.82135010 -181.21165466]
[632.20520020 -167.20442200]
[636.58764648 -152.85229492]
[639.94677734 -138.22679138]
[642.26586914 -123.40077972]
[643.53332520 -108.44810486]
[643.74291992 -93.44327545]
[642.89355469 -78.46103668]
[640.98944092 -63.57603455]
[638.04010010 -48.86241913]
[634.06024170 -34.39350510]
[629.06964111 -20.24136734]
[623.09320068 -6.47651434]
[616.16070557 6.83247614]
[608.30664062 19.61929893]
[599.57019043 31.82025337]
[589.99487305 43.37454987]
[579.62835693 54.22462845]
[568.52227783 64.31642914]
[556.73205566 73.59967804]
[544.31628418 82.02812958]
[531.33697510 89.55979156]
[517.85870361 96.15713501]
[503.94860840 101.78729248]
[489.67605591 106.42222595]
[475.11209106 110.03883362]
[460.32928467 112.61910248]
[445.40130615 114.15016937]
[430.40249634 114.62442017]
[415.40762329 114.03948212]
[400.49133301 112.39826965]
[385.72796631 109.70896912]
[371.19110107 105.98496246]
[356.95312500 101.24481201]
[343.08499146 95.51213837]
[329.65576172 88.81549072]
[316.73239136 81.18824005]
[304.37921143 72.66838837]
[292.65777588 63.29836655]
[281.62652588 53.12486649]
[271.34036255 42.19857025]
[261.85055542 30.57391548]
[253.20440674 18.30881310]
[240.36546326 26.06520462]
[227.52651978 33.82159424]
[214.68757629 41.57798767]
[210.58790588 47.72733688]
[201.59924316 49.35264206]
[188.64624023 56.91702271]
[175.69323730 64.48139954]
[162.74024963 72.04577637]
[149.78724670 79.61016083]
[136.83424377 87.17453766]
[123.88124847 94.73891449]
[110.92824554 102.30329895]
[98.03192139 109.96389008]
[85.19298553 117.72028351]
[72.35404205 125.47667694]
[63.84197998 141.80537415]
[46.29621887 141.46896362]
[33.57418442 149.41564941]
[20.85214615 157.36233521]
[8.13011074 165.30902100]
[15.09548378 178.60191345]
[21.03557777 192.38351440]
[25.91636848 206.57490540]
[29.70989609 221.09475708]
[32.39443588 235.85995483]
[33.95460510 250.78587341]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 204]
[76 203]
[77 202]
[78 201]
[81 199]
[82 198]
[83 197]
[85 196]
[86 195]
[87 194]
[88 193]
[89 192]
[90 191]
[91 190]
[92 189]
[93 187]
[94 186]
[95 185]
[96 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
