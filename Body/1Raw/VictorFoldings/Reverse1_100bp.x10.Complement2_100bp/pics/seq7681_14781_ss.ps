%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[148.99540710 333.52453613]
[159.46252441 322.61898804]
[172.67988586 315.28463745]
[169.57577515 300.60931396]
[166.47166443 285.93402100]
[163.36755371 271.25872803]
[160.26344299 256.58340454]
[157.15933228 241.90811157]
[152.22773743 227.74197388]
[145.54754639 214.31159973]
[138.86735535 200.88122559]
[132.18714905 187.45085144]
[125.50695801 174.02047729]
[119.71356201 169.43153381]
[118.82896423 160.34004211]
[114.70207214 157.93634033]
[112.04135132 152.91462708]
[112.36467743 146.31106567]
[106.29084778 132.59579468]
[94.06268311 124.09160614]
[95.54929352 108.34040070]
[91.21086121 105.39218903]
[88.83307648 100.22309875]
[89.50556946 94.12517548]
[83.84278870 80.23514557]
[78.18000031 66.34512329]
[74.05551910 63.14578247]
[71.79656982 59.08987045]
[71.41703033 55.03142166]
[72.58981323 51.70622635]
[67.55289459 37.57719803]
[62.51597977 23.44816780]
[57.47906113 9.31913948]
[52.44214630 -4.80989027]
[47.40523148 -18.93891907]
[42.36831284 -33.06795120]
[37.33139801 -47.19697952]
[32.29447937 -61.32600784]
[27.25756454 -75.45503998]
[12.79278374 -73.39912415]
[-1.78972125 -74.21271515]
[-15.92640686 -77.86241150]
[-29.07134056 -84.20526123]
[-40.71727753 -92.99434662]
[-50.41524887 -103.88838959]
[-57.79184723 -116.46501160]
[-62.56363678 -130.23712158]
[-64.54800415 -144.67173767]
[-63.67017746 -159.21066284]
[-59.96603394 -173.29205322]
[-53.58062744 -186.37211609]
[-44.76251984 -197.94612122]
[-33.85409927 -207.56788635]
[-21.27829742 -214.86697388]
[-26.10429573 -229.06942749]
[-31.24625397 -243.16056824]
[-36.70161057 -257.13336182]
[-42.36439896 -271.02340698]
[-48.23336029 -284.82757568]
[-54.10232162 -298.63174438]
[-59.97127914 -312.43591309]
[-65.84024048 -326.24011230]
[-71.70920563 -340.04428101]
[-77.68076324 -353.80438232]
[-83.75460052 -367.51965332]
[-89.82843018 -381.23492432]
[-104.19326782 -376.85211182]
[-118.98165894 -374.23278809]
[-133.97795105 -373.41516113]
[-148.96345520 -374.41113281]
[-163.71963501 -377.20617676]
[-178.03131104 -381.75958252]
[-191.68977356 -388.00488281]
[-204.49584961 -395.85101318]
[-216.26275635 -405.18359375]
[-226.81893921 -415.86651611]
[-236.01043701 -427.74395752]
[-243.70320129 -440.64273071]
[-249.78506470 -454.37475586]
[-254.16732788 -468.73974609]
[-256.78610229 -483.52822876]
[-257.60317993 -498.52456665]
[-256.60662842 -513.51000977]
[-253.81103516 -528.26611328]
[-249.25711060 -542.57763672]
[-243.01130676 -556.23583984]
[-235.16467285 -569.04162598]
[-225.83164978 -580.80816650]
[-215.14834595 -591.36395264]
[-203.27055359 -600.55499268]
[-190.37149048 -608.24731445]
[-176.63923645 -614.32867432]
[-162.27407837 -618.71038818]
[-147.48550415 -621.32861328]
[-132.48913574 -622.14514160]
[-117.50370789 -621.14801025]
[-102.74773407 -618.35186768]
[-88.43640137 -613.79742432]
[-74.77840424 -607.55108643]
[-61.97292709 -599.70397949]
[-50.20670700 -590.37054443]
[-39.65132904 -579.68682861]
[-30.46072578 -567.80865479]
[-22.76891899 -554.90930176]
[-16.68808174 -541.17687988]
[-12.30688572 -526.81152344]
[-9.68922615 -512.02282715]
[-8.87327385 -497.02645874]
[-9.87092781 -482.04107666]
[-12.66764069 -467.28518677]
[-17.22262764 -452.97402954]
[-23.46946335 -439.31625366]
[-31.31704903 -426.51107788]
[-40.65094757 -414.74520874]
[-51.33503723 -404.19024658]
[-63.21352005 -395.00006104]
[-76.11316681 -387.30874634]
[-70.03932953 -373.59347534]
[-63.96549988 -359.87820435]
[-58.38278580 -355.03515625]
[-57.90502548 -345.91323853]
[-52.03606415 -332.10906982]
[-46.16710281 -318.30487061]
[-40.29814148 -304.50070190]
[-34.42918396 -290.69653320]
[-28.56022072 -276.89236450]
[-24.54477501 -274.30676270]
[-22.11094475 -269.17126465]
[-22.72881317 -262.58871460]
[-17.27345657 -248.61592102]
[-14.20840740 -246.87300110]
[-11.83528328 -243.55888367]
[-10.88335133 -239.01496887]
[-11.90183926 -233.89543152]
[-7.07584190 -219.69297791]
[8.22630978 -221.58900452]
[23.59467697 -220.27053833]
[38.36108780 -215.79255676]
[51.88305664 -208.34741211]
[63.57173538 -198.25668335]
[72.91755676 -185.95715332]
[79.51245117 -171.98200989]
[83.06765747 -156.93766785]
[83.42636871 -141.47746277]
[80.57065582 -126.27330780]
[74.62233734 -111.98647308]
[65.83778381 -99.23881531]
[54.59688187 -88.58573914]
[41.38659286 -80.49195099]
[46.42351151 -66.36292267]
[51.46042633 -52.23389435]
[56.49734116 -38.10486603]
[61.53425980 -23.97583580]
[66.57117462 -9.84680653]
[71.60809326 4.28222322]
[76.64500427 18.41125298]
[81.68192291 32.54028320]
[86.71884155 46.66931152]
[92.07002258 60.68233490]
[97.73281097 74.57236481]
[103.39559937 88.46238708]
[109.26455688 102.26656342]
[121.92716980 111.75176239]
[120.00611115 126.52196503]
[126.07994843 140.23722839]
[132.35731506 153.86054993]
[138.93733215 167.34028625]
[145.61752319 180.77066040]
[152.29772949 194.20103455]
[158.97792053 207.63140869]
[165.65811157 221.06178284]
[166.15316772 206.06996155]
[171.42762756 192.02787781]
[180.92488098 180.41743469]
[193.64265442 172.46392822]
[208.23880005 169.00668335]
[223.17295837 170.41055298]
[236.86909485 176.52740479]
[247.88182068 186.71170044]
[255.04893494 199.88867188]
[257.61407471 214.66770935]
[255.30654907 229.48915100]
[248.36985779 242.78886414]
[237.53605652 253.16328430]
[223.94845581 259.51760864]
[209.04100037 261.18118286]
[194.38688660 257.97851562]
[181.53262329 250.24754333]
[171.83464050 238.80400085]
[174.93875122 253.47930908]
[178.04284668 268.15460205]
[181.14695740 282.82992554]
[184.25106812 297.50521851]
[187.35517883 312.18051147]
[202.41033936 313.53469849]
[216.39685059 319.26782227]
[228.07104492 328.87014771]
[236.39488220 341.48779297]
[240.62818909 355.99884033]
[240.39454651 371.11297607]
[235.71473694 385.48623657]
[227.00489807 397.84057617]
[215.03947449 407.07748413]
[200.88243103 412.37554932]
[185.79261780 413.26373291]
[171.11180115 409.66305542]
[158.14538574 401.89364624]
[148.04634094 390.64639282]
[141.71266174 376.92138672]
[139.70755005 361.93902588]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 194]
[4 193]
[5 192]
[6 191]
[7 190]
[8 189]
[9 171]
[10 170]
[11 169]
[12 168]
[13 167]
[15 166]
[18 165]
[19 164]
[21 162]
[24 161]
[25 160]
[26 159]
[30 158]
[31 157]
[32 156]
[33 155]
[34 154]
[35 153]
[36 152]
[37 151]
[38 150]
[39 149]
[54 135]
[55 134]
[56 130]
[57 129]
[58 126]
[59 125]
[60 124]
[61 123]
[62 122]
[63 121]
[64 119]
[65 118]
[66 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
