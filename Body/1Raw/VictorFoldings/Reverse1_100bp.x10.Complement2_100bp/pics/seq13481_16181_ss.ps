%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUACUCUCAUUAUCUAUCCCGAGUCCGCAAACACAUACUAUACAAACGCCAAAGCUACUACACCAGAAACCUCAUCUUUGGACACUCCUUUCCAUAAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[141.33100891 731.17614746]
[126.74064636 734.82202148]
[111.73883057 735.87872314]
[96.78144836 734.31414795]
[82.32304382 730.17584229]
[68.80298615 723.58953857]
[56.63214111 714.75543213]
[46.18035889 703.94195557]
[37.76526260 691.47772217]
[31.64257812 677.74151611]
[27.99836159 663.15069580]
[26.94336319 648.14874268]
[28.50963783 633.19158936]
[32.64958954 618.73364258]
[39.23741150 605.21429443]
[48.07291031 593.04449463]
[58.88757706 582.59393311]
[71.35276794 574.18023682]
[85.08969116 568.05914307]
[99.68087769 564.41656494]
[114.68293762 563.36328125]
[116.24346161 548.44464111]
[117.80398560 533.52606201]
[115.37340546 526.54650879]
[119.50041199 518.39752197]
[113.33032990 504.84100342]
[122.65269470 492.05804443]
[124.43515778 477.16433716]
[126.21762848 462.27059937]
[120.04754639 448.71408081]
[129.36990356 435.93112183]
[131.15237427 421.03741455]
[131.15237427 406.03741455]
[129.36990356 391.14367676]
[127.58744812 376.24996948]
[125.69415283 361.36993408]
[123.69013977 346.50442505]
[121.68612671 331.63888550]
[119.68211365 316.77334595]
[117.67810059 301.90783691]
[115.67408752 287.04229736]
[113.67007446 272.17675781]
[111.66605377 257.31124878]
[109.66204071 242.44570923]
[105.65309143 236.23684692]
[107.74056244 227.34413147]
[105.95809937 212.45040894]
[104.17562866 197.55670166]
[91.10240173 190.46948242]
[84.63269043 176.88246155]
[87.43685150 161.91616821]
[98.64549255 151.34864807]
[96.86302948 136.45494080]
[95.08056641 121.56121826]
[93.29809570 106.66750336]
[90.01560211 102.57614136]
[89.25907898 96.93690491]
[91.69110870 91.30466461]
[90.35287476 76.36447906]
[89.01464081 61.42429352]
[85.52991486 55.80572891]
[85.42198181 50.12370682]
[87.86576843 46.02042007]
[86.97295380 31.04701614]
[85.96869659 16.08067131]
[84.85304260 1.12221813]
[73.16062164 -9.16977119]
[72.24228668 -24.35566330]
[82.12618256 -35.43917465]
[81.01052856 -50.39762497]
[79.89488220 -65.35607910]
[66.16151428 -72.08970642]
[57.69837189 -84.71001434]
[56.69517899 -99.77188110]
[63.32143402 -113.22360229]
[75.70773315 -121.49675751]
[74.59208679 -136.45521545]
[71.19139862 -142.12503052]
[71.16807556 -147.80802917]
[73.67268372 -151.87448120]
[73.00289917 -166.85952759]
[72.33311462 -181.84455872]
[71.66333008 -196.82960510]
[63.31753540 -210.27052307]
[70.47881317 -223.33058167]
[69.80902863 -238.31562805]
[59.54154968 -253.60157776]
[68.23011780 -268.84872437]
[67.33730316 -283.82214355]
[66.44448853 -298.79553223]
[65.55167389 -313.76895142]
[64.65885925 -328.74234009]
[61.34296799 -334.46218872]
[61.40425873 -340.14489746]
[63.96912766 -344.17358398]
[63.52252197 -359.16696167]
[63.07591629 -374.16030884]
[48.85272598 -379.52398682]
[37.76823044 -389.92602539]
[31.51273727 -403.78018188]
[31.04016304 -418.97375488]
[36.42256927 -433.18988037]
[46.83917999 -444.26068115]
[60.70153809 -450.49795532]
[75.89573669 -450.95053101]
[90.10476685 -445.54943848]
[101.16185760 -435.11828613]
[107.38087463 -421.24771118]
[107.81347656 -406.05294800]
[102.39369202 -391.85104370]
[91.94799042 -380.80767822]
[78.06926727 -374.60690308]
[78.51586914 -359.61355591]
[78.96247864 -344.62020874]
[79.63226318 -329.63516235]
[80.52507782 -314.66177368]
[81.41789246 -299.68835449]
[82.31071472 -284.71493530]
[83.20352936 -269.74154663]
[92.03985596 -261.48043823]
[92.90621948 -249.01315308]
[84.79406738 -238.98541260]
[85.46385193 -224.00036621]
[93.76174164 -211.63128662]
[86.64836884 -197.49938965]
[87.31815338 -182.51434326]
[87.98793793 -167.52931213]
[88.65772247 -152.54426575]
[89.55053711 -137.57086182]
[90.66619110 -122.61240387]
[104.14270020 -116.26818085]
[112.69108582 -103.94823456]
[113.93328857 -88.90419006]
[107.43589020 -75.16808319]
[94.85334015 -66.47172546]
[95.96898651 -51.51327515]
[97.08463287 -36.55482101]
[108.50331879 -27.06012535]
[109.84783173 -11.90601826]
[99.81150055 0.00656941]
[100.92714691 14.96502304]
[104.55943298 21.40150452]
[101.94635773 30.15419960]
[102.83917236 45.12760544]
[103.95482635 60.08605957]
[105.29306030 75.02624512]
[106.63129425 89.96643066]
[108.19181824 104.88503265]
[109.97428131 119.77874756]
[111.75674438 134.67247009]
[113.53921509 149.56619263]
[126.92501068 157.19026184]
[133.18170166 171.07217407]
[130.10093689 185.80216980]
[119.06935120 195.77423096]
[120.85181427 210.66795349]
[122.63427734 225.56166077]
[124.52757263 240.44169617]
[126.53158569 255.30722046]
[128.53559875 270.17276001]
[130.53961182 285.03826904]
[132.54362488 299.90380859]
[134.54763794 314.76934814]
[136.55165100 329.63485718]
[138.55566406 344.50039673]
[140.55967712 359.36593628]
[144.80755615 367.45254517]
[142.48115540 374.46749878]
[144.26362610 389.36123657]
[146.04609680 404.25494385]
[151.69276428 390.35836792]
[161.70036316 379.18481445]
[174.89321899 372.04699707]
[189.72143555 369.78341675]
[204.44302368 372.66000366]
[217.32850647 380.33883667]
[226.86408997 391.91781616]
[231.92956543 406.03662109]
[231.92984009 421.03662109]
[226.86486816 435.15563965]
[217.32969666 446.73495483]
[204.44448853 454.41424561]
[189.72300720 457.29138184]
[174.89469910 455.02832031]
[161.70159912 447.89096069]
[151.69358826 436.71780396]
[146.04609680 422.81988525]
[144.26362610 437.71359253]
[150.30621338 452.33541870]
[141.11134338 464.05307007]
[139.32887268 478.94677734]
[137.54641724 493.84051514]
[143.58900452 508.46234131]
[134.39413452 520.17999268]
[132.72257996 535.08654785]
[131.16206360 550.00518799]
[129.60154724 564.92376709]
[144.06088257 569.05883789]
[157.58242798 575.64202881]
[169.75527954 584.47338867]
[180.20951843 595.28448486]
[188.62744141 607.74682617]
[194.75325012 621.48168945]
[198.40077209 636.07159424]
[199.45916748 651.07330322]
[197.89628601 666.03088379]
[193.75961304 680.48974609]
[187.17485046 694.01055908]
[178.34211731 706.18237305]
[167.52983093 716.63537598]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 197]
[22 196]
[23 195]
[25 194]
[27 192]
[28 191]
[29 190]
[31 188]
[32 187]
[33 170]
[34 169]
[35 168]
[36 166]
[37 165]
[38 164]
[39 163]
[40 162]
[41 161]
[42 160]
[43 159]
[44 158]
[46 157]
[47 156]
[48 155]
[52 151]
[53 150]
[54 149]
[55 148]
[58 147]
[59 146]
[60 145]
[63 144]
[64 143]
[65 141]
[66 140]
[69 137]
[70 136]
[71 135]
[76 130]
[77 129]
[80 128]
[81 127]
[82 126]
[83 125]
[85 123]
[86 122]
[88 119]
[89 118]
[90 117]
[91 116]
[92 115]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
