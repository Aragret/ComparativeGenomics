%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[94.95475769 429.74459839]
[99.89099884 415.53375244]
[107.35462952 402.47204590]
[117.09144592 391.00430298]
[128.76982117 381.52114868]
[141.99198914 374.34555054]
[137.37797546 360.07281494]
[132.76396179 345.80007935]
[128.14996338 331.52734375]
[123.53594971 317.25460815]
[118.92194366 302.98190308]
[115.64645386 317.61990356]
[107.08155823 329.93420410]
[94.49779510 338.09811401]
[79.76190186 340.90048218]
[65.05985260 337.92562866]
[52.57260513 329.61486816]
[44.15258026 317.20104980]
[41.04882812 302.52566528]
[43.72177887 287.76574707]
[51.77491379 275.11080933]
[64.01359558 266.43817139]
[78.62229156 263.03436279]
[93.43389130 265.40429688]
[106.25117493 273.19644165]
[115.17195892 285.25311279]
[113.61143494 270.33450317]
[104.59204102 258.48123169]
[110.85165405 243.95100403]
[109.29113770 229.03239441]
[107.73061371 214.11378479]
[106.17008972 199.19519043]
[104.49855042 184.28860474]
[102.71607971 169.39489746]
[100.93361664 154.50117493]
[98.81899261 139.65098572]
[96.37326050 124.85170746]
[93.92753601 110.05243683]
[88.26411438 123.94220734]
[77.49742126 134.38626099]
[63.44181824 139.62458801]
[48.46592712 138.77442932]
[35.09345245 131.97908020]
[25.57788849 120.38364410]
[21.52277374 105.94216919]
[23.61146736 91.08830261]
[31.49198723 78.32518005]
[43.83633041 69.80360413]
[58.56425095 66.95961761]
[73.19384766 70.27247620]
[85.25975800 79.18390656]
[92.72919464 92.19375610]
[93.17580414 77.20040894]
[93.62240601 62.20705795]
[94.06901550 47.21371078]
[91.59327698 42.61829758]
[91.17012787 37.99507141]
[92.46645355 34.13053894]
[94.88523102 31.56502914]
[96.00088501 16.60657501]
[97.11653137 1.64812255]
[90.42707062 -12.68930054]
[99.08955383 -24.80584717]
[100.20520020 -39.76430130]
[101.32084656 -54.72275543]
[102.21366882 -69.69615936]
[102.88345337 -84.68119812]
[103.55323792 -99.66623688]
[96.43986511 -113.79813385]
[104.73774719 -126.16722107]
[105.40753174 -141.15226746]
[106.07731628 -156.13729858]
[103.33422089 -164.85011292]
[106.87026978 -171.33996582]
[107.76309204 -186.31336975]
[108.65590668 -201.28677368]
[109.54872131 -216.26019287]
[94.72949982 -218.66470337]
[80.22958374 -222.55615234]
[66.19775391 -227.89459229]
[52.77801132 -234.62522888]
[40.10805893 -242.67900085]
[28.31790924 -251.97326660]
[17.52855492 -262.41265869]
[7.85070705 -273.89004517]
[-0.61632156 -286.28762817]
[-7.78564548 -299.47824097]
[-13.58369637 -313.32647705]
[-17.95097542 -327.69024658]
[-20.84266853 -342.42214966]
[-22.22910118 -357.37100220]
[-22.09604645 -372.38345337]
[-20.44487190 -387.30541992]
[-17.29251671 -401.98373413]
[-12.67133427 -416.26785278]
[-6.62874174 -430.01113892]
[0.77325213 -443.07260132]
[9.45869160 -455.31817627]
[19.33844948 -466.62222290]
[30.31114197 -476.86874390]
[42.26417542 -485.95257568]
[55.07488632 -493.78051758]
[68.61181641 -500.27221680]
[82.73606110 -505.36111450]
[97.30267334 -508.99493408]
[112.16218567 -511.13644409]
[127.16210938 -511.76358032]
[142.14851379 -510.86999512]
[156.96763611 -508.46481323]
[171.46737671 -504.57275391]
[185.49897766 -499.23370361]
[198.91842651 -492.50247192]
[211.58802795 -484.44812012]
[223.37776184 -475.15335083]
[234.16665649 -464.71347046]
[243.84399414 -453.23568726]
[252.31048584 -440.83770752]
[259.47921753 -427.64678955]
[265.27667236 -413.79830933]
[269.64331055 -399.43435669]
[272.53436279 -384.70230103]
[273.92013550 -369.75335693]
[273.78640747 -354.74093628]
[272.13458252 -339.81906128]
[268.98159790 -325.14086914]
[264.35977173 -310.85696411]
[258.31658936 -297.11392212]
[250.91400146 -284.05279541]
[242.22802734 -271.80761719]
[232.34777832 -260.50399780]
[221.37463379 -250.25796509]
[209.42120361 -241.17466736]
[196.61013794 -233.34729004]
[183.07292175 -226.85615540]
[168.94845581 -221.76789856]
[154.38168335 -218.13470459]
[139.52207947 -215.99388123]
[124.52212524 -215.36737061]
[123.62931061 -200.39396667]
[122.73649597 -185.42056274]
[121.84368134 -170.44715881]
[121.06235504 -155.46751404]
[120.39257050 -140.48248291]
[119.72278595 -125.49743652]
[126.88406372 -112.43737030]
[118.53827667 -98.99645233]
[117.86849213 -84.01141357]
[117.19870758 -69.02637482]
[119.70330811 -64.95992279]
[119.67998505 -59.27692795]
[116.27930450 -53.60710526]
[115.16365051 -38.64865112]
[114.04800415 -23.69019890]
[120.81726074 -10.42270374]
[112.07498169 2.76377106]
[110.95933533 17.72222519]
[109.84368896 32.68067932]
[109.06236267 47.66031647]
[108.61576080 62.65366364]
[108.16915131 77.64701843]
[107.72254944 92.64036560]
[108.72680664 107.60671234]
[111.17253876 122.40598297]
[113.61826324 137.20524597]
[116.93170166 141.23863220]
[118.23623657 145.69413757]
[117.70746613 149.73585510]
[115.82733154 152.71870422]
[117.60980225 167.61242676]
[119.39226532 182.50614929]
[123.51926422 190.65510559]
[121.08869171 197.63465881]
[122.64921570 212.55326843]
[124.20973969 227.47187805]
[125.77026367 242.39047241]
[134.90127563 255.31082153]
[128.53004456 268.77398682]
[130.09056091 283.69256592]
[133.19467163 298.36788940]
[137.80868530 312.64062500]
[142.42269897 326.91336060]
[147.03669739 341.18606567]
[151.65071106 355.45880127]
[156.26472473 369.73153687]
[171.18516541 367.80935669]
[186.20475769 368.66174316]
[200.81193542 372.25967407]
[214.50917053 378.48065186]
[226.82994080 387.11273193]
[237.35461426 397.86196899]
[245.72473145 410.36218262]
[251.65519714 424.18768311]
[254.94403076 438.86755371]
[255.47920227 453.90179443]
[253.24249268 468.77832031]
[248.31008911 482.99050903]
[240.84997559 496.05426025]
[231.11624146 507.52462769]
[219.44042969 517.01092529]
[206.22019958 524.19006348]
[191.90582275 528.81750488]
[176.98486328 530.73571777]
[161.96549988 529.87927246]
[147.35929871 526.27740479]
[133.66374207 520.05273438]
[121.34529877 511.41732788]
[110.82351685 500.66525269]
[102.45677185 488.16278076]
[96.53002930 474.33569336]
[93.24516296 459.65493774]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 184]
[7 183]
[8 182]
[9 181]
[10 180]
[11 179]
[26 178]
[27 177]
[29 175]
[30 174]
[31 173]
[32 172]
[33 170]
[34 169]
[35 168]
[36 164]
[37 163]
[38 162]
[52 161]
[53 160]
[54 159]
[55 158]
[59 157]
[60 156]
[61 155]
[63 153]
[64 152]
[65 151]
[66 148]
[67 147]
[68 146]
[70 144]
[71 143]
[72 142]
[74 141]
[75 140]
[76 139]
[77 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
