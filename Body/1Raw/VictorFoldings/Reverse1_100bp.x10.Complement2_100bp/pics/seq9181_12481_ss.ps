%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[141.35270691 621.45928955]
[154.27857971 613.45989990]
[151.83285522 598.66058350]
[149.38713074 583.86132812]
[146.94140625 569.06207275]
[137.29357910 561.76507568]
[135.13487244 549.45556641]
[142.15977478 538.63830566]
[139.93466187 523.80426025]
[137.70954895 508.97021484]
[126.05379486 495.85110474]
[132.93572998 478.77130127]
[130.49000549 463.97201538]
[128.04428101 449.17276001]
[125.59854889 434.37347412]
[122.96053314 432.03399658]
[121.32460022 428.30053711]
[121.33359528 423.65798950]
[123.38948059 418.86001587]
[121.60701752 403.96630859]
[119.82454681 389.07257080]
[118.04208374 374.17886353]
[108.72970581 366.45837402]
[107.12281036 354.06475830]
[114.62371826 343.57192993]
[113.06320190 328.65332031]
[111.50267792 313.73471069]
[109.94215393 298.81613159]
[106.86203766 295.16619873]
[106.04207611 289.54260254]
[108.56407166 283.43106079]
[107.44841766 268.47259521]
[106.22144318 253.52287292]
[104.88320923 238.58268738]
[103.54497528 223.64250183]
[102.20674133 208.70231628]
[90.64796448 199.37867737]
[89.07797241 184.24627686]
[98.93583679 172.18557739]
[97.59760284 157.24539185]
[82.86701202 154.67419434]
[69.30339813 148.37896729]
[57.83061218 138.78851318]
[49.23011398 126.55606842]
[44.08769608 112.51480865]
[42.75362778 97.62113190]
[45.31877518 82.88948059]
[51.60841751 69.32328033]
[61.19415283 57.84655762]
[73.42306519 49.24103165]
[87.46221161 44.09284210]
[86.12397766 29.15265846]
[84.78574371 14.21247292]
[83.44750977 -0.72771239]
[69.35482025 -3.67506409]
[56.67823792 -10.46747208]
[46.44139862 -20.54626656]
[39.46806335 -33.08781433]
[36.31581497 -47.07082748]
[37.23150635 -61.35951614]
[42.13193130 -74.79586792]
[50.61130905 -86.29345703]
[61.97487259 -94.92534637]
[75.29577637 -99.99874878]
[74.18013000 -114.95719910]
[73.06447601 -129.91564941]
[71.94882965 -144.87411499]
[70.83318329 -159.83256531]
[69.38375854 -174.76237488]
[67.60129547 -189.65608215]
[55.46097565 -199.41572571]
[53.86546707 -214.54545593]
[63.24459839 -226.05924988]
[61.46213531 -240.95297241]
[59.67966843 -255.84667969]
[57.56504440 -270.69689941]
[55.11931610 -285.49615479]
[52.67358780 -300.29544067]
[48.18683243 -308.25198364]
[50.30332947 -315.33309937]
[48.07821274 -330.16714478]
[45.85309601 -345.00119019]
[43.62797928 -359.83523560]
[41.40286255 -374.66928101]
[39.17774200 -389.50332642]
[29.47891426 -402.00305176]
[35.24263382 -415.73727417]
[25.54380226 -428.23699951]
[31.30752182 -441.97122192]
[16.31390953 -443.66061401]
[2.26879549 -449.17398071]
[-9.87020397 -458.13540649]
[-19.27543068 -469.93386841]
[-25.30562019 -483.76498413]
[-27.54962349 -498.68566895]
[-25.85444450 -513.67864990]
[-20.33565903 -527.72161865]
[-11.36954784 -539.85711670]
[0.43256241 -549.25781250]
[14.26598644 -555.28265381]
[29.18753624 -557.52093506]
[44.17984009 -555.81994629]
[58.22069168 -550.29571533]
[70.35276794 -541.32495117]
[79.74887848 -529.51922607]
[85.76838684 -515.68347168]
[88.00086975 -500.76104736]
[86.29411316 -485.76937866]
[80.76448059 -471.73068237]
[71.78900146 -459.60205078]
[59.97963715 -450.21051025]
[46.14156342 -444.19635010]
[55.68124008 -432.75762939]
[50.07667542 -417.96240234]
[59.61635208 -406.52368164]
[54.01178741 -391.72845459]
[56.23690414 -376.89440918]
[58.46202087 -362.06036377]
[60.68713760 -347.22631836]
[62.91225815 -332.39227295]
[65.13737488 -317.55822754]
[67.47286224 -302.74114990]
[69.91858673 -287.94189453]
[72.36431885 -273.14260864]
[75.00233459 -270.80313110]
[76.63826752 -267.06967163]
[76.62927246 -262.42712402]
[74.57338715 -257.62915039]
[76.35585022 -242.73542786]
[78.13832092 -227.84172058]
[89.96957397 -218.86636353]
[91.98941040 -203.78739929]
[82.49501038 -191.43855286]
[84.27748108 -176.54483032]
[86.80840302 -174.08988953]
[88.27599335 -170.28709412]
[88.05970764 -165.64958191]
[85.79163361 -160.94821167]
[86.90727997 -145.98976135]
[88.02293396 -131.03131104]
[89.13858032 -116.07285309]
[90.25422668 -101.11439514]
[105.50754547 -97.55593109]
[118.93128204 -89.44799042]
[129.20518494 -77.57397461]
[135.31446838 -63.08837128]
[136.65002441 -47.40449905]
[133.06915283 -32.05663681]
[124.91068268 -18.54990005]
[112.96295929 -8.21267319]
[98.38769531 -2.06594658]
[99.72592926 12.87423897]
[101.06416321 27.81442261]
[102.40239716 42.75460815]
[117.13298798 45.32580948]
[130.69660950 51.62102890]
[142.16938782 61.21147919]
[150.76988220 73.44393158]
[155.91230774 87.48519135]
[157.24636841 102.37886810]
[154.68122864 117.11051941]
[148.39158630 130.67672729]
[138.80584717 142.15344238]
[126.57693481 150.75897217]
[112.53778839 155.90715027]
[113.87602234 170.84733582]
[125.72038269 180.96411133]
[126.86470795 196.13464355]
[117.14692688 207.36407471]
[118.48516083 222.30426025]
[119.82339478 237.24444580]
[121.16162872 252.18463135]
[125.04417419 260.45288086]
[122.40687561 267.35696411]
[123.52252197 282.31539917]
[124.86075592 297.25558472]
[126.42127991 312.17419434]
[127.98180389 327.09280396]
[129.54232788 342.01141357]
[140.70144653 356.65911865]
[132.93580627 372.39639282]
[134.71826172 387.29013062]
[136.50073242 402.18383789]
[138.28320312 417.07754517]
[140.39782715 431.92776489]
[142.84355164 446.72702026]
[145.28927612 461.52630615]
[147.73500061 476.32556152]
[157.74670410 484.45751953]
[159.47908020 496.83419800]
[152.54357910 506.74508667]
[154.76870728 521.57910156]
[156.99382019 536.41314697]
[168.79585266 550.54797363]
[161.74067688 566.61633301]
[164.18640137 581.41558838]
[166.63212585 596.21490479]
[169.07785034 611.01416016]
[183.89013672 614.42950439]
[196.26498413 623.25744629]
[204.31532288 636.15161133]
[206.81353760 651.14587402]
[203.37866211 665.95361328]
[194.53450012 678.31683350]
[181.62973022 686.35021973]
[166.63220215 688.82873535]
[151.82896423 685.37438965]
[139.47738647 676.51397705]
[131.46099854 663.59863281]
[129.00224304 648.59783936]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 198]
[3 197]
[4 196]
[5 195]
[8 193]
[9 192]
[10 191]
[12 188]
[13 187]
[14 186]
[15 185]
[19 184]
[20 183]
[21 182]
[22 181]
[25 179]
[26 178]
[27 177]
[28 176]
[31 175]
[32 174]
[33 172]
[34 171]
[35 170]
[36 169]
[39 166]
[40 165]
[51 154]
[52 153]
[53 152]
[54 151]
[64 142]
[65 141]
[66 140]
[67 139]
[68 138]
[69 134]
[70 133]
[73 130]
[74 129]
[75 128]
[76 124]
[77 123]
[78 122]
[80 121]
[81 120]
[82 119]
[83 118]
[84 117]
[85 116]
[87 114]
[89 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
