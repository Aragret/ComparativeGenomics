%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCUUCAGUCCCAAUCCCACCAAUAUCAUCACACGUACCAAUAAUGAAAAUAAACCUCAACGUGGUUUUAAAAACCCCGGAUUCUGGUUACCUAUCGAxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[82.26996613 645.26885986]
[76.02722168 659.47473145]
[62.60977173 667.26910400]
[47.17689896 665.65478516]
[35.66285324 655.25256348]
[32.49502563 640.06225586]
[38.89150620 625.92492676]
[52.39271927 618.27661133]
[53.95324326 603.35797119]
[55.51376724 588.43939209]
[57.07429123 573.52075195]
[58.63481140 558.60217285]
[60.19533539 543.68359375]
[61.75585938 528.76495361]
[63.31638336 513.84637451]
[64.87690735 498.92776489]
[66.43743134 484.00915527]
[67.55307770 469.05068970]
[68.22286224 454.06567383]
[68.89264679 439.08062744]
[61.73136520 426.02056885]
[70.07715607 412.57965088]
[70.74694061 397.59460449]
[57.09570312 393.22531128]
[45.03273010 385.46130371]
[35.38548660 374.82766724]
[28.81766510 362.04660034]
[25.78352356 347.98834229]
[26.49647903 333.61190796]
[30.91410828 319.89971924]
[38.74061584 307.79043579]
[49.44663620 298.11465454]
[62.30501938 291.53808594]
[76.44023895 288.51550293]
[77.33305359 273.54211426]
[78.22586823 258.56869507]
[79.11868286 243.59529114]
[80.01149750 228.62188721]
[73.04545593 215.45664978]
[81.59043884 202.14147949]
[82.48326111 187.16807556]
[69.70256805 195.02008057]
[55.54383087 190.06729126]
[50.44433212 175.96073914]
[58.16323471 163.09922791]
[73.01045227 160.96379089]
[84.04055786 171.12705994]
[86.04457092 156.26153564]
[88.04858398 141.39601135]
[90.05259705 126.53047943]
[91.61312103 111.61187744]
[85.71572876 98.93463135]
[93.42842865 87.27247620]
[94.54407501 72.31402588]
[95.65972900 57.35557175]
[96.66398621 42.38922501]
[97.55680084 27.41582108]
[98.44961548 12.44241428]
[99.34243011 -2.53099108]
[97.78190613 -17.44959641]
[93.80981445 -31.91411972]
[89.83771515 -46.37864304]
[85.86562347 -60.84316635]
[74.75015259 -72.10180664]
[78.84098053 -86.42362213]
[74.86888885 -100.88814545]
[71.67287445 -103.82744598]
[69.76983643 -107.28330994]
[69.16338348 -110.78582001]
[69.70415497 -113.91219330]
[71.11843872 -116.33251190]
[68.01432800 -131.00781250]
[64.91021729 -145.68312073]
[61.69694138 -160.33489990]
[58.37468338 -174.96235657]
[55.05242538 -189.58982849]
[51.73016357 -204.21728516]
[38.90951538 -217.43516541]
[44.75005341 -233.98373413]
[41.21038055 -248.56010437]
[37.67070770 -263.13647461]
[26.89538383 -274.72106934]
[31.41081238 -288.91473389]
[27.87113953 -303.49111938]
[12.80788994 -303.27606201]
[-1.92543757 -306.41882324]
[-15.58982468 -312.76171875]
[-27.49987221 -321.98660278]
[-37.05817413 -333.63076782]
[-43.78529739 -347.11013794]
[-47.34380341 -361.74859619]
[-47.55520248 -376.81188965]
[-44.40889359 -391.54446411]
[-38.06269455 -405.20730591]
[-28.83492088 -417.11511230]
[-17.18844223 -426.67062378]
[-3.70743513 -433.39447021]
[10.93189526 -436.94943237]
[25.99524689 -437.15716553]
[40.72705078 -434.00729370]
[54.38836288 -427.65777588]
[66.29393768 -418.42712402]
[75.84659576 -406.77832031]
[82.56718445 -393.29568481]
[86.11859894 -378.65551758]
[86.32270050 -363.59210205]
[83.16925049 -348.86105347]
[76.81642914 -335.20129395]
[67.58288574 -323.29794312]
[55.93177795 -313.74810791]
[42.44751358 -307.03079224]
[45.98718643 -292.45440674]
[56.50933075 -281.91241455]
[52.24708557 -266.67614746]
[55.78675842 -252.09977722]
[59.32643127 -237.52340698]
[69.49025726 -230.96420288]
[72.55850983 -218.84934998]
[66.35762787 -207.53953552]
[69.67988586 -192.91207886]
[73.00214386 -178.28462219]
[76.32440186 -163.65716553]
[80.87129211 -157.83070374]
[79.58551788 -148.78723145]
[82.68962860 -134.11192322]
[85.79373932 -119.43662262]
[89.33341217 -104.86024475]
[93.30551147 -90.39572144]
[104.13686371 -80.17167664]
[100.33014679 -64.81526184]
[104.30223846 -50.35073853]
[108.27433777 -35.88621521]
[112.24643707 -21.42169189]
[115.17510223 -36.13301086]
[121.76383972 -49.60848999]
[131.57563782 -60.95434952]
[143.95973206 -69.41805267]
[158.09471130 -74.43824005]
[173.04306030 -75.68194580]
[187.81330872 -73.06666565]
[201.42581177 -66.76586914]
[212.97767639 -57.19746017]
[221.70272827 -44.99608612]
[227.02224731 -30.97101402]
[228.58343506 -16.05247879]
[226.28271484 -1.22997069]
[220.27270508 12.51338387]
[210.95202637 24.26603889]
[198.93887329 33.24848175]
[185.03005981 38.86494064]
[170.14807129 40.74289703]
[155.28001404 38.75779343]
[141.41200256 33.04128647]
[129.46386719 23.97254372]
[120.22808838 12.15305328]
[114.31584167 -1.63817525]
[113.42301941 13.33523083]
[112.53020477 28.30863571]
[111.63739014 43.28204346]
[114.37718964 50.14609909]
[110.61817932 58.47121811]
[109.50253296 73.42967224]
[108.38687897 88.38812256]
[114.28427124 101.06536865]
[106.57157135 112.72752380]
[108.59500885 116.56935883]
[109.22708893 120.46358490]
[108.62220764 123.96636963]
[107.06301880 126.72961426]
[104.91812134 128.53450012]
[102.91410828 143.40002441]
[100.91009521 158.26554871]
[98.90608215 173.13107300]
[97.45666504 188.06088257]
[96.56385040 203.03428650]
[103.46602631 217.27052307]
[94.98490906 229.51470947]
[94.09209442 244.48811340]
[93.19927216 259.46151733]
[92.30645752 274.43490601]
[91.41364288 289.40832520]
[106.23291016 294.67410278]
[118.95887756 303.88998413]
[128.56713867 316.30401611]
[134.28709412 330.90716553]
[135.66377258 346.51550293]
[132.59396362 361.86596680]
[125.33396912 375.71871948]
[114.47816467 386.95718384]
[100.91039276 394.67819214]
[85.73197937 398.26437378]
[85.06219482 413.24942017]
[92.17556763 427.38131714]
[83.87768555 439.75039673]
[83.20790100 454.73544312]
[82.53811646 469.72048950]
[84.67503357 473.50036621]
[85.42279053 477.37405396]
[84.92246246 480.89328003]
[83.44623566 483.70175171]
[81.35603333 485.56967163]
[79.79550934 500.48828125]
[78.23498535 515.40686035]
[76.67446136 530.32550049]
[75.11393738 545.24407959]
[73.55342102 560.16271973]
[71.99289703 575.08129883]
[70.43237305 589.99993896]
[68.87184906 604.91851807]
[67.31132507 619.83709717]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 210]
[9 209]
[10 208]
[11 207]
[12 206]
[13 205]
[14 204]
[15 203]
[16 202]
[17 201]
[18 196]
[19 195]
[20 194]
[22 192]
[23 191]
[34 181]
[35 180]
[36 179]
[37 178]
[38 177]
[40 175]
[41 174]
[47 173]
[48 172]
[49 171]
[50 170]
[51 165]
[53 163]
[54 162]
[55 161]
[56 159]
[57 158]
[58 157]
[59 156]
[60 133]
[61 132]
[62 131]
[63 130]
[65 128]
[66 127]
[71 126]
[72 125]
[73 124]
[74 122]
[75 121]
[76 120]
[77 119]
[79 116]
[80 115]
[81 114]
[83 112]
[84 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
