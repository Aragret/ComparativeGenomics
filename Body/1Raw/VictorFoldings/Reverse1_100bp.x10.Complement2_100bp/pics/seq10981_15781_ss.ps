%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[196.73350525 662.29290771]
[209.67887878 654.52630615]
[205.70678711 640.06176758]
[201.73469543 625.59722900]
[197.76258850 611.13275146]
[193.79049683 596.66821289]
[189.81840515 582.20367432]
[185.84631348 567.73913574]
[181.87420654 553.27465820]
[177.90211487 538.81011963]
[173.93002319 524.34558105]
[169.95791626 509.88107300]
[165.98582458 495.41653442]
[155.63121033 489.16284180]
[152.20361328 477.14474487]
[158.06501770 465.65530396]
[154.30871582 451.13323975]
[144.04835510 444.72610474]
[140.80006409 432.65826416]
[146.83187866 421.25738525]
[143.29220581 406.68103027]
[133.12838745 400.12182617]
[130.06013489 388.00695801]
[136.26101685 376.69714355]
[132.93875122 362.06970215]
[129.61650085 347.44223022]
[126.29424286 332.81478882]
[122.97197723 318.18731689]
[112.60795593 307.48983765]
[117.09657288 292.31869507]
[113.77431488 277.69125366]
[105.85474396 290.43017578]
[91.63920593 295.21749878]
[77.62686157 289.86453247]
[70.22396851 276.81857300]
[72.81501770 262.04406738]
[84.21543121 252.29570007]
[99.21308136 252.03030396]
[110.95222473 261.37078857]
[109.16976166 246.47708130]
[107.38729858 231.58335876]
[105.60482788 216.68965149]
[103.49020386 201.83944702]
[101.04447937 187.04017639]
[98.59874725 172.24090576]
[89.00577545 183.77238464]
[74.08177185 185.28036499]
[62.37587738 175.90101624]
[60.59376907 161.00726318]
[69.75631714 149.13090515]
[84.61479187 147.07527161]
[96.65710449 156.01712036]
[95.54145050 141.05865479]
[94.42580414 126.10020447]
[93.31015778 111.14175415]
[91.74963379 96.22315216]
[89.74562073 81.35762024]
[87.74160767 66.49208832]
[85.73759460 51.62656403]
[74.70591736 61.79032898]
[59.85889816 59.65349197]
[52.14120865 46.79124832]
[57.24204254 32.68516922]
[71.40125275 27.73372650]
[84.18029785 35.58555603]
[83.28748322 20.61215210]
[79.65283203 12.23198795]
[82.49452209 5.40948343]
[81.82473755 -9.57555485]
[81.15495300 -24.56059456]
[80.48516846 -39.54563141]
[68.59071350 -30.40659523]
[53.99354172 -33.85949707]
[47.45414352 -47.35898972]
[53.79311752 -60.95374298]
[68.33760834 -64.62221527]
[80.36518860 -55.66160965]
[80.81179810 -70.65496063]
[71.79055786 -76.35066223]
[65.99164581 -85.20954132]
[64.40531921 -95.59641266]
[67.25157166 -105.62695312]
[73.95233917 -113.50954437]
[83.24744415 -117.86522675]
[84.36309052 -132.82368469]
[85.47874451 -147.78213501]
[86.59439087 -162.74058533]
[87.59864807 -177.70692444]
[88.49146271 -192.68034363]
[89.38428497 -207.65374756]
[90.16560364 -222.63337708]
[90.83538818 -237.61842346]
[91.50517273 -252.60345459]
[92.17495728 -267.58850098]
[85.06158447 -281.72039795]
[93.35947418 -294.08947754]
[94.02925873 -309.07452393]
[79.79291534 -314.15567017]
[67.68774414 -323.20861816]
[58.79012299 -335.42843628]
[53.89122772 -349.72851562]
[53.42666245 -364.83731079]
[57.43773651 -379.41134644]
[65.56778717 -392.15472412]
[77.09389496 -401.93429565]
[90.99117279 -407.88049316]
[106.02387238 -409.46456909]
[120.85530090 -406.54565430]
[134.16667175 -399.38333130]
[144.77432251 -388.61444092]
[151.73504639 -375.19656372]
[154.42988586 -360.32278442]
[152.61923218 -345.31567383]
[146.46408081 -331.50967407]
[136.51174927 -320.13241577]
[123.64718628 -312.19549561]
[109.01429749 -308.40472412]
[108.34451294 -293.41970825]
[115.50579071 -280.35961914]
[107.15999603 -266.91870117]
[106.49021149 -251.93367004]
[105.82042694 -236.94863892]
[105.15064240 -221.96359253]
[107.99233246 -215.14109802]
[104.35768890 -206.76092529]
[103.46487427 -191.78752136]
[102.57205200 -176.81411743]
[105.31185913 -169.95005798]
[101.55284119 -161.62493896]
[100.43719482 -146.66648865]
[99.32154846 -131.70803833]
[98.20589447 -116.74958038]
[111.96746826 -102.96069336]
[111.13858795 -83.19161224]
[95.80514526 -70.20835114]
[95.35854340 -55.21500397]
[95.47020721 -40.21541977]
[96.13999176 -25.23037910]
[96.80977631 -10.24534035]
[97.47956085 4.73969841]
[98.26088715 19.71933556]
[99.15370178 34.69274139]
[100.60311890 49.62255096]
[102.60713196 64.48807526]
[104.61114502 79.35360718]
[106.61515808 94.21913147]
[108.87359619 96.26583099]
[110.43723297 99.17951965]
[110.98352814 102.70442963]
[110.28892517 106.46923828]
[108.26860809 110.02610779]
[109.38425446 124.98455811]
[110.49990845 139.94300842]
[111.61555481 154.90145874]
[113.39801788 169.79518127]
[115.84375000 184.59445190]
[118.28947449 199.39372253]
[121.60292053 203.42710876]
[122.90744781 207.88261414]
[122.37867737 211.92433167]
[120.49855042 214.90718079]
[122.28101349 229.80090332]
[124.06347656 244.69461060]
[125.84594727 259.58834839]
[128.40177917 274.36898804]
[131.72402954 288.99645996]
[142.32568359 300.74020386]
[137.59944153 314.86505127]
[140.92169189 329.49252319]
[144.24395752 344.11996460]
[147.56622314 358.74743652]
[150.88847351 373.37490845]
[163.70912170 386.59277344]
[157.86859131 403.14135742]
[161.40826416 417.71771240]
[174.42428589 430.74325562]
[168.83078003 447.37695312]
[172.58708191 461.89901733]
[185.79559326 474.72930908]
[180.45034790 491.44442749]
[184.42243958 505.90896606]
[188.39454651 520.37347412]
[192.36663818 534.83801270]
[196.33872986 549.30255127]
[200.31083679 563.76702881]
[204.28292847 578.23156738]
[208.25502014 592.69610596]
[212.22711182 607.16064453]
[216.19921875 621.62518311]
[220.17131042 636.08966064]
[224.14340210 650.55419922]
[239.23970032 650.62030029]
[253.75804138 654.75793457]
[266.62109375 662.66015625]
[276.87426758 673.74053955]
[283.75677490 687.17681885]
[286.75787354 701.97192383]
[285.65484619 717.02801514]
[280.52954102 731.22784424]
[271.76232910 743.51757812]
[260.00375366 752.98535156]
[246.12637329 758.92852783]
[231.16001892 760.90612793]
[216.21528625 758.77130127]
[202.40115356 752.68261719]
[190.74272156 743.09179688]
[182.10514832 730.71057129]
[177.12937927 716.45770264]
[176.18466187 701.39086914]
[179.34107971 686.62805176]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 191]
[3 190]
[4 189]
[5 188]
[6 187]
[7 186]
[8 185]
[9 184]
[10 183]
[11 182]
[12 181]
[13 180]
[16 178]
[17 177]
[20 175]
[21 174]
[24 172]
[25 171]
[26 170]
[27 169]
[28 168]
[30 166]
[31 165]
[39 164]
[40 163]
[41 162]
[42 161]
[43 157]
[44 156]
[45 155]
[52 154]
[53 153]
[54 152]
[55 151]
[56 146]
[57 145]
[58 144]
[59 143]
[65 142]
[66 141]
[68 140]
[69 139]
[70 138]
[71 137]
[77 136]
[78 135]
[84 132]
[85 131]
[86 130]
[87 129]
[88 127]
[89 126]
[90 125]
[91 123]
[92 122]
[93 121]
[94 120]
[96 118]
[97 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
