%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[203.69010925 446.45034790]
[208.06619263 432.08270264]
[214.17475891 418.36172485]
[221.92321777 405.49545288]
[231.19410706 393.67892456]
[241.84686279 383.09127808]
[253.72001648 373.89300537]
[246.05941772 360.99670410]
[238.39881897 348.10037231]
[230.45213318 335.37832642]
[222.22332764 322.83691406]
[213.99452209 310.29553223]
[210.63513184 309.22460938]
[207.62754822 306.47332764]
[205.75590515 302.22476196]
[205.69290161 297.00527954]
[198.03231812 284.10894775]
[190.37171936 271.21261597]
[182.71112061 258.31631470]
[175.05052185 245.41996765]
[167.38992310 232.52365112]
[159.72932434 219.62731934]
[152.06872559 206.73098755]
[144.40812683 193.83467102]
[131.86532593 195.35003662]
[119.63601685 191.99671936]
[109.54628754 184.23880005]
[103.11659241 173.20077515]
[101.33264160 160.50460815]
[104.49444580 148.03150940]
[112.16654205 137.64312744]
[104.89331055 124.52443695]
[97.62008667 111.40574646]
[96.62312317 126.37257385]
[89.30648041 139.46710205]
[77.08287048 148.16098022]
[62.31249619 150.77555847]
[47.84727859 146.80598450]
[36.48022079 137.01875305]
[30.40613174 123.30359650]
[30.79781723 108.30870819]
[37.57965088 94.92937469]
[49.44216537 85.74891663]
[64.09490204 82.53995514]
[78.70863342 85.92207336]
[90.46248627 95.24324799]
[85.63648987 81.04079437]
[80.81049347 66.83833313]
[75.98449707 52.63587952]
[71.15850067 38.43342209]
[66.22690582 24.26728821]
[54.30484772 13.86656094]
[57.31913757 -0.71984762]
[52.28221893 -14.84887695]
[47.24530411 -28.97790718]
[32.13532257 -28.59588814]
[17.66666222 -32.89708710]
[5.25269461 -41.44821548]
[-3.89797950 -53.40146637]
[-8.89919758 -67.57857513]
[-9.27304173 -82.58694458]
[-4.99548101 -96.95645142]
[3.50250959 -109.28342438]
[15.37833500 -118.36779022]
[10.34141827 -132.49682617]
[5.30450201 -146.62585449]
[0.26758593 -160.75488281]
[-4.76933050 -174.88391113]
[-10.12051582 -188.89692688]
[-15.78330231 -202.78695679]
[-21.44608879 -216.67698669]
[-27.10887527 -230.56701660]
[-32.77166367 -244.45704651]
[-38.43444824 -258.34707642]
[-53.10059357 -255.03736877]
[-68.11147308 -254.18693542]
[-83.05759430 -255.81895447]
[-97.53119659 -259.88891602]
[-111.13744354 -266.28579712]
[-123.50514221 -274.83505249]
[-134.29689026 -285.30349731]
[-143.21829224 -297.40548706]
[-150.02593994 -310.81091309]
[-154.53414917 -325.15408325]
[-156.61990356 -340.04364014]
[-156.22631836 -355.07345581]
[-153.36413574 -369.83346558]
[-148.11141968 -383.92098999]
[-140.61149597 -396.95175171]
[-131.06892395 -408.57025146]
[-119.74407959 -418.45953369]
[-106.94588470 -426.34979248]
[-93.02349091 -432.02575684]
[-78.35670471 -435.33264160]
[-63.34566116 -436.18017578]
[-48.39986038 -434.54525757]
[-33.92704010 -430.47253418]
[-20.32202530 -424.07302856]
[-7.95597458 -415.52139282]
[2.83375812 -405.05087280]
[11.75282097 -392.94714355]
[18.55789566 -379.54040527]
[23.06333542 -365.19638062]
[25.14622879 -350.30639648]
[24.74975014 -335.27667236]
[21.88471985 -320.51724243]
[16.62929344 -306.43069458]
[9.12684727 -293.40136719]
[-0.41794953 -281.78472900]
[-11.74470711 -271.89764404]
[-24.54442215 -264.00985718]
[-18.88163567 -250.11982727]
[-13.21884918 -236.22979736]
[-7.55606222 -222.33976746]
[-1.89327586 -208.44975281]
[3.76951075 -194.55972290]
[6.86017036 -192.86260986]
[9.28237343 -189.58419800]
[10.30185223 -185.05496216]
[9.35969925 -179.92082214]
[14.39661503 -165.79179382]
[19.43353081 -151.66276550]
[24.47044754 -137.53373718]
[29.50736427 -123.40470886]
[44.45171356 -123.88157654]
[58.83123398 -119.71029663]
[71.23418427 -111.28730011]
[80.43884277 -99.42706299]
[85.53382111 -85.28337860]
[86.00831604 -70.23712158]
[81.80327606 -55.76141739]
[73.31843567 -43.27742767]
[61.37433243 -34.01482391]
[66.41124725 -19.88579369]
[71.44816589 -5.75676394]
[83.00994873 3.63336062]
[80.35593414 19.23037148]
[85.56297302 24.47522926]
[85.36095428 33.60742569]
[90.18695068 47.80988312]
[95.01294708 62.01233673]
[99.83894348 76.21479034]
[104.66494751 90.41725159]
[110.73877716 104.13251495]
[118.01200867 117.25121307]
[125.28524017 130.36990356]
[142.85856628 130.26339722]
[157.98814392 139.02732849]
[166.55114746 154.16929626]
[166.26710510 171.47341919]
[157.30445862 186.17407227]
[164.96505737 199.07038879]
[172.62565613 211.96672058]
[180.28625488 224.86305237]
[187.94685364 237.75936890]
[195.60743713 250.65570068]
[203.26803589 263.55203247]
[210.92863464 276.44836426]
[218.58923340 289.34469604]
[226.53591919 302.06671143]
[234.76472473 314.60812378]
[242.99353027 327.14950562]
[247.65638733 329.49575806]
[250.65332031 333.04141235]
[251.80642700 336.95108032]
[251.29515076 340.43975830]
[258.95574951 353.33609009]
[266.61633301 366.23242188]
[280.37353516 360.20590210]
[294.76708984 355.91571045]
[309.57873535 353.42684937]
[324.58398438 352.77713013]
[339.55535889 353.97631836]
[354.26583862 357.00625610]
[368.49249268 361.82104492]
[382.01962280 368.34765625]
[394.64212036 376.48718262]
[406.16870117 386.11618042]
[416.42456055 397.08874512]
[425.25427246 409.23846436]
[432.52395630 422.38119507]
[438.12338257 436.31768799]
[441.96771240 450.83666992]
[443.99865723 465.71801758]
[444.18539429 480.73617554]
[442.52511597 495.66345215]
[439.04299927 510.27352905]
[433.79183960 524.34490967]
[426.85119629 537.66436768]
[418.32632446 550.02990723]
[408.34646606 561.25408936]
[397.06289673 571.16674805]
[384.64666748 579.61755371]
[371.28604126 586.47851562]
[357.18350220 591.64556885]
[342.55288696 595.04040527]
[327.61596680 596.61145020]
[312.59921265 596.33502197]
[297.73025513 594.21527100]
[283.23449707 590.28430176]
[269.33169556 584.60174561]
[256.23260498 577.25366211]
[244.13581848 568.35156250]
[233.22471619 558.03033447]
[223.66471863 546.44647217]
[215.60073853 533.77557373]
[209.15502930 520.20971680]
[204.42529297 505.95458984]
[201.48324585 491.22622681]
[200.37348938 476.24798584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 168]
[8 167]
[9 166]
[10 162]
[11 161]
[12 160]
[16 159]
[17 158]
[18 157]
[19 156]
[20 155]
[21 154]
[22 153]
[23 152]
[24 151]
[31 146]
[32 145]
[33 144]
[46 143]
[47 142]
[48 141]
[49 140]
[50 139]
[51 137]
[53 135]
[54 134]
[55 133]
[64 124]
[65 123]
[66 122]
[67 121]
[68 120]
[69 116]
[70 115]
[71 114]
[72 113]
[73 112]
[74 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
