%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[55.75270844 291.06237793]
[54.74201584 306.03768921]
[52.44770432 320.87066650]
[48.88676071 335.45150757]
[44.08554459 349.67227173]
[38.07961273 363.42764282]
[30.91342354 376.61578369]
[22.64003754 389.13906860]
[13.32070827 400.90475464]
[3.02443457 411.82574463]
[-8.17255306 421.82119751]
[-20.18735504 430.81707764]
[-32.93101501 438.74682617]
[-46.30918503 445.55166626]
[-60.22280884 451.18127441]
[-74.56887817 455.59393311]
[-89.24118042 458.75701904]
[-104.13108826 460.64706421]
[-119.12834167 461.25009155]
[-134.12193298 460.56164551]
[-149.00082397 458.58682251]
[-163.65486145 455.34020996]
[-177.97557068 450.84591675]
[-191.85690308 445.13714600]
[-205.19609070 438.25619507]
[-217.89437866 430.25399780]
[-229.85774231 421.18981934]
[-240.99761963 411.13076782]
[-251.23152161 400.15130615]
[-260.48367310 388.33270264]
[-268.68557739 375.76251221]
[-275.77655029 362.53375244]
[-281.70404053 348.74438477]
[-286.42416382 334.49652100]
[-289.90200806 319.89562988]
[-292.11178589 305.04980469]
[-293.03713989 290.06900024]
[-292.67126465 275.06408691]
[-291.01684570 260.14614868]
[-288.08609009 245.42568970]
[-283.90075684 231.01165771]
[-278.49179077 217.01077271]
[-271.89926147 203.52670288]
[-264.17196655 190.65928650]
[-255.36714172 178.50378418]
[-245.54994202 167.15019226]
[-234.79307556 156.68257141]
[-223.17616272 147.17842102]
[-210.78523254 138.70809937]
[-197.71202087 131.33433533]
[-184.05331421 125.11170959]
[-169.91023254 120.08629608]
[-155.38749695 116.29531097]
[-140.59262085 113.76680756]
[-125.63516235 112.51951599]
[-110.62584686 112.56266785]
[-95.67580414 113.89594269]
[-80.89572144 116.50946808]
[-66.39501953 120.38390350]
[-52.28107071 125.49054718]
[-38.65836716 131.79161072]
[-25.62776375 139.24041748]
[-13.28574085 147.78184509]
[-1.72367465 157.35264587]
[8.97283173 167.88194275]
[20.37529373 158.13597107]
[31.77775764 148.39001465]
[43.18021774 138.64404297]
[54.58268356 128.89807129]
[65.98514557 119.15211487]
[77.38760376 109.40614319]
[88.79006958 99.66017914]
[73.82927704 98.57638550]
[62.97808075 88.22015381]
[61.19750595 73.32621002]
[69.30160522 60.70386887]
[83.58529663 56.12388992]
[97.51826477 61.68018341]
[104.73054504 74.83248138]
[101.92384338 89.56932831]
[114.27835083 81.06250763]
[126.63285828 72.55567932]
[125.29907227 60.12632370]
[129.35287476 48.37748718]
[137.96694946 39.51874924]
[149.46258545 35.18848038]
[161.63659668 36.15102386]
[172.18348694 42.16253662]
[184.78579712 34.02732086]
[197.38812256 25.89210510]
[209.99043274 17.75688934]
[222.59274292 9.62167358]
[235.19505310 1.48645782]
[247.79736328 -6.64875793]
[240.54789734 -19.78747368]
[234.22215271 -33.39503479]
[228.85029602 -47.40659332]
[224.45791626 -61.75537872]
[221.06593323 -76.37300873]
[218.69053650 -91.18983459]
[217.34303284 -106.13523102]
[217.02984619 -121.13797760]
[217.75245667 -136.12658691]
[219.50744629 -151.02963257]
[222.28642273 -165.77609253]
[226.07617188 -180.29568481]
[230.85861206 -194.51921082]
[236.61094666 -208.37892151]
[243.30578613 -221.80873108]
[250.91122437 -234.74464417]
[259.39099121 -247.12504578]
[268.70471191 -258.89089966]
[278.80798340 -269.98614502]
[289.65264893 -280.35794067]
[301.18704224 -289.95681763]
[313.35617065 -298.73706055]
[326.10208130 -306.65679932]
[339.36401367 -313.67831421]
[353.07879639 -319.76812744]
[367.18103027 -324.89724731]
[381.60351562 -329.04119873]
[396.27752686 -332.18026733]
[411.13317871 -334.29946899]
[426.09960938 -335.38867188]
[441.10552979 -335.44277954]
[456.07943726 -334.46142578]
[470.94995117 -332.44937134]
[485.64620972 -329.41616821]
[500.09820557 -325.37628174]
[514.23706055 -320.34893799]
[527.99536133 -314.35812378]
[541.30755615 -307.43240356]
[554.11022949 -299.60473633]
[566.34234619 -290.91244507]
[577.94561768 -281.39694214]
[588.86474609 -271.10360718]
[599.04772949 -260.08145142]
[608.44598389 -248.38302612]
[617.01477051 -236.06408691]
[624.71325684 -223.18331909]
[631.50469971 -209.80210876]
[637.35681152 -195.98423767]
[642.24163818 -181.79553223]
[646.13592529 -167.30363464]
[649.02117920 -152.57759094]
[650.88348389 -137.68759155]
[651.71417236 -122.70457458]
[651.50909424 -107.69995880]
[650.26934814 -92.74523163]
[648.00079346 -77.91168213]
[644.71429443 -63.26997757]
[640.42547607 -48.88990402]
[635.15472412 -34.83998871]
[628.92724609 -21.18718719]
[621.77264404 -7.99655962]
[613.72509766 4.66903305]
[604.82287598 16.74923325]
[595.10839844 28.18647194]
[584.62805176 38.92624664]
[573.43170166 48.91737366]
[561.57275391 58.11224747]
[549.10766602 66.46704102]
[536.09588623 73.94194794]
[522.59942627 80.50133514]
[508.68255615 86.11395264]
[494.41162109 90.75305939]
[479.85464478 94.39653778]
[465.08099365 97.02702332]
[450.16104126 98.63198090]
[435.16592407 99.20377350]
[420.16708374 98.73966980]
[405.23599243 97.24187469]
[390.44381714 94.71752930]
[375.86105347 91.17867279]
[361.55718994 86.64215851]
[347.60037231 81.12960815]
[334.05712891 74.66728973]
[320.99200439 67.28600311]
[308.46728516 59.02092743]
[296.54260254 49.91144180]
[285.27481079 40.00096130]
[274.71762085 29.33671570]
[264.92129517 17.96952248]
[255.93257141 5.95355368]
[243.33026123 14.08876991]
[230.72795105 22.22398567]
[218.12564087 30.35920143]
[205.52333069 38.49441528]
[192.92102051 46.62963486]
[180.31871033 54.76485062]
[180.16720581 72.42408752]
[169.35025024 86.58192444]
[152.04898071 91.45490265]
[135.13967896 84.91018677]
[122.78517914 93.41701508]
[110.43067169 101.92384338]
[98.53603363 111.06264496]
[87.13357544 120.80860901]
[75.73110962 130.55458069]
[64.32865143 140.30053711]
[52.92618561 150.04650879]
[41.52372360 159.79246521]
[30.12125969 169.53843689]
[18.71879768 179.28440857]
[27.45425224 191.48986816]
[35.10811996 204.40109253]
[41.62373352 217.92248535]
[46.95285416 231.95394897]
[51.05602646 246.39158630]
[53.90286636 261.12850952]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 204]
[66 203]
[67 202]
[68 201]
[69 200]
[70 199]
[71 198]
[72 197]
[80 196]
[81 195]
[82 194]
[88 190]
[89 189]
[90 188]
[91 187]
[92 186]
[93 185]
[94 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
