%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[106.25056458 611.73944092]
[92.25665283 606.28503418]
[79.03910065 599.15228271]
[66.79830170 590.44927979]
[55.71980286 580.30798340]
[45.97156143 568.88208008]
[37.70135498 556.34478760]
[31.03456116 542.88616943]
[26.07224464 528.71032715]
[22.88963127 514.03210449]
[21.53497124 499.07400513]
[22.02880096 484.06283569]
[24.36363220 469.22610474]
[28.50406837 454.78878784]
[34.38734436 440.96969604]
[41.92427063 427.97839355]
[51.00059128 416.01177979]
[61.47870636 405.25125122]
[73.19977570 395.85998535]
[85.98610687 387.98028564]
[99.64385986 381.73165894]
[113.96599579 377.20883179]
[128.73539734 374.48034668]
[127.84257507 359.50692749]
[126.94976044 344.53353882]
[126.05694580 329.56011963]
[117.57582092 317.31594849]
[124.47800446 303.07971191]
[123.58518982 288.10629272]
[121.91364288 273.19973755]
[119.46791840 258.40045166]
[117.02219391 243.60119629]
[107.31327057 232.30578613]
[112.69692993 217.42874146]
[110.25120544 202.62947083]
[106.95930481 199.16934204]
[105.80607605 193.60453796]
[107.95983124 187.35369873]
[105.95581818 172.48817444]
[103.95180511 157.62265015]
[101.39597321 142.84199524]
[98.29186249 128.16668701]
[95.18775177 113.49139404]
[85.98612213 102.96421051]
[90.13694763 89.61271667]
[87.03283691 74.93741608]
[83.92872620 60.26211548]
[80.82461548 45.58681107]
[77.72050476 30.91150856]
[73.48696899 45.30168533]
[64.86414337 57.57551575]
[52.76202011 66.43771362]
[38.45775604 70.95302582]
[23.46092033 70.64494324]
[9.35416412 65.54598236]
[-2.37379408 56.19424438]
[-10.48527431 43.57664108]
[-14.12425232 29.02474022]
[-12.90669823 14.07423782]
[-6.96110392 0.30289367]
[3.08507800 -10.83596706]
[16.17164993 -18.16683388]
[30.91755676 -20.91606522]
[45.76662445 -18.79352570]
[59.15179825 -12.02321243]
[69.66050720 -1.31961262]
[76.18379974 12.18788052]
[76.85358429 -2.79715824]
[77.52336884 -17.78219795]
[67.35031128 -26.60962868]
[64.16528320 -39.49629211]
[68.91354370 -51.68383026]
[79.65278625 -58.80408478]
[80.54560852 -73.77748871]
[81.43842316 -88.75090027]
[82.33123779 -103.72430420]
[75.42905426 -117.96054077]
[83.91017914 -130.20471191]
[84.80299377 -145.17811584]
[74.59040833 -156.93995667]
[75.70915985 -172.11241150]
[86.98521423 -181.77606201]
[87.87802887 -196.74946594]
[88.77084351 -211.72286987]
[89.66365814 -226.69627380]
[75.47137451 -231.84011841]
[63.31584930 -240.76567078]
[54.17712784 -252.74267578]
[48.78903961 -266.79531860]
[47.58027267 -281.78167725]
[50.64026642 -296.48654175]
[57.71266174 -309.71987915]
[68.21675873 -320.41333008]
[81.29517365 -327.70623779]
[95.88385010 -331.01501465]
[96.77666473 -345.98840332]
[97.66947937 -360.96182251]
[98.56229401 -375.93521118]
[99.45510864 -390.90863037]
[85.53490448 -396.90893555]
[74.50854492 -407.31063843]
[67.70751953 -420.85763550]
[65.95308685 -435.91412354]
[69.45709229 -450.66192627]
[77.79642487 -463.32019043]
[89.96406555 -472.36035156]
[104.49070740 -476.69076538]
[119.62218475 -475.78851318]
[133.53131104 -469.76257324]
[144.53848267 -459.34057617]
[151.31452942 -445.78103638]
[153.04121399 -430.72134399]
[149.51004028 -415.98004150]
[141.14738464 -403.33715820]
[128.96311951 -394.31945801]
[114.42852020 -390.01580811]
[113.53569794 -375.04238892]
[112.64288330 -360.06900024]
[111.75006866 -345.09558105]
[110.85725403 -330.12219238]
[124.94937134 -325.10327148]
[137.06849670 -316.30792236]
[146.22746277 -304.44204712]
[151.67720032 -290.46203613]
[152.96812439 -275.49774170]
[149.98707581 -260.76119995]
[142.96728516 -247.44841003]
[132.47006226 -236.64222717]
[119.34003448 -229.22438049]
[104.63706207 -225.80346680]
[103.74424744 -210.83004761]
[102.85143280 -195.85664368]
[101.95861816 -180.88323975]
[112.00643158 -169.94812012]
[111.31429291 -154.75024414]
[99.77639771 -144.28530884]
[98.88358307 -129.31190491]
[105.84962463 -116.14665985]
[97.30464172 -102.83148956]
[96.41182709 -87.85808563]
[95.51901245 -72.88467407]
[94.62619781 -57.91127014]
[106.31655121 -45.82101440]
[105.63211823 -28.67906570]
[92.50840759 -17.11241150]
[91.83862305 -2.12737322]
[91.16883850 12.85766602]
[92.39581299 27.80739975]
[95.49992371 42.48270035]
[98.60402679 57.15800476]
[101.70813751 71.83330536]
[104.81224823 86.50860596]
[114.01387787 97.03578949]
[109.86305237 110.38728333]
[112.96716309 125.06258392]
[116.07127380 139.73788452]
[126.31644440 128.78176880]
[141.28126526 129.80842590]
[149.93423462 142.06101990]
[145.89669800 156.50741577]
[132.14497375 162.49826050]
[118.81732941 155.61863708]
[120.82134247 170.48416138]
[122.82535553 185.34968567]
[125.05047607 200.18373108]
[127.49620056 214.98300171]
[137.38006592 227.33694458]
[131.82145691 241.15545654]
[134.26719666 255.95472717]
[136.71292114 270.75399780]
[145.37667847 258.50903320]
[159.85195923 254.57632446]
[173.52084351 260.75381470]
[180.13410950 274.21728516]
[176.66825867 288.81140137]
[164.70782471 297.86389160]
[149.72096252 297.23614502]
[138.55859375 287.21350098]
[139.45140076 302.18688965]
[147.99639893 315.50207520]
[141.03034973 328.66729736]
[141.92317200 343.64071655]
[142.81597900 358.61410522]
[143.70880127 373.58752441]
[158.69776917 374.54162598]
[173.45588684 377.33050537]
[187.75939941 381.91186523]
[201.39147949 388.21630859]
[214.14547729 396.14822388]
[225.82803345 405.58737183]
[236.26203918 416.39065552]
[245.28933716 428.39431763]
[252.77307129 441.41635132]
[258.59976196 455.25936890]
[262.68112183 469.71350098]
[264.95523071 484.55963135]
[265.38766479 499.57272339]
[263.97183228 514.52514648]
[260.72921753 529.19024658]
[255.70895386 543.34570312]
[248.98716736 556.77691650]
[240.66574097 569.28021240]
[230.87084961 580.66619873]
[219.75096130 590.76208496]
[207.47467041 599.41497803]
[194.22805786 606.49359131]
[180.21195984 611.89068604]
[165.63883972 615.52441406]
[150.72962952 617.33966064]
[135.71035767 617.30889893]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 184]
[24 183]
[25 182]
[26 181]
[28 179]
[29 178]
[30 170]
[31 169]
[32 168]
[34 166]
[35 165]
[38 164]
[39 163]
[40 162]
[41 156]
[42 155]
[43 154]
[45 152]
[46 151]
[47 150]
[48 149]
[49 148]
[67 147]
[68 146]
[69 145]
[73 142]
[74 141]
[75 140]
[76 139]
[78 137]
[79 136]
[82 133]
[83 132]
[84 131]
[85 130]
[95 120]
[96 119]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
