%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[99.06734467 523.57983398]
[96.16741180 538.42724609]
[88.81952667 551.65087891]
[77.74358368 561.95520020]
[64.02467346 568.33062744]
[49.00683594 570.15270996]
[34.16137314 567.24279785]
[20.94268990 559.88604736]
[10.64581776 548.80322266]
[4.27953768 535.08001709]
[2.46755457 520.06097412]
[5.38738728 505.21746826]
[12.75298119 492.00372314]
[23.84272957 481.71429443]
[37.57017136 475.35720825]
[52.59043503 473.55529785]
[55.47570801 458.83538818]
[50.33100128 444.85751343]
[60.57830048 432.80331421]
[63.46357346 418.08343506]
[62.01341248 415.68441772]
[61.42615128 412.56646729]
[61.98039246 409.05529785]
[63.83177185 405.57150269]
[66.98366547 402.58493042]
[70.73996735 388.06286621]
[74.49626923 373.54083252]
[78.25256348 359.01876831]
[82.00886536 344.49670410]
[83.79133606 329.60299683]
[83.56800842 314.60464478]
[83.34468079 299.60632324]
[83.12135315 284.60797119]
[79.87860870 277.96670532]
[83.00801849 269.38507080]
[83.00801849 254.38505554]
[83.00801849 239.38505554]
[83.00801849 224.38505554]
[80.78675079 221.64675903]
[79.78144836 217.69651794]
[80.54728699 213.11756897]
[83.35795593 208.71900940]
[84.02774048 193.73397827]
[84.69752502 178.74893188]
[82.90753937 176.59159851]
[81.86425781 173.59524536]
[81.89151764 170.04072571]
[83.20561981 166.32081604]
[85.87960815 162.89974976]
[87.44013214 147.98114014]
[81.06890106 134.51799011]
[90.19991302 121.59764862]
[91.76043701 106.67903900]
[92.76469421 91.71269989]
[93.21130371 76.71934509]
[93.65790558 61.72599792]
[84.55578613 45.71872330]
[94.35431671 31.16002846]
[94.57764435 16.16168976]
[94.80097198 1.16335273]
[95.02429962 -13.83498478]
[92.02301025 -22.46227074]
[95.36426544 -29.05452156]
[95.81087494 -44.04787064]
[96.25747681 -59.04122162]
[96.70408630 -74.03456879]
[97.15068817 -89.02792358]
[97.59729767 -104.02127075]
[98.04389954 -119.01462555]
[97.15108490 -133.98802185]
[94.92597198 -148.82206726]
[85.22713470 -161.32180786]
[90.99085999 -175.05601501]
[88.76573944 -189.89006042]
[86.54061890 -204.72410583]
[84.31550598 -219.55815125]
[74.55191040 -208.17079163]
[59.60710526 -206.88516235]
[48.04215622 -216.43775940]
[46.48199081 -231.35639954]
[55.82033920 -243.09501648]
[70.70777893 -244.92919922]
[82.61562347 -235.80906677]
[81.72280121 -250.78247070]
[80.82998657 -265.75585938]
[79.82572937 -280.72222900]
[78.71008301 -295.68066406]
[75.76969147 -299.99359131]
[74.86786652 -304.54769897]
[75.75511169 -308.52612305]
[77.89385986 -311.32934570]
[77.44725800 -326.32269287]
[67.40850067 -341.75982666]
[76.32311249 -356.87591553]
[75.65332794 -371.86096191]
[74.98354340 -386.84600830]
[74.31375885 -401.83105469]
[60.12337112 -407.35852051]
[49.41264343 -418.18441772]
[44.03727341 -432.43310547]
[44.92857742 -447.63592529]
[51.93212891 -461.15887451]
[63.83452225 -470.65902710]
[78.57359314 -474.49041748]
[93.59571075 -471.98925781]
[106.29820251 -463.58886719]
[114.48028564 -450.74465942]
[116.72436523 -435.68200684]
[112.64163971 -421.01055908]
[102.93946075 -409.27224731]
[89.29879761 -402.50082397]
[89.96858215 -387.51577759]
[90.63836670 -372.53076172]
[91.30815125 -357.54571533]
[100.02050781 -349.15396118]
[100.70115662 -336.67517090]
[92.44060516 -326.76931763]
[92.88721466 -311.77593994]
[93.66853333 -296.79632568]
[94.78417969 -281.83786011]
[98.41646576 -275.40136719]
[95.80339813 -266.64868164]
[96.69621277 -251.67527771]
[97.58902740 -236.70187378]
[99.14955139 -221.78326416]
[101.37466431 -206.94923401]
[103.59978485 -192.11518860]
[105.82489777 -177.28114319]
[115.36457825 -165.84243774]
[109.76000977 -151.04719543]
[111.98513031 -136.21315002]
[118.15422821 -149.88581848]
[129.58891296 -159.59396362]
[144.08132935 -163.46307373]
[158.83320618 -160.74609375]
[170.99620056 -151.96762085]
[178.22181702 -138.82263184]
[179.11491394 -123.84925079]
[173.50303650 -109.93857574]
[162.46977234 -99.77654266]
[148.14544678 -95.32529449]
[133.29586792 -97.44428253]
[120.78826141 -105.72437286]
[113.03725433 -118.56801605]
[112.59064484 -103.57466888]
[112.14404297 -88.58131409]
[111.69743347 -73.58796692]
[111.25082397 -58.59461594]
[110.80422211 -43.60126495]
[110.35761261 -28.60791588]
[110.02263641 -13.61165714]
[109.79930878 1.38668048]
[109.57598114 16.38501740]
[109.35265350 31.38335609]
[117.55007935 40.27878952]
[117.48677063 52.77598190]
[108.65126038 62.17260361]
[108.20465088 77.16595459]
[107.75804901 92.15930176]
[120.29928589 83.93024445]
[134.59921265 88.45927429]
[140.11645508 102.40775299]
[132.78390503 115.49338531]
[118.00685120 118.06992340]
[106.67903900 108.23956299]
[105.11851501 123.15817261]
[111.37813568 137.68840027]
[102.35874176 149.54167175]
[100.79821777 164.46026611]
[99.68256378 179.41873169]
[99.01277924 194.40376282]
[98.34299469 209.38880920]
[98.00801849 224.38505554]
[98.00801849 239.38505554]
[98.00801849 254.38505554]
[98.00801849 269.38507080]
[98.11968994 284.38464355]
[98.34301758 299.38299561]
[98.56634521 314.38131714]
[98.78967285 329.37966919]
[105.59603119 316.01278687]
[116.15530396 305.35906982]
[129.46104431 298.43392944]
[144.24502563 295.89749146]
[159.09815979 297.99142456]
[172.60470581 304.51623535]
[183.47734070 314.84997559]
[190.67971802 328.00769043]
[193.52539062 342.73529053]
[191.74310303 357.62902832]
[185.50273132 371.26931763]
[175.39906311 382.35607910]
[162.39514160 389.83258057]
[147.73040771 392.98617554]
[132.80259705 391.51635742]
[119.03453064 385.56314087]
[107.73851776 375.69400024]
[99.99120331 362.84957886]
[96.53092957 348.25299072]
[92.77462769 362.77505493]
[89.01832581 377.29711914]
[85.26202393 391.81918335]
[81.50572205 406.34124756]
[78.18346405 420.96868896]
[75.29819489 435.68859863]
[80.23651886 450.71932983]
[70.19559479 461.72067261]
[67.31032562 476.44055176]
[80.53885651 483.77957153]
[90.85057068 494.84860229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 208]
[17 207]
[19 205]
[20 204]
[25 203]
[26 202]
[27 201]
[28 200]
[29 199]
[30 180]
[31 179]
[32 178]
[33 177]
[35 176]
[36 175]
[37 174]
[38 173]
[42 172]
[43 171]
[44 170]
[49 169]
[50 168]
[52 166]
[53 165]
[54 159]
[55 158]
[56 157]
[58 154]
[59 153]
[60 152]
[61 151]
[63 150]
[64 149]
[65 148]
[66 147]
[67 146]
[68 145]
[69 144]
[70 131]
[71 130]
[73 128]
[74 127]
[75 126]
[76 125]
[83 124]
[84 123]
[85 122]
[86 120]
[87 119]
[91 118]
[92 117]
[94 114]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
