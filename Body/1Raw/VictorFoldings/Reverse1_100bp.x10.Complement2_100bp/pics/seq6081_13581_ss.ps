%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[85.02700806 603.73010254]
[71.13948059 598.02319336]
[57.93725204 590.87243652]
[45.56990433 582.35888672]
[34.17757797 572.57891846]
[23.88935280 561.64349365]
[14.82180119 549.67639160]
[7.07766724 536.81323242]
[0.74469727 523.19976807]
[-4.10535097 508.99029541]
[-7.41752338 494.34579468]
[-9.15429020 479.43218994]
[-9.29597187 464.41845703]
[-7.84096336 449.47473145]
[-4.80575180 434.77032471]
[-0.22472739 420.47186279]
[5.85020256 406.74133301]
[13.35020447 393.73434448]
[22.19029808 381.59823608]
[32.27031708 370.47055054]
[43.47605133 360.47738647]
[55.68052673 351.73193359]
[68.74545288 344.33328247]
[82.52281189 338.36532593]
[96.85647583 333.89562988]
[111.58403778 330.97485352]
[110.24580383 316.03466797]
[108.90756989 301.09448242]
[107.56933594 286.15429688]
[106.23110199 271.21411133]
[104.89286804 256.27392578]
[103.44345093 241.34413147]
[94.42405701 229.49085999]
[100.68367004 214.96063232]
[99.12314606 200.04202271]
[96.62905121 197.54966736]
[95.21824646 193.72544861]
[95.50354767 189.09167480]
[97.84136963 184.42459106]
[96.94855499 169.45117188]
[96.05574036 154.47776794]
[95.16292572 139.50436401]
[94.15866089 124.53802490]
[93.04301453 109.57956696]
[86.40578461 123.03122711]
[75.17686462 132.97665405]
[61.02199173 137.94047546]
[46.04095840 137.18635559]
[32.45611572 130.82617188]
[22.28269005 119.80339813]
[17.02985001 105.75321960]
[17.47682381 90.75988007]
[23.55730629 77.04755402]
[34.36928940 66.65039062]
[48.30888748 61.11074829]
[63.30823517 61.25039291]
[77.14227295 67.04861450]
[87.75881195 77.64527130]
[93.58254242 91.46655273]
[95.58655548 76.60102844]
[84.72737885 62.88616180]
[87.10030365 45.89545441]
[100.75324249 36.07526779]
[102.53570557 21.18155098]
[104.31817627 6.28783274]
[106.10063934 -8.60588455]
[107.88310242 -23.49960136]
[97.23576355 -12.93389511]
[82.58900452 -9.69780540]
[68.48126984 -14.79407024]
[59.28400803 -26.64355850]
[57.84708405 -41.57457352]
[64.61574554 -54.96058273]
[77.49265289 -62.65378189]
[92.48774719 -62.27035141]
[104.95465088 -53.92910004]
[111.03037262 -40.21439743]
[114.78667450 -54.73645782]
[118.54297638 -69.25851440]
[122.29927826 -83.78057861]
[126.05558014 -98.30263519]
[129.81187439 -112.82469177]
[133.45996094 -127.37431335]
[136.99963379 -141.95069885]
[140.53930664 -156.52706909]
[144.07897949 -171.10343933]
[147.61865234 -185.67982483]
[146.60270691 -194.75756836]
[151.32106018 -200.44606018]
[155.07736206 -214.96812439]
[158.83366394 -229.49018860]
[162.58996582 -244.01223755]
[166.34626770 -258.53430176]
[170.10256958 -273.05636597]
[173.85885620 -287.57843018]
[160.09602356 -293.62661743]
[147.48168945 -301.80429077]
[136.34259033 -311.89965820]
[126.96725464 -323.65124512]
[119.59853363 -336.75460815]
[114.42729187 -350.87036133]
[111.58747864 -365.63287354]
[111.15264893 -380.65972900]
[113.13406372 -395.56176758]
[117.48040771 -409.95291138]
[124.07909393 -423.46044922]
[132.75920105 -435.73449707]
[143.29589844 -446.45709229]
[155.41624451 -455.35052490]
[168.80632019 -462.18441772]
[183.11926270 -466.78176880]
[197.98435974 -469.02349854]
[213.01654053 -468.85153198]
[227.82646179 -466.27032471]
[242.03048706 -461.34674072]
[255.26071167 -454.20831299]
[267.17443848 -445.03991699]
[277.46307373 -434.07907104]
[285.86010742 -421.60968018]
[292.14807129 -407.95474243]
[296.16406250 -393.46789551]
[297.80404663 -378.52447510]
[297.02554321 -363.51147461]
[293.84875488 -348.81777954]
[288.35595703 -334.82403564]
[280.68939209 -321.89266968]
[271.04766846 -310.35864258]
[259.68054199 -300.52075195]
[246.88243103 -292.63378906]
[232.98483276 -286.90203857]
[218.34773254 -283.47396851]
[203.35026550 -282.43838501]
[188.38092041 -283.82211304]
[184.62461853 -269.30004883]
[180.86831665 -254.77799988]
[177.11201477 -240.25595093]
[173.35571289 -225.73388672]
[169.59942627 -211.21182251]
[165.84312439 -196.68975830]
[162.19503784 -182.14015198]
[158.65536499 -167.56376648]
[155.11569214 -152.98739624]
[151.57601929 -138.41102600]
[148.03634644 -123.83464050]
[149.51264954 -116.59294128]
[144.33393860 -109.06839752]
[140.57763672 -94.54633331]
[136.82133484 -80.02427673]
[133.06503296 -65.50222015]
[129.30873108 -50.98015594]
[125.55243683 -36.45809937]
[122.77682495 -21.71713638]
[120.99435425 -6.82341862]
[119.21189117 8.07029915]
[117.42942810 22.96401596]
[115.64695740 37.85773468]
[124.94984436 46.77321625]
[127.45654297 59.61060715]
[122.03200531 71.72608185]
[110.45208740 78.60504150]
[108.44807434 93.47057343]
[108.00146484 108.46392059]
[109.11711884 123.42237091]
[112.87612915 131.74749756]
[110.13632965 138.61155701]
[111.02914429 153.58496094]
[111.92195892 168.55836487]
[112.81477356 183.53176880]
[114.04174805 198.48150635]
[115.60227203 213.40010071]
[124.73329163 226.32044983]
[118.36205292 239.78359985]
[122.36727142 247.99311829]
[119.83305359 254.93569946]
[121.17128754 269.87588501]
[122.50952148 284.81607056]
[123.84775543 299.75625610]
[125.18598938 314.69644165]
[126.52422333 329.63662720]
[141.53642273 329.89352417]
[156.43626404 331.74468994]
[171.05491638 335.16915894]
[185.22676086 340.12811279]
[198.79118347 346.56536865]
[211.59452820 354.40798950]
[223.49168396 363.56710815]
[234.34788513 373.93896484]
[244.04008484 385.40600586]
[252.45849609 397.83831787]
[259.50772095 411.09503174]
[265.10787964 425.02593994]
[269.19552612 439.47320557]
[271.72433472 454.27310181]
[272.66564941 469.25796509]
[272.00881958 484.25799561]
[269.76129150 499.10321045]
[265.94851685 513.62542725]
[260.61367798 527.66009521]
[253.81726074 541.04815674]
[245.63626099 553.63800049]
[236.16337585 565.28686523]
[225.50593567 575.86285400]
[213.78469849 585.24603271]
[201.13247681 593.33020020]
[187.69262695 600.02368164]
[173.61743164 605.25061035]
[159.06639099 608.95184326]
[144.20434570 611.08538818]
[129.19972229 611.62707520]
[114.22253418 610.57080078]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 179]
[27 178]
[28 177]
[29 176]
[30 175]
[31 174]
[32 172]
[34 170]
[35 169]
[39 168]
[40 167]
[41 166]
[42 165]
[43 163]
[44 162]
[59 161]
[60 160]
[63 156]
[64 155]
[65 154]
[66 153]
[67 152]
[77 151]
[78 150]
[79 149]
[80 148]
[81 147]
[82 146]
[83 144]
[84 143]
[85 142]
[86 141]
[87 140]
[89 139]
[90 138]
[91 137]
[92 136]
[93 135]
[94 134]
[95 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
