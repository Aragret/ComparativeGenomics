%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[55.85518646 703.19470215]
[48.74591446 716.44982910]
[39.38393021 728.22241211]
[28.07018852 738.13397217]
[15.16837597 745.86590576]
[1.09323335 751.16967773]
[-13.70278168 753.87481689]
[-28.74403763 753.89434814]
[-43.54702377 751.22760010]
[-57.63587952 745.96032715]
[-70.55770874 738.26190186]
[-81.89713287 728.37976074]
[-91.28962708 716.63153076]
[-98.43327332 703.39489746]
[-103.09842682 689.09539795]
[-105.13511658 674.19262695]
[-104.47788239 659.16571045]
[-101.14784241 644.49774170]
[-95.25204468 630.66009521]
[-86.98001862 618.09771729]
[-76.59767914 607.21441650]
[-64.43876648 598.35998535]
[-50.89414597 591.81915283]
[-36.39921570 587.80206299]
[-21.41993332 586.43792725]
[-6.43781662 587.77056885]
[-2.46572065 573.30609131]
[1.50637567 558.84155273]
[-9.05726910 548.34033203]
[-12.97232914 533.86523438]
[-9.09069538 519.27758789]
[1.64193833 508.52087402]
[16.41407776 504.55462646]
[20.38617516 490.09011841]
[24.35827065 475.62557983]
[28.33036613 461.16107178]
[32.30246353 446.69653320]
[36.27455902 432.23202515]
[40.24665451 417.76748657]
[26.11772537 422.80468750]
[13.29040241 415.02908325]
[11.22051239 400.17260742]
[21.43390083 389.18682861]
[36.40163803 390.17013550]
[45.08977890 402.39596558]
[50.12669373 388.26693726]
[55.16361237 374.13790894]
[60.20052719 360.00888062]
[65.23744202 345.87985229]
[70.27436066 331.75082397]
[75.31127930 317.62179565]
[80.34819031 303.49276733]
[83.23346710 288.77288818]
[83.90325165 273.78784180]
[84.57303619 258.80279541]
[85.24282074 243.81776428]
[75.03330994 233.03344727]
[75.49909973 217.82695007]
[86.87990570 207.19139099]
[87.54969025 192.20635986]
[88.21947479 177.22131348]
[88.88925934 162.23628235]
[86.04756927 155.41377258]
[89.68222046 147.03361511]
[90.57503510 132.06019592]
[91.46784973 117.08679962]
[81.92896271 106.18010712]
[82.79138947 91.71627808]
[93.55874634 82.02038574]
[94.45156097 67.04698181]
[95.34437561 52.07357407]
[93.26396942 48.26229477]
[92.57397461 44.37791061]
[93.12664032 40.86650467]
[94.64451599 38.08035278]
[96.76229858 36.24374008]
[98.54476929 21.35002327]
[92.50217438 6.72819996]
[101.69705200 -4.98946095]
[95.65446472 -19.61128426]
[104.84933472 -31.32894516]
[106.63179779 -46.22266388]
[108.41426849 -61.11637878]
[110.19673157 -76.01009369]
[104.15414429 -90.63191986]
[113.34901428 -102.34957886]
[115.13148499 -117.24330139]
[116.91394806 -132.13700867]
[118.69641113 -147.03073120]
[120.47888184 -161.92445374]
[122.26134491 -176.81816101]
[111.19918060 -190.36984253]
[113.31887054 -207.39399719]
[126.82408905 -217.41636658]
[128.38461304 -232.33496094]
[129.94512939 -247.25357056]
[131.50566101 -262.17218018]
[117.36416626 -267.41326904]
[104.97082520 -276.00720215]
[95.10469818 -287.41378784]
[88.38597107 -300.91601562]
[85.23699188 -315.66506958]
[85.85571289 -330.73382568]
[90.20323944 -345.17510986]
[98.00627136 -358.08105469]
[108.77431488 -368.64041138]
[121.83048248 -376.18939209]
[136.35404968 -380.25350952]
[151.43203735 -380.57723999]
[166.11665344 -377.14025879]
[179.48480225 -370.15859985]
[190.69615173 -360.07116699]
[199.04594421 -347.51205444]
[204.00930786 -333.27069092]
[205.27424622 -318.24237061]
[202.76123047 -303.37173462]
[196.62823486 -289.59359741]
[187.26078796 -277.77404785]
[175.24774170 -268.65606689]
[161.34423828 -262.81283569]
[146.42425537 -260.61166382]
[144.86373901 -245.69303894]
[143.30322266 -230.77444458]
[141.74269104 -215.85583496]
[151.17727661 -207.07984924]
[153.87483215 -194.28120422]
[148.63128662 -182.08630371]
[137.15505981 -175.03570557]
[135.37260437 -160.14198303]
[133.59013367 -145.24826050]
[131.80766296 -130.35455322]
[130.02519226 -115.46083069]
[128.24273682 -100.56711578]
[134.41281128 -87.01058960]
[125.09044647 -74.22763062]
[123.30798340 -59.33391190]
[121.52552032 -44.44019699]
[119.74304962 -29.54647827]
[125.91313171 -15.98995495]
[116.59076691 -3.20699525]
[122.76084900 10.34952927]
[113.43848419 23.13248825]
[111.65601349 38.02620697]
[110.31777954 52.96639252]
[109.42496490 67.93979645]
[108.53215027 82.91320038]
[118.07103729 93.81989288]
[117.20861053 108.28372192]
[106.44125366 117.97961426]
[105.54843903 132.95301819]
[104.65562439 147.92642212]
[103.87429810 162.90606689]
[103.20451355 177.89109802]
[102.53472900 192.87614441]
[101.86494446 207.86117554]
[112.25151062 219.46966553]
[111.35878754 234.65708923]
[100.22785950 244.48754883]
[99.55807495 259.47259521]
[98.88829041 274.45764160]
[98.21850586 289.44265747]
[105.63954163 276.40701294]
[116.39244843 265.94876099]
[129.62922668 258.89270020]
[144.30593872 255.79531860]
[159.26515198 256.90084839]
[173.32708740 262.12213135]
[185.38278198 271.04739380]
[194.48147583 282.97271729]
[199.90559387 296.95767212]
[201.22738647 311.89932251]
[198.34259033 326.61932373]
[191.47871399 339.95675659]
[181.17709351 350.85980225]
[168.25013733 358.46859741]
[153.71733093 362.18310547]
[138.72477722 361.71032715]
[124.45487213 357.08761597]
[112.03298187 348.67947388]
[102.43875885 337.14904785]
[96.42883301 323.40563965]
[94.47721863 308.52969360]
[89.44030762 322.65872192]
[84.40338898 336.78775024]
[79.36647034 350.91677856]
[74.32955933 365.04580688]
[69.29264069 379.17483521]
[64.25572205 393.30386353]
[59.21880722 407.43289185]
[54.71117783 421.73959351]
[50.73908234 436.20410156]
[46.76698685 450.66864014]
[42.79489136 465.13314819]
[38.82279587 479.59768677]
[34.85070038 494.06219482]
[30.87860298 508.52673340]
[41.55343628 519.48095703]
[45.28733826 534.21032715]
[41.17459106 548.73449707]
[30.41607285 559.18011475]
[15.97089958 562.81365967]
[11.99880314 577.27813721]
[8.02670670 591.74267578]
[21.58825493 598.24841309]
[33.77009964 607.07122803]
[44.18064880 617.92755127]
[52.48524094 630.46844482]
[58.41691971 644.29071045]
[61.78500748 658.95001221]
[62.48123550 673.97515869]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 203]
[27 202]
[28 201]
[33 196]
[34 195]
[35 194]
[36 193]
[37 192]
[38 191]
[39 190]
[45 189]
[46 188]
[47 187]
[48 186]
[49 185]
[50 184]
[51 183]
[52 182]
[53 161]
[54 160]
[55 159]
[56 158]
[59 155]
[60 154]
[61 153]
[62 152]
[64 151]
[65 150]
[66 149]
[69 146]
[70 145]
[71 144]
[76 143]
[77 142]
[79 140]
[81 138]
[82 137]
[83 136]
[84 135]
[86 133]
[87 132]
[88 131]
[89 130]
[90 129]
[91 128]
[94 124]
[95 123]
[96 122]
[97 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
