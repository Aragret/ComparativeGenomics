%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[80.20877838 589.14294434]
[86.76366425 575.58837891]
[95.99378204 563.69305420]
[107.49562836 553.97705078]
[120.76639557 546.86505127]
[116.57938385 532.46124268]
[112.39237213 518.05749512]
[108.20536041 503.65368652]
[104.01834869 489.24990845]
[99.83133698 474.84613037]
[96.34180450 489.43457031]
[87.87802124 501.81863403]
[75.55354309 510.36889648]
[60.98987579 513.96051025]
[46.10311127 512.12084961]
[32.85186386 505.09204102]
[22.97955894 493.79876709]
[17.78507423 479.72689819]
[17.95182800 464.72784424]
[23.45788193 450.77493286]
[33.57882309 439.70394897]
[46.98306274 432.97146606]
[61.90704727 431.46325684]
[76.38726807 435.37774658]
[88.51860046 444.19992065]
[96.70587921 456.77127075]
[95.81306458 441.79788208]
[94.92024994 426.82446289]
[94.02743530 411.85104370]
[85.54631042 399.60687256]
[92.44849396 385.37063599]
[91.55567169 370.39724731]
[90.66285706 355.42382812]
[89.77004242 340.45043945]
[81.28891754 328.20623779]
[88.19110107 313.97000122]
[86.18639374 312.01062012]
[84.83703613 309.13903809]
[84.49435425 305.60098267]
[85.41432953 301.76455688]
[87.71790314 298.08386230]
[87.71790314 283.08386230]
[87.71790314 268.08386230]
[87.71790314 253.08384705]
[75.72456360 249.27384949]
[65.27031708 242.23712158]
[57.20327759 232.53242493]
[52.18132401 220.93542480]
[50.61840820 208.37675476]
[52.65046692 195.86726379]
[58.12365723 184.41674805]
[66.60597229 174.95233154]
[77.42130280 168.24348450]
[89.70333099 164.83941650]
[90.37311554 149.85437012]
[91.04290009 134.86933899]
[91.71268463 119.88430023]
[92.38246918 104.89926147]
[90.20961761 101.71318054]
[89.45169067 97.58481598]
[90.49803162 93.16755676]
[93.43158722 89.26446533]
[86.95632935 74.82903290]
[95.79824829 62.84280396]
[97.13648224 47.90261841]
[98.47471619 32.96243286]
[99.81295013 18.02224731]
[87.36126709 9.13952446]
[81.06909943 -4.69179773]
[82.53514862 -19.71568108]
[91.26601410 -31.90698624]
[104.83548737 -38.04986954]
[106.17372131 -52.99005127]
[106.84350586 -67.97509003]
[106.84350586 -82.97509003]
[106.84350586 -97.97509003]
[106.84350586 -112.97509003]
[106.84350586 -127.97509003]
[97.99414825 -115.86357117]
[84.31488037 -109.70909119]
[69.38142395 -111.12042236]
[57.09735107 -119.72864532]
[50.67368317 -133.28358459]
[51.78955841 -148.24203491]
[60.15328598 -160.69386292]
[73.57861328 -167.38420105]
[88.55618286 -166.56422424]
[101.17089844 -158.44825745]
[108.12510681 -145.15866089]
[110.35022736 -159.99270630]
[112.57534790 -174.82675171]
[114.80046082 -189.66079712]
[117.02558136 -204.49484253]
[118.91886902 -219.37487793]
[120.47939301 -234.29347229]
[122.03991699 -249.21208191]
[107.81502533 -254.18693542]
[95.12117004 -262.30868530]
[84.64292145 -273.13934326]
[76.94535828 -286.09481812]
[72.44358826 -300.47640991]
[71.38040161 -315.50860596]
[73.81312561 -330.38067627]
[79.61056519 -344.29061890]
[88.46008301 -356.48828125]
[99.88442230 -366.31582642]
[113.26748657 -373.24334717]
[127.88755035 -376.89715576]
[142.95616150 -377.08029175]
[157.66070557 -373.78283691]
[171.20817566 -367.18258667]
[182.86795044 -357.63555908]
[192.01127625 -345.65655518]
[198.14503479 -331.89160156]
[200.93846130 -317.08303833]
[200.24087524 -302.02947998]
[196.08993530 -287.54269409]
[188.70947266 -274.40399170]
[178.49752808 -263.32189941]
[166.00479126 -254.89408875]
[151.90499878 -249.57501221]
[136.95852661 -247.65156555]
[135.39799500 -232.73295593]
[133.83747864 -217.81434631]
[135.76181030 -214.85981750]
[136.35069275 -210.82641602]
[135.11264038 -206.35198975]
[131.85961914 -202.26971436]
[129.63450623 -187.43566895]
[127.40938568 -172.60163879]
[125.18427277 -157.76759338]
[122.95915222 -142.93354797]
[121.84350586 -127.97509003]
[121.84350586 -112.97509003]
[121.84350586 -97.97509003]
[121.84350586 -82.97509003]
[121.84350586 -67.97509003]
[133.18829346 -77.78813171]
[148.15846252 -76.84259796]
[158.17842102 -65.68013763]
[157.50827026 -50.69511795]
[146.53192139 -40.47163010]
[131.53710938 -40.86616135]
[121.11390686 -51.65181732]
[119.77567291 -36.71163177]
[132.03742981 -28.25497818]
[138.46266174 -14.70609665]
[137.23533630 0.33916947]
[128.58523560 12.83207130]
[114.75313568 19.36048126]
[113.41490173 34.30066681]
[112.07666779 49.24085236]
[110.73843384 64.18103790]
[117.30941010 77.54784393]
[108.37177277 90.60269928]
[107.36750793 105.56904602]
[106.69772339 120.55408478]
[106.02793884 135.53912354]
[105.35815430 150.52415466]
[104.68836975 165.50920105]
[120.77635193 172.58760071]
[132.88796997 185.27607727]
[139.18533325 201.60993958]
[138.72793579 219.07446289]
[131.61300659 234.99192810]
[118.95645142 246.93222046]
[102.71790314 253.08384705]
[102.71790314 268.08386230]
[102.71790314 283.08386230]
[102.71790314 298.08386230]
[103.16450500 313.07720947]
[111.70948792 326.39236450]
[104.74344635 339.55761719]
[105.63626099 354.53100586]
[106.52908325 369.50442505]
[107.42189789 384.47781372]
[115.96688080 397.79299927]
[109.00083923 410.95825195]
[109.89365387 425.93164062]
[110.78646851 440.90505981]
[111.67928314 455.87844849]
[114.23511505 470.65911865]
[118.42212677 485.06289673]
[122.60913849 499.46667480]
[126.79615021 513.87048340]
[130.98316956 528.27423096]
[135.17018127 542.67803955]
[150.18551636 541.56756592]
[165.10356140 543.60363770]
[179.27215576 548.69720459]
[192.07191467 556.62567139]
[202.94326782 567.04235840]
[211.41098022 579.49188232]
[217.10488892 593.43011475]
[219.77606201 608.24761963]
[219.30773926 623.29669189]
[215.72039795 637.91943359]
[209.17083740 651.47656250]
[199.94540405 663.37554932]
[188.44738770 673.09606934]
[175.17941284 680.21331787]
[160.72152710 684.41601562]
[145.70574951 685.52056885]
[130.78849792 683.47863770]
[116.62191010 678.37945557]
[103.82527924 670.44598389]
[92.95802307 660.02508545]
[84.49520111 647.57214355]
[78.80677795 633.63171387]
[76.14143372 618.81317139]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 187]
[6 186]
[7 185]
[8 184]
[9 183]
[10 182]
[26 181]
[27 180]
[28 179]
[29 178]
[31 176]
[32 175]
[33 174]
[34 173]
[36 171]
[41 170]
[42 169]
[43 168]
[44 167]
[54 160]
[55 159]
[56 158]
[57 157]
[58 156]
[62 155]
[64 153]
[65 152]
[66 151]
[67 150]
[72 145]
[73 144]
[74 137]
[75 136]
[76 135]
[77 134]
[78 133]
[89 132]
[90 131]
[91 130]
[92 129]
[93 128]
[94 124]
[95 123]
[96 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
