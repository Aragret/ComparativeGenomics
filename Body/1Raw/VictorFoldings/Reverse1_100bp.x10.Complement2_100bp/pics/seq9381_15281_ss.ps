%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[112.05877686 529.00231934]
[100.87716675 539.07983398]
[87.89567566 546.69995117]
[73.64588928 551.55059814]
[58.71133804 553.43310547]
[43.70356750 552.27044678]
[29.23714447 548.11022949]
[15.90445805 541.12280273]
[4.25147343 531.59423828]
[-5.24462748 519.91485596]
[-12.19498444 506.56277466]
[-16.31498528 492.08483887]
[-17.43591881 477.07391357]
[-15.51188183 462.14465332]
[-10.62166500 447.90838623]
[-2.96551728 434.94815063]
[7.14304543 423.79458618]
[19.29008484 414.90444946]
[32.97818756 408.64181519]
[47.64683151 405.26309204]
[62.69534683 404.90664673]
[65.36114502 390.14544678]
[68.02693939 375.38421631]
[70.69273376 360.62301636]
[73.35852814 345.86178589]
[75.25182343 330.98175049]
[68.48255920 317.71426392]
[77.22483826 304.52777100]
[78.34049225 289.56933594]
[79.45613861 274.61087036]
[80.57178497 259.65243530]
[81.68743896 244.69396973]
[82.80308533 229.73551941]
[83.91873169 214.77706909]
[77.14947510 201.50956726]
[85.89175415 188.32308960]
[87.00740051 173.36463928]
[88.12305450 158.40618896]
[74.47176361 153.85771179]
[62.30837250 146.17018127]
[52.34181595 135.79164124]
[45.15298843 123.32701874]
[41.16088486 109.50278473]
[40.59818268 95.12469482]
[43.49768066 81.03075409]
[49.69038391 68.04241943]
[58.81534958 56.91672134]
[70.34073639 48.30210114]
[83.59480286 42.70066452]
[97.80503082 40.43888474]
[99.14326477 25.49869919]
[100.48149872 10.55851364]
[98.05077362 4.41008854]
[98.95436859 -1.20066381]
[102.08848572 -4.80432224]
[103.87095642 -19.69804001]
[105.65341949 -34.59175873]
[107.43588257 -49.48547363]
[109.21835327 -64.37918854]
[103.17576599 -79.00101471]
[112.37063599 -90.71867371]
[114.15309906 -105.61239624]
[115.93556976 -120.50611115]
[117.71803284 -135.39982605]
[108.79875183 -123.33971405]
[96.16428375 -115.25452423]
[81.47692108 -112.20800781]
[66.66902924 -114.60098267]
[53.68884277 -122.11861420]
[44.24413300 -133.77183533]
[39.57750702 -148.02745056]
[40.30294800 -163.00990295]
[46.32500839 -176.74797058]
[56.85137939 -187.43420410]
[70.49713898 -193.66262817]
[85.46694946 -194.61378479]
[99.79128265 -190.16255188]
[111.58551788 -180.89453125]
[119.29792023 -168.02912903]
[121.91378021 -153.25660706]
[126.95069885 -167.38563538]
[131.98760986 -181.51466370]
[137.02453613 -195.64369202]
[123.40234375 -201.94854736]
[110.40993500 -209.46603394]
[98.15496063 -218.13383484]
[86.73898315 -227.88015747]
[76.25658417 -238.62420654]
[66.79463959 -250.27696228]
[58.43155289 -262.74188232]
[51.23662186 -275.91564941]
[45.26946640 -289.68911743]
[40.57953644 -303.94812012]
[37.20569611 -318.57455444]
[35.17589569 -333.44720459]
[34.50696182 -348.44277954]
[35.20443344 -363.43707275]
[37.26253510 -378.30581665]
[40.66421127 -392.92581177]
[45.38127136 -407.17587280]
[51.37462616 -420.93795776]
[58.59461975 -434.09799194]
[66.98141479 -446.54696655]
[76.46552277 -458.18170166]
[86.96834564 -468.90579224]
[98.40285492 -478.63037109]
[110.67430115 -487.27484131]
[123.68099213 -494.76757812]
[137.31515503 -501.04647827]
[151.46380615 -506.05957031]
[166.00970459 -509.76525879]
[180.83232117 -512.13281250]
[195.80880737 -513.14270020]
[210.81509399 -512.78649902]
[225.72680664 -511.06716919]
[240.42037964 -507.99893188]
[254.77406311 -503.60723877]
[268.66891479 -497.92849731]
[281.98980713 -491.00973511]
[294.62634277 -482.90829468]
[306.47378540 -473.69128418]
[317.43402100 -463.43511963]
[327.41616821 -452.22479248]
[336.33755493 -440.15316772]
[344.12420654 -427.32028198]
[350.71166992 -413.83245850]
[356.04528809 -399.80151367]
[360.08090210 -385.34368896]
[362.78503418 -370.57876587]
[364.13534546 -355.62911987]
[364.12057495 -340.61862183]
[362.74087524 -325.67166138]
[360.00769043 -310.91207886]
[355.94363403 -296.46221924]
[350.58242798 -282.44177246]
[343.96847534 -268.96694946]
[336.15658569 -256.14941406]
[327.21148682 -244.09533691]
[317.20727539 -232.90466309]
[306.22689819 -222.67007446]
[294.36135864 -213.47640991]
[281.70889282 -205.39984131]
[268.37445068 -198.50727844]
[254.46844482 -192.85588074]
[240.10614014 -188.49243164]
[225.40655518 -185.45310974]
[210.49150085 -183.76310730]
[195.48454285 -183.43641663]
[180.51007080 -184.47573853]
[165.69213867 -186.87248230]
[151.15356445 -190.60676575]
[146.11663818 -176.47773743]
[141.07972717 -162.34870911]
[136.04281616 -148.21968079]
[132.61175537 -133.61735535]
[130.82928467 -118.72364044]
[129.04681396 -103.82992554]
[127.26435089 -88.93621063]
[133.43443298 -75.37968445]
[124.11206818 -62.59672546]
[122.32960510 -47.70300674]
[120.54713440 -32.80929184]
[118.76467133 -17.91557312]
[116.98220825 -3.02185655]
[115.42168427 11.89674854]
[114.08345032 26.83693314]
[112.74521637 41.77711868]
[127.35398865 47.04621124]
[140.10560608 55.91049576]
[150.13433838 67.76815033]
[156.75930786 81.81413269]
[159.53070068 97.09480286]
[158.26037598 112.57271576]
[153.03457642 127.19702911]
[144.20809937 139.97485352]
[132.38018799 150.03866577]
[118.35389709 156.70518494]
[103.08150482 159.52183533]
[101.96585846 174.48028564]
[100.85020447 189.43873596]
[107.53966522 203.77616882]
[98.87718964 215.89271545]
[97.76153564 230.85116577]
[96.64588928 245.80961609]
[95.53024292 260.76806641]
[94.41458893 275.72653198]
[93.29894257 290.68496704]
[92.18329620 305.64343262]
[98.87275696 319.98086548]
[90.21027374 332.09741211]
[101.51890564 322.24270630]
[116.51342010 321.83691406]
[128.33851624 331.06552124]
[131.58792114 345.70932007]
[124.77606201 359.07339478]
[111.01721954 365.04785156]
[96.60174561 360.90127563]
[88.11974335 348.52758789]
[85.45394897 363.28878784]
[82.78815460 378.05001831]
[80.12236023 392.81121826]
[77.45656586 407.57244873]
[91.42980957 413.17004395]
[103.99004364 421.46615601]
[114.62293243 432.12106323]
[122.89305878 444.69839478]
[128.46177673 458.68319702]
[131.10104370 473.50274658]
[130.70277405 488.55023193]
[127.28330231 503.20941162]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 202]
[22 201]
[23 200]
[24 199]
[25 198]
[26 190]
[28 188]
[29 187]
[30 186]
[31 185]
[32 184]
[33 183]
[34 182]
[36 180]
[37 179]
[38 178]
[50 167]
[51 166]
[52 165]
[55 164]
[56 163]
[57 162]
[58 161]
[59 160]
[61 158]
[62 157]
[63 156]
[64 155]
[80 154]
[81 153]
[82 152]
[83 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
