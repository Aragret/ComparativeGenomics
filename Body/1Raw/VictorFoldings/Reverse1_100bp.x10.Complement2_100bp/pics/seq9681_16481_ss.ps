%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[82.70885468 550.20117188]
[71.67192841 540.01464844]
[61.97050858 528.54895020]
[53.75165176 515.97796631]
[47.13996506 502.49221802]
[42.23567200 488.29617310]
[39.11312485 473.60504150]
[37.81965637 458.64154053]
[38.37488174 443.63247681]
[40.77038193 428.80545044]
[44.96983719 414.38516235]
[50.90958786 400.59027100]
[58.49958801 387.62991333]
[67.62477875 375.70050049]
[78.14682007 364.98294067]
[89.90620422 355.63967896]
[102.72466278 347.81234741]
[116.40785980 341.61965942]
[130.74838257 337.15542603]
[128.08258057 322.39422607]
[125.41678619 307.63299561]
[122.75099182 292.87179565]
[120.08519745 278.11056519]
[115.80300140 272.08688354]
[117.49131012 263.10983276]
[115.04557800 248.31057739]
[105.39775085 241.01358032]
[103.23905945 228.70408630]
[110.26395416 217.88681030]
[108.03884125 203.05276489]
[98.50072479 195.61294556]
[96.52554321 183.27265930]
[103.71071625 172.56117249]
[101.70669556 157.69564819]
[99.48158264 142.86160278]
[97.03585052 128.06233215]
[94.59012604 113.26305389]
[85.86773682 102.33549500]
[90.61060333 89.18267059]
[78.59942627 75.22512054]
[85.41459656 59.05353165]
[82.74880219 44.29231644]
[80.08300781 29.53109741]
[77.41721344 14.76988029]
[74.75141907 0.00866284]
[72.08562469 -14.75255394]
[68.11352539 -29.21707916]
[62.86680603 -43.26955032]
[57.62008667 -57.32202148]
[52.37337112 -71.37448883]
[47.12665176 -85.42696381]
[41.87993240 -99.47943115]
[27.45255280 -97.64263916]
[12.98637104 -99.06889343]
[-0.79027879 -103.68300629]
[-13.18453407 -111.24939728]
[-23.57384300 -121.38407898]
[-31.43724060 -133.57417297]
[-36.38146210 -147.20385742]
[-38.16062546 -161.58544922]
[-36.68843460 -175.99414062]
[-32.04238129 -189.70451355]
[-24.45965958 -202.02705383]
[-14.32507038 -212.34281921]
[-2.15147877 -220.13458252]
[-7.18839502 -234.26361084]
[-12.22531128 -248.39263916]
[-24.14736748 -258.79336548]
[-21.13307953 -273.37976074]
[-26.16999435 -287.50881958]
[-31.20691109 -301.63784790]
[-36.24382782 -315.76687622]
[-50.96036530 -312.73870850]
[-65.95512390 -311.78826904]
[-80.93622589 -312.93399048]
[-95.61206055 -316.15362549]
[-109.69695282 -321.38449097]
[-122.91674805 -328.52471924]
[-135.01411438 -337.43539429]
[-145.75357056 -347.94302368]
[-154.92607117 -359.84307861]
[-162.35305786 -372.90393066]
[-167.88998413 -386.87133789]
[-171.42906189 -401.47344971]
[-172.90141296 -416.42596436]
[-172.27835083 -431.43789673]
[-169.57202148 -446.21701050]
[-164.83511353 -460.47561646]
[-158.15982056 -473.93615723]
[-149.67607117 -486.33663940]
[-139.54901123 -497.43569946]
[-127.97577667 -507.01727295]
[-115.18163300 -514.89483643]
[-101.41562653 -520.91503906]
[-86.94571686 -524.96075439]
[-72.05355835 -526.95318604]
[-57.02903748 -526.85357666]
[-42.16461182 -524.66387939]
[-27.74961662 -520.42663574]
[-14.06464767 -514.22436523]
[-1.37608624 -506.17785645]
[10.06908131 -496.44369507]
[20.04807091 -485.21133423]
[28.36664009 -472.69943237]
[34.86286163 -459.15155029]
[39.41028976 -444.83139038]
[41.92040634 -430.01770020]
[42.34434891 -414.99884033]
[40.67386627 -400.06713867]
[36.94147491 -385.51324463]
[31.21982765 -371.62048340]
[23.62029648 -358.65927124]
[14.29081059 -346.88186646]
[3.41296911 -336.51757812]
[-8.80148602 -327.76809692]
[-22.11479759 -320.80377197]
[-17.07788086 -306.67474365]
[-12.04096508 -292.54571533]
[-7.00404930 -278.41668701]
[4.55773401 -269.02658081]
[1.90371823 -253.42955017]
[6.94063473 -239.30052185]
[11.97755051 -225.17149353]
[27.38229179 -226.83293152]
[42.74668121 -224.76593018]
[57.18087006 -219.08598328]
[69.84788513 -210.11796570]
[80.01213837 -198.37754822]
[87.08218384 -184.54153442]
[90.64508820 -169.40885925]
[90.49057007 -153.85446167]
[86.62341309 -138.77864075]
[79.26339722 -125.05504608]
[68.83285522 -113.47996521]
[55.93240356 -104.72615051]
[61.17912292 -90.67368317]
[66.42584229 -76.62120819]
[71.67256165 -62.56874084]
[76.91928101 -48.51626587]
[82.16599274 -34.46379471]
[85.37212372 -49.11714935]
[94.55027771 -60.98144150]
[107.92830658 -67.76586914]
[122.92311096 -68.16046143]
[136.63943481 -62.08902740]
[146.42887878 -50.72386932]
[150.40124512 -36.25941849]
[147.78953552 -21.48853683]
[139.09803772 -9.26324654]
[126.00492096 -1.94406283]
[111.03828430 -0.94420367]
[97.08793640 -6.45672655]
[86.84683990 -17.41835022]
[89.51263428 -2.65713263]
[92.17842865 12.10408497]
[94.84422302 26.86530113]
[97.51001740 41.62651825]
[100.17581940 56.38773727]
[109.93121338 63.54027176]
[112.27294159 75.81626892]
[105.40987396 86.73694611]
[114.13226318 97.66450500]
[109.38939667 110.81732941]
[111.83512878 125.61660004]
[114.28085327 140.41587830]
[118.17381287 145.75968933]
[118.70405579 151.41795349]
[116.57222748 155.69163513]
[118.57624054 170.55715942]
[130.16651917 184.86613464]
[122.87288666 200.82763672]
[125.09799957 215.66168213]
[136.90003967 229.79650879]
[129.84484863 245.86485291]
[132.29057312 260.66412354]
[134.84640503 275.44476318]
[137.51220703 290.20599365]
[140.17800903 304.96719360]
[142.84379578 319.72842407]
[145.50959778 334.48965454]
[160.50573730 333.65582275]
[175.49067688 334.67120361]
[190.23725891 337.52044678]
[204.52191162 342.16027832]
[218.12809753 348.52041626]
[230.84954834 356.50442505]
[242.49339294 365.99130249]
[252.88313293 376.83715820]
[261.86126709 388.87762451]
[269.29165649 401.93017578]
[275.06167603 415.79690552]
[279.08389282 430.26760864]
[281.29727173 445.12295532]
[281.66827393 460.13766479]
[280.19128418 475.08416748]
[276.88870239 489.73590088]
[271.81060791 503.87066650]
[265.03393555 517.27429199]
[256.66143799 529.74346924]
[246.82005310 541.08923340]
[235.65896606 551.13964844]
[223.34738159 559.74218750]
[210.07192993 566.76660156]
[196.03385925 572.10626221]
[181.44599915 575.68035889]
[166.52949524 577.43463135]
[151.51046753 577.34246826]
[136.61660767 575.40527344]
[122.07369995 571.65252686]
[108.10221863 566.14093018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 180]
[20 179]
[21 178]
[22 177]
[23 176]
[25 175]
[26 174]
[29 172]
[30 171]
[33 169]
[34 168]
[35 165]
[36 164]
[37 163]
[39 161]
[41 158]
[42 157]
[43 156]
[44 155]
[45 154]
[46 153]
[47 140]
[48 139]
[49 138]
[50 137]
[51 136]
[52 135]
[65 123]
[66 122]
[67 121]
[69 119]
[70 118]
[71 117]
[72 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
