%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[52.52529526 749.26330566]
[38.39322662 744.19360352]
[24.86851692 737.67437744]
[12.09935188 729.77716064]
[0.22563750 720.58843994]
[-10.62253189 710.20892334]
[-20.32629585 698.75225830]
[-28.77933884 686.34405518]
[-35.88904190 673.12017822]
[-41.57750320 659.22564697]
[-45.78240585 644.81256104]
[-48.45767212 630.03894043]
[-49.57399368 615.06658936]
[-49.11913681 600.05950928]
[-47.09808350 585.18225098]
[-43.53298187 570.59777832]
[-38.46289444 556.46582031]
[-31.94336700 542.94128418]
[-24.04583168 530.17230225]
[-14.85682106 518.29882812]
[-4.47701359 507.45089722]
[6.97986412 497.74740601]
[19.38828468 489.29464722]
[32.61229324 482.18527222]
[46.50700378 476.49716187]
[60.92016983 472.29260254]
[75.69388580 469.61770630]
[74.57823181 454.65924072]
[73.46258545 439.70077515]
[72.34693909 424.74234009]
[71.23129272 409.78387451]
[70.11563873 394.82543945]
[68.99999237 379.86697388]
[58.35227966 365.91729736]
[66.48549652 349.39663696]
[59.51352310 362.67788696]
[47.52127075 371.68823242]
[32.82426071 374.68786621]
[18.26025200 371.09765625]
[6.64132786 361.61077881]
[0.21092005 348.05902100]
[0.21063982 333.05902100]
[6.64054108 319.50704956]
[18.25911140 310.01974487]
[32.82298660 306.42898560]
[47.52010727 309.42807007]
[59.51269531 318.43795776]
[66.48549652 331.72018433]
[67.82373047 316.77999878]
[69.16196442 301.83981323]
[70.50019836 286.89962769]
[71.83843231 271.95944214]
[73.17666626 257.01925659]
[74.51490021 242.07907104]
[75.85313416 227.13888550]
[77.19136810 212.19869995]
[78.52960205 197.25851440]
[75.99538422 190.31593323]
[80.00060272 182.10641479]
[78.34220123 179.84635925]
[77.47910309 176.79322815]
[77.71788788 173.24661255]
[79.25107574 169.61152649]
[82.12395477 166.35568237]
[84.56967926 151.55641174]
[86.90516663 136.73934937]
[89.13027954 121.90530396]
[91.35540009 107.07125854]
[93.47002411 92.22106171]
[95.47403717 77.35552979]
[96.36685181 62.38212585]
[96.14352417 47.38378906]
[95.92019653 32.38545227]
[95.69686890 17.38711357]
[95.47354126 2.38877702]
[92.21671295 -6.14532375]
[95.36021423 -12.83413506]
[83.68675995 -17.10152817]
[73.90465546 -24.72933578]
[66.94805908 -34.97010040]
[63.47548294 -46.82776260]
[63.80743408 -59.15454483]
[67.89691162 -70.76203156]
[75.33537292 -80.53575897]
[85.39351654 -87.54222870]
[97.09275055 -91.11802673]
[97.76253510 -106.10306549]
[98.43232727 -121.08810425]
[99.10211182 -136.07313538]
[99.77189636 -151.05818176]
[92.65852356 -165.19007874]
[100.95640564 -177.55915833]
[93.84303284 -191.69105530]
[102.14092255 -204.06015015]
[102.81070709 -219.04519653]
[103.48049164 -234.03022766]
[100.73738861 -242.74304199]
[104.27344513 -249.23289490]
[105.16625977 -264.20629883]
[106.05907440 -279.17971802]
[92.37113190 -285.79095459]
[82.25885773 -297.14041138]
[77.26432037 -311.49740601]
[78.14913177 -326.67257690]
[84.77837372 -340.35180664]
[96.14113617 -350.44912720]
[110.50467682 -355.42477417]
[125.67866516 -354.52001953]
[139.34916687 -347.87277222]
[149.43154907 -336.49673462]
[154.38829041 -322.12667847]
[153.46356201 -306.95388794]
[146.79835510 -293.29214478]
[135.40905762 -283.22473145]
[121.03247833 -278.28689575]
[120.13966370 -263.31347656]
[119.24684906 -248.34008789]
[118.46553040 -233.36044312]
[117.79574585 -218.37541199]
[117.12596130 -203.39036560]
[124.28723907 -190.33030701]
[115.94144440 -176.88937378]
[123.10272217 -163.82931519]
[114.75693512 -150.38839722]
[114.08715057 -135.40335083]
[113.41736603 -120.41831970]
[112.74757385 -105.43328094]
[112.07778931 -90.44824219]
[127.96231842 -82.65094757]
[138.86705017 -68.64804840]
[142.55726624 -51.23367310]
[138.24378967 -33.90849686]
[126.75107574 -20.17602730]
[110.36021423 -12.83413506]
[110.47187805 2.16544914]
[110.69520569 17.16378593]
[110.91853333 32.16212463]
[111.14186096 47.16046143]
[111.36518860 62.15879822]
[120.03324127 49.91686630]
[133.61936951 43.55940628]
[148.57217407 44.74824524]
[160.98304749 53.17262268]
[167.60781860 66.63042450]
[166.71478271 81.60382080]
[158.53736877 94.17878723]
[145.21313477 101.06827545]
[130.22502136 100.47137451]
[117.49086761 92.54412842]
[110.33956909 79.35954285]
[108.33554840 94.22507477]
[110.46520996 101.99920654]
[106.18944550 109.29637146]
[103.96432495 124.13041687]
[101.73921204 138.96446228]
[103.56098175 147.91537476]
[99.36894989 154.00213623]
[96.92322540 168.80140686]
[94.91920471 183.66694641]
[93.46978760 198.59675598]
[92.13155365 213.53692627]
[90.79331970 228.47711182]
[89.45508575 243.41729736]
[88.11685181 258.35748291]
[86.77861786 273.29766846]
[85.44038391 288.23785400]
[84.10214996 303.17803955]
[82.76391602 318.11822510]
[81.42568207 333.05841064]
[81.42568207 348.05841064]
[90.80482483 356.91247559]
[91.61186981 369.38372803]
[83.95844269 378.75131226]
[85.07409668 393.70977783]
[86.18974304 408.66824341]
[87.30538940 423.62667847]
[88.42104340 438.58514404]
[89.53668976 453.54357910]
[90.65233612 468.50204468]
[105.65939331 468.95581055]
[120.53681183 470.97576904]
[135.12156677 474.53982544]
[149.25389099 479.60888672]
[162.77891541 486.12741089]
[175.54846191 494.02401733]
[187.42262268 503.21215820]
[198.27130127 513.59118652]
[207.97561646 525.04736328]
[216.42926025 537.45513916]
[223.53961182 550.67864990]
[229.22874451 564.57293701]
[233.43434143 578.98577881]
[236.11033630 593.75933838]
[237.22738647 608.73162842]
[236.77325439 623.73864746]
[234.75292969 638.61602783]
[231.18853760 653.20074463]
[226.11912537 667.33288574]
[219.60026550 680.85778809]
[211.70333862 693.62713623]
[202.51490784 705.50109863]
[192.13563538 716.34948730]
[180.67922974 726.05352783]
[168.27120972 734.50689697]
[155.04754639 741.61688232]
[141.15312195 747.30572510]
[126.74015045 751.51092529]
[111.96656799 754.18658447]
[96.99423981 755.30328369]
[81.98719788 754.84875488]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 179]
[28 178]
[29 177]
[30 176]
[31 175]
[32 174]
[33 173]
[35 170]
[48 169]
[49 168]
[50 167]
[51 166]
[52 165]
[53 164]
[54 163]
[55 162]
[56 161]
[57 160]
[59 159]
[64 158]
[65 157]
[66 155]
[67 154]
[68 153]
[69 151]
[70 150]
[71 139]
[72 138]
[73 137]
[74 136]
[75 135]
[77 134]
[86 128]
[87 127]
[88 126]
[89 125]
[90 124]
[92 122]
[94 120]
[95 119]
[96 118]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
