%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[145.66064453 523.55035400]
[134.43183899 533.61834717]
[121.05162048 540.57684326]
[106.36107635 543.98840332]
[91.28366089 543.63854980]
[76.76715851 539.54925537]
[63.72409058 531.97766113]
[52.97435379 521.39965820]
[45.19368362 508.48022461]
[40.87118149 494.03146362]
[40.27856064 478.96163940]
[43.45307922 464.21804810]
[50.19518280 450.72750854]
[60.08105087 439.33804321]
[72.48925781 430.76556396]
[86.63980865 425.54898071]
[101.64318848 424.01620483]
[103.86830902 409.18215942]
[106.09342194 394.34811401]
[108.31854248 379.51406860]
[110.54365540 364.68002319]
[111.10186768 349.69042969]
[109.98622131 334.73196411]
[108.87056732 319.77349854]
[97.45188904 310.27880859]
[96.10737610 295.12469482]
[106.14370728 283.21212769]
[97.48122406 271.09558105]
[104.17068481 256.75814819]
[103.05503845 241.79969788]
[101.93939209 226.84124756]
[100.82373810 211.88278198]
[99.70809174 196.92433167]
[98.59244537 181.96588135]
[97.47679138 167.00743103]
[96.36114502 152.04898071]
[87.69866180 139.93243408]
[94.38812256 125.59500122]
[93.27247620 110.63655090]
[91.82305908 95.70674133]
[90.04058838 80.81302643]
[88.25812531 65.91931152]
[86.25411224 51.05377960]
[84.02899170 36.21973801]
[81.80387878 21.38569260]
[79.57875824 6.55164909]
[64.59760284 4.81956434]
[50.58619308 -0.72713405]
[38.49743652 -9.70476246]
[29.15179443 -21.49652481]
[23.18162537 -35.29488754]
[20.98838234 -50.15687180]
[22.71562958 -65.06851959]
[28.23966026 -79.01403809]
[37.17833328 -91.04502106]
[48.91751480 -100.34494019]
[62.65324783 -106.28455353]
[60.42813110 -121.11859894]
[58.20301437 -135.95265198]
[55.97789764 -150.78668213]
[53.75278091 -165.62072754]
[43.86291122 -169.62251282]
[36.58191299 -177.30978394]
[33.17489243 -187.24938965]
[34.19320679 -197.62609863]
[39.38641357 -206.57406616]
[47.75946045 -212.51232910]
[46.19893646 -227.43093872]
[37.06792068 -240.35127258]
[43.43915558 -253.81443787]
[41.87863541 -268.73303223]
[40.31811142 -283.65164185]
[30.80818176 -292.36508179]
[29.81554794 -304.82293701]
[37.32865524 -314.30343628]
[35.99042130 -329.24362183]
[20.97867012 -329.64840698]
[6.11541843 -331.79321289]
[-8.39832497 -335.64907837]
[-22.36627960 -341.16387939]
[-35.59954071 -348.26296997]
[-47.91915131 -356.85040283]
[-59.15849304 -366.80999756]
[-69.16557312 -378.00708008]
[-77.80505371 -390.29025269]
[-84.96010590 -403.49334717]
[-90.53395081 -417.43783569]
[-94.45121002 -431.93511963]
[-96.65892029 -446.78915405]
[-97.12721252 -461.79907227]
[-95.84976196 -476.76184082]
[-92.84384155 -491.47512817]
[-88.15009308 -505.73995972]
[-81.83200836 -519.36340332]
[-73.97502899 -532.16125488]
[-64.68540955 -543.96038818]
[-54.08877945 -554.60119629]
[-42.32844543 -563.93994141]
[-29.56345940 -571.85015869]
[-15.96644783 -578.22491455]
[-1.72129607 -582.97802734]
[12.97934628 -586.04522705]
[27.93667030 -587.38500977]
[42.94839478 -586.97924805]
[57.81150436 -584.83343506]
[72.32498932 -580.97656250]
[86.29257965 -575.46087646]
[99.52536774 -568.36090088]
[111.84439850 -559.77264404]
[123.08307648 -549.81225586]
[133.08941650 -538.61450195]
[141.72807312 -526.33081055]
[148.88223267 -513.12719727]
[154.45515442 -499.18234253]
[158.37144470 -484.68478394]
[160.57817078 -469.83059692]
[161.04545593 -454.82067871]
[159.76701355 -439.85797119]
[156.76010132 -425.14489746]
[152.06541443 -410.88037109]
[145.74641418 -397.25735474]
[137.88858032 -384.46005249]
[128.59817505 -372.66152954]
[118.00083160 -362.02139282]
[106.23987579 -352.68347168]
[93.47435760 -344.77410889]
[79.87692261 -338.40023804]
[65.63145447 -333.64807129]
[50.93060684 -330.58184814]
[52.26884079 -315.64166260]
[63.12306595 -301.85208130]
[55.23671722 -285.21215820]
[56.79723740 -270.29354858]
[58.35776138 -255.37495422]
[67.37715912 -243.52169800]
[61.11754227 -228.99145508]
[62.67806244 -214.07286072]
[78.67111969 -202.94917297]
[81.36879730 -183.34748840]
[68.58682251 -167.84585571]
[70.81194305 -153.01181030]
[73.03705597 -138.17776489]
[75.26217651 -123.34371948]
[77.48728943 -108.50967407]
[92.36119843 -106.86151886]
[106.31233215 -101.41516876]
[118.38750458 -92.53627777]
[127.76003265 -80.82525635]
[133.78633118 -67.07664490]
[136.05012512 -52.22524261]
[134.39114380 -37.28250122]
[128.91650391 -23.26768684]
[119.99380493 -11.13832569]
[108.22644806 -1.72479308]
[94.41280365 4.32653189]
[96.63792419 19.16057587]
[98.86303711 33.99461746]
[101.08815765 48.82866287]
[104.32817841 52.33740997]
[105.39842224 57.91876984]
[103.15184021 64.13684082]
[104.93431091 79.03056335]
[106.71677399 93.92427826]
[109.38003540 96.71343994]
[110.80094910 100.66297913]
[110.48883820 105.19173431]
[108.23092651 109.52090454]
[109.34658051 124.47935486]
[118.08885956 137.66583252]
[111.31960297 150.93331909]
[112.43524933 165.89178467]
[113.55089569 180.85023499]
[114.66654205 195.80868530]
[115.78219604 210.76713562]
[116.89784241 225.72558594]
[118.01348877 240.68405151]
[119.12914276 255.64250183]
[127.87142181 268.82897949]
[121.10215759 282.09646606]
[132.79458618 292.38845825]
[133.71292114 307.57434082]
[123.82902527 318.65786743]
[124.94467163 333.61630249]
[126.06032562 348.57476807]
[132.49327087 335.02423096]
[143.33659363 324.65975952]
[157.16369629 318.84500122]
[172.15534973 318.34497070]
[186.33917236 323.22546387]
[197.84902954 332.84436035]
[205.17059326 345.93612671]
[207.34060669 360.77835083]
[204.07354736 375.41821289]
[195.79925537 387.92965698]
[183.60635376 396.66656494]
[169.09904480 400.47943115]
[154.18600464 398.86660767]
[140.82929993 392.04031372]
[130.78622437 380.89865112]
[125.37770081 366.90515137]
[123.15258026 381.73919678]
[120.92746735 396.57324219]
[118.70234680 411.40728760]
[116.47723389 426.24130249]
[130.37059021 432.10861206]
[142.36782837 441.24740601]
[151.71478271 453.08316040]
[157.82391357 466.87188721]
[160.31115723 481.74685669]
[159.02020264 496.77297974]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 204]
[18 203]
[19 202]
[20 201]
[21 200]
[22 184]
[23 183]
[24 182]
[27 179]
[29 177]
[30 176]
[31 175]
[32 174]
[33 173]
[34 172]
[35 171]
[36 170]
[38 168]
[39 167]
[40 163]
[41 162]
[42 161]
[43 158]
[44 157]
[45 156]
[46 155]
[57 144]
[58 143]
[59 142]
[60 141]
[61 140]
[67 137]
[68 136]
[70 134]
[71 133]
[72 132]
[75 130]
[76 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
