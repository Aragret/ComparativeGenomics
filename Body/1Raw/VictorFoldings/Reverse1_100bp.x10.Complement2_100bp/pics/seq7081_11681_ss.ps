%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[45.72977829 583.09875488]
[34.85211563 593.44116211]
[23.11443520 602.79620361]
[10.60607052 611.09259033]
[-2.57777977 618.26721191]
[-16.33677673 624.26550293]
[-30.56620598 629.04174805]
[-45.15776825 632.55969238]
[-60.00041580 634.79241943]
[-74.98117828 635.72308350]
[-89.98604584 635.34448242]
[-104.90081787 633.65960693]
[-119.61198425 630.68121338]
[-134.00758362 626.43194580]
[-147.97804260 620.94415283]
[-161.41705322 614.25970459]
[-174.22232056 606.42932129]
[-186.29640198 597.51269531]
[-197.54739380 587.57769775]
[-207.88966370 576.69989014]
[-217.24452209 564.96209717]
[-225.54074097 552.45361328]
[-232.71519470 539.26965332]
[-238.71327209 525.51055908]
[-243.48934937 511.28106689]
[-247.00704956 496.68945312]
[-249.23960876 481.84680176]
[-250.17002869 466.86599731]
[-249.79124451 451.86114502]
[-248.10612488 436.94641113]
[-245.12750244 422.23529053]
[-240.87805176 407.83975220]
[-235.39010620 393.86935425]
[-228.70542908 380.43041992]
[-220.87489319 367.62527466]
[-211.95811462 355.55133057]
[-202.02293396 344.30047607]
[-191.14498901 333.95834351]
[-179.40704346 324.60366821]
[-166.89843750 316.30761719]
[-153.71438599 309.13336182]
[-139.95523071 303.13546753]
[-125.72566223 298.35958862]
[-111.13400269 294.84210205]
[-96.29129028 292.60974121]
[-81.31050110 291.67953491]
[-66.30564880 292.05853271]
[-51.39092255 293.74383545]
[-36.67984009 296.72268677]
[-22.28436089 300.97232056]
[-8.31404877 306.46047974]
[-1.63385463 293.03009033]
[5.04633999 279.59973145]
[11.72653484 266.16934204]
[18.40672874 252.73896790]
[18.57100677 245.35014343]
[25.28766823 239.15948486]
[32.16707993 225.83004761]
[39.04649353 212.50062561]
[45.92590332 199.17120361]
[52.70589828 185.79092407]
[59.38609314 172.36054993]
[65.76469421 158.78434753]
[71.83853149 145.06907654]
[77.91236115 131.35380554]
[83.98619843 117.63854218]
[90.06003571 103.92327118]
[94.56765747 89.61658478]
[97.34326935 74.87562561]
[100.00906372 60.11440659]
[102.67486572 45.35318756]
[105.34066010 30.59197235]
[107.89649200 15.81131840]
[110.34221649 1.01204741]
[112.78794861 -13.78722382]
[113.90359497 -28.74567604]
[113.68026733 -43.74401474]
[113.45693970 -58.74235153]
[113.23361206 -73.74069214]
[113.01028442 -88.73902893]
[112.78695679 -103.73736572]
[112.56362915 -118.73570251]
[98.72918701 -122.72305298]
[86.59291077 -130.43948364]
[77.13404846 -141.25175476]
[71.11282349 -154.27722168]
[69.00932312 -168.45594788]
[70.98522186 -182.63696289]
[76.87142181 -195.67161560]
[86.18246460 -206.50669861]
[98.15656281 -214.26948547]
[111.81790924 -218.33807373]
[111.81790924 -233.33807373]
[111.81790924 -248.33807373]
[111.81790924 -263.33807373]
[111.81790924 -278.33807373]
[111.81790924 -293.33807373]
[111.81790924 -308.33807373]
[97.76072693 -314.12286377]
[86.99085236 -324.85034180]
[81.15061951 -338.88458252]
[81.13062286 -354.08551025]
[86.93391418 -368.13507080]
[97.67552185 -378.89080811]
[111.71744537 -384.71258545]
[126.91838074 -384.71258545]
[140.96029663 -378.89080811]
[151.70190430 -368.13507080]
[157.50520325 -354.08551025]
[157.48519897 -338.88458252]
[151.64497375 -324.85034180]
[140.87510681 -314.12286377]
[126.81790924 -308.33807373]
[126.81790924 -293.33807373]
[126.81790924 -278.33807373]
[126.81790924 -263.33807373]
[126.81790924 -248.33807373]
[126.81790924 -233.33807373]
[126.81790924 -218.33807373]
[141.76431274 -213.65498352]
[154.54783630 -204.57107544]
[163.91012573 -191.96582031]
[168.92510986 -177.06594849]
[169.09045410 -161.32618713]
[164.37797546 -146.28715515]
[155.23750305 -133.42463684]
[142.55403137 -124.00466919]
[127.56196594 -118.95903015]
[127.78529358 -103.96069336]
[128.00862122 -88.96235657]
[128.23194885 -73.96401978]
[128.45527649 -58.96567917]
[128.67860413 -43.96734238]
[128.90193176 -28.96900368]
[136.84240723 -41.69491577]
[149.47160339 -49.78833771]
[164.35101318 -51.68656158]
[178.60765076 -47.02306747]
[189.48878479 -36.69830322]
[194.89346313 -22.70582199]
[193.77809143 -7.74734688]
[186.35804749 5.28887081]
[174.06602478 13.88574219]
[159.27542114 16.38334656]
[144.84207153 12.29943562]
[133.55282593 2.42254853]
[127.58721924 -11.34149551]
[125.14148712 3.45777488]
[122.69576263 18.25704575]
[124.70659637 25.36889076]
[120.10187531 33.25776672]
[117.43608093 48.01898575]
[114.77028656 62.78020096]
[112.10449219 77.54141998]
[114.00921631 84.68241119]
[109.28755188 92.50186157]
[119.07912445 81.13853455]
[132.27993774 74.01544952]
[147.15321350 72.06976318]
[161.74211121 75.55747223]
[174.12721252 84.01970673]
[182.67903137 96.34310913]
[186.27244568 110.90633392]
[184.43467712 125.79332733]
[177.40750122 139.04545593]
[166.11547852 148.91917419]
[152.04426575 154.11541748]
[137.04518127 153.95053101]
[123.09159088 148.44622803]
[112.01934052 138.32667542]
[105.28518677 124.92327118]
[103.77529907 109.99710846]
[97.70146179 123.71237183]
[91.62763214 137.42764282]
[85.55379486 151.14291382]
[79.47996521 164.85816956]
[80.03764343 170.04817200]
[78.68412018 174.48902893]
[76.02478790 177.57821655]
[72.81646729 179.04074097]
[66.13627625 192.47111511]
[65.11640930 201.54843140]
[59.25533295 206.05061340]
[52.37592316 219.38003540]
[45.49650955 232.70947266]
[38.61709595 246.03889465]
[31.83710480 259.41915894]
[25.15690994 272.84954834]
[18.47671509 286.27990723]
[11.79652119 299.71029663]
[5.11632681 313.14068604]
[17.92181778 320.97067261]
[29.99614525 329.88693237]
[41.24741364 339.82165527]
[51.58999252 350.69915771]
[60.94516754 362.43670654]
[69.24173737 374.94494629]
[76.41656494 388.12872314]
[82.41503906 401.88763428]
[87.19150543 416.11697388]
[90.70960999 430.70849609]
[92.94258881 445.55111694]
[93.87343597 460.53186035]
[93.49507141 475.53674316]
[91.81037140 490.45153809]
[88.83216858 505.16275024]
[84.58311462 519.55841064]
[79.09555817 533.52893066]
[72.41125488 546.96801758]
[64.58108521 559.77343750]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 191]
[52 190]
[53 189]
[54 188]
[55 187]
[57 186]
[58 185]
[59 184]
[60 183]
[61 181]
[62 180]
[63 176]
[64 175]
[65 174]
[66 173]
[67 172]
[68 156]
[69 154]
[70 153]
[71 152]
[72 151]
[73 149]
[74 148]
[75 147]
[76 134]
[77 133]
[78 132]
[79 131]
[80 130]
[81 129]
[82 128]
[92 119]
[93 118]
[94 117]
[95 116]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
