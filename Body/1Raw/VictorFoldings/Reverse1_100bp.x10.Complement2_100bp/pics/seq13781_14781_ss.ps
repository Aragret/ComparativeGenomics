%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAAAAUAAAAUUCAAACAACCAAUCCAUCAACUCCAGAUCCCGACAAUCUUCAGGAUCCUUUCACUGUCGCUCCCGACACUCAAAAUCCAUCUCCCCCxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[227.52761841 582.17144775]
[223.79223633 567.62481689]
[221.83753967 552.73400879]
[221.69201660 537.71618652]
[223.35780334 522.79028320]
[226.81062317 508.17398071]
[232.00009155 494.08047485]
[238.85054016 480.71527100]
[247.26208496 468.27328491]
[257.11203003 456.93591309]
[268.25677490 446.86856079]
[280.53378296 438.21795654]
[293.76400757 431.11029053]
[288.30865479 417.13751221]
[282.85327148 403.16470337]
[277.39791870 389.19189453]
[271.94256592 375.21911621]
[265.06317139 361.88967896]
[256.83435059 349.34829712]
[248.60554504 336.80688477]
[240.37673950 324.26547241]
[232.14791870 311.72409058]
[223.91911316 299.18267822]
[215.59716797 286.70288086]
[202.05230713 280.50726318]
[200.71595764 264.74258423]
[192.30133057 252.32510376]
[183.88671875 239.90760803]
[175.47209167 227.49011230]
[167.05747986 215.07261658]
[158.64285278 202.65512085]
[146.82678223 200.06536865]
[139.71479797 189.78901672]
[141.56802368 177.02467346]
[133.33921814 164.48327637]
[125.11040497 151.94186401]
[116.88159943 139.40046692]
[108.65279388 126.85906982]
[100.42398071 114.31766510]
[88.02384186 107.85793304]
[87.03461456 93.91114044]
[84.07114410 108.61548615]
[72.42810822 118.07273865]
[57.42853928 117.95916748]
[45.93003845 108.32669830]
[43.18957138 93.57915497]
[50.46003723 80.45893097]
[64.41748047 74.96440887]
[78.68220520 79.60874176]
[71.96554565 73.41808319]
[71.80126953 66.02925110]
[65.12107849 52.59887695]
[58.44087982 39.16850281]
[58.49968338 54.16838837]
[55.37604523 68.83954620]
[49.21207047 82.51453400]
[40.28817749 94.57124329]
[29.01034546 104.46115875]
[15.89163780 111.73436737]
[1.52887022 116.05997467]
[-13.42454720 117.24121094]
[-28.28833389 115.22431946]
[-42.38628769 110.10106659]
[-55.07704544 102.10452271]
[-65.78325653 91.59848022]
[-74.01787567 79.06089020]
[-79.40626526 65.06213379]
[-81.70329285 50.23905563]
[-80.80447388 35.26601028]
[-76.75067902 20.82416916]
[-69.72634125 7.57054090]
[-60.05101013 -3.89192224]
[-48.16486359 -13.04175568]
[-34.60862732 -19.46270180]
[-19.99903107 -22.86265182]
[-5.00070810 -23.08693123]
[9.70401669 -20.12533379]
[23.44617653 -14.11259556]
[35.60059738 -5.32225418]
[45.61433029 5.84578753]
[53.03354645 18.88743019]
[52.14073181 3.91402435]
[51.24791336 -11.05938148]
[50.35509872 -26.03278732]
[49.46228409 -41.00619125]
[46.94371796 -44.54325104]
[45.79702377 -48.31811905]
[45.92850876 -51.87031937]
[47.10455322 -54.81710434]
[48.98908234 -56.89235687]
[48.98908234 -71.89235687]
[48.98908234 -86.89235687]
[34.30049515 -90.23797607]
[20.72488022 -96.76870728]
[8.94318199 -106.15695953]
[-0.45363441 -117.93183136]
[-6.99422741 -131.50270081]
[-10.35052490 -146.18884277]
[-10.35417461 -161.25363159]
[-7.00499535 -175.94140625]
[-0.47097918 -189.51544189]
[8.92012978 -201.29486084]
[20.69727707 -210.68882751]
[34.26972580 -217.22613525]
[48.95668793 -220.57887268]
[64.02147675 -220.57887268]
[78.70843506 -217.22613525]
[92.28088379 -210.68882751]
[104.05803680 -201.29486084]
[113.44914246 -189.51544189]
[119.98316193 -175.94140625]
[123.33233643 -161.25363159]
[123.32868958 -146.18884277]
[119.97238922 -131.50270081]
[113.43180084 -117.93183136]
[104.03498077 -106.15695953]
[92.25328064 -96.76870728]
[78.67766571 -90.23797607]
[63.98908234 -86.89235687]
[63.98908234 -71.89235687]
[63.98908234 -56.89235687]
[64.43569183 -41.89900970]
[65.32850647 -26.92560387]
[66.22132111 -11.95219707]
[67.11413574 3.02120852]
[68.00695038 17.99461365]
[71.87125397 32.48830795]
[78.55145264 45.91868210]
[85.23164368 59.34906006]
[92.01163483 72.72933197]
[99.57601929 85.68233490]
[111.97615814 92.14206696]
[112.96538544 106.08885956]
[121.19419098 118.63026428]
[129.42300415 131.17166138]
[137.65180969 143.71305847]
[145.88061523 156.25445557]
[154.10942078 168.79586792]
[170.74357605 176.69436646]
[171.06034851 194.24049377]
[179.47497559 206.65798950]
[187.88958740 219.07548523]
[196.30421448 231.49298096]
[204.71882629 243.91047668]
[213.13345337 256.32797241]
[227.28018188 263.41177368]
[228.01466370 278.28826904]
[235.41938782 283.63693237]
[236.46051025 290.95388794]
[244.68933105 303.49526978]
[252.91813660 316.03668213]
[261.14694214 328.57806396]
[269.37576294 341.11947632]
[277.60455322 353.66088867]
[276.88687134 338.67803955]
[281.88510132 324.53527832]
[291.85778809 313.33059692]
[305.32556152 306.72610474]
[320.29052734 305.70153809]
[334.53274536 310.40890503]
[345.93945312 320.14990234]
[352.81854248 333.47952271]
[354.14953613 348.42034912]
[349.73498535 362.75601196]
[340.22976685 374.35995483]
[327.04394531 381.51074219]
[312.13351440 383.14761353]
[297.71038818 379.02774048]
[285.91537476 369.76376343]
[291.37072754 383.73654175]
[296.82608032 397.70935059]
[302.28143311 411.68215942]
[307.73678589 425.65493774]
[322.28298950 421.91793823]
[337.17361450 419.96157837]
[352.19143677 419.81436157]
[367.11752319 421.47848511]
[381.73419189 424.92965698]
[395.82827759 430.11755371]
[409.19424438 436.96649170]
[421.63717651 445.37664795]
[432.97564697 455.22534180]
[443.04428101 466.36892700]
[451.69625854 478.64495850]
[458.80538940 491.87438965]
[464.26800537 505.86428833]
[468.00448608 520.41064453]
[469.96029663 535.30126953]
[470.10693359 550.31915283]
[468.44226074 565.24517822]
[464.99053955 579.86169434]
[459.80212402 593.95556641]
[452.95266724 607.32128906]
[444.54205322 619.76391602]
[434.69296265 631.10205078]
[423.54895020 641.17022705]
[411.27261353 649.82177734]
[398.04293823 656.93041992]
[384.05282593 662.39251709]
[369.50634766 666.12841797]
[354.61560059 668.08367920]
[339.59774780 668.22973633]
[324.67178345 666.56451416]
[310.05538940 663.11224365]
[295.96170044 657.92333984]
[282.59622192 651.07336426]
[270.15393066 642.66229248]
[258.81619263 632.81274414]
[248.74839783 621.66839600]
[240.09735107 609.39172363]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 173]
[14 172]
[15 171]
[16 170]
[17 169]
[18 154]
[19 153]
[20 152]
[21 151]
[22 150]
[23 149]
[24 147]
[26 145]
[27 144]
[28 143]
[29 142]
[30 141]
[31 140]
[34 138]
[35 137]
[36 136]
[37 135]
[38 134]
[39 133]
[41 131]
[49 130]
[51 129]
[52 128]
[53 127]
[81 126]
[82 125]
[83 124]
[84 123]
[85 122]
[90 121]
[91 120]
[92 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
