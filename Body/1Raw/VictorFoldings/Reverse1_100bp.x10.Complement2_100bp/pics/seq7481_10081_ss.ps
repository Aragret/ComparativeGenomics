%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[27.55337334 697.51385498]
[15.69604301 706.71813965]
[3.05084085 714.80603027]
[-10.27744865 721.71051025]
[-24.17838097 727.37438965]
[-38.53676605 731.75067139]
[-53.23362350 734.80316162]
[-68.14716339 736.50653076]
[-83.15381622 736.84661865]
[-98.12921906 735.82073975]
[-112.94928741 733.43725586]
[-127.49120331 729.71600342]
[-141.63447571 724.68774414]
[-155.26190186 718.39422607]
[-168.26055908 710.88757324]
[-180.52273560 702.22991943]
[-191.94682312 692.49310303]
[-202.43814087 681.75781250]
[-211.90977478 670.11291504]
[-220.28323364 657.65496826]
[-227.48912048 644.48718262]
[-233.46772766 630.71868896]
[-238.16950989 616.46356201]
[-241.55552673 601.83996582]
[-243.59768677 586.96899414]
[-244.27909851 571.97399902]
[-243.59408569 556.97912598]
[-241.54835510 542.10864258]
[-238.15884399 527.48583984]
[-233.45364380 513.23187256]
[-227.47172546 499.46481323]
[-220.26268005 486.29876709]
[-211.88624573 473.84280396]
[-202.41181946 462.20019531]
[-191.91792297 451.46737671]
[-180.49150085 441.73330688]
[-168.22724915 433.07864380]
[-155.22679138 425.57507324]
[-141.59785461 419.28482056]
[-127.45337677 414.25997925]
[-112.91056824 410.54220581]
[-98.08993530 408.16229248]
[-83.11428070 407.13995361]
[-68.10771179 407.48367310]
[-53.19458008 409.19061279]
[-38.49845505 412.24661255]
[-24.14112091 416.62637329]
[-18.47833252 402.73635864]
[-12.81554699 388.84631348]
[-7.25632095 374.91452026]
[-1.80096388 360.94171143]
[3.65439320 346.96893311]
[9.10974979 332.99612427]
[14.56510735 319.02331543]
[20.02046394 305.05053711]
[25.47582054 291.07772827]
[30.93117905 277.10494995]
[27.35390091 259.92440796]
[41.82553864 248.53788757]
[47.07225800 234.48541260]
[52.21421432 220.39427185]
[57.25113297 206.26524353]
[54.23684311 191.67883301]
[66.15889740 181.27810669]
[71.19581604 167.14907837]
[75.91594696 152.91108704]
[80.31694794 138.57124329]
[84.71794891 124.23139191]
[74.66615295 113.37526703]
[71.37129211 98.95174408]
[75.71216583 84.80780792]
[86.53099060 74.71586609]
[100.94220734 71.36760712]
[105.34320831 57.02776337]
[109.74420166 42.68791580]
[114.14520264 28.34806633]
[118.54619598 14.00821972]
[120.66082001 -0.84197742]
[111.96618652 -10.36910534]
[112.08895111 -22.86585236]
[120.41790771 -31.63825607]
[120.41790771 -46.63825607]
[120.41790771 -61.63825607]
[120.41790771 -76.63825226]
[120.41790771 -91.63825226]
[120.41790771 -106.63825226]
[112.68061066 -120.43843079]
[120.41790771 -133.16569519]
[120.30624390 -148.16528320]
[120.08291626 -163.16362000]
[119.85958862 -178.16195679]
[119.63626099 -193.16029358]
[116.57907867 -199.02247620]
[116.89405060 -204.69679260]
[119.63626099 -208.60694885]
[116.63496399 -217.23423767]
[119.97621918 -223.82649231]
[120.42282867 -238.81983948]
[120.86943054 -253.81318665]
[121.31604004 -268.80654907]
[107.74406433 -275.78967285]
[98.55287170 -287.97512817]
[95.56736755 -302.94338989]
[99.38034058 -317.72256470]
[109.23470306 -329.37823486]
[123.17388153 -335.59613037]
[138.43023682 -335.14166260]
[151.97459412 -328.10513306]
[161.11773682 -315.88360596]
[164.04426575 -300.90368652]
[160.17312622 -286.13964844]
[150.27294922 -274.52288818]
[136.30938721 -268.35992432]
[135.86277771 -253.36657715]
[135.41618347 -238.37322998]
[134.96957397 -223.37988281]
[134.63459778 -208.38362122]
[134.63459778 -193.38362122]
[134.85792542 -178.38528442]
[135.08125305 -163.38694763]
[135.30458069 -148.38861084]
[138.54731750 -141.74734497]
[135.41790771 -133.16569519]
[143.15521240 -120.43843079]
[135.41790771 -106.63825226]
[135.41790771 -91.63825226]
[135.41790771 -76.63825226]
[135.41790771 -61.63825607]
[135.41790771 -46.63825607]
[135.41790771 -31.63825607]
[144.99859619 -16.93528748]
[135.65916443 -1.06530511]
[142.22811890 -14.55043888]
[152.15034485 -25.79985046]
[164.70956421 -34.00143433]
[178.99911499 -38.56311035]
[193.98741150 -39.15557098]
[208.59243774 -35.73603821]
[221.75984192 -28.55138206]
[232.53907776 -18.12026024]
[240.15194702 -5.19570684]
[244.04890442 9.28924179]
[243.94860840 24.28890610]
[239.85830688 38.72044754]
[232.07327271 51.54204178]
[221.15551758 61.82808304]
[207.89320374 68.83601379]
[193.24375916 72.05993652]
[178.26472473 71.26709747]
[164.03746033 66.51473999]
[151.58903503 58.14593887]
[141.81813049 46.76484680]
[135.43008423 33.19307327]
[132.88604736 18.40921783]
[128.48504639 32.74906540]
[124.08405304 47.08891296]
[119.68305206 61.42876053]
[115.28205109 75.76860809]
[125.33384705 86.62473297]
[128.62870789 101.04825592]
[124.28783417 115.19219208]
[113.46900940 125.28413391]
[99.05779266 128.63238525]
[94.65679169 142.97224426]
[90.25579834 157.31208801]
[91.42626190 162.39903259]
[90.61003876 166.96928406]
[88.33663940 170.35256958]
[85.32484436 172.18598938]
[80.28792572 186.31501770]
[82.94194794 201.91203308]
[71.38016510 211.30215454]
[66.34324646 225.43118286]
[66.40927887 234.56538391]
[61.12472916 239.73213196]
[55.87800980 253.78460693]
[60.51230621 265.82147217]
[55.85300446 277.41778564]
[44.90397644 282.56030273]
[39.44861984 296.53308105]
[33.99326324 310.50588989]
[28.53790474 324.47869873]
[23.08254814 338.45147705]
[17.62719154 352.42428589]
[12.17183399 366.39706421]
[6.71647692 380.36987305]
[6.51052141 389.50198364]
[1.07448018 394.50909424]
[-4.58830643 408.39913940]
[-10.25109291 422.28915405]
[3.07598066 429.19598389]
[15.71975899 437.28610229]
[27.57546806 446.49249268]
[38.54486847 456.73883057]
[48.53705978 467.94024658]
[57.46924591 480.00387573]
[65.26740265 492.82977295]
[71.86692047 506.31167603]
[77.21310425 520.33782959]
[81.26165771 534.79205322]
[83.97903442 549.55456543]
[85.34270477 564.50299072]
[85.34138489 579.51348877]
[83.97507477 594.46166992]
[81.25510406 609.22369385]
[77.20401001 623.67718506]
[71.85535431 637.70245361]
[65.25346375 651.18316650]
[57.45304871 664.00769043]
[48.51874161 676.06976318]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 190]
[48 189]
[49 188]
[50 186]
[51 185]
[52 184]
[53 183]
[54 182]
[55 181]
[56 180]
[57 179]
[59 176]
[60 175]
[61 173]
[62 172]
[64 170]
[65 169]
[66 165]
[67 164]
[68 163]
[73 158]
[74 157]
[75 156]
[76 155]
[77 154]
[78 132]
[81 130]
[82 129]
[83 128]
[84 127]
[85 126]
[86 125]
[88 123]
[89 121]
[90 120]
[91 119]
[92 118]
[95 117]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
