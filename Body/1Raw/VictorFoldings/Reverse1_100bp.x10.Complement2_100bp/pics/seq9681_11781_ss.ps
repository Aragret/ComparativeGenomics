%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[42.14648056 600.93151855]
[34.15653610 587.96691895]
[32.13697052 572.87249756]
[36.43768311 558.26348877]
[46.31354904 546.67095947]
[60.05351639 540.10333252]
[59.60691071 525.10998535]
[51.49410248 512.61871338]
[58.81708908 498.59429932]
[58.37048340 483.60095215]
[57.92387772 468.60760498]
[55.62206650 465.93664551]
[54.49959564 462.01809692]
[55.12875748 457.41836548]
[57.80722427 452.93811035]
[58.03055191 437.93975830]
[58.25387955 422.94140625]
[55.21031570 416.20654297]
[58.59384155 407.72189331]
[59.04044724 392.72854614]
[59.48705673 377.73519897]
[59.93366241 362.74182129]
[48.30172729 372.21273804]
[33.36634827 370.82189941]
[23.68318367 359.36605835]
[24.79919052 344.40765381]
[36.07506943 334.51550293]
[51.05148697 335.35629272]
[61.14894104 346.44750977]
[62.93140793 331.55380249]
[64.71387482 316.66009521]
[66.49633789 301.76635742]
[68.27880859 286.87265015]
[70.06127167 271.97894287]
[59.02967834 262.00686646]
[55.94892120 247.27687073]
[62.20560837 233.39497375]
[75.59140778 225.77088928]
[73.26501465 218.75592041]
[77.51288605 210.66931152]
[79.51689911 195.80377197]
[81.52091217 180.93824768]
[83.52492523 166.07272339]
[85.52894592 151.20719910]
[87.53295898 136.34165955]
[89.53697205 121.47613525]
[91.54098511 106.61061096]
[91.09437561 91.61725616]
[88.20910645 76.89736938]
[85.32382965 62.17747879]
[75.07444763 54.34721756]
[72.97434235 42.02758789]
[79.61167908 31.91461182]
[76.94588470 17.15339470]
[74.28009033 2.39217687]
[70.90695953 -1.59142816]
[69.53623962 -6.02701426]
[70.00477600 -10.07615280]
[71.84029388 -13.08667278]
[69.83627319 -27.95220184]
[67.83226013 -42.81772995]
[65.82824707 -57.68325806]
[63.82423401 -72.54878235]
[61.82022095 -87.41431427]
[59.81620789 -102.27983856]
[50.30455399 -114.92259216]
[56.27211761 -128.56947327]
[54.26810455 -143.43499756]
[44.75645065 -156.07774353]
[50.72401428 -169.72463989]
[45.43191147 -155.68919373]
[35.92008591 -144.09069824]
[23.19233704 -136.15315247]
[8.59185982 -132.71424866]
[-6.34052420 -134.13688660]
[-20.02896500 -140.27095032]
[-31.02888870 -150.46907043]
[-38.17944717 -163.65502930]
[-40.72602844 -178.43727112]
[-38.39987946 -193.25581360]
[-31.44648552 -206.54679871]
[-20.59965897 -216.90760803]
[-7.00408840 -223.24482727]
[7.90545273 -224.88969421]
[22.55552483 -221.66860962]
[35.40007019 -213.92150879]
[45.08357620 -202.46595764]
[50.58415604 -188.51069641]
[52.36662292 -203.40441895]
[54.14908981 -218.29812622]
[48.10649872 -232.91995239]
[57.30137253 -244.63761902]
[59.08383942 -259.53134155]
[60.86630630 -274.42504883]
[62.64876938 -289.31875610]
[64.43123627 -304.21249390]
[65.54688263 -319.17092896]
[65.99349213 -334.16427612]
[66.44009399 -349.15762329]
[66.88670349 -364.15100098]
[53.31473160 -371.13412476]
[44.12353516 -383.31954956]
[41.13803482 -398.28784180]
[44.95100021 -413.06701660]
[54.80536652 -424.72268677]
[68.74454498 -430.94055176]
[84.00089264 -430.48611450]
[97.54525757 -423.44958496]
[106.68840027 -411.22805786]
[109.61492920 -396.24813843]
[105.74379730 -381.48410034]
[95.84360504 -369.86734009]
[81.88005066 -363.70437622]
[81.43344879 -348.71102905]
[80.98683929 -333.71768188]
[80.54023743 -318.72433472]
[92.17216492 -328.19525146]
[107.10754395 -326.80441284]
[116.79071045 -315.34857178]
[115.67470551 -300.39013672]
[104.39882660 -290.49798584]
[89.42240906 -291.33880615]
[79.32495117 -302.43002319]
[77.54248810 -287.53631592]
[75.76002502 -272.64257812]
[73.97755432 -257.74887085]
[72.19509125 -242.85514832]
[78.36517334 -229.29862976]
[69.04280853 -216.51567078]
[67.26033783 -201.62194824]
[65.47787476 -186.72822571]
[65.58953857 -171.72865295]
[74.95785522 -160.14918518]
[69.13362885 -145.43901062]
[71.13764191 -130.57348633]
[80.50595856 -118.99402618]
[74.68173981 -104.28385925]
[76.68575287 -89.41832733]
[78.68976593 -74.55280304]
[80.69377899 -59.68727112]
[82.69779205 -44.82174301]
[84.70180511 -29.95621490]
[86.70581818 -15.09068680]
[89.04130554 -0.27361861]
[91.70709991 14.48759842]
[94.37289429 29.24881554]
[106.41408539 42.01504898]
[100.04372406 59.29220581]
[102.92899323 74.01209259]
[105.81427002 88.73198700]
[109.82900238 74.27923584]
[117.40174866 61.33113098]
[128.03024292 50.74646759]
[141.00953674 43.22729111]
[155.47874451 39.27231598]
[170.47819519 39.14387131]
[185.01301575 42.85046768]
[198.11918640 50.14626312]
[208.92738342 60.54735565]
[216.72076416 73.36387634]
[220.98242188 87.74575043]
[221.42968750 102.73907471]
[218.03289795 117.34941101]
[211.01736450 130.60769653]
[200.84837341 141.63455200]
[188.20040894 149.69862366]
[173.91238403 154.26504517]
[158.93194580 155.03091431]
[144.25270081 151.94548035]
[130.84828186 145.21334839]
[119.60774994 135.28106689]
[111.27664185 122.80738831]
[106.40650940 108.61462402]
[104.40249634 123.48014832]
[102.39848328 138.34567261]
[100.39447021 153.21121216]
[98.39045715 168.07673645]
[96.38644409 182.94226074]
[94.38243103 197.80780029]
[92.37841797 212.67332458]
[90.48512268 227.55335999]
[101.69377136 238.12088013]
[104.49793243 253.08717346]
[98.02822113 266.67419434]
[84.95498657 273.76141357]
[83.17252350 288.65512085]
[81.39006042 303.54882812]
[79.60758972 318.44256592]
[77.82512665 333.33627319]
[76.04265594 348.22998047]
[74.92700958 363.18844604]
[74.48040771 378.18179321]
[74.03379822 393.17514038]
[73.58719635 408.16848755]
[73.25222015 423.16473389]
[73.02889252 438.16308594]
[72.80556488 453.16143799]
[72.91722870 468.16101074]
[73.36383057 483.15435791]
[73.81044006 498.14770508]
[81.95519257 511.71139526]
[74.60025787 524.66339111]
[75.04686737 539.65673828]
[89.15338135 545.39483643]
[99.70174408 556.37902832]
[104.86437225 570.70617676]
[103.74682617 585.89404297]
[96.54270935 599.31121826]
[84.50019073 608.63311768]
[69.70571136 612.24462891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 203]
[7 202]
[9 200]
[10 199]
[11 198]
[15 197]
[16 196]
[17 195]
[19 194]
[20 193]
[21 192]
[22 191]
[29 190]
[30 189]
[31 188]
[32 187]
[33 186]
[34 185]
[38 181]
[40 180]
[41 179]
[42 178]
[43 177]
[44 176]
[45 175]
[46 174]
[47 173]
[48 150]
[49 149]
[50 148]
[53 146]
[54 145]
[55 144]
[59 143]
[60 142]
[61 141]
[62 140]
[63 139]
[64 138]
[65 137]
[67 135]
[68 134]
[70 132]
[88 131]
[89 130]
[90 129]
[92 127]
[93 126]
[94 125]
[95 124]
[96 123]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
