%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxGAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGG\
) } def
/len { sequence length } bind def

/coor [
[116.41669464 653.55358887]
[115.97009277 638.56024170]
[115.52348328 623.56689453]
[115.07687378 608.57354736]
[106.96406555 596.08227539]
[114.28705597 582.05786133]
[113.84045410 567.06451416]
[113.39384460 552.07116699]
[111.09203339 549.40020752]
[109.96956635 545.48162842]
[110.59872437 540.88189697]
[113.27719116 536.40161133]
[113.50051880 521.40325928]
[113.72384644 506.40493774]
[113.94717407 491.40661621]
[114.17050171 476.40826416]
[114.39382935 461.40994263]
[114.61715698 446.41159058]
[114.84048462 431.41326904]
[115.06381226 416.41491699]
[115.28713989 401.41659546]
[115.51046753 386.41824341]
[101.99266815 374.07382202]
[101.78728485 355.44934082]
[115.49155426 342.36856079]
[115.26822662 327.37020874]
[115.04489899 312.37188721]
[114.82157135 297.37353516]
[114.59824371 282.37521362]
[106.67230988 269.76455688]
[114.20328522 255.85070801]
[112.86505127 240.91052246]
[110.41932678 226.11125183]
[106.22729492 220.02449036]
[108.04906464 211.07357788]
[105.82395172 196.23953247]
[103.59883118 181.40548706]
[101.37371826 166.57144165]
[97.27276611 160.42294312]
[99.22760773 151.50013733]
[97.22359467 136.63461304]
[95.21958160 121.76908112]
[91.21062469 115.56021118]
[93.29809570 106.66750336]
[90.01560211 102.57614136]
[89.25907898 96.93690491]
[91.69110870 91.30466461]
[90.35287476 76.36447906]
[78.50851440 66.24771118]
[77.36418152 51.07717514]
[87.08197021 39.84774017]
[85.74372864 24.90755272]
[84.40549469 9.96736813]
[83.06726074 -4.97281694]
[74.12962341 -18.02766991]
[80.70059967 -31.39447784]
[79.02906036 -46.30105209]
[77.02504730 -61.16658020]
[75.02103424 -76.03211212]
[73.01702118 -90.89763641]
[71.01300812 -105.76316833]
[67.82112122 -109.89341736]
[66.64982605 -114.38578033]
[67.29869843 -118.40996552]
[69.26680756 -121.33551788]
[60.32917023 -134.39036560]
[66.90014648 -147.75718689]
[65.56191254 -162.69737244]
[64.22367859 -177.63755798]
[62.88544464 -192.57774353]
[51.94565201 -207.38996887]
[59.94473267 -223.00988770]
[58.38421249 -237.92849731]
[56.82368851 -252.84709167]
[47.69267273 -265.76742554]
[54.06390762 -279.23059082]
[52.50338745 -294.14920044]
[50.94286346 -309.06781006]
[46.93764496 -317.27731323]
[49.47186279 -324.21990967]
[48.13362885 -339.16009521]
[46.79539490 -354.10028076]
[45.45716095 -369.04046631]
[44.11892700 -383.98065186]
[42.78069305 -398.92083740]
[27.79598236 -400.19735718]
[13.26064014 -404.05676270]
[-0.38362077 -410.38174438]
[-12.72216606 -418.98007202]
[-23.38004112 -429.59048462]
[-32.03336716 -441.89053345]
[-38.41917801 -455.50640869]
[-42.34341431 -470.02438354]
[-43.68682480 -485.00326538]
[-42.40858459 -499.98782349]
[-38.54753876 -514.52270508]
[-32.22101974 -528.16625977]
[-23.62128258 -540.50384521]
[-13.00966358 -551.16052246]
[-0.70863813 -559.81243896]
[12.90797901 -566.19671631]
[27.42639542 -570.11932373]
[42.40541077 -571.46099854]
[57.38983154 -570.18109131]
[71.92430115 -566.31835938]
[85.56712341 -559.99029541]
[97.90371704 -551.38916016]
[108.55918884 -540.77636719]
[117.20972443 -528.47436523]
[123.59244537 -514.85699463]
[127.51338959 -500.33813477]
[128.85340881 -485.35897827]
[127.57176208 -470.37469482]
[123.70742035 -455.84066772]
[117.37780762 -442.19854736]
[108.77526855 -429.86294556]
[98.16123962 -419.20867920]
[85.85824585 -410.55953979]
[72.24018097 -404.17834473]
[57.72087860 -400.25906372]
[59.05911255 -385.31887817]
[60.39734650 -370.37869263]
[61.73558044 -355.43850708]
[63.07381439 -340.49832153]
[64.41204834 -325.55813599]
[65.86146545 -310.62832642]
[67.42198944 -295.70971680]
[68.98251343 -280.79110718]
[78.00190735 -268.93786621]
[71.74229431 -254.40762329]
[73.30281830 -239.48901367]
[74.86334229 -224.57040405]
[84.05973816 -216.71211243]
[85.48192596 -204.29594421]
[77.82563019 -193.91596985]
[79.16386414 -178.97578430]
[80.50209808 -164.03559875]
[81.84033203 -149.09541321]
[90.68225098 -137.10917664]
[84.20699310 -122.67375183]
[85.87853241 -107.76718140]
[87.88254547 -92.90164948]
[89.88655853 -78.03612518]
[91.89057922 -63.17059326]
[93.89459229 -48.30506516]
[96.46178436 -45.88807297]
[97.98583221 -42.10755157]
[97.83861542 -37.46733475]
[95.64078522 -32.73271179]
[104.48270416 -20.74648094]
[98.00744629 -6.31105089]
[99.34568024 8.62913418]
[100.68391418 23.56931877]
[102.02214813 38.50950241]
[113.58093262 47.83314133]
[115.15091705 62.96554947]
[105.29306030 75.02624512]
[106.63129425 89.96643066]
[108.19181824 104.88503265]
[110.08510590 119.76506805]
[112.08911896 134.63059998]
[114.09313202 149.49612427]
[116.20775604 164.34632874]
[118.43287659 179.18037415]
[120.65798950 194.01440430]
[122.88311005 208.84844971]
[125.21859741 223.66552734]
[127.66432190 238.46479797]
[134.42048645 225.07247925]
[146.91322327 216.76997375]
[161.87695312 215.72753906]
[175.40020752 222.21766663]
[183.94802856 234.54385376]
[185.28604126 249.48405457]
[179.06448364 263.13293457]
[166.90966797 271.92272949]
[151.99882507 273.55581665]
[138.22962952 267.60525513]
[129.20162964 255.62738037]
[137.14353943 269.31082153]
[129.59657288 282.15188599]
[129.81990051 297.15020752]
[130.04322815 312.14855957]
[130.26655579 327.14688110]
[130.48988342 342.14523315]
[140.46911621 348.60678101]
[146.03318787 358.97702026]
[145.90176392 370.62506104]
[140.22315979 380.65844727]
[130.50880432 386.64157104]
[130.28547668 401.63992310]
[130.06214905 416.63824463]
[129.83882141 431.63659668]
[129.61549377 446.63491821]
[129.39216614 461.63327026]
[129.16883850 476.63159180]
[128.94551086 491.62994385]
[128.72218323 506.62826538]
[128.49885559 521.62658691]
[128.27552795 536.62493896]
[128.38719177 551.62451172]
[128.83380127 566.61785889]
[129.28041077 581.61120605]
[137.42515564 595.17492676]
[130.07022095 608.12689209]
[130.51683044 623.12023926]
[130.96343994 638.11358643]
[131.41004944 653.10699463]
[137.92529297 668.75903320]
[124.68849945 679.35260010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 208]
[2 207]
[3 206]
[4 205]
[6 203]
[7 202]
[8 201]
[12 200]
[13 199]
[14 198]
[15 197]
[16 196]
[17 195]
[18 194]
[19 193]
[20 192]
[21 191]
[22 190]
[25 185]
[26 184]
[27 183]
[28 182]
[29 181]
[31 179]
[32 168]
[33 167]
[35 166]
[36 165]
[37 164]
[38 163]
[40 162]
[41 161]
[42 160]
[44 159]
[47 158]
[48 157]
[51 154]
[52 153]
[53 152]
[54 151]
[56 149]
[57 145]
[58 144]
[59 143]
[60 142]
[61 141]
[65 140]
[67 138]
[68 137]
[69 136]
[70 135]
[72 132]
[73 131]
[74 130]
[76 128]
[77 127]
[78 126]
[80 125]
[81 124]
[82 123]
[83 122]
[84 121]
[85 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
