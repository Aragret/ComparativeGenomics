%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[98.25871277 665.97711182]
[86.96538544 656.07031250]
[77.09332275 644.74664307]
[68.81869507 632.20812988]
[62.28917694 618.67858887]
[57.62129211 604.39947510]
[54.89834213 589.62548828]
[54.16892624 574.62048340]
[55.44606018 559.65209961]
[58.70695496 544.98748779]
[63.89340973 530.88842773]
[70.91287231 517.60644531]
[79.64006805 505.37863159]
[89.91924286 494.42318726]
[101.56697083 484.93563843]
[114.37537384 477.08526611]
[128.11587524 471.01217651]
[142.54324341 466.82479858]
[140.31813049 451.99075317]
[138.09301758 437.15670776]
[135.86788940 422.32266235]
[131.76695251 416.17416382]
[133.72178650 407.25134277]
[131.71777344 392.38583374]
[129.60314941 377.53564453]
[127.37802887 362.70159912]
[123.27708435 356.55310059]
[125.23191833 347.63027954]
[123.22790527 332.76477051]
[121.22389221 317.89923096]
[119.21987915 303.03369141]
[107.25630951 294.23550415]
[105.01219177 279.18829346]
[114.32167816 266.69943237]
[112.31766510 251.83390808]
[102.94935608 240.25444031]
[108.77357483 225.54428101]
[106.76956177 210.67875671]
[97.34326935 203.09774780]
[95.55203247 190.72943115]
[102.89588928 180.12609863]
[101.11341858 165.23237610]
[99.22013092 150.35234070]
[97.21611786 135.48681641]
[95.21209717 120.62129211]
[84.28998566 114.19004059]
[78.99948120 102.67204285]
[81.23708344 90.19619751]
[90.20066833 81.23474121]
[88.41820526 66.34102631]
[86.63574219 51.44731140]
[77.31336975 38.66434860]
[83.48345184 25.10782623]
[81.70098877 10.21410847]
[72.37862396 -2.56885052]
[78.54870605 -16.12537575]
[76.76624298 -31.01909256]
[74.98377228 -45.91281128]
[73.20130920 -60.80652618]
[71.41883850 -75.70024109]
[69.63637543 -90.59396362]
[67.85391235 -105.48767853]
[66.07144165 -120.38139343]
[56.86954880 -108.53550720]
[42.23310471 -105.25305939]
[28.85369110 -112.03475189]
[22.84819984 -125.78008270]
[26.96225929 -140.20486450]
[39.31497955 -148.71429443]
[54.25885773 -147.41796875]
[64.96256256 -136.90687561]
[64.73923492 -151.90521240]
[64.51590729 -166.90354919]
[56.57400131 -180.58700562]
[64.12095642 -193.42805481]
[63.89762497 -208.42639160]
[63.67429733 -223.42472839]
[53.86648941 -239.00961304]
[63.00517273 -253.99131775]
[62.55856705 -268.98464966]
[59.17503738 -277.46932983]
[62.21860504 -284.20419312]
[61.99527740 -299.20254517]
[61.77194977 -314.20086670]
[61.54862213 -329.19921875]
[52.88056946 -316.95727539]
[39.29444885 -310.59982300]
[24.34163475 -311.78866577]
[11.93075657 -320.21304321]
[5.30599022 -333.67083740]
[6.19903231 -348.64422607]
[14.37644482 -361.21920776]
[27.70067024 -368.10867310]
[42.68878937 -367.51177979]
[55.42294312 -359.58453369]
[62.57424545 -346.39996338]
[64.57826233 -361.26547241]
[66.58227539 -376.13101196]
[52.60309601 -381.79083252]
[40.47112274 -390.74996948]
[30.94898605 -402.44525146]
[24.63525200 -416.14151001]
[21.92680550 -430.97778320]
[22.99390411 -446.02145386]
[27.76947021 -460.32687378]
[35.95330429 -472.99475098]
[47.03096390 -483.22885132]
[60.30610275 -490.38577271]
[74.94422913 -494.01565552]
[90.02518463 -493.89031982]
[104.60095978 -490.01763916]
[117.75531006 -482.64105225]
[128.66134644 -472.22430420]
[136.63349915 -459.42211914]
[141.17065430 -445.03930664]
[141.98756409 -429.97998047]
[139.03291321 -415.19076538]
[132.49241638 -401.60134888]
[122.77721405 -390.06591797]
[110.49800873 -381.30966187]
[96.42669678 -375.88299561]
[81.44779968 -374.12701416]
[79.44378662 -359.26147461]
[77.43977356 -344.39593506]
[76.54695892 -329.42254639]
[76.77028656 -314.42419434]
[76.99361420 -299.42587280]
[77.21694183 -284.42752075]
[77.55191803 -269.43127441]
[77.99851990 -254.43791199]
[86.58497620 -245.91738892]
[87.07975769 -233.42984009]
[78.67263794 -223.64805603]
[78.89596558 -208.64971924]
[79.11929321 -193.65138245]
[87.04522705 -181.04072571]
[79.51424408 -167.12687683]
[79.73757172 -152.12854004]
[79.96089935 -137.13020325]
[80.96516418 -122.16386414]
[82.74762726 -107.27014160]
[84.53009033 -92.37642670]
[86.31256104 -77.48271179]
[88.09502411 -62.58899307]
[89.87748718 -47.69527435]
[91.65995789 -32.80155945]
[93.44242096 -17.90784073]
[102.63729858 -6.19017982]
[96.59470367 8.43164253]
[98.37717438 23.32535934]
[107.57204437 35.04302216]
[101.52945709 49.66484451]
[103.31192017 64.55856323]
[105.09439087 79.45227814]
[118.29792023 89.35351562]
[120.38099670 105.72509003]
[110.07762909 118.61727905]
[112.08164215 133.48280334]
[114.08565521 148.34832764]
[118.33352661 156.43495178]
[116.00714111 163.44992065]
[117.78960419 178.34362793]
[129.16555786 192.82359314]
[121.63508606 208.67474365]
[123.63909912 223.54026794]
[133.15075684 236.18301392]
[127.18318939 249.82989502]
[129.18721008 264.69543457]
[141.47148132 274.27322388]
[143.29208374 289.37753296]
[134.08540344 301.02969360]
[136.08941650 315.89520264]
[138.09342957 330.76074219]
[140.09744263 345.62628174]
[142.21206665 360.47647095]
[144.43719482 375.31051636]
[148.80499268 383.33300781]
[146.58329773 390.38180542]
[148.58731079 405.24734497]
[150.70193481 420.09753418]
[152.92704773 434.93157959]
[155.15217590 449.76562500]
[157.37728882 464.59967041]
[172.39830017 464.36978149]
[187.31590271 466.14413452]
[201.86390686 469.89102173]
[215.78266907 475.54357910]
[228.82377625 483.00097656]
[240.75453186 492.13009644]
[251.36198425 502.76800537]
[260.45684814 514.72485352]
[267.87683105 527.78735352]
[273.48947144 541.72222900]
[277.19464111 556.28088379]
[278.92620850 571.20355225]
[278.65325928 586.22381592]
[276.38067627 601.07373047]
[272.14898682 615.48815918]
[266.03378296 629.20996094]
[258.14410400 641.99420166]
[248.62083435 653.61273193]
[237.63388062 663.85821533]
[225.37933350 672.54785156]
[212.07588196 679.52648926]
[197.96093750 684.66967773]
[183.28642273 687.88549805]
[168.31419373 689.11669922]
[153.31144714 688.34118652]
[138.54594421 685.57293701]
[124.28119659 680.86120605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 183]
[19 182]
[20 181]
[21 180]
[23 179]
[24 178]
[25 176]
[26 175]
[28 174]
[29 173]
[30 172]
[31 171]
[34 168]
[35 167]
[37 165]
[38 164]
[41 162]
[42 161]
[43 159]
[44 158]
[45 157]
[49 154]
[50 153]
[51 152]
[53 150]
[54 149]
[56 147]
[57 146]
[58 145]
[59 144]
[60 143]
[61 142]
[62 141]
[63 140]
[71 139]
[72 138]
[73 137]
[75 135]
[76 134]
[77 133]
[79 130]
[80 129]
[82 128]
[83 127]
[84 126]
[85 125]
[96 124]
[97 123]
[98 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
