%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[100.23840332 719.19769287]
[85.54349518 722.79138184]
[70.45743561 721.66625977]
[56.45820618 715.93243408]
[44.91730499 706.15167236]
[36.96539307 693.28222656]
[33.38151932 678.58496094]
[34.51679230 663.49963379]
[40.25999451 649.50427246]
[50.04845810 637.96990967]
[62.92321777 630.02661133]
[77.62293243 626.45257568]
[78.73857880 611.49414062]
[79.85422516 596.53570557]
[80.96987915 581.57720947]
[81.75119781 566.59759521]
[82.19780731 551.60424805]
[82.64440918 536.61090088]
[83.09101868 521.61755371]
[75.02693939 512.60107422]
[75.27630615 500.10620117]
[84.25074005 490.84216309]
[84.92052460 475.85711670]
[85.59031677 460.87207031]
[71.31118774 456.39367676]
[58.66819000 448.36550903]
[48.52637863 437.32974243]
[41.58150482 424.03460693]
[38.31229782 409.38354492]
[38.94747543 394.37405396]
[43.44973755 380.02944946]
[51.51791000 367.32940674]
[62.60708618 357.14285278]
[75.96541595 350.16857910]
[90.68508148 346.88732910]
[91.35486603 331.90228271]
[84.19358826 318.84222412]
[92.53937531 305.40130615]
[93.20916748 290.41625977]
[81.34009552 278.50137329]
[81.76923370 261.35113525]
[94.71928406 249.59039307]
[95.16589355 234.59703064]
[95.61249542 219.60368347]
[95.61249542 204.60368347]
[95.16589355 189.61033630]
[94.71928406 174.61698914]
[94.27268219 159.62364197]
[93.82607269 144.63027954]
[93.37946320 129.63693237]
[92.93286133 114.64358521]
[84.95262909 106.16082764]
[84.69254303 94.51721954]
[92.28604126 85.68658447]
[92.06271362 70.68824768]
[81.00360870 59.71855927]
[80.99078369 44.50493240]
[91.51685333 34.02936935]
[91.29352570 19.03103447]
[91.07019806 4.03269625]
[90.84687042 -10.96564102]
[90.62354279 -25.96397781]
[90.40021515 -40.96231461]
[82.45831299 -54.64576340]
[90.00526428 -67.48681641]
[82.06335449 -81.17026520]
[89.61030579 -94.01132202]
[89.38697815 -109.00965881]
[88.71719360 -123.99469757]
[87.60154724 -138.95315552]
[74.13926697 -150.12393188]
[72.94475555 -167.23791504]
[84.26995850 -179.67086792]
[82.93172455 -194.61105347]
[81.59349060 -209.55123901]
[75.89937592 -195.67402649]
[66.41429138 -184.05364990]
[53.95879364 -175.69538879]
[39.61040497 -171.32231140]
[24.61040878 -171.31274414]
[10.25645161 -175.66749573]
[-2.20970416 -184.00985718]
[-11.70961189 -195.61811829]
[-17.42143440 -209.48805237]
[-18.85104179 -224.41976929]
[-15.87475777 -239.12153625]
[-8.75006294 -252.32148743]
[1.90668702 -262.87771606]
[15.17357635 -269.87695312]
[29.90288544 -272.71377563]
[44.82038498 -271.14270020]
[58.63555527 -265.29965210]
[70.15325165 -255.69015503]
[78.37708282 -243.14549255]
[82.59510803 -228.75437927]
[85.48038483 -243.47427368]
[88.36565399 -258.19415283]
[91.25092316 -272.91406250]
[94.13619995 -287.63394165]
[80.41186523 -293.85806274]
[68.49321747 -303.07989502]
[59.02301788 -314.80218506]
[52.51197433 -328.39273071]
[49.31122589 -343.11862183]
[49.59337997 -358.18572998]
[53.34322357 -372.78146362]
[60.35853195 -386.11868286]
[70.26097870 -397.47821045]
[82.51653290 -406.24734497]
[96.46427917 -411.95324707]
[111.35202026 -414.28817749]
[126.37688446 -413.12622070]
[140.72859192 -408.52999878]
[153.63319397 -400.74746704]
[164.39474487 -390.19824219]
[172.43289185 -377.45129395]
[177.31414795 -363.19400024]
[178.77526855 -348.19528198]
[176.73745728 -333.26397705]
[171.31062317 -319.20532227]
[162.78741455 -306.77743530]
[151.62748718 -296.65060425]
[138.43267822 -289.37094116]
[123.91456604 -285.33099365]
[108.85609436 -284.74868774]
[105.97081757 -270.02877808]
[103.08554840 -255.30889893]
[100.20027161 -240.58900452]
[97.31500244 -225.86911011]
[96.53367615 -210.88948059]
[97.87191010 -195.94929504]
[99.21014404 -181.00910950]
[110.15663147 -174.21174622]
[115.26564789 -162.17098999]
[112.46572113 -149.19520569]
[102.55999756 -140.06880188]
[103.67565155 -125.11035156]
[105.70931244 -123.18100739]
[107.10126495 -120.32985687]
[107.49658966 -116.79727173]
[106.63383484 -112.94757080]
[104.38531494 -109.23298645]
[104.60864258 -94.23464966]
[112.53457642 -81.62398529]
[105.00360107 -67.71014404]
[112.92953491 -55.09948349]
[105.39855194 -41.18564224]
[105.62187958 -26.18730545]
[105.84520721 -11.18896866]
[106.06853485 3.80936837]
[106.29186249 18.80770683]
[106.51519012 33.80604172]
[117.34849548 43.96355820]
[117.78863525 59.17082596]
[107.06105042 70.46492004]
[107.28437805 85.46325684]
[116.25568390 99.63689423]
[107.92620850 114.19698334]
[108.37281799 129.19032288]
[108.81941986 144.18368530]
[109.26602936 159.17703247]
[109.71263123 174.17037964]
[110.15924072 189.16372681]
[110.60585022 204.15707397]
[113.01798248 207.76756287]
[114.05177307 211.57489014]
[113.81458282 215.12159729]
[112.55133057 218.03205872]
[110.60585022 220.05029297]
[110.15924072 235.04364014]
[109.71263123 250.03698730]
[120.01599121 258.71197510]
[123.39252472 271.54980469]
[118.82624817 283.80667114]
[108.19420624 291.08602905]
[107.52441406 306.07107544]
[114.63778687 320.20297241]
[106.33990479 332.57205200]
[105.67012024 347.55709839]
[120.03835297 352.13848877]
[132.72119141 360.27673340]
[142.85734558 371.41198730]
[149.76031494 384.78121948]
[152.96485901 399.47027588]
[152.25842285 414.47659302]
[147.69514465 428.77755737]
[139.59182739 441.40008545]
[128.50590515 451.48703003]
[115.19708252 458.35525513]
[100.57535553 461.54187012]
[99.90556335 476.52688599]
[99.23577881 491.51193237]
[108.09857178 507.65295410]
[98.08436584 522.06414795]
[97.63775635 537.05749512]
[97.19115448 552.05084229]
[96.74454498 567.04418945]
[99.22028351 571.63958740]
[99.64343262 576.26281738]
[98.34710693 580.12738037]
[95.92832947 582.69287109]
[94.81268311 597.65130615]
[93.69702911 612.60980225]
[92.58138275 627.56823730]
[106.58828735 633.28332520]
[118.14228821 643.04858398]
[126.11143494 655.90734863]
[129.71499634 670.59979248]
[128.59994507 685.68664551]
[122.87550354 699.68969727]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 204]
[13 203]
[14 202]
[15 201]
[16 197]
[17 196]
[18 195]
[19 194]
[22 192]
[23 191]
[24 190]
[35 179]
[36 178]
[38 176]
[39 175]
[42 171]
[43 170]
[44 169]
[45 164]
[46 163]
[47 162]
[48 161]
[49 160]
[50 159]
[51 158]
[54 156]
[55 155]
[58 152]
[59 151]
[60 150]
[61 149]
[62 148]
[63 147]
[65 145]
[67 143]
[68 142]
[69 137]
[70 136]
[73 132]
[74 131]
[75 130]
[95 129]
[96 128]
[97 127]
[98 126]
[99 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
