%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[95.68235016 676.18713379]
[82.47747803 683.34674072]
[68.46544647 688.75885010]
[53.87634659 692.33471680]
[38.94975281 694.01550293]
[23.93077087 693.77368164]
[9.06602383 691.61322021]
[-5.40039539 687.56958008]
[-19.23093414 681.70916748]
[-32.19848251 674.12817383]
[-44.09010315 664.95117188]
[-54.71052170 654.32879639]
[-63.88534546 642.43548584]
[-71.46391296 629.46655273]
[-77.32177734 615.63488770]
[-81.36274719 601.16772461]
[-83.52046204 586.30261230]
[-83.75949860 571.28356934]
[-82.07592773 556.35729980]
[-78.49739838 541.76885986]
[-73.08266449 527.75781250]
[-65.92064667 514.55426025]
[-57.12895584 502.37500000]
[-46.85195160 491.42001343]
[-35.25839615 481.86923218]
[-22.53866386 473.87942505]
[-8.90162659 467.58184814]
[5.42878485 463.07989502]
[20.21725082 460.44747925]
[35.22093201 459.72784424]
[50.19345474 460.93280029]
[53.29756546 446.25747681]
[56.29233932 431.55947876]
[59.17761230 416.83959961]
[62.06288528 402.11968994]
[64.94815826 387.39981079]
[67.83342743 372.67993164]
[70.71870422 357.96002197]
[72.83332825 343.10983276]
[74.17156219 328.16964722]
[75.50979614 313.22946167]
[72.97557831 306.28686523]
[76.98078918 298.07736206]
[78.54131317 283.15875244]
[80.10183716 268.24014282]
[81.66236115 253.32154846]
[83.22288513 238.40293884]
[73.67337036 227.03005981]
[75.04344177 211.87825012]
[87.03710938 201.93894958]
[88.59763336 187.02033997]
[90.15815735 172.10174561]
[91.71868134 157.18313599]
[92.50000000 142.20350647]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[82.92531586 72.06732941]
[92.28604126 57.22334671]
[92.06271362 42.22500992]
[91.83938599 27.22667313]
[85.20740509 40.68092346]
[75.09603882 51.76065063]
[62.30272293 59.59206390]
[47.83638382 63.55754089]
[32.83789825 63.34435272]
[18.49011230 58.96931076]
[5.92454767 50.77745056]
[-3.86781979 39.41481400]
[-10.11472321 25.77750397]
[-12.32350731 10.94101906]
[-10.31997585 -3.92457461]
[-4.26213789 -17.64691353]
[5.37226152 -29.14379883]
[17.82341194 -37.50853729]
[32.10936737 -42.08144760]
[47.10347366 -42.50189590]
[61.62323380 -38.73672104]
[74.52355957 -31.08286095]
[84.78707886 -20.14393044]
[91.60437012 -6.78262138]
[94.43795013 7.95080519]
[98.62496185 -6.45297670]
[102.81197357 -20.85675812]
[99.23431396 -36.26814651]
[110.21669006 -46.32979202]
[114.40370178 -60.73357391]
[113.15763092 -65.80253601]
[113.90571594 -70.38442230]
[116.12848663 -73.80119324]
[119.11265564 -75.67925262]
[123.93865204 -89.88170624]
[128.76464844 -104.08415985]
[133.59065247 -118.28661346]
[138.20465088 -132.55935669]
[142.60565186 -146.89920044]
[147.00665283 -161.23904419]
[151.40765381 -175.57888794]
[138.08012390 -182.55682373]
[126.26184845 -191.86505127]
[116.35536957 -203.18655396]
[108.69809723 -216.13571167]
[103.55082703 -230.27148438]
[101.08887482 -245.11242676]
[101.39609528 -260.15304565]
[104.46202850 -274.88107300]
[110.18225098 -288.79486084]
[118.36192322 -301.42053223]
[128.72245789 -312.32806396]
[140.91096497 -321.14593506]
[154.51232910 -327.57379150]
[169.06329346 -331.39276123]
[184.06823730 -332.47271729]
[199.01609802 -330.77688599]
[213.39778137 -326.36303711]
[226.72343445 -319.38153076]
[238.53919983 -310.07012939]
[248.44261169 -298.74594116]
[256.09640503 -285.79470825]
[261.23986816 -271.65756226]
[263.69781494 -256.81594849]
[263.38653564 -241.77542114]
[260.31661987 -227.04821777]
[254.59266663 -213.13597107]
[246.40959167 -200.51249695]
[236.04611206 -189.60777283]
[223.85522461 -180.79319763]
[210.25213623 -174.36898804]
[195.70014954 -170.55395508]
[180.69491577 -169.47804260]
[165.74749756 -171.17788696]
[161.34649658 -156.83804321]
[156.94549561 -142.49819946]
[152.54450989 -128.15835571]
[153.95098877 -123.59426880]
[152.50526428 -118.09818268]
[147.79310608 -113.46061707]
[142.96710205 -99.25816345]
[138.14111328 -85.05570984]
[133.31510925 -70.85324860]
[128.80747986 -56.54656601]
[124.62046814 -42.14278412]
[128.49761963 -27.76164818]
[117.21575928 -16.66974831]
[113.02874756 -2.26596546]
[108.84173584 12.13781643]
[106.83772278 27.00334549]
[107.06105042 42.00168228]
[107.28437805 57.00001907]
[115.74301910 65.64744568]
[116.05182648 78.14097595]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[107.50000000 142.20350647]
[118.04435730 131.53501892]
[132.96714783 130.01509094]
[145.44589233 138.33862305]
[149.77545166 152.70019531]
[143.97642517 166.53388977]
[130.70005798 173.51515198]
[116.01610565 170.45220947]
[106.63728333 158.74365234]
[105.07675934 173.66226196]
[103.51623535 188.58087158]
[101.95571136 203.49948120]
[111.63291931 215.70559692]
[109.83779907 230.81295776]
[98.14148712 239.96347046]
[96.58096313 254.88206482]
[95.02044678 269.80068970]
[93.45992279 284.71926880]
[91.89939880 299.63787842]
[90.44998169 314.56768799]
[89.11174774 329.50787354]
[87.77351379 344.44805908]
[99.22761536 334.76284790]
[114.22650146 334.58032227]
[125.91288757 343.98394775]
[128.94390869 358.67453003]
[121.93383789 371.93569946]
[108.08756256 377.70465088]
[93.73542786 373.34390259]
[85.43859100 360.84530640]
[82.55332184 375.56518555]
[79.66804504 390.28509521]
[76.78277588 405.00497437]
[73.89749908 419.72485352]
[71.01222992 434.44476318]
[72.43251038 443.46810913]
[67.97286987 449.36160278]
[64.86875916 464.03689575]
[79.04681396 468.99786377]
[92.47404480 475.73120117]
[104.92996979 484.12631226]
[116.21005249 494.04537964]
[126.12906647 505.32553101]
[134.52412415 517.78149414]
[141.25737000 531.20880127]
[146.21824646 545.38684082]
[149.32528687 560.08294678]
[150.52746582 575.05566406]
[149.80505371 590.05926514]
[147.16990662 604.84722900]
[142.66529846 619.17681885]
[136.36520386 632.81268311]
[128.37306213 645.53094482]
[118.82011414 657.12274170]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 194]
[32 193]
[33 191]
[34 190]
[35 189]
[36 188]
[37 187]
[38 186]
[39 178]
[40 177]
[41 176]
[43 175]
[44 174]
[45 173]
[46 172]
[47 171]
[50 168]
[51 167]
[52 166]
[53 165]
[54 157]
[55 156]
[56 155]
[58 153]
[60 150]
[61 149]
[62 148]
[83 147]
[84 146]
[85 145]
[87 143]
[88 142]
[92 141]
[93 140]
[94 139]
[95 138]
[96 135]
[97 134]
[98 133]
[99 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
