%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[190.34457397 587.64123535]
[191.04080200 572.61608887]
[194.40888977 557.95672607]
[200.34056091 544.13446045]
[208.64515686 531.59362793]
[219.05570984 520.73724365]
[231.23754883 511.91442871]
[244.79910278 505.40872192]
[240.82701111 490.94421387]
[230.47239685 484.69052124]
[227.04479980 472.67239380]
[232.90618896 461.18298340]
[229.14990234 446.66091919]
[225.39360046 432.13885498]
[221.63729858 417.61679077]
[217.88099670 403.09472656]
[214.12469482 388.57266235]
[209.40455627 374.33468628]
[203.74177551 360.44467163]
[198.07897949 346.55462646]
[192.41619873 332.66461182]
[177.99380493 322.66653442]
[180.65092468 304.44506836]
[174.78196716 290.64089966]
[168.91300964 276.83673096]
[153.79425049 279.86563110]
[138.37039185 279.69387817]
[123.31182861 276.32653809]
[109.27356720 269.90774536]
[96.86674500 260.71432495]
[86.63201141 249.14398193]
[79.01596069 235.69805908]
[74.35166168 220.95979309]
[72.84406281 205.56909180]
[74.56103516 190.19465637]
[79.43027496 175.50497437]
[87.24237061 162.13926697]
[97.65979004 150.67962646]
[110.23150635 141.62573242]
[104.15766907 127.91046906]
[98.08383179 114.19519806]
[86.90288544 105.80008698]
[88.20089722 91.87863159]
[75.53829193 82.39343262]
[77.45934296 67.62323761]
[71.38551331 53.90797043]
[65.31167603 40.19270325]
[59.23784256 26.47743607]
[53.16400909 12.76216888]
[47.09017563 -0.95309800]
[41.01634216 -14.66836452]
[34.94250870 -28.38363075]
[32.93781662 -13.51819420]
[25.12957382 -0.71072263]
[12.83360291 7.88049984]
[-1.87800753 10.80770111]
[-16.52609444 7.57759714]
[-28.64219475 -1.26548409]
[-36.18453598 -14.23132706]
[-37.88209915 -29.13496017]
[-33.44881821 -43.46485901]
[-23.63177299 -54.80618286]
[-10.08531284 -61.24772263]
[4.90774679 -61.70396423]
[18.82081223 -56.09801865]
[29.31018066 -45.37319565]
[25.98792076 -60.00065613]
[22.66566086 -74.62811279]
[18.46153259 -79.73074341]
[17.59544563 -85.34741211]
[19.46912003 -89.74040222]
[16.58384705 -104.46029663]
[13.69857407 -119.18019104]
[10.81330109 -133.90008545]
[7.92802906 -148.61996460]
[5.04275656 -163.33985901]
[2.15748382 -178.05975342]
[-10.26393604 -191.65348816]
[-3.93327332 -208.02082825]
[-7.03738356 -222.69613647]
[-10.14149380 -237.37142944]
[-18.24985504 -224.75183105]
[-32.53509140 -220.17666626]
[-46.46618271 -225.73767090]
[-53.67402267 -238.89239502]
[-50.86328506 -253.62670898]
[-39.31900024 -263.20425415]
[-24.31905937 -263.24633789]
[-12.72028351 -253.73208618]
[-14.28080559 -268.65069580]
[-15.84132862 -283.56930542]
[-17.40185165 -298.48791504]
[-32.23442841 -301.40100098]
[-45.54859924 -308.55810547]
[-56.16048050 -319.32284546]
[-63.12646484 -332.73800659]
[-65.82714844 -347.61071777]
[-64.02237701 -362.61853027]
[-57.87264252 -376.42694092]
[-47.92477036 -387.80810547]
[-35.06332016 -395.75006104]
[-20.43191719 -399.54656982]
[-5.33158255 -398.86004639]
[8.89497566 -393.75158691]
[20.98274040 -384.67538452]
[29.85687637 -372.43850708]
[34.72830200 -358.12905884]
[35.16384888 -343.01940918]
[31.12479591 -328.45309448]
[22.97028732 -315.72534180]
[11.42541981 -305.96792603]
[-2.48324728 -300.04843140]
[-0.92272431 -285.12982178]
[0.63779873 -270.21121216]
[2.19832182 -255.29261780]
[4.53380871 -240.47554016]
[7.63791895 -225.80024719]
[10.74202919 -211.12493896]
[20.70606041 -204.26603699]
[23.41224861 -192.06520081]
[16.87737465 -180.94502258]
[19.76264763 -166.22512817]
[22.64792061 -151.50524902]
[25.53319359 -136.78535461]
[28.41846466 -122.06546021]
[31.30373764 -107.34556580]
[34.18901062 -92.62567902]
[37.29312134 -77.95037842]
[40.61537933 -63.32291412]
[43.93764114 -48.69545364]
[48.65777588 -34.45746613]
[54.73160934 -20.74219894]
[60.80544281 -7.02693176]
[66.87927246 6.68833494]
[72.95310974 20.40360069]
[79.02694702 34.11886978]
[85.10077667 47.83413315]
[91.17461395 61.54940033]
[103.40277863 70.05358887]
[101.91616821 85.80480194]
[113.09711456 94.19991302]
[111.79910278 108.12136841]
[117.87293243 121.83663177]
[123.94676971 135.55189514]
[138.21858215 132.42584229]
[152.82119751 132.15257263]
[167.19018555 134.74072266]
[180.77046204 140.08833313]
[193.03785706 147.98689270]
[203.51922607 158.12945557]
[211.81079102 170.12260437]
[217.59368896 183.50164795]
[220.64616394 197.74870300]
[220.85212708 212.31265259]
[218.20556641 226.63053894]
[212.81069946 240.14929199]
[204.87783813 252.34710693]
[194.71527100 262.75354004]
[182.71717834 270.96777344]
[188.58613586 284.77194214]
[194.45510864 298.57611084]
[206.10302734 304.11587524]
[210.70710754 315.73422241]
[206.30622864 327.00183105]
[211.96900940 340.89184570]
[217.63180542 354.78186035]
[223.29458618 368.67190552]
[227.48341370 354.26864624]
[238.72404480 344.33648682]
[253.53347778 341.95297241]
[267.32281494 347.85671997]
[275.81930542 360.21835327]
[276.39019775 375.20745850]
[268.85861206 388.17956543]
[255.55828857 395.11508179]
[240.61047363 393.86495972]
[228.64675903 384.81637573]
[232.40304565 399.33843994]
[236.15934753 413.86050415]
[239.91564941 428.38256836]
[243.67195129 442.90460205]
[247.42825317 457.42666626]
[260.63677979 470.25698853]
[255.29153442 486.97210693]
[259.26361084 501.43661499]
[274.24572754 500.10397339]
[289.22503662 501.46810913]
[303.71994019 505.48516846]
[317.26458740 512.02606201]
[329.42349243 520.88043213]
[339.80581665 531.76379395]
[348.07785034 544.32617188]
[353.97366333 558.16375732]
[357.30368042 572.83178711]
[357.96093750 587.85870361]
[355.92422485 602.76141357]
[351.25909424 617.06091309]
[344.11544800 630.29754639]
[334.72293091 642.04577637]
[323.38351440 651.92797852]
[310.46170044 659.62640381]
[296.37283325 664.89361572]
[281.56985474 667.56036377]
[266.52859497 667.54083252]
[251.73257446 664.83575439]
[237.65744019 659.53192139]
[224.75561523 651.79998779]
[213.44187927 641.88842773]
[204.07989502 630.11590576]
[196.97062683 616.86077881]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 185]
[9 184]
[12 182]
[13 181]
[14 180]
[15 179]
[16 178]
[17 177]
[18 167]
[19 166]
[20 165]
[21 164]
[23 161]
[24 160]
[25 159]
[39 144]
[40 143]
[41 142]
[43 140]
[45 138]
[46 137]
[47 136]
[48 135]
[49 134]
[50 133]
[51 132]
[52 131]
[66 130]
[67 129]
[68 128]
[71 127]
[72 126]
[73 125]
[74 124]
[75 123]
[76 122]
[77 121]
[79 118]
[80 117]
[81 116]
[89 115]
[90 114]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
