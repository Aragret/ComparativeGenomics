%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[23.61582756 617.31353760]
[22.53473091 632.30456543]
[19.17782211 646.95489502]
[13.62379169 660.92102051]
[6.00283194 673.87561035]
[-3.50640845 685.51501465]
[-14.68102074 695.56628418]
[-27.25905418 703.79388428]
[-40.94566345 710.00494385]
[-55.42001343 714.05383301]
[-70.34281158 715.84570312]
[-85.36423492 715.33843994]
[-100.13216400 712.54406738]
[-114.30041504 707.52795410]
[-127.53687286 700.40783691]
[-139.53125000 691.35046387]
[-150.00238037 680.56829834]
[-158.70480347 668.31396484]
[-165.43452454 654.87481689]
[-170.03379822 640.56579590]
[-172.39479065 625.72241211]
[-172.46217346 610.69256592]
[-170.23435974 595.82861328]
[-165.76358032 581.47894287]
[-159.15463257 567.97998047]
[-150.56243896 555.64813232]
[-140.18840027 544.77246094]
[-128.27572632 535.60797119]
[-115.10364532 528.36938477]
[-100.98093414 523.22650146]
[-86.23865509 520.29980469]
[-71.22238159 519.65789795]
[-56.28412628 521.31585693]
[-41.77405167 525.23480225]
[-35.70021820 511.51953125]
[-29.62638474 497.80426025]
[-23.55254936 484.08901978]
[-18.51563454 469.95999146]
[-14.54353714 455.49545288]
[-10.57144165 441.03091431]
[-11.83915520 438.53073120]
[-12.19288731 435.37771606]
[-11.37903404 431.91751099]
[-9.27366829 428.58105469]
[-5.90837479 425.83718872]
[-1.08237731 411.63473511]
[3.74362040 397.43228149]
[8.56961823 383.22982788]
[13.39561558 369.02734375]
[18.22161293 354.82489014]
[23.04761124 340.62243652]
[8.92418003 329.98107910]
[-0.72884655 315.13619995]
[-4.73707438 297.86398315]
[-2.60268617 280.23776245]
[5.43379307 264.37902832]
[18.42047882 252.20210266]
[34.80685043 245.18312073]
[52.62885666 244.18104553]
[56.60095596 229.71652222]
[60.57305145 215.25199890]
[53.00565720 202.47428894]
[56.82787323 187.74861145]
[70.28163147 179.89787292]
[74.25373077 165.43334961]
[78.22582245 150.96882629]
[82.19792175 136.50430298]
[86.17001343 122.03977966]
[77.11668396 112.38442993]
[73.98473358 99.52443695]
[77.58460236 86.78750610]
[86.98476410 77.46949005]
[99.75280762 73.98155975]
[103.93981934 59.57778168]
[108.12683105 45.17399979]
[112.31384277 30.77021599]
[107.51027679 12.99362183]
[120.64239502 1.35255659]
[124.61448669 -13.11196709]
[128.58659363 -27.57649040]
[132.55868530 -42.04101562]
[136.53077698 -56.50553894]
[140.50286865 -70.97006226]
[142.28533936 -85.86377716]
[141.72712708 -100.85339355]
[141.05734253 -115.83843231]
[140.38755798 -130.82347107]
[139.71777344 -145.80850220]
[139.04798889 -160.79354858]
[130.70219421 -174.23446655]
[137.86347961 -187.29452515]
[137.19369507 -202.27957153]
[136.52391052 -217.26460266]
[135.85412598 -232.24964905]
[121.22122955 -236.04042053]
[108.35666656 -243.97731018]
[98.40432739 -255.35459900]
[92.24917603 -269.16058350]
[90.43852234 -284.16769409]
[93.13336945 -299.04147339]
[100.09409332 -312.45935059]
[110.70175171 -323.22824097]
[124.01311493 -330.39056396]
[138.84454346 -333.30947876]
[153.87724304 -331.72540283]
[167.77452087 -325.77923584]
[179.30062866 -315.99963379]
[187.43067932 -303.25625610]
[191.44175720 -288.68222046]
[190.97718811 -273.57342529]
[186.07829285 -259.27334595]
[177.18067932 -247.05354309]
[165.07550049 -238.00056458]
[150.83915710 -232.91943359]
[151.50894165 -217.93438721]
[152.17872620 -202.94935608]
[152.84851074 -187.96430969]
[161.14640808 -175.59523010]
[154.03303528 -161.46333313]
[154.70281982 -146.47828674]
[155.37260437 -131.49325562]
[156.04238892 -116.50821686]
[156.71217346 -101.52317810]
[160.15119934 -94.98139954]
[157.27868652 -86.31038666]
[163.70962524 -99.86188507]
[173.65490723 -111.09092712]
[186.33020020 -119.11194611]
[200.73590088 -123.29236603]
[215.73590088 -123.30250549]
[230.14723206 -119.14157104]
[242.83337402 -111.13769531]
[252.79382324 -99.92211151]
[259.24307251 -86.37932587]
[261.67251587 -71.57736969]
[259.89053345 -56.68359375]
[254.03765869 -42.87258148]
[244.57550049 -31.23353004]
[232.25027466 -22.68434143]
[218.03398132 -17.89924049]
[203.04780579 -17.25559807]
[188.47358704 -20.80417824]
[175.46073914 -28.26512337]
[165.03549194 -39.05002975]
[158.02003479 -52.30836105]
[154.96739197 -66.99796295]
[150.99530029 -52.53344345]
[147.02320862 -38.06892014]
[143.05111694 -23.60439491]
[139.07901001 -9.13987064]
[135.10691833 5.32465267]
[140.81555176 15.98945522]
[137.62471008 28.07259750]
[126.71762085 34.95722580]
[122.53060913 49.36100769]
[118.34359741 63.76478958]
[114.15658569 78.16857147]
[124.35137939 90.83318329]
[125.03876495 107.07675934]
[115.95037079 120.55738068]
[100.63454437 126.01187134]
[96.66244507 140.47639465]
[92.69034576 154.94091797]
[88.71825409 169.40544128]
[84.74615479 183.86996460]
[92.30366516 197.49060059]
[88.06934357 212.10310364]
[75.03757477 219.22410583]
[71.06547546 233.68862915]
[67.09338379 248.15315247]
[77.77347565 254.53933716]
[86.60163879 263.29354858]
[93.06592560 273.90066528]
[96.79327393 285.73831177]
[97.57101440 298.11346436]
[95.35900879 310.30288696]
[90.29168701 321.59552002]
[82.66989136 331.33389282]
[72.94300842 338.95242310]
[61.68248367 344.01028442]
[49.54825592 346.21682739]
[37.25006485 345.44845581]
[32.42406845 359.65090942]
[27.59807205 373.85336304]
[22.77207375 388.05581665]
[17.94607544 402.25827026]
[13.12007809 416.46072388]
[8.29408073 430.66317749]
[3.89308262 445.00302124]
[-0.07901359 459.46755981]
[-4.05110979 473.93206787]
[7.68954420 464.59628296]
[22.51023102 462.28387451]
[36.53685760 467.59930420]
[46.10289764 479.15310669]
[48.70781326 493.92520142]
[43.67068100 508.05413818]
[32.30820084 517.84667969]
[17.59049606 520.74310303]
[3.36473632 515.98620605]
[-6.65049601 504.81951904]
[-9.83728313 490.16284180]
[-15.91111755 503.87811279]
[-21.98495102 517.59338379]
[-28.05878448 531.30865479]
[-15.40499878 539.41925049]
[-4.13766289 549.36651611]
[5.47909880 560.91717529]
[13.21985626 573.80053711]
[18.90315437 587.71459961]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 205]
[35 204]
[36 203]
[37 202]
[38 191]
[39 190]
[40 189]
[45 188]
[46 187]
[47 186]
[48 185]
[49 184]
[50 183]
[51 182]
[59 170]
[60 169]
[61 168]
[64 165]
[65 164]
[66 163]
[67 162]
[68 161]
[73 157]
[74 156]
[75 155]
[76 154]
[78 151]
[79 150]
[80 149]
[81 148]
[82 147]
[83 146]
[84 125]
[85 123]
[86 122]
[87 121]
[88 120]
[89 119]
[91 117]
[92 116]
[93 115]
[94 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
