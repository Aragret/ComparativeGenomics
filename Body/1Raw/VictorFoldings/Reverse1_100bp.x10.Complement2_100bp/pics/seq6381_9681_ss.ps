%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[80.46368408 563.46173096]
[78.45362091 548.50775146]
[80.38339996 533.54315186]
[86.12142944 519.58831787]
[95.27648926 507.59469604]
[107.22437286 498.38000488]
[121.15045166 492.57254028]
[119.14643860 477.70700073]
[117.14242554 462.84149170]
[115.13841248 447.97595215]
[111.95098877 444.41937256]
[110.96395874 438.82269287]
[113.30287170 432.63876343]
[111.74234772 417.72015381]
[110.18182373 402.80154419]
[108.62129974 387.88293457]
[98.35897064 398.82296753]
[83.37166595 399.44000244]
[72.24479675 389.38052368]
[71.35234070 374.40710449]
[81.20553589 363.09716797]
[96.16001892 361.92956543]
[107.64875031 371.57232666]
[107.42542267 356.57400513]
[107.20209503 341.57565308]
[106.75549316 326.58230591]
[106.08570099 311.59725952]
[105.41591644 296.61224365]
[104.74613190 281.62719727]
[104.07634735 266.64215088]
[102.62693024 251.71234131]
[100.40180969 236.87829590]
[98.17669678 222.04425049]
[86.08345795 213.42514038]
[83.61555481 198.41300964]
[92.73807526 185.78694153]
[90.51295471 170.95291138]
[88.28784180 156.11886597]
[83.32832336 170.27523804]
[74.28706360 182.24418640]
[62.02580643 190.88488770]
[47.71322632 195.37376404]
[32.71350098 195.28295898]
[18.45631027 190.62113953]
[6.30055904 181.83264160]
[-2.59514332 169.75512695]
[-7.38291597 155.53973389]
[-7.60641909 140.54139709]
[-3.24434924 126.18966675]
[5.28752851 113.85244751]
[17.17601013 104.70564270]
[31.28796196 99.62107086]
[46.27832031 99.08336639]
[60.71830368 103.14377594]
[73.23158264 111.41528320]
[82.62546539 123.10951233]
[88.00483704 137.11294556]
[89.78730774 122.21922302]
[91.56977081 107.32550812]
[93.24131012 92.41893005]
[94.80183411 77.50032806]
[96.36235809 62.58172226]
[97.92288208 47.66311646]
[86.55814362 37.26364899]
[83.53146362 22.34076118]
[89.79817200 8.65893269]
[102.76443481 1.37785923]
[104.32495880 -13.54074574]
[105.88547516 -28.45935059]
[105.88547516 -43.45935059]
[104.32495880 -58.37795639]
[102.76443481 -73.29656219]
[98.75921631 -81.50607300]
[101.29343414 -88.44865417]
[99.95520020 -103.38883972]
[98.61696625 -118.32902527]
[97.27873230 -133.26921082]
[86.33893585 -148.08145142]
[94.33802032 -163.70135498]
[82.34435272 -173.64065552]
[80.97428131 -188.79248047]
[90.52379608 -200.16535950]
[88.96327209 -215.08395386]
[87.40274811 -230.00256348]
[76.24363708 -244.65028381]
[84.00927734 -260.38754272]
[82.22681427 -275.28128052]
[80.44434357 -290.17498779]
[78.66188049 -305.06869507]
[63.69865036 -306.90316772]
[49.60948944 -312.26589966]
[37.21352386 -320.84515381]
[27.23143578 -332.14212036]
[20.24357224 -345.50000000]
[16.65619850 -360.14221191]
[16.67787933 -375.21743774]
[20.30735397 -389.84927368]
[27.33361053 -403.18701172]
[37.34814835 -414.45523071]
[49.76874161 -422.99877930]
[63.87326813 -428.32095337]
[78.84171295 -430.11236572]
[93.80382538 -428.26885986]
[107.88973236 -422.89755249]
[120.28049469 -414.31082153]
[130.25573730 -403.00778198]
[137.23550415 -389.64566040]
[140.81399536 -375.00128174]
[140.78317261 -359.92605591]
[137.14482117 -345.29644775]
[130.11048889 -331.96298218]
[120.08911896 -320.70083618]
[107.66334534 -312.16482544]
[93.55559540 -306.85116577]
[95.33806610 -291.95745850]
[97.12052917 -277.06375122]
[98.90299225 -262.17001343]
[108.21537018 -254.44952393]
[109.82226562 -242.05590820]
[102.32135773 -231.56309509]
[103.88188171 -216.64448547]
[105.44239807 -201.72587585]
[117.13871765 -192.57536316]
[118.93383026 -177.46801758]
[109.25662231 -165.26188660]
[118.45302582 -157.40357971]
[119.87521362 -144.98742676]
[112.21891785 -134.60745239]
[113.55715179 -119.66725922]
[114.89538574 -104.72707367]
[116.23361969 -89.78688812]
[117.68303680 -74.85708618]
[119.24356079 -59.93847656]
[120.80408478 -45.01987457]
[127.03786469 -58.66318512]
[137.96569824 -68.93852234]
[151.96650696 -74.32159424]
[166.96334839 -74.01384735]
[180.73153687 -68.06095123]
[191.22863770 -57.34597015]
[196.89747620 -43.45841217]
[196.89710999 -28.45841217]
[191.22758484 -14.57113171]
[180.72994995 -3.85666656]
[166.96147156 2.09555674]
[151.96461487 2.40256071]
[137.96408081 -2.98119664]
[127.03675079 -13.25706673]
[120.80408478 -26.89882660]
[119.24356079 -11.98022270]
[117.68303680 2.93838215]
[128.86187744 12.74509335]
[132.16160583 27.42759323]
[126.11228943 41.40111160]
[112.84148407 49.22364044]
[111.28096008 64.14224243]
[109.72043610 79.06085205]
[108.15991211 93.97945404]
[110.52009583 101.68672943]
[106.46348572 109.10797119]
[104.68102264 124.00168610]
[102.89855194 138.89540100]
[103.12187958 153.89373779]
[105.34700012 168.72778320]
[107.57212067 183.56182861]
[119.99763489 192.95567322]
[122.04290771 208.03120422]
[113.01074219 219.81913757]
[115.23585510 234.65318298]
[117.46097565 249.48722839]
[126.30609131 237.37261963]
[140.83831787 233.65583801]
[154.41371155 240.03616333]
[160.82579041 253.59660339]
[157.14303589 268.13748169]
[145.04914856 277.01092529]
[130.07330322 276.16009521]
[119.06138611 265.97238159]
[119.73117065 280.95739746]
[120.40095520 295.94244385]
[121.07073975 310.92749023]
[121.74053192 325.91253662]
[124.97089386 331.68109131]
[124.82500458 337.36224365]
[122.20043182 341.35232544]
[122.42375946 356.35067749]
[122.64708710 371.34899902]
[123.53990173 386.32241821]
[125.10042572 401.24102783]
[126.66094971 416.15960693]
[128.22146606 431.07821655]
[130.00393677 445.97195435]
[132.00794983 460.83746338]
[134.01196289 475.70300293]
[136.01597595 490.56854248]
[150.98277283 492.48095703]
[164.94424438 498.20281982]
[176.94848633 507.34399414]
[186.17700195 519.28118896]
[192.00059509 533.20056152]
[194.02220154 548.15295410]
[192.10398865 563.11901855]
[186.37673950 577.07830811]
[177.23094177 589.07897949]
[165.29017639 598.30291748]
[151.36859131 604.12115479]
[136.41535950 606.13696289]
[121.45005035 604.21295166]
[107.49300385 598.48034668]
[95.49583435 589.32989502]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 195]
[8 194]
[9 193]
[10 192]
[13 191]
[14 190]
[15 189]
[16 188]
[23 187]
[24 186]
[25 185]
[26 182]
[27 181]
[28 180]
[29 179]
[30 178]
[31 170]
[32 169]
[33 168]
[36 165]
[37 164]
[38 163]
[57 162]
[58 161]
[59 160]
[60 158]
[61 157]
[62 156]
[63 155]
[67 151]
[68 150]
[69 149]
[70 134]
[71 133]
[72 132]
[74 131]
[75 130]
[76 129]
[77 128]
[79 125]
[82 122]
[83 121]
[84 120]
[86 117]
[87 116]
[88 115]
[89 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
