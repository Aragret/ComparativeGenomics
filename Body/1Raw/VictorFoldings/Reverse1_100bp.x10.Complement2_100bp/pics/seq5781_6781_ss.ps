%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxAUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGU\
) } def
/len { sequence length } bind def

/coor [
[62.86019135 493.51983643]
[68.49683380 479.15905762]
[81.01607513 470.14395142]
[80.12326050 455.17056274]
[79.23043823 440.19714355]
[78.33762360 425.22372437]
[69.50128937 416.96264648]
[68.63493347 404.49536133]
[76.74708557 394.46759033]
[76.07730103 379.48257446]
[75.40750885 364.49752808]
[66.62537384 376.65786743]
[52.70225525 382.23880005]
[37.95237350 379.51095581]
[26.94614601 369.31964111]
[23.09397316 354.82272339]
[27.58948898 340.51223755]
[39.03971100 330.82241821]
[53.89666367 328.75579834]
[67.55676270 334.95269775]
[75.78734589 347.49325562]
[77.12557983 332.55307007]
[78.46381378 317.61288452]
[79.80204773 302.67269897]
[81.14028168 287.73251343]
[82.36725616 272.78277588]
[83.48290253 257.82431030]
[73.79119873 249.33311462]
[70.71377563 236.62046814]
[75.59192657 224.27485657]
[86.85313416 216.88568115]
[88.19136810 201.94549561]
[89.52960205 187.00531006]
[90.86783600 172.06513977]
[91.64915466 157.08549500]
[91.87248230 142.08715820]
[92.09580994 127.08882141]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[92.90585327 72.68785095]
[93.12918091 57.68951416]
[90.12788391 49.06222916]
[93.46913910 42.46997833]
[79.18126678 39.29047012]
[65.72804260 33.53350449]
[53.56987762 25.39775848]
[43.12256622 15.16328907]
[34.74304962 3.18189740]
[28.71722984 -10.13497066]
[25.25021553 -24.33034706]
[24.45933342 -38.91742706]
[26.37017059 -53.39626312]
[30.91573715 -67.27088928]
[37.93882370 -80.06633759]
[47.19742966 -91.34484863]
[58.37310791 -100.72091675]
[71.08191681 -107.87439728]
[84.88760376 -112.56148529]
[99.31659698 -114.62300110]
[92.20322418 -128.75489807]
[100.50110626 -141.12397766]
[101.17089081 -156.10902405]
[101.84067535 -171.09405518]
[102.51045990 -186.07910156]
[103.18025208 -201.06413269]
[103.85003662 -216.04917908]
[104.51982117 -231.03421021]
[95.51718903 -219.03619385]
[82.00987244 -212.51296997]
[67.01544189 -212.92184448]
[53.88370132 -220.17147827]
[45.54830170 -232.64230347]
[43.87139893 -247.54826355]
[49.22761536 -261.55935669]
[60.42036057 -271.54547119]
[74.94914246 -275.27569580]
[89.56819916 -271.91665649]
[101.01159668 -262.21878052]
[106.72284698 -248.34857178]
[109.82695770 -263.02389526]
[112.93106842 -277.69918823]
[115.92584229 -292.39718628]
[118.81111145 -307.11706543]
[121.69638824 -321.83697510]
[120.14382172 -325.89202881]
[119.97896576 -329.83377075]
[120.99580383 -333.23986816]
[122.87230682 -335.79824829]
[125.21647644 -337.33544922]
[128.97277832 -351.85751343]
[132.72908020 -366.37957764]
[118.84753418 -372.12838745]
[105.90119171 -379.75323486]
[94.14207458 -389.10574341]
[83.79906464 -400.00381470]
[75.07349396 -412.23535156]
[68.13520813 -425.56225586]
[63.11927032 -439.72512817]
[60.12330627 -454.44824219]
[59.20564270 -469.44503784]
[60.38413239 -484.42361450]
[63.63584518 -499.09237671]
[68.89748383 -513.16577148]
[76.06661987 -526.36993408]
[85.00371552 -538.44781494]
[95.53480530 -549.16424561]
[107.45489502 -558.31066895]
[120.53195190 -565.70910645]
[134.51144409 -571.21545410]
[149.12123108 -574.72259521]
[164.07695007 -576.16229248]
[179.08747864 -575.50640869]
[193.86064148 -572.76776123]
[208.10884094 -567.99969482]
[221.55477905 -561.29498291]
[233.93667603 -552.78411865]
[245.01356506 -542.63281250]
[254.56979370 -531.03863525]
[262.41937256 -518.22729492]
[268.40948486 -504.44818115]
[272.42355347 -489.96945190]
[274.38342285 -475.07296753]
[274.25094604 -460.04870605]
[272.02871704 -445.18911743]
[267.75997925 -430.78341675]
[261.52783203 -417.11203003]
[253.45358276 -404.44110107]
[243.69439697 -393.01724243]
[232.44024658 -383.06283569]
[219.91018677 -374.77166748]
[206.34812927 -368.30508423]
[192.01805115 -363.78897095]
[177.19891357 -361.31124878]
[162.17915344 -360.92013550]
[147.25114441 -362.62326050]
[143.49484253 -348.10122681]
[139.73854065 -333.57916260]
[136.41627502 -318.95169067]
[133.53100586 -304.23181152]
[130.64573669 -289.51190186]
[132.44392395 -282.34335327]
[127.60636902 -274.59506226]
[124.50225830 -259.91976929]
[121.39814758 -245.24446106]
[119.50485992 -230.36442566]
[118.83507538 -215.37939453]
[118.16529083 -200.39434814]
[117.49549866 -185.40931702]
[116.82571411 -170.42427063]
[116.15592957 -155.43923950]
[115.48614502 -140.45419312]
[122.64743042 -127.39413452]
[114.30163574 -113.95321655]
[129.26229858 -110.34882355]
[143.24037170 -103.90137482]
[155.70117188 -94.85550690]
[166.16764832 -83.55528259]
[174.23870850 -70.43112946]
[179.60449219 -55.98340225]
[182.05834961 -40.76334381]
[181.50476074 -25.35203743]
[177.96308899 -10.33822155]
[171.56684875 3.70419359]
[162.55870056 16.23807335]
[151.28129578 26.78359795]
[138.16413879 34.93663406]
[123.70735168 40.38422012]
[108.46249390 42.91658401]
[108.12751770 57.91284180]
[107.90419006 72.91117859]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[107.09414673 127.31214905]
[106.87081909 142.31048584]
[106.64749146 157.30882263]
[119.06481934 148.89396667]
[133.43060303 153.20957947]
[139.15489197 167.07437134]
[132.01799011 180.26771545]
[117.28092957 183.06398010]
[105.80802155 173.40336609]
[104.46978760 188.34355164]
[103.13155365 203.28373718]
[101.79331970 218.22392273]
[113.25406647 231.44021606]
[111.64218140 248.51994324]
[98.44135284 258.93997192]
[97.32570648 273.89840698]
[99.80817413 282.68905640]
[96.08046722 289.07073975]
[94.74223328 304.01092529]
[93.40399933 318.95111084]
[92.06575775 333.89129639]
[90.72752380 348.83148193]
[90.39254761 363.82772827]
[91.06233978 378.81277466]
[91.73212433 393.79782104]
[101.99960327 409.08377075]
[93.31103516 424.33093262]
[94.20384979 439.30432129]
[95.09666443 454.27774048]
[95.98947906 469.25112915]
[109.49128723 476.71469116]
[116.79450226 490.30392456]
[115.56869507 505.68249512]
[106.20501709 517.94323730]
[91.69138336 523.17370605]
[76.65904999 519.70495605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 204]
[4 203]
[5 202]
[6 201]
[9 199]
[10 198]
[11 197]
[21 196]
[22 195]
[23 194]
[24 193]
[25 192]
[26 190]
[27 189]
[31 186]
[32 185]
[33 184]
[34 183]
[35 177]
[36 176]
[37 175]
[38 174]
[40 172]
[41 171]
[42 170]
[44 169]
[60 154]
[62 152]
[63 151]
[64 150]
[65 149]
[66 148]
[67 147]
[68 146]
[80 145]
[81 144]
[82 143]
[83 141]
[84 140]
[85 139]
[90 138]
[91 137]
[92 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
