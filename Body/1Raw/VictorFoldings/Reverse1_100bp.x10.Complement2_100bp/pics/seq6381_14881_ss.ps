%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[169.96231079 588.23309326]
[172.89244080 573.47998047]
[178.40994263 559.48724365]
[186.33746338 546.70465088]
[196.42016602 535.54315186]
[208.33392334 526.36151123]
[221.69575500 519.45495605]
[217.29475403 505.11508179]
[212.89376831 490.77523804]
[208.49276733 476.43539429]
[204.09176636 462.09555054]
[190.85375977 455.36572266]
[186.18623352 440.88577271]
[193.33486938 427.04614258]
[188.93386841 412.70629883]
[184.53286743 398.36645508]
[180.13186646 384.02661133]
[175.73086548 369.68676758]
[170.76321411 364.21463013]
[171.37281799 355.10055542]
[167.18580627 340.69677734]
[156.73922729 334.59796143]
[153.13307190 322.63220215]
[158.82276917 311.05679321]
[154.85067749 296.59225464]
[150.87858582 282.12774658]
[146.90647888 267.66320801]
[142.93438721 253.19868469]
[138.96229553 238.73416138]
[128.13093567 228.51011658]
[131.93765259 213.15370178]
[127.96555328 198.68917847]
[123.99346161 184.22465515]
[119.27332306 169.98667908]
[113.81797028 156.01387024]
[108.36260986 142.04107666]
[102.90725708 128.06828308]
[97.45189667 114.09548187]
[86.65695953 105.20948029]
[88.57530212 91.35987854]
[83.11994934 77.38707733]
[77.66458893 63.41427994]
[72.20923615 49.44148254]
[66.75387573 35.46868515]
[51.64926529 33.06077576]
[39.85579681 23.47897911]
[34.47760391 9.37431908]
[36.86550522 -5.42952776]
[46.27933502 -16.97272301]
[40.82397842 -30.94552040]
[26.18441772 -42.11533356]
[29.50550652 -59.34720230]
[23.84272003 -73.23722839]
[18.17993355 -87.12725830]
[12.51714706 -101.01728821]
[6.85436058 -114.90731049]
[1.08832693 -128.75479126]
[-4.78063393 -142.55897522]
[-10.64959431 -156.36314392]
[-12.38084221 -141.46339417]
[-19.31304550 -128.16134644]
[-30.53415680 -118.20711517]
[-44.56784058 -112.91035461]
[-59.56772995 -112.96794891]
[-73.56033325 -118.37231445]
[-84.70467377 -128.41241455]
[-91.53453064 -141.76730347]
[-93.15131378 -156.67991638]
[-89.34230804 -171.18823242]
[-80.60865784 -183.38345337]
[-68.09941864 -191.66107178]
[-53.46039963 -194.93203735]
[-38.61761856 -192.76597595]
[-25.52389145 -185.44789124]
[-15.90075874 -173.93852234]
[-18.56655502 -188.69975281]
[-21.23234940 -203.46096802]
[-31.29904366 -215.66638184]
[-25.94679832 -229.56611633]
[-28.61259460 -244.32733154]
[-31.49786758 -259.04724121]
[-34.60197830 -273.72253418]
[-37.70608902 -288.39782715]
[-40.81019592 -303.07315063]
[-43.91430664 -317.74844360]
[-58.97728348 -317.98196411]
[-73.61050415 -321.56198120]
[-87.07998657 -328.30889893]
[-98.71009064 -337.88430786]
[-107.91746521 -349.80789185]
[-114.24027252 -363.48159790]
[-117.36135864 -378.21951294]
[-117.12417603 -393.28244019]
[-113.54061890 -407.91479492]
[-106.79043579 -421.38262939]
[-97.21221924 -433.01040649]
[-85.28639984 -442.21490479]
[-71.61117554 -448.53439331]
[-56.87248993 -451.65191650]
[-41.80963135 -451.41107178]
[-27.17814255 -447.82397461]
[-13.71193695 -441.07052612]
[-2.08647108 -431.48950195]
[7.11512566 -419.56146240]
[13.43130589 -405.88470459]
[16.54525185 -391.14526367]
[16.30076790 -376.08245850]
[12.71012020 -361.45184326]
[5.95341158 -347.98727417]
[-3.63044238 -336.36413574]
[-15.56072044 -327.16540527]
[-29.23900604 -320.85253906]
[-26.13489532 -306.17724609]
[-23.03078461 -291.50195312]
[-19.92667580 -276.82662964]
[-16.82256508 -262.15133667]
[-13.37944317 -258.84167480]
[-11.97888565 -253.33389282]
[-13.85137749 -246.99313354]
[-11.18558216 -232.23191833]
[-1.30956352 -221.08232117]
[-6.47113228 -206.12675476]
[-3.80533695 -191.36553955]
[-1.13954139 -176.60432434]
[3.15458226 -162.23211670]
[9.02354336 -148.42793274]
[14.89250374 -134.62376404]
[20.40249062 -129.69813538]
[20.74438667 -120.57009888]
[26.40717316 -106.68006897]
[32.06996155 -92.79004669]
[37.73274612 -78.90001678]
[43.39553452 -65.00999451]
[54.41991043 -60.03107071]
[59.25135040 -48.50540543]
[54.79677582 -36.40087891]
[60.25213623 -22.42807961]
[74.99694061 -20.31706810]
[86.78378296 -11.04742241]
[92.38523102 2.97007036]
[90.20396423 18.00798416]
[80.72667694 30.01332855]
[86.18202972 43.98612595]
[91.63739014 57.95892334]
[97.09274292 71.93172455]
[102.54810333 85.90451813]
[113.34304047 94.79051971]
[111.42469788 108.64012146]
[116.88005066 122.61292267]
[122.33541107 136.58572388]
[127.79076385 150.55851746]
[133.24612427 164.53131104]
[139.18836975 150.75852966]
[152.53646851 143.91540527]
[167.18785095 147.13053894]
[176.44409180 158.93402100]
[176.07337952 173.92942810]
[166.24517822 185.26109314]
[151.45283508 187.74832153]
[138.45797729 180.25256348]
[142.43008423 194.71708679]
[146.40217590 209.18161011]
[157.51763916 220.44024658]
[153.42681885 234.76206970]
[157.39891052 249.22659302]
[161.37100220 263.69113159]
[165.34310913 278.15563965]
[169.31520081 292.62017822]
[173.28729248 307.08468628]
[186.68536377 319.71691895]
[181.58958435 336.50976562]
[185.77659607 350.91354370]
[190.07072449 365.28576660]
[194.47171021 379.62561035]
[198.87271118 393.96545410]
[203.27371216 408.30529785]
[207.67471313 422.64514160]
[221.35624695 430.09185791]
[225.61521912 444.69717407]
[218.43161011 457.69454956]
[222.83261108 472.03439331]
[227.23361206 486.37423706]
[231.63461304 500.71408081]
[236.03559875 515.05395508]
[250.97140503 513.27581787]
[265.98464966 514.19335938]
[280.59277344 517.77703857]
[294.32614136 523.91174316]
[306.74328613 532.40020752]
[317.44506836 542.96960449]
[326.08743286 555.28015137]
[332.39260864 568.93603516]
[336.15789795 583.49841309]
[337.26226807 598.49908447]
[335.67016602 613.45587158]
[331.43283081 627.88793945]
[324.68646240 641.33135986]
[315.64791870 653.35406494]
[304.60775757 663.56945801]
[291.92086792 671.64923096]
[277.99508667 677.33361816]
[263.27804565 680.43988037]
[248.24288940 680.86822510]
[233.37289429 678.60479736]
[219.14607239 673.72247314]
[206.01977539 666.37805176]
[194.41593933 656.80773926]
[184.70759583 645.31915283]
[177.20683289 632.28161621]
[172.15473938 618.11419678]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 184]
[8 183]
[9 182]
[10 181]
[11 180]
[14 177]
[15 176]
[16 175]
[17 174]
[18 173]
[20 172]
[21 171]
[24 169]
[25 168]
[26 167]
[27 166]
[28 165]
[29 164]
[31 162]
[32 161]
[33 160]
[34 152]
[35 151]
[36 150]
[37 149]
[38 148]
[40 146]
[41 145]
[42 144]
[43 143]
[44 142]
[49 137]
[50 136]
[52 133]
[53 132]
[54 131]
[55 130]
[56 129]
[57 127]
[58 126]
[59 125]
[75 124]
[76 123]
[77 122]
[79 120]
[80 119]
[81 116]
[82 115]
[83 114]
[84 113]
[85 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
