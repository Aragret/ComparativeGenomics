%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[78.11578369 688.54901123]
[69.18350220 701.38446045]
[54.07707596 705.42547607]
[39.92930222 698.76403809]
[33.42032242 684.54547119]
[37.62347794 669.48339844]
[50.55416870 660.68957520]
[51.89240646 645.74938965]
[53.23064041 630.80920410]
[54.56887436 615.86901855]
[55.90710831 600.92883301]
[57.24534225 585.98864746]
[49.01458740 570.48956299]
[59.73263550 555.51605225]
[60.84828568 540.55761719]
[61.96393204 525.59918213]
[52.08003998 514.51568604]
[52.99837494 499.32977295]
[64.69079590 489.03778076]
[65.80644226 474.07931519]
[66.92209625 459.12088013]
[68.03774261 444.16241455]
[69.15338898 429.20397949]
[55.16135406 421.48556519]
[45.90232849 408.39038086]
[43.27142715 392.51077271]
[47.84543610 377.01757812]
[58.75730133 365.02697754]
[73.85997772 358.97363281]
[74.75279999 344.00021362]
[75.64561462 329.02682495]
[76.53842926 314.05340576]
[74.09464264 309.95013428]
[74.20257568 304.26809692]
[77.68730164 298.64953613]
[79.02553558 283.70935059]
[80.36376953 268.76916504]
[73.79279327 255.40235901]
[82.73043060 242.34750366]
[76.15945435 228.98069763]
[85.09709167 215.92584229]
[86.43532562 200.98565674]
[79.86434937 187.61885071]
[88.80198669 174.56399536]
[90.14022064 159.62380981]
[91.47845459 144.68362427]
[92.81668854 129.74343872]
[93.15166473 114.74718475]
[85.04602814 106.38417816]
[84.61260986 94.74573517]
[92.07379150 85.80301666]
[91.62718201 70.80966949]
[91.18058014 55.81631851]
[75.37171173 51.83707428]
[61.33040237 43.58229446]
[50.18455887 31.72416496]
[42.82693481 17.22394943]
[39.84362793 1.25407302]
[41.46741867 -14.89668369]
[47.55959702 -29.92718506]
[57.62180328 -42.62875748]
[70.83676147 -51.98239517]
[86.13467407 -57.24050140]
[85.24185944 -72.21390533]
[84.23760223 -87.18025208]
[83.12195587 -102.13870239]
[82.00630188 -117.09716034]
[80.89065552 -132.05561829]
[79.77500916 -147.01406860]
[78.65935516 -161.97251892]
[77.54370880 -176.93096924]
[76.42806244 -191.88941956]
[75.31240845 -206.84788513]
[74.19676208 -221.80633545]
[70.79608154 -227.47615051]
[70.77275848 -233.15914917]
[73.27735901 -237.22560120]
[72.60757446 -252.21064758]
[60.71312332 -243.07160950]
[46.11595154 -246.52450562]
[39.57654953 -260.02398682]
[45.91552353 -273.61874390]
[60.46001816 -277.28723145]
[72.48760223 -268.32662964]
[69.61508179 -276.99761963]
[73.05412292 -283.53939819]
[65.94075012 -297.67129517]
[74.23863220 -310.04040527]
[74.90841675 -325.02542114]
[75.57820129 -340.01046753]
[72.87536621 -346.04421997]
[73.52752686 -351.68972778]
[76.49760437 -355.42974854]
[69.80814362 -369.76715088]
[78.47062683 -381.88369751]
[79.58627319 -396.84216309]
[80.70191956 -411.80062866]
[81.81757355 -426.75906372]
[82.93321991 -441.71752930]
[69.00870514 -447.66616821]
[57.77185440 -457.81567383]
[50.44156265 -471.06503296]
[47.81296158 -485.97708130]
[50.17118073 -500.93426514]
[57.26042557 -514.31414795]
[68.31169891 -524.66540527]
[82.12625122 -530.86511230]
[97.20557404 -532.24090576]
[111.91397858 -528.64349365]
[124.65600586 -520.46301270]
[134.04949951 -508.58697510]
[139.07551575 -494.30349731]
[139.18888855 -479.16195679]
[134.37728882 -464.80484009]
[125.16267395 -452.78942871]
[112.54456329 -444.41912842]
[97.89167023 -440.60186768]
[96.77602386 -425.64343262]
[95.66037750 -410.68496704]
[94.54473114 -395.72650146]
[93.42907715 -380.76806641]
[100.19833374 -367.50054932]
[91.45605469 -354.31408691]
[90.56324005 -339.34069824]
[89.89345551 -324.35565186]
[89.22367096 -309.37060547]
[96.38494873 -296.31054688]
[88.03916168 -282.86962891]
[87.48094940 -267.88000488]
[87.59261322 -252.88043213]
[88.26239777 -237.89538574]
[89.15522003 -222.92198181]
[90.27086639 -207.96353149]
[91.38651276 -193.00508118]
[92.50215912 -178.04661560]
[93.61781311 -163.08816528]
[94.73345947 -148.12971497]
[95.84910583 -133.17126465]
[96.96475983 -118.21280670]
[98.08040619 -103.25435638]
[99.19605255 -88.29589844]
[102.82833862 -81.85942078]
[100.21526337 -73.10672760]
[101.10808563 -58.13331985]
[114.63223267 -55.52185440]
[127.14336395 -49.73677063]
[137.90814209 -41.11191559]
[146.29435730 -30.14772797]
[151.80804443 -17.48221970]
[154.12251282 -3.85384178]
[153.09780884 9.94157314]
[148.78909302 23.09727859]
[141.44367981 34.84279251]
[131.48692322 44.48902130]
[119.49753571 51.46869659]
[106.17392731 55.36971283]
[106.62053680 70.36306763]
[107.06713867 85.35641479]
[116.24847412 99.39491272]
[108.13670349 114.07740021]
[116.91883850 101.91704559]
[130.84196472 96.33612823]
[145.59184265 99.06394958]
[156.59806824 109.25527191]
[160.45024109 123.75218964]
[155.95472717 138.06268311]
[144.50450134 147.75250244]
[129.64755249 149.81912231]
[115.98745728 143.62220764]
[107.75687408 131.08168030]
[106.41864014 146.02186584]
[105.08040619 160.96205139]
[103.74217224 175.90223694]
[110.21743011 190.33766174]
[101.37551117 202.32389832]
[100.03727722 217.26408386]
[106.51253510 231.69950867]
[97.67061615 243.68574524]
[104.14586639 258.12115479]
[95.30395508 270.10739136]
[93.96571350 285.04757690]
[92.62747955 299.98776245]
[91.51183319 314.94622803]
[90.61901855 329.91961670]
[89.72620392 344.89303589]
[88.83338928 359.86645508]
[101.43303680 366.26919556]
[110.61287689 376.95822144]
[115.01198578 390.29812622]
[113.99754333 404.26455688]
[107.75565338 416.75128174]
[97.25822449 425.88781738]
[84.11184692 430.31961060]
[82.99619293 445.27807617]
[81.88054657 460.23651123]
[80.76490021 475.19497681]
[79.64925385 490.15341187]
[89.68558502 502.06600952]
[88.34107208 517.22009277]
[76.92238617 526.71484375]
[75.80673981 541.67327881]
[74.69108582 556.63171387]
[82.50108337 566.89654541]
[81.26390839 579.33251953]
[72.18552399 587.32684326]
[70.84729004 602.26702881]
[69.50905609 617.20721436]
[68.17082214 632.14739990]
[66.83258820 647.08758545]
[65.49435425 662.02777100]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 210]
[8 209]
[9 208]
[10 207]
[11 206]
[12 205]
[14 202]
[15 201]
[16 200]
[19 197]
[20 196]
[21 195]
[22 194]
[23 193]
[29 186]
[30 185]
[31 184]
[32 183]
[35 182]
[36 181]
[37 180]
[39 178]
[41 176]
[42 175]
[44 173]
[45 172]
[46 171]
[47 170]
[48 160]
[51 158]
[52 157]
[53 156]
[63 144]
[64 143]
[65 141]
[66 140]
[67 139]
[68 138]
[69 137]
[70 136]
[71 135]
[72 134]
[73 133]
[74 132]
[77 131]
[78 130]
[84 129]
[86 128]
[88 126]
[89 125]
[90 124]
[93 123]
[95 121]
[96 120]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
