%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCAAUAAAAGCAAUUACAAUCAUUCCCACCCCUUCGCUCCAACUGGACAAUCCCACUCUUCUUAAUAAGCUCACGAUAUCCGCGAACAGUCCCUCCAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[119.21606445 507.20343018]
[115.44807434 492.64175415]
[114.34094238 477.64129639]
[115.93024445 462.68423462]
[120.16490173 448.25137329]
[126.90877533 434.80667114]
[135.94509888 422.78231812]
[146.98336792 412.56488037]
[159.66876221 404.48275757]
[173.59349060 398.79577637]
[170.48937988 384.12048340]
[167.38526917 369.44519043]
[164.28115845 354.76986694]
[161.06788635 340.11810303]
[157.74562073 325.49063110]
[154.42337036 310.86315918]
[150.99230957 296.26083374]
[147.45263672 281.68447876]
[143.91296387 267.10809326]
[140.37329102 252.53172302]
[136.83361816 237.95535278]
[132.75395203 223.52079773]
[128.13993835 209.24806213]
[123.52593231 194.97532654]
[118.91191864 180.70259094]
[114.29791260 166.42985535]
[109.68389893 152.15713501]
[104.96376801 137.91914368]
[100.13777161 123.71668243]
[95.31176758 109.51422882]
[89.96058655 95.50120544]
[84.09162140 81.69702911]
[78.22266388 67.89285278]
[72.35370636 54.08867264]
[66.48474121 40.28449631]
[59.70475006 26.90422249]
[52.04415131 14.00789642]
[44.38355637 1.11156952]
[36.72295761 -11.78475761]
[24.50726509 -9.49196339]
[12.20147324 -11.05422306]
[0.99048114 -16.30599594]
[-8.05086994 -24.72721481]
[-14.06083965 -35.49475479]
[-16.47290993 -47.56287384]
[-15.06916046 -59.76476288]
[-9.99986744 -70.92536926]
[-1.76757216 -79.97455597]
[-8.84467793 -93.20008087]
[-15.92178345 -106.42560577]
[-31.78493690 -115.77664185]
[-30.53506088 -133.28106689]
[-37.80828857 -146.39976501]
[-45.08152008 -159.51844788]
[-52.45220947 -172.58264160]
[-59.91995239 -185.59158325]
[-67.38769531 -198.60054016]
[-80.96837616 -206.71691895]
[-80.59436798 -221.60682678]
[-94.33626556 -215.55767822]
[-108.64331818 -211.00350952]
[-123.35339355 -207.99589539]
[-138.29981995 -206.56893921]
[-153.31326294 -206.73880005]
[-168.22358704 -208.50357056]
[-182.86184692 -211.84321594]
[-197.06219482 -216.71994019]
[-210.66371155 -223.07844543]
[-223.51229858 -230.84671021]
[-235.46237183 -239.93670654]
[-246.37850952 -250.24543762]
[-256.13702393 -261.65609741]
[-264.62738037 -274.03939819]
[-271.75332642 -287.25503540]
[-277.43414307 -301.15325928]
[-281.60546875 -315.57656860]
[-284.22003174 -330.36157227]
[-285.24822998 -345.34072876]
[-284.67837524 -360.34429932]
[-282.51693726 -375.20230103]
[-278.78839111 -389.74636841]
[-273.53503418 -403.81173706]
[-266.81634521 -417.23898315]
[-258.70846558 -429.87603760]
[-249.30326843 -441.57962036]
[-238.70730591 -452.21719360]
[-227.04066467 -461.66821289]
[-214.43551636 -469.82556152]
[-201.03469849 -476.59683228]
[-186.99005127 -481.90530396]
[-172.46070862 -485.69082642]
[-157.61128235 -487.91049194]
[-142.61006165 -488.53915405]
[-127.62699127 -487.56970215]
[-112.83185577 -485.01312256]
[-98.39229584 -480.89837646]
[-84.47192383 -475.27206421]
[-71.22845459 -468.19796753]
[-58.81196594 -459.75625610]
[-47.36313248 -450.04254150]
[-37.01168442 -439.16690063]
[-27.87490845 -427.25256348]
[-20.05633354 -414.43450928]
[-13.64454937 -400.85803223]
[-8.71220589 -386.67691040]
[-5.31519175 -372.05184937]
[-3.49199653 -357.14855957]
[-3.26327872 -342.13589478]
[-4.63162994 -327.18399048]
[-7.58154583 -312.46221924]
[-12.07960129 -298.13745117]
[-18.07482910 -284.37191772]
[-25.49930191 -271.32165527]
[-34.26889038 -259.13452148]
[-44.28422928 -247.94859314]
[-55.43184280 -237.89062500]
[-67.58541107 -229.07456970]
[-54.53886795 -221.88868713]
[-54.37873840 -206.06828308]
[-46.91099930 -193.05932617]
[-39.44325638 -180.05038452]
[-33.38699341 -175.81440735]
[-31.96282578 -166.79168701]
[-24.68959618 -153.67298889]
[-17.41636658 -140.55429077]
[-5.87845182 -136.92068481]
[0.28836021 -126.05081177]
[-2.69625545 -113.50271606]
[4.38084984 -100.27718353]
[11.45795536 -87.05165863]
[29.09688568 -88.46022797]
[45.62364960 -81.99027252]
[57.68997955 -68.90280151]
[62.82952118 -51.80447006]
[59.96186447 -34.12850571]
[49.61928558 -19.44535446]
[57.27988434 -6.54902792]
[64.94048309 6.34729910]
[72.60107422 19.24362564]
[74.60696411 4.37835026]
[84.24989319 -7.11138248]
[98.54189301 -11.66535282]
[113.05444336 -7.87246418]
[123.29065704 3.09201574]
[126.07874298 17.83062363]
[120.55478668 31.77644157]
[108.43042755 40.60820770]
[93.46254730 41.58929825]
[80.28891754 34.41553497]
[86.15788269 48.21971130]
[92.02684021 62.02389145]
[97.89579773 75.82806396]
[103.76476288 89.63224030]
[111.71119690 76.91004944]
[126.59404755 75.03901672]
[137.44223022 85.39840698]
[136.25886536 100.35165405]
[123.91629791 108.87578583]
[109.51422882 104.68823242]
[114.34022522 118.89068604]
[119.16622162 133.09313965]
[124.89024353 140.21166992]
[123.95663452 147.54312134]
[128.57064819 161.81585693]
[133.18464661 176.08859253]
[137.79866028 190.36131287]
[142.41267395 204.63404846]
[147.02668762 218.90678406]
[156.07644653 206.94427490]
[171.06687927 206.40847778]
[180.94758606 217.69438171]
[178.43487549 232.48243713]
[165.38102722 239.87142944]
[151.40998840 234.41567993]
[154.94966125 248.99205017]
[158.48933411 263.56842041]
[162.02900696 278.14480591]
[165.56867981 292.72119141]
[170.63479614 300.32199097]
[169.05082703 307.54092407]
[172.37307739 322.16836548]
[175.69534302 336.79583740]
[180.64772034 344.47122192]
[178.95646667 351.66577148]
[182.06057739 366.34106445]
[185.16467285 381.01638794]
[188.26878357 395.69168091]
[203.30366516 395.25314331]
[218.17520142 397.50643921]
[232.40531921 402.37911987]
[245.53662109 409.71459961]
[257.14694214 419.27700806]
[266.86309814 430.75900269]
[274.37271118 443.79147339]
[279.43444824 457.95547485]
[281.88552856 472.79568481]
[281.64718628 487.83508301]
[278.72705078 502.59017944]
[273.21905518 516.58666992]
[265.30023193 529.37463379]
[255.22511292 540.54296875]
[243.31759644 549.73266602]
[229.96046448 556.64831543]
[215.58306885 561.06768799]
[200.64759827 562.84857178]
[185.63417053 561.93383789]
[171.02540588 558.35284424]
[157.29090881 552.22064209]
[144.87217712 543.73449707]
[134.16844177 533.16711426]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 187]
[11 186]
[12 185]
[13 184]
[14 182]
[15 181]
[16 180]
[17 178]
[18 177]
[19 176]
[20 175]
[21 174]
[22 168]
[23 167]
[24 166]
[25 165]
[26 164]
[27 163]
[28 161]
[29 160]
[30 159]
[31 153]
[32 152]
[33 151]
[34 150]
[35 149]
[36 139]
[37 138]
[38 137]
[39 136]
[48 130]
[49 129]
[50 128]
[52 125]
[53 124]
[54 123]
[55 121]
[56 120]
[57 119]
[59 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
