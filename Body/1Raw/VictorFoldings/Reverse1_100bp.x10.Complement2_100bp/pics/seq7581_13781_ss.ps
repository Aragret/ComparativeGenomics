%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[355.79272461 313.69131470]
[344.10516357 304.28918457]
[332.41757202 294.88702393]
[320.72998047 285.48486328]
[309.04241943 276.08273315]
[297.35482788 266.68057251]
[285.66723633 257.27841187]
[273.97967529 247.87626648]
[260.14105225 253.38615417]
[245.30387878 251.21499634]
[233.46734619 241.84681702]
[227.87246704 227.71903992]
[230.11491394 212.58898926]
[218.42733765 203.18682861]
[206.73976135 193.78468323]
[195.05216980 184.38253784]
[183.36459351 174.98037720]
[171.67701721 165.57823181]
[159.91975403 156.26335144]
[148.09349060 147.03625488]
[136.26722717 137.80914307]
[124.44094849 128.58204651]
[113.29125977 135.18005371]
[100.56415558 137.60285950]
[87.77009583 135.56294250]
[76.42749023 129.30239868]
[67.88248444 119.56422424]
[63.14920044 107.50415802]
[62.78939438 94.55349731]
[66.84575653 82.24922180]
[55.29945755 72.67410278]
[43.75315475 63.09898376]
[32.20685577 53.52386475]
[37.67842102 67.49032593]
[38.11237717 82.48404694]
[33.45774460 96.74358368]
[24.26134491 108.59373474]
[11.60355949 116.64237213]
[-3.02858639 119.94393158]
[-17.91612244 118.11055756]
[-31.31007767 111.35763550]
[-41.63694000 100.47848511]
[-47.68352509 86.75118256]
[-48.73947906 71.78839111]
[-44.68075562 57.34793854]
[-35.98416901 45.12626266]
[-23.67138290 36.55915833]
[-9.18889141 32.65307617]
[5.76191521 33.86690521]
[19.42592812 40.05892563]
[4.97699070 33.61386490]
[3.57897043 18.78501511]
[-5.38172579 6.75563669]
[-14.34242153 -5.27374077]
[-23.30311775 -17.30311775]
[-32.26381302 -29.33249664]
[-45.21883011 -21.74100685]
[-58.93035889 -15.62077618]
[-73.23194885 -11.04610157]
[-87.94999695 -8.07251453]
[-102.90583801 -6.73611116]
[-117.91792297 -7.05311394]
[-132.80401611 -9.01967525]
[-147.38342285 -12.61192322]
[-161.47915649 -17.78624916]
[-174.92008972 -24.47984505]
[-187.54309082 -32.61145401]
[-199.19491577 -42.08236694]
[-209.73413086 -52.77761459]
[-219.03277588 -64.56736755]
[-226.97799683 -77.30850983]
[-233.47334290 -90.84637451]
[-238.43995667 -105.01661682]
[-241.81755066 -119.64723969]
[-243.56512451 -134.56062317]
[-243.66146851 -149.57574463]
[-242.10542297 -164.51033020]
[-238.91584778 -179.18309021]
[-234.13150024 -193.41590881]
[-227.81040955 -207.03601074]
[-220.02935791 -219.87806702]
[-210.88276672 -231.78617859]
[-200.48167419 -242.61579895]
[-188.95234680 -252.23545837]
[-176.43473816 -260.52838135]
[-163.08081055 -267.39392090]
[-149.05264282 -272.74868774]
[-134.52053833 -276.52774048]
[-119.66090393 -278.68518066]
[-104.65412140 -279.19479370]
[-89.68236542 -278.05044556]
[-74.92736816 -275.26596069]
[-60.56824493 -270.87518311]
[-46.77930832 -264.93142700]
[-33.72793579 -257.50680542]
[-21.57256508 -248.69148254]
[-10.46074772 -238.59243774]
[-0.52737230 -227.33227539]
[8.10697937 -215.04768372]
[15.33749485 -201.88778687]
[21.07640076 -188.01232910]
[25.25403404 -173.58976746]
[27.81968117 -158.79515076]
[28.74219513 -143.80807495]
[28.01038170 -128.81048584]
[25.63312340 -113.98444366]
[21.63927460 -99.50989532]
[16.07732010 -85.56257629]
[9.01477718 -72.31177521]
[0.53737694 -59.91835403]
[-9.25197220 -48.53275681]
[-20.23443604 -38.29319382]
[-11.27373981 -26.26381493]
[-2.31304383 -14.23443699]
[6.64765215 -2.20505929]
[15.60834789 9.82431889]
[29.41635704 15.40895653]
[31.45530510 31.09822845]
[41.78197479 41.97756195]
[53.32827759 51.55268097]
[64.87458038 61.12780380]
[76.42087555 70.70291901]
[91.57413483 63.34896088]
[108.41758728 63.34706116]
[123.57250977 70.69760132]
[133.99887085 83.92608643]
[137.60519409 100.37894440]
[133.66804504 116.75578308]
[145.49432373 125.98287964]
[157.32058716 135.20997620]
[169.14685059 144.43707275]
[177.83779907 147.24870300]
[181.07916260 153.89065552]
[192.76673889 163.29280090]
[204.45433044 172.69494629]
[216.14190674 182.09710693]
[227.82948303 191.49925232]
[239.51707458 200.90139771]
[253.81552124 195.46987915]
[268.81387329 197.90844727]
[280.50015259 207.46336365]
[285.79931641 221.49102783]
[283.38180542 236.18869019]
[295.06939697 245.59083557]
[306.75698853 254.99298096]
[318.44454956 264.39514160]
[330.13214111 273.79730225]
[341.81973267 283.19943237]
[353.50729370 292.60159302]
[365.19488525 302.00375366]
[375.72244263 291.30096436]
[387.26333618 281.69961548]
[399.70288086 273.29507446]
[412.91744995 266.17089844]
[426.77569580 260.39788818]
[441.13989258 256.03341675]
[455.86724854 253.12086487]
[470.81146240 251.68919373]
[485.82394409 251.75259399]
[500.75549316 253.31048584]
[515.45776367 256.34735107]
[529.78454590 260.83300781]
[543.59356689 266.72286987]
[556.74743652 273.95843506]
[569.11553955 282.46777344]
[580.57495117 292.16629028]
[591.01165771 302.95761108]
[600.32208252 314.73449707]
[608.41363525 327.37988281]
[615.20587158 340.76809692]
[620.63128662 354.76608276]
[624.63598633 369.23468018]
[627.18011475 384.03015137]
[628.23846436 399.00543213]
[627.80047607 414.01165771]
[625.87054443 428.89968872]
[622.46777344 443.52157593]
[617.62603760 457.73199463]
[611.39343262 471.38973999]
[603.83190918 484.35900879]
[595.01660156 496.51092529]
[585.03515625 507.72473145]
[573.98675537 517.88897705]
[561.98126221 526.90264893]
[549.13787842 534.67608643]
[535.58435059 541.13214111]
[521.45538330 546.20660400]
[506.89132690 549.84906006]
[492.03698730 552.02325439]
[477.03997803 552.70758057]
[462.04934692 551.89532471]
[447.21411133 549.59448242]
[432.68167114 545.82788086]
[418.59649658 540.63311768]
[405.09854126 534.06164551]
[392.32199097 526.17883301]
[380.39379883 517.06311035]
[369.43252563 506.80496216]
[359.54711914 495.50640869]
[350.83584595 483.27972412]
[343.38525391 470.24639893]
[337.26940918 456.53601074]
[332.54907227 442.28479004]
[329.27117920 427.63439941]
[327.46832275 412.73043823]
[327.15838623 397.72100830]
[328.34445190 382.75531006]
[331.01477051 367.98208618]
[335.14276123 353.54815674]
[340.68740845 339.59698486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 131]
[20 130]
[21 129]
[22 128]
[30 122]
[31 121]
[32 120]
[33 119]
[50 118]
[52 116]
[53 115]
[54 114]
[55 113]
[56 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
