%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[89.61460876 555.79223633]
[96.34124756 541.98474121]
[109.07942963 533.40368652]
[107.96378326 518.44525146]
[99.30130005 506.32867432]
[105.99076080 491.99124146]
[104.87511444 477.03280640]
[103.75946045 462.07434082]
[101.72580719 460.14501953]
[100.33384705 457.29385376]
[99.93852234 453.76126099]
[100.80127716 449.91156006]
[103.04979706 446.19699097]
[102.82646942 431.19863892]
[102.60314178 416.20031738]
[102.37981415 401.20196533]
[102.15648651 386.20364380]
[94.23055267 373.59298706]
[101.76152802 359.67913818]
[101.53820038 344.68078613]
[101.20322418 329.68453979]
[100.75662231 314.69119263]
[100.31001282 299.69784546]
[99.86341095 284.70449829]
[99.41680145 269.71115112]
[98.97019958 254.71778870]
[98.52359009 239.72444153]
[88.50938416 225.31324768]
[97.37217712 209.17222595]
[96.70239258 194.18717957]
[96.03260803 179.20214844]
[95.36281586 164.21710205]
[81.16204834 161.56680298]
[67.90961456 155.81709290]
[56.27269363 147.25741577]
[46.83710480 136.31869507]
[40.07785797 123.55159760]
[36.33523560 109.59886169]
[35.79764175 95.16289520]
[38.49214172 80.97044373]
[44.28309631 67.73597717]
[52.87896347 56.12576675]
[63.84701538 46.72428131]
[76.63509369 40.00481796]
[90.59941101 36.30565643]
[90.15280914 21.31230545]
[89.70619965 6.31895590]
[89.25959778 -8.67439461]
[88.81298828 -23.66774368]
[88.36638641 -38.66109467]
[87.91977692 -53.65444565]
[87.47317505 -68.64779663]
[85.06103516 -72.25827026]
[84.02724457 -76.06560516]
[84.26443481 -79.61231995]
[85.52768707 -82.52278137]
[87.47317505 -84.54100800]
[87.91977692 -99.53435516]
[88.36638641 -114.52770233]
[88.81298828 -129.52105713]
[78.25474548 -140.97361755]
[78.92124939 -156.17263794]
[89.90457916 -166.16773987]
[90.35118866 -181.16108704]
[90.79779816 -196.15443420]
[91.24440002 -211.14779663]
[83.92140961 -225.17221069]
[92.03422546 -237.66346741]
[89.24185181 -243.65632629]
[89.80988312 -249.31091309]
[92.72395325 -253.09472656]
[93.61676788 -268.06811523]
[94.50958252 -283.04153442]
[95.40239716 -298.01495361]
[96.29521179 -312.98834229]
[82.87342072 -316.33944702]
[70.25003815 -321.98937988]
[58.81527328 -329.76208496]
[48.92234039 -339.41592407]
[40.87656021 -350.65109253]
[34.92591476 -363.11911011]
[31.25343323 -376.43344116]
[29.97153473 -390.18167114]
[31.11860466 -403.93804932]
[34.65784073 -417.27691650]
[40.47843552 -429.78570557]
[48.39904022 -441.07778931]
[58.17341614 -450.80435181]
[69.49809265 -458.66525269]
[82.02179718 -464.41827393]
[95.35631561 -467.88644409]
[109.08857727 -468.96374512]
[110.64910126 -483.88232422]
[112.20962524 -498.80093384]
[113.77014160 -513.71954346]
[115.33066559 -528.63812256]
[116.89118958 -543.55676270]
[110.63157654 -558.08697510]
[119.65097046 -569.94024658]
[105.74230194 -575.85974121]
[94.19743347 -585.61718750]
[86.04292297 -598.34490967]
[82.00387573 -612.91125488]
[82.43942261 -628.02087402]
[87.31084442 -642.33032227]
[96.18498230 -654.56719971]
[108.27275085 -663.64343262]
[122.49930573 -668.75189209]
[137.59963989 -669.43841553]
[152.23104858 -665.64184570]
[165.09249878 -657.69995117]
[175.04035950 -646.31872559]
[181.19009399 -632.51031494]
[182.99487305 -617.50256348]
[180.29418945 -602.62982178]
[173.32820129 -589.21466064]
[162.71632385 -578.44995117]
[149.40214539 -571.29284668]
[134.56958008 -568.37969971]
[140.94081116 -554.91656494]
[131.80979919 -541.99621582]
[130.24926758 -527.07763672]
[128.68875122 -512.15899658]
[127.12822723 -497.24041748]
[125.56770325 -482.32180786]
[124.00717926 -467.40319824]
[139.49084473 -462.57324219]
[153.65168762 -454.65396118]
[165.88093567 -443.98333740]
[175.65232849 -431.01763916]
[182.54475403 -416.31201172]
[186.26045227 -400.49661255]
[186.63784790 -384.24966431]
[183.65853882 -368.26834106]
[177.44824219 -353.23895264]
[168.27145386 -339.80728149]
[156.52020264 -328.55096436]
[142.69729614 -319.95471191]
[127.39477539 -314.38928223]
[111.26862335 -312.09552002]
[110.37580109 -297.12213135]
[109.48298645 -282.14871216]
[108.59017181 -267.17532349]
[107.69735718 -252.20190430]
[107.02757263 -237.21687317]
[114.38249969 -224.26487732]
[106.23774719 -210.70118713]
[105.79114532 -195.70783997]
[105.34453583 -180.71449280]
[104.89793396 -165.72113037]
[115.26687622 -155.09001160]
[115.02754211 -139.87826538]
[103.80634308 -129.07444763]
[103.35973358 -114.08110046]
[102.91313171 -99.08775330]
[102.46652222 -84.09439850]
[102.46652222 -69.09439850]
[102.91313171 -54.10105133]
[103.35973358 -39.10770035]
[103.80634308 -24.11434937]
[104.25294495 -9.12100029]
[104.69955444 5.87234974]
[105.14615631 20.86569977]
[105.59276581 35.85905075]
[120.74597931 39.04965210]
[134.69908142 45.76611710]
[146.64491272 55.61990738]
[155.89242554 68.04100037]
[161.90666199 82.31085968]
[164.33972168 97.60399628]
[163.05085754 113.03574371]
[158.11460876 127.71339417]
[149.81655884 140.78788757]
[138.63670349 151.50286865]
[125.22180176 159.23851013]
[110.34785461 163.54731750]
[111.01764679 178.53236389]
[111.68743134 193.51739502]
[112.35721588 208.50244141]
[121.33164978 217.76647949]
[121.58101654 230.26133728]
[113.51693726 239.27783203]
[113.96354675 254.27117920]
[114.41014862 269.26452637]
[114.85675812 284.25787354]
[115.30336761 299.25122070]
[115.74996948 314.24456787]
[116.19657898 329.23794556]
[119.58010864 337.72259521]
[116.53653717 344.45745850]
[116.75986481 359.45581055]
[124.70177460 373.13925171]
[117.15482330 385.98031616]
[117.37815094 400.97863770]
[117.60147858 415.97698975]
[117.82480621 430.97531128]
[118.04813385 445.97366333]
[118.71791840 460.95870972]
[119.83356476 475.91714478]
[120.94921112 490.87561035]
[129.69149780 504.06207275]
[122.92223358 517.32958984]
[124.03788757 532.28802490]
[137.90805054 538.88452148]
[146.60850525 551.54144287]
[147.79884338 566.85418701]
[141.15888977 580.70361328]
[128.47476196 589.36431885]
[113.15840912 590.50665283]
[99.32986450 583.82330322]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 203]
[4 202]
[6 200]
[7 199]
[8 198]
[13 197]
[14 196]
[15 195]
[16 194]
[17 193]
[19 191]
[20 190]
[21 188]
[22 187]
[23 186]
[24 185]
[25 184]
[26 183]
[27 182]
[29 179]
[30 178]
[31 177]
[32 176]
[45 164]
[46 163]
[47 162]
[48 161]
[49 160]
[50 159]
[51 158]
[52 157]
[57 156]
[58 155]
[59 154]
[60 153]
[63 150]
[64 149]
[65 148]
[66 147]
[68 145]
[71 144]
[72 143]
[73 142]
[74 141]
[75 140]
[92 126]
[93 125]
[94 124]
[95 123]
[96 122]
[97 121]
[99 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
