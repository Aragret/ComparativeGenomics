%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[18.22038269 597.49530029]
[12.08800983 611.20947266]
[4.18238401 623.98382568]
[-5.35541105 635.59045410]
[-16.35516167 645.82220459]
[-28.62056351 654.49652100]
[-41.93272781 661.45849609]
[-56.05408478 666.58404541]
[-70.73262024 669.78155518]
[-85.70637512 670.99401855]
[-100.70812988 670.19976807]
[-115.47016144 667.41302490]
[-129.72901917 662.68347168]
[-143.23023987 656.09558105]
[-155.73287964 647.76690674]
[-167.01380920 637.84600830]
[-176.87170410 626.50994873]
[-185.13066101 613.96112061]
[-191.64326477 600.42346191]
[-196.29330444 586.13848877]
[-198.99777222 571.36114502]
[-199.70843506 556.35522461]
[-198.41259766 541.38842773]
[-195.13337708 526.72790527]
[-189.92930603 512.63531494]
[-182.89324951 499.36215210]
[-174.15077209 487.14526367]
[-163.85791016 476.20266724]
[-152.19833374 466.72967529]
[-139.38012695 458.89532471]
[-125.63205719 452.83941650]
[-111.19945526 448.67004395]
[-96.33990479 446.46163940]
[-81.31858063 446.25357056]
[-66.40356445 448.04959106]
[-51.86102295 451.81759644]
[-46.19823456 437.92758179]
[-40.53544998 424.03756714]
[-34.87266159 410.14752197]
[-29.20987511 396.25750732]
[-23.54708862 382.36746216]
[-18.09173203 368.39468384]
[-12.84501362 354.34219360]
[-7.59829521 340.28973389]
[-2.77229738 326.08728027]
[1.62870073 311.74743652]
[5.81571198 297.34365845]
[9.78780842 282.87911987]
[13.75990391 268.41461182]
[17.73200035 253.95007324]
[21.70409584 239.48554993]
[10.93526459 249.92739868]
[-2.98126888 255.52473450]
[-17.98106766 255.44720459]
[-31.83900261 249.70632935]
[-42.49933243 239.15373230]
[-48.38065720 225.35481262]
[-48.61051559 210.35658264]
[-43.15481567 196.38391113]
[-32.82287598 185.50958252]
[-19.14737701 179.34674072]
[-4.15699768 178.80958557]
[9.92452812 183.97782898]
[21.00828934 194.08476257]
[27.45007515 207.63110352]
[28.29454803 222.60543823]
[35.17396164 209.27600098]
[42.05337524 195.94657898]
[48.93278503 182.61715698]
[55.81219864 169.28771973]
[62.69161224 155.95829773]
[69.57102203 142.62886047]
[76.45043945 129.29943848]
[83.32984924 115.97000122]
[90.20925903 102.64057159]
[90.81377411 94.60272217]
[97.29161835 89.16503906]
[104.36872101 75.93950653]
[111.44582367 62.71398163]
[117.92532349 49.18563461]
[123.79428101 35.38145828]
[129.66323853 21.57728195]
[135.53221130 7.77310419]
[128.69247437 -8.32774448]
[135.47993469 -24.08354378]
[151.24592590 -29.93778038]
[156.90870667 -43.82780838]
[162.57150269 -57.71783447]
[151.56539917 -69.70113373]
[146.90364075 -85.22891235]
[149.47091675 -101.17787170]
[158.70315552 -114.36306763]
[172.71046448 -122.17389679]
[188.66381836 -123.09094238]
[194.11918640 -137.06373596]
[199.57453918 -151.03654480]
[204.82125854 -165.08900452]
[209.85816956 -179.21803284]
[214.89508057 -193.34706116]
[201.78692627 -200.71484375]
[190.11257935 -210.19206238]
[180.20794678 -221.50604248]
[172.35798645 -234.33126831]
[166.78858948 -248.29872131]
[163.65997314 -263.00653076]
[163.06216431 -278.03152466]
[165.01234436 -292.94140625]
[169.45443726 -307.30722046]
[176.26060486 -320.71557617]
[185.23503113 -332.78070068]
[196.11950684 -343.15548706]
[208.60087585 -351.54141235]
[222.31999207 -357.69720459]
[236.88215637 -361.44573975]
[251.86836243 -362.67916870]
[266.84744263 -361.36199951]
[281.38842773 -357.53213501]
[295.07293701 -351.29977417]
[307.50723267 -342.84423828]
[318.33355713 -332.40878296]
[327.24041748 -320.29367065]
[333.97155762 -306.84750366]
[338.33328247 -292.45712280]
[340.20013428 -277.53656006]
[339.51837158 -262.51513672]
[336.30758667 -247.82502747]
[330.66021729 -233.88891602]
[322.73870850 -221.10777283]
[312.77099609 -209.84931946]
[301.04388428 -200.43748474]
[287.89474487 -193.14308167]
[273.70193481 -188.17597961]
[258.87380981 -185.67909241]
[243.83699036 -185.72424316]
[229.02410889 -188.31015015]
[223.98719788 -174.18112183]
[218.95028687 -160.05209351]
[220.15156555 -155.42976379]
[218.46188354 -150.00370789]
[213.54733276 -145.58117676]
[208.09197998 -131.60838318]
[202.63662720 -117.63558197]
[212.57881165 -107.95979309]
[218.09967041 -95.18511963]
[218.33532715 -81.22719574]
[213.21720886 -68.19280243]
[203.48728943 -58.06193161]
[190.59080505 -52.38700867]
[176.46153259 -52.05504608]
[170.79873657 -38.16501999]
[165.13595581 -24.27499390]
[171.74586487 -13.21431446]
[170.76365662 -0.17140962]
[162.32450867 10.07511234]
[149.33638000 13.64206505]
[143.46742249 27.44624138]
[137.59846497 41.25041962]
[131.72949219 55.05459595]
[146.00935364 50.46267700]
[159.41612244 57.19011688]
[164.26980591 71.38314056]
[157.78999329 84.91133118]
[143.68859863 90.02513123]
[130.04356384 83.79512024]
[124.67135620 69.79108429]
[117.59424591 83.01661682]
[110.51714325 96.24214172]
[103.53868866 109.51998901]
[96.65927887 122.84941864]
[89.77986908 136.17884827]
[82.90045166 149.50827026]
[76.02104187 162.83770752]
[69.14162445 176.16712952]
[62.26221466 189.49656677]
[55.38280106 202.82598877]
[48.50339127 216.15542603]
[41.62397766 229.48484802]
[36.16862106 243.45764160]
[32.19652557 257.92218018]
[28.22442818 272.38668823]
[24.25233269 286.85122681]
[20.28023529 301.31573486]
[21.57956505 307.79827881]
[19.69321442 313.15911865]
[15.96854782 316.14843750]
[11.56754971 330.48828125]
[12.68982506 334.68286133]
[12.44370365 338.62036133]
[11.07803154 341.90219116]
[8.94554901 344.25146484]
[6.45417643 345.53643799]
[1.20745802 359.58892822]
[-4.03925991 373.64138794]
[-3.32345557 380.21398926]
[-5.68055582 385.38519287]
[-9.65706158 388.03027344]
[-15.31984806 401.92028809]
[-20.98263550 415.81030273]
[-26.64542198 429.70034790]
[-32.30820847 443.59036255]
[-37.97099304 457.48040771]
[-24.93920517 464.95407104]
[-13.01987553 474.09808350]
[-2.42572045 484.74926758]
[6.65419531 496.71749878]
[14.05782986 509.78918457]
[19.65305519 523.73114014]
[23.34002113 538.29443359]
[25.05292702 553.21917725]
[24.76120567 568.23913574]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 201]
[37 200]
[38 199]
[39 198]
[40 197]
[41 196]
[42 193]
[43 192]
[44 191]
[45 186]
[46 185]
[47 182]
[48 181]
[49 180]
[50 179]
[51 178]
[66 177]
[67 176]
[68 175]
[69 174]
[70 173]
[71 172]
[72 171]
[73 170]
[74 169]
[75 168]
[77 167]
[78 166]
[79 165]
[80 158]
[81 157]
[82 156]
[83 155]
[86 151]
[87 150]
[88 149]
[94 142]
[95 141]
[96 140]
[97 137]
[98 136]
[99 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
