%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[256.55273438 468.57427979]
[267.93139648 458.75875854]
[259.89019775 446.09625244]
[251.84904480 433.43371582]
[243.80786133 420.77117920]
[237.56849670 416.80987549]
[235.74285889 407.85974121]
[227.89111328 395.07888794]
[220.03935242 382.29806519]
[212.18759155 369.51721191]
[204.33584595 356.73635864]
[189.45059204 357.27938843]
[176.20397949 350.25207520]
[168.20051575 337.45321655]
[167.67453003 322.26702881]
[174.86735535 308.76849365]
[167.01560974 295.98764038]
[167.01492310 310.98764038]
[160.98777771 324.72351074]
[149.94982910 334.88046265]
[135.76118469 339.74688721]
[120.81286621 338.50274658]
[107.62393951 331.35766602]
[98.41696167 319.51571655]
[94.74347687 304.97250366]
[97.22253418 290.17877197]
[105.43635559 277.62756348]
[118.00077820 269.43392944]
[132.79847717 266.97869873]
[147.33576965 270.67559814]
[159.16395569 279.90289307]
[153.91723633 265.85040283]
[148.67051697 251.79794312]
[143.42379761 237.74546814]
[138.17707825 223.69299316]
[124.56197357 217.76303101]
[119.04087067 203.58657837]
[125.35307312 189.34600830]
[120.10635376 175.29353333]
[114.85963440 161.24105835]
[109.61291504 147.18858337]
[104.36619568 133.13612366]
[89.57698059 131.75573730]
[76.84636688 124.10343170]
[68.68871307 111.69057465]
[66.71520233 96.96877289]
[71.31561279 82.84564972]
[81.58132935 72.11059570]
[76.33460999 58.05812836]
[71.08789062 44.00565720]
[65.84117889 29.95318604]
[59.90774918 23.00823975]
[60.62265778 15.65224266]
[55.58574295 1.52321339]
[50.54882431 -12.60581589]
[47.12488937 1.99817812]
[37.77110672 13.72450829]
[24.29355431 20.30900192]
[9.29453373 20.48029900]
[-4.32988167 14.20532322]
[-13.94902802 2.69567418]
[-17.70560074 -11.82631493]
[-14.87426186 -26.55667496]
[-6.00170135 -38.65120697]
[7.19892979 -45.77464294]
[22.17879677 -46.55155945]
[36.04552078 -40.83194733]
[46.12228394 -29.71906471]
[43.67655563 -44.51833344]
[41.23082733 -59.31760406]
[38.78510284 -74.11687469]
[36.22926712 -88.89752960]
[33.56347275 -103.65874481]
[28.36170387 -89.58957672]
[18.22838402 -78.52993011]
[4.66673088 -72.12043762]
[-10.31146240 -71.31191254]
[-24.48427200 -76.22428894]
[-35.74924469 -86.12885284]
[-42.43529129 -99.55632019]
[-43.55057144 -114.51480103]
[-38.92964554 -128.78529358]
[-29.25799561 -140.25085449]
[-15.97035789 -147.21064758]
[-1.03787136 -148.63221741]
[13.32431698 -144.30468750]
[24.98566246 -134.87001038]
[32.21569061 -121.72959900]
[32.66229630 -136.72294617]
[33.10890579 -151.71630859]
[33.55551147 -166.70965576]
[18.88815689 -170.07937622]
[5.16015911 -176.24607849]
[-7.10081816 -184.97274780]
[-17.42349434 -195.92393494]
[-25.41109467 -208.67871094]
[-30.75659561 -222.74682617]
[-33.25453186 -237.58753967]
[-32.80888748 -252.63040161]
[-29.43679428 -267.29721069]
[-23.26786423 -281.02420044]
[-14.53921604 -293.28378296]
[-3.58635521 -303.60467529]
[9.16971970 -311.59020996]
[23.23869896 -316.93344116]
[38.07981110 -319.42895508]
[53.12259674 -318.98089600]
[67.78885651 -315.60641479]
[81.51486206 -309.43527222]
[93.77301025 -300.70465088]
[104.09214020 -289.75009155]
[112.07561493 -276.99273682]
[117.41655731 -262.92288208]
[119.90969086 -248.08137512]
[119.45917511 -233.03866577]
[116.08233643 -218.37295532]
[109.90896606 -204.64794922]
[101.17634583 -192.39120483]
[90.22014618 -182.07385254]
[77.46148682 -174.09243774]
[63.39077759 -168.75376892]
[48.54885864 -166.26304626]
[48.10225296 -151.26969910]
[47.65564728 -136.27635193]
[47.20904160 -121.28299713]
[48.32469177 -106.32454681]
[50.99048615 -91.56332397]
[55.27267838 -85.53965759]
[53.58437347 -76.56260681]
[56.03009796 -61.76333237]
[58.47582626 -46.96406174]
[60.92155457 -32.16479111]
[64.67785645 -17.64273262]
[69.71476746 -3.51370287]
[74.75168610 10.61532688]
[79.89364624 24.70646667]
[85.14036560 38.75893784]
[90.38708496 52.81140900]
[95.63380432 66.86388397]
[110.42301941 68.24426270]
[123.15363312 75.89656830]
[131.31127930 88.30942535]
[133.28479004 103.03122711]
[128.68438721 117.15435028]
[118.41867065 127.88940430]
[123.66539001 141.94187927]
[128.91210938 155.99433899]
[134.15882874 170.04681396]
[139.40554810 184.09928894]
[153.50605774 190.71842957]
[158.62680054 205.04438782]
[152.22955322 218.44627380]
[157.47627258 232.49874878]
[162.72299194 246.55122375]
[167.96971130 260.60369873]
[173.21641541 274.65615845]
[179.79644775 288.13589478]
[187.64820862 300.91674805]
[202.94029236 300.60192871]
[216.24890137 307.93527222]
[224.04815674 320.85958862]
[224.32920837 335.85214233]
[217.11668396 348.88461304]
[224.96844482 361.66546631]
[232.82019043 374.44628906]
[240.67195129 387.22714233]
[248.52371216 400.00799561]
[256.47039795 412.73001099]
[264.51156616 425.39254761]
[272.55273438 438.05505371]
[280.59390259 450.71759033]
[294.31640625 444.59295654]
[308.78442383 440.53167725]
[323.68960571 438.62036133]
[338.71426392 438.89968872]
[353.53811646 441.36373901]
[367.84518433 445.96002197]
[381.33050537 452.59048462]
[393.70669556 461.11389160]
[404.70989990 471.34848022]
[414.10562134 483.07617188]
[421.69354248 496.04693604]
[427.31198120 509.98434448]
[430.84115601 524.59130859]
[432.20584106 539.55645752]
[431.37692261 554.56079102]
[428.37210083 569.28454590]
[423.25543213 583.41387939]
[416.13595581 596.64758301]
[407.16543579 608.70361328]
[396.53509521 619.32495117]
[384.47146606 628.28527832]
[371.23175049 635.39349365]
[357.09808350 640.49822998]
[342.37179565 643.49053955]
[327.36676025 644.30676270]
[312.40277100 642.92938232]
[297.79882812 639.38781738]
[283.86618042 633.75762939]
[270.90182495 626.15869141]
[259.18212891 616.75305176]
[248.95683289 605.74114990]
[240.44393921 593.35778809]
[233.82487488 579.86682129]
[229.24073792 565.55584717]
[226.78924561 550.72991943]
[226.52262878 535.70507812]
[228.44659424 520.80151367]
[232.52011108 506.33691406]
[238.65637207 492.61962891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 171]
[3 170]
[4 169]
[5 168]
[7 167]
[8 166]
[9 165]
[10 164]
[11 163]
[16 158]
[17 157]
[31 156]
[32 155]
[33 154]
[34 153]
[35 152]
[38 149]
[39 148]
[40 147]
[41 146]
[42 145]
[48 139]
[49 138]
[50 137]
[51 136]
[53 135]
[54 134]
[55 133]
[68 132]
[69 131]
[70 130]
[71 129]
[72 127]
[73 126]
[88 125]
[89 124]
[90 123]
[91 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
