%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[-51.16510773 594.09027100]
[-51.38843536 579.09197998]
[-51.61176300 564.09362793]
[-51.83509064 549.09527588]
[-52.05841827 534.09692383]
[-60.72646713 546.33886719]
[-74.31259155 552.69635010]
[-89.26540375 551.50750732]
[-101.67628479 543.08312988]
[-108.30104828 529.62530518]
[-107.40800476 514.65191650]
[-99.23059845 502.07696533]
[-85.90637207 495.18746948]
[-70.91825104 495.78436279]
[-58.18409729 503.71160889]
[-51.03279495 516.89617920]
[-49.02878189 502.03067017]
[-47.02476501 487.16513062]
[-58.89990997 496.32925415]
[-73.89199066 495.84185791]
[-85.14682770 485.92578125]
[-87.51885986 471.11450195]
[-79.92362976 458.17956543]
[-65.83357239 453.03463745]
[-51.69047165 458.03192139]
[-43.96000290 470.88851929]
[-40.42033005 456.31213379]
[-36.88065720 441.73577881]
[-41.39608765 427.54211426]
[-30.62075996 415.95748901]
[-27.08108711 401.38113403]
[-41.05377960 406.83676147]
[-54.10692215 399.44653320]
[-56.61822891 384.65823364]
[-46.73645401 373.37329102]
[-31.74607658 373.91049194]
[-22.69777870 385.87222290]
[-18.08377075 371.59948730]
[-13.46976089 357.32678223]
[-8.85575104 343.05404663]
[-10.01056099 340.49972534]
[-10.22315025 337.33404541]
[-9.25560284 333.91363525]
[-7.00335646 330.67449951]
[-3.51889944 328.08364868]
[1.93645751 314.11087036]
[7.39181471 300.13806152]
[12.84717178 286.16525269]
[18.30252838 272.19247437]
[8.36033344 262.51666260]
[2.83948541 249.74200439]
[2.60382581 235.78407288]
[7.72194719 222.74967957]
[17.45185280 212.61882019]
[30.34834290 206.94389343]
[44.47762299 206.61192322]
[50.14040756 192.72190857]
[55.80319595 178.83187866]
[54.78005981 175.45762634]
[55.34043884 171.42018127]
[57.77824402 167.46917725]
[62.04146957 164.45719910]
[68.31883240 150.83387756]
[74.59619141 137.21057129]
[80.87355042 123.58724976]
[87.15090942 109.96393585]
[83.78350830 98.81485748]
[88.73607635 88.27382660]
[99.46766663 83.74897766]
[105.94716644 70.22063446]
[112.42665863 56.69228745]
[118.29562378 42.88811111]
[123.54233551 28.83563995]
[121.12083435 13.20084286]
[132.82113647 3.98389649]
[138.06785583 -10.06857491]
[140.95312500 -24.78846550]
[141.39973450 -39.78181458]
[141.84634399 -54.77516556]
[142.29295349 -69.76851654]
[142.73954773 -84.76186371]
[143.18615723 -99.75521851]
[135.86317444 -113.77964020]
[143.97598267 -126.27089691]
[144.42259216 -141.26425171]
[141.94685364 -145.85966492]
[141.52369690 -150.48289490]
[142.82002258 -154.34741211]
[145.23880005 -156.91293335]
[146.35446167 -171.87138367]
[147.47010803 -186.82983398]
[148.02832031 -201.81944275]
[148.02832031 -216.81944275]
[148.02832031 -231.81944275]
[140.29101562 -245.61961365]
[148.02832031 -258.34689331]
[148.02832031 -273.34689331]
[148.02832031 -288.34689331]
[133.97113037 -294.13168335]
[123.20125580 -304.85913086]
[117.36102295 -318.89340210]
[117.34102631 -334.09432983]
[123.14431763 -348.14389038]
[133.88592529 -358.89962769]
[147.92784119 -364.72140503]
[163.12878418 -364.72140503]
[177.17070007 -358.89962769]
[187.91230774 -348.14389038]
[193.71560669 -334.09432983]
[193.69560242 -318.89340210]
[187.85537720 -304.85913086]
[177.08549500 -294.13168335]
[163.02832031 -288.34689331]
[163.02832031 -273.34689331]
[163.02832031 -258.34689331]
[170.76560974 -245.61961365]
[163.02832031 -231.81944275]
[163.02832031 -216.81944275]
[163.02832031 -201.81944275]
[175.31898499 -210.41825867]
[189.74742126 -206.31700134]
[195.67750549 -192.53897095]
[188.73782349 -179.24082947]
[174.04402161 -176.22544861]
[162.42855835 -185.71418762]
[161.31291199 -170.75573730]
[160.19726562 -155.79728699]
[159.41593933 -140.81764221]
[158.96932983 -125.82429504]
[166.32426453 -112.87229919]
[158.17950439 -99.30860901]
[157.73291016 -84.31526184]
[157.28630066 -69.32190704]
[156.83969116 -54.32855988]
[156.39308167 -39.33520889]
[155.94648743 -24.34185982]
[163.06256104 -37.54646301]
[173.31501770 -48.49574661]
[186.02388000 -56.46348953]
[200.34619141 -60.92121506]
[215.33201599 -61.57326508]
[229.98739624 -58.37638474]
[243.34027100 -51.54261398]
[254.50503540 -41.52521133]
[262.74111938 -28.98859787]
[267.50228882 -14.76427937]
[268.47274780 0.20429446]
[265.58813477 14.92431259]
[259.03976440 28.41945076]
[249.26194763 39.79462051]
[236.90324402 48.29535294]
[222.78335571 53.35782242]
[207.83879089 54.64625168]
[193.06077576 52.07518768]
[179.42948914 45.81515884]
[167.84904480 36.28136826]
[159.08750916 24.10616112]
[153.72604370 10.09707165]
[152.12033081 -4.82185650]
[146.87361145 9.23061466]
[149.67039490 23.86028481]
[137.59480286 34.08235931]
[132.34809875 48.13483047]
[146.40866089 42.90986252]
[160.10246277 49.03194809]
[165.58505249 62.99408340]
[159.71575928 76.79811859]
[145.85678101 82.53647614]
[131.94717407 76.92196655]
[125.95500183 63.17178345]
[119.47550964 76.70012665]
[112.99600983 90.22847748]
[114.71636963 106.91429901]
[100.77422333 116.24129486]
[94.49686432 129.86460876]
[88.21950531 143.48793030]
[81.94214630 157.11123657]
[75.66478729 170.73455811]
[69.69322205 184.49465942]
[64.03043365 198.38468933]
[58.36764908 212.27471924]
[69.37375641 224.25801086]
[74.03550720 239.78579712]
[71.46823120 255.73475647]
[62.23598862 268.91995239]
[48.22868347 276.73077393]
[32.27532578 277.64782715]
[26.81996918 291.62063599]
[21.36461258 305.59341431]
[15.90925503 319.56622314]
[10.45389843 333.53900146]
[5.41698217 347.66802979]
[0.80297285 361.94076538]
[-3.81103635 376.21350098]
[-8.42504597 390.48623657]
[-12.50471210 404.92080688]
[-16.04438400 419.49716187]
[-11.78213787 434.73342896]
[-22.30428314 445.27545166]
[-25.84395409 459.85180664]
[-29.38362694 474.42819214]
[-32.15923691 489.16915894]
[-34.16325378 504.03466797]
[-36.16726685 518.90020752]
[-37.06008148 533.87359619]
[-36.83675385 548.87194824]
[-36.61342621 563.87030029]
[-36.39009857 578.86865234]
[-36.16677094 593.86694336]
[-33.68945312 613.08966064]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 209]
[2 208]
[3 207]
[4 206]
[5 205]
[16 204]
[17 203]
[18 202]
[26 201]
[27 200]
[28 199]
[30 197]
[31 196]
[37 195]
[38 194]
[39 193]
[40 192]
[45 191]
[46 190]
[47 189]
[48 188]
[49 187]
[56 181]
[57 180]
[58 179]
[62 178]
[63 177]
[64 176]
[65 175]
[66 174]
[69 172]
[70 171]
[71 170]
[72 163]
[73 162]
[75 160]
[76 159]
[77 136]
[78 135]
[79 134]
[80 133]
[81 132]
[82 131]
[84 129]
[85 128]
[89 127]
[90 126]
[91 125]
[92 119]
[93 118]
[94 117]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
