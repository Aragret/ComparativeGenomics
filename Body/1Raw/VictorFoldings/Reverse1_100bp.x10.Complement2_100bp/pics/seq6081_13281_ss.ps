%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[45.64527893 327.84042358]
[45.99470139 342.84820557]
[44.89401627 357.81964111]
[42.35350037 372.61495972]
[38.39687347 387.09600830]
[33.06107712 401.12756348]
[26.39593506 414.57864380]
[18.46367836 427.32363892]
[9.33836746 439.24356079]
[-0.89479226 450.22708130]
[-12.14025593 460.17169189]
[-24.29302406 468.98449707]
[-37.23962784 476.58325195]
[-50.85918427 482.89697266]
[-65.02452850 487.86676025]
[-79.60339355 491.44613647]
[-94.45967102 493.60174561]
[-109.45463562 494.31341553]
[-124.44828796 493.57455444]
[-139.30062866 491.39199829]
[-153.87298584 487.78616333]
[-168.02929688 482.79071045]
[-181.63737488 476.45230103]
[-194.57017517 468.83007812]
[-206.70693970 459.99523926]
[-217.93434143 450.03027344]
[-228.14756775 439.02819824]
[-237.25123596 427.09173584]
[-245.16036987 414.33239746]
[-251.80110168 400.86926270]
[-257.11145020 386.82803345]
[-261.04180908 372.33984375]
[-263.55548096 357.53994751]
[-264.62899780 342.56652832]
[-264.25234985 327.55941772]
[-262.42907715 312.65869141]
[-259.17614746 298.00354004]
[-254.52395630 283.73074341]
[-248.51594543 269.97357178]
[-241.20820618 256.86050415]
[-232.66897583 244.51396179]
[-222.97799683 233.04922485]
[-212.22572327 222.57333374]
[-200.51257324 213.18411255]
[-187.94789124 204.96920776]
[-174.64901733 198.00535583]
[-160.74011230 192.35752869]
[-146.35104370 188.07850647]
[-131.61614990 185.20822144]
[-116.67302704 183.77346802]
[-101.66118622 183.78765869]
[-86.72080231 185.25064087]
[-71.99136353 188.14877319]
[-57.61040115 192.45500183]
[-43.71219254 198.12908936]
[-30.42650223 205.11807251]
[-17.87738037 213.35670471]
[-6.18199492 222.76805115]
[4.30550623 212.04367065]
[14.79300785 201.31929016]
[25.28050804 190.59490967]
[35.76800919 179.87052917]
[46.25551224 169.14616394]
[56.74301147 158.42178345]
[65.70370483 146.39239502]
[72.97693634 133.27371216]
[80.25016785 120.15501404]
[87.52339935 107.03631592]
[87.47257233 93.05458069]
[99.35791016 85.69045258]
[106.63114166 72.57176208]
[113.90436554 59.45306396]
[113.82894135 43.63203812]
[126.76705170 36.25270462]
[134.04028320 23.13401031]
[141.31350708 10.01531601]
[148.58673096 -3.10337806]
[155.85997009 -16.22207260]
[163.13319397 -29.34076691]
[170.40641785 -42.45946121]
[177.67965698 -55.57815552]
[164.45758057 -48.49459839]
[149.47543335 -47.76290512]
[135.62603760 -53.52434540]
[125.58349609 -64.66648865]
[121.28685760 -79.03794861]
[123.56573486 -93.86382294]
[131.98011780 -106.28147888]
[144.90533447 -113.89324951]
[159.84570312 -115.22943115]
[173.91647339 -110.03201294]
[184.40083313 -99.30455017]
[189.27438354 -85.11834717]
[187.59570312 -70.21131897]
[197.08459473 -81.82858276]
[206.57350159 -93.44584656]
[216.06239319 -105.06311035]
[225.55130005 -116.68037415]
[235.04019165 -128.29763794]
[244.52909851 -139.91490173]
[233.99485779 -150.61428833]
[224.67919922 -162.38993835]
[216.69132996 -175.10375977]
[210.12493896 -188.60670471]
[205.05697632 -202.74046326]
[201.54689026 -217.33930969]
[199.63581848 -232.23210144]
[199.34616089 -247.24420166]
[200.68133545 -262.19961548]
[203.62567139 -276.92300415]
[208.14465332 -291.24176025]
[214.18528748 -304.98794556]
[221.67677307 -318.00042725]
[230.53126526 -330.12664795]
[240.64492798 -341.22442627]
[251.89923096 -351.16366577]
[264.16217041 -359.82778931]
[277.29000854 -367.11526489]
[291.12881470 -372.94061279]
[305.51632690 -377.23553467]
[320.28390503 -379.94970703]
[335.25833130 -381.05130005]
[350.26409912 -380.52737427]
[365.12521362 -378.38406372]
[379.66751099 -374.64654541]
[393.72045898 -369.35858154]
[407.11926270 -362.58224487]
[419.70684814 -354.39691162]
[431.33566284 -344.89859009]
[441.86932373 -334.19860840]
[451.18435669 -322.42248535]
[459.17153931 -309.70822144]
[465.73721313 -296.20492554]
[470.80438232 -282.07089233]
[474.31369019 -267.47186279]
[476.22396851 -252.57896423]
[476.51281738 -237.56684875]
[475.17684937 -222.61149597]
[472.23171997 -207.88825989]
[467.71197510 -193.56977844]
[461.67059326 -179.82391357]
[454.17840576 -166.81181335]
[445.32327271 -154.68606567]
[435.20898438 -143.58883667]
[423.95416260 -133.65020752]
[411.69073486 -124.98674011]
[398.56253052 -117.69998169]
[384.72338867 -111.87537384]
[370.33563232 -107.58121490]
[355.56796265 -104.86783600]
[340.59344482 -103.76706696]
[325.58773804 -104.29180908]
[310.72668457 -106.43590546]
[296.18460083 -110.17421722]
[282.13195801 -115.46291351]
[268.73352051 -122.23999786]
[256.14636230 -130.42599487]
[246.65745544 -118.80873871]
[237.16856384 -107.19147491]
[227.67965698 -95.57421112]
[218.19076538 -83.95694733]
[208.70185852 -72.33968353]
[199.21296692 -60.72241974]
[190.79835510 -48.30492401]
[183.52511597 -35.18622971]
[176.25189209 -22.06753731]
[168.97865295 -8.94884300]
[161.70542908 4.16985130]
[154.43220520 17.28854561]
[147.15896606 30.40723991]
[139.88574219 43.52593231]
[140.48139954 58.40862274]
[127.02306366 66.72629547]
[119.74983215 79.84498596]
[112.47660065 92.96368408]
[112.52742767 106.94541931]
[100.64208984 114.30954742]
[93.36885834 127.42823792]
[86.09563446 140.54693604]
[78.82240295 153.66563416]
[91.38000488 145.46156311]
[105.84162140 141.47891235]
[120.82887268 142.09725952]
[134.91325378 147.25767517]
[146.75234985 156.46832275]
[155.21772766 168.85125732]
[159.50251770 183.22625732]
[159.19831848 198.22317505]
[154.33413696 212.41259766]
[145.37358093 224.44207764]
[133.17071533 233.16505432]
[118.88865662 237.75009155]
[103.88865662 237.76017761]
[89.60043335 233.19436646]
[77.38584900 224.48782349]
[68.40911865 212.47041321]
[63.52583694 198.28755188]
[63.20146179 183.29106140]
[67.46739197 168.90927124]
[56.97988892 179.63365173]
[46.49238968 190.35803223]
[36.00488663 201.08241272]
[25.51738739 211.80679321]
[15.02988625 222.53117371]
[4.54238510 233.25555420]
[14.21256447 244.73785400]
[22.72938538 257.09985352]
[30.01332283 270.22616577]
[35.99637222 283.99420166]
[40.62266541 298.27539062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 205]
[59 204]
[60 203]
[61 202]
[62 201]
[63 200]
[64 199]
[65 180]
[66 179]
[67 178]
[68 177]
[70 175]
[71 174]
[72 173]
[74 171]
[75 170]
[76 169]
[77 168]
[78 167]
[79 166]
[80 165]
[81 164]
[94 163]
[95 162]
[96 161]
[97 160]
[98 159]
[99 158]
[100 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
