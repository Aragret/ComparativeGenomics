%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[0.38876590 649.32434082]
[-12.00740528 639.99084473]
[-16.51781082 625.14379883]
[-11.40810871 610.49212646]
[1.35691690 601.66979980]
[1.58024454 586.67144775]
[1.80357230 571.67309570]
[2.02690005 556.67474365]
[2.25022769 541.67645264]
[2.47355533 526.67810059]
[2.69688320 511.67974854]
[-6.79347801 523.29583740]
[-21.02409935 528.03814697]
[-35.58546448 524.43719482]
[-45.96557999 513.60888672]
[-48.94805527 498.90835571]
[-43.60873032 484.89080811]
[-31.60206032 475.89971924]
[-16.64844131 474.72103882]
[-3.38141251 481.72006226]
[4.08815241 494.72824097]
[6.31326962 479.89419556]
[8.53838634 465.06015015]
[10.76350403 450.22610474]
[12.98862076 435.39205933]
[15.21373844 420.55801392]
[17.43885612 405.72396851]
[15.88302135 403.39212036]
[15.15711975 400.30349731]
[15.55402660 396.77108765]
[17.24799919 393.20809937]
[20.26339149 390.08377075]
[23.36750221 375.40847778]
[26.47161293 360.73315430]
[29.57572174 346.05786133]
[32.57049561 331.35986328]
[35.45576859 316.63995361]
[38.34104156 301.92007446]
[41.22631454 287.20019531]
[44.11158752 272.48028564]
[35.61479187 260.30081177]
[38.33117676 245.33163452]
[51.16375732 236.50198364]
[38.76420975 244.94303894]
[23.82772255 243.56414795]
[13.18305492 232.99574280]
[11.69680882 218.06956482]
[20.04847336 205.60963440]
[34.41978455 201.31248474]
[48.24036407 207.14271545]
[55.19189072 220.43664551]
[59.59288788 206.09680176]
[63.99388504 191.75694275]
[68.39488220 177.41709900]
[64.73228455 162.97984314]
[76.17803192 152.05712891]
[80.57903290 137.71728516]
[84.98002625 123.37744141]
[76.49081421 114.81291962]
[72.42931366 103.45853424]
[73.56046295 91.45277405]
[79.67121887 81.05679321]
[89.61069489 74.22856903]
[101.50688934 72.25412750]
[106.33288574 58.05167007]
[103.44695282 42.49589920]
[114.86764526 32.93468094]
[119.69364166 18.73222351]
[124.51963806 4.52976799]
[129.34564209 -9.67268753]
[121.20426178 -17.74314308]
[116.68289948 -28.22158623]
[116.39958191 -39.57904053]
[120.35697174 -50.17374802]
[127.94747925 -58.48849869]
[138.04621887 -63.34787369]
[149.17762756 -64.08434296]
[154.63298035 -78.05714417]
[160.08834839 -92.02993774]
[164.91433716 -106.23239899]
[169.10134888 -120.63617706]
[173.28836060 -135.03996277]
[177.47537231 -149.44374084]
[173.89772034 -164.85513306]
[184.88009644 -174.91677856]
[189.06709290 -189.32055664]
[193.14677429 -203.75511169]
[197.11886597 -218.21963501]
[201.09095764 -232.68415833]
[205.06304932 -247.14868164]
[208.49411011 -261.75100708]
[211.37939453 -276.47088623]
[214.26466370 -291.19079590]
[207.72978210 -302.31097412]
[210.43597412 -314.51177979]
[220.40000916 -321.37069702]
[223.50411987 -336.04602051]
[226.60823059 -350.72131348]
[229.71234131 -365.39660645]
[216.03405762 -371.70947266]
[204.10377502 -380.90817261]
[194.51992798 -392.53134155]
[187.76321411 -405.99591064]
[184.17256165 -420.62652588]
[183.92808533 -435.68930054]
[187.04202271 -450.42874146]
[193.35820007 -464.10549927]
[202.55979919 -476.03356934]
[214.18527222 -485.61459351]
[227.65147400 -492.36804199]
[242.28295898 -495.95513916]
[257.34582520 -496.19598389]
[272.08450317 -493.07846069]
[285.75973511 -486.75897217]
[297.68554688 -477.55447388]
[307.26376343 -465.92669678]
[314.01394653 -452.45886230]
[317.59750366 -437.82650757]
[317.83468628 -422.76358032]
[314.71359253 -408.02563477]
[308.39080811 -394.35195923]
[299.18341064 -382.42837524]
[287.55331421 -372.85296631]
[274.08383179 -366.10604858]
[259.45062256 -362.52603149]
[244.38763428 -362.29251099]
[241.28352356 -347.61718750]
[238.17942810 -332.94189453]
[235.07531738 -318.26660156]
[241.40597534 -301.89926147]
[228.98455811 -288.30551147]
[226.09927368 -273.58563232]
[223.21400452 -258.86572266]
[236.92915344 -264.93984985]
[250.29927063 -258.13983154]
[253.46839905 -243.47843933]
[244.10038757 -231.76347351]
[229.10096741 -231.63079834]
[219.52757263 -243.17658997]
[215.55548096 -228.71206665]
[211.58338928 -214.24754333]
[207.61129761 -199.78302002]
[208.87133789 -192.50056458]
[203.47088623 -185.13354492]
[199.28387451 -170.72976685]
[203.16101074 -156.34863281]
[191.87915039 -145.25672913]
[187.69213867 -130.85295105]
[183.50514221 -116.44916534]
[179.31813049 -102.04538727]
[192.95114136 -108.30165863]
[207.06234741 -103.21502686]
[213.56820679 -89.69934082]
[208.74186707 -75.49700165]
[195.34806824 -68.74375153]
[181.05940247 -73.30815887]
[174.06114197 -86.57458496]
[168.60578918 -72.60178375]
[163.15042114 -58.62898636]
[174.13342285 -43.50725174]
[173.78045654 -24.67100525]
[162.05319214 -9.73510647]
[143.54809570 -4.84669018]
[138.72209167 9.35576534]
[133.89610291 23.55822182]
[129.07009888 37.76067734]
[132.30122375 52.30059052]
[120.53533936 62.87766647]
[115.70934296 77.08012390]
[126.29975128 91.03186035]
[126.43953705 108.54722595]
[116.07316589 122.66622162]
[99.31987762 127.77844238]
[94.91887665 142.11828613]
[90.51788330 156.45812988]
[93.86569214 171.92108154]
[82.73473358 181.81809998]
[78.33373260 196.15794373]
[73.93273926 210.49778748]
[69.53173828 224.83764648]
[65.88365173 239.38726807]
[74.43328857 252.40806580]
[71.29751587 267.29504395]
[58.83147812 275.36557007]
[55.94620514 290.08544922]
[53.06093216 304.80535889]
[50.17565918 319.52523804]
[47.29039001 334.24511719]
[48.71066666 343.26846313]
[44.25102615 349.16195679]
[41.14691544 363.83728027]
[38.04280472 378.51257324]
[34.93869400 393.18786621]
[32.27289963 407.94909668]
[30.04778099 422.78314209]
[27.82266426 437.61718750]
[25.59754753 452.45123291]
[23.37243080 467.28527832]
[21.14731407 482.11932373]
[18.92219543 496.95336914]
[17.69522095 511.90307617]
[17.47189331 526.90142822]
[17.24856567 541.89978027]
[17.02523804 556.89807129]
[16.80191040 571.89642334]
[16.57858276 586.89477539]
[16.35525513 601.89312744]
[28.85194588 611.09161377]
[33.52315140 625.88891602]
[28.57269096 640.59509277]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 207]
[6 206]
[7 205]
[8 204]
[9 203]
[10 202]
[11 201]
[21 200]
[22 199]
[23 198]
[24 197]
[25 196]
[26 195]
[27 194]
[32 193]
[33 192]
[34 191]
[35 190]
[36 188]
[37 187]
[38 186]
[39 185]
[40 184]
[43 181]
[51 180]
[52 179]
[53 178]
[54 177]
[56 175]
[57 174]
[58 173]
[64 169]
[65 168]
[67 166]
[68 165]
[69 164]
[70 163]
[77 159]
[78 158]
[79 157]
[80 150]
[81 149]
[82 148]
[83 147]
[85 145]
[86 144]
[87 142]
[88 141]
[89 140]
[90 139]
[91 133]
[92 132]
[93 131]
[96 129]
[97 128]
[98 127]
[99 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
