%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[109.29242706 434.69918823]
[122.15460968 426.54537964]
[119.92948914 411.71133423]
[117.70437622 396.87728882]
[114.46435547 393.36856079]
[113.39410400 387.78720093]
[115.64068604 381.56912231]
[113.85822296 366.67541504]
[112.07575226 351.78167725]
[102.87386322 363.62759399]
[88.23741150 366.91003418]
[74.85800171 360.12832642]
[68.85250854 346.38299561]
[72.96656799 331.95822144]
[85.31929016 323.44879150]
[100.26316833 324.74511719]
[110.96687317 335.25619507]
[110.74354553 320.25787354]
[110.52021790 305.25952148]
[109.85043335 290.27450562]
[108.73478699 275.31604004]
[107.61913300 260.35757446]
[106.50348663 245.39913940]
[105.38784027 230.44067383]
[104.04960632 215.50048828]
[102.48908234 200.58189392]
[100.92855835 185.66328430]
[99.36803436 170.74467468]
[97.80751038 155.82608032]
[96.24698639 140.90747070]
[94.68647003 125.98886871]
[93.12594604 111.07025909]
[87.92318726 125.13906860]
[79.65581512 137.65507507]
[68.75751495 147.96173096]
[55.79999161 155.51835632]
[41.46297073 159.92854309]
[26.49854088 160.96095276]
[11.69170856 158.56143188]
[-2.18078852 152.85583496]
[-14.39122868 144.14347839]
[-24.29907608 132.88139343]
[-31.38458252 119.66036224]
[-35.27606201 105.17394257]
[-35.76937103 90.18205261]
[-32.83863068 75.47114563]
[-26.63758469 61.81292725]
[-17.49152756 49.92387390]
[-5.88024139 40.42766190]
[7.58716869 33.82244492]
[22.20422745 30.45472145]
[37.20415497 30.50115395]
[51.80008698 33.95930481]
[65.22634888 40.64776993]
[76.77861786 50.21568680]
[85.85089874 62.16113663]
[91.96726990 75.85748291]
[94.80699921 90.58790588]
[98.77909851 76.12338257]
[102.75119019 61.65885925]
[102.00597382 52.55488205]
[106.89160156 47.00939178]
[111.07861328 32.60560989]
[115.26562500 18.20182800]
[119.45263672 3.79804683]
[122.33790588 -10.92184448]
[123.89842987 -25.84044838]
[125.45895386 -40.75905228]
[119.19934082 -55.28929138]
[128.21873474 -67.14254761]
[129.77925110 -82.06115723]
[120.10205078 -94.26728058]
[121.89716339 -109.37464142]
[133.59347534 -118.52514648]
[135.15400696 -133.44375610]
[136.71452332 -148.36236572]
[138.27505493 -163.28096008]
[139.83557129 -178.19956970]
[133.57595825 -192.72981262]
[142.59535217 -204.58306885]
[144.15586853 -219.50166321]
[129.48423767 -222.69636536]
[115.25308990 -227.48571777]
[101.63520050 -233.81155396]
[88.79587555 -241.59710693]
[76.89096832 -250.74786377]
[66.06499481 -261.15274048]
[56.44937134 -272.68545532]
[48.16082382 -285.20596313]
[41.29996872 -298.56228638]
[35.95009232 -312.59234619]
[32.17613220 -327.12576294]
[30.02390289 -341.98614502]
[29.51953125 -356.99310303]
[30.66913986 -371.96444702]
[33.45877075 -386.71847534]
[37.85456467 -401.07608032]
[43.80316162 -414.86291504]
[51.23234177 -427.91168213]
[60.05193329 -440.06396484]
[70.15486908 -451.17227173]
[81.41850281 -461.10168457]
[93.70611572 -469.73175049]
[106.86854553 -476.95764160]
[120.74600220 -482.69171143]
[135.17002869 -486.86428833]
[149.96554565 -489.42474365]
[164.95294189 -490.34201050]
[179.95027161 -489.60494995]
[194.77548218 -487.22250366]
[209.24862671 -483.22360229]
[223.19400024 -477.65676880]
[236.44233704 -470.58956909]
[248.83277893 -462.10784912]
[260.21496582 -452.31451416]
[270.45068359 -441.32846069]
[279.41567993 -429.28305054]
[287.00119019 -416.32452393]
[293.11505127 -402.61016846]
[297.68310547 -388.30645752]
[300.64987183 -373.58703613]
[301.97933960 -358.63055420]
[301.65536499 -343.61862183]
[299.68191528 -328.73345947]
[296.08291626 -314.15570068]
[290.90203857 -300.06237793]
[284.20223999 -286.62454224]
[276.06475830 -274.00531006]
[266.58847046 -262.35787964]
[255.88832092 -251.82363892]
[244.09426880 -242.53044128]
[231.34944153 -234.59112549]
[217.80857849 -228.10206604]
[203.63603210 -223.14201355]
[189.00384521 -219.77120972]
[174.08964539 -218.03053284]
[159.07447815 -217.94114685]
[157.51396179 -203.02253723]
[163.88519287 -189.55938721]
[154.75418091 -176.63903809]
[153.19364929 -161.72044373]
[151.63313293 -146.80183411]
[150.07260132 -131.88322449]
[148.51208496 -116.96463013]
[158.06159973 -105.59175110]
[156.69152832 -90.43993378]
[144.69786072 -80.50063324]
[143.13734436 -65.58203125]
[149.50857544 -52.11886978]
[140.37756348 -39.19853210]
[138.81703186 -24.27992630]
[137.25651550 -9.36132145]
[146.65295410 -21.05348778]
[160.15441895 -27.58882523]
[175.15396118 -27.70546341]
[188.75541687 -21.38088036]
[198.33256531 -9.83625507]
[202.03619385 4.69932699]
[199.15119934 19.41927147]
[190.23461914 31.48139000]
[177.00811768 38.55667496]
[162.02551270 39.27899933]
[148.17973328 33.50889206]
[138.14414978 22.36047554]
[133.85641479 7.98505783]
[129.66940308 22.38883972]
[125.48239136 36.79262161]
[121.29537964 51.19640350]
[117.21571350 65.63095856]
[113.24362183 80.09548187]
[109.27152252 94.56000519]
[108.04454803 109.50973511]
[109.60507202 124.42834473]
[111.16559601 139.34695435]
[112.72612000 154.26554871]
[114.28664398 169.18415833]
[115.84716034 184.10276794]
[117.40768433 199.02136230]
[118.96820831 213.93997192]
[122.53620148 219.50602722]
[122.72871399 225.18582153]
[120.34629059 229.32502747]
[121.46194458 244.28347778]
[122.57759094 259.24194336]
[123.69323730 274.20037842]
[124.80888367 289.15884399]
[127.37983704 292.65802002]
[128.58259583 296.41540527]
[128.50401306 299.96914673]
[127.37197876 302.93310547]
[125.51855469 305.03619385]
[125.74188232 320.03454590]
[125.96520996 335.03286743]
[126.96947479 349.99923706]
[128.75193787 364.89294434]
[130.53440857 379.78665161]
[132.53842163 394.65219116]
[134.76353455 409.48623657]
[136.98864746 424.32028198]
[151.67707825 428.34146118]
[163.45596313 437.99432373]
[170.28453064 451.60647583]
[170.97967529 466.81951904]
[165.42098999 480.99768066]
[154.57153320 491.68457031]
[140.31103516 497.02853394]
[125.11022949 496.10379028]
[111.60272980 489.07046509]
[102.12879944 477.14718628]
[98.32985687 462.39971924]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 199]
[3 198]
[4 197]
[7 196]
[8 195]
[9 194]
[17 193]
[18 192]
[19 191]
[20 186]
[21 185]
[22 184]
[23 183]
[24 182]
[25 179]
[26 178]
[27 177]
[28 176]
[29 175]
[30 174]
[31 173]
[32 172]
[58 171]
[59 170]
[60 169]
[62 168]
[63 167]
[64 166]
[65 165]
[66 152]
[67 151]
[68 150]
[70 148]
[71 147]
[74 144]
[75 143]
[76 142]
[77 141]
[78 140]
[80 138]
[81 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
