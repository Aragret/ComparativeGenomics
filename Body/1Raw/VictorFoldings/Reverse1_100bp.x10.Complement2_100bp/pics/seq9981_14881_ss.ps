%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[52.25410080 439.15109253]
[49.10065842 424.46401978]
[47.89130783 409.49093628]
[48.64673996 394.48812866]
[51.35402298 379.71228027]
[55.96683884 365.41625977]
[62.40625381 351.84463501]
[70.56208038 339.22964478]
[80.29476929 327.78720093]
[91.43776703 317.71304321]
[103.80040741 309.17956543]
[117.17115784 302.33282471]
[112.13423920 288.20379639]
[107.09732819 274.07473755]
[102.06040955 259.94570923]
[97.02349091 245.81669617]
[95.23849487 260.71011353]
[89.85339355 274.71014404]
[81.19750214 286.96066284]
[69.80012512 296.71258545]
[56.35821915 303.36953735]
[41.69375992 306.52447510]
[26.70348167 305.98443604]
[12.30405140 301.78250122]
[-0.62400228 294.17556763]
[-11.29012489 283.62881470]
[-19.04207802 270.78720093]
[-23.40582657 256.43597412]
[-24.11452675 241.45272827]
[-21.12483978 226.75367737]
[-14.61958694 213.23770142]
[-4.99656677 201.73129272]
[7.15576839 192.93806458]
[21.09429932 187.39575195]
[35.96668243 185.44323730]
[50.86346054 187.19993591]
[64.87368774 192.55842590]
[77.14064789 201.19102478]
[86.91419220 212.56985474]
[93.59668732 225.99913025]
[93.59668732 210.99913025]
[93.59668732 195.99913025]
[93.48502350 180.99954224]
[85.55908966 168.38887024]
[93.09006500 154.47503662]
[92.86673737 139.47669983]
[92.64340973 124.47836304]
[92.42008209 109.48002625]
[85.49763489 122.78715515]
[74.67494202 133.17317200]
[61.09415054 139.54200745]
[46.18847656 141.22155762]
[31.53095055 138.03456116]
[18.66841507 130.31736755]
[8.95828438 118.88436890]
[3.42529249 104.94213104]
[2.65334845 89.96201324]
[6.72391748 75.52488708]
[15.20742321 63.15435410]
[27.20858002 54.15589905]
[41.46088028 49.47914886]
[56.46023941 49.61765289]
[70.62374115 54.55679703]
[82.45668030 63.77534103]
[90.71029663 76.30043030]
[94.51358795 90.81044769]
[98.05326080 76.23407745]
[101.59293365 61.65769958]
[105.13260651 47.08132172]
[108.67227936 32.50494766]
[112.21195221 17.92857170]
[99.59937286 12.24551296]
[88.18104553 4.44208908]
[78.30966949 -5.23907948]
[70.28990173 -16.49739647]
[64.36891174 -28.98362160]
[60.72880554 -42.31069946]
[59.48100281 -56.06576920]
[60.66283798 -69.82293701]
[64.23642731 -83.15648651]
[70.08990479 -95.65402222]
[78.04090118 -106.92925262]
[87.84224701 -116.63392639]
[99.18962860 -124.46855927]
[111.73107147 -130.19171143]
[125.07782745 -133.62742615]
[138.81643677 -134.67059326]
[152.52156067 -133.29023743]
[156.70857239 -147.69401550]
[160.89558411 -162.09779358]
[165.08258057 -176.50157166]
[169.26959229 -190.90536499]
[171.71533203 -205.70463562]
[172.38511658 -220.68966675]
[165.27174377 -234.82156372]
[173.56962585 -247.19065857]
[174.23941040 -262.17568970]
[160.00306702 -267.25683594]
[147.89788818 -276.30981445]
[139.00027466 -288.52960205]
[134.10137939 -302.82968140]
[133.63681030 -317.93847656]
[137.64788818 -332.51251221]
[145.77793884 -345.25588989]
[157.30404663 -355.03549194]
[171.20132446 -360.98168945]
[186.23402405 -362.56573486]
[201.06546021 -359.64685059]
[214.37681580 -352.48449707]
[224.98448181 -341.71560669]
[231.94519043 -328.29772949]
[234.64004517 -313.42395020]
[232.82939148 -298.41683960]
[226.67424011 -284.61083984]
[216.72190857 -273.23358154]
[203.85733032 -265.29669189]
[189.22444153 -261.50592041]
[188.55465698 -246.52087402]
[195.71594238 -233.46080017]
[187.37014771 -220.01988220]
[186.70036316 -205.03485107]
[194.53729248 -217.82478333]
[206.23278809 -227.21707153]
[220.41291809 -232.10830688]
[235.41177368 -231.92387390]
[249.46734619 -226.68544006]
[260.92837524 -217.00840759]
[268.44842529 -204.02961731]
[271.14404297 -189.27381897]
[268.69857788 -174.47450256]
[261.39932251 -161.37028503]
[250.10374451 -151.50062561]
[236.13888550 -146.02500916]
[221.14529419 -145.58670044]
[206.88439941 -150.23718262]
[195.03157043 -159.43014526]
[186.97926331 -172.08560181]
[183.67338562 -186.71835327]
[179.48637390 -172.31455994]
[175.29936218 -157.91078186]
[171.11235046 -143.50700378]
[166.92533875 -129.10322571]
[181.30413818 -121.59838104]
[193.83215332 -111.28851318]
[203.97033691 -98.61437225]
[211.28192139 -84.11851501]
[215.45114136 -68.42205811]
[216.29698181 -52.19806290]
[213.78096008 -36.14267349]
[208.00889587 -20.94525719]
[199.22644043 -7.25879431]
[187.80867004 4.32817268]
[174.24401855 13.31684780]
[159.11341858 19.31965446]
[143.06541443 22.07694817]
[126.78832245 21.46824455]
[123.24864960 36.04462051]
[119.70898438 50.62099457]
[116.16931152 65.19737244]
[112.62963867 79.77374268]
[109.08996582 94.35012054]
[107.41841888 109.25669861]
[107.64175415 124.25503540]
[107.86508179 139.25337219]
[108.08840942 154.25170898]
[116.03031158 167.93515015]
[108.48336029 180.77621460]
[111.74018860 189.31031799]
[108.59668732 195.99913025]
[108.59668732 210.99913025]
[108.59668732 225.99913025]
[111.15251923 240.77976990]
[116.18943787 254.90881348]
[121.22635651 269.03784180]
[126.26326752 283.16687012]
[131.30018616 297.29589844]
[145.98683167 294.14035034]
[160.95971680 292.92886353]
[175.96263123 293.68215942]
[190.73887634 296.38732910]
[205.03556824 300.99810791]
[218.60812378 307.43557739]
[231.22425842 315.58959961]
[242.66810608 325.32064819]
[252.74385071 336.46221924]
[261.27908325 348.82363892]
[268.12774658 362.19342041]
[273.17266846 376.34274292]
[276.32751465 391.02954102]
[277.53826904 406.00250244]
[276.78427124 421.00537109]
[274.07839966 435.78149414]
[269.46694946 450.07797241]
[263.02880859 463.65020752]
[254.87419128 476.26596069]
[245.14259338 487.70935059]
[234.00056458 497.78454590]
[221.63873291 506.31918335]
[208.26863098 513.16723633]
[194.11904907 518.21148682]
[179.43209839 521.36560059]
[164.45910645 522.57568359]
[149.45625305 521.82098389]
[134.68028259 519.11437988]
[120.38401794 514.50225830]
[106.81208801 508.06347656]
[94.19673157 499.90823364]
[82.75380707 490.17611694]
[72.67912292 479.03359985]
[64.14506531 466.67135620]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 176]
[13 175]
[14 174]
[15 173]
[16 172]
[40 171]
[41 170]
[42 169]
[43 167]
[45 165]
[46 164]
[47 163]
[48 162]
[66 161]
[67 160]
[68 159]
[69 158]
[70 157]
[71 156]
[88 142]
[89 141]
[90 140]
[91 139]
[92 138]
[93 121]
[94 120]
[96 118]
[97 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
