%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGUCUAAGUGUUAGACUACAAAACCAAUUUGAUAUAAAUGUUCUCCUUUUGGGCCAUUACUACAGCCCCAACUCCCUAUCCUCCUCUUACCCCCUAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[67.84936523 701.04034424]
[52.87109375 701.96179199]
[37.86537552 701.79998779]
[22.91044807 700.55584717]
[8.08428001 698.23583984]
[-6.53583002 694.85198975]
[-20.87365913 690.42205811]
[-34.85445786 684.96911621]
[-48.40533066 678.52148438]
[-61.45563507 671.11291504]
[-73.93733215 662.78192139]
[-85.78533936 653.57202148]
[-96.93789673 643.53118896]
[-107.33684540 632.71179199]
[-116.92798615 621.17022705]
[-125.66130829 608.96661377]
[-133.49127197 596.16473389]
[-140.37705994 582.83117676]
[-146.28277588 569.03552246]
[-151.17764282 554.84967041]
[-155.03610229 540.34759521]
[-157.83807373 525.60491943]
[-159.56893921 510.69845581]
[-160.21966553 495.70599365]
[-159.78688049 480.70565796]
[-158.27281189 465.77563477]
[-155.68537903 450.99377441]
[-152.03805542 436.43719482]
[-147.34985352 422.18170166]
[-141.64523315 408.30169678]
[-134.95393372 394.86947632]
[-127.31082153 381.95510864]
[-118.75576782 369.62594604]
[-109.33335876 357.94619751]
[-99.09272766 346.97683716]
[-88.08725739 336.77499390]
[-76.37433624 327.39389038]
[-64.01502228 318.88241577]
[-51.07375717 311.28494263]
[-37.61800766 304.64111328]
[-23.71792603 298.98553467]
[-9.44598484 294.34771729]
[5.12340879 290.75180054]
[19.91429710 288.21658325]
[34.84956360 286.75524902]
[49.85134888 286.37542725]
[64.84143066 287.07907104]
[66.62390137 272.18536377]
[68.40636444 257.29165649]
[70.18882751 242.39793396]
[71.97129822 227.50421143]
[70.34672546 225.21972656]
[69.52918243 222.15406799]
[69.82073975 218.61141968]
[71.40788269 214.99955750]
[74.32891083 211.78683472]
[68.97666931 197.88710022]
[79.04336548 185.68168640]
[81.37885284 170.86460876]
[83.38286591 155.99908447]
[85.38687897 141.13356018]
[87.39089203 126.26802826]
[74.06159973 133.14770508]
[60.31044388 127.15556335]
[56.27426529 112.70879364]
[64.92839050 100.45700836]
[79.89331055 99.43177795]
[90.13694763 110.38728333]
[85.98612213 97.03578949]
[95.18775177 86.50860596]
[98.29186249 71.83330536]
[101.39597321 57.15800476]
[102.40023041 42.19165802]
[101.28458405 27.23320580]
[100.16893005 12.27475262]
[96.40991974 3.94963264]
[99.14971924 -2.91442418]
[98.25690460 -17.88783073]
[97.36408997 -32.86123657]
[96.47127533 -47.83464050]
[95.57845306 -62.80804825]
[86.46708679 -71.93743896]
[86.03171539 -84.42720032]
[93.96065521 -93.56275940]
[93.29087067 -108.54779816]
[92.62108612 -123.53283691]
[91.72827148 -138.50624084]
[90.61262512 -153.46469116]
[89.49697113 -168.42315674]
[88.38132477 -183.38160706]
[87.26567841 -198.34005737]
[86.15003204 -213.29850769]
[85.03437805 -228.25695801]
[70.29511261 -231.61038208]
[57.19993591 -239.16073608]
[46.91326904 -250.23664856]
[40.34979248 -263.85327148]
[38.09312439 -278.79980469]
[40.34392929 -293.74722290]
[46.90206528 -307.36639404]
[57.18438721 -318.44635010]
[70.27659607 -326.00183105]
[85.01454926 -329.36102295]
[100.08775330 -328.22525024]
[114.15590668 -322.69546509]
[125.96807861 -313.26339722]
[134.47393799 -300.76773071]
[138.91716003 -286.31958008]
[138.90264893 -271.20364380]
[134.43168640 -256.76403809]
[125.90184784 -244.28474426]
[114.07157898 -234.87536621]
[99.99283600 -229.37261963]
[101.10848236 -214.41415405]
[102.22412872 -199.45570374]
[103.33978271 -184.49725342]
[104.45542908 -169.53880310]
[105.57107544 -154.58035278]
[106.68672180 -139.62188721]
[109.65680695 -135.88188171]
[110.30895996 -130.23637390]
[107.60612488 -124.20262146]
[108.27590942 -109.21758270]
[108.94569397 -94.23254395]
[119.17335510 -79.97204590]
[110.55186462 -63.70086288]
[111.44467926 -48.72745895]
[112.33749390 -33.75405121]
[113.23030853 -18.78064537]
[114.12312317 -3.80724025]
[115.12738800 11.15910435]
[116.24303436 26.11755753]
[117.35868073 41.07601166]
[123.25878143 27.28511238]
[132.91581726 15.80724335]
[145.49438477 7.63535070]
[159.90629578 3.47638750]
[174.90476990 3.69014454]
[189.19229126 8.25813007]
[201.53286743 16.78516769]
[210.85888672 28.53358269]
[216.36357117 42.48702240]
[217.57070923 57.43836975]
[214.37586975 72.09418488]
[207.05543518 85.18659973]
[196.24270630 95.58298492]
[182.87307739 102.38394165]
[168.10316467 105.00112915]
[153.21070862 103.20813751]
[139.48406982 97.16006470]
[128.11071777 87.38014221]
[120.07456970 74.71442413]
[116.07127380 60.26211548]
[112.96716309 74.93741608]
[109.86305237 89.61271667]
[114.01387787 102.96421051]
[104.81224823 113.49139404]
[102.25641632 128.27204895]
[100.25240326 143.13757324]
[98.24839020 158.00309753]
[96.24437714 172.86863708]
[98.22859955 177.69667053]
[98.16847229 182.33883667]
[96.47713470 186.04753113]
[93.80458069 188.34747314]
[98.96614838 203.30303955]
[89.09013367 214.45263672]
[86.86501312 229.28668213]
[85.08255005 244.18040466]
[83.30007935 259.07412720]
[81.51761627 273.96783447]
[79.73514557 288.86154175]
[94.46794128 291.71508789]
[108.95641327 295.62429810]
[123.12504578 300.56875610]
[136.89994812 306.52270508]
[150.20933533 313.45510864]
[162.98377991 321.32983398]
[175.15670776 330.10580444]
[186.66464233 339.73727417]
[197.44758606 350.17401123]
[207.44934082 361.36163330]
[216.61773682 373.24179077]
[224.90496826 385.75256348]
[232.26786804 398.82870483]
[238.66799927 412.40206909]
[244.07203674 426.40185547]
[248.45178223 440.75509644]
[251.78440857 455.38696289]
[254.05253601 470.22116089]
[255.24435425 485.18035889]
[255.35362244 500.18655396]
[254.37979126 515.16149902]
[252.32794189 530.02716064]
[249.20875549 544.70599365]
[245.03851318 559.12152100]
[239.83894348 573.19848633]
[233.63714600 586.86364746]
[226.46548462 600.04565430]
[218.36131287 612.67578125]
[209.36691284 624.68817139]
[199.52915955 636.02026367]
[188.89933777 646.61297607]
[177.53289795 656.41101074]
[165.48905945 665.36334229]
[152.83065796 673.42321777]
[139.62364197 680.54876709]
[125.93690491 686.70269775]
[111.84178925 691.85296631]
[97.41178131 695.97271729]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 172]
[48 171]
[49 170]
[50 169]
[51 168]
[56 167]
[58 165]
[59 161]
[60 160]
[61 159]
[62 158]
[68 157]
[70 155]
[71 154]
[72 153]
[73 133]
[74 132]
[75 131]
[77 130]
[78 129]
[79 128]
[80 127]
[81 126]
[84 124]
[85 123]
[86 122]
[87 119]
[88 118]
[89 117]
[90 116]
[91 115]
[92 114]
[93 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
