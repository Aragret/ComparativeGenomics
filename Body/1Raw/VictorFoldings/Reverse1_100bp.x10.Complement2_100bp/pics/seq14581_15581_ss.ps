%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCUUAUUACUACAUACGAAACAAAGACAACUCACACCCAAAUCAUUACCCCAAACACCCCAAAAGAAGAUUCGGAAGAGGAUAAAUACCCCCAAAUCAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[80.03668213 551.65313721]
[65.90881348 546.58264160]
[52.29234314 540.26617432]
[39.29689789 532.75451660]
[27.02711105 524.10821533]
[15.58177757 514.39685059]
[5.05304909 503.69863892]
[-4.47430182 492.09970093]
[-12.92356491 479.69338989]
[-20.22671127 466.57965088]
[-26.32493782 452.86404419]
[-31.16914368 438.65701294]
[-34.72032928 424.07293701]
[-36.94989777 409.22921753]
[-37.83989716 394.24542236]
[-37.38316345 379.24218750]
[-35.58337784 364.34027100]
[-32.45502472 349.65966797]
[-28.02329636 335.31860352]
[-22.32387352 321.43255615]
[-15.40264511 308.11328125]
[-7.31533957 295.46804810]
[1.87292838 283.59869385]
[12.08817959 272.60073853]
[23.24816322 262.56277466]
[35.26302719 253.56558228]
[48.03602982 245.68162537]
[61.46432877 238.97439575]
[75.43980408 233.49787903]
[89.84993744 229.29617310]
[104.57870483 226.40310669]
[103.01818085 211.48449707]
[101.45765686 196.56588745]
[99.89713287 181.64729309]
[96.07482147 175.32180786]
[98.42613220 166.49519348]
[86.86735535 157.17155457]
[85.29736328 142.03913879]
[95.15522766 129.97845459]
[93.81699371 115.03826904]
[85.34600830 107.04553986]
[84.39334106 95.43805695]
[91.44776917 86.17110443]
[90.33211517 71.21265411]
[89.21646881 56.25419617]
[88.10082245 41.29574585]
[86.98516846 26.33728981]
[85.86952209 11.37883759]
[84.75387573 -3.57961607]
[83.52690125 -18.52935028]
[82.18866730 -33.46953583]
[80.85043335 -48.40972137]
[77.85565948 -63.10772324]
[73.24164581 -77.38045502]
[68.62763977 -91.65319061]
[64.01362610 -105.92592621]
[59.39962006 -120.19865417]
[54.78561020 -134.47138977]
[40.83684158 -146.49276733]
[45.17770386 -163.49641418]
[40.35170364 -177.69886780]
[35.52570724 -191.90132141]
[20.91776466 -188.44404602]
[6.04733038 -186.39100647]
[-8.95092297 -185.76081848]
[-23.94116592 -186.55915833]
[-38.78764343 -188.77882385]
[-53.35589600 -192.39970398]
[-67.51399231 -197.38899231]
[-81.13370514 -203.70153809]
[-94.09169769 -211.28013611]
[-106.27061462 -220.05616760]
[-117.56016541 -229.95014954]
[-127.85809326 -240.87248230]
[-137.07113647 -252.72425842]
[-145.11587524 -265.39813232]
[-151.91944885 -278.77929688]
[-157.42022705 -292.74664307]
[-161.56840515 -307.17361450]
[-164.32641602 -321.92956543]
[-165.66928101 -336.88085938]
[-165.58483887 -351.89212036]
[-164.07385254 -366.82736206]
[-161.14999390 -381.55133057]
[-156.83976746 -395.93072510]
[-151.18218994 -409.83526611]
[-144.22851562 -423.13906860]
[-136.04168701 -435.72164917]
[-126.69588470 -447.46899414]
[-116.27572632 -458.27478027]
[-104.87557983 -468.04113770]
[-92.59870148 -476.67959595]
[-79.55625916 -484.11193848]
[-65.86638641 -490.27081299]
[-51.65305328 -495.10052490]
[-37.04498672 -498.55725098]
[-22.17447662 -500.60974121]
[-7.17619991 -501.23941040]
[7.81401443 -500.44052124]
[22.66040993 -498.22030640]
[37.22853088 -494.59890747]
[51.38644409 -489.60906982]
[65.00592804 -483.29605103]
[77.96364594 -475.71697998]
[90.14224243 -466.94052124]
[101.43142700 -457.04611206]
[111.72895813 -446.12341309]
[120.94158173 -434.27130127]
[128.98585510 -421.59713745]
[135.78894043 -408.21569824]
[141.28921509 -394.24816895]
[145.43685913 -379.82104492]
[148.19433594 -365.06500244]
[149.53665161 -350.11364746]
[149.45166016 -335.10238647]
[147.94012451 -320.16720581]
[145.01574707 -305.44332886]
[140.70498657 -291.06408691]
[135.04690552 -277.15975952]
[128.09272766 -263.85620117]
[119.90545654 -251.27395630]
[110.55921936 -239.52691650]
[100.13866425 -228.72151184]
[88.73816681 -218.95558167]
[76.46096802 -210.31758118]
[63.41826248 -202.88572693]
[49.72816086 -196.72731018]
[54.55416107 -182.52485657]
[59.38015747 -168.32240295]
[70.08863831 -162.69613647]
[74.22549438 -150.90332031]
[69.05834198 -139.08540344]
[73.67235565 -124.81266785]
[78.28636169 -110.53993225]
[82.90036774 -96.26719666]
[87.51438141 -81.99446869]
[92.12838745 -67.72173309]
[95.18202209 -82.40762329]
[103.27333832 -95.03816986]
[115.33776855 -103.95160675]
[129.78805542 -107.97521973]
[144.72299194 -106.57962799]
[158.17762756 -99.94845581]
[168.38180542 -88.95414734]
[173.99296570 -75.04318237]
[174.27285767 -60.04579163]
[169.18467712 -45.93514252]
[159.39784241 -34.56773376]
[146.19999695 -27.43914413]
[131.32752991 -25.48725700]
[116.73718262 -28.96888161]
[104.34855652 -37.42594910]
[95.79061890 -49.74795532]
[97.12885284 -34.80776978]
[98.46708679 -19.86758423]
[102.19479370 -13.48589420]
[99.71232605 -4.69526482]
[100.82798004 10.26318836]
[101.94362640 25.22164154]
[103.05927277 40.18009567]
[104.17491913 55.13854980]
[105.29057312 70.09700012]
[106.40621948 85.05545807]
[116.20524597 98.66998291]
[108.75717926 113.70003510]
[110.09541321 128.64021301]
[121.93976593 138.75698853]
[123.08409882 153.92752075]
[113.36631775 165.15695190]
[114.81573486 180.08676147]
[116.37625885 195.00537109]
[117.93678284 209.92398071]
[119.49730682 224.84257507]
[134.50593567 224.62504578]
[149.47364807 225.75375366]
[164.27990723 228.21963501]
[178.80554199 232.00280762]
[192.93356323 237.07284546]
[206.55023193 243.38891602]
[219.54589844 250.90014648]
[231.81594849 259.54608154]
[243.26158142 269.25708008]
[253.79063416 279.95498657]
[263.31832886 291.55368042]
[271.76797485 303.95971680]
[279.07153320 317.07324219]
[285.17016602 330.78863525]
[290.01480103 344.99554443]
[293.56643677 359.57949829]
[295.79647827 374.42312622]
[296.68692017 389.40689087]
[296.23065186 404.41015625]
[294.43130493 419.31213379]
[291.30340576 433.99282837]
[286.87213135 448.33401489]
[281.17312622 462.22024536]
[274.25228882 475.53973389]
[266.16537476 488.18521118]
[256.97747803 500.05487061]
[246.76255798 511.05313110]
[235.60289001 521.09143066]
[223.58830261 530.08898926]
[210.81553650 537.97332764]
[197.38743591 544.68096924]
[183.41212463 550.15789795]
[169.00212097 554.36004639]
[154.27345276 557.25360107]
[139.34469604 558.81518555]
[124.33605957 559.03222656]
[109.36838531 557.90307617]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 173]
[32 172]
[33 171]
[34 170]
[36 169]
[39 166]
[40 165]
[43 163]
[44 162]
[45 161]
[46 160]
[47 159]
[48 158]
[49 157]
[50 155]
[51 154]
[52 153]
[53 137]
[54 136]
[55 135]
[56 134]
[57 133]
[58 132]
[60 129]
[61 128]
[62 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
