%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[135.96395874 629.94329834]
[136.96049500 614.93737793]
[140.54782104 600.33251953]
[146.61694336 586.57250977]
[154.98341370 574.07562256]
[165.39297485 563.22149658]
[177.52931213 554.34002686]
[191.02360535 547.70111084]
[186.83659363 533.29730225]
[182.64958191 518.89349365]
[178.46257019 504.48974609]
[174.27555847 490.08596802]
[170.08854675 475.68215942]
[165.90153503 461.27838135]
[161.71452332 446.87460327]
[155.38366699 460.47314453]
[142.32522583 467.85403442]
[127.40969849 466.26434326]
[116.20020294 456.29705811]
[112.87759399 441.66967773]
[118.68112946 427.83786011]
[131.44622803 419.96054077]
[146.41183472 420.97576904]
[157.99678040 430.50585938]
[155.55104065 415.70660400]
[153.10531616 400.90731812]
[150.65959167 386.10806274]
[148.21386719 371.30877686]
[145.43824768 356.56781006]
[135.23464966 345.71722412]
[139.94865417 330.61459351]
[136.84454346 315.93930054]
[133.74043274 301.26400757]
[130.63632202 286.58868408]
[127.53220367 271.91339111]
[124.42809296 257.23809814]
[121.32398987 242.56278992]
[107.25325775 241.00456238]
[94.33206177 235.16813660]
[83.82913971 225.61206055]
[76.78027344 213.26081848]
[73.88613892 199.31542969]
[75.44265747 185.13659668]
[81.31082916 172.11206055]
[90.92900085 161.52064514]
[103.36661530 154.40675354]
[100.48134613 139.68687439]
[97.48657227 124.98886108]
[94.38246155 110.31356049]
[89.34490204 124.44235992]
[79.05529022 135.35675049]
[65.24761200 141.21746826]
[50.24869919 141.03688049]
[36.58613205 134.84541321]
[26.56229401 123.68643188]
[21.86637878 109.44043732]
[23.28973007 94.50811768]
[30.59248734 81.40583801]
[42.54400635 72.34156036]
[57.13024902 68.84277344]
[71.89318085 71.49908447]
[84.34497833 79.86285400]
[92.38788605 92.52620697]
[92.16455841 77.52786255]
[91.94123077 62.52952957]
[83.99932098 48.84608459]
[91.54627228 36.00502396]
[91.32294464 21.00668716]
[91.09961700 6.00835037]
[90.87628937 -8.98998737]
[80.19585419 -17.19625854]
[76.24944305 -29.87049484]
[80.26387024 -42.31904984]
[90.56027222 -50.06589127]
[90.56027222 -65.06589508]
[90.56027222 -80.06589508]
[90.56027222 -95.06589508]
[90.56027222 -110.06589508]
[90.00205994 -125.05550385]
[88.88641357 -140.01396179]
[87.77075958 -154.97241211]
[86.65511322 -169.93086243]
[77.91283417 -183.11734009]
[84.68209076 -196.38482666]
[83.56644440 -211.34329224]
[71.87402344 -221.63526917]
[70.95568848 -236.82116699]
[80.83958435 -247.90467834]
[79.72393036 -262.86312866]
[78.60828400 -277.82159424]
[77.49263763 -292.78002930]
[76.37698364 -307.73849487]
[67.63470459 -320.92495728]
[74.40396881 -334.19244385]
[59.75107574 -338.00973511]
[47.13296127 -346.38003540]
[37.91834641 -358.39541626]
[33.10675430 -372.75256348]
[33.22011948 -387.89407349]
[38.24614334 -402.17755127]
[47.63963318 -414.05361938]
[60.38166428 -422.23406982]
[75.09006500 -425.83148193]
[90.16938782 -424.45571899]
[103.98394012 -418.25595093]
[115.03521729 -407.90472412]
[122.12445831 -394.52484131]
[124.48268127 -379.56765747]
[121.85408020 -364.65560913]
[114.52378845 -351.40625000]
[103.28693390 -341.25677490]
[89.36241913 -335.30810547]
[98.02490234 -323.19155884]
[91.33544159 -308.85412598]
[92.45108795 -293.89569092]
[93.56673431 -278.93722534]
[94.68238831 -263.97879028]
[95.79803467 -249.02032471]
[107.21672058 -239.52563477]
[108.56123352 -224.37152100]
[98.52489471 -212.45893860]
[99.64054871 -197.50047302]
[108.30302429 -185.38392639]
[101.61357117 -171.04650879]
[102.72921753 -156.08805847]
[103.84486389 -141.12960815]
[104.96051025 -126.17115021]
[116.57759094 -135.66027832]
[131.27110291 -132.64352417]
[138.20953369 -119.34471893]
[132.27813721 -105.56725311]
[117.84931183 -101.46736145]
[105.56027222 -110.06589508]
[105.56027222 -95.06589508]
[105.56027222 -80.06589508]
[105.56027222 -65.06589508]
[105.56027222 -50.06589127]
[117.94952393 -38.69289398]
[118.28661346 -21.54059792]
[105.87462616 -9.21331501]
[106.09795380 5.78502226]
[106.32128143 20.78335953]
[106.54460907 35.78169632]
[114.47054291 48.39236069]
[106.93956757 62.30620193]
[107.16289520 77.30453491]
[107.38622284 92.30287933]
[109.05776215 107.20944977]
[112.16187286 121.88475037]
[116.99942780 129.63302612]
[115.20123291 136.80158997]
[118.08650970 151.52148438]
[133.83938599 153.90612793]
[147.79985046 161.52786255]
[158.28877258 173.44905090]
[164.05180359 188.21620178]
[164.40922546 204.03717041]
[159.33624268 218.99868774]
[149.46359253 231.29769897]
[135.99928284 239.45867920]
[139.10339355 254.13397217]
[142.20750427 268.80929565]
[145.31161499 283.48458862]
[148.41572571 298.15988159]
[151.51983643 312.83517456]
[154.62394714 327.51049805]
[165.04957581 339.41076660]
[160.11355591 353.46371460]
[163.60379028 357.34512329]
[165.10597229 361.73791504]
[164.75819397 365.79922485]
[163.01313782 368.86306763]
[165.45886230 383.66232300]
[167.90458679 398.46160889]
[170.35031128 413.26086426]
[172.79605103 428.06015015]
[176.11830139 442.68759155]
[180.30531311 457.09136963]
[184.49232483 471.49514771]
[188.67933655 485.89895630]
[192.86634827 500.30273438]
[197.05335999 514.70648193]
[201.24037170 529.11029053]
[205.42738342 543.51409912]
[220.37782288 541.88446045]
[235.38409424 542.87585449]
[249.99017334 546.45825195]
[263.75222778 552.52270508]
[276.25198364 560.88488770]
[287.10964966 571.29077148]
[295.99526978 583.42407227]
[302.63876343 596.91607666]
[306.83828735 611.35687256]
[308.46624756 626.30749512]
[307.47311401 641.31359863]
[303.88906860 655.91931152]
[297.82308960 669.68066406]
[289.45944214 682.17950439]
[279.05233765 693.03594971]
[266.91802979 701.92022705]
[253.42524719 708.56219482]
[238.98402405 712.76007080]
[224.03321838 714.38629150]
[209.02717590 713.39147949]
[194.42190552 709.80578613]
[180.66123962 703.73822021]
[168.16336060 695.37316895]
[157.30804443 684.96484375]
[148.42520142 672.82952881]
[141.78474426 659.33599854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 184]
[9 183]
[10 182]
[11 181]
[12 180]
[13 179]
[14 178]
[15 177]
[24 176]
[25 175]
[26 174]
[27 173]
[28 172]
[29 168]
[31 166]
[32 165]
[33 164]
[34 163]
[35 162]
[36 161]
[37 160]
[46 152]
[47 151]
[48 149]
[49 148]
[63 147]
[64 146]
[65 145]
[67 143]
[68 142]
[69 141]
[70 140]
[74 137]
[75 136]
[76 135]
[77 134]
[78 133]
[79 127]
[80 126]
[81 125]
[82 124]
[84 122]
[85 121]
[88 118]
[89 117]
[90 116]
[91 115]
[92 114]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
