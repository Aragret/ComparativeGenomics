%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[2.91037083 548.66168213]
[-2.87870789 562.53741455]
[-10.87283325 575.27099609]
[-20.85391998 586.51501465]
[-32.54967880 595.96270752]
[-45.64103699 603.35638428]
[-59.77085495 608.49426270]
[-74.55365753 611.23626709]
[-89.58616638 611.50756836]
[-104.45827484 609.30072021]
[-118.76426697 604.67596436]
[-132.11386108 597.75946045]
[-144.14288330 588.73986816]
[-154.52314758 577.86328125]
[-162.97149658 565.42645264]
[-169.25744629 551.76861572]
[-173.20950317 537.26232910]
[-174.71986389 522.30346680]
[-173.74731445 507.29998779]
[-170.31838989 492.66125488]
[-164.52664185 478.78662109]
[-156.53005981 466.05459595]
[-146.54681396 454.81250000]
[-134.84922791 445.36706543]
[-121.75644684 437.97592163]
[-107.62564087 432.84072876]
[-92.84230804 430.10159302]
[-77.80975342 429.83319092]
[-62.93806458 432.04290771]
[-58.32405472 417.77017212]
[-53.71004486 403.49743652]
[-49.09603500 389.22470093]
[-50.02964401 381.89324951]
[-44.30562592 374.77474976]
[-39.47962570 360.57226562]
[-34.65362930 346.36981201]
[-29.82763100 332.16735840]
[-25.00163460 317.96490479]
[-20.17563629 303.76245117]
[-15.34963894 289.55999756]
[-10.62950420 275.32202148]
[-6.01549530 261.04928589]
[-1.40148604 246.77655029]
[-12.14652252 257.24288940]
[-25.57201767 263.93289185]
[-40.39833832 266.20889282]
[-55.21232986 263.85400391]
[-68.60202789 257.09262085]
[-79.29119873 246.56924438]
[-86.26102448 233.28686523]
[-88.84719086 218.51148987]
[-86.80319214 203.65141296]
[-80.32385254 190.12298584]
[-70.02674103 179.21566772]
[-56.89331818 171.96907043]
[-42.17537308 169.07389832]
[-27.27572441 170.80609131]
[-13.61451530 177.00054932]
[-2.49384451 187.06686401]
[5.02633715 200.04557800]
[8.22925377 214.69963074]
[6.80934286 229.63340759]
[15.03815079 217.09199524]
[23.26695824 204.55059814]
[31.49576569 192.00920105]
[39.72457504 179.46780396]
[47.95338058 166.92640686]
[56.18218994 154.38499451]
[64.41099548 141.84359741]
[72.54621124 129.24128723]
[80.58738708 116.57876587]
[88.62856293 103.91623688]
[96.48031616 91.13539886]
[104.14091492 78.23906708]
[111.80150604 65.34274292]
[119.46210480 52.44641495]
[119.36135864 48.10546875]
[120.52969360 44.33724213]
[122.63123322 41.47037506]
[125.25786591 39.69066238]
[127.98210907 39.02986908]
[136.39672852 26.61237335]
[144.81135559 14.19487762]
[147.03480530 5.33519077]
[153.44483948 1.65642345]
[162.04339600 -10.63441467]
[170.64196777 -22.92525291]
[172.21287537 -38.66827774]
[185.84849548 -44.66155243]
[194.44705200 -56.95239258]
[203.04562378 -69.24323273]
[203.88604736 -89.38414001]
[221.74581909 -96.79467010]
[229.97462463 -109.33607483]
[238.20343018 -121.87747192]
[246.43223572 -134.41886902]
[247.53372192 -150.20169067]
[260.98486328 -156.59829712]
[269.21365356 -169.13969421]
[277.44247437 -181.68109131]
[265.99188232 -191.40034485]
[255.82250977 -202.45310974]
[247.08851624 -214.67181396]
[239.92228699 -227.87124634]
[234.43247986 -241.85128784]
[230.70231628 -256.40002441]
[228.78833008 -271.29687500]
[228.71954346 -286.31600952]
[230.49700928 -301.22976685]
[234.09378052 -315.81204224]
[239.45530701 -329.84179688]
[246.50033569 -343.10629272]
[255.12207031 -355.40447998]
[265.18978882 -366.54992676]
[276.55087280 -376.37365723]
[289.03308105 -384.72671509]
[302.44720459 -391.48254395]
[316.58987427 -396.53863525]
[331.24670410 -399.81842041]
[346.19549561 -401.27215576]
[361.20962524 -400.87777710]
[376.06149292 -398.64129639]
[390.52590942 -394.59658813]
[404.38366699 -388.80499268]
[417.42462158 -381.35427856]
[429.45111084 -372.35742188]
[440.28082275 -361.95083618]
[449.74954224 -350.29223633]
[457.71374512 -337.55838013]
[464.05270386 -323.94232178]
[468.67031860 -309.65045166]
[471.49658203 -294.89947510]
[472.48867798 -279.91296387]
[471.63153076 -264.91812134]
[468.93814087 -250.14230347]
[464.44934082 -235.80946350]
[458.23318481 -222.13690186]
[450.38388062 -209.33187866]
[441.02047729 -197.58853149]
[430.28488159 -187.08488464]
[418.33987427 -177.98016357]
[405.36648560 -170.41238403]
[391.56143188 -164.49630737]
[377.13397217 -160.32157898]
[362.30285645 -157.95150757]
[347.29287720 -157.42201233]
[332.33160400 -158.74113464]
[317.64587402 -161.88885498]
[303.45825195 -166.81748962]
[289.98385620 -173.45228577]
[281.75506592 -160.91088867]
[273.52624512 -148.36949158]
[273.01333618 -133.48371887]
[258.97363281 -126.19006348]
[250.74482727 -113.64866638]
[242.51602173 -101.10726166]
[234.28721619 -88.56586456]
[237.25605774 -78.78839111]
[234.29075623 -68.78063202]
[226.13891602 -61.91565704]
[215.33645630 -60.64466476]
[206.73788452 -48.35382843]
[198.13932800 -36.06298828]
[197.18344116 -21.19908905]
[182.93280029 -14.32668877]
[174.33422852 -2.03585052]
[165.73567200 10.25498772]
[157.22885132 22.60949707]
[148.81422424 35.02699280]
[140.39961243 47.44448853]
[132.35842896 60.10701370]
[124.69783783 73.00334167]
[117.03723907 85.89966583]
[109.37664032 98.79598999]
[109.48690796 104.04020691]
[106.65108490 108.97290039]
[101.29108429 111.95741272]
[93.24990845 124.61993408]
[85.20874023 137.28245544]
[83.25005341 146.20442200]
[76.95240021 150.07240295]
[68.72358704 162.61381531]
[60.49478149 175.15521240]
[52.26597595 187.69660950]
[44.03716660 200.23800659]
[35.80835724 212.77940369]
[27.57955170 225.32081604]
[19.35074234 237.86221313]
[12.87124729 251.39054871]
[8.25723839 265.66329956]
[3.64322877 279.93603516]
[3.98119092 289.06420898]
[-1.14718318 294.38598633]
[-5.97318077 308.58847046]
[-10.79917812 322.79092407]
[-15.62517643 336.99337769]
[-20.45117378 351.19583130]
[-25.27717209 365.39828491]
[-30.10316849 379.60073853]
[-34.82330322 393.83871460]
[-39.43731308 408.11145020]
[-44.05132294 422.38418579]
[-48.66533279 436.65692139]
[-35.31439972 443.57086182]
[-23.28364944 452.58810425]
[-12.90128231 463.46267700]
[-4.45053959 475.89791870]
[1.83803725 489.55453491]
[5.79289103 504.06002808]
[7.30612993 519.01861572]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 203]
[30 202]
[31 201]
[32 200]
[34 199]
[35 198]
[36 197]
[37 196]
[38 195]
[39 194]
[40 193]
[41 191]
[42 190]
[43 189]
[62 188]
[63 187]
[64 186]
[65 185]
[66 184]
[67 183]
[68 182]
[69 181]
[70 179]
[71 178]
[72 177]
[73 174]
[74 173]
[75 172]
[76 171]
[81 170]
[82 169]
[83 168]
[85 167]
[86 166]
[87 165]
[89 163]
[90 162]
[91 161]
[93 157]
[94 156]
[95 155]
[96 154]
[98 152]
[99 151]
[100 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
