%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[63.77464294 522.32666016]
[54.96710587 534.48522949]
[44.95607758 545.67376709]
[33.84767532 555.77362061]
[21.75965691 564.67779541]
[8.82016087 572.29180908]
[-4.83364534 578.53503418]
[-19.05702400 583.34124756]
[-33.69919968 586.65948486]
[-48.60495758 588.45458984]
[-63.61629105 588.70751953]
[-78.57406616 587.41558838]
[-93.31972504 584.59259033]
[-107.69695282 580.26831055]
[-121.55334473 574.48864746]
[-134.74201965 567.31488037]
[-147.12315369 558.82299805]
[-158.56552124 549.10314941]
[-168.94783020 538.25823975]
[-178.15998840 526.40325928]
[-186.10437012 513.66394043]
[-192.69676208 500.17526245]
[-197.86726379 486.08023071]
[-201.56108093 471.52825928]
[-203.73904419 456.67361450]
[-204.37806702 441.67376709]
[-203.47138977 426.68768311]
[-201.02861023 411.87429810]
[-197.07562256 397.39059448]
[-191.65434265 383.39007568]
[-184.82223511 370.02124023]
[-176.65170288 357.42575073]
[-167.22938538 345.73712158]
[-156.65516663 335.07925415]
[-145.04110718 325.56518555]
[-132.51036072 317.29568481]
[-119.19573212 310.35848999]
[-105.23838043 304.82711792]
[-90.78625488 300.76016235]
[-75.99255371 298.20077515]
[-61.01409912 297.17608643]
[-46.00967407 297.69696045]
[-31.13833427 299.75784302]
[-16.55772400 303.33691406]
[-2.42240357 308.39624023]
[4.05709219 294.86788940]
[10.53658772 281.33956909]
[17.01608467 267.81121826]
[23.49558067 254.28286743]
[29.77293968 240.65954590]
[35.84677505 226.94427490]
[35.68096161 219.55548096]
[42.11449432 213.07109070]
[48.39185333 199.44776917]
[54.66921616 185.82444763]
[47.30773163 169.06365967]
[54.66139603 151.95118713]
[72.48861694 145.53991699]
[78.35758209 131.73573303]
[84.22653961 117.93155670]
[90.09550476 104.12738037]
[93.74359131 89.57775879]
[95.08182526 74.63757324]
[96.42005920 59.69739151]
[95.97344971 44.70404053]
[93.74833679 29.86999702]
[91.52321625 15.03595448]
[81.75962067 26.42332268]
[66.81481934 27.70894432]
[55.24986649 18.15635490]
[53.68970108 3.23771286]
[63.02805328 -8.50090694]
[77.91548920 -10.33508968]
[89.82333374 -1.21495187]
[88.93051910 -16.18835831]
[88.03770447 -31.16176414]
[87.14488220 -46.13516998]
[78.54477692 -33.84541321]
[64.70628357 -28.05782127]
[49.91742706 -30.56573868]
[38.76068497 -40.59206009]
[34.69309998 -55.03002167]
[38.97505569 -69.40586853]
[50.27974319 -79.26507568]
[65.10427856 -81.55267334]
[78.85512543 -75.55982208]
[87.27150726 -63.14321899]
[88.38715363 -78.10166931]
[89.50279999 -93.06012726]
[90.61845398 -108.01857758]
[82.80845642 -118.28340912]
[84.04563141 -130.71937561]
[93.12401581 -138.71372986]
[94.46224976 -153.65390015]
[95.80048370 -168.59408569]
[97.13871765 -183.53427124]
[98.47695160 -198.47445679]
[99.81518555 -213.41464233]
[85.75397491 -218.93360901]
[73.81805420 -228.19161987]
[64.97502136 -240.43814087]
[59.94174576 -254.68043518]
[59.12624359 -269.76391602]
[62.59462738 -284.46585083]
[70.06573486 -297.59442139]
[80.93390656 -308.08535767]
[94.31812286 -315.08816528]
[109.13336945 -318.03521729]
[124.17864990 -316.68756104]
[138.23431396 -311.15447998]
[150.16091919 -301.88449097]
[158.99165344 -289.62908936]
[164.01062012 -275.38174438]
[164.81095886 -260.29745483]
[161.32780457 -245.59899902]
[153.84352112 -232.47793579]
[142.96481323 -221.99794006]
[129.57357788 -215.00857544]
[114.75537109 -212.07641602]
[113.41713715 -197.13623047]
[112.07890320 -182.19604492]
[110.74066925 -167.25585938]
[109.40243530 -152.31567383]
[108.06420135 -137.37548828]
[116.29495239 -121.87640381]
[105.57690430 -106.90293121]
[104.46125793 -91.94447327]
[103.34560394 -76.98602295]
[102.22995758 -62.02756882]
[102.11829376 -47.02798462]
[103.01110840 -32.05458069]
[103.90392303 -17.08117294]
[104.79673767 -2.10776758]
[106.35726166 12.81083679]
[108.58238220 27.64488029]
[110.80749512 42.47892380]
[116.03790283 28.42037392]
[125.70838928 16.95382881]
[138.68287659 9.42636395]
[153.43713379 6.72230101]
[168.23783875 9.15930939]
[181.34623718 16.45109177]
[191.22235107 27.74101830]
[196.70594788 41.70275879]
[197.15281677 56.69609833]
[192.51046753 70.95964050]
[183.32427979 82.81771851]
[170.67343140 90.87725067]
[156.04414368 94.19141388]
[141.15502930 92.37086487]
[127.75525665 85.62948608]
[117.41902924 74.75923920]
[111.36024475 61.03562546]
[110.02201080 75.97580719]
[108.68377686 90.91599274]
[116.62001038 78.18743896]
[127.65872955 68.03132629]
[141.00305176 61.18084717]
[155.68963623 58.13053513]
[170.65823364 59.10059357]
[184.82826233 64.02100372]
[197.17675781 72.53654480]
[206.81230164 84.03247833]
[213.03926086 97.67890167]
[215.40812683 112.49066925]
[213.74789429 127.39850616]
[208.17839050 141.32620239]
[199.10171509 153.26831055]
[187.17309570 162.36270142]
[173.25367737 167.95286560]
[158.34832764 169.63523865]
[143.53305054 167.28836060]
[129.87739563 161.08166504]
[118.36717987 151.46319580]
[109.83331299 139.12734985]
[104.89187622 124.96464539]
[103.89968109 109.99634552]
[98.03071594 123.80052185]
[92.16175842 137.60469055]
[86.29279327 151.40887451]
[92.80089569 161.35780334]
[93.68925476 173.09286499]
[88.85253906 183.69004822]
[79.59754944 190.56469727]
[68.29253387 192.10180664]
[62.01517105 205.72512817]
[55.73780823 219.34844971]
[49.56204224 233.01811218]
[43.48820877 246.73338318]
[43.81153488 253.33694458]
[41.15081787 258.35864258]
[37.02392578 260.76235962]
[30.54442978 274.29071045]
[24.06493378 287.81906128]
[17.58543777 301.34738159]
[11.10594177 314.87573242]
[23.90818596 322.71835327]
[35.83617783 331.83575439]
[46.76347351 342.13128662]
[56.57424164 353.49584961]
[65.16447449 365.80892944]
[72.44311523 378.94000244]
[78.33300781 392.74990845]
[82.77171326 407.09222412]
[85.71218109 421.81491089]
[87.12323761 436.76190186]
[86.98992920 451.77478027]
[85.31366730 466.69436646]
[82.11221313 481.36251831]
[77.41951752 495.62374878]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 196]
[46 195]
[47 194]
[48 193]
[49 192]
[50 189]
[51 188]
[53 187]
[54 186]
[55 185]
[58 180]
[59 179]
[60 178]
[61 177]
[62 155]
[63 154]
[64 153]
[65 136]
[66 135]
[67 134]
[74 133]
[75 132]
[76 131]
[77 130]
[87 129]
[88 128]
[89 127]
[90 126]
[93 124]
[94 123]
[95 122]
[96 121]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
