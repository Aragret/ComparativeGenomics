%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[39.46286011 627.35485840]
[29.84656525 615.77844238]
[22.67375374 602.54827881]
[18.22013283 588.17291260]
[16.65688705 573.20483398]
[18.04410362 558.21948242]
[22.32846069 543.79272461]
[29.34527969 530.47918701]
[38.82485199 518.79058838]
[50.40281296 509.17614746]
[63.63412857 502.00549316]
[78.01022339 497.55419922]
[76.44970703 482.63558960]
[74.88918304 467.71697998]
[73.32865906 452.79837036]
[71.76813507 437.87976074]
[70.20761108 422.96118164]
[67.71351624 420.46881104]
[66.30271149 416.64459229]
[66.58801270 412.01080322]
[68.92583466 407.34371948]
[68.03302002 392.37033081]
[67.14020538 377.39691162]
[59.02743149 390.01367188]
[45.73873520 396.97146606]
[30.74774933 396.45147705]
[17.97308350 388.58969116]
[10.75400162 375.44110107]
[10.97755623 360.44277954]
[18.58530998 347.51519775]
[31.58861351 340.03762817]
[46.58843613 339.96469116]
[59.66386032 347.31542969]
[67.39675140 360.16754150]
[68.73498535 345.22735596]
[70.07321930 330.28717041]
[71.41145325 315.34698486]
[72.74968719 300.40679932]
[74.08792114 285.46661377]
[75.42615509 270.52642822]
[76.76438904 255.58622742]
[77.99136353 240.63650513]
[79.10701752 225.67803955]
[80.22266388 210.71958923]
[81.33831024 195.76113892]
[79.32686615 192.86520386]
[78.61814880 188.85113525]
[79.72242737 184.34182739]
[82.85247040 180.16450500]
[76.68238831 166.60798645]
[86.00475311 153.82502747]
[87.78721619 138.93130493]
[89.56968689 124.03759003]
[91.35214996 109.14387512]
[92.80156708 94.21406555]
[93.91721344 79.25561523]
[91.89378357 75.41378021]
[91.26169586 71.51955414]
[91.86658478 68.01676941]
[93.42577362 65.25352478]
[95.57066345 63.44864273]
[97.57467651 48.58311462]
[99.57868958 33.71758652]
[101.58270264 18.85206032]
[103.58671570 3.98653173]
[93.48659515 -3.37929177]
[87.51125336 -14.27716827]
[86.74082947 -26.60948372]
[91.26028442 -38.03207016]
[100.15489197 -46.39980698]
[111.69461823 -50.16940308]
[114.14035034 -64.96867371]
[116.58607483 -79.76794434]
[114.91345978 -83.77497864]
[114.63132477 -87.71006775]
[115.54629517 -91.14492035]
[117.34579468 -93.75804138]
[119.64315796 -95.36436462]
[122.96541595 -109.99182892]
[126.28768158 -124.61928558]
[127.51465607 -139.56901550]
[126.62184143 -154.54241943]
[125.72901917 -169.51583862]
[124.83620453 -184.48924255]
[123.94338989 -199.46264648]
[115.39840698 -212.77781677]
[122.36444855 -225.94305420]
[121.47163391 -240.91645813]
[120.57881927 -255.88986206]
[119.68600464 -270.86328125]
[107.92893219 -261.54815674]
[93.28196716 -264.78335571]
[86.54230499 -278.18399048]
[92.67816925 -291.87161255]
[107.16643524 -295.75622559]
[119.32609558 -286.97567749]
[119.54942322 -301.97399902]
[119.77275085 -316.97235107]
[105.69213104 -322.63809204]
[94.61172485 -333.01058960]
[88.03005219 -346.68707275]
[86.83724213 -361.81790161]
[91.19461060 -376.35675049]
[100.51285553 -388.33734131]
[113.53176880 -396.13940430]
[128.49063110 -398.70782471]
[143.36639404 -395.69515991]
[156.14724731 -387.50894165]
[165.10464478 -375.25619507]
[169.02720642 -360.59408569]
[167.38442993 -345.50549316]
[160.39848328 -332.03103638]
[149.01414490 -321.99301147]
[134.77108765 -316.74902344]
[134.54776001 -301.75067139]
[134.32443237 -286.75234985]
[134.65940857 -271.75610352]
[135.55221558 -256.78268433]
[136.44503784 -241.80928040]
[137.33786011 -226.83587646]
[145.81898499 -214.59169006]
[138.91679382 -200.35545349]
[139.80961609 -185.38204956]
[140.70242310 -170.40864563]
[141.59524536 -155.43524170]
[142.48805237 -140.46183777]
[148.59283447 -154.16336060]
[158.41969299 -165.49618530]
[171.11853027 -173.47988892]
[185.59075928 -177.42382812]
[200.58438110 -176.98678589]
[214.80232239 -172.20658875]
[227.01457214 -163.49676514]
[236.16464233 -151.61079407]
[241.46096802 -137.57695007]
[242.44537354 -122.60928345]
[239.03268433 -108.00265503]
[231.51812744 -95.02068329]
[220.55180359 -84.78643799]
[207.08241272 -78.18528748]
[192.27516174 -75.78829193]
[177.41105652 -77.80281830]
[163.77598572 -84.05458832]
[152.54949951 -94.00275421]
[144.70281982 -106.78672028]
[140.91514587 -121.29702759]
[137.59288025 -106.66956329]
[134.27061462 -92.04210663]
[131.38534546 -77.32221222]
[128.93962097 -62.52294540]
[126.49388885 -47.72367477]
[139.46841431 -35.74313736]
[142.68223572 -18.21823311]
[134.66282654 -2.13194203]
[118.45224762 5.99054527]
[116.44823456 20.85607338]
[114.44422150 35.72160339]
[112.44020844 50.58713150]
[110.43619537 65.45265961]
[108.87567139 80.37126160]
[107.76001740 95.32971954]
[109.83705139 98.57907104]
[110.47172546 102.72817993]
[109.29432678 107.11232758]
[106.24586487 110.92634583]
[104.46340179 125.82006073]
[102.68093109 140.71377563]
[100.89846802 155.60749817]
[106.94105530 170.22932434]
[97.74618530 181.94697571]
[96.29676819 196.87678528]
[95.18111420 211.83523560]
[94.06546783 226.79368591]
[92.94982147 241.75215149]
[95.43228912 250.54277039]
[91.70457458 256.92446899]
[90.36634064 271.86465454]
[89.02810669 286.80484009]
[87.68987274 301.74502563]
[86.35163879 316.68521118]
[85.01340485 331.62539673]
[83.67517090 346.56558228]
[82.33693695 361.50576782]
[82.11360931 376.50408936]
[83.00642395 391.47750854]
[83.89923859 406.45089722]
[85.12621307 421.40063477]
[86.68673706 436.31924438]
[88.24726105 451.23785400]
[89.80778503 466.15646362]
[91.36830902 481.07507324]
[92.92883301 495.99365234]
[107.91489410 497.37359619]
[122.34369659 501.65097046]
[135.66064453 508.66131592]
[147.35388184 518.13519287]
[156.97392273 529.70849609]
[164.15101624 542.93634033]
[168.60928345 557.31024170]
[170.17738342 572.27783203]
[168.79501343 587.26367188]
[164.51531982 601.69177246]
[157.50282288 615.00756836]
[148.02702332 626.69927979]
[136.45217896 636.31744385]
[123.22319031 643.49237061]
[108.84853363 647.94836426]
[93.88073730 649.51397705]
[78.89511871 648.12921143]
[64.46769714 643.84716797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 192]
[13 191]
[14 190]
[15 189]
[16 188]
[17 187]
[21 186]
[22 185]
[23 184]
[34 183]
[35 182]
[36 181]
[37 180]
[38 179]
[39 178]
[40 177]
[41 176]
[42 174]
[43 173]
[44 172]
[45 171]
[49 170]
[51 168]
[52 167]
[53 166]
[54 165]
[55 161]
[56 160]
[61 159]
[62 158]
[63 157]
[64 156]
[65 155]
[71 151]
[72 150]
[73 149]
[78 148]
[79 147]
[80 146]
[81 126]
[82 125]
[83 124]
[84 123]
[85 122]
[87 120]
[88 119]
[89 118]
[90 117]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
