%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[25.18899536 466.93673706]
[27.83273506 481.80911255]
[26.17798424 496.82373047]
[20.35888481 510.76339722]
[10.84716415 522.49810791]
[-1.58610260 531.07666016]
[-15.93300724 535.80346680]
[-31.03051186 536.29547119]
[-45.65472794 532.51275635]
[-58.62013245 524.76196289]
[-68.87568665 513.67138672]
[-75.59001160 500.14013672]
[-78.21881104 485.26513672]
[-76.54897308 470.25219727]
[-70.71587372 456.31835938]
[-61.19236755 444.59320068]
[-48.75049210 436.02719116]
[-34.39884567 431.31478882]
[-19.30085373 430.83795166]
[-15.54455280 416.31588745]
[-11.78825283 401.79382324]
[-8.03195190 387.27175903]
[-12.33555698 373.01245117]
[-1.38894808 361.58956909]
[2.36735249 347.06750488]
[6.12365341 332.54544067]
[9.87995434 318.02337646]
[-2.50789857 326.48156738]
[-17.50441551 326.15829468]
[-29.51626396 317.17413330]
[-34.06332397 302.87991333]
[-29.44965553 288.60708618]
[-17.39603996 279.67901611]
[-2.39817929 279.42565918]
[9.95009518 287.94155884]
[15.04322433 302.05160522]
[20.49858093 288.07879639]
[25.95393944 274.10598755]
[31.40929604 260.13320923]
[36.86465454 246.16040039]
[42.21583939 232.14736938]
[47.46255875 218.09490967]
[52.70927429 204.04243469]
[57.95599365 189.98995972]
[56.82366562 185.35025024]
[58.59395218 179.94996643]
[63.57379532 175.60108948]
[69.23657990 161.71107483]
[74.89936829 147.82104492]
[80.56215668 133.93101501]
[85.70411682 119.83987427]
[90.31812286 105.56713867]
[94.82575226 91.26045227]
[99.22675323 76.92060852]
[103.62774658 62.58076096]
[108.02874756 48.24091339]
[102.68621826 36.50122833]
[106.64703369 24.64813995]
[117.27056122 18.86305618]
[121.88457489 4.59032202]
[111.98325348 -5.29029846]
[107.32723999 -18.41042519]
[108.77143860 -32.19057465]
[115.97731018 -43.94746780]
[127.49001312 -51.41650009]
[141.03176880 -53.18790054]
[145.85777283 -67.39035797]
[150.68376160 -81.59281158]
[143.95036316 -95.63913727]
[149.04693604 -109.97369385]
[162.47944641 -116.30639648]
[167.30545044 -130.50885010]
[172.02558899 -144.74684143]
[176.63958740 -159.01957703]
[169.69781494 -172.96409607]
[174.58039856 -187.37294006]
[187.91712952 -193.90493774]
[192.53114319 -208.17767334]
[197.14515686 -222.45039368]
[201.75915527 -236.72312927]
[198.64193726 -252.23420715]
[209.91902161 -261.96441650]
[214.53303528 -276.23715210]
[219.14703369 -290.50988770]
[205.37516785 -296.48406982]
[192.24418640 -303.75955200]
[179.87669373 -312.26843262]
[168.38818359 -321.93121338]
[157.88591003 -332.65771484]
[148.46792603 -344.34777832]
[140.22218323 -356.89221191]
[133.22567749 -370.17395020]
[127.54370117 -384.06893921]
[123.22933960 -398.44744873]
[120.32286072 -413.17526245]
[118.85140228 -428.11480713]
[118.82870483 -443.12664795]
[120.25498199 -458.07058716]
[123.11692047 -472.80709839]
[127.38779449 -487.19857788]
[133.02772522 -501.11068726]
[139.98405457 -514.41351318]
[148.19181824 -526.98284912]
[157.57441711 -538.70129395]
[168.04420471 -549.45953369]
[179.50344849 -559.15698242]
[191.84515381 -567.70324707]
[204.95407104 -575.01837158]
[218.70782471 -581.03417969]
[232.97798157 -585.69445801]
[247.63130188 -588.95568848]
[262.53097534 -590.78747559]
[277.53787231 -591.17260742]
[292.51190186 -590.10754395]
[307.31320190 -587.60223389]
[321.80361938 -583.68011475]
[335.84786987 -578.37774658]
[349.31475830 -571.74462891]
[362.07861328 -563.84271240]
[374.02020264 -554.74584961]
[385.02804565 -544.53881836]
[394.99938965 -533.31707764]
[403.84112549 -521.18536377]
[411.47067261 -508.25686646]
[417.81680298 -494.65237427]
[422.82028198 -480.49890137]
[426.43435669 -465.92858887]
[428.62533569 -451.07748413]
[429.37271118 -436.08425903]
[428.66952515 -421.08889771]
[426.52233887 -406.23138428]
[422.95120239 -391.65051270]
[417.98947144 -377.48233032]
[411.68347168 -363.85922241]
[404.09204102 -350.90829468]
[395.28613281 -338.75054932]
[385.34790039 -327.49945068]
[374.37017822 -317.26007080]
[362.45544434 -308.12799072]
[349.71493530 -300.18850708]
[336.26763916 -293.51574707]
[322.23910522 -288.17199707]
[307.76031494 -284.20715332]
[292.96643066 -281.65826416]
[277.99563599 -280.54910278]
[262.98764038 -280.89001465]
[248.08264160 -282.67782593]
[233.41976929 -285.89587402]
[228.80575562 -271.62313843]
[224.19175720 -257.35040283]
[227.63899231 -242.86019897]
[216.03189087 -232.10913086]
[211.41789246 -217.83639526]
[206.80387878 -203.56365967]
[202.18986511 -189.29092407]
[209.17915344 -176.18804932]
[204.70321655 -161.64773560]
[190.91232300 -154.40556335]
[186.29830933 -140.13282776]
[187.23191833 -132.80137634]
[181.50790405 -125.68285370]
[176.68190002 -111.48040009]
[183.47534180 -98.27491760]
[178.78341675 -83.80285645]
[164.88621521 -76.76681519]
[160.06022644 -62.56436157]
[155.23422241 -48.36190414]
[166.17869568 -36.47362900]
[169.65444946 -20.59675980]
[164.62033081 -5.04444313]
[152.36024475 5.90935516]
[136.15730286 9.20433140]
[131.54328918 23.47706413]
[136.13684082 40.41419220]
[122.36859131 52.64191055]
[117.96759796 66.98175812]
[113.56659698 81.32160950]
[109.16559601 95.66145325]
[109.99919891 103.67878723]
[104.59085846 110.18115234]
[99.97684479 124.45388794]
[114.31660461 120.05260468]
[126.78393555 128.39320374]
[128.18838501 143.32731628]
[117.49464417 153.84605408]
[102.58574677 152.19540405]
[94.45217896 139.59379578]
[88.78939819 153.48382568]
[83.12660980 167.37385559]
[77.46382141 181.26388550]
[72.00846100 195.23667908]
[66.76174927 209.28915405]
[61.51502991 223.34162903]
[56.26831055 237.39408875]
[56.19834137 246.52825928]
[50.83745193 251.61575317]
[45.38209534 265.58856201]
[39.92673492 279.56134033]
[34.47137833 293.53414917]
[29.01602173 307.50695801]
[24.40201378 321.77969360]
[20.64571190 336.30172729]
[16.88941193 350.82379150]
[13.13311100 365.34585571]
[17.16804123 380.64389038]
[6.49010754 391.02807617]
[2.73380661 405.55014038]
[-1.02249396 420.07217407]
[-4.77879477 434.59423828]
[8.19439220 442.33200073]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 209]
[20 208]
[21 207]
[22 206]
[24 204]
[25 203]
[26 202]
[27 201]
[36 200]
[37 199]
[38 198]
[39 197]
[40 196]
[41 194]
[42 193]
[43 192]
[44 191]
[47 190]
[48 189]
[49 188]
[50 187]
[51 181]
[52 180]
[53 178]
[54 177]
[55 176]
[56 175]
[59 173]
[60 172]
[66 167]
[67 166]
[68 165]
[71 162]
[72 161]
[73 159]
[74 158]
[77 155]
[78 154]
[79 153]
[80 152]
[82 150]
[83 149]
[84 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
