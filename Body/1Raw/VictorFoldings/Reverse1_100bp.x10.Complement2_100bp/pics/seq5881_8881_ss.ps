%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[206.48147583 509.39440918]
[219.34365845 501.24063110]
[217.11854553 486.40658569]
[214.89341736 471.57254028]
[205.35374451 460.13385010]
[210.95831299 445.33859253]
[208.73320007 430.50454712]
[206.50807190 415.67050171]
[192.56880188 406.26116943]
[189.69105530 389.34866333]
[200.13708496 375.31655884]
[197.69136047 360.51727295]
[195.24562073 345.71801758]
[192.79989624 330.91873169]
[188.50576782 316.54650879]
[182.43194580 302.83126831]
[176.35810852 289.11599731]
[170.28427124 275.40072632]
[158.05610657 266.89654541]
[159.54272461 251.14532471]
[153.46888733 237.43005371]
[147.39505005 223.71479797]
[141.32121277 209.99952698]
[135.24739075 196.28425598]
[129.17355347 182.56898499]
[123.09971619 168.85372925]
[117.02588654 155.13845825]
[110.85011292 141.46878052]
[104.57275391 127.84547424]
[98.29539490 114.22215271]
[86.99069214 105.99443817]
[88.08129120 92.05520630]
[81.80393219 78.43189240]
[76.69198608 92.53395081]
[63.77486420 100.15942383]
[48.95809174 97.82205963]
[39.01570511 86.59045410]
[38.49322128 71.59955597]
[47.62952042 59.70299911]
[62.24760437 56.33972931]
[75.66556549 63.04872894]
[70.83956909 48.84627151]
[66.01357269 34.64381790]
[61.18757248 20.44136047]
[56.36157227 6.23890495]
[51.53557587 -7.96355104]
[46.70957947 -22.16600609]
[43.34428406 -24.90986633]
[41.23891830 -28.24632645]
[40.42506790 -31.70653534]
[40.77879715 -34.85954666]
[42.04651260 -37.35975647]
[36.75634384 -44.80636215]
[38.12467194 -52.06924438]
[34.36837006 -66.59130096]
[30.61207008 -81.11336517]
[26.85577011 -95.63542175]
[20.78020859 -81.92092133]
[8.31339073 -73.57955170]
[-6.68170404 -73.19597626]
[-19.55868340 -80.88905334]
[-26.32747459 -94.27499390]
[-24.89069366 -109.20602417]
[-15.69354343 -121.05559540]
[-1.58586109 -126.15200043]
[13.06093502 -122.91604614]
[23.70849991 -112.35021973]
[21.92603493 -127.24393463]
[12.60366821 -140.02690125]
[18.77375031 -153.58341980]
[16.99128532 -168.47714233]
[15.20881844 -183.37084961]
[0.19646652 -183.15406799]
[-14.75630474 -184.50770569]
[-29.48566437 -187.41694641]
[-43.83023071 -191.84991455]
[-57.63283539 -197.75802612]
[-70.74224854 -205.07656860]
[-83.01483917 -213.72532654]
[-94.31613922 -223.60957336]
[-104.52232361 -234.62100220]
[-113.52157593 -246.63896179]
[-121.21528625 -259.53176880]
[-127.51916504 -273.15817261]
[-132.36413574 -287.36886597]
[-135.69712830 -302.00814819]
[-137.48161316 -316.91564941]
[-137.69802856 -331.92800903]
[-136.34402466 -346.88073730]
[-133.43443298 -361.61004639]
[-129.00111389 -375.95449829]
[-123.09266663 -389.75695801]
[-115.77381134 -402.86618042]
[-107.12474060 -415.13858032]
[-97.24021912 -426.43963623]
[-86.22855377 -436.64553833]
[-74.21038055 -445.64450073]
[-61.31738281 -453.33789062]
[-47.69082642 -459.64144897]
[-33.48001099 -464.48608398]
[-18.84063911 -467.81872559]
[-3.93310261 -469.60284424]
[11.07925987 -469.81887817]
[26.03196526 -468.46453857]
[40.76118469 -465.55456543]
[55.10553360 -461.12091064]
[68.90785217 -455.21212769]
[82.01690674 -447.89294434]
[94.28907776 -439.24359131]
[105.58989716 -429.35879517]
[115.79554749 -418.34686279]
[124.79421234 -406.32849121]
[132.48730469 -393.43530273]
[138.79051208 -379.80859375]
[143.63479614 -365.59765625]
[146.96707153 -350.95819092]
[148.75083923 -336.05062866]
[148.96653748 -321.03823853]
[147.61180115 -306.08557129]
[144.70149231 -291.35644531]
[140.26748657 -277.01217651]
[134.35835266 -263.21002197]
[127.03886414 -250.10113525]
[118.38919830 -237.82917786]
[108.50412750 -226.52859497]
[97.49195862 -216.32321167]
[85.47335052 -207.32484436]
[72.57998657 -199.63206482]
[58.95312119 -193.32917786]
[44.74207306 -188.48524475]
[30.10253525 -185.15332031]
[31.88500214 -170.25959778]
[33.66746902 -155.36589050]
[42.86233902 -143.64822388]
[36.81975174 -129.02639771]
[38.60221863 -114.13268280]
[41.37783051 -99.39172363]
[45.13412857 -84.86965942]
[48.89043045 -70.34760284]
[52.64673233 -55.82554626]
[56.51103592 -41.33185196]
[60.91203308 -26.99200439]
[65.73802948 -12.78954887]
[70.56403351 1.41290712]
[75.39002991 15.61536312]
[80.21602631 29.81781769]
[85.04202271 44.02027512]
[89.86801910 58.22272873]
[95.42724609 72.15452576]
[101.70460510 85.77784729]
[113.00930786 94.00556183]
[111.91870880 107.94479370]
[118.19606781 121.56810760]
[124.47342682 135.19142151]
[130.90696716 141.67582703]
[130.74114990 149.06462097]
[136.81498718 162.77989197]
[142.88882446 176.49516296]
[148.96264648 190.21041870]
[155.03648376 203.92568970]
[161.11032104 217.64096069]
[167.18415833 231.35623169]
[173.25798035 245.07148743]
[185.92059326 254.55668640]
[183.99954224 269.32690430]
[190.07337952 283.04214478]
[196.14720154 296.75741577]
[202.22103882 310.47268677]
[203.38502502 295.51791382]
[209.28123474 281.72537231]
[219.28744507 270.55056763]
[232.34767151 263.17288208]
[247.08363342 260.37081909]
[261.94021606 262.44015503]
[275.34954834 269.16247559]
[285.89654541 279.82833862]
[292.46813965 293.31219482]
[294.37078857 308.19104004]
[291.40374756 322.89465332]
[283.88012695 335.87136841]
[272.59387207 345.75170898]
[258.73611450 351.49295044]
[243.76922607 352.48922729]
[229.27275085 348.63540649]
[216.77650452 340.33816528]
[207.59916687 328.47302246]
[210.04489136 343.27227783]
[212.49063110 358.07156372]
[214.93635559 372.87081909]
[226.71594238 379.40194702]
[232.49880981 391.35055542]
[230.37542725 404.25686646]
[221.34211731 413.44540405]
[223.56724548 428.27944946]
[225.79235840 443.11349487]
[235.49118042 455.61322021]
[229.72746277 469.34744263]
[231.95259094 484.18148804]
[234.17770386 499.01553345]
[248.86613464 503.03668213]
[260.64501953 512.68957520]
[267.47357178 526.30169678]
[268.16873169 541.51477051]
[262.61004639 555.69293213]
[251.76057434 566.37982178]
[237.50009155 571.72381592]
[222.29927063 570.79901123]
[208.79177856 563.76574707]
[199.31785583 551.84246826]
[195.51890564 537.09497070]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 199]
[3 198]
[4 197]
[6 195]
[7 194]
[8 193]
[11 189]
[12 188]
[13 187]
[14 186]
[15 168]
[16 167]
[17 166]
[18 165]
[20 163]
[21 162]
[22 161]
[23 160]
[24 159]
[25 158]
[26 157]
[27 156]
[28 154]
[29 153]
[30 152]
[32 150]
[33 149]
[41 148]
[42 147]
[43 146]
[44 145]
[45 144]
[46 143]
[47 142]
[52 141]
[54 140]
[55 139]
[56 138]
[57 137]
[67 136]
[68 135]
[70 133]
[71 132]
[72 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
