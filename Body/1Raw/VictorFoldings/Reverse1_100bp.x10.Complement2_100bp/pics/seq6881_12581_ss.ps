%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[236.81564331 445.71951294]
[237.98878479 430.75607300]
[240.44390869 415.94885254]
[244.16285706 401.40750122]
[249.11810303 387.23968506]
[255.27293396 373.55029297]
[262.58181763 360.44067383]
[270.99060059 348.00790405]
[280.43704224 336.34402466]
[269.63488770 325.93664551]
[258.83273315 315.52929688]
[248.03057861 305.12191772]
[237.22842407 294.71453857]
[226.42625427 284.30715942]
[215.62409973 273.89978027]
[204.82194519 263.49243164]
[194.01979065 253.08505249]
[189.31282043 252.27668762]
[185.06367493 248.50285339]
[183.05677795 242.20333862]
[172.56927490 231.47895813]
[162.08177185 220.75457764]
[151.59426880 210.03019714]
[156.04667664 224.35417175]
[156.34078979 239.35128784]
[152.45343018 253.83882141]
[144.69117737 266.67419434]
[133.66616821 276.84521484]
[120.24790192 283.54971313]
[105.49459839 286.25891113]
[90.56975555 284.75924683]
[76.65041351 279.16888428]
[64.83431244 269.92877197]
[56.05331039 257.76760864]
[50.99992371 243.64445496]
[50.07268143 228.67314148]
[53.34470367 214.03436279]
[60.55795288 200.88259888]
[71.14355469 190.25503540]
[84.26669312 182.98982239]
[98.89241791 179.65992737]
[113.86727905 180.52795410]
[128.01029968 185.52543640]
[140.20861816 194.26066589]
[133.32920837 180.93122864]
[126.44979858 167.60180664]
[119.57038116 154.27236938]
[112.69097137 140.94294739]
[105.81156158 127.61351776]
[98.93214417 114.28408813]
[87.27133179 106.56935883]
[87.73842621 92.59532928]
[80.85900879 79.26589966]
[73.97959900 65.93647003]
[72.86327362 80.89487457]
[65.83118439 94.14439392]
[54.06837463 103.45224762]
[39.55707550 107.24991608]
[24.74270058 104.89740753]
[12.12173080 96.79116821]
[3.82102084 84.29724121]
[1.23938704 69.52107239]
[4.81187916 54.95270538]
[13.93647003 43.04716492]
[27.07550621 35.81074905]
[42.01482773 34.46291351]
[56.23689651 39.23079681]
[67.34602356 49.31227112]
[63.15900803 34.90848923]
[51.87715149 23.81658745]
[55.75429535 9.43545246]
[51.56728363 -4.96832991]
[40.28542709 -16.06023026]
[44.16257095 -30.44136429]
[39.97555923 -44.84514618]
[25.08891678 -42.79436493]
[10.06231880 -42.93304443]
[-4.78393888 -45.25822830]
[-19.13340950 -49.72035217]
[-32.68023300 -56.22430801]
[-45.13565445 -64.63146973]
[-56.23419189 -74.76262665]
[-65.73927307 -86.40183258]
[-73.44830322 -99.30101013]
[-79.19696045 -113.18520355]
[-82.86270905 -127.75847626]
[-84.36741638 -142.71018982]
[-83.67900848 -157.72164917]
[-80.81215668 -172.47288513]
[-75.82798004 -186.64947510]
[-68.83270264 -199.94924927]
[-59.97542953 -212.08871460]
[-49.44496536 -222.80912781]
[-37.46575546 -231.88195801]
[-24.29314613 -239.11384583]
[-10.20790768 -244.35063171]
[4.48973131 -247.48069763]
[19.48648834 -248.43731689]
[34.46270752 -247.20010376]
[49.09917068 -243.79542542]
[63.08390045 -238.29586792]
[76.11881256 -230.81863403]
[87.92606354 -221.52311707]
[98.25398254 -210.60743713]
[106.88243103 -198.30427551]
[113.62748718 -184.87588501]
[118.34539032 -170.60845947]
[120.93556976 -155.80613708]
[121.34281921 -140.78440857]
[119.55845642 -125.86349487]
[115.62052155 -111.36141205]
[109.61293793 -97.58727264]
[101.66377258 -84.83467865]
[91.94245148 -73.37545776]
[80.65618896 -63.45385742]
[68.04555511 -55.28135681]
[54.37934113 -49.03215790]
[58.56635284 -34.62837601]
[69.54872894 -24.56673050]
[65.97106934 -9.15534115]
[70.15808105 5.24844122]
[81.14044952 15.31008720]
[77.56278992 30.72147560]
[81.74980164 45.12525940]
[87.30902863 59.05705643]
[94.18843842 72.38648224]
[101.06785583 85.71591187]
[112.72866821 93.43064117]
[112.26157379 107.40467072]
[119.14099121 120.73410034]
[126.02040100 134.06353760]
[132.89981079 147.39295959]
[139.77922058 160.72239685]
[146.65863037 174.05181885]
[153.53805542 187.38124084]
[162.31864929 199.54270935]
[172.80615234 210.26708984]
[183.29365540 220.99147034]
[193.78115845 231.71583557]
[204.42716980 242.28289795]
[215.22932434 252.69026184]
[226.03147888 263.09762573]
[236.83363342 273.50500488]
[247.63578796 283.91238403]
[258.43795776 294.31976318]
[269.24011230 304.72714233]
[280.04226685 315.13449097]
[290.84442139 325.54187012]
[302.14868164 315.66790771]
[314.25991821 306.80227661]
[327.08843994 299.01058960]
[340.53930664 292.35058594]
[354.51290894 286.87155151]
[368.90579224 282.61401367]
[383.61138916 279.60955811]
[398.52081299 277.88040161]
[413.52371216 277.43933105]
[428.50900269 278.28961182]
[443.36569214 280.42498779]
[457.98382568 283.82958984]
[472.25518799 288.47827148]
[486.07406616 294.33657837]
[499.33816528 301.36117554]
[511.94931030 309.50000000]
[523.81414795 318.69281006]
[534.84472656 328.87155151]
[544.95947266 339.96087646]
[554.08349609 351.87869263]
[562.14923096 364.53671265]
[569.09692383 377.84124756]
[574.87518311 391.69381714]
[579.44122314 405.99182129]
[582.76116943 420.62939453]
[584.81054688 435.49822998]
[585.57409668 450.48815918]
[585.04626465 465.48825073]
[583.23083496 480.38745117]
[580.14135742 495.07540894]
[575.80059814 509.44342041]
[570.24078369 523.38507080]
[563.50305176 536.79718018]
[555.63726807 549.58038330]
[546.70172119 561.64013672]
[536.76251221 572.88708496]
[525.89324951 583.23791504]
[514.17437744 592.61608887]
[501.69274902 600.95214844]
[488.54067993 608.18432617]
[474.81558228 614.25909424]
[460.61904907 619.13153076]
[446.05624390 622.76550293]
[431.23492432 625.13409424]
[416.26486206 626.21984863]
[401.25689697 626.01464844]
[386.32211304 624.52001953]
[371.57110596 621.74707031]
[357.11309814 617.71624756]
[343.05511475 612.45751953]
[329.50122070 606.00976562]
[316.55181885 598.42065430]
[304.30273438 589.74652100]
[292.84466553 580.05145264]
[282.26248169 569.40722656]
[272.63449097 557.89276123]
[264.03198242 545.59326172]
[256.51867676 532.59973145]
[250.15016174 519.00842285]
[244.97360229 504.91995239]
[241.02732849 490.43862915]
[238.34057617 475.67169189]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 148]
[10 147]
[11 146]
[12 145]
[13 144]
[14 143]
[15 142]
[16 141]
[17 140]
[20 139]
[21 138]
[22 137]
[23 136]
[44 135]
[45 134]
[46 133]
[47 132]
[48 131]
[49 130]
[50 129]
[52 127]
[53 126]
[54 125]
[68 124]
[69 123]
[71 121]
[72 120]
[74 118]
[75 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
