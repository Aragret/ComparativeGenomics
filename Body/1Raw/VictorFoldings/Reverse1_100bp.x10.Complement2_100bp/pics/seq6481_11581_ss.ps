%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[100.07167053 638.51287842]
[86.89223480 646.70324707]
[71.41813660 645.54919434]
[59.59948349 635.49438477]
[55.98078918 620.40515137]
[61.95351410 606.08361816]
[75.22102356 598.03668213]
[76.33666992 583.07824707]
[69.56741333 569.81072998]
[78.30969238 556.62426758]
[79.42533875 541.66583252]
[72.65608215 528.39831543]
[81.39836121 515.21185303]
[82.51400757 500.25338745]
[72.63011169 489.16989136]
[73.54845428 473.98400879]
[85.24087524 463.69201660]
[78.47161102 450.42449951]
[87.21389008 437.23803711]
[88.32954407 422.27957153]
[89.22235870 407.30618286]
[89.89214325 392.32113647]
[90.56192780 377.33609009]
[91.23171234 362.35107422]
[88.72711182 358.28460693]
[88.75042725 352.60162354]
[92.15111542 346.93179321]
[93.26676178 331.97332764]
[94.38240814 317.01489258]
[95.38667297 302.04855347]
[96.27948761 287.07513428]
[97.17230225 272.10171509]
[98.06511688 257.12832642]
[98.40009308 242.13206482]
[98.17676544 227.13372803]
[97.95343781 212.13539124]
[97.73011017 197.13705444]
[97.28350830 182.14370728]
[96.50218201 167.16406250]
[95.60936737 152.19065857]
[94.71655273 137.21725464]
[93.82373810 122.24385071]
[92.93092346 107.27043915]
[89.34566498 100.05112457]
[92.13796234 92.06777191]
[91.46817780 77.08273315]
[90.79839325 62.09769440]
[90.01707458 47.11805725]
[89.12425995 32.14465332]
[88.23144531 17.17124748]
[79.12007141 8.04185677]
[78.68470001 -4.44790745]
[86.61363983 -13.58346748]
[85.94385529 -28.56850624]
[83.13318634 -32.96705246]
[82.36735535 -37.54600525]
[83.37265015 -41.49624634]
[85.59391785 -44.23455048]
[85.59391785 -59.23455048]
[85.59391785 -74.23455048]
[82.46451569 -82.81619263]
[85.70725250 -89.45746613]
[85.93058014 -104.45580292]
[86.15390778 -119.45413971]
[86.37723541 -134.45246887]
[78.84625244 -148.36631775]
[86.77218628 -160.97697449]
[76.04460144 -172.27107239]
[76.48474121 -187.47833252]
[87.31804657 -197.63584900]
[87.54137421 -212.63418579]
[87.76470184 -227.63252258]
[87.42972565 -242.62878418]
[86.53691101 -257.60220337]
[85.64408875 -272.57559204]
[84.75127411 -287.54901123]
[76.20629120 -300.86416626]
[83.17233276 -314.02941895]
[82.27951813 -329.00283813]
[81.38670349 -343.97622681]
[66.89221191 -348.35061646]
[54.79160309 -357.40307617]
[46.53377914 -370.02560425]
[43.09924698 -384.68420410]
[44.88375092 -399.60522461]
[51.65274048 -412.99011230]
[62.57202148 -423.23211670]
[76.31050110 -429.10913086]
[75.41768646 -444.08255005]
[74.52487183 -459.05593872]
[73.63205719 -474.02935791]
[72.62779236 -488.99569702]
[71.51214600 -503.95416260]
[70.39649963 -518.91259766]
[55.74360657 -522.72985840]
[43.12549591 -531.10015869]
[33.91087723 -543.11553955]
[29.09928703 -557.47271729]
[29.21265221 -572.61419678]
[34.23867416 -586.89770508]
[43.63216782 -598.77374268]
[56.37419510 -606.95422363]
[71.08260345 -610.55163574]
[86.16191864 -609.17584229]
[99.97647095 -602.97613525]
[111.02774811 -592.62487793]
[118.11698914 -579.24499512]
[120.47521210 -564.28778076]
[117.84661102 -549.37573242]
[110.51631927 -536.12640381]
[99.27946472 -525.97692871]
[85.35494995 -520.02825928]
[86.47059631 -505.06979370]
[87.58625031 -490.11135864]
[91.21853638 -483.67486572]
[88.60546112 -474.92218018]
[89.49827576 -459.94876099]
[90.39109039 -444.97534180]
[91.28390503 -430.00195312]
[105.62342072 -425.79913330]
[117.68239594 -416.92724609]
[125.99396515 -404.44155884]
[129.53890991 -389.83831787]
[127.87060547 -374.87545776]
[121.17124176 -361.36108398]
[110.23208618 -350.93481445]
[96.36010742 -344.86904907]
[97.25292206 -329.89562988]
[98.14573669 -314.92224121]
[106.62686157 -302.67807007]
[99.72468567 -288.44183350]
[100.61750031 -273.46841431]
[101.51031494 -258.49502563]
[102.40312958 -243.52160645]
[114.16019440 -252.83671570]
[128.80715942 -249.60153198]
[135.54682922 -236.20089722]
[129.41096497 -222.51327515]
[114.92269897 -218.62866211]
[102.76303864 -227.40919495]
[102.53971100 -212.41085815]
[102.31638336 -197.41252136]
[112.84245300 -186.93696594]
[112.82962799 -171.72334290]
[101.77052307 -160.75364685]
[109.31747437 -147.91259766]
[101.37557220 -134.22914124]
[101.15224457 -119.23081207]
[100.92891693 -104.23247528]
[100.70558929 -89.23413849]
[100.59391785 -74.23455048]
[100.59391785 -59.23455048]
[100.59391785 -44.23455048]
[100.92889404 -29.23829079]
[101.59867859 -14.25325298]
[111.82633972 0.00724905]
[103.20484924 16.27843094]
[104.09766388 31.25183678]
[104.99047852 46.22524261]
[108.52653503 52.71509171]
[105.78343201 61.42790985]
[106.45321655 76.41294861]
[107.12300110 91.39798737]
[107.90432739 106.37762451]
[108.79714203 121.35102844]
[109.68995667 136.32443237]
[110.58277130 151.29783630]
[111.47559357 166.27125549]
[115.11023712 174.65141296]
[112.26854706 181.47392273]
[115.49890900 187.24247742]
[115.35301971 192.92364502]
[112.72844696 196.91372681]
[112.95177460 211.91206360]
[113.17510223 226.91040039]
[113.39842987 241.90873718]
[125.55971527 233.12789917]
[140.04760742 237.01387024]
[146.18218994 250.70208740]
[139.44125366 264.10208130]
[124.79398346 267.33587646]
[113.03852844 258.02114868]
[112.14570618 272.99453735]
[111.25289154 287.96795654]
[110.36007690 302.94134521]
[112.97315216 311.69406128]
[109.34086609 318.13052368]
[108.22521973 333.08898926]
[107.10956573 348.04745483]
[106.21675110 363.02084351]
[105.54696655 378.00588989]
[104.87718201 392.99093628]
[104.20739746 407.97595215]
[106.91023254 414.00970459]
[106.25807190 419.65521240]
[103.28799438 423.39523315]
[102.17234802 438.35369873]
[108.86180878 452.69110107]
[100.19932556 464.80764771]
[110.23565674 476.72024536]
[108.89114380 491.87435913]
[97.47246552 501.36904907]
[96.35681152 516.32751465]
[103.04627228 530.66491699]
[94.38379669 542.78149414]
[93.26814270 557.73992920]
[99.95760345 572.07733154]
[91.29512024 584.19390869]
[90.17947388 599.15234375]
[102.10650635 609.07836914]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 209]
[8 208]
[10 206]
[11 205]
[13 203]
[14 202]
[17 199]
[19 197]
[20 196]
[21 193]
[22 192]
[23 191]
[24 190]
[27 189]
[28 188]
[29 187]
[30 185]
[31 184]
[32 183]
[33 182]
[34 176]
[35 175]
[36 174]
[37 173]
[38 170]
[39 168]
[40 167]
[41 166]
[42 165]
[43 164]
[45 163]
[46 162]
[47 161]
[48 159]
[49 158]
[50 157]
[53 155]
[54 154]
[58 153]
[59 152]
[60 151]
[62 150]
[63 149]
[64 148]
[65 147]
[67 145]
[70 142]
[71 141]
[72 140]
[73 134]
[74 133]
[75 132]
[76 131]
[78 129]
[79 128]
[80 127]
[88 119]
[89 118]
[90 117]
[91 116]
[92 114]
[93 113]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
