%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[20.01636505 173.70387268]
[22.47700500 188.50819397]
[23.79715729 203.45742798]
[23.96907616 218.46386719]
[22.99175072 233.43943787]
[20.87091827 248.29624939]
[17.61902428 262.94711304]
[13.25515366 277.30606079]
[7.80491304 291.28881836]
[1.30028820 304.81335449]
[-6.22054815 317.80026245]
[-14.71346092 330.17333984]
[-24.12860870 341.85998535]
[-34.41073990 352.79162598]
[-45.49951553 362.90408325]
[-57.32986069 372.13803101]
[-69.83234406 380.43927002]
[-82.93360138 387.75906372]
[-96.55674744 394.05453491]
[-110.62184143 399.28863525]
[-125.04632568 403.43072510]
[-139.74555969 406.45648193]
[-154.63328552 408.34811401]
[-169.62214661 409.09457397]
[-184.62414551 408.69143677]
[-199.55126953 407.14105225]
[-214.31591797 404.45257568]
[-228.83145142 400.64178467]
[-243.01266479 395.73098755]
[-256.77633667 389.74902344]
[-270.04171753 382.73101807]
[-282.73095703 374.71813965]
[-294.76956177 365.75741577]
[-306.08691406 355.90145874]
[-316.61660767 345.20803833]
[-326.29678345 333.73999023]
[-335.07070923 321.56454468]
[-342.88684082 308.75320435]
[-349.69934082 295.38110352]
[-355.46823120 281.52676392]
[-360.15966797 267.27148438]
[-363.74606323 252.69889832]
[-366.20642090 237.89453125]
[-367.52630615 222.94525146]
[-367.69793701 207.93881226]
[-366.72030640 192.96325684]
[-364.59921265 178.10649109]
[-361.34704590 163.45568848]
[-356.98287964 149.09681702]
[-351.53237915 135.11416626]
[-345.02749634 121.58976746]
[-337.50640869 108.60300446]
[-329.01327515 96.23007965]
[-319.59790039 84.54360962]
[-309.31555176 73.61217499]
[-298.22659302 63.49992752]
[-286.39608765 54.26620865]
[-273.89343262 45.96520615]
[-260.79205322 38.64563370]
[-247.16877747 32.35044861]
[-233.10359192 27.11658859]
[-218.67901611 22.97477531]
[-203.97972107 19.94931030]
[-189.09196472 18.05794907]
[-174.10310364 17.31179237]
[-159.10108948 17.71521759]
[-144.17399597 19.26585770]
[-129.40939331 21.95461464]
[-114.89395142 25.76570511]
[-100.71282959 30.67676926]
[-86.94925690 36.65898132]
[-73.68400574 43.67723846]
[-60.99493027 51.69035721]
[-48.95648575 60.65130234]
[-37.63932419 70.50749969]
[-27.10985565 81.20109558]
[-17.42987633 92.66934967]
[-8.65619183 104.84494781]
[-0.84029001 117.65644073]
[5.97196198 131.02865601]
[19.81944656 125.26261902]
[33.66693115 119.49658203]
[42.44207764 107.46138000]
[58.15615845 109.29937744]
[72.00364685 103.53334045]
[85.85112762 97.76731110]
[94.49384308 86.77662659]
[108.38283539 88.38520813]
[122.23032379 82.61917114]
[136.07780457 76.85313416]
[149.92529297 71.08710480]
[159.69090271 58.63947678]
[174.41452026 60.88989639]
[188.26200867 55.12386322]
[202.10949707 49.35783005]
[215.95697021 43.59179688]
[211.07901001 29.40172958]
[207.11085510 14.93085098]
[204.06849670 0.23743156]
[201.96418762 -14.61936378]
[200.80638123 -29.57971191]
[200.59976196 -44.58337402]
[201.34515381 -59.56993103]
[203.03955078 -74.47904205]
[205.67613220 -89.25066376]
[209.24427795 -103.82533264]
[213.72964478 -118.14434052]
[219.11413574 -132.15003967]
[225.37608337 -145.78604126]
[232.49028015 -158.99743652]
[240.42808533 -171.73100281]
[249.15750122 -183.93550110]
[258.64343262 -195.56175232]
[268.84762573 -206.56297302]
[279.72903442 -216.89485168]
[291.24380493 -226.51579285]
[303.34561157 -235.38703918]
[315.98568726 -243.47286987]
[329.11315918 -250.74075317]
[342.67517090 -257.16137695]
[356.61706543 -262.70895386]
[370.88278198 -267.36108398]
[385.41482544 -271.09906006]
[400.15466309 -273.90783691]
[415.04299927 -275.77609253]
[430.01983643 -276.69628906]
[445.02487183 -276.66476440]
[459.99771118 -275.68161011]
[474.87805176 -273.75079346]
[489.60598755 -270.88009644]
[504.12216187 -267.08108521]
[518.36822510 -262.36901855]
[532.28668213 -256.76290894]
[545.82159424 -250.28533936]
[558.91839600 -242.96234131]
[571.52435303 -234.82345581]
[583.58874512 -225.90142822]
[595.06298828 -216.23217773]
[605.90087891 -205.85466003]
[616.05877686 -194.81065369]
[625.49572754 -183.14462280]
[634.17376709 -170.90354919]
[642.05798340 -158.13671875]
[649.11657715 -144.89555359]
[655.32116699 -131.23335266]
[660.64678955 -117.20514679]
[665.07189941 -102.86740875]
[668.57873535 -88.27787018]
[671.15325928 -73.49529266]
[672.78497314 -58.57919693]
[673.46734619 -43.58963776]
[673.19769287 -28.58697891]
[671.97698975 -13.63162804]
[669.81024170 1.21619165]
[666.70617676 15.89669418]
[662.67724609 30.35076714]
[657.73968506 44.52020645]
[651.91339111 58.34795380]
[645.22180176 71.77833557]
[637.69183350 84.75727081]
[629.35388184 97.23249817]
[620.24151611 109.15377808]
[610.39135742 120.47310638]
[599.84313965 131.14491272]
[588.63934326 141.12622070]
[576.82501221 150.37684631]
[564.44769287 158.85952759]
[551.55737305 166.54011536]
[538.20581055 173.38768005]
[524.44689941 179.37463379]
[510.33590698 184.47689819]
[495.92974854 188.67391968]
[481.28640747 191.94877625]
[466.46481323 194.28831482]
[451.52468872 195.68309021]
[436.52621460 196.12748718]
[421.52972412 195.61973572]
[406.59561157 194.16184998]
[391.78405762 191.75973511]
[377.15466309 188.42303467]
[362.76635742 184.16519165]
[348.67706299 179.00337219]
[334.94354248 172.95832825]
[321.62106323 166.05442810]
[308.76327515 158.31945801]
[296.42193604 149.78456116]
[284.64678955 140.48411560]
[273.48522949 130.45556641]
[262.98217773 119.73928833]
[253.17994690 108.37844849]
[244.11799622 96.41877747]
[235.83282471 83.90843964]
[228.35780334 70.89781189]
[221.72300720 57.43928146]
[207.87551880 63.20531464]
[194.02804565 68.97134399]
[180.18055725 74.73738098]
[171.40541077 86.77258301]
[155.69132996 84.93459320]
[141.84384155 90.70062256]
[127.99635315 96.46665955]
[114.14887238 102.23268890]
[105.50615692 113.22337341]
[91.61716461 111.61479187]
[77.76967621 117.38082886]
[63.92219162 123.14686584]
[54.15658188 135.59448242]
[39.43296814 133.34407043]
[25.58548164 139.11010742]
[11.73799515 144.87614441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[80 210]
[81 209]
[82 208]
[84 206]
[85 205]
[86 204]
[88 202]
[89 201]
[90 200]
[91 199]
[93 197]
[94 196]
[95 195]
[96 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
