%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[-15.70500183 659.32928467]
[-26.80569077 669.43084717]
[-38.71272659 678.56805420]
[-51.34259796 686.67687988]
[-64.60670471 693.70043945]
[-78.41201019 699.58941650]
[-92.66167450 704.30249023]
[-107.25575256 707.80670166]
[-122.09187317 710.07739258]
[-137.06597900 711.09869385]
[-152.07301331 710.86334229]
[-167.00772095 709.37310791]
[-181.76535034 706.63836670]
[-196.24238586 702.67828369]
[-210.33728027 697.52069092]
[-223.95115662 691.20178223]
[-236.98852539 683.76580811]
[-249.35794067 675.26495361]
[-260.97262573 665.75891113]
[-271.75112915 655.31427002]
[-281.61785889 644.00433350]
[-290.50357056 631.90844727]
[-298.34594727 619.11145020]
[-305.08999634 605.70306396]
[-310.68838501 591.77740479]
[-315.10186768 577.43206787]
[-318.29946899 562.76776123]
[-320.25878906 547.88732910]
[-320.96606445 532.89514160]
[-320.41632080 517.89630127]
[-318.61340332 502.99609375]
[-315.57000732 488.29901123]
[-311.30746460 473.90814209]
[-305.85565186 459.92443848]
[-299.25283813 446.44595337]
[-291.54531860 433.56726074]
[-282.78713989 421.37872314]
[-273.03976440 409.96575928]
[-262.37158203 399.40847778]
[-250.85737610 389.78094482]
[-238.57792664 381.15063477]
[-225.61938477 373.57815552]
[-212.07264709 367.11654663]
[-198.03271484 361.81121826]
[-183.59806824 357.69931030]
[-168.86997986 354.80969238]
[-153.95175171 353.16262817]
[-138.94801331 352.76968384]
[-123.96401215 353.63360596]
[-109.10485840 355.74832153]
[-94.47476959 359.09902954]
[-80.17638397 363.66220093]
[-66.30998230 369.40585327]
[-59.43056870 356.07641602]
[-52.55115509 342.74700928]
[-45.67174149 329.41757202]
[-38.79232788 316.08813477]
[-38.51806259 308.70257568]
[-31.70997620 302.61260986]
[-24.63286972 289.38705444]
[-17.55576515 276.16152954]
[-32.18834686 279.46115112]
[-44.94146347 271.56445312]
[-48.50955200 256.99499512]
[-40.84864426 244.09886169]
[-26.34726143 240.26351929]
[-13.31245041 247.68603516]
[-9.21104050 262.11352539]
[-0.98223215 249.57211304]
[7.24657583 237.03071594]
[15.47538376 224.48931885]
[16.51651955 217.17236328]
[23.92123222 211.82369995]
[32.33584976 199.40620422]
[40.75046921 186.98870850]
[49.16508865 174.57122803]
[57.57970810 162.15373230]
[65.99432373 149.73623657]
[74.40894318 137.31874084]
[81.58431244 124.14625549]
[87.45326996 110.34207916]
[84.98957062 93.74971771]
[98.50133514 83.80947876]
[104.16412354 69.91944885]
[109.82690430 56.02942276]
[115.48969269 42.13939667]
[120.52661133 28.01036644]
[124.92760468 13.67051888]
[129.32859802 -0.66932833]
[133.72959900 -15.00917530]
[137.70170593 -29.47369957]
[141.24137878 -44.05007553]
[144.78105164 -58.62644958]
[148.21211243 -73.22877502]
[151.53436279 -87.85623169]
[154.20016479 -102.61744690]
[156.20417786 -117.48297882]
[158.20819092 -132.34851074]
[160.21220398 -147.21403503]
[146.34526062 -153.18148804]
[134.60325623 -162.66979980]
[125.85754395 -174.97486877]
[120.75709534 -189.18360901]
[119.68040466 -204.24160767]
[122.70737457 -219.03146362]
[129.61337280 -232.45568848]
[139.88594055 -243.51809692]
[152.76277161 -251.39779663]
[167.28833008 -255.51007080]
[182.38471985 -255.54972839]
[196.93168640 -251.51385498]
[209.84976196 -243.70193481]
[220.18031311 -232.69366455]
[227.15676880 -219.30590820]
[230.26141357 -204.53216553]
[229.26387024 -189.46871948]
[224.23815918 -175.23338318]
[215.55723572 -162.88250732]
[203.86526489 -153.33262634]
[190.02986145 -147.29238892]
[175.07772827 -145.21002197]
[173.07371521 -130.34449768]
[171.06970215 -115.47896576]
[169.06568909 -100.61343384]
[181.61981201 -108.82283020]
[196.32945251 -105.88574219]
[204.76826477 -93.48468018]
[202.10211182 -78.72352600]
[189.85829163 -70.05814362]
[175.05061340 -72.45245361]
[166.16181946 -84.53397369]
[162.83956909 -69.90650940]
[164.42352295 -62.68759155]
[159.35742188 -55.08677673]
[155.81774902 -40.51040268]
[152.27807617 -25.93402672]
[153.61967468 -23.47267151]
[154.06712341 -20.33158875]
[153.35664368 -16.84868240]
[151.35156250 -13.45101833]
[148.06945801 -10.60817719]
[143.66845703 3.73166966]
[139.26745605 18.07151604]
[134.86645508 32.41136551]
[148.59111023 26.35875893]
[162.62501526 31.65492439]
[168.92892456 45.26597595]
[163.89167786 59.39488220]
[150.39881897 65.94796753]
[136.17968750 61.17132950]
[129.37971497 47.80218124]
[123.71693420 61.69220734]
[118.05414581 75.58223724]
[112.39135742 89.47225952]
[116.25323486 100.45985413]
[111.77629089 111.21151733]
[101.25744629 116.21104431]
[95.38848877 130.01521301]
[107.61537170 121.32595062]
[122.30310059 118.28120422]
[136.97654724 121.39408112]
[149.16297913 130.13999939]
[156.80874634 143.04512024]
[158.62542725 157.93469238]
[154.30686951 172.29959106]
[144.58082581 183.71905518]
[131.08630371 190.26870728]
[116.09737396 190.84481812]
[102.13993073 185.35029602]
[91.56604004 174.71109009]
[86.15760040 160.72006226]
[86.82643890 145.73335266]
[78.41181946 158.15084839]
[69.99720001 170.56834412]
[61.58258438 182.98583984]
[53.16796494 195.40333557]
[44.75334549 207.82083130]
[36.33872604 220.23832703]
[28.01678467 232.71812439]
[19.78797531 245.25952148]
[11.55916786 257.80093384]
[3.33036017 270.34231567]
[-4.33023691 283.23864746]
[-11.40734291 296.46417236]
[-18.48444748 309.68969727]
[-25.46290016 322.96755981]
[-32.34231186 336.29696655]
[-39.22172546 349.62640381]
[-46.10113907 362.95584106]
[-52.98054886 376.28527832]
[-40.26580811 384.26034546]
[-28.26299858 393.27139282]
[-17.05631828 403.25521851]
[-6.72437477 414.14181519]
[2.66036105 425.85476685]
[11.03206062 438.31192017]
[18.33200073 451.42593384]
[24.50897789 465.10482788]
[29.51966286 479.25259399]
[33.32891083 493.77005005]
[35.90999985 508.55532837]
[37.24482727 523.50469971]
[37.32402802 538.51342773]
[36.14704895 553.47607422]
[33.72214508 568.28778076]
[30.06632423 582.84460449]
[25.20523071 597.04449463]
[19.17296219 610.78778076]
[12.01183128 623.97808838]
[3.77206898 636.52294922]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 190]
[54 189]
[55 188]
[56 187]
[57 186]
[59 185]
[60 184]
[61 183]
[68 182]
[69 181]
[70 180]
[71 179]
[73 178]
[74 177]
[75 176]
[76 175]
[77 174]
[78 173]
[79 172]
[80 158]
[81 157]
[83 154]
[84 153]
[85 152]
[86 151]
[87 144]
[88 143]
[89 142]
[90 141]
[91 136]
[92 135]
[93 134]
[94 132]
[95 131]
[96 124]
[97 123]
[98 122]
[99 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
