%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[103.54358673 633.00805664]
[91.10066986 624.60699463]
[79.58752441 614.97106934]
[69.12619781 604.20239258]
[59.82757568 592.41510010]
[51.79023743 579.73419189]
[45.09938049 566.29412842]
[39.82593536 552.23724365]
[36.02579498 537.71270752]
[33.73925400 522.87438965]
[32.99054337 507.87960815]
[33.78760147 492.88729858]
[36.12198257 478.05645752]
[39.96893311 463.54421997]
[45.28768158 449.50445557]
[52.02184296 436.08596802]
[60.10002899 423.43106079]
[69.43660736 411.67382812]
[79.93260956 400.93893433]
[91.47676849 391.34017944]
[103.94670868 382.97927856]
[117.21024323 375.94488525]
[131.12677002 370.31158447]
[145.54876709 366.13903809]
[142.88298035 351.37783813]
[140.21717834 336.61660767]
[137.55139160 321.85537720]
[125.51020050 309.08914185]
[131.88055420 291.81201172]
[128.99528503 277.09210205]
[126.11001587 262.37222290]
[121.73861694 256.41296387]
[123.29307556 247.41177368]
[120.62728119 232.65055847]
[117.96148682 217.88934326]
[115.29569244 203.12812805]
[105.41967773 191.97853088]
[110.58124542 177.02296448]
[107.47713470 162.34767151]
[96.95498657 151.80566406]
[101.21723175 136.56939697]
[97.67756653 121.99302673]
[94.13789368 107.41664886]
[90.39247131 103.74434662]
[88.97119141 98.23496246]
[90.71670532 92.35363007]
[87.61259460 77.67832947]
[84.50848389 63.00302505]
[81.40437317 48.32772064]
[78.30026245 33.65242004]
[73.46270752 25.90414047]
[75.26090240 18.73557663]
[71.82984161 4.13325500]
[67.85774231 -10.33126831]
[63.88564682 -24.79579353]
[59.91355133 -39.26031494]
[55.94145584 -53.72484207]
[51.96935654 -68.18936157]
[47.99726105 -82.65388489]
[44.02516556 -97.11841583]
[40.05307007 -111.58293915]
[36.33799362 -115.24971771]
[34.57701874 -119.54532623]
[34.68243790 -123.62012482]
[36.24204636 -126.78239441]
[25.64039230 -138.52613831]
[30.36664200 -152.65100098]
[27.04438210 -167.27845764]
[16.44272804 -179.02220154]
[21.16897774 -193.14706421]
[17.84671974 -207.77453613]
[14.52445984 -222.40199280]
[11.20219994 -237.02944946]
[7.23010397 -251.49397278]
[2.61609459 -265.76672363]
[-1.99791479 -280.03942871]
[-6.61192417 -294.31216431]
[-11.22593307 -308.58489990]
[-26.13360023 -306.58459473]
[-41.15885544 -307.27850342]
[-55.81869507 -310.64431763]
[-69.64187622 -316.57388306]
[-82.18402863 -324.87652588]
[-93.04198456 -335.28540039]
[-101.86669159 -347.46588135]
[-108.37448883 -361.02642822]
[-112.35617065 -375.53112793]
[-113.68373871 -390.51370239]
[-112.31452179 -405.49252319]
[-108.29252625 -419.98608398]
[-101.74705505 -433.52847290]
[-92.88851166 -445.68438721]
[-82.00166321 -456.06301880]
[-69.43647003 -464.33078003]
[-55.59686279 -470.22186279]
[-40.92771912 -473.54693604]
[-25.90059471 -474.19906616]
[-10.99854755 -472.15731812]
[3.29938269 -467.48730469]
[16.53357697 -460.33917236]
[28.27860832 -450.94268799]
[38.15692520 -439.59988403]
[45.85097885 -426.67544556]
[51.11344147 -412.58480835]
[53.77513885 -397.78091431]
[53.75051498 -382.73965454]
[51.04035950 -367.94458008]
[45.73179245 -353.87124634]
[37.99546432 -340.97204590]
[28.08006096 -329.66168213]
[16.30432701 -320.30368042]
[3.04680014 -313.19891357]
[7.66080952 -298.92617798]
[12.27481842 -284.65344238]
[16.88882828 -270.38070679]
[21.50283623 -256.10797119]
[29.27908516 -268.93490601]
[43.81428146 -272.64004517]
[56.78200150 -265.10095215]
[60.75375366 -250.63632202]
[53.45433044 -237.53218079]
[39.06517792 -233.29518127]
[25.82966042 -240.35171509]
[29.15192032 -225.72425842]
[32.47417831 -211.09678650]
[35.79644012 -196.46932983]
[46.16046143 -185.77183533]
[41.67184067 -170.60072327]
[44.99410248 -155.97326660]
[55.35812378 -145.27577209]
[50.86950684 -130.10466003]
[54.51759338 -115.55503082]
[58.48968887 -101.09050751]
[62.46178436 -86.62598419]
[66.43388367 -72.16146088]
[70.40597534 -57.69693756]
[74.37807465 -43.23241425]
[78.35017395 -28.76788902]
[82.32226562 -14.30336475]
[86.29436493 0.16115890]
[95.86925507 -11.38533115]
[110.86865234 -11.25122547]
[120.23556519 0.46461883]
[117.06504822 15.12571716]
[103.69429016 21.92445374]
[89.98078918 15.85030460]
[92.97556305 30.54830933]
[96.07967377 45.22360992]
[99.18378448 59.89891434]
[102.28789520 74.57421875]
[105.39200592 89.24951935]
[108.71426392 103.87697601]
[112.25393677 118.45335388]
[115.79360962 133.02972412]
[126.56893921 144.61433411]
[122.05350494 158.80799866]
[125.16058350 161.84115601]
[126.95989227 165.35214233]
[127.46179962 168.87115479]
[126.82817841 171.98004150]
[125.34246063 174.35717773]
[135.40914917 186.56259155]
[130.05691528 200.46232605]
[132.72270203 215.22355652]
[135.38850403 229.98477173]
[138.05429077 244.74598694]
[140.82991028 259.48693848]
[143.71517944 274.20684814]
[146.60044861 288.92672729]
[156.84983826 296.75698853]
[158.94995117 309.07662964]
[152.31260681 319.18960571]
[154.97839355 333.95080566]
[157.64419556 348.71203613]
[160.30999756 363.47323608]
[175.28044128 362.33764648]
[190.28831482 362.74737549]
[205.17451477 364.69808960]
[219.78121948 368.16909790]
[233.95362854 373.12359619]
[247.54147339 379.50906372]
[260.40072632 387.25784302]
[272.39508057 396.28778076]
[283.39736938 406.50311279]
[293.29098511 417.79562378]
[301.97103882 430.04553223]
[309.34552002 443.12304688]
[315.33627319 456.88949585]
[319.87973022 471.19897461]
[322.92779541 485.89974976]
[324.44812012 500.83605957]
[324.42462158 515.84948730]
[322.85751343 530.78094482]
[319.76342773 545.47210693]
[315.17514038 559.76727295]
[309.14132690 573.51489258]
[301.72592163 586.56921387]
[293.00753784 598.79193115]
[283.07861328 610.05334473]
[272.04437256 620.23419189]
[260.02178955 629.22650146]
[247.13832092 636.93499756]
[233.53054810 643.27789307]
[219.34269714 648.18798828]
[204.72517395 651.61322021]
[189.83294678 653.51727295]
[174.82386780 653.88000488]
[159.85704041 652.69750977]
[145.09112549 649.98236084]
[130.68266296 645.76336670]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 175]
[25 174]
[26 173]
[27 172]
[29 169]
[30 168]
[31 167]
[33 166]
[34 165]
[35 164]
[36 163]
[38 161]
[39 156]
[41 154]
[42 153]
[43 152]
[46 151]
[47 150]
[48 149]
[49 148]
[50 147]
[52 146]
[53 140]
[54 139]
[55 138]
[56 137]
[57 136]
[58 135]
[59 134]
[60 133]
[61 132]
[65 131]
[67 129]
[68 128]
[70 126]
[71 125]
[72 124]
[73 123]
[74 116]
[75 115]
[76 114]
[77 113]
[78 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
