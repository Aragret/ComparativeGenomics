%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[133.61647034 563.92474365]
[136.76736450 549.21954346]
[142.42411804 535.28497314]
[150.41479492 522.54449463]
[160.49656677 511.38522339]
[172.36309814 502.14633179]
[185.65373230 495.10858154]
[181.03973389 480.83584595]
[176.42572021 466.56311035]
[171.81170654 452.29040527]
[160.53462219 442.56018066]
[163.65185547 427.04910278]
[158.95706177 441.29547119]
[147.83415222 451.35931396]
[133.19059753 454.60995483]
[118.85421753 450.19769287]
[108.57249451 439.27587891]
[105.03304291 424.69943237]
[109.16107178 410.27865601]
[119.87751770 399.78305054]
[134.38113403 395.95614624]
[148.88070679 399.79833984]
[159.58563232 410.30447388]
[157.13990784 395.50518799]
[154.69418335 380.70590210]
[152.24845886 365.90664673]
[149.80273438 351.10736084]
[134.30627441 341.36184692]
[130.79421997 323.07034302]
[141.95562744 307.76226807]
[139.07034302 293.04238892]
[136.18507385 278.32247925]
[133.29980469 263.60260010]
[130.41453552 248.88270569]
[127.09226990 234.25524902]
[123.33596802 219.73318481]
[119.57966614 205.21112061]
[115.82336426 190.68907166]
[105.14543152 180.30490112]
[109.18036652 165.00686646]
[105.42406464 150.48480225]
[101.66776276 135.96273804]
[97.91146088 121.44068146]
[94.15515900 106.91862488]
[91.14314270 104.51028442]
[89.20730591 100.78598022]
[88.91157532 96.25612640]
[90.57085419 91.66410828]
[87.46674347 76.98880768]
[84.36264038 62.31350327]
[81.25852966 47.63820267]
[78.24313354 44.51388168]
[76.54916382 40.95088196]
[76.15225220 37.41847992]
[76.87815857 34.32984161]
[78.43399048 31.99799156]
[68.73516083 19.49826241]
[74.49887848 5.76404095]
[72.27375793 -9.07000256]
[70.04864502 -23.90404701]
[67.82352448 -38.73809052]
[65.59841156 -53.57213211]
[54.71928024 -43.24525070]
[39.84209442 -45.16080093]
[31.93375969 -57.90671158]
[36.82400894 -72.08717346]
[50.90792847 -77.24887848]
[63.80245972 -69.58817291]
[62.68680954 -84.54663086]
[61.57116318 -99.50508118]
[60.45551300 -114.46353912]
[51.71323395 -127.65000916]
[58.48249435 -140.91751099]
[57.36684418 -155.87596130]
[42.45425797 -157.92379761]
[28.29889107 -163.02558899]
[15.51865864 -170.95606995]
[4.67090988 -181.36650085]
[-3.77187562 -193.80010986]
[-9.44267082 -207.71202087]
[-12.09585285 -222.49324036]
[-11.61784267 -237.49722290]
[-8.03196716 -252.06822205]
[-1.49732685 -265.56991577]
[7.69825459 -277.41317749]
[19.15091133 -287.08181763]
[32.35847092 -294.15509033]
[46.74247360 -298.32598877]
[45.62682343 -313.28442383]
[44.51117325 -328.24288940]
[43.39552689 -343.20132446]
[42.27987671 -358.15979004]
[41.16423035 -373.11825562]
[26.42496109 -376.47164917]
[13.32978630 -384.02200317]
[3.04311872 -395.09793091]
[-3.52035880 -408.71453857]
[-5.77702618 -423.66107178]
[-3.52622199 -438.60848999]
[3.03191400 -452.22769165]
[13.31423664 -463.30761719]
[26.40644836 -470.86312866]
[41.14439774 -474.22232056]
[56.21760178 -473.08651733]
[70.28575134 -467.55673218]
[82.09792328 -458.12466431]
[90.60379028 -445.62899780]
[95.04701233 -431.18084717]
[95.03249359 -416.06491089]
[90.56153870 -401.62533569]
[82.03169250 -389.14602661]
[70.20143127 -379.73663330]
[56.12268066 -374.23388672]
[57.23833084 -359.27545166]
[58.35398102 -344.31698608]
[59.46962738 -329.35852051]
[60.58527756 -314.40008545]
[61.70092392 -299.44161987]
[76.54450226 -297.45062256]
[90.65518951 -292.41482544]
[103.41539764 -284.55206299]
[114.26608276 -274.20391846]
[122.73128510 -261.82095337]
[128.43896484 -247.94309998]
[131.13739014 -233.17602539]
[130.70622253 -218.16477966]
[127.16188049 -203.56556702]
[120.65692139 -190.01710510]
[111.47348785 -178.11268616]
[100.01106262 -168.37411499]
[86.76911926 -161.22892761]
[72.32529449 -156.99160767]
[73.44094849 -142.03315735]
[82.10342407 -129.91661072]
[75.41396332 -115.57918549]
[76.52961731 -100.62073517]
[77.64526367 -85.66227722]
[78.76091003 -70.70382690]
[80.43245697 -55.79725266]
[82.65756989 -40.96320724]
[84.88269043 -26.12916374]
[87.10780334 -11.29512024]
[89.33292389 3.53892398]
[98.87259674 14.97762489]
[93.26803589 29.77287483]
[95.93383026 44.53409195]
[99.03794098 59.20939636]
[102.14205170 73.88469696]
[105.24616241 88.55999756]
[108.67722321 103.16232300]
[112.43352509 117.68437958]
[116.18981934 132.20643616]
[119.94612122 146.72850037]
[123.70242310 161.25056458]
[134.64903259 172.67344666]
[130.34542847 186.93276978]
[134.10173035 201.45481873]
[137.85803223 215.97688293]
[141.61433411 230.49894714]
[144.76622009 233.48550415]
[146.61759949 236.96931458]
[147.17184448 240.48046875]
[146.58457947 243.59843445]
[145.13441467 245.99743652]
[148.01969910 260.71731567]
[150.90496826 275.43722534]
[153.79023743 290.15710449]
[156.67550659 304.87698364]
[167.64422607 309.46218872]
[174.96272278 318.67849731]
[176.90345764 330.16445923]
[173.09838867 341.04733276]
[164.60200500 348.66165161]
[167.04772949 363.46090698]
[169.49345398 378.26019287]
[171.93917847 393.05944824]
[174.38490295 407.85873413]
[177.92457581 422.43511963]
[189.53169250 433.18618774]
[186.08444214 447.67639160]
[190.69845581 461.94912720]
[195.31245422 476.22186279]
[199.92646790 490.49456787]
[214.82174683 488.42053223]
[229.85089111 488.96475220]
[244.55715942 492.11065674]
[258.49365234 497.76263428]
[271.23687744 505.74899292]
[282.39953613 515.82696533]
[291.64245605 527.69036865]
[298.68472290 540.97857666]
[303.31234741 555.28790283]
[305.38470459 570.18341064]
[304.83880615 585.21252441]
[301.69122314 599.91839600]
[296.03765869 613.85424805]
[288.04986572 626.59655762]
[277.97061157 637.75811768]
[266.10620117 646.99969482]
[252.81713867 654.04046631]
[238.50730896 658.66644287]
[223.61155701 660.73712158]
[208.58255005 660.18951416]
[193.87698364 657.04028320]
[179.94177246 651.38507080]
[167.20037842 643.39587402]
[156.03997803 633.31536865]
[146.79975891 621.44989014]
[139.76049805 608.16003418]
[135.13612366 593.84967041]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 183]
[8 182]
[9 181]
[10 180]
[12 178]
[23 177]
[24 176]
[25 175]
[26 174]
[27 173]
[30 168]
[31 167]
[32 166]
[33 165]
[34 164]
[35 159]
[36 158]
[37 157]
[38 156]
[40 154]
[41 153]
[42 152]
[43 151]
[44 150]
[48 149]
[49 148]
[50 147]
[51 146]
[56 145]
[58 143]
[59 142]
[60 141]
[61 140]
[62 139]
[68 138]
[69 137]
[70 136]
[71 135]
[73 133]
[74 132]
[88 118]
[89 117]
[90 116]
[91 115]
[92 114]
[93 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
