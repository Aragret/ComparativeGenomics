%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[130.60060120 499.22637939]
[143.54597473 491.45980835]
[139.57388306 476.99526978]
[128.74252319 466.77124023]
[132.54924011 451.41482544]
[128.57714844 436.95028687]
[124.60504913 422.48577881]
[119.80252838 416.86816406]
[120.68321228 407.77627563]
[116.92691040 393.25424194]
[113.17060852 378.73217773]
[109.41430664 364.21011353]
[99.15394592 357.80294800]
[95.90566254 345.73513794]
[101.93747711 334.33425903]
[98.39780426 319.75787354]
[94.85813141 305.18151855]
[84.33598328 294.63949585]
[88.59823608 279.40322876]
[85.05856323 264.82687378]
[81.51889038 250.25048828]
[77.97921753 235.67411804]
[74.70270538 250.31188965]
[68.18160248 263.82022095]
[58.75798035 275.49050903]
[46.92618942 284.71051025]
[33.30690002 290.99661255]
[18.61455536 294.01904297]
[3.61988497 293.61923218]
[-10.89052105 289.81814575]
[-24.15547562 282.81521606]
[-35.47912598 272.97781372]
[-44.26745605 260.82192993]
[-50.05944443 246.98527527]
[-52.55126190 232.19369507]
[-51.61218643 217.22311401]
[-47.29148483 202.85887146]
[-39.81580734 189.85447693]
[-29.57731438 178.89212036]
[-17.11310005 170.54685974]
[-3.07701087 165.25648499]
[11.79464912 163.29849243]
[26.72174263 164.77560425]
[40.92122269 169.61035156]
[53.64821625 177.54910278]
[64.23508453 188.17539978]
[72.12646484 200.93180847]
[76.90874481 215.15078735]
[78.91275787 200.28526306]
[80.91677094 185.41973877]
[82.92078400 170.55419922]
[84.92479706 155.68867493]
[86.92881012 140.82315063]
[88.93282318 125.95761871]
[90.93683624 111.09209442]
[85.80446625 98.08631134]
[94.19763184 86.90389252]
[82.32248688 96.06800842]
[67.33040619 95.58060455]
[56.07557297 85.66452026]
[53.70354080 70.85326385]
[61.29877090 57.91833115]
[75.38882446 52.77340317]
[89.53192902 57.77067566]
[97.26239777 70.62727356]
[100.80207062 56.05089951]
[104.34174347 41.47452164]
[107.88141632 26.89814758]
[109.77471161 12.01811314]
[109.99803925 -2.98022461]
[110.22136688 -17.97856140]
[100.88191986 -33.84854507]
[110.46261597 -48.55151367]
[110.46261597 -63.55151367]
[110.46261597 -78.55151367]
[110.46261597 -93.55151367]
[107.85115051 -98.07117462]
[107.29054260 -102.67975616]
[108.47122955 -106.58116913]
[110.81255341 -109.21755981]
[111.48233795 -124.20259857]
[104.36896515 -138.33448792]
[112.66684723 -150.70358276]
[113.33663177 -165.68861389]
[110.92958832 -170.32037354]
[110.57532501 -174.94940186]
[111.92903900 -178.79420471]
[114.38574982 -181.32341003]
[115.72398376 -196.26359558]
[117.06221771 -211.20378113]
[118.40045166 -226.14396667]
[119.73868561 -241.08415222]
[121.07691956 -256.02435303]
[122.41515350 -270.96450806]
[123.75338745 -285.90469360]
[125.09162140 -300.84487915]
[126.42985535 -315.78506470]
[127.76808929 -330.72525024]
[129.10632324 -345.66543579]
[115.18606567 -351.58840942]
[103.77873230 -361.52459717]
[96.00191498 -374.50061035]
[92.61750031 -389.24511719]
[93.95705414 -404.31365967]
[99.88934326 -418.22994995]
[109.83318329 -429.63061523]
[122.81437683 -437.39874268]
[137.56115723 -440.77328491]
[152.62879944 -439.42361450]
[166.54110718 -433.48202515]
[177.93510437 -423.53054810]
[185.69453430 -410.54412842]
[189.05918884 -395.79510498]
[187.69944763 -380.72836304]
[181.74850464 -366.82003784]
[171.78939819 -355.43270874]
[158.79780579 -347.68197632]
[144.04650879 -344.32720947]
[142.70828247 -329.38702393]
[141.37004089 -314.44683838]
[140.03181458 -299.50665283]
[138.69357300 -284.56646729]
[137.35534668 -269.62628174]
[136.01710510 -254.68611145]
[134.67886353 -239.74592590]
[133.34063721 -224.80574036]
[132.00239563 -209.86555481]
[130.66416931 -194.92536926]
[129.32592773 -179.98518372]
[128.32167053 -165.01882935]
[127.65188599 -150.03379822]
[134.81317139 -136.97372437]
[126.46737671 -123.53280640]
[125.79759216 -108.54776764]
[125.46261597 -93.55151367]
[125.46261597 -78.55151367]
[125.46261597 -63.55151367]
[125.46261597 -48.55151367]
[133.79156494 -39.77910995]
[133.91433716 -27.28236198]
[125.21970367 -17.75523376]
[124.99637604 -2.75689697]
[124.77304840 12.24144077]
[132.38925171 -0.68114913]
[144.11402893 -10.03689003]
[158.40473938 -14.59487343]
[173.38124084 -13.75541878]
[187.07308960 -7.62897062]
[197.67887878 2.97843170]
[203.80326843 16.67120171]
[204.64045715 31.64782143]
[200.08032227 45.93785477]
[190.72280884 57.66120911]
[177.79907227 65.27546692]
[163.00944519 67.77884674]
[148.29975891 64.84198761]
[135.60531616 56.85128403]
[126.59631348 44.85804367]
[122.45779419 30.43782043]
[118.91812134 45.01419449]
[115.37844849 59.59057236]
[111.83877563 74.16694641]
[109.06316376 88.90790558]
[114.19553375 101.91368866]
[105.80236816 113.09610748]
[103.79835510 127.96163177]
[101.79433441 142.82716370]
[99.79032135 157.69268799]
[97.78630829 172.55821228]
[95.78229523 187.42375183]
[93.77828217 202.28927612]
[91.77426910 217.15480042]
[92.55559540 232.13444519]
[96.09526825 246.71081543]
[99.63493347 261.28720093]
[103.17460632 275.86355591]
[113.94993591 287.44815063]
[109.43450928 301.64184570]
[112.97418213 316.21820068]
[116.51385498 330.79458618]
[129.52987671 343.82012939]
[123.93636322 360.45379639]
[127.69266510 374.97586060]
[131.44897461 389.49792480]
[135.20526123 404.01998901]
[139.06958008 418.51367188]
[143.04167175 432.97821045]
[147.01376343 447.44271851]
[158.12922668 458.70135498]
[154.03840637 473.02319336]
[158.01049805 487.48770142]
[173.10679626 487.55377197]
[187.62513733 491.69143677]
[200.48817444 499.59365845]
[210.74136353 510.67404175]
[217.62387085 524.11029053]
[220.62496948 538.90545654]
[219.52194214 553.96154785]
[214.39663696 568.16131592]
[205.62940979 580.45111084]
[193.87083435 589.91882324]
[179.99346924 595.86199951]
[165.02711487 597.83959961]
[150.08238220 595.70483398]
[136.26824951 589.61614990]
[124.60981750 580.02532959]
[115.97224426 567.64410400]
[110.99647522 553.39123535]
[110.05175018 538.32434082]
[113.20816803 523.56158447]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 191]
[3 190]
[5 188]
[6 187]
[7 186]
[9 185]
[10 184]
[11 183]
[12 182]
[15 180]
[16 179]
[17 178]
[19 176]
[20 175]
[21 174]
[22 173]
[48 172]
[49 171]
[50 170]
[51 169]
[52 168]
[53 167]
[54 166]
[55 165]
[57 163]
[65 162]
[66 161]
[67 160]
[68 159]
[69 143]
[70 142]
[71 141]
[73 138]
[74 137]
[75 136]
[76 135]
[80 134]
[81 133]
[83 131]
[84 130]
[88 129]
[89 128]
[90 127]
[91 126]
[92 125]
[93 124]
[94 123]
[95 122]
[96 121]
[97 120]
[98 119]
[99 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
