%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[128.55397034 683.54815674]
[120.12928009 671.12176514]
[113.00500488 657.90673828]
[107.25423431 644.03881836]
[102.93598175 629.66021729]
[100.09456635 614.91857910]
[98.75914764 599.96502686]
[98.94341278 584.95312500]
[100.64549255 570.03692627]
[103.84790802 555.36938477]
[108.51779938 541.10113525]
[114.60723877 527.37854004]
[122.05375671 514.34240723]
[130.78091431 502.12655640]
[140.69918823 490.85629272]
[151.70677185 480.64727783]
[163.69073486 471.60427856]
[176.52807617 463.82009888]
[190.08708191 457.37457275]
[185.05015564 443.24554443]
[180.01324463 429.11651611]
[174.97633362 414.98748779]
[169.93940735 400.85845947]
[162.54852295 413.91122437]
[148.13008118 418.04751587]
[134.94363403 410.89782715]
[130.54298401 396.55789185]
[137.44900513 383.24221802]
[151.70562744 378.57867432]
[165.14538574 385.23800659]
[161.38908386 370.71594238]
[157.63278198 356.19387817]
[153.87648010 341.67181396]
[150.12017822 327.14978027]
[146.14808655 312.68524170]
[141.96107483 298.28146362]
[137.77406311 283.87768555]
[133.58705139 269.47390747]
[130.68971252 267.46447754]
[128.62173462 263.95184326]
[128.07897949 259.34112549]
[129.55015564 254.33287048]
[126.01047516 239.75648499]
[122.47080994 225.18011475]
[118.93113708 210.60374451]
[115.39146423 196.02735901]
[111.85179138 181.45098877]
[108.31211853 166.87461853]
[104.77244568 152.29823303]
[101.23277283 137.72186279]
[97.69309998 123.14548492]
[93.05996704 117.38737488]
[94.21095276 108.32575226]
[89.49658203 101.78761292]
[90.94983673 93.45581818]
[87.84572601 78.78050995]
[84.74161530 64.10520935]
[80.87731171 49.61151505]
[69.27021027 38.86043549]
[72.71745300 24.37024117]
[68.10344696 10.09750748]
[56.49634171 -0.65357292]
[59.94358444 -15.14376831]
[55.32957840 -29.41650200]
[50.71556854 -43.68923569]
[46.10155869 -57.96196747]
[32.15279007 -69.98334503]
[36.49365234 -86.98698425]
[24.72776604 -97.56406403]
[27.95889091 -112.10397339]
[23.13289452 -126.30643463]
[18.30689621 -140.50888062]
[13.48089886 -154.71134949]
[8.65490055 -168.91380310]
[-6.13595200 -166.25140381]
[-21.15841484 -165.82331848]
[-36.07688141 -167.63908386]
[-50.55806732 -171.65815735]
[-64.27845001 -177.79075623]
[-76.93152618 -185.89984131]
[-88.23461151 -195.80427551]
[-97.93518829 -207.28280640]
[-105.81655121 -220.07896423]
[-111.70262146 -233.90690613]
[-115.46190643 -248.45768738]
[-117.01041412 -263.40625000]
[-116.31356049 -278.41867065]
[-113.38690186 -293.15948486]
[-108.29582977 -307.29946899]
[-101.15408325 -320.52267456]
[-92.12120056 -332.53369141]
[-81.39899445 -343.06420898]
[-69.22698212 -351.87896729]
[-55.87711334 -358.78103638]
[-41.64761353 -363.61621094]
[-26.85638237 -366.27651978]
[-11.83385849 -366.70245361]
[3.08434892 -364.88455200]
[17.56496048 -360.86343384]
[31.28447533 -354.72888184]
[43.93639374 -346.61798096]
[55.23806763 -336.71194458]
[64.93701172 -325.23202515]
[72.81655121 -312.43475342]
[78.70065308 -298.60598755]
[82.45786285 -284.05465698]
[84.00424194 -269.10586548]
[83.30524445 -254.09356689]
[80.37649536 -239.35314941]
[75.28340912 -225.21389771]
[68.13977814 -211.99171448]
[59.10518646 -199.98197937]
[48.38147354 -189.45298767]
[36.20821381 -180.63996887]
[22.85735703 -173.73979187]
[27.68335342 -159.53733826]
[32.50935364 -145.33488464]
[37.33535004 -131.13243103]
[42.16134644 -116.92996979]
[53.58204269 -107.36875153]
[50.69610596 -91.81298065]
[61.40458679 -86.18670654]
[65.54144287 -74.39390564]
[60.37429047 -62.57597733]
[64.98830414 -48.30324554]
[69.60231018 -34.03050995]
[74.21631622 -19.75777817]
[85.49340057 -10.02757931]
[82.37617493 5.48349810]
[86.99018860 19.75623131]
[98.26726532 29.48643112]
[95.15004730 44.99750900]
[101.90152740 31.60282707]
[115.63327026 25.56633568]
[130.06730652 29.64783478]
[138.60458374 41.98131943]
[137.34197998 56.92808533]
[126.85674286 67.65467834]
[111.94257355 69.25703430]
[99.41691589 61.00109863]
[102.52102661 75.67639923]
[105.62513733 90.35170746]
[108.83841705 105.00349426]
[112.26947784 119.60581207]
[115.80915070 134.18218994]
[119.34881592 148.75856018]
[122.88848877 163.33494568]
[126.42816162 177.91131592]
[129.96783447 192.48768616]
[133.50750732 207.06407166]
[137.04718018 221.64044189]
[140.58685303 236.21681213]
[144.12652588 250.79319763]
[147.99082947 265.28689575]
[152.17784119 279.69067383]
[156.36485291 294.09445190]
[160.55186462 308.49822998]
[165.05224609 313.34158325]
[166.25111389 318.89672852]
[164.64224243 323.39346313]
[168.39854431 337.91552734]
[172.15484619 352.43759155]
[175.91114807 366.95965576]
[179.66743469 381.48168945]
[184.06843567 395.82156372]
[189.10536194 409.95059204]
[194.14227295 424.07962036]
[199.17918396 438.20864868]
[204.21611023 452.33767700]
[218.79472351 448.75228882]
[233.66127014 446.66018677]
[248.66319275 446.08288574]
[263.64654541 447.02627563]
[278.45758057 449.48071289]
[292.94430542 453.42095947]
[306.95809937 458.80661011]
[320.35507202 465.58239746]
[332.99783325 473.67880249]
[344.75662231 483.01272583]
[355.51077271 493.48837280]
[365.14990234 504.99829102]
[373.57513428 517.42431641]
[380.69998169 530.63897705]
[386.45138550 544.50671387]
[390.77026367 558.88507080]
[393.61230469 573.62664795]
[394.94839478 588.58007812]
[394.76480103 603.59197998]
[393.06335449 618.50830078]
[389.86160278 633.17596436]
[385.19235229 647.44439697]
[379.10348511 661.16729736]
[371.65756226 674.20373535]
[362.93093872 686.41998291]
[353.01315308 697.69067383]
[342.00601196 707.90020752]
[330.02246094 716.94372559]
[317.18545532 724.72845459]
[303.62673950 731.17456055]
[289.48544312 736.21588135]
[274.90667725 739.80059814]
[260.04003906 741.89202881]
[245.03808594 742.46868896]
[230.05476379 741.52465820]
[215.24383545 739.06958008]
[200.75727844 735.12866211]
[186.74374390 729.74243164]
[173.34704590 722.96600342]
[160.70463562 714.86907959]
[148.94627380 705.53460693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 169]
[20 168]
[21 167]
[22 166]
[23 165]
[30 164]
[31 163]
[32 162]
[33 161]
[34 160]
[35 157]
[36 156]
[37 155]
[38 154]
[42 153]
[43 152]
[44 151]
[45 150]
[46 149]
[47 148]
[48 147]
[49 146]
[50 145]
[51 144]
[53 143]
[55 142]
[56 141]
[57 140]
[58 132]
[60 130]
[61 129]
[63 127]
[64 126]
[65 125]
[66 124]
[68 121]
[70 119]
[71 118]
[72 117]
[73 116]
[74 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
