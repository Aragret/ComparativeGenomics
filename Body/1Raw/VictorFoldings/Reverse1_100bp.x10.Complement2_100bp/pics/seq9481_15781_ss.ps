%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[43.51369476 477.77215576]
[28.72598648 475.26327515]
[14.04817486 472.17575073]
[-0.49710482 468.51437378]
[-14.88742542 464.28475952]
[-29.10059738 459.49343872]
[-43.11470795 454.14782715]
[-56.90814209 448.25613403]
[-70.45964050 441.82745361]
[-83.74829865 434.87170410]
[-96.75363159 427.39962769]
[-109.45558929 419.42269897]
[-121.83457947 410.95324707]
[-133.87150574 402.00433350]
[-145.54783630 392.58975220]
[-156.84553528 382.72402954]
[-167.74720764 372.42233276]
[-178.23603821 361.70062256]
[-188.29583740 350.57537842]
[-197.91111755 339.06375122]
[-207.06703186 327.18350220]
[-215.74946594 314.95297241]
[-223.94505310 302.39099121]
[-231.64112854 289.51693726]
[-238.82583618 276.35064697]
[-245.48811340 262.91244507]
[-251.61766052 249.22306824]
[-257.20504761 235.30357361]
[-262.24163818 221.17546082]
[-266.71969604 206.86050415]
[-270.63229370 192.38078308]
[-273.97338867 177.75860596]
[-276.73785400 163.01654053]
[-278.92141724 148.17730713]
[-280.52072144 133.26377869]
[-281.53329468 118.29896545]
[-281.95755005 103.30593872]
[-281.79287720 88.30781555]
[-281.03948975 73.32771301]
[-279.69857788 58.38874435]
[-277.77218628 43.51393509]
[-275.26330566 28.72622490]
[-272.17581177 14.04841137]
[-268.51443481 -0.49687088]
[-264.28482056 -14.88719463]
[-259.49353027 -29.10037041]
[-254.14791870 -43.11448288]
[-248.25624084 -56.90792465]
[-241.82757568 -70.45941925]
[-234.87182617 -83.74808502]
[-227.39974976 -96.75342560]
[-219.42283630 -109.45538330]
[-210.95339966 -121.83438110]
[-202.00448608 -133.87132263]
[-192.58990479 -145.54765320]
[-182.72418213 -156.84536743]
[-172.42251587 -167.74703979]
[-161.70079041 -178.23587036]
[-150.57554626 -188.29568481]
[-139.06393433 -197.91096497]
[-127.18370056 -207.06687927]
[-114.95316315 -215.74932861]
[-102.39118958 -223.94491577]
[-89.51713562 -231.64100647]
[-76.35086823 -238.82572937]
[-62.91267776 -245.48800659]
[-49.22328568 -251.61756897]
[-35.30380630 -257.20495605]
[-40.34072113 -271.33398438]
[-45.37763977 -285.46301270]
[-50.41455460 -299.59204102]
[-55.45146942 -313.72106934]
[-60.48838806 -327.85009766]
[-65.52529907 -341.97912598]
[-70.56221771 -356.10815430]
[-75.59913635 -370.23718262]
[-80.63605499 -384.36624146]
[-95.47755432 -381.92294312]
[-110.51680756 -382.16918945]
[-125.27036285 -385.09704590]
[-139.26396179 -390.61239624]
[-152.04774475 -398.53793335]
[-163.21080017 -408.61892700]
[-172.39425659 -420.53125000]
[-179.30291748 -433.89202881]
[-183.71469116 -448.27172852]
[-185.48776245 -463.20812988]
[-184.56512451 -478.22109985]
[-180.97644043 -492.82797241]
[-174.83708191 -506.55926514]
[-166.34439087 -518.97351074]
[-155.77137756 -529.67169189]
[-143.45791626 -538.30993652]
[-129.79985046 -544.61047363]
[-115.23620605 -548.37078857]
[-100.23516083 -549.47003174]
[-85.27892303 -547.87286377]
[-70.84828949 -543.63067627]
[-57.40713882 -536.87969971]
[-45.38754272 -527.83709717]
[-35.17589188 -516.79345703]
[-27.10043716 -504.10382080]
[-21.42078018 -490.17608643]
[-18.31949234 -475.45800781]
[-17.89627075 -460.42269897]
[-20.16472054 -445.55346680]
[-25.05191803 -431.32830811]
[-32.40076065 -418.20449829]
[-41.97501755 -406.60394287]
[-53.46690750 -396.89947510]
[-66.50701904 -389.40313721]
[-61.47010422 -375.27410889]
[-56.43318939 -361.14508057]
[-51.39627457 -347.01605225]
[-46.35935593 -332.88702393]
[-41.32244110 -318.75799561]
[-36.28552628 -304.62896729]
[-31.24860764 -290.49993896]
[-26.21169281 -276.37091064]
[-21.17477608 -262.24188232]
[-6.85981083 -266.71990967]
[7.61992359 -270.63247681]
[22.24210167 -273.97354126]
[36.98417664 -276.73797607]
[51.82341766 -278.92150879]
[66.73694611 -280.52078247]
[81.70175934 -281.53332520]
[96.69478607 -281.95755005]
[111.69291687 -281.79284668]
[126.67301178 -281.03942871]
[141.61198425 -279.69848633]
[156.48678589 -277.77209473]
[171.27449036 -275.26318359]
[185.95230103 -272.17562866]
[200.49757385 -268.51422119]
[214.88789368 -264.28460693]
[229.10105896 -259.49328613]
[243.11515808 -254.14764404]
[256.90859985 -248.25593567]
[270.46008301 -241.82725525]
[283.74871826 -234.87149048]
[296.75405884 -227.39936829]
[309.45599365 -219.42243958]
[321.83496094 -210.95297241]
[333.87188721 -202.00404358]
[345.54821777 -192.58944702]
[356.84588623 -182.72369385]
[367.74755859 -172.42201233]
[378.23635864 -161.70025635]
[388.29617310 -150.57499695]
[397.91140747 -139.06336975]
[407.06732178 -127.18311310]
[415.74975586 -114.95256042]
[423.94531250 -102.39057159]
[431.64135742 -89.51650238]
[438.82608032 -76.35021973]
[445.48831177 -62.91201782]
[451.61785889 -49.22261810]
[457.20523071 -35.30312347]
[462.24179077 -21.17500687]
[466.71981812 -6.86004400]
[470.63241577 7.61968851]
[473.97351074 22.24186516]
[476.73794556 36.98393631]
[478.92147827 51.82317734]
[480.52078247 66.73670197]
[481.53332520 81.70151520]
[481.95755005 96.69454193]
[481.79284668 111.69267273]
[481.03945923 126.67276764]
[479.69851685 141.61174011]
[477.77212524 156.48654175]
[475.26321411 171.27424622]
[472.17568970 185.95205688]
[468.51431274 200.49734497]
[464.28469849 214.88764954]
[459.49337769 229.10083008]
[454.14773560 243.11492920]
[448.25604248 256.90835571]
[441.82736206 270.45986938]
[434.87161255 283.74850464]
[427.39950562 296.75384521]
[419.42257690 309.45578003]
[410.95312500 321.83477783]
[402.00418091 333.87170410]
[392.58959961 345.54803467]
[382.72384644 356.84573364]
[372.42218018 367.74737549]
[361.70043945 378.23620605]
[350.57519531 388.29598999]
[339.06356812 397.91125488]
[327.18331909 407.06716919]
[314.95275879 415.74960327]
[302.39077759 423.94519043]
[289.51672363 431.64123535]
[276.35043335 438.82595825]
[262.91223145 445.48822021]
[249.22283936 451.61776733]
[235.30334473 457.20513916]
[221.17523193 462.24172974]
[206.86027527 466.71975708]
[192.38055420 470.63235474]
[177.75837708 473.97344971]
[163.01629639 476.73791504]
[148.17706299 478.92144775]
[133.26353455 480.52075195]
[118.29872894 481.53329468]
[103.30569458 481.95755005]
[88.30757141 481.79287720]
[73.32747650 481.03945923]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 120]
[69 119]
[70 118]
[71 117]
[72 116]
[73 115]
[74 114]
[75 113]
[76 112]
[77 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
