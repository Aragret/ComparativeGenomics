%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[38.23242569 765.89178467]
[23.49636841 768.71838379]
[8.61540318 770.64135742]
[-6.35511398 771.65350342]
[-21.35949135 771.75109863]
[-36.34191132 770.93383789]
[-51.24663544 769.20465088]
[-66.01821899 766.57006836]
[-80.60171509 763.03979492]
[-94.94286346 758.62707520]
[-108.98831940 753.34826660]
[-122.68582916 747.22296143]
[-135.98443604 740.27398682]
[-148.83467102 732.52728271]
[-161.18873596 724.01147461]
[-173.00065613 714.75842285]
[-184.22650146 704.80249023]
[-194.82452393 694.18066406]
[-204.75526428 682.93249512]
[-213.98181152 671.09985352]
[-222.46981812 658.72668457]
[-230.18772888 645.85913086]
[-237.10682678 632.54492188]
[-243.20135498 618.83374023]
[-248.44865417 604.77648926]
[-252.82920837 590.42547607]
[-256.32672119 575.83404541]
[-258.92816162 561.05664062]
[-260.62390137 546.14807129]
[-261.40756226 531.16381836]
[-261.27627563 516.15972900]
[-260.23052979 501.19149780]
[-258.27420044 486.31488037]
[-255.41456604 471.58520508]
[-251.66227722 457.05728149]
[-247.03128052 442.78509521]
[-241.53880310 428.82180786]
[-235.20527649 415.21932983]
[-228.05427551 402.02825928]
[-220.11239624 389.29769897]
[-211.40917969 377.07498169]
[-201.97698975 365.40557861]
[-191.85095215 354.33291626]
[-181.06869507 343.89816284]
[-169.67034912 334.14016724]
[-157.69831848 325.09521484]
[-145.19714355 316.79693604]
[-132.21331787 309.27621460]
[-118.79515839 302.56103516]
[-104.99256134 296.67636108]
[-90.85688782 291.64410400]
[-76.44071960 287.48300171]
[-61.79768753 284.20846558]
[-46.98226547 281.83273315]
[-32.04956436 280.36465454]
[-17.05513763 279.80966187]
[-2.05476594 280.16979980]
[12.89574814 281.44375610]
[27.74078751 283.62680054]
[42.42512894 286.71078491]
[46.39722443 272.24627686]
[50.36931992 257.78173828]
[54.34141541 243.31723022]
[58.31351089 228.85270691]
[45.65332794 219.32139587]
[37.60053253 205.62828064]
[35.41370392 189.85511780]
[39.45700073 174.41310120]
[49.13990021 161.67430115]
[63.00326538 153.60722351]
[78.93914032 151.47271729]
[82.69544220 136.95066833]
[86.45174408 122.42860413]
[90.20804596 107.90653992]
[93.63910675 93.30422211]
[94.53192139 78.33081818]
[93.19368744 63.39062881]
[91.85545349 48.45044327]
[90.51721954 33.51025772]
[89.17898560 18.57007408]
[87.84075165 3.62988925]
[86.50251770 -11.31029606]
[85.16428375 -26.25048065]
[70.16708374 -27.26566505]
[55.51336670 -30.61454964]
[41.56398773 -36.21466446]
[28.66246414 -43.92810440]
[17.12650490 -53.56491852]
[7.24019670 -64.88778687]
[-0.75300264 -77.61788177]
[-6.65625334 -91.44170380]
[-10.32418251 -106.01883698]
[-11.66646385 -120.99030304]
[-10.65004253 -135.98741150]
[-7.29994869 -150.64085388]
[-1.69868159 -164.58976746]
[6.01582241 -177.49066162]
[15.65358639 -189.02583313]
[26.97727203 -198.91119385]
[39.70802307 -206.90335083]
[53.53233719 -212.80546570]
[68.10977173 -216.47218323]
[83.08134460 -217.81323242]
[98.07837677 -216.79557800]
[112.73154449 -213.44427490]
[126.67999268 -207.84185791]
[139.58024597 -200.12628174]
[151.11460876 -190.48756409]
[160.99905396 -179.16307068]
[168.99015808 -166.43165588]
[174.89112854 -152.60685730]
[178.55664062 -138.02911377]
[179.89645386 -123.05743408]
[178.87756348 -108.06048584]
[175.52505493 -93.40760040]
[169.92147827 -79.45960236]
[162.20484924 -66.55998993]
[152.56518555 -55.02641678]
[141.23986816 -45.14291382]
[128.50779724 -37.15286255]
[114.68251038 -31.25303650]
[100.10446930 -27.58871460]
[101.44270325 -12.64853001]
[102.78093719 2.29165506]
[104.11917114 17.23184013]
[105.45740509 32.17202377]
[106.79563904 47.11220932]
[108.13387299 62.05239487]
[109.47210693 76.99257660]
[115.08503723 63.08233261]
[124.34432220 51.28124619]
[136.51972961 42.52000046]
[150.65106201 37.48954773]
[165.62385559 36.58660889]
[180.25730896 39.88239288]
[193.39735413 47.11698151]
[204.00770569 57.71982574]
[211.25160217 70.85473633]
[214.55775452 85.48584747]
[213.66543579 100.45928192]
[208.64498901 114.59417725]
[199.89237976 126.77578735]
[188.09785461 136.04342651]
[174.19158936 141.66621399]
[159.27027893 143.20071411]
[144.51069641 140.52589417]
[131.07682800 133.85272217]
[120.02814484 123.70745087]
[112.23596954 110.89019775]
[108.31440735 96.40833282]
[109.93869781 99.90605164]
[110.01336670 104.10275269]
[108.26079559 108.29029846]
[104.73010254 111.66284180]
[100.97380066 126.18490601]
[97.21750641 140.70695496]
[93.46120453 155.22901917]
[105.08118439 163.46473694]
[113.17507172 175.14764404]
[116.78738403 188.86274719]
[115.50392151 202.95741272]
[109.49915314 215.74041748]
[99.51284027 225.68490601]
[86.75893402 231.61082458]
[72.77803802 232.82479858]
[68.80593872 247.28932190]
[64.83384705 261.75384521]
[60.86174774 276.21838379]
[56.88965225 290.68289185]
[71.08960724 295.53079224]
[84.96759796 301.23538208]
[98.47200012 307.77539062]
[111.55257416 315.12655640]
[124.16066742 323.26147461]
[136.24935913 332.14990234]
[147.77371216 341.75878906]
[158.69081116 352.05233765]
[168.96006775 362.99234009]
[178.54328918 374.53802490]
[187.40480042 386.64645386]
[195.51165771 399.27261353]
[202.83367920 412.36950684]
[209.34364319 425.88842773]
[215.01733398 439.77908325]
[219.83364868 453.98977661]
[223.77464294 468.46768188]
[226.82568359 483.15890503]
[228.97541809 498.00878906]
[230.21583557 512.96215820]
[230.54232788 527.96325684]
[229.95367432 542.95642090]
[228.45207214 557.88580322]
[226.04312134 572.69586182]
[222.73574829 587.33148193]
[218.54229736 601.73828125]
[213.47833252 615.86260986]
[207.56271362 629.65197754]
[200.81744385 643.05505371]
[193.26760864 656.02197266]
[184.94131470 668.50451660]
[175.86950684 680.45617676]
[166.08595276 691.83264160]
[155.62702942 702.59143066]
[144.53167725 712.69262695]
[132.84114075 722.09857178]
[120.59893036 730.77435303]
[107.85057831 738.68768311]
[94.64350891 745.80902100]
[81.02685547 752.11199951]
[67.05126953 757.57318115]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 169]
[61 168]
[62 167]
[63 166]
[64 165]
[71 157]
[72 156]
[73 155]
[74 154]
[75 150]
[76 129]
[77 128]
[78 127]
[79 126]
[80 125]
[81 124]
[82 123]
[83 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
