%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[-3.11854410 482.11102295]
[2.20091963 496.19638062]
[4.47524166 511.07995605]
[3.60499835 526.11114502]
[-0.37176666 540.63281250]
[-7.28120661 554.01013184]
[-16.82126999 565.65838623]
[-28.57490730 575.06823730]
[-42.02829742 581.82843018]
[-56.59332275 585.64337158]
[-71.63325500 586.34631348]
[-86.49061584 583.90655518]
[-100.51589966 578.43066406]
[-113.09599304 570.15814209]
[-123.68094635 559.45056152]
[-131.80801392 546.77600098]
[-137.12194824 532.68853760]
[-139.39041138 517.80407715]
[-138.51425171 502.77325439]
[-134.53176880 488.25314331]
[-127.61707306 474.87850952]
[-118.07242584 463.23403931]
[-106.31508636 453.82879639]
[-92.85903931 447.07391357]
[-78.29251862 443.26470947]
[-63.25230789 442.56765747]
[-48.39590836 445.01330566]
[-50.97457123 430.34359741]
[-38.74813080 420.30245972]
[-33.29277420 406.32965088]
[-39.48977661 392.83401489]
[-34.15631485 378.58587646]
[-19.95881271 372.17739868]
[-14.50345516 358.20458984]
[-9.04809761 344.23181152]
[-3.59274101 330.25900269]
[1.86261606 316.28619385]
[-2.70553327 305.08538818]
[1.72506011 293.39974976]
[13.28920841 287.68722534]
[18.95199585 273.79718018]
[16.59202957 259.09072876]
[28.96661186 249.23272705]
[34.62939835 235.34269714]
[28.01949120 224.28201294]
[29.00169563 211.23910522]
[37.44084549 200.99258423]
[50.42897034 197.42564392]
[56.29793167 183.62145996]
[54.15718460 168.88150024]
[66.67716980 159.20883179]
[72.54612732 145.40464783]
[78.41509247 131.60046387]
[84.28404999 117.79629517]
[90.15300751 103.99211884]
[95.08460236 89.82598114]
[99.05670166 75.36145782]
[103.02879333 60.89693451]
[107.00089264 46.43241119]
[93.16996002 39.53865814]
[80.94773102 30.08920097]
[70.79997253 18.44641113]
[63.11293793 5.05620527]
[58.17868423 -9.56904316]
[56.18397903 -24.87010765]
[57.20322800 -40.26228714]
[61.19568634 -55.15776062]
[68.00711823 -68.98802185]
[77.37570953 -81.22557831]
[88.94217682 -91.40409851]
[102.26351166 -99.13612366]
[116.82995605 -104.12788391]
[132.08453369 -106.19041443]
[147.44430542 -105.24671936]
[151.20060730 -119.76878357]
[154.95690918 -134.29083252]
[158.71321106 -148.81289673]
[154.67828369 -164.11093140]
[165.35621643 -174.49510193]
[169.11251831 -189.01716614]
[168.23184204 -198.10903931]
[173.03436279 -203.72665405]
[177.00645447 -218.19117737]
[180.76275635 -232.71324158]
[184.30242920 -247.28961182]
[187.84210205 -261.86599731]
[191.38177490 -276.44235229]
[194.92144775 -291.01873779]
[197.14656067 -305.85278320]
[198.03938293 -320.82620239]
[191.13719177 -335.06243896]
[199.61831665 -347.30661011]
[200.51113892 -362.27999878]
[201.40394592 -377.25341797]
[202.29676819 -392.22680664]
[203.18959045 -407.20022583]
[188.87013245 -411.95584106]
[176.26998901 -420.25634766]
[166.24824524 -431.53585815]
[159.48818970 -445.02526855]
[156.45074463 -459.80484009]
[157.34301758 -474.86694336]
[162.10415649 -489.18453979]
[170.40954590 -501.78149414]
[181.69290161 -511.79888916]
[195.18492126 -518.55371094]
[209.96568298 -521.58544922]
[225.02742004 -520.68737793]
[239.34318542 -515.92071533]
[251.93692017 -507.61044312]
[261.94995117 -496.32321167]
[268.69958496 -482.82861328]
[271.72561646 -468.04666138]
[270.82171631 -452.98529053]
[266.04953003 -438.67135620]
[257.73440552 -426.08081055]
[246.44331360 -416.07214355]
[232.94609070 -409.32772827]
[218.16299438 -406.30740356]
[217.27017212 -391.33401489]
[216.37734985 -376.36059570]
[215.48454285 -361.38717651]
[214.59172058 -346.41378784]
[221.55776978 -333.24853516]
[213.01278687 -319.93338013]
[212.11996460 -304.95996094]
[220.98495483 -317.06005859]
[234.18113708 -324.19174194]
[249.16050720 -324.97802734]
[263.03082275 -319.26708984]
[273.11389160 -308.16162109]
[277.46289062 -293.80590820]
[275.23803711 -278.97183228]
[266.86895752 -266.52359009]
[253.97157288 -258.86477661]
[239.03617859 -257.47415161]
[224.94654846 -262.62026978]
[214.42317200 -273.30944824]
[209.49781799 -287.47906494]
[205.95814514 -272.90267944]
[202.41847229 -258.32632446]
[198.87879944 -243.74993896]
[195.33912659 -229.17356873]
[197.01477051 -224.70129395]
[195.89875793 -219.12890625]
[191.47097778 -214.21908569]
[187.49888611 -199.75456238]
[183.63458252 -185.26086426]
[179.87828064 -170.73880005]
[184.18188477 -156.47947693]
[173.23527527 -145.05659485]
[169.47897339 -130.53454590]
[165.72267151 -116.01248169]
[161.96636963 -101.49041748]
[175.15548706 -95.28617096]
[186.97839355 -86.75477600]
[197.02905273 -76.18735504]
[204.96195984 -63.94499207]
[210.50396729 -50.44636917]
[213.46379089 -36.15348434]
[213.73849487 -21.55581284]
[211.31713867 -7.15355492]
[206.28121948 6.55950117]
[198.80186462 19.11291504]
[189.13407898 30.07573128]
[177.60801697 39.07126999]
[164.61769104 45.79007721]
[150.60758972 50.00056458]
[136.05734253 51.55699158]
[121.46541595 50.40450668]
[117.49332428 64.86903381]
[113.52122498 79.33355713]
[109.54912567 93.79808044]
[121.64599609 84.92870331]
[136.61076355 83.90113831]
[149.80642700 91.03377533]
[157.14416504 104.11649323]
[156.35029602 119.09547424]
[147.67083740 131.32931519]
[133.79518127 137.02722168]
[119.02285767 134.42364502]
[107.93124390 124.32532501]
[103.95719147 109.86107635]
[98.08822632 123.66525269]
[92.21926880 137.46943665]
[86.35030365 151.27360535]
[80.48134613 165.07778931]
[82.20230103 180.80511475]
[70.10211182 189.49041748]
[64.23314667 203.29460144]
[71.07288361 219.39544678]
[64.28542328 235.15124512]
[48.51942444 241.00547791]
[42.85663986 254.89550781]
[44.81156540 270.59545898]
[32.84202194 279.45996094]
[27.17923546 293.35000610]
[30.10734940 311.52987671]
[15.83541393 321.74157715]
[10.38005733 335.71435547]
[4.92469978 349.68716431]
[-0.53065723 363.65997314]
[-5.98601437 377.63275146]
[0.11346685 391.96572876]
[-5.61808872 406.05841064]
[-19.31997681 411.78500366]
[-24.77533340 425.75781250]
[-22.58687592 441.42694092]
[-34.42311096 450.46865845]
[-21.83976555 458.73623657]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 209]
[29 207]
[30 206]
[33 203]
[34 202]
[35 201]
[36 200]
[37 199]
[40 197]
[41 196]
[43 194]
[44 193]
[48 190]
[49 189]
[51 187]
[52 186]
[53 185]
[54 184]
[55 183]
[56 173]
[57 172]
[58 171]
[59 170]
[74 154]
[75 153]
[76 152]
[77 151]
[79 149]
[80 148]
[82 147]
[83 146]
[84 143]
[85 142]
[86 141]
[87 140]
[88 139]
[89 126]
[90 125]
[92 123]
[93 122]
[94 121]
[95 120]
[96 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
