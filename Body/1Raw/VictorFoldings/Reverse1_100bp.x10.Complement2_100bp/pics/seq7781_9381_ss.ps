%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[52.70268631 466.86950684]
[50.04874802 481.66189575]
[45.21966553 495.89346313]
[38.32332611 509.24627686]
[29.51379395 521.42205811]
[18.98787880 532.14880371]
[6.98072910 541.18682861]
[-6.23940706 548.33428955]
[-20.37718773 553.43139648]
[-35.11677170 556.36437988]
[-50.12886429 557.06768799]
[-65.07810211 555.52557373]
[-79.63050079 551.77252197]
[-93.46096039 545.89239502]
[-106.26050568 538.01654053]
[-117.74318695 528.32086182]
[-127.65247345 517.02203369]
[-135.76699829 504.37246704]
[-141.90547180 490.65469360]
[-145.93075562 476.17523193]
[-147.75292969 461.25756836]
[-147.33128357 446.23492432]
[-144.67524719 431.44293213]
[-139.84413147 417.21203613]
[-132.94589233 403.86019897]
[-124.13462830 391.68563843]
[-113.60718536 380.96041870]
[-101.59874725 371.92410278]
[-88.37759399 364.77856445]
[-74.23908997 359.68344116]
[-59.49908829 356.75256348]
[-44.48689270 356.05139160]
[-29.53787804 357.59561157]
[-14.98601246 361.35073853]
[-9.11705112 347.54653931]
[-3.24809074 333.74237061]
[2.62087011 319.93820190]
[1.69684446 315.25256348]
[3.70650005 309.93670654]
[8.87556458 305.81454468]
[7.17463064 291.01736450]
[19.97705460 281.72174072]
[26.25441551 268.09841919]
[32.53177643 254.47511292]
[38.80913544 240.85179138]
[44.57516861 227.00431824]
[49.82188797 212.95184326]
[55.06860733 198.89936829]
[60.31532288 184.84689331]
[65.56204224 170.79443359]
[53.10492706 163.23509216]
[42.25432968 153.50944519]
[33.38196564 141.95069885]
[26.79178810 128.95481873]
[22.70955849 114.96701813]
[21.27512169 100.46646881]
[22.53762245 85.94994354]
[26.45380783 71.91474152]
[32.88951874 58.84167862]
[41.62428284 47.17860413]
[52.35886765 37.32507324]
[64.72553253 29.61864090]
[78.30061340 24.32331467]
[92.61907196 21.62050056]
[107.19038391 21.60279083]
[121.51536560 24.27079201]
[126.97072601 10.29799366]
[132.42608643 -3.67480373]
[121.24278259 -15.49291229]
[116.35035706 -30.94955826]
[118.67990112 -46.93497467]
[127.71480560 -60.25616074]
[141.60426331 -68.27467346]
[157.54220581 -69.42913818]
[162.78892517 -83.48161316]
[168.03564453 -97.53408051]
[173.28236389 -111.58655548]
[173.35232544 -120.72071838]
[178.71321106 -125.80821991]
[184.16857910 -139.78102112]
[189.62393188 -153.75381470]
[189.82987976 -162.88592529]
[195.26593018 -167.89303589]
[200.92871094 -181.78306580]
[206.59150696 -195.67309570]
[211.83821106 -209.72557068]
[216.66421509 -223.92802429]
[221.49021912 -238.13047791]
[226.31620789 -252.33293152]
[231.14221191 -266.53540039]
[235.96820068 -280.73785400]
[222.43380737 -287.24765015]
[209.78279114 -295.34140015]
[198.19963074 -304.90112305]
[187.85325623 -315.78732300]
[178.89454651 -327.84133911]
[171.45413208 -340.88732910]
[165.64053345 -354.73504639]
[161.53851318 -369.18255615]
[159.20791626 -384.01919556]
[158.68269348 -399.02856445]
[159.97053528 -413.99182129]
[163.05265808 -428.69073486]
[167.88409424 -442.91094971]
[174.39439392 -456.44509888]
[182.48864746 -469.09582520]
[192.04876709 -480.67861938]
[202.93537903 -491.02456665]
[214.98971558 -499.98284912]
[228.03598022 -507.42276001]
[241.88391113 -513.23583984]
[256.33157349 -517.33734131]
[271.16830444 -519.66735840]
[286.17770386 -520.19201660]
[301.14089966 -518.90362549]
[315.83969116 -515.82098389]
[330.05972290 -510.98898315]
[343.59362793 -504.47817993]
[356.24404907 -496.38345337]
[367.82650757 -486.82290649]
[378.17205811 -475.93591309]
[387.12988281 -463.88122559]
[394.56930542 -450.83468628]
[400.38186646 -436.98654175]
[404.48281860 -422.53872681]
[406.81231689 -407.70190430]
[407.33639526 -392.69250488]
[406.04742432 -377.72933960]
[402.96423340 -363.03067017]
[398.13171387 -348.81079102]
[391.62039185 -335.27713013]
[383.52520752 -322.62704468]
[373.96420288 -311.04495239]
[363.07684326 -300.69979858]
[351.02182007 -291.74243164]
[337.97500610 -284.30346680]
[324.12664795 -278.49142456]
[309.67864990 -274.39105225]
[294.84176636 -272.06210327]
[279.83233643 -271.53857422]
[264.86923218 -272.82809448]
[250.17066956 -275.91183472]
[245.34466553 -261.70938110]
[240.51866150 -247.50692749]
[235.69267273 -233.30447388]
[230.86666870 -219.10202026]
[226.04067993 -204.89956665]
[227.15731812 -202.32833862]
[227.32275391 -199.15986633]
[226.30439758 -195.75422668]
[224.00416565 -192.54899597]
[220.48152161 -190.01031494]
[214.81874084 -176.12028503]
[209.15596008 -162.23025513]
[203.59672546 -148.29846191]
[198.14137268 -134.32565308]
[192.68601990 -120.35285950]
[187.33482361 -106.33983612]
[182.08810425 -92.28736877]
[176.84138489 -78.23489380]
[171.59468079 -64.18242645]
[181.67982483 -54.65572739]
[187.39025879 -41.96467209]
[187.83370972 -28.01179695]
[182.91021729 -14.90264702]
[173.33221436 -4.62803936]
[160.52165222 1.23826289]
[146.39888000 1.78055322]
[140.94352722 15.75335121]
[135.48815918 29.72614861]
[148.47731018 37.96957016]
[159.61528015 48.58169937]
[168.47677612 61.15730667]
[174.72338867 75.21617126]
[178.11660767 90.22143555]
[178.52682495 105.60010529]
[175.93840027 120.76493073]
[170.45018005 135.13682556]
[162.27172852 148.16696167]
[151.71533203 159.35778809]
[139.18414307 168.28196716]
[125.15663910 174.59870911]
[110.16851044 178.06680298]
[94.79207611 178.55381775]
[79.61451721 176.04115295]
[74.36779785 190.09361267]
[69.12107849 204.14608765]
[63.87435913 218.19856262]
[58.62763977 232.25103760]
[73.14962769 228.49444580]
[85.23209381 237.38342285]
[85.96829987 252.36534119]
[74.81553650 262.39608765]
[59.99521255 260.08139038]
[52.43245316 247.12916565]
[46.15509033 260.75247192]
[39.87773132 274.37579346]
[33.60036850 287.99911499]
[34.85230637 303.77069092]
[22.49888039 312.09188843]
[16.42504692 325.80715942]
[10.55608654 339.61132812]
[4.68712568 353.41552734]
[-1.18183529 367.21969604]
[11.61883068 375.09375000]
[23.10289192 384.78775024]
[33.01379013 396.08517456]
[41.13011551 408.73361206]
[47.27054214 422.45050049]
[51.29788971 436.92938232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 204]
[35 203]
[36 202]
[37 201]
[40 200]
[42 198]
[43 197]
[44 196]
[45 195]
[46 189]
[47 188]
[48 187]
[49 186]
[50 185]
[66 170]
[67 169]
[68 168]
[74 161]
[75 160]
[76 159]
[77 158]
[79 157]
[80 156]
[81 155]
[83 154]
[84 153]
[85 152]
[86 147]
[87 146]
[88 145]
[89 144]
[90 143]
[91 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
