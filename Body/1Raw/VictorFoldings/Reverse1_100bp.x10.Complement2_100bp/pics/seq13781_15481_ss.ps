%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAAAAUAAAAUUCAAACAACCAAUCCAUCAACUCCAGAUCCCGACAAUCUUCAGGAUCCUUUCACUGUCGCUCCCGACACUCAAAAUCCAUCUCCCCCxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[106.93995667 588.41662598]
[97.46457672 576.76531982]
[89.43377686 564.07507324]
[82.96029663 550.52404785]
[78.13501740 536.30242920]
[75.02567291 521.60998535]
[73.67591858 506.65289307]
[74.10469818 491.64114380]
[76.30599976 476.78549194]
[80.24890900 462.29446411]
[85.87808228 448.37152100]
[93.11449432 435.21206665]
[101.85655212 423.00091553]
[111.98153687 411.90942383]
[123.34730530 402.09332275]
[135.79429626 393.69042969]
[149.14778137 386.81869507]
[163.22030640 381.57458496]
[159.68063354 366.99822998]
[156.14096069 352.42184448]
[145.61882019 341.87985229]
[149.88105774 326.64358521]
[146.34138489 312.06719971]
[136.17756653 305.50799561]
[133.10929871 293.39315796]
[139.31019592 282.08334351]
[135.98793030 267.45587158]
[132.66567993 252.82841492]
[118.06517792 244.48190308]
[113.93750763 227.83026123]
[123.31093597 213.06007385]
[119.77126312 198.48370361]
[116.23159027 183.90733337]
[112.36728668 169.41363525]
[108.18027496 155.00985718]
[103.99326324 140.60606384]
[99.80625153 126.20228577]
[95.61923981 111.79850769]
[91.11161041 97.49182129]
[86.28561401 83.28936005]
[81.45961761 69.08690643]
[76.63362122 54.88445282]
[71.80761719 40.68199539]
[66.98162079 26.47953987]
[62.15562439 12.27708530]
[56.80443954 -1.73593783]
[50.93547821 -15.54011440]
[45.06651688 -29.34429169]
[29.16115189 -28.41740227]
[13.92563820 -32.98517227]
[1.19677711 -42.47772217]
[-7.49741364 -55.73260498]
[-11.12111378 -71.13713837]
[-9.25408363 -86.82459259]
[-2.14030933 -100.90042877]
[9.34370327 -111.67106628]
[3.26986909 -125.38632965]
[-2.80396485 -139.10159302]
[-8.87779903 -152.81686401]
[-14.95163250 -166.53213501]
[-21.02546692 -180.24740601]
[-27.09930038 -193.96266174]
[-29.10399055 -179.09722900]
[-36.91223526 -166.28976440]
[-49.20820618 -157.69853210]
[-63.91981506 -154.77133179]
[-78.56790161 -158.00143433]
[-90.68400574 -166.84451294]
[-98.22634125 -179.81036377]
[-99.92390442 -194.71398926]
[-95.49062347 -209.04389954]
[-85.67358398 -220.38522339]
[-72.12712097 -226.82675171]
[-57.13405991 -227.28300476]
[-43.22099686 -221.67704773]
[-32.73162842 -210.95222473]
[-36.05388641 -225.57969666]
[-39.48494720 -240.18200684]
[-43.02462006 -254.75839233]
[-46.56429291 -269.33477783]
[-50.21238327 -283.88436890]
[-53.96868134 -298.40643311]
[-57.72498322 -312.92849731]
[-72.77510071 -312.37353516]
[-87.59258270 -315.06729126]
[-101.48437500 -320.88385010]
[-113.80074310 -329.55108643]
[-123.96562958 -340.66366577]
[-131.50360107 -353.70178223]
[-136.06208801 -368.05569458]
[-137.42788696 -383.05398560]
[-135.53712463 -397.99517822]
[-130.47821045 -412.18041992]
[-122.48779297 -424.94628906]
[-111.93957520 -435.69564819]
[-99.32691956 -443.92578125]
[-85.23974609 -449.25173950]
[-70.33694458 -451.42437744]
[-55.31553268 -450.34213257]
[-40.87809372 -446.05557251]
[-27.69989586 -438.76522827]
[-16.39730644 -428.81207275]
[-7.49896717 -416.66162109]
[-1.42106915 -402.88217163]
[1.55211294 -388.11822510]
[1.28151798 -373.06030273]
[-2.22019792 -358.41268921]
[-8.78925323 -344.86053467]
[-18.11840057 -333.03762817]
[-29.77129936 -323.49697876]
[-43.20292282 -316.68481445]
[-39.44662476 -302.16275024]
[-35.69032288 -287.64068604]
[-30.97196960 -281.95217896]
[-31.98791885 -272.87442017]
[-28.44824600 -258.29806519]
[-24.90857315 -243.72167969]
[-20.27543831 -237.96357727]
[-21.42642784 -228.90194702]
[-18.10416794 -214.27449036]
[-13.38403416 -200.03649902]
[-7.31020021 -186.32122803]
[-1.23636603 -172.60597229]
[4.83746815 -158.89070129]
[10.91130161 -145.17543030]
[16.98513603 -131.46015930]
[23.05896950 -117.74489594]
[37.14757538 -119.13220978]
[50.99686813 -116.09604645]
[63.24997711 -108.92031097]
[72.70223236 -98.29512787]
[78.41959381 -85.25051117]
[79.83094025 -71.05650330]
[76.78510284 -57.09953690]
[69.56693268 -44.74699402]
[58.87069321 -35.21325302]
[64.73965454 -21.40907478]
[70.60861206 -7.60489845]
[78.55504608 -20.32709122]
[93.43789673 -22.19812202]
[104.28608704 -11.83873463]
[103.10272217 3.11451459]
[90.76014709 11.63864708]
[76.35807800 7.45108747]
[81.18407440 21.65354347]
[86.01007843 35.85599899]
[90.83607483 50.05845261]
[95.66207123 64.26091003]
[100.48806763 78.46336365]
[105.31406403 92.66582489]
[108.49687195 94.84346771]
[110.70434570 98.41347504]
[111.33616638 102.90878296]
[110.02301788 107.61149597]
[114.21002960 122.01527405]
[118.39704132 136.41905212]
[122.58405304 150.82284546]
[126.77106476 165.22662354]
[130.54032898 168.83769226]
[132.36506653 173.10659790]
[132.32031250 177.18251038]
[130.80796814 180.36766052]
[134.34764099 194.94403076]
[137.88731384 209.52040100]
[150.12004089 215.15731812]
[156.77557373 226.64271545]
[155.61801147 239.67121887]
[147.29313660 249.50614929]
[150.61538696 264.13360596]
[153.93765259 278.76107788]
[166.75830078 291.97897339]
[160.91777039 308.52752686]
[164.45742798 323.10391235]
[175.23275757 334.68850708]
[170.71733093 348.88217163]
[174.25700378 363.45855713]
[177.79667664 378.03491211]
[192.70701599 376.24093628]
[207.72486877 376.22308350]
[222.63941956 377.98159790]
[237.24130249 381.49182129]
[251.32551575 386.70443726]
[264.69433594 393.54626465]
[277.16009521 401.92129517]
[288.54779053 411.71194458]
[298.69757080 422.78076172]
[307.46691895 434.97235107]
[314.73272705 448.11557007]
[320.39303589 462.02590942]
[324.36834717 476.50808716]
[326.60287476 491.35876465]
[327.06521606 506.36950684]
[325.74893188 521.32958984]
[322.67245483 536.02899170]
[317.87899780 550.26129150]
[311.43585205 563.82678223]
[303.43344116 576.53497314]
[293.98416138 588.20745850]
[283.22061157 598.68041992]
[271.29394531 607.80676270]
[258.37152100 615.45843506]
[244.63482666 621.52795410]
[230.27667236 625.93017578]
[215.49861145 628.60333252]
[200.50813293 629.50976562]
[185.51565552 628.63684082]
[170.73165894 625.99682617]
[156.36369324 621.62670898]
[142.61344910 615.58789062]
[129.67396545 607.96514893]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 177]
[19 176]
[20 175]
[22 173]
[23 172]
[26 170]
[27 169]
[28 168]
[31 164]
[32 163]
[33 162]
[34 158]
[35 157]
[36 156]
[37 155]
[38 154]
[39 150]
[40 149]
[41 148]
[42 147]
[43 146]
[44 145]
[45 144]
[46 138]
[47 137]
[48 136]
[56 127]
[57 126]
[58 125]
[59 124]
[60 123]
[61 122]
[62 121]
[76 120]
[77 119]
[78 117]
[79 116]
[80 115]
[81 113]
[82 112]
[83 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
