%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAAAAUAAAAUUCAAACAACCAAUCCAUCAACUCCAGAUCCCGACAAUCUUCAGGAUCCUUUCACUGUCGCUCCCGACACUCAAAAUCCAUCUCCCCCxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[53.37920761 715.59130859]
[39.66938400 721.69439697]
[25.54627037 726.76837158]
[11.08699799 730.78540039]
[-3.62945795 733.72363281]
[-18.52272224 735.56695557]
[-33.51145172 736.30535889]
[-48.51377869 735.93475342]
[-63.44777298 734.45721436]
[-78.23186493 731.88079834]
[-92.78530121 728.21960449]
[-107.02860260 723.49353027]
[-120.88397980 717.72851562]
[-134.27575684 710.95593262]
[-147.13078308 703.21282959]
[-159.37884521 694.54150391]
[-170.95307922 684.98931885]
[-181.79022217 674.60839844]
[-191.83113098 663.45544434]
[-201.02093506 651.59149170]
[-209.30944824 639.08117676]
[-216.65141296 625.99285889]
[-223.00671387 612.39813232]
[-228.34063721 598.37115479]
[-232.62406921 583.98852539]
[-235.83361816 569.32885742]
[-237.95172119 554.47216797]
[-238.96684265 539.49963379]
[-238.87342834 524.49304199]
[-237.67198181 509.53430176]
[-235.36907959 494.70513916]
[-231.97727966 480.08657837]
[-227.51512146 465.75839233]
[-222.00697327 451.79888916]
[-215.48291016 438.28433228]
[-207.97857666 425.28848267]
[-199.53495789 412.88232422]
[-190.19815063 401.13363647]
[-180.01918030 390.10659790]
[-169.05363464 379.86141968]
[-157.36138916 370.45404053]
[-145.00630188 361.93585205]
[-132.05587769 354.35342407]
[-118.58082581 347.74810791]
[-104.65475464 342.15597534]
[-90.35372162 337.60763550]
[-75.75582886 334.12786865]
[-60.94080734 331.73568726]
[-45.98957825 330.44421387]
[-30.98379707 330.26043701]
[-16.00542259 331.18536377]
[-1.13626134 333.21398926]
[13.54247475 336.33520508]
[27.95061493 340.53195190]
[33.19733429 326.47946167]
[38.44404984 312.42700195]
[43.69076920 298.37454224]
[48.93748856 284.32205200]
[46.14070129 269.69238281]
[58.21628952 259.47030640]
[63.46300888 245.41784668]
[68.70972443 231.36537170]
[73.95644379 217.31289673]
[79.20316315 203.26042175]
[82.74283600 188.68405151]
[84.52529907 173.79032898]
[76.75965881 158.05307007]
[87.91877747 143.40534973]
[89.47929382 128.48674011]
[91.03981781 113.56813049]
[84.26443481 104.09525299]
[85.56227875 92.52127838]
[94.26747894 84.78430939]
[96.04994202 69.89059448]
[93.99405670 65.09262848]
[93.98506927 60.45008850]
[95.62099457 56.71661758]
[98.25901794 54.37713242]
[100.70474243 39.57786179]
[103.15046692 24.77859116]
[105.48595428 9.96152306]
[107.71107483 -4.87252092]
[109.49353790 -19.76623726]
[110.83177185 -34.70642471]
[112.17000580 -49.64660645]
[113.50823975 -64.58679199]
[114.84647369 -79.52697754]
[100.38537598 -86.21400452]
[89.10729980 -97.42963409]
[82.36289215 -111.80480194]
[80.95095062 -127.59363556]
[85.02389526 -142.88552856]
[94.07151031 -155.83630371]
[106.98481750 -164.89067078]
[122.19195557 -168.96891785]
[123.30760193 -183.92736816]
[124.42325592 -198.88583374]
[110.22570801 -204.01731873]
[97.93977356 -212.78991699]
[88.47714996 -224.55262756]
[82.54002380 -238.43257141]
[80.56897736 -253.39979553]
[82.71026611 -268.34359741]
[88.80500031 -282.15509033]
[98.40090942 -293.80929565]
[110.78590393 -302.44149780]
[125.04094696 -307.41104126]
[140.10821533 -308.34918213]
[154.86959839 -305.18630981]
[168.22973633 -298.15713501]
[179.19720459 -287.78326416]
[186.95814514 -274.83450317]
[190.93663025 -260.27172852]
[190.83746338 -245.17562866]
[186.66795349 -230.66638184]
[178.73756409 -217.82070923]
[167.63473511 -207.59184265]
[154.18339539 -200.73881531]
[139.38171387 -197.77017212]
[138.26605225 -182.81172180]
[137.15040588 -167.85327148]
[150.22689819 -162.42936707]
[161.00537109 -153.21818542]
[168.42338562 -141.11021423]
[171.74443054 -127.28233337]
[170.63088989 -113.08338165]
[165.17845154 -99.90261841]
[155.90792847 -89.03377533]
[143.71563721 -81.54810333]
[129.78666687 -78.18874359]
[128.44842529 -63.24855804]
[127.11019135 -48.30837250]
[125.77195740 -33.36819077]
[124.43372345 -18.42800331]
[126.12559509 -16.19289398]
[127.03404999 -13.15293980]
[126.84809875 -9.60317516]
[125.36920166 -5.94566345]
[122.54512024 -2.64740372]
[120.31999969 12.18663979]
[122.43649292 19.26775932]
[117.94973755 27.22431755]
[115.50401306 42.02359009]
[113.05828857 56.82286072]
[110.94366455 71.67305756]
[109.16119385 86.56677246]
[116.15846252 101.81192017]
[105.95842743 115.12865448]
[104.39790344 130.04725647]
[102.83737946 144.96586609]
[110.33828735 155.45867920]
[108.73139191 167.85229492]
[99.41902161 175.57279968]
[97.63655090 190.46652222]
[106.40303802 178.29487610]
[118.76471710 169.79847717]
[133.26936340 165.97546387]
[148.21296692 167.27494812]
[161.83998108 173.54428101]
[172.54949951 184.04695129]
[179.08340454 197.54910278]
[180.67408752 212.46452332]
[177.13468933 227.04095459]
[168.88098145 239.56599426]
[156.88262939 248.56819153]
[142.54917908 252.98999023]
[127.56452179 252.31190491]
[113.68901825 246.61361694]
[102.55276489 236.56454468]
[95.46402740 223.34524536]
[93.25563049 208.50714111]
[88.00891876 222.55961609]
[82.76219940 236.61209106]
[77.51548004 250.66456604]
[72.26876068 264.71704102]
[74.69026947 280.35183716]
[62.98995972 289.56878662]
[57.74324036 303.62124634]
[52.49652100 317.67370605]
[47.24980545 331.72619629]
[42.00308609 345.77865601]
[55.63607788 352.05151367]
[68.76856995 359.31408691]
[81.32883453 367.52670288]
[93.24827576 376.64450073]
[104.46179199 386.61767578]
[114.90814209 397.39175415]
[124.53025818 408.90792847]
[133.27560425 421.10327148]
[141.09638977 433.91116333]
[147.94993591 447.26168823]
[153.79878235 461.08187866]
[158.61099243 475.29632568]
[162.36029053 489.82730103]
[165.02618408 504.59552002]
[166.59413147 519.52032471]
[167.05554199 534.52014160]
[166.40792847 549.51306152]
[164.65480042 564.41717529]
[161.80575562 579.15118408]
[157.87634277 593.63452148]
[152.88801575 607.78808594]
[146.86804199 621.53460693]
[139.84927368 634.79901123]
[131.87005615 647.50885010]
[122.97398376 659.59466553]
[113.20962524 670.99047852]
[102.63031769 681.63403320]
[91.29384613 691.46722412]
[79.26211548 700.43627930]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 181]
[55 180]
[56 179]
[57 178]
[58 177]
[60 175]
[61 174]
[62 173]
[63 172]
[64 171]
[65 154]
[66 153]
[68 150]
[69 149]
[70 148]
[73 146]
[74 145]
[78 144]
[79 143]
[80 142]
[81 140]
[82 139]
[83 134]
[84 133]
[85 132]
[86 131]
[87 130]
[95 121]
[96 120]
[97 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
