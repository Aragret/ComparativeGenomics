%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[14.19772816 556.08551025]
[5.43889093 568.27392578]
[-4.32204771 579.67553711]
[-15.01475906 590.20837402]
[-26.56219864 599.79638672]
[-38.88116837 608.37060547]
[-51.88290405 615.86914062]
[-65.47373199 622.23809814]
[-79.55572510 627.43151855]
[-94.02742004 631.41192627]
[-108.78454590 634.15075684]
[-123.72077942 635.62817383]
[-138.72850037 635.83355713]
[-153.69956970 634.76550293]
[-168.52613831 632.43164062]
[-183.10134888 628.84875488]
[-197.32020569 624.04278564]
[-211.08026123 618.04821777]
[-224.28236389 610.90826416]
[-236.83139038 602.67449951]
[-248.63693237 593.40606689]
[-259.61392212 583.16986084]
[-269.68325806 572.03967285]
[-278.77243042 560.09558105]
[-286.81588745 547.42370605]
[-293.75573730 534.11535645]
[-299.54193115 520.26635742]
[-304.13278198 505.97659302]
[-307.49523926 491.34896851]
[-309.60507202 476.48886108]
[-310.44708252 461.50335693]
[-310.01516724 446.50045776]
[-308.31246948 431.58822632]
[-305.35122681 416.87411499]
[-301.15283203 402.46414185]
[-295.74749756 388.46215820]
[-289.17416382 374.96899414]
[-281.48019409 362.08190918]
[-272.72103882 349.89376831]
[-262.95980835 338.49234009]
[-252.26683044 327.95983887]
[-240.71913147 318.37210083]
[-228.39994812 309.79821777]
[-215.39801025 302.29998779]
[-201.80702209 295.93139648]
[-187.72489929 290.73837280]
[-173.25309753 286.75830078]
[-158.49589539 284.01989746]
[-143.55963135 282.54284668]
[-128.55191040 282.33779907]
[-113.58086395 283.40625000]
[-98.75436401 285.74050903]
[-84.17923737 289.32376099]
[-69.96050262 294.13015747]
[-56.20059967 300.12506104]
[-42.99868393 307.26531982]
[-34.76987457 294.72390747]
[-26.54106712 282.18252563]
[-18.31225967 269.64111328]
[-10.08345127 257.09970093]
[-1.85464323 244.55830383]
[-1.79913771 227.00941467]
[14.71557617 218.86412048]
[22.75675011 206.20159912]
[30.79792213 193.53907776]
[31.08915138 178.64730835]
[45.01870728 171.14544678]
[53.05987930 158.48292542]
[61.10105133 145.82038879]
[62.03313446 138.48875427]
[69.35739136 133.03044128]
[77.58620453 120.48904419]
[85.81501007 107.94764709]
[84.13873291 96.42240143]
[90.60017395 86.73265839]
[101.88425446 83.84980774]
[110.29887390 71.43231201]
[112.52232361 62.57262802]
[118.93235779 58.89385986]
[127.53092194 46.60301971]
[119.22283173 35.81091309]
[114.29656982 23.13147545]
[113.14212036 9.59462070]
[115.84350586 -3.70294285]
[122.17276001 -15.68657112]
[131.60910034 -25.39052773]
[143.38182068 -32.03581238]
[156.53315735 -35.09268951]
[169.99630737 -34.32290649]
[182.68183899 -29.79823494]
[191.64253235 -41.82761383]
[189.55625916 -57.26410294]
[198.81504822 -69.33595276]
[213.54423523 -71.22976685]
[222.50492859 -83.25914764]
[231.46562195 -95.28852844]
[240.42633057 -107.31790161]
[249.38702393 -119.34728241]
[238.36718750 -129.54508972]
[228.49375916 -140.85647583]
[219.87861633 -153.15328979]
[212.61938477 -166.29617310]
[206.79829407 -180.13623047]
[202.48130798 -194.51663208]
[199.71736145 -209.27442932]
[198.53775024 -224.24241638]
[198.95584106 -239.25099182]
[200.96690369 -254.13008118]
[204.54815674 -268.71112061]
[209.65901184 -282.82888794]
[216.24156189 -296.32342529]
[224.22122192 -309.04177856]
[233.50758362 -320.83990479]
[243.99540710 -331.58410645]
[255.56588745 -341.15261841]
[268.08789062 -349.43701172]
[281.41952515 -356.34347534]
[295.40979004 -361.79370117]
[309.90011597 -365.72595215]
[324.72631836 -368.09570312]
[339.72042847 -368.87603760]
[354.71252441 -368.05816650]
[369.53274536 -365.65133667]
[384.01318359 -361.68283081]
[397.98974609 -356.19760132]
[411.30407715 -349.25781250]
[423.80532837 -340.94207764]
[435.35180664 -331.34463501]
[445.81271362 -320.57424927]
[455.06951904 -308.75289917]
[463.01730347 -296.01458740]
[469.56607056 -282.50363159]
[474.64157104 -268.37313843]
[478.18630981 -253.78317261]
[480.16015625 -238.89909363]
[480.54067993 -223.88951111]
[479.32360840 -208.92453003]
[476.52273560 -194.17369080]
[472.16976929 -179.80413818]
[466.31405640 -165.97871399]
[459.02194214 -152.85403442]
[450.37606812 -140.57882690]
[440.47436523 -129.29217529]
[429.42901611 -119.12197876]
[417.36523438 -110.18346405]
[404.41967773 -102.57791138]
[390.73901367 -96.39149475]
[376.47827148 -91.69432068]
[361.79904175 -88.53960419]
[346.86764526 -86.96309662]
[331.85327148 -86.98265076]
[316.92602539 -88.59805298]
[302.25506592 -91.79099274]
[288.00659180 -96.52530670]
[274.34210205 -102.74733734]
[261.41638184 -110.38658142]
[252.45570374 -98.35720825]
[243.49501038 -86.32782745]
[234.53430176 -74.29845428]
[225.57360840 -62.26907349]
[227.97566223 -47.61418533]
[219.05960083 -35.28703690]
[203.67192078 -32.86691666]
[194.71121216 -20.83753967]
[204.01901245 -7.26332808]
[208.12344360 8.70206451]
[206.51141357 25.13339615]
[199.36027527 40.04301453]
[187.51844788 51.62130737]
[172.40490723 58.45631409]
[155.83905029 59.70592880]
[139.82176208 55.20158386]
[131.22319031 67.49242401]
[122.71636963 79.84693146]
[114.30175018 92.26442719]
[113.52787781 109.02084351]
[98.35640717 116.17645264]
[90.12760162 128.71784973]
[81.89879608 141.25926208]
[73.76358032 153.86157227]
[65.72240448 166.52409363]
[57.68123245 179.18661499]
[56.81484222 194.98408508]
[43.46044540 201.58024597]
[35.41927338 214.24276733]
[27.37810135 226.90528870]
[29.42116547 239.64062500]
[22.46297073 250.02172852]
[10.68675709 252.78712463]
[2.45794916 265.32852173]
[-5.77085876 277.86990356]
[-13.99966621 290.41131592]
[-22.22847366 302.95272827]
[-30.45728302 315.49411011]
[-18.65150452 324.76220703]
[-7.67425156 334.99810791]
[2.39538193 346.12808228]
[11.48484325 358.07192993]
[19.52864075 370.74359131]
[26.46882057 384.05178833]
[32.25537491 397.90060425]
[36.84661102 412.19024658]
[40.20944977 426.81781006]
[42.31966019 441.67785645]
[43.16204071 456.66333008]
[42.73051834 471.66622925]
[41.02820206 486.57852173]
[38.06735992 501.29269409]
[33.86932373 515.70275879]
[28.46434212 529.70489502]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 194]
[57 193]
[58 192]
[59 191]
[60 190]
[61 189]
[63 186]
[64 185]
[65 184]
[67 182]
[68 181]
[69 180]
[71 179]
[72 178]
[73 177]
[76 175]
[77 174]
[79 173]
[80 172]
[90 164]
[91 163]
[94 160]
[95 159]
[96 158]
[97 157]
[98 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
