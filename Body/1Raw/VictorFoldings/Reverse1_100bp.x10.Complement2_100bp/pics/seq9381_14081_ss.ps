%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[86.71687317 474.82748413]
[87.65956879 459.79666138]
[91.81183624 445.32003784]
[98.97947693 432.07470703]
[108.82723999 420.68017578]
[120.89453125 411.66937256]
[134.61694336 405.46374512]
[131.51283264 390.78845215]
[121.30921936 379.93783569]
[126.02321625 364.83523560]
[122.91911316 350.15991211]
[119.81500244 335.48461914]
[116.71089172 320.80932617]
[106.46571350 331.76544189]
[91.50089264 330.73876953]
[82.84792328 318.48617554]
[86.88546753 304.03979492]
[100.63719177 298.04895020]
[113.96482849 304.92855835]
[111.96081543 290.06304932]
[109.95680237 275.19750977]
[107.95278931 260.33197021]
[105.94877625 245.46644592]
[103.94476318 230.60092163]
[99.93581390 224.39204407]
[102.02328491 215.49934387]
[100.24081421 200.60562134]
[98.45835114 185.71191406]
[96.67588043 170.81819153]
[94.14495850 168.36323547]
[92.67736816 164.56045532]
[92.89365387 159.92294312]
[95.16172791 155.22155762]
[94.04608154 140.26310730]
[91.62730408 137.69760132]
[90.33097839 133.83306885]
[90.75411987 129.20983887]
[93.22985840 124.61443329]
[92.78325653 109.62107849]
[92.11347198 94.63603973]
[91.22065735 79.66263580]
[90.32784271 64.68923187]
[77.77479553 60.56336975]
[67.39605713 52.43685150]
[60.41356659 41.29402924]
[57.64002991 28.47270584]
[59.38435745 15.50353622]
[65.41741943 3.92729235]
[75.00187683 -4.88818598]
[86.98223877 -9.90960312]
[86.53563690 -24.90295410]
[78.39088440 -38.46664047]
[85.74581146 -51.41863632]
[85.29920959 -66.41198730]
[84.85260010 -81.40533447]
[84.40599823 -96.39868927]
[83.84778595 -111.38829803]
[83.17800140 -126.37333679]
[74.20356750 -135.63737488]
[73.95420074 -148.13223267]
[82.01827240 -157.14872742]
[81.57167053 -172.14207458]
[81.12506104 -187.13542175]
[77.74153137 -195.62008667]
[80.78509521 -202.35496521]
[80.56176758 -217.35330200]
[65.58509827 -218.32250977]
[50.73277283 -220.47856140]
[36.09870148 -223.80781555]
[21.77540016 -228.28924561]
[7.85343122 -233.89450073]
[-5.57918644 -240.58813477]
[-18.43752670 -248.32785034]
[-30.64029121 -257.06469727]
[-42.11033249 -266.74346924]
[-52.77513123 -277.30291748]
[-62.56726074 -288.67633057]
[-71.42481232 -300.79177856]
[-79.29177856 -313.57263184]
[-86.11842346 -326.93817139]
[-91.86159515 -340.80380249]
[-96.48497009 -355.08190918]
[-99.95932770 -369.68222046]
[-102.26270294 -384.51242065]
[-103.38051605 -399.47872925]
[-103.30571747 -414.48654175]
[-102.03877258 -429.44097900]
[-99.58769989 -444.24746704]
[-95.96797943 -458.81240845]
[-91.20250702 -473.04373169]
[-85.32141876 -486.85144043]
[-78.36188507 -500.14825439]
[-70.36791229 -512.85009766]
[-61.39003754 -524.87664795]
[-51.48502731 -536.15185547]
[-40.71550369 -546.60449219]
[-29.14955902 -556.16839600]
[-16.86031151 -564.78320312]
[-3.92546320 -572.39434814]
[9.57320786 -578.95379639]
[23.55035591 -584.41998291]
[37.91761398 -588.75842285]
[52.58414841 -591.94165039]
[67.45722198 -593.94952393]
[82.44281769 -594.76940918]
[97.44616699 -594.39611816]
[112.37243652 -592.83190918]
[127.12724304 -590.08679199]
[141.61730957 -586.17803955]
[155.75100708 -581.13043213]
[169.43899536 -574.97576904]
[182.59471130 -567.75311279]
[195.13500977 -559.50805664]
[206.98057556 -550.29272461]
[218.05654907 -540.16534424]
[228.29286194 -529.19006348]
[237.62483215 -517.43615723]
[245.99345398 -504.97793579]
[253.34579468 -491.89425659]
[259.63537598 -478.26776123]
[264.82244873 -464.18463135]
[268.87423706 -449.73391724]
[271.76507568 -435.00695801]
[273.47668457 -420.09689331]
[273.99829102 -405.09796143]
[273.32656860 -390.10501099]
[271.46578979 -375.21279907]
[268.42767334 -360.51553345]
[264.23144531 -346.10607910]
[258.90365601 -332.07559204]
[252.47798157 -318.51275635]
[244.99504089 -305.50329590]
[236.50213623 -293.12951660]
[227.05297852 -281.46960449]
[216.70730591 -270.59729004]
[205.53051758 -260.58132935]
[193.59329224 -251.48503113]
[180.97108459 -243.36590576]
[167.74372864 -236.27528381]
[153.99481201 -230.25801086]
[139.81129456 -225.35211182]
[125.28282928 -221.58862305]
[110.50128174 -218.99131775]
[95.56011200 -217.57662964]
[95.78343964 -202.57829285]
[96.11841583 -187.58203125]
[96.56501770 -172.58868408]
[97.01162720 -157.59533691]
[107.02583313 -143.18414307]
[98.16304016 -127.04312134]
[98.83282471 -112.05808258]
[102.27185822 -105.51630402]
[99.39934540 -96.84529114]
[99.84595490 -81.85194397]
[100.29255676 -66.85859680]
[100.73916626 -51.86524200]
[108.85197449 -39.37398148]
[101.52898407 -25.34955978]
[101.97559357 -10.35620975]
[117.60205078 -3.93174982]
[128.88520813 8.71831608]
[133.51889038 25.08115387]
[130.52430725 41.87793732]
[120.45627594 55.72085571]
[105.30124664 63.79641342]
[106.19406128 78.76982117]
[107.08687592 93.74322510]
[110.12003326 98.02270508]
[110.53955841 103.69697571]
[107.77660370 109.17447662]
[108.22321320 124.16782379]
[109.00453186 139.14746094]
[110.12018585 154.10591125]
[111.56960297 169.03572083]
[113.35206604 183.92944336]
[115.13453674 198.82316589]
[116.91699982 213.71687317]
[118.81029510 228.59690857]
[120.81430817 243.46243286]
[122.81832123 258.32797241]
[124.82233429 273.19348145]
[126.82634735 288.05902100]
[128.83035278 302.92456055]
[131.38618469 317.70520020]
[134.49029541 332.38049316]
[137.59440613 347.05581665]
[140.69851685 361.73110962]
[151.12416077 373.63140869]
[146.18812561 387.68432617]
[149.29223633 402.35961914]
[164.35212708 402.47723389]
[179.03454590 405.82995605]
[192.65275574 412.26098633]
[204.56983948 421.46954346]
[214.22837830 433.02493286]
[221.17663574 446.38665771]
[225.08964539 460.92977905]
[225.78437805 475.97409058]
[223.22833252 490.81594849]
[217.54107666 504.76116943]
[208.98860168 517.15747070]
[197.97091675 527.42517090]
[185.00334167 535.08386230]
[170.69241333 539.77551270]
[155.70745850 541.28051758]
[140.74934387 539.52862549]
[126.51771545 534.60168457]
[113.67819977 526.73016357]
[102.83131409 516.28222656]
[94.48439026 503.74658203]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 190]
[8 189]
[10 187]
[11 186]
[12 185]
[13 184]
[19 183]
[20 182]
[21 181]
[22 180]
[23 179]
[24 178]
[26 177]
[27 176]
[28 175]
[29 174]
[33 173]
[34 172]
[38 171]
[39 170]
[40 167]
[41 166]
[42 165]
[50 159]
[51 158]
[53 156]
[54 155]
[55 154]
[56 153]
[57 151]
[58 150]
[61 148]
[62 147]
[63 146]
[65 145]
[66 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
