%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[80.49466705 736.26239014]
[67.93145752 727.96423340]
[57.36835098 717.23510742]
[49.26711655 704.54400635]
[43.98191071 690.44580078]
[41.74377823 675.55670166]
[42.65056229 660.52770996]
[46.66261673 646.01574707]
[53.60456085 632.65521240]
[63.17291260 621.03021240]
[74.94939423 611.64898682]
[88.41917419 604.92150879]
[102.99343109 601.14196777]
[102.32364655 586.15698242]
[101.65386200 571.17193604]
[100.98407745 556.18688965]
[100.31429291 541.20184326]
[99.64450836 526.21679688]
[98.97471619 511.23175049]
[98.30493164 496.24673462]
[97.63514709 481.26168823]
[96.96536255 466.27664185]
[96.29557800 451.29159546]
[87.99769592 438.92251587]
[95.11106873 424.79061890]
[94.44128418 409.80557251]
[93.77149963 394.82055664]
[83.46888733 390.54190063]
[75.47051239 382.69177246]
[70.95872498 372.37701416]
[70.62041473 361.07238770]
[74.54273987 350.40997314]
[82.19496155 341.94332886]
[92.50000000 336.92132568]
[92.50000000 321.92132568]
[84.76270294 309.19406128]
[92.50000000 295.39389038]
[92.50000000 280.39389038]
[84.76270294 267.66662598]
[92.50000000 253.86643982]
[92.50000000 238.86643982]
[92.50000000 223.86643982]
[92.50000000 208.86643982]
[92.50000000 193.86643982]
[81.81912994 183.54875183]
[81.60544586 168.33662415]
[92.50000000 157.20350647]
[92.50000000 142.20350647]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[92.50000000 72.79650116]
[92.50000000 57.79650116]
[92.50000000 42.79650116]
[80.20933533 51.39530563]
[65.78089905 47.29405212]
[59.85080338 33.51602554]
[66.79048920 20.21787834]
[81.48428345 17.20250893]
[93.09975433 26.69124222]
[94.21540833 11.73278904]
[79.35528564 7.19492769]
[65.87931061 -0.52498215]
[54.45838928 -11.03903294]
[45.66033936 -23.82029533]
[39.92163467 -38.22923279]
[37.52576447 -53.54569244]
[38.58922195 -69.00490570]
[43.05585861 -83.83567047]
[50.69982910 -97.29881287]
[61.13700104 -108.72406006]
[73.84428406 -117.54337311]
[88.18582153 -123.31921387]
[103.44480133 -125.76622772]
[104.33761597 -140.73962402]
[105.23043060 -155.71304321]
[105.34210205 -170.71261597]
[104.67231750 -185.69766235]
[104.00253296 -200.68269348]
[103.33274841 -215.66773987]
[102.66296387 -230.65277100]
[87.91098022 -238.12077332]
[78.98918915 -251.93008423]
[78.25312805 -268.26028442]
[85.80910492 -282.64996338]
[99.51096344 -291.21566772]
[98.61814880 -306.18908691]
[97.72533417 -321.16247559]
[96.83251953 -336.13589478]
[95.93969727 -351.10931396]
[95.04688263 -366.08270264]
[86.50189972 -379.39788818]
[93.46794128 -392.56311035]
[92.57512665 -407.53652954]
[91.68231201 -422.50991821]
[77.30573273 -427.44778442]
[65.91644287 -437.51516724]
[59.25123215 -451.17694092]
[58.32649612 -466.34970093]
[63.28324890 -480.71978760]
[73.36562347 -492.09582520]
[87.03613281 -498.74304199]
[102.21011353 -499.64782715]
[116.57365417 -494.67218018]
[127.93641663 -484.57485962]
[134.56565857 -470.89559937]
[135.45046997 -455.72045898]
[130.45593262 -441.36346436]
[120.34366608 -430.01397705]
[106.65571594 -423.40274048]
[107.54853058 -408.42935181]
[108.44134521 -393.45593262]
[116.92247009 -381.21176147]
[110.02029419 -366.97552490]
[110.91310883 -352.00210571]
[111.80592346 -337.02871704]
[112.69873810 -322.05529785]
[113.59155273 -307.08190918]
[114.48436737 -292.10848999]
[127.07363129 -286.81439209]
[136.19749451 -276.56335449]
[140.03283691 -263.31799316]
[137.77639771 -249.64733887]
[129.81231689 -238.22853088]
[117.64800262 -231.32255554]
[118.31778717 -216.33752441]
[118.98757172 -201.35247803]
[119.65735626 -186.36744690]
[120.32714081 -171.38240051]
[130.38459778 -182.51107788]
[145.22463989 -184.69583130]
[158.06260681 -176.93780518]
[163.02912903 -162.78387451]
[157.85359192 -148.70503235]
[144.90219116 -141.13792419]
[130.09611511 -143.54214478]
[120.20384216 -154.82022095]
[119.31101990 -139.84681702]
[118.41820526 -124.87340546]
[132.38851929 -120.98877716]
[145.24757385 -114.27458191]
[156.42927551 -105.02355194]
[165.44076538 -93.64017487]
[171.88415527 -80.62298584]
[175.47410583 -66.54273987]
[176.05043030 -52.01741409]
[173.58528137 -37.68503952]
[168.18447876 -24.17571640]
[160.08293152 -12.08389378]
[149.63449097 -1.94220984]
[137.29640198 5.80196333]
[123.60937500 10.80625629]
[109.17385864 12.84843731]
[108.05821228 27.80689049]
[107.50000000 42.79650116]
[107.50000000 57.79650116]
[107.50000000 72.79650116]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[107.50000000 142.20350647]
[107.50000000 157.20350647]
[118.39455414 168.33662415]
[118.18087006 183.54875183]
[107.50000000 193.86643982]
[107.50000000 208.86643982]
[107.50000000 223.86643982]
[107.50000000 238.86643982]
[107.50000000 253.86643982]
[115.23729706 267.66662598]
[107.50000000 280.39389038]
[107.50000000 295.39389038]
[115.23729706 309.19406128]
[107.50000000 321.92132568]
[107.50000000 336.92132568]
[123.44843292 347.50354004]
[129.74678040 365.41833496]
[124.02072906 383.36663818]
[108.75653839 394.15075684]
[109.42632294 409.13580322]
[110.09610748 424.12084961]
[118.44190216 437.56176758]
[111.28061676 450.62182617]
[111.95040131 465.60687256]
[112.62018585 480.59188843]
[113.28997040 495.57693481]
[113.95975494 510.56198120]
[114.62954712 525.54699707]
[115.29933167 540.53204346]
[115.96911621 555.51708984]
[116.63890076 570.50213623]
[117.30868530 585.48718262]
[117.97846985 600.47222900]
[132.83180237 602.93640137]
[146.84806824 608.43530273]
[159.41453552 616.72851562]
[169.98187256 627.45349121]
[178.08808899 640.14141846]
[183.37884521 654.23754883]
[185.62283325 669.12579346]
[184.72196960 684.15515137]
[180.71562195 698.66870117]
[173.77893066 712.03192139]
[164.21514893 723.66064453]
[152.44236755 733.04656982]
[138.97521973 739.77929688]
[124.40245819 743.56457520]
[109.36112976 744.23687744]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 195]
[14 194]
[15 193]
[16 192]
[17 191]
[18 190]
[19 189]
[20 188]
[21 187]
[22 186]
[23 185]
[25 183]
[26 182]
[27 181]
[34 177]
[35 176]
[37 174]
[38 173]
[40 171]
[41 170]
[42 169]
[43 168]
[44 167]
[47 164]
[48 163]
[49 162]
[50 161]
[52 159]
[53 158]
[54 157]
[55 156]
[61 155]
[62 154]
[75 140]
[76 139]
[77 138]
[78 130]
[79 129]
[80 128]
[81 127]
[82 126]
[87 120]
[88 119]
[89 118]
[90 117]
[91 116]
[92 115]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
