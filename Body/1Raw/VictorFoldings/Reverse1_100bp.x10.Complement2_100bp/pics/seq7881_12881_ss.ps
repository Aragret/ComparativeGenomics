%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[20.07023239 579.74536133]
[12.44193459 592.89367676]
[0.35964042 602.11791992]
[-14.33418941 606.01147461]
[-29.39885139 603.98059082]
[-42.53709412 596.33502197]
[-51.74543381 584.24060059]
[-55.61965942 569.54168701]
[-53.56898499 554.47967529]
[-45.90612411 541.35150146]
[-33.79960251 532.15911865]
[-19.09558105 528.30419922]
[-17.09156609 513.43865967]
[-15.08755302 498.57315063]
[-13.08353996 483.70761108]
[-14.91905308 480.69711304]
[-15.38758659 476.64797974]
[-14.01686668 472.21237183]
[-10.64374161 468.22875977]
[-7.97794628 453.46755981]
[-5.31215048 438.70632935]
[-2.64635515 423.94512939]
[0.01944039 409.18389893]
[2.68523598 394.42269897]
[5.35103130 379.66146851]
[8.01682663 364.90026855]
[-4.89133787 372.54089355]
[-19.45516014 368.94992065]
[-27.33181953 356.18441772]
[-24.00921059 341.55703735]
[-11.39067173 333.44699097]
[3.29532337 336.50012207]
[11.63577938 348.96649170]
[15.60787582 334.50198364]
[14.34783363 327.21951294]
[19.74828529 319.85250854]
[23.93529510 305.44873047]
[28.12230682 291.04492188]
[22.57308578 280.29632568]
[25.94347191 268.26202393]
[36.95185852 261.54055786]
[41.35285568 247.20069885]
[45.75385284 232.86085510]
[44.34737015 228.29676819]
[45.79308701 222.80068970]
[50.50525284 218.16311646]
[55.33125305 203.96066284]
[60.15724945 189.75820923]
[64.98324585 175.55575562]
[69.80924225 161.35330200]
[74.63523865 147.15084839]
[73.36527252 142.54690552]
[74.97399139 137.09631348]
[79.82214355 132.60108948]
[85.06886292 118.54862213]
[90.31558228 104.49615479]
[94.07187653 89.97409058]
[96.29699707 75.14005280]
[98.52211761 60.30600739]
[92.91754913 45.51075363]
[102.45722198 34.07205582]
[104.68234253 19.23801041]
[99.07778168 4.44276047]
[108.61745453 -6.99594021]
[110.84257507 -21.82998466]
[113.06768799 -36.66402817]
[111.15557098 -41.52107239]
[111.28480530 -46.16182709]
[113.03116608 -49.84493256]
[115.73767090 -52.10483551]
[118.62294769 -66.82472992]
[121.50821686 -81.54461670]
[123.06874084 -96.46322632]
[123.29206848 -111.46156311]
[123.51539612 -126.45989990]
[123.73872375 -141.45823669]
[123.96205139 -156.45657349]
[109.62842560 -159.42300415]
[96.09097290 -164.97903442]
[83.81302643 -172.93286133]
[73.21450043 -183.01065063]
[64.65752411 -194.86595154]
[58.43410873 -208.09162903]
[54.75613022 -222.23381042]
[53.74815750 -236.80751038]
[55.44321060 -251.31318665]
[59.78170395 -265.25396729]
[66.61350250 -278.15252686]
[75.70316315 -289.56765747]
[86.73800659 -299.10906982]
[99.33890533 -306.45095825]
[113.07328033 -311.34307861]
[127.46997833 -313.61920166]
[127.91658020 -328.61254883]
[128.36318970 -343.60589600]
[121.04019928 -357.63031006]
[129.15301514 -370.12158203]
[114.90488434 -375.20550537]
[102.92636871 -384.44509888]
[94.39099121 -396.93521118]
[90.13496399 -411.45214844]
[90.57524872 -426.57369995]
[95.66870880 -440.81838989]
[104.91634369 -452.79071045]
[117.41215515 -461.31771851]
[131.93194580 -465.56402588]
[147.05319214 -465.11361694]
[161.29449463 -460.01062012]
[173.26060486 -450.75494385]
[181.77923584 -438.25341797]
[186.01580811 -423.73080444]
[185.55526733 -408.60986328]
[180.44271851 -394.37197876]
[171.17904663 -382.41207886]
[158.67181396 -373.90182495]
[144.14636230 -369.67498779]
[151.50129700 -356.72299194]
[143.35653687 -343.15930176]
[142.90992737 -328.16595459]
[142.46333313 -313.17260742]
[157.47599792 -309.79135132]
[171.54852295 -303.55273438]
[184.14260864 -294.69338989]
[194.77618408 -283.55023193]
[203.04173279 -270.54769897]
[208.62202454 -256.18145752]
[211.30221558 -240.99963379]
[210.97814941 -225.58178711]
[207.66040039 -210.51690674]
[201.47393799 -196.38081360]
[192.65339661 -183.71421814]
[181.53424072 -173.00195312]
[168.53993225 -164.65452576]
[154.16586304 -158.99229431]
[138.96038818 -156.23324585]
[138.73706055 -141.23490906]
[138.51373291 -126.23657227]
[138.29040527 -111.23823547]
[138.06707764 -96.23989868]
[146.38293457 -108.72374725]
[159.24749756 -116.43756866]
[174.17681885 -117.89192963]
[188.28829956 -112.80603027]
[198.85720825 -102.16187286]
[203.84286499 -88.01467896]
[202.28262329 -73.09603882]
[194.47773743 -60.28652573]
[181.93519592 -52.05944443]
[167.07679749 -50.00331879]
[152.77142334 -54.51515579]
[141.78126526 -64.72378540]
[136.22810364 -78.65934753]
[133.34283447 -63.93945694]
[130.45756531 -49.21956253]
[127.90173340 -34.43891144]
[125.67661285 -19.60486603]
[123.45149994 -4.77082300]
[129.21520996 8.96339703]
[119.51638794 21.46312714]
[117.29126740 36.29717255]
[123.05498505 50.03139114]
[113.35615540 62.53112411]
[111.13104248 77.36516571]
[108.90592194 92.19921112]
[118.35763550 80.55167389]
[131.51042175 73.34028625]
[146.41316223 71.63481903]
[160.85510254 75.68826294]
[172.69386292 84.89931488]
[180.17326355 97.90157318]
[182.18374634 112.76622772]
[178.42709351 127.28819275]
[169.46057129 139.31323242]
[156.61430359 147.05747986]
[141.79396057 149.37214661]
[127.19806671 145.91386414]
[114.99182129 137.19563293]
[106.98595428 124.51074982]
[104.36804962 109.74287415]
[99.12133026 123.79534149]
[93.87461090 137.84780884]
[88.83769989 151.97683716]
[84.01170349 166.17930603]
[79.18569946 180.38175964]
[74.35970306 194.58421326]
[69.53370667 208.78666687]
[64.70771027 222.98912048]
[60.09370041 237.26185608]
[55.69270325 251.60169983]
[51.29170609 265.94155884]
[55.83007050 283.78768921]
[42.52608871 295.23193359]
[38.33907700 309.63574219]
[34.15206528 324.03952026]
[30.07239914 338.47406006]
[26.10030365 352.93859863]
[22.77804375 367.56604004]
[20.11224937 382.32727051]
[17.44645309 397.08847046]
[14.78065777 411.84970093]
[12.11486244 426.61093140]
[9.44906712 441.37213135]
[6.78327131 456.13336182]
[4.11747551 470.89456177]
[1.78198862 485.71163940]
[-0.22202501 500.57717896]
[-2.22603869 515.44268799]
[-4.23005247 530.30822754]
[8.92826080 537.91918945]
[18.16838646 549.98937988]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 208]
[13 207]
[14 206]
[15 205]
[19 204]
[20 203]
[21 202]
[22 201]
[23 200]
[24 199]
[25 198]
[26 197]
[33 196]
[34 195]
[36 194]
[37 193]
[38 192]
[41 190]
[42 189]
[43 188]
[46 187]
[47 186]
[48 185]
[49 184]
[50 183]
[51 182]
[54 181]
[55 180]
[56 179]
[57 164]
[58 163]
[59 162]
[61 160]
[62 159]
[64 157]
[65 156]
[66 155]
[70 154]
[71 153]
[72 152]
[73 139]
[74 138]
[75 137]
[76 136]
[77 135]
[93 120]
[94 119]
[95 118]
[97 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
