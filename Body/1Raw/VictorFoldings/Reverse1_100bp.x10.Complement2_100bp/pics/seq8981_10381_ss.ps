%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[48.89941406 246.27445984]
[45.30329132 260.84234619]
[40.78118515 275.14993286]
[35.35167694 289.13833618]
[29.03708267 302.75015259]
[21.86334610 315.92944336]
[13.85994816 328.62200928]
[5.05977440 340.77572632]
[-4.50101137 352.34060669]
[-14.78312206 363.26919556]
[-25.74430656 373.51654053]
[-37.33951950 383.04055786]
[-49.52111816 391.80206299]
[-62.23904419 399.76510620]
[-75.44103241 406.89697266]
[-89.07283783 413.16827393]
[-103.07843781 418.55334473]
[-117.40029144 423.02996826]
[-131.97953796 426.57980347]
[-146.75625610 429.18823242]
[-161.66975403 430.84457397]
[-176.65872192 431.54199219]
[-191.66159058 431.27761841]
[-206.61668396 430.05255127]
[-221.46255493 427.87182617]
[-236.13821411 424.74438477]
[-250.58334351 420.68310547]
[-264.73858643 415.70468140]
[-278.54577637 409.82952881]
[-291.94815063 403.08181763]
[-304.89068604 395.48928833]
[-317.32015991 387.08309937]
[-329.18551636 377.89782715]
[-340.43798828 367.97122192]
[-351.03134155 357.34405518]
[-360.92202759 346.05999756]
[-370.06942749 334.16543579]
[-378.43594360 321.70922852]
[-385.98718262 308.74258423]
[-392.69213867 295.31875610]
[-398.52325439 281.49288940]
[-403.45654297 267.32186890]
[-407.47177124 252.86387634]
[-410.55239868 238.17831421]
[-412.68579102 223.32556152]
[-413.86318970 208.36663818]
[-414.07974243 193.36302185]
[-413.33456421 178.37634277]
[-411.63070679 163.46820068]
[-408.97518921 148.69987488]
[-405.37890625 134.13201904]
[-400.85662842 119.82450867]
[-395.42697144 105.83613586]
[-389.11221313 92.22438812]
[-381.93835449 79.04519653]
[-373.93481445 66.35272217]
[-365.13449097 54.19910812]
[-355.57357788 42.63431168]
[-345.29135132 31.70584297]
[-334.33004761 21.45861816]
[-322.73474121 11.93474197]
[-310.55303955 3.17335176]
[-297.83502197 -4.78955078]
[-284.63296509 -11.92124367]
[-271.00106812 -18.19242096]
[-256.99542236 -23.57731438]
[-242.67352295 -28.05379295]
[-228.09423828 -31.60346603]
[-213.31747437 -34.21174240]
[-198.40396118 -35.86790848]
[-183.41499329 -36.56515503]
[-168.41212463 -36.30061722]
[-153.45704651 -35.07538605]
[-138.61119080 -32.89449310]
[-123.93557739 -29.76689720]
[-109.49049377 -25.70545578]
[-95.33531189 -20.72685814]
[-81.52819061 -14.85155869]
[-68.12587738 -8.10370350]
[-55.18343353 -0.51101941]
[-42.75404739 7.89529228]
[-30.88879776 17.08068848]
[-19.63643837 27.00742340]
[-9.04320812 37.63470840]
[0.84736162 48.91886902]
[9.99462891 60.81353760]
[18.36100578 73.26983643]
[25.91211128 86.23658752]
[32.61691666 99.66049194]
[38.44787216 113.48639679]
[52.61400604 108.55480194]
[66.78014374 103.62320709]
[80.94627380 98.69161224]
[87.34818268 85.69308472]
[101.03221893 80.92932129]
[114.12213135 87.14225006]
[128.28826904 82.21065521]
[142.45440674 77.27906036]
[156.62052917 72.34747314]
[170.78666687 67.41587830]
[166.80046082 52.94950485]
[163.77906799 38.25131226]
[161.73570251 23.38556862]
[160.67929077 8.41727829]
[160.61445618 -6.58810377]
[161.54147339 -21.56496429]
[163.45631409 -36.44781113]
[166.35057068 -51.17156601]
[170.21160889 -65.67184448]
[175.02253723 -79.88523865]
[180.76232910 -93.74960327]
[187.40588379 -107.20429993]
[194.92413330 -120.19050598]
[203.28422546 -132.65142822]
[212.44958496 -144.53259277]
[222.38014221 -155.78201294]
[233.03247070 -166.35054016]
[244.36000061 -176.19192505]
[256.31317139 -185.26315308]
[268.83975220 -193.52455139]
[281.88494873 -200.93998718]
[295.39169312 -207.47705078]
[309.30096436 -213.10714722]
[323.55191040 -217.80566406]
[338.08224487 -221.55204773]
[352.82839966 -224.32991028]
[367.72592163 -226.12712097]
[382.70962524 -226.93582153]
[397.71401978 -226.75245667]
[412.67349243 -225.57783508]
[427.52264404 -223.41711426]
[442.19650269 -220.27970886]
[456.63095093 -216.17936707]
[470.76281738 -211.13400269]
[484.53036499 -205.16566467]
[497.87332153 -198.30049133]
[510.73339844 -190.56846619]
[523.05432129 -182.00341797]
[534.78228760 -172.64279175]
[545.86590576 -162.52752686]
[556.25677490 -151.70185852]
[565.90948486 -140.21310425]
[574.78173828 -128.11151123]
[582.83483887 -115.45001221]
[590.03350830 -102.28395844]
[596.34625244 -88.67092896]
[601.74554443 -74.67044067]
[606.20770264 -60.34372330]
[609.71325684 -45.75341797]
[612.24682617 -30.96333313]
[613.79736328 -16.03813744]
[614.35809326 -1.04309642]
[613.92663574 13.95622063]
[612.50469971 28.89422417]
[610.09869385 43.70559311]
[606.71899414 58.32556152]
[602.38049316 72.69020081]
[597.10205078 86.73669434]
[590.90679932 100.40362549]
[583.82189941 113.63121796]
[575.87823486 126.36164856]
[567.11053467 138.53924561]
[557.55725098 150.11074829]
[547.26000977 161.02555847]
[536.26397705 171.23596191]
[524.61712646 180.69729614]
[512.37042236 189.36820984]
[499.57748413 197.21075439]
[486.29415894 204.19067383]
[472.57858276 210.27740479]
[458.49069214 215.44436646]
[444.09213257 219.66894531]
[429.44586182 222.93267822]
[414.61587524 225.22129822]
[399.66708374 226.52478027]
[384.66482544 226.83743286]
[369.67468262 226.15788269]
[354.76223755 224.48912048]
[339.99270630 221.83842468]
[325.43063354 218.21739197]
[311.13970947 213.64186096]
[297.18243408 208.13183594]
[283.61987305 201.71141052]
[270.51126099 194.40864563]
[257.91397095 186.25550842]
[245.88305664 177.28761292]
[234.47114563 167.54420471]
[223.72813416 157.06787109]
[213.70100403 145.90443420]
[204.43359375 134.10270691]
[195.96644592 121.71428680]
[188.33656311 108.79335022]
[181.57731628 95.39640045]
[175.71826172 81.58200836]
[161.55212402 86.51360321]
[147.38598633 91.44519806]
[133.21986389 96.37679291]
[119.05372620 101.30838776]
[112.65181732 114.30691528]
[98.96778107 119.07067871]
[85.87786865 112.85774994]
[71.71173096 117.78934479]
[57.54560089 122.72093964]
[43.37946320 127.65252686]
[47.39484406 142.11048889]
[50.47564316 156.79598999]
[52.60920715 171.64872742]
[53.78676987 186.60763550]
[54.00348282 201.61126709]
[53.25846481 216.59794617]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[90 204]
[91 203]
[92 202]
[93 201]
[96 198]
[97 197]
[98 196]
[99 195]
[100 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
