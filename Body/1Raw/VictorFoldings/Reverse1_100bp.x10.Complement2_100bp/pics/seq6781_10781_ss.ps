%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[82.86887360 550.75762939]
[71.46607971 540.93609619]
[62.19872284 529.07855225]
[55.42300415 515.64068604]
[51.39936447 501.13906860]
[50.28246689 486.13110352]
[52.11523819 471.19366455]
[56.82723618 456.90090942]
[64.23733521 443.80215454]
[74.06072235 432.40097046]
[85.91979980 423.13552856]
[99.35874939 416.36196899]
[113.86100769 412.34069824]
[112.74536133 397.38223267]
[111.62970734 382.42379761]
[110.51406097 367.46533203]
[109.39841461 352.50686646]
[105.76612854 346.07040405]
[108.37920380 337.31768799]
[107.48638153 322.34429932]
[99.00526428 310.10012817]
[105.90744019 295.86389160]
[105.01462555 280.89047241]
[96.53350830 268.64630127]
[103.43568420 254.41006470]
[102.54286957 239.43666077]
[101.65005493 224.46325684]
[100.64579773 209.49691772]
[99.53014374 194.53845215]
[90.86766815 182.42190552]
[97.55712128 168.08448792]
[96.44147491 153.12603760]
[95.32582855 138.16758728]
[94.21018219 123.20912933]
[93.09452820 108.25067139]
[88.90751648 93.84689331]
[81.83041382 80.62136841]
[74.75331116 67.39583588]
[61.42029953 58.87871170]
[62.23747253 44.00654221]
[55.16036987 30.78101349]
[47.98500061 17.60853767]
[41.08700180 11.62060070]
[40.70280075 4.23993778]
[33.62569809 -8.98558998]
[26.54859161 -22.21111679]
[11.26487160 -22.80706787]
[-1.58365142 -30.91954422]
[-8.59980965 -44.28516769]
[-7.98798466 -59.26787949]
[-0.01254386 -71.84793854]
[-7.08964920 -85.07346344]
[-14.16675472 -98.29899597]
[-21.24386024 -111.52452087]
[-28.32096481 -124.75004578]
[-35.39807129 -137.97557068]
[-42.47517776 -151.20111084]
[-45.85490799 -136.58682251]
[-57.10326767 -126.66339111]
[-72.02489471 -125.13201141]
[-85.05438232 -132.56385803]
[-91.33206940 -146.18702698]
[-88.51652527 -160.92041016]
[-77.65787506 -171.26882935]
[-62.80613327 -173.37257385]
[-49.49980927 -166.44616699]
[-54.95516586 -180.41896057]
[-60.41052246 -194.39176941]
[-65.86587524 -208.36456299]
[-71.32123566 -222.33735657]
[-85.91826630 -218.78627014]
[-100.85836792 -217.21252441]
[-115.87493134 -217.64421082]
[-130.69995117 -220.07362366]
[-145.06887817 -224.45739746]
[-158.72526550 -230.71731567]
[-171.42541504 -238.74163818]
[-182.94265747 -248.38717651]
[-193.07145691 -259.48181152]
[-201.63107300 -271.82751465]
[-208.46873474 -285.20397949]
[-213.46240234 -299.37249756]
[-216.52299500 -314.08020020]
[-217.59585571 -329.06460571]
[-216.66186523 -344.05828857]
[-213.73767090 -358.79370117]
[-208.87545776 -373.00787354]
[-202.16201782 -386.44711304]
[-193.71716309 -398.87158203]
[-183.69157410 -410.05957031]
[-172.26417542 -419.81140137]
[-159.63893127 -427.95306396]
[-146.04112244 -434.33920288]
[-131.71342468 -438.85592651]
[-116.91154480 -441.42257690]
[-101.89962769 -441.99334717]
[-86.94557953 -440.55810547]
[-72.31628418 -437.14239502]
[-58.27280045 -431.80722046]
[-45.06576538 -424.64776611]
[-32.93087006 -415.79183960]
[-22.08467484 -405.39743042]
[-12.72074318 -393.65008545]
[-5.00618458 -380.75942993]
[0.92132437 -366.95550537]
[4.95600080 -352.48468018]
[7.02584124 -337.60519409]
[7.09390688 -322.58258057]
[5.15898275 -307.68493652]
[1.25560033 -293.17816162]
[-4.54658031 -279.32110596]
[-12.14401245 -266.36105347]
[-21.40111160 -254.52934265]
[-32.15267181 -244.03709412]
[-44.20682144 -235.07154846]
[-57.34843826 -227.79272461]
[-51.89308167 -213.81991577]
[-46.43772507 -199.84712219]
[-40.98236847 -185.87432861]
[-35.52700806 -171.90151978]
[-29.24964905 -158.27821350]
[-22.17254257 -145.05268860]
[-15.09543800 -131.82714844]
[-8.01833248 -118.60162354]
[-0.94122720 -105.37609863]
[6.13587809 -92.15057373]
[13.21298409 -78.92504120]
[28.10416603 -78.58113098]
[40.90901566 -70.77780914]
[48.13648987 -57.52526474]
[47.75764847 -42.33469772]
[39.77412033 -29.28822327]
[46.85122299 -16.06269455]
[53.92832947 -2.83716750]
[61.10369492 10.33530807]
[67.09622192 14.66097927]
[68.38589478 23.70390892]
[75.46299744 36.92943573]
[88.28981018 44.50058365]
[87.97883606 60.31873322]
[95.05593872 73.54425812]
[102.13304901 86.76979065]
[101.63348389 71.77810669]
[104.21942902 57.00269318]
[109.78092957 43.07180023]
[118.08149719 30.57777786]
[128.76818848 20.05187988]
[141.38661194 11.94166946]
[155.40020752 6.59199953]
[170.21313477 4.23034000]
[185.19551086 4.95710993]
[199.71029663 8.74140644]
[213.14031982 15.42231941]
[224.91452026 24.71577263]
[234.53224182 36.22660446]
[241.58456421 49.46537018]
[245.77159119 63.86914825]
[246.91529846 78.82547760]
[244.96705627 93.69841766]
[240.00970459 107.85556030]
[232.25402832 120.69493866]
[222.02981567 131.67060852]
[209.77178955 140.31588745]
[196.00115967 146.26315308]
[181.30349731 149.25955200]
[166.30371094 149.17767334]
[151.63963318 146.02098083]
[137.93476868 139.92370605]
[125.77186584 131.14511108]
[115.66808319 120.05847168]
[108.05298615 107.13502502]
[109.16863251 122.09348297]
[110.28427887 137.05192566]
[111.39993286 152.01039124]
[112.51557922 166.96884155]
[121.25785828 180.15531921]
[114.48860168 193.42280579]
[115.60424805 208.38125610]
[119.36325836 216.70637512]
[116.62345886 223.57043457]
[117.51627350 238.54383850]
[118.40908813 253.51725769]
[126.95407867 266.83242798]
[119.98803711 279.99765015]
[120.88085175 294.97106934]
[129.42582703 308.28625488]
[122.45979309 321.45147705]
[123.35260773 336.42489624]
[124.35686493 351.39123535]
[125.47251892 366.34967041]
[126.58816528 381.30813599]
[127.70381165 396.26660156]
[128.81945801 411.22503662]
[143.75779724 413.05056763]
[158.05285645 417.75561523]
[171.15516663 425.15936279]
[182.56114197 434.97720337]
[191.83233643 446.83178711]
[198.61241150 460.26745605]
[202.64074707 474.76776123]
[203.76249695 489.77532959]
[201.93455505 504.71337891]
[197.22718811 519.00769043]
[189.82133484 532.10882568]
[180.00163269 543.51318359]
[168.14555359 552.78247070]
[154.70880127 559.56036377]
[140.20783997 563.58636475]
[125.20007324 564.70568848]
[110.26232910 562.87530518]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 193]
[14 192]
[15 191]
[16 190]
[17 189]
[19 188]
[20 187]
[22 185]
[23 184]
[25 182]
[26 181]
[27 180]
[28 178]
[29 177]
[31 175]
[32 174]
[33 173]
[34 172]
[35 171]
[36 142]
[37 141]
[38 140]
[40 138]
[41 137]
[42 135]
[44 134]
[45 133]
[46 132]
[51 127]
[52 126]
[53 125]
[54 124]
[55 123]
[56 122]
[57 121]
[66 120]
[67 119]
[68 118]
[69 117]
[70 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
