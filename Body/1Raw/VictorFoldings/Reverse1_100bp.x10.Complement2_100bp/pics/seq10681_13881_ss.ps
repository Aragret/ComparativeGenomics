%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[-76.07379150 571.40612793]
[-71.79026794 585.81610107]
[-69.87387085 600.72662354]
[-70.37424469 615.75146484]
[-73.27842712 630.50146484]
[-78.51119232 644.59448242]
[-85.93699646 657.66558838]
[-95.36350250 669.37615967]
[-106.54653168 679.42285156]
[-119.19641876 687.54547119]
[-132.98550415 693.53356934]
[-147.55662537 697.23205566]
[-162.53233337 698.54510498]
[-177.52473450 697.43878174]
[-192.14549255 693.94171143]
[-206.01589966 688.14447021]
[-218.77665710 680.19720459]
[-230.09724426 670.30572510]
[-239.68444824 658.72637939]
[-247.28990173 645.75897217]
[-252.71662903 631.73944092]
[-255.82405090 617.03094482]
[-256.53167725 602.01446533]
[-254.82121277 587.07891846]
[-250.73692322 572.61120605]
[-244.38461304 558.98608398]
[-235.92883301 546.55645752]
[-225.58859253 535.64422607]
[-213.63174438 526.53216553]
[-200.36798096 519.45623779]
[-186.14088440 514.59973145]
[-171.31895447 512.08843994]
[-156.28611755 511.98739624]
[-141.43177795 514.29925537]
[-127.14067841 518.96405029]
[-120.26126862 505.63464355]
[-113.38185120 492.30520630]
[-106.50244141 478.97576904]
[-99.62303162 465.64636230]
[-100.66153717 450.78799438]
[-87.45681000 442.07330322]
[-80.57740021 428.74386597]
[-86.37088013 412.95544434]
[-78.80390930 397.55883789]
[-62.12063217 392.29693604]
[-55.44043732 378.86654663]
[-48.76024246 365.43618774]
[-42.08004761 352.00579834]
[-49.32765198 340.79357910]
[-50.09476471 327.35647583]
[-44.07423782 315.19821167]
[-32.74280167 307.54205322]
[-19.00034523 306.47634888]
[-12.12093258 293.14691162]
[-5.24151993 279.81747437]
[1.63789284 266.48803711]
[8.51730537 253.15861511]
[15.09733295 239.67889404]
[21.37469292 226.05557251]
[27.65205383 212.43225098]
[13.24181080 216.59696960]
[0.04128408 209.47334290]
[-4.38766479 195.14210510]
[2.49206710 181.81283569]
[16.73945618 177.12115479]
[30.19295311 183.75466919]
[35.14583206 197.91244507]
[42.61357117 184.90348816]
[50.08131409 171.89454651]
[57.54905319 158.88558960]
[65.01679230 145.87663269]
[72.48453522 132.86769104]
[79.95227814 119.85873413]
[87.42002106 106.84977722]
[87.57736206 92.86883545]
[99.57102966 85.68247986]
[101.12937164 76.68196106]
[107.24803162 72.53662872]
[107.64368439 56.72036743]
[120.79576874 49.72951889]
[128.16645813 36.66533279]
[135.24356079 23.43980598]
[142.32067871 10.21427822]
[137.96760559 -4.74194479]
[145.33320618 -18.05369377]
[159.61849976 -22.11150169]
[166.69560242 -35.33702850]
[173.77272034 -48.56255722]
[180.84982300 -61.78808594]
[187.92692566 -75.01361084]
[195.00402832 -88.23914337]
[184.73434448 -103.58060455]
[183.67892456 -121.92664337]
[192.04371643 -138.19317627]
[207.43603516 -147.91630554]
[225.54833984 -148.47723389]
[232.02784729 -162.00558472]
[238.50733948 -175.53392029]
[225.96658325 -183.80697632]
[214.66920471 -193.71064758]
[204.82565308 -205.06045532]
[196.61929321 -217.64495850]
[190.20303345 -231.22970581]
[185.69639587 -245.56163025]
[183.18333435 -260.37371826]
[182.71064758 -275.39007568]
[184.28717041 -290.33090210]
[187.88351440 -304.91787720]
[193.43269348 -318.87927246]
[200.83132935 -331.95495605]
[209.94157410 -343.90139771]
[220.59373474 -354.49597168]
[232.58934021 -363.54138184]
[245.70492554 -370.86904907]
[259.69616699 -376.34252930]
[274.30242920 -379.85977173]
[289.25158691 -381.35534668]
[304.26513672 -380.80130005]
[319.06341553 -378.20803833]
[333.37069702 -373.62380981]
[346.92047119 -367.13403320]
[359.46032715 -358.85964966]
[370.75665283 -348.95474243]
[380.59896851 -337.60385132]
[388.80395508 -325.01846313]
[395.21875000 -311.43304443]
[399.72384644 -297.10061646]
[402.23532104 -282.28823853]
[402.70635986 -267.27188110]
[401.12823486 -252.33120728]
[397.53030396 -237.74461365]
[391.97961426 -223.78382874]
[384.57955933 -210.70892334]
[375.46801758 -198.76348877]
[364.81472778 -188.17004395]
[352.81814575 -179.12594604]
[339.70175171 -171.79968262]
[325.70989990 -166.32774353]
[311.10327148 -162.81205750]
[296.15396118 -161.31813049]
[281.14047241 -161.87377930]
[266.34246826 -164.46865845]
[252.03569031 -169.05442810]
[245.55618286 -155.52607727]
[239.07669067 -141.99774170]
[247.02243042 -133.30583191]
[251.58529663 -122.41177368]
[252.20932007 -110.58258820]
[248.79811096 -99.20262909]
[241.72885132 -89.61153412]
[231.81080627 -82.94657135]
[220.19267273 -80.00778961]
[208.22955322 -81.16203308]
[201.15245056 -67.93650818]
[194.07534790 -54.71097946]
[186.99824524 -41.48545074]
[179.92114258 -28.25992393]
[172.84402466 -15.03439713]
[177.39341736 -0.89796740]
[170.40463257 12.61541462]
[155.54620361 17.29138374]
[148.46910095 30.51691246]
[141.39198303 43.74243927]
[142.05853271 47.20481873]
[141.08116150 51.16205978]
[138.24554443 54.83800507]
[133.69209290 57.39011765]
[133.84437561 72.28394318]
[120.14436340 80.19721985]
[112.57997894 93.15022278]
[112.42263794 107.13116455]
[100.42897034 114.31752014]
[92.96122742 127.32646942]
[85.49349213 140.33541870]
[78.02574921 153.34437561]
[70.55800629 166.35333252]
[63.09026718 179.36228943]
[55.62252426 192.37123108]
[48.15478134 205.38018799]
[41.27537155 218.70960999]
[34.99800873 232.33293152]
[28.72064972 245.95625305]
[29.20100021 251.15397644]
[27.78150749 255.57418823]
[25.07647705 258.62344360]
[21.84673500 260.03802490]
[14.96732235 273.36746216]
[8.08790970 286.69689941]
[1.20849693 300.02633667]
[-5.67091560 313.35574341]
[2.13428187 328.36157227]
[-0.51636600 344.89868164]
[-12.38264942 356.48110962]
[-28.64967155 358.68600464]
[-35.32986450 372.11636353]
[-42.01005936 385.54675293]
[-48.69025421 398.97714233]
[-42.96293640 411.16778564]
[-45.26879883 424.24041748]
[-54.54537582 433.46142578]
[-67.24797058 435.62329102]
[-74.12738800 448.95272827]
[-73.58094025 464.76449585]
[-86.29360199 472.52575684]
[-93.17301178 485.85519409]
[-100.05242157 499.18463135]
[-106.93183899 512.51403809]
[-113.81124878 525.84350586]
[-101.72980499 534.78967285]
[-91.23998260 545.55816650]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 208]
[36 207]
[37 206]
[38 205]
[39 204]
[41 202]
[42 201]
[45 197]
[46 196]
[47 195]
[48 194]
[53 190]
[54 189]
[55 188]
[56 187]
[57 186]
[58 182]
[59 181]
[60 180]
[67 179]
[68 178]
[69 177]
[70 176]
[71 175]
[72 174]
[73 173]
[74 172]
[76 170]
[78 169]
[80 167]
[81 163]
[82 162]
[83 161]
[86 158]
[87 157]
[88 156]
[89 155]
[90 154]
[91 153]
[96 145]
[97 144]
[98 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
