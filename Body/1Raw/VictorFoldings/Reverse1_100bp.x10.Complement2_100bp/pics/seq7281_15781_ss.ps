%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[111.02748108 571.68029785]
[110.18138123 556.65136719]
[112.37824249 541.75976562]
[117.52810669 527.61541748]
[125.42009735 514.79736328]
[135.73103333 503.83065796]
[148.03869629 495.16424561]
[161.83908081 489.15307617]
[158.73497009 474.47778320]
[155.63085938 459.80249023]
[145.42726135 448.95187378]
[150.14125061 433.84927368]
[147.03713989 419.17395020]
[143.93302917 404.49865723]
[140.82891846 389.82336426]
[137.07263184 375.30130005]
[132.67163086 360.96145630]
[128.27062988 346.62161255]
[122.81351471 360.59371948]
[110.73159027 369.48342896]
[95.76857758 370.53619385]
[82.56092834 363.42578125]
[75.20117950 350.35543823]
[75.96981812 335.37515259]
[84.62868500 323.12670898]
[98.49472809 317.40545654]
[113.27140808 319.98416138]
[124.38014221 330.06399536]
[121.93441772 315.26473999]
[119.48868561 300.46545410]
[117.04296112 285.66619873]
[114.59723663 270.86691284]
[112.15150452 256.06765747]
[109.70578003 241.26838684]
[107.06776428 238.92889404]
[105.43183136 235.19543457]
[105.44082642 230.55288696]
[107.49671173 225.75492859]
[105.71424103 210.86120605]
[96.51937103 199.14355469]
[102.56195831 184.52172852]
[90.73070526 175.54637146]
[88.71086121 160.46740723]
[98.20526123 148.11856079]
[96.42279816 133.22483826]
[94.64032745 118.33112335]
[83.31495667 109.29331207]
[81.59315491 94.90645599]
[90.46595001 83.45133972]
[88.68348694 68.55762482]
[86.90101624 53.66390610]
[85.11855316 38.77018738]
[83.33609009 23.87647057]
[81.55361938 8.98275280]
[78.44950867 -5.69254971]
[74.04851532 -20.03239632]
[69.64751434 -34.37224579]
[64.92738342 -48.61023331]
[53.00532532 -59.01095963]
[56.01961517 -73.59736633]
[50.98269653 -87.72640228]
[39.06064224 -98.12712860]
[42.07492828 -112.71353149]
[37.03801346 -126.84256744]
[32.00109863 -140.97158813]
[20.07904053 -151.37231445]
[23.09333038 -165.95872498]
[18.05641365 -180.08775330]
[13.01949787 -194.21679688]
[7.77277946 -208.26925659]
[2.31742239 -222.24206543]
[-3.13793468 -236.21485901]
[-8.59329128 -250.18765259]
[-23.26388359 -246.92051697]
[-38.26127625 -245.93124390]
[-53.23390579 -247.24301147]
[-67.83079529 -250.82507324]
[-81.70977783 -256.59347534]
[-94.54550171 -264.41296387]
[-106.03708649 -274.10028076]
[-115.91514587 -285.42831421]
[-123.94812012 -298.13153076]
[-129.94772339 -311.91213989]
[-133.77330017 -326.44711304]
[-135.33517456 -341.39572144]
[-134.59674072 -356.40756226]
[-131.57530212 -371.13070679]
[-126.34169769 -385.22006226]
[-119.01859283 -398.34533691]
[-109.77766418 -410.19882202]
[-98.83552551 -420.50271606]
[-86.44868469 -429.01544189]
[-72.90750122 -435.53747559]
[-58.52939606 -439.91589355]
[-43.65142059 -442.04809570]
[-28.62233162 -441.88406372]
[-13.79443264 -439.42767334]
[0.48468870 -434.73651123]
[13.88030910 -427.92050171]
[26.07841682 -419.13946533]
[36.79306793 -408.59924316]
[45.77309799 -396.54687500]
[52.80800629 -383.26489258]
[57.73287582 -369.06469727]
[60.43226624 -354.27908325]
[60.84289932 -339.25473022]
[58.95514679 -324.34375000]
[54.81326294 -309.89575195]
[48.51433945 -296.24935913]
[40.20602798 -283.72448730]
[30.08309555 -272.61471558]
[18.38282967 -263.18051147]
[5.37950611 -255.64300537]
[10.83486271 -241.67021179]
[16.29022026 -227.69741821]
[21.74557686 -213.72462463]
[25.68226051 -211.02062988]
[27.96210861 -205.81492615]
[27.14852715 -199.25370789]
[32.18544388 -185.12467957]
[37.22235870 -170.99565125]
[48.78414154 -161.60551453]
[46.13012695 -146.00851440]
[51.16704178 -131.87948608]
[56.20396042 -117.75045013]
[67.76573944 -108.36032867]
[65.11172485 -92.76331329]
[70.14864349 -78.63428497]
[81.71042633 -69.24416351]
[79.05641174 -53.64714813]
[82.06820679 -51.81373215]
[84.34160614 -48.43043518]
[85.15782928 -43.86019516]
[83.98736572 -38.77324295]
[88.38835907 -24.43339539]
[92.78936005 -10.09354782]
[96.86198425 -24.53008842]
[106.73004150 -35.82705307]
[120.48816681 -41.80317688]
[135.47987366 -41.30456161]
[148.81051636 -34.42748260]
[157.90612793 -22.49979591]
[161.01051331 -7.82455158]
[157.52426147 6.76469088]
[148.12049866 18.45097733]
[134.61494446 24.97786903]
[119.61533356 25.08512497]
[106.01783752 18.75203705]
[96.44734192 7.20028639]
[98.22980499 22.09400368]
[100.01226807 36.98772049]
[101.79473877 51.88143921]
[103.57720184 66.77515411]
[105.35967255 81.66887665]
[116.68504333 90.70668793]
[118.40684509 105.09354401]
[109.53404999 116.54866028]
[111.31651306 131.44238281]
[113.09898376 146.33609009]
[125.23930359 156.09571838]
[126.83480835 171.22546387]
[117.45567322 182.73925781]
[126.77804565 195.52221680]
[120.60796356 209.07875061]
[122.39042664 223.97245789]
[124.50505066 238.82266235]
[126.95077515 253.62193298]
[129.39649963 268.42120361]
[131.84223938 283.22045898]
[134.28796387 298.01974487]
[136.73368835 312.81900024]
[139.17941284 327.61828613]
[142.61047363 342.22061157]
[147.01147461 356.56045532]
[151.41247559 370.90029907]
[159.37882996 358.19058228]
[173.96757507 354.70223999]
[186.82162476 362.43359375]
[190.57757568 376.95574951]
[183.08386230 389.94973755]
[168.63322449 393.97204590]
[155.50422668 386.71923828]
[158.60833740 401.39456177]
[161.71244812 416.06985474]
[164.81655884 430.74514771]
[175.24218750 442.64544678]
[170.30616760 456.69836426]
[173.41027832 471.37368774]
[176.51438904 486.04898071]
[191.56684875 485.95721436]
[206.32957458 488.89767456]
[220.19807434 494.75000000]
[232.60441589 503.27453613]
[243.04058838 514.12219238]
[251.07920837 526.84875488]
[256.39114380 540.93304443]
[258.75881958 555.79840088]
[258.08529663 570.83612061]
[254.39819336 585.43029785]
[247.84846497 598.98333740]
[238.70431519 610.94030762]
[227.34019470 620.81158447]
[214.22146606 628.19287109]
[199.88531494 632.78198242]
[184.91882324 634.39099121]
[169.93482971 632.95391846]
[155.54695129 628.52972412]
[142.34432983 621.29949951]
[130.86763000 611.55938721]
[121.58680725 599.70819092]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 189]
[9 188]
[10 187]
[12 185]
[13 184]
[14 183]
[15 182]
[16 175]
[17 174]
[18 173]
[28 172]
[29 171]
[30 170]
[31 169]
[32 168]
[33 167]
[34 166]
[38 165]
[39 164]
[41 162]
[44 159]
[45 158]
[46 157]
[49 154]
[50 153]
[51 152]
[52 151]
[53 150]
[54 149]
[55 136]
[56 135]
[57 134]
[58 130]
[60 128]
[61 127]
[63 125]
[64 124]
[65 123]
[67 121]
[68 120]
[69 119]
[70 116]
[71 115]
[72 114]
[73 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
