%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[62.25948715 715.15478516]
[55.15021133 728.40991211]
[45.78822708 740.18249512]
[34.47448730 750.09405518]
[21.57267380 757.82598877]
[7.49753189 763.12976074]
[-7.29848289 765.83489990]
[-22.33973885 765.85443115]
[-37.14272308 763.18768311]
[-51.23157883 757.92041016]
[-64.15341187 750.22198486]
[-75.49283600 740.33984375]
[-84.88533020 728.59161377]
[-92.02897644 715.35498047]
[-96.69412231 701.05548096]
[-98.73081970 686.15270996]
[-98.07357788 671.12579346]
[-94.74353790 656.45782471]
[-88.84774780 642.62017822]
[-80.57572174 630.05780029]
[-70.19338226 619.17449951]
[-58.03446960 610.32006836]
[-44.48984528 603.77923584]
[-29.99491692 599.76214600]
[-15.01563454 598.39801025]
[-0.03351841 599.73065186]
[3.93857789 585.26617432]
[7.91067410 570.80163574]
[11.88277054 556.33709717]
[15.85486603 541.87255859]
[19.82696342 527.40802002]
[9.36988640 519.70135498]
[2.13636899 508.87310791]
[-0.99456799 496.20013428]
[0.37080801 483.18560791]
[6.09156752 471.38085938]
[15.50632477 462.20043945]
[27.50963593 456.75259399]
[40.68177032 455.70550537]
[45.08276749 441.36566162]
[49.48376465 427.02581787]
[53.88476562 412.68594360]
[58.28576279 398.34609985]
[62.68675995 384.00625610]
[67.08776093 369.66641235]
[71.48875427 355.32656860]
[64.30516052 342.32919312]
[68.56411743 327.72387695]
[82.24565887 320.27716064]
[86.64665985 305.93731689]
[91.04765320 291.59747314]
[93.16227722 276.74728394]
[92.93894958 261.74893188]
[92.71562195 246.75061035]
[84.25698090 238.10317993]
[83.94817352 225.60964966]
[92.50000000 215.95411682]
[92.50000000 200.95411682]
[92.50000000 185.95411682]
[92.50000000 170.95411682]
[92.50000000 155.95411682]
[84.76270294 143.22685242]
[92.50000000 129.42668152]
[92.50000000 114.42668152]
[84.77587128 105.71007538]
[84.86257172 94.06388855]
[92.71562195 85.46325684]
[85.18464661 71.54941559]
[93.11058044 58.93875122]
[93.33390808 43.94041443]
[93.55723572 28.94207764]
[84.21778870 13.07209492]
[93.79848480 -1.63087237]
[93.79848480 -16.63087273]
[93.79848480 -31.63087273]
[93.68682098 -46.63045502]
[93.46349335 -61.62879562]
[93.24016571 -76.62712860]
[84.09986115 -64.73365021]
[70.01674652 -59.56974792]
[55.35462189 -62.73552322]
[44.65670776 -73.25001526]
[41.23786926 -87.85520935]
[46.15747070 -102.02551270]
[57.89111710 -111.37010956]
[72.80301666 -112.99347687]
[86.27255249 -106.39259338]
[94.12610626 -93.61256409]
[95.90856934 -108.50627899]
[97.69104004 -123.39999390]
[99.47350311 -138.29371643]
[100.92292023 -153.22352600]
[102.03856659 -168.18197632]
[95.34911346 -182.51939392]
[104.01158905 -194.63594055]
[105.12723541 -209.59440613]
[106.24288940 -224.55285645]
[92.04534149 -229.68434143]
[79.75940704 -238.45693970]
[70.29678345 -250.21965027]
[64.35965729 -264.09960938]
[62.38861084 -279.06680298]
[64.52989960 -294.01062012]
[70.62463379 -307.82211304]
[80.22054291 -319.47634888]
[92.60553741 -328.10852051]
[106.86058044 -333.07806396]
[121.92784119 -334.01620483]
[136.68923950 -330.85333252]
[150.04937744 -323.82415771]
[161.01684570 -313.45028687]
[168.77777100 -300.50152588]
[172.75627136 -285.93875122]
[172.65708923 -270.84265137]
[168.48759460 -256.33340454]
[160.55718994 -243.48774719]
[149.45436096 -233.25886536]
[136.00302124 -226.40583801]
[121.20133972 -223.43721008]
[120.08569336 -208.47874451]
[118.97004700 -193.52029419]
[125.73930359 -180.25280762]
[116.99702454 -167.06632996]
[115.88137817 -152.10787964]
[117.89282227 -149.21194458]
[118.60153198 -145.19787598]
[117.49725342 -140.68856812]
[114.36721802 -136.51124573]
[112.58475494 -121.61753082]
[110.80228424 -106.72381592]
[109.01982117 -91.83009338]
[108.23850250 -76.85045624]
[108.46183014 -61.85212326]
[108.68515778 -46.85378265]
[111.92789459 -40.21251678]
[108.79848480 -31.63087273]
[108.79848480 -16.63087273]
[108.79848480 -1.63087237]
[117.12744141 7.14153004]
[117.25020599 19.63827705]
[108.55557251 29.16540527]
[108.33224487 44.16374207]
[108.10891724 59.16207886]
[115.65586853 72.00313568]
[107.71395874 85.68658447]
[116.25928497 100.12104797]
[107.50000000 114.42668152]
[107.50000000 129.42668152]
[115.23729706 143.22685242]
[107.50000000 155.95411682]
[107.50000000 170.95411682]
[107.50000000 185.95411682]
[107.50000000 200.95411682]
[107.50000000 215.95411682]
[117.07468414 231.68330383]
[107.71395874 246.52728271]
[107.93728638 261.52560425]
[108.16061401 276.52395630]
[114.72956848 263.03881836]
[124.65180969 251.78941345]
[137.21102905 243.58782959]
[151.50056458 239.02613831]
[166.48886108 238.43368530]
[181.09388733 241.85321045]
[194.26130676 249.03787231]
[205.04052734 259.46899414]
[212.65341187 272.39355469]
[216.55036926 286.87850952]
[216.45007324 301.87817383]
[212.35975647 316.30969238]
[204.57472229 329.13128662]
[193.65696716 339.41732788]
[180.39466858 346.42526245]
[165.74520874 349.64920044]
[150.76617432 348.85635376]
[136.53890991 344.10400391]
[124.09049225 335.73519897]
[114.31958008 324.35409546]
[107.93154144 310.78231812]
[105.38750458 295.99847412]
[100.98650360 310.33831787]
[96.58550262 324.67816162]
[103.73413086 338.51779175]
[99.06661224 352.99774170]
[85.82860565 359.72756958]
[81.42760468 374.06741333]
[77.02661133 388.40725708]
[72.62561035 402.74710083]
[68.22460938 417.08694458]
[63.82361221 431.42678833]
[59.42261505 445.76666260]
[55.02161789 460.10650635]
[67.84299469 471.53024292]
[74.36005402 487.35806274]
[73.30639648 504.38711548]
[64.94229889 519.19439697]
[50.99266434 528.82464600]
[34.29148483 531.38012695]
[30.31939125 545.84466553]
[26.34729385 560.30920410]
[22.37519836 574.77374268]
[18.40310097 589.23822021]
[14.43100548 603.70275879]
[27.99255371 610.20849609]
[40.17440033 619.03131104]
[50.58494568 629.88763428]
[58.88953781 642.42852783]
[64.82122040 656.25079346]
[68.18930817 670.91009521]
[68.88553619 685.93524170]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 203]
[27 202]
[28 201]
[29 200]
[30 199]
[31 198]
[39 192]
[40 191]
[41 190]
[42 189]
[43 188]
[44 187]
[45 186]
[46 185]
[49 182]
[50 181]
[51 180]
[52 158]
[53 157]
[54 156]
[57 154]
[58 153]
[59 152]
[60 151]
[61 150]
[63 148]
[64 147]
[67 145]
[69 143]
[70 142]
[71 141]
[73 138]
[74 137]
[75 136]
[76 134]
[77 133]
[78 132]
[88 131]
[89 130]
[90 129]
[91 128]
[92 124]
[93 123]
[95 121]
[96 120]
[97 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
