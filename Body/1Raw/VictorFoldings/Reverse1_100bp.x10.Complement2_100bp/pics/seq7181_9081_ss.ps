%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[-27.90298843 521.09289551]
[-30.65224075 535.85205078]
[-34.88056946 550.25738525]
[-40.54457855 564.16094971]
[-47.58615112 577.42016602]
[-55.93302917 589.89898682]
[-65.49955750 601.46936035]
[-76.18756866 612.01245117]
[-87.88739014 621.42016602]
[-100.47895050 629.59594727]
[-113.83305359 636.45593262]
[-127.81266022 641.92962646]
[-142.27430725 645.96099854]
[-157.06961060 648.50854492]
[-172.04673767 649.54620361]
[-187.05200195 649.06329346]
[-201.93141174 647.06475830]
[-216.53230286 643.57116699]
[-230.70481873 638.61834717]
[-244.30355835 632.25708008]
[-257.18893433 624.55267334]
[-269.22875977 615.58422852]
[-280.29946899 605.44366455]
[-290.28747559 594.23516846]
[-299.09027100 582.07366943]
[-306.61752319 569.08398438]
[-312.79196167 555.39947510]
[-317.55029297 541.16046143]
[-320.84362793 526.51306152]
[-322.63821411 511.60769653]
[-322.91561890 496.59722900]
[-321.67300415 481.63571167]
[-318.92309570 466.87667847]
[-314.69415283 452.47158813]
[-309.02951050 438.56823730]
[-301.98736572 425.30932617]
[-293.63992310 412.83087158]
[-284.07290649 401.26095581]
[-273.38442993 390.71832275]
[-261.68417358 381.31109619]
[-249.09226990 373.13586426]
[-235.73785400 366.27651978]
[-221.75801086 360.80340576]
[-207.29618835 356.77270508]
[-192.50076294 354.22579956]
[-177.52360535 353.18881226]
[-162.51835632 353.67236328]
[-147.63903809 355.67153931]
[-133.03829956 359.16577148]
[-118.86599731 364.11923218]
[-105.26754761 370.48107910]
[-92.38249969 378.18603516]
[-83.42179871 366.15667725]
[-74.46110535 354.12728882]
[-73.06308746 339.29843140]
[-58.61414719 332.85336304]
[-49.65345001 320.82400513]
[-40.69275665 308.79461670]
[-42.13177872 296.78396606]
[-34.76492310 286.68875122]
[-22.10087585 284.24240112]
[-12.96207333 272.34777832]
[-3.82327080 260.45312500]
[5.31553173 248.55850220]
[14.45433426 236.66386414]
[16.07297897 221.85746765]
[30.61627197 215.62825012]
[39.75507355 203.73361206]
[47.98388290 191.19221497]
[55.25711060 178.07353210]
[62.53034210 164.95483398]
[69.80357361 151.83613586]
[76.28306580 138.30778503]
[81.94585419 124.41776276]
[87.60864258 110.52774048]
[84.89817810 93.97389984]
[98.26044464 83.83358002]
[103.71580505 69.86078644]
[109.17115784 55.88798904]
[114.62651825 41.91519165]
[120.08187866 27.94239235]
[125.53723145 13.96959496]
[123.34877777 -1.69952238]
[135.18501282 -10.74124622]
[132.99655151 -26.41036415]
[144.83279419 -35.45208740]
[150.18397522 -49.46511078]
[155.43069458 -63.51758194]
[160.67741394 -77.57005310]
[165.92413330 -91.62252045]
[170.96104431 -105.75155640]
[175.78704834 -119.95401001]
[169.05364990 -134.00033569]
[174.15020752 -148.33488464]
[187.58273315 -154.66758728]
[192.40872192 -168.87005615]
[197.23472595 -183.07250977]
[202.06071472 -197.27496338]
[206.88671875 -211.47741699]
[193.70233154 -218.71226501]
[181.97468567 -228.12680054]
[172.06015015 -239.43490601]
[164.26005554 -252.29295349]
[158.81140137 -266.31021118]
[155.87979126 -281.06069946]
[155.55429077 -296.09616089]
[157.84481812 -310.95968628]
[162.68173218 -325.19961548]
[169.91809082 -338.38317871]
[179.33393860 -350.10977173]
[190.64317322 -360.02301025]
[203.50210571 -367.82165527]
[217.51998901 -373.26870728]
[232.27079773 -376.19863892]
[247.30630493 -376.52243042]
[262.16958618 -374.23022461]
[276.40893555 -369.39169312]
[289.59167480 -362.15383911]
[301.31719971 -352.73666382]
[311.22915649 -341.42630005]
[319.02633667 -328.56646729]
[324.47183228 -314.54800415]
[327.40008545 -299.79684448]
[327.72216797 -284.76132202]
[325.42828369 -269.89828491]
[320.58813477 -255.65946960]
[313.34878540 -242.47755432]
[303.93026733 -230.75309753]
[292.61880493 -220.84242249]
[279.75808716 -213.04669189]
[265.73898315 -207.60281372]
[250.98750305 -204.67622375]
[235.95193481 -204.35585022]
[221.08917236 -206.65141296]
[216.26318359 -192.44895935]
[211.43717957 -178.24650574]
[206.61117554 -164.04405212]
[201.78518677 -149.84159851]
[208.57861328 -136.63610840]
[203.88668823 -122.16405487]
[189.98950195 -115.12801361]
[185.16349792 -100.92555237]
[186.43347168 -96.32161713]
[184.82475281 -90.87101746]
[179.97660828 -86.37580872]
[174.72988892 -72.32333374]
[169.48316956 -58.27086258]
[164.23645020 -44.21839142]
[164.84175110 -36.85256577]
[158.80558777 -29.99673080]
[161.38424683 -15.32704163]
[149.15780640 -5.28588963]
[151.73646545 9.38379955]
[139.51002502 19.42495155]
[134.05467224 33.39775085]
[128.59931946 47.37054825]
[123.14395905 61.34334564]
[117.68859863 75.31613922]
[112.23324585 89.28894043]
[116.25827789 100.21781921]
[111.94190216 111.03494263]
[101.49866486 116.19052124]
[95.83587646 130.08055115]
[90.17309570 143.97058105]
[103.57991791 137.24324036]
[118.39879608 139.56716919]
[129.10267639 150.07559204]
[131.69924927 164.84913635]
[125.22007751 178.37763977]
[112.08171844 185.61529541]
[97.18446350 183.86264038]
[86.08461761 173.77336121]
[82.92226410 159.10935974]
[75.64903259 172.22805786]
[68.37580872 185.34675598]
[61.10257721 198.46545410]
[74.71469879 192.16384888]
[89.66250610 193.41410828]
[102.03867340 201.88938904]
[108.60810089 215.37428284]
[107.65355682 230.34388733]
[99.42456055 242.88516235]
[86.07215118 249.71986389]
[71.08660889 249.06140137]
[58.38512421 241.08190918]
[51.28783417 227.86720276]
[51.64970779 212.87242126]
[42.51090622 224.76705933]
[40.23859024 240.42422485]
[26.34896660 245.80267334]
[17.21016502 257.69729614]
[8.07136250 269.59191895]
[-1.06744015 281.48657227]
[-10.20624256 293.38119507]
[-12.19680405 311.68746948]
[-28.66337776 317.75531006]
[-37.62407303 329.78469849]
[-46.58477020 341.81408691]
[-48.62371826 357.50335693]
[-62.43172836 363.08798218]
[-71.39242554 375.11737061]
[-80.35311890 387.14672852]
[-69.28195953 397.28677368]
[-59.29346848 408.49487305]
[-50.49014664 420.65597534]
[-42.96232986 433.64532471]
[-36.78726578 447.32958984]
[-32.02831650 461.56838989]
[-28.73432350 476.21560669]
[-26.93908310 491.12091064]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 202]
[53 201]
[54 200]
[56 198]
[57 197]
[58 196]
[61 194]
[62 193]
[63 192]
[64 191]
[65 190]
[67 188]
[68 187]
[69 176]
[70 175]
[71 174]
[72 173]
[73 164]
[74 163]
[75 162]
[77 159]
[78 158]
[79 157]
[80 156]
[81 155]
[82 154]
[84 152]
[86 150]
[87 148]
[88 147]
[89 146]
[90 145]
[91 142]
[92 141]
[95 138]
[96 137]
[97 136]
[98 135]
[99 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
