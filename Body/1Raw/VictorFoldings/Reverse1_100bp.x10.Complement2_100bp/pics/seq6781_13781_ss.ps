%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[94.57009125 563.39849854]
[81.68464661 555.68841553]
[69.74349976 546.58404541]
[58.89681625 536.19995117]
[49.28101349 524.66668701]
[41.01701355 512.12927246]
[34.20875168 498.74542236]
[28.94184113 484.68344116]
[25.28252411 470.12014771]
[23.27681923 455.23870850]
[22.94994926 440.22628784]
[24.30602646 425.27163696]
[27.32799721 410.56286621]
[31.97785378 396.28497314]
[38.19712067 382.61746216]
[45.90758896 369.73223877]
[55.01228333 357.79138184]
[65.39670563 346.94500732]
[76.93026733 337.32952881]
[89.46791077 329.06591797]
[102.85196686 322.25805664]
[116.91412354 316.99157715]
[131.47752380 313.33267212]
[129.47351074 298.46716309]
[127.46949005 283.60162354]
[125.46547699 268.73608398]
[116.09716797 257.15664673]
[121.92138672 242.44647217]
[119.91737366 227.58093262]
[117.91336060 212.71540833]
[106.67427826 206.41362000]
[101.03270721 194.61300659]
[103.25044250 181.52514648]
[112.73876953 171.96551514]
[110.95629883 157.07180786]
[109.17383575 142.17808533]
[104.98682404 127.77430725]
[98.50733185 114.24595642]
[87.08138275 106.18746185]
[87.96432495 92.23353577]
[81.48483276 78.70519257]
[75.00533295 65.17684937]
[68.52584076 51.64850235]
[62.04634094 38.12015533]
[54.96923828 24.89462852]
[47.30863953 11.99830055]
[39.64804077 -0.89802605]
[31.70135689 -13.62006187]
[23.47254944 -26.16146278]
[15.24374199 -38.70286179]
[7.91948366 -44.16116333]
[6.98740149 -51.49280930]
[-1.05377150 -64.15533447]
[-9.09494495 -76.81785583]
[-17.13611794 -89.48038483]
[-25.17728996 -102.14290619]
[-39.10684586 -109.64478302]
[-39.39807510 -124.53653717]
[-47.43924713 -137.19906616]
[-55.48041916 -149.86158752]
[-63.52159500 -162.52410889]
[-71.56276703 -175.18663025]
[-85.15093231 -168.78625488]
[-99.43415070 -164.13941956]
[-114.18714905 -161.31945801]
[-129.17726135 -160.37080383]
[-144.16806030 -161.30845642]
[-158.92312622 -164.11759949]
[-173.20974731 -168.75395203]
[-186.80259705 -175.14436340]
[-199.48730469 -183.18807983]
[-211.06382751 -192.75820923]
[-221.34956360 -203.70384216]
[-230.18231201 -215.85234070]
[-237.42274475 -229.01210022]
[-242.95668030 -242.97558594]
[-246.69685364 -257.52255249]
[-248.58425903 -272.42358398]
[-248.58912659 -287.44369507]
[-246.71141052 -302.34594727]
[-242.98068237 -316.89535522]
[-237.45581055 -330.86239624]
[-230.22392273 -344.02688599]
[-221.39907837 -356.18109131]
[-211.12045288 -367.13342285]
[-199.55015564 -376.71105957]
[-186.87066650 -384.76300049]
[-173.28195190 -391.16226196]
[-158.99835205 -395.80786133]
[-144.24511719 -398.62661743]
[-129.25492859 -399.57397461]
[-114.26420593 -398.63507080]
[-99.50937653 -395.82467651]
[-85.22315216 -391.18713379]
[-71.63082886 -384.79556274]
[-58.94679260 -376.75079346]
[-47.37108231 -367.17968750]
[-37.08626556 -356.23318481]
[-28.25454903 -344.08395386]
[-21.01522064 -330.92358398]
[-15.48245430 -316.95962524]
[-11.74351120 -302.41235352]
[-9.85735989 -287.51116943]
[-9.85374641 -272.49105835]
[-11.73272896 -257.58895874]
[-15.46467304 -243.03987122]
[-20.99072075 -229.07327271]
[-28.22371674 -215.90942383]
[-37.04958725 -203.75593567]
[-47.32913589 -192.80448914]
[-58.90024185 -183.22781372]
[-50.85906982 -170.56529236]
[-42.81789398 -157.90275574]
[-34.77672195 -145.24023438]
[-26.73554993 -132.57771301]
[-13.38115311 -125.98155212]
[-12.51476574 -110.18408203]
[-4.47359228 -97.52156067]
[3.56758046 -84.85903168]
[11.60875320 -72.19651031]
[19.64992714 -59.53398132]
[27.78514290 -46.93167114]
[36.01395035 -34.39027023]
[44.24275970 -21.84886932]
[47.60214233 -20.77795029]
[50.60972214 -18.02667427]
[52.48136902 -13.77811718]
[52.54436874 -8.55862331]
[60.20496750 4.33770323]
[67.86556244 17.23402977]
[72.60771942 3.00336170]
[85.96128845 -3.82907462]
[100.27674103 0.65065062]
[107.35353088 13.87634754]
[103.13774872 28.27173615]
[90.04439545 35.59048462]
[75.57468414 31.64065933]
[82.05418396 45.16900635]
[88.53367615 58.69734955]
[95.01317596 72.22569275]
[101.49266815 85.75404358]
[112.91861725 93.81253815]
[112.03567505 107.76646423]
[118.51516724 121.29480743]
[118.78272247 106.29719543]
[122.87171936 91.86528015]
[130.51094055 78.95628357]
[141.19372559 68.42641449]
[154.21151733 60.97407532]
[168.70086670 57.09355927]
[183.70079041 57.04224396]
[198.21635437 60.82352829]
[211.28482056 68.18662262]
[222.03939819 78.64315033]
[229.76678467 91.49958038]
[233.95442200 105.90317535]
[234.32458496 120.89860535]
[230.85272217 135.49128723]
[223.76908875 148.71331787]
[213.54353333 159.68774414]
[200.85427856 167.68666077]
[186.54295349 172.17955017]
[171.55877686 172.86839294]
[156.89559937 169.70750427]
[143.52597046 162.90653992]
[132.33666992 152.91658020]
[124.06755066 140.39561462]
[125.85002136 155.28933716]
[127.63248444 170.18305969]
[141.58013916 180.74157715]
[143.53762817 197.78514099]
[132.77888489 210.71139526]
[134.78289795 225.57691956]
[136.78691101 240.44245911]
[146.29856873 253.08520508]
[140.33100891 266.73208618]
[142.33502197 281.59762573]
[144.33903503 296.46313477]
[146.34304810 311.32867432]
[161.35545349 311.00045776]
[176.31021118 312.35519409]
[191.01924133 315.37582397]
[205.29757690 320.02441406]
[218.96563721 326.24246216]
[231.85154724 333.95175171]
[243.79322815 343.05538940]
[254.64053345 353.43884277]
[264.25701904 364.97152710]
[272.52178955 377.50845337]
[279.33084106 390.89187622]
[284.59860229 404.95355225]
[288.25878906 419.51663208]
[290.26538086 434.39794922]
[290.59313965 449.41036987]
[289.23797607 464.36508179]
[286.21685791 479.07403564]
[281.56787109 493.35223389]
[275.34942627 507.02011108]
[267.63970947 519.90576172]
[258.53573608 531.84716797]
[248.15196228 542.69415283]
[236.61898804 552.31030273]
[224.08183289 560.57470703]
[210.69818115 567.38336182]
[196.63633728 572.65069580]
[182.07316589 576.31042480]
[167.19178772 578.31658936]
[152.17936707 578.64392090]
[137.22468567 577.28826904]
[122.51583862 574.26678467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 179]
[24 178]
[25 177]
[26 176]
[28 174]
[29 173]
[30 172]
[34 169]
[35 168]
[36 167]
[37 144]
[38 143]
[40 141]
[41 140]
[42 139]
[43 138]
[44 137]
[45 130]
[46 129]
[47 128]
[48 124]
[49 123]
[50 122]
[52 121]
[53 120]
[54 119]
[55 118]
[56 117]
[58 115]
[59 114]
[60 113]
[61 112]
[62 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
