%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[126.66317749 687.06463623]
[111.63083649 690.53338623]
[97.11720276 685.30291748]
[87.75353241 673.04217529]
[86.52772522 657.66357422]
[93.83094025 644.07440186]
[107.33274078 636.61083984]
[108.22556305 621.63739014]
[109.11837769 606.66400146]
[110.01119232 591.69061279]
[110.56940460 576.70098877]
[110.79273224 561.70263672]
[111.01605988 546.70434570]
[111.23938751 531.70599365]
[111.46271515 516.70764160]
[111.68604279 501.70932007]
[111.90937042 486.71096802]
[112.13269806 471.71264648]
[109.95244598 468.94155884]
[109.00606537 464.97680664]
[109.83998871 460.40975952]
[112.71583557 456.05352783]
[113.60865784 441.08013916]
[114.50147247 426.10671997]
[115.39428711 411.13333130]
[113.33994293 408.26766968]
[112.57154846 404.26458740]
[113.60856628 399.73934937]
[116.67606354 395.51586914]
[118.23658752 380.59729004]
[119.79711151 365.67868042]
[121.35763550 350.76007080]
[121.24596405 335.76046753]
[119.46350098 320.86676025]
[117.68103027 305.97305298]
[115.89856720 291.07934570]
[114.11610413 276.18560791]
[112.33363342 261.29190063]
[100.50238037 252.31654358]
[98.48254395 237.23757935]
[107.97693634 224.88873291]
[106.19447327 209.99501038]
[104.41201019 195.10130310]
[102.62953949 180.20758057]
[100.84707642 165.31385803]
[99.06461334 150.42015076]
[97.28214264 135.52642822]
[95.38885498 120.64639282]
[93.38484192 105.78086853]
[91.12640381 103.73416901]
[89.56276703 100.82048035]
[89.01647186 97.29557037]
[89.71107483 93.53076172]
[91.73139191 89.97389221]
[90.61574554 75.01544189]
[89.50009155 60.05698776]
[79.77842712 71.48017883]
[65.01001740 74.10579681]
[51.94676590 66.73345184]
[46.56102371 52.73366928]
[51.31508255 38.50697327]
[64.03544617 30.55760956]
[78.90653229 32.51992416]
[89.13021851 43.49847412]
[89.57682800 28.50512505]
[80.47470093 12.49785042]
[90.27323914 -2.06084466]
[90.49656677 -17.05918121]
[90.71989441 -32.05751801]
[87.71859741 -40.68480301]
[91.05986023 -47.27705765]
[91.50646210 -62.27040863]
[91.95307159 -77.26375580]
[92.39967346 -92.25711060]
[92.84628296 -107.25045776]
[84.58573151 -117.15631866]
[85.26637268 -129.63511658]
[93.97873688 -138.02687073]
[91.27589417 -144.06062317]
[91.92805481 -149.70613098]
[94.89813232 -153.44613647]
[96.01378632 -168.40458679]
[97.12943268 -183.36303711]
[98.24507904 -198.32148743]
[99.36073303 -213.27995300]
[100.47637939 -228.23840332]
[101.59202576 -243.19685364]
[102.70767212 -258.15530396]
[103.60049438 -273.12872314]
[104.27027893 -288.11373901]
[104.94006348 -303.09878540]
[105.60984802 -318.08383179]
[106.27963257 -333.06887817]
[91.72904205 -336.95401001]
[78.35404205 -343.87667847]
[66.78019714 -353.51309204]
[57.54883957 -365.41250610]
[51.09173965 -379.01840210]
[47.71090698 -393.69436646]
[47.56446838 -408.75399780]
[50.65927124 -423.49291992]
[56.85057068 -437.22180176]
[65.84878540 -449.29849243]
[77.23304749 -459.15811157]
[90.47090912 -466.33956909]
[104.94319153 -470.50695801]
[119.97301483 -471.46533203]
[134.85740662 -469.16986084]
[148.90019226 -463.72796631]
[161.44454956 -455.39413452]
[171.90379333 -444.55813599]
[179.78869629 -431.72683716]
[184.73046875 -417.50036621]
[186.49798584 -402.54409790]
[185.00857544 -387.55758667]
[180.33190918 -373.24176025]
[172.68669128 -360.26620483]
[162.43054199 -349.23782349]
[150.04313660 -340.67242432]
[136.10385132 -334.97061157]
[121.26467133 -332.39907837]
[120.59488678 -317.41403198]
[119.92510223 -302.42901611]
[119.25531769 -287.44396973]
[118.58553314 -272.45892334]
[121.09013367 -268.39248657]
[121.06681061 -262.70947266]
[117.66613007 -257.03967285]
[116.55048370 -242.08120728]
[115.43482971 -227.12275696]
[114.31918335 -212.16429138]
[113.20353699 -197.20584106]
[112.08788300 -182.24739075]
[110.97223663 -167.28894043]
[109.85659027 -152.33049011]
[108.96377563 -137.35708618]
[117.87838745 -122.24097443]
[107.83963013 -106.80384827]
[107.39302063 -91.81050110]
[106.94641876 -76.81715393]
[106.49980927 -61.82379913]
[106.05320740 -46.83045197]
[105.71823120 -31.83419228]
[105.49490356 -16.83585358]
[105.27157593 -1.83751690]
[113.46900177 7.05791855]
[113.40569305 19.55510902]
[104.57017517 28.95173073]
[104.12357330 43.94507980]
[104.45854950 58.94134140]
[105.57419586 73.89979553]
[106.68984222 88.85824585]
[108.25036621 103.77684784]
[110.25437927 118.64237976]
[114.50225067 126.72899628]
[112.17586517 133.74395752]
[113.95832825 148.63768005]
[115.74079132 163.53140259]
[117.52326202 178.42510986]
[119.30572510 193.31883240]
[121.08818817 208.21255493]
[122.87065887 223.10626221]
[135.01097107 232.86589050]
[136.60649109 247.99563599]
[127.22735596 259.50942993]
[129.00982666 274.40313721]
[130.79228210 289.29687500]
[132.57475281 304.19058228]
[134.35722351 319.08428955]
[136.13967896 333.97802734]
[141.96115112 320.15374756]
[152.33087158 309.31542969]
[165.88452148 302.88906860]
[180.83891296 301.72012329]
[195.22650146 305.96240234]
[207.15438843 315.05776978]
[215.05323792 327.80957031]
[217.88380432 342.54006958]
[215.27371216 357.31121826]
[207.56634521 370.17965698]
[195.77572632 379.45227051]
[181.45314026 383.90911865]
[166.48295593 382.96383667]
[152.83476257 376.74075317]
[142.30421448 366.05862427]
[136.27622986 352.32058716]
[134.71571350 367.23919678]
[133.15519714 382.15780640]
[131.59466553 397.07641602]
[130.36769104 412.02612305]
[129.47488403 426.99954224]
[128.58206177 441.97296143]
[127.68924713 456.94635010]
[127.13103485 471.93597412]
[126.90770721 486.93429565]
[126.68437958 501.93264771]
[126.46105194 516.93096924]
[126.23772430 531.92932129]
[126.01439667 546.92767334]
[125.79106903 561.92596436]
[125.56774139 576.92431641]
[128.11161804 581.48236084]
[128.60356140 586.09875488]
[127.36491394 589.98217773]
[124.98459625 592.58343506]
[124.09178162 607.55682373]
[123.19896698 622.53021240]
[122.30615234 637.50366211]
[134.82537842 646.51873779]
[140.46203613 660.87951660]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 208]
[8 207]
[9 206]
[10 205]
[11 201]
[12 200]
[13 199]
[14 198]
[15 197]
[16 196]
[17 195]
[18 194]
[22 193]
[23 192]
[24 191]
[25 190]
[29 189]
[30 188]
[31 187]
[32 186]
[33 170]
[34 169]
[35 168]
[36 167]
[37 166]
[38 165]
[41 162]
[42 161]
[43 160]
[44 159]
[45 158]
[46 157]
[47 156]
[48 154]
[49 153]
[54 152]
[55 151]
[56 150]
[64 149]
[65 148]
[67 145]
[68 144]
[69 143]
[71 142]
[72 141]
[73 140]
[74 139]
[75 138]
[78 136]
[81 135]
[82 134]
[83 133]
[84 132]
[85 131]
[86 130]
[87 129]
[88 128]
[89 125]
[90 124]
[91 123]
[92 122]
[93 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
