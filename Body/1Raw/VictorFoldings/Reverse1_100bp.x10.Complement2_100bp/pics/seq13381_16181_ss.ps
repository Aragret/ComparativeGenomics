%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACGAUUACGAUCCGACGGUUACCACUCCCUCCAACUUCACUCUCCAUACCAAAACUCAUCAGGAGGAUAAAAAGCUUAUAGAACAAGUAACAAUUCCAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[134.05902100 663.03668213]
[119.87432098 668.01068115]
[105.08612823 670.70434570]
[90.05861664 671.05133057]
[75.16185760 669.04309082]
[60.76268768 664.72912598]
[47.21570587 658.21557617]
[34.85451889 649.66296387]
[23.98353386 639.28179932]
[14.87045479 627.32781982]
[7.73970032 614.09533691]
[2.76687193 599.91021729]
[0.07443023 585.12176514]
[-0.27132112 570.09423828]
[1.73813236 555.19763184]
[6.05330610 540.79882812]
[12.56793499 527.25238037]
[21.12158966 514.89190674]
[31.50363159 504.02178955]
[43.45838928 494.90969849]
[56.69146729 487.78002930]
[70.87699127 482.80838013]
[85.66563416 480.11715698]
[100.69319916 479.77264404]
[102.69721222 464.90710449]
[104.70122528 450.04156494]
[106.70523834 435.17605591]
[108.70925140 420.31051636]
[110.71326447 405.44500732]
[112.71728516 390.57946777]
[114.72129822 375.71392822]
[115.61411285 360.74053955]
[115.39078522 345.74218750]
[114.60945892 330.76254272]
[113.27122498 315.82235718]
[111.93299103 300.88220215]
[110.59475708 285.94201660]
[109.25652313 271.00183105]
[100.41460419 259.01559448]
[106.88986206 244.58015442]
[105.55162811 229.63996887]
[104.21339417 214.69978333]
[95.37147522 202.71354675]
[101.84673309 188.27812195]
[100.50849915 173.33793640]
[89.65427399 159.54835510]
[97.54062653 142.90843201]
[95.98010254 127.98982239]
[94.19763184 113.09610748]
[85.80446625 101.91368866]
[90.93683624 88.90790558]
[88.93282318 74.04238129]
[86.92881012 59.17685318]
[84.92479706 44.31132507]
[82.69967651 29.47728157]
[80.25395203 14.67800999]
[77.80822754 -0.12126087]
[65.79705048 -14.07880878]
[72.61222076 -30.25040054]
[69.94642639 -45.01161575]
[67.28063202 -59.77283478]
[62.99831009 -45.39709854]
[55.04305267 -32.68042374]
[43.98915482 -22.54083061]
[30.63460732 -15.71030807]
[15.94348335 -12.68195820]
[0.97635096 -13.67440033]
[-13.18630123 -18.61598778]
[-25.52205849 -27.14998436]
[-35.14039230 -38.66031265]
[-41.34694672 -52.31603241]
[-43.69366455 -67.13132477]
[-42.01113510 -82.03666687]
[-36.42082214 -95.95601654]
[-27.32629204 -107.88453674]
[-15.38409138 -116.96109009]
[-1.45633459 -122.53043365]
[13.45151997 -124.19051361]
[28.26326180 -121.82148743]
[41.90961838 -115.59437561]
[53.40544891 -105.95871735]
[61.92086029 -93.61012268]
[66.84133911 -79.43890381]
[68.84535217 -94.30442810]
[70.84937286 -109.16996002]
[72.85338593 -124.03548431]
[74.74667358 -138.91552734]
[76.52914429 -153.80923462]
[77.75611877 -168.75897217]
[78.42590332 -183.74401855]
[79.09568787 -198.72904968]
[71.98231506 -212.86094666]
[80.28019714 -225.23004150]
[72.16804504 -235.25778198]
[73.03440857 -247.72506714]
[81.87074280 -255.98617554]
[82.76355743 -270.95956421]
[83.65637207 -285.93298340]
[84.54918671 -300.90640259]
[70.62898254 -306.90670776]
[59.60262680 -317.30838013]
[52.80160141 -330.85540771]
[51.04716492 -345.91189575]
[54.55117416 -360.65969849]
[62.89050674 -373.31796265]
[75.05814362 -382.35812378]
[89.58478546 -386.68853760]
[104.71626282 -385.78628540]
[118.62538910 -379.76034546]
[129.63256836 -369.33834839]
[136.40861511 -355.77880859]
[138.13529968 -340.71911621]
[134.60411072 -325.97778320]
[126.24147034 -313.33493042]
[114.05718994 -304.31719971]
[99.52259827 -300.01358032]
[98.62978363 -285.04016113]
[97.73696136 -270.06677246]
[96.84414673 -255.09335327]
[105.53272247 -239.84620667]
[95.26523590 -224.56025696]
[102.42652130 -211.50018311]
[94.08072662 -198.05926514]
[93.41094208 -183.07423401]
[92.74115753 -168.08918762]
[105.40351868 -176.13061523]
[119.63443756 -171.38917542]
[124.94338989 -157.36010742]
[117.41683197 -144.38510132]
[102.60305023 -142.02885437]
[91.42285919 -152.02677917]
[89.64039612 -137.13305664]
[91.96678162 -130.11808777]
[87.71891022 -122.03147125]
[85.71489716 -107.16594696]
[83.71088409 -92.30041504]
[81.70687103 -77.43489075]
[82.04184723 -62.43862915]
[84.70764160 -47.67741394]
[87.37343597 -32.91619492]
[97.12883759 -25.76365852]
[99.47055817 -13.48766327]
[92.60749817 -2.56698823]
[95.05322266 12.23228264]
[97.49894714 27.03155327]
[100.79085541 30.49167252]
[101.94407654 36.05648041]
[99.79032135 42.30731201]
[101.79433441 57.17284012]
[103.79835510 72.03836823]
[105.80236816 86.90389252]
[114.19553375 98.08631134]
[109.06316376 111.09209442]
[112.79528809 116.54944611]
[113.15682983 122.22098541]
[110.89870453 126.42929840]
[112.45922852 141.34790039]
[121.96915436 150.06134033]
[122.96179199 162.51921082]
[115.44868469 171.99971008]
[116.78691864 186.93989563]
[125.72455597 199.99473572]
[119.15357971 213.36155701]
[120.49181366 228.30174255]
[121.83004761 243.24192810]
[130.76768494 256.29678345]
[124.19670868 269.66357422]
[125.53494263 284.60375977]
[126.87317657 299.54394531]
[128.21141052 314.48413086]
[129.54965210 329.42431641]
[141.02415466 319.76327515]
[155.76095581 322.56094360]
[162.89660645 335.75497437]
[157.17100525 349.61923218]
[142.80482483 353.93347168]
[130.38911438 345.51885986]
[130.61244202 360.51721191]
[139.28050232 348.27526855]
[152.86662292 341.91781616]
[167.81942749 343.10665894]
[180.23031616 351.53103638]
[186.85507202 364.98883057]
[185.96203613 379.96221924]
[177.78462219 392.53720093]
[164.46040344 399.42666626]
[149.47227478 398.82977295]
[136.73812866 390.90252686]
[129.58682251 377.71795654]
[127.58280945 392.58346558]
[125.57879639 407.44900513]
[123.57478333 422.31454468]
[121.57077026 437.18005371]
[119.56675720 452.04559326]
[117.56274414 466.91113281]
[115.55873108 481.77664185]
[129.95860291 486.08825684]
[143.50666809 492.59954834]
[155.86926270 501.15011597]
[166.74195862 511.52947998]
[175.85700989 523.48199463]
[182.98994446 536.71331787]
[187.96511841 550.89758301]
[190.66000366 565.68554688]
[191.00822449 580.71307373]
[189.00123596 595.60998535]
[184.68843079 610.00952148]
[178.17604065 623.55700684]
[169.62443542 635.91888428]
[159.24418640 646.79077148]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 196]
[25 195]
[26 194]
[27 193]
[28 192]
[29 191]
[30 190]
[31 189]
[32 178]
[33 177]
[34 171]
[35 170]
[36 169]
[37 168]
[38 167]
[40 165]
[41 164]
[42 163]
[44 161]
[45 160]
[47 157]
[48 156]
[49 153]
[51 151]
[52 150]
[53 149]
[54 148]
[55 145]
[56 144]
[57 143]
[59 140]
[60 139]
[61 138]
[83 137]
[84 136]
[85 135]
[86 134]
[87 132]
[88 131]
[89 125]
[90 124]
[91 123]
[93 121]
[96 119]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
