%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[40.86130524 761.14062500]
[27.73183823 753.76287842]
[16.49562836 743.73480225]
[7.67821693 731.52551270]
[1.69200814 717.70599365]
[-1.18301225 702.92260742]
[-0.81237388 687.86682129]
[2.78658772 673.24279785]
[9.44554234 659.73455811]
[18.85303879 647.97393799]
[30.56907272 638.51092529]
[44.04566193 631.78814697]
[58.65248108 628.12005615]
[58.20587540 613.12670898]
[57.75926971 598.13336182]
[57.31266403 583.14001465]
[44.13288116 576.20031738]
[36.14313126 563.51098633]
[35.57392120 548.42645264]
[42.67818451 534.99420166]
[55.63650513 526.86834717]
[55.18989944 511.87500000]
[54.74329376 496.88165283]
[54.29668808 481.88830566]
[53.85008240 466.89495850]
[53.40347672 451.90161133]
[46.79688263 465.36834717]
[36.39739990 476.17810059]
[23.19623947 483.30053711]
[8.45165157 486.05682373]
[-6.43100309 484.18426514]
[-20.03320503 477.86126709]
[-31.05847931 467.69055176]
[-38.45596695 454.64154053]
[-41.52058792 439.95791626]
[-39.96023941 425.03930664]
[-33.92364502 411.30761719]
[-23.98617363 400.07165527]
[-11.09500313 392.40237427]
[3.52116179 389.03079224]
[18.46920204 390.27819824]
[32.32436752 396.02575684]
[43.76607132 405.72561646]
[51.70375824 418.45327759]
[55.38097382 432.99673462]
[58.92064667 418.42034912]
[62.46031570 403.84396362]
[56.61977768 387.29541016]
[69.44042969 374.07751465]
[72.76268768 359.45007324]
[76.08494568 344.82260132]
[79.40720367 330.19512939]
[82.72946167 315.56768799]
[84.95458221 300.73364258]
[86.07022858 285.77517700]
[87.18588257 270.81674194]
[80.41661835 257.54922485]
[89.15889740 244.36276245]
[90.27455139 229.40431213]
[91.39019775 214.44586182]
[81.50630188 203.36235046]
[82.42463684 188.17645264]
[94.11706543 177.88446045]
[95.23271179 162.92601013]
[95.34437561 147.92642212]
[94.45156097 132.95301819]
[93.55874634 117.97961426]
[82.79138947 108.28372192]
[81.92896271 93.81989288]
[91.46784973 82.91320038]
[90.57503510 67.93979645]
[89.68222046 52.96639252]
[88.78939819 37.99298477]
[87.89658356 23.01957893]
[79.35160065 9.70440674]
[86.31764221 -3.46083307]
[82.68299103 -11.84099674]
[85.52468872 -18.66350174]
[84.85490417 -33.64854050]
[84.18511963 -48.63357925]
[80.67563629 -57.06692886]
[83.61859894 -63.84636688]
[83.17198944 -78.83971405]
[82.72538757 -93.83306885]
[82.27877808 -108.82641602]
[74.13402557 -122.39010620]
[81.48896027 -135.34210205]
[73.34420776 -148.90579224]
[80.69913483 -161.85778809]
[80.25253296 -176.85113525]
[79.58274841 -191.83616638]
[78.57848358 -206.80252075]
[77.46283722 -221.76097107]
[76.34719086 -236.71942139]
[75.23153687 -251.67787170]
[60.70159912 -256.06481934]
[48.73998260 -265.40740967]
[40.96440506 -278.44216919]
[38.42644882 -293.40625000]
[41.46934891 -308.27584839]
[49.68157959 -321.04000854]
[61.95250320 -329.97247314]
[76.62258148 -333.86517334]
[91.70780182 -332.19171143]
[105.16801453 -325.17834473]
[115.18283844 -313.77362061]
[120.39785004 -299.51992798]
[120.10775757 -284.34494019]
[114.35179901 -270.30096436]
[103.90841675 -259.28732300]
[90.18999481 -252.79353333]
[91.30564117 -237.83506775]
[92.42128754 -222.87661743]
[93.53694153 -207.91816711]
[97.16921997 -201.48168945]
[94.55615234 -192.72898865]
[97.47021484 -188.94517517]
[98.03825378 -183.29058838]
[95.24588013 -177.29774475]
[95.69248962 -162.30439758]
[103.80529785 -149.81312561]
[96.48230743 -135.78871155]
[104.59511566 -123.29744720]
[97.27212524 -109.27302551]
[97.71873474 -94.27967072]
[98.16533661 -79.28632355]
[98.61194611 -64.29297638]
[99.17015839 -49.30336380]
[99.83994293 -34.31832504]
[100.50972748 -19.33328629]
[101.29104614 -4.35364914]
[109.77217102 7.89052582]
[102.86998749 22.12676430]
[103.76280975 37.10017014]
[104.65562439 52.07357407]
[105.54843903 67.04698181]
[106.44125366 82.02038574]
[117.20861053 91.71627808]
[118.07103729 106.18010712]
[108.53215027 117.08679962]
[109.42496490 132.06019592]
[110.31777954 147.03361511]
[118.91789246 134.74385071]
[132.75637817 128.95626831]
[147.54524231 131.46417236]
[158.70198059 141.49049377]
[162.76956177 155.92846680]
[158.48760986 170.30430603]
[147.18292236 180.16351318]
[132.35838318 182.45111084]
[118.60754395 176.45825195]
[110.19116211 164.04165649]
[109.07551575 179.00010681]
[119.11184692 190.91270447]
[117.76733398 206.06680298]
[106.34864807 215.56150818]
[105.23300171 230.51995850]
[104.11735535 245.47840881]
[110.80681610 259.81582642]
[102.14433289 271.93237305]
[101.02868652 286.89083862]
[99.91303253 301.84927368]
[109.63869476 290.42950439]
[123.73782349 285.30947876]
[138.52494812 287.82760620]
[150.13475037 297.32562256]
[155.53245544 311.32080078]
[153.30711365 326.15481567]
[144.04042053 337.95007324]
[130.15467834 343.62338257]
[115.27957916 341.69168091]
[103.30343628 332.65994263]
[97.35692596 318.88995361]
[94.03466797 333.51739502]
[90.71240997 348.14486694]
[87.39014435 362.77230835]
[84.06788635 377.39978027]
[90.26877594 388.70959473]
[87.20052338 400.82443237]
[77.03668976 407.38363647]
[73.49701691 421.96002197]
[69.95734406 436.53640747]
[68.39682770 451.45498657]
[68.84342957 466.44836426]
[69.29003906 481.44171143]
[69.73664093 496.43505859]
[70.18325043 511.42840576]
[70.62985229 526.42175293]
[84.04885864 533.76190186]
[91.94002533 546.74749756]
[92.26967621 561.83917236]
[85.04937744 574.98156738]
[72.30601501 582.69342041]
[72.75261688 597.68676758]
[73.19922638 612.68011475]
[73.64583588 627.67346191]
[88.44508362 630.46563721]
[102.29792786 636.37432861]
[114.55643463 645.12322998]
[124.64726257 656.30310059]
[132.09843445 669.39099121]
[136.56144714 683.77490234]
[137.82757568 698.78192139]
[135.83757019 713.71020508]
[130.68452454 727.86151123]
[122.60945892 740.57403564]
[111.99005127 751.25305176]
[99.32299042 759.39923096]
[85.20074463 764.63146973]
[70.28382874 766.70501709]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 196]
[14 195]
[15 194]
[16 193]
[21 188]
[22 187]
[23 186]
[24 185]
[25 184]
[26 183]
[45 182]
[46 181]
[47 180]
[49 177]
[50 176]
[51 175]
[52 174]
[53 173]
[54 162]
[55 161]
[56 160]
[58 158]
[59 157]
[60 156]
[63 153]
[64 152]
[65 142]
[66 141]
[67 140]
[70 137]
[71 136]
[72 135]
[73 134]
[74 133]
[76 131]
[78 130]
[79 129]
[80 128]
[82 127]
[83 126]
[84 125]
[85 124]
[87 122]
[89 120]
[90 119]
[91 116]
[92 114]
[93 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
