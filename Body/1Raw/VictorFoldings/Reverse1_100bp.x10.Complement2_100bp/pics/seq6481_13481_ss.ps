%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[107.75331116 566.00598145]
[112.05215454 551.58020020]
[119.16721344 538.31512451]
[128.80711365 526.75415039]
[140.57711792 517.37054443]
[153.99525452 510.54861450]
[150.02316284 496.08407593]
[146.05105591 481.61956787]
[135.21971130 471.39553833]
[139.02642822 456.03912354]
[135.05432129 441.57458496]
[131.08222961 427.11007690]
[127.11013794 412.64553833]
[122.92247009 427.04913330]
[113.30073547 438.55661011]
[99.86637878 445.22879028]
[84.88330841 445.94128418]
[70.87644196 440.57397461]
[60.20618057 430.03143311]
[54.67065430 416.09020996]
[55.20269394 401.09963989]
[61.71264267 387.58590698]
[73.10345459 377.82635498]
[87.45558929 373.46557617]
[102.35044861 375.23846436]
[115.27799225 382.84625244]
[124.06037140 395.00842285]
[113.41265869 381.05877686]
[121.54587555 364.53811646]
[120.20764160 349.59793091]
[118.86940765 334.65774536]
[117.53117371 319.71755981]
[116.08175659 304.78775024]
[114.52123260 289.86914062]
[112.96070862 274.95053101]
[111.06742096 260.07049561]
[101.52774811 248.63180542]
[107.13230896 233.83654785]
[104.90718842 219.00250244]
[102.68207550 204.16845703]
[100.45695496 189.33442688]
[98.23184204 174.50038147]
[96.00672150 159.66633606]
[93.78160858 144.83229065]
[86.82679749 158.12252808]
[74.21183014 166.23811340]
[59.23423767 167.05764771]
[45.80911636 160.36689758]
[37.44576645 147.91481018]
[36.33034134 132.95634460]
[42.75441742 119.40159607]
[55.03875351 110.79374695]
[69.97225189 109.38286591]
[83.65133667 115.53775787]
[92.50000000 127.64871979]
[79.70539856 120.21956635]
[72.32369232 107.39753723]
[72.32369232 92.60246277]
[79.70539856 79.78043365]
[92.50000000 72.35128021]
[92.50000000 57.35128403]
[92.50000000 42.35128403]
[92.50000000 27.35128212]
[92.50000000 12.35128212]
[92.50000000 -2.64871764]
[83.18363953 9.10736084]
[69.02519989 14.06101131]
[54.41183472 10.67729187]
[43.87165070 0.00468507]
[40.67063904 -14.64978600]
[45.80067062 -28.74527550]
[57.67214584 -37.91413879]
[72.60655975 -39.31530762]
[85.97632599 -32.51461411]
[93.63873291 -19.61907578]
[95.64274597 -34.48460388]
[89.81852722 -49.19477081]
[99.18683624 -60.77423477]
[101.19084930 -75.63976288]
[93.80342865 -92.50711823]
[105.06340790 -105.96742249]
[106.84587097 -120.86113739]
[108.62834167 -135.75485229]
[110.41080475 -150.64857483]
[112.08234406 -165.55514526]
[113.64286804 -180.47375488]
[115.20339203 -195.39234924]
[116.31903839 -210.35081482]
[116.65401459 -225.34706116]
[116.65401459 -240.34706116]
[116.65401459 -255.34706116]
[116.65401459 -270.34707642]
[113.52461243 -278.92871094]
[116.76734924 -285.56997681]
[116.99067688 -300.56832886]
[117.21400452 -315.56665039]
[102.83268738 -320.22167969]
[90.46334076 -328.91021729]
[81.20584106 -340.85968018]
[75.88334656 -355.00756836]
[74.96914673 -370.09582520]
[78.54451752 -384.78283691]
[86.29154205 -397.76263428]
[97.52136993 -407.88104248]
[111.23544312 -414.23837280]
[126.21431732 -416.26931763]
[141.12608337 -413.79330444]
[154.64479065 -407.03045654]
[165.56837463 -396.58218384]
[172.92550659 -383.37747192]
[176.06201172 -368.59054565]
[174.69897461 -353.53619385]
[168.95761108 -339.55303955]
[159.34843445 -327.88449097]
[146.72587585 -319.56808472]
[132.21234131 -315.34332275]
[131.98901367 -300.34500122]
[131.76568604 -285.34664917]
[131.65402222 -270.34707642]
[131.65402222 -255.34706116]
[131.65402222 -240.34706116]
[131.65402222 -225.34706116]
[133.87528992 -222.60876465]
[134.88058472 -218.65852356]
[134.11474609 -214.07957458]
[131.30407715 -209.68103027]
[133.09407043 -207.52368164]
[134.13735962 -204.52732849]
[134.11009216 -200.97280884]
[132.79598999 -197.25289917]
[130.12199402 -193.83183289]
[128.56147766 -178.91322327]
[127.00095367 -163.99462891]
[129.43151855 -157.01507568]
[125.30452728 -148.86610413]
[123.52205658 -133.97238159]
[121.73959351 -119.07867432]
[119.95712280 -104.18495178]
[127.18463135 -94.48497009]
[125.82152557 -82.06217957]
[116.05638123 -73.63574982]
[114.05236816 -58.77022171]
[120.01992798 -45.12333679]
[110.50827026 -32.48059082]
[108.50425720 -17.61506271]
[107.50000000 -2.64871764]
[107.50000000 12.35128212]
[107.50000000 27.35128212]
[107.50000000 42.35128403]
[107.50000000 57.35128403]
[107.50000000 72.35128021]
[120.29460144 79.78043365]
[127.67630768 92.60246277]
[127.67630768 107.39753723]
[120.29460144 120.21956635]
[107.50000000 127.64871979]
[108.61564636 142.60717773]
[110.84076691 157.44120789]
[113.06587982 172.27525330]
[115.29100037 187.10929871]
[117.51612091 201.94334412]
[119.74123383 216.77738953]
[121.96635437 231.61143494]
[131.66517639 244.11116028]
[125.90146637 257.84539795]
[129.15447998 261.92764282]
[130.39253235 266.40209961]
[129.80364990 270.43548584]
[127.87931824 273.39001465]
[129.43983459 288.30862427]
[131.00036621 303.22723389]
[135.00558472 311.43673706]
[132.47135925 318.37933350]
[133.80960083 333.31951904]
[135.14782715 348.25970459]
[136.48606873 363.19989014]
[145.86520386 372.05392456]
[146.67225647 384.52520752]
[139.01882935 393.89279175]
[141.57466125 408.67343140]
[145.54675293 423.13796997]
[149.51885986 437.60247803]
[153.49095154 452.06701660]
[164.60641479 463.32565308]
[160.51557922 477.64746094]
[164.48768616 492.11199951]
[168.45977783 506.57650757]
[183.48008728 505.58895874]
[198.39167786 507.64553833]
[212.58390808 512.66204834]
[225.47564697 520.43298340]
[236.53897095 530.64025879]
[245.32084656 542.86578369]
[251.46166992 556.60894775]
[254.70994568 571.30700684]
[254.93269348 586.35809326]
[252.12078857 601.14587402]
[246.38935852 615.06475830]
[237.97311401 627.54486084]
[227.21669006 638.07501221]
[214.56056213 646.22406006]
[200.52297974 651.65832520]
[185.67878723 654.15527344]
[170.63583374 653.61260986]
[156.01011658 650.05267334]
[142.40055847 643.62109375]
[130.36447144 634.58135986]
[120.39469910 623.30352783]
[112.89952087 610.24951172]
[108.18584442 595.95385742]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 187]
[7 186]
[8 185]
[10 183]
[11 182]
[12 181]
[13 180]
[27 179]
[29 176]
[30 175]
[31 174]
[32 173]
[33 171]
[34 170]
[35 169]
[36 165]
[38 163]
[39 162]
[40 161]
[41 160]
[42 159]
[43 158]
[44 157]
[55 156]
[60 151]
[61 150]
[62 149]
[63 148]
[64 147]
[65 146]
[75 145]
[76 144]
[78 142]
[79 141]
[81 138]
[82 137]
[83 136]
[84 135]
[85 133]
[86 132]
[87 131]
[88 126]
[89 122]
[90 121]
[91 120]
[92 119]
[94 118]
[95 117]
[96 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
