%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[46.75623703 798.97387695]
[32.12804031 802.37579346]
[17.19643402 803.98968506]
[2.17916894 803.79187012]
[-12.70475960 801.78540039]
[-27.23830223 797.99945068]
[-41.20951462 792.48919678]
[-54.41465378 785.33508301]
[-66.66115570 776.64135742]
[-77.77042389 766.53485107]
[-87.58045959 755.16296387]
[-95.94819641 742.69140625]
[-102.75160980 729.30224609]
[-107.89148712 715.19055176]
[-111.29287720 700.56225586]
[-112.90617371 685.63055420]
[-112.70784760 670.61334229]
[-110.70079803 655.72943115]
[-106.91428375 641.19604492]
[-101.40354156 627.22503662]
[-94.24890900 614.02020264]
[-85.55474091 601.77398682]
[-75.44782257 590.66510010]
[-64.07553101 580.85552979]
[-51.60371780 572.48822021]
[-38.21425629 565.68530273]
[-24.10240173 560.54595947]
[-9.47394753 557.14514160]
[5.45777798 555.53240967]
[20.47502899 555.73126221]
[22.47904205 540.86572266]
[24.48305511 526.00024414]
[26.48706818 511.13470459]
[28.49108315 496.26916504]
[30.49509621 481.40362549]
[32.49911118 466.53811646]
[26.53154755 452.89123535]
[36.04320145 440.24847412]
[38.04721451 425.38293457]
[40.05122757 410.51742554]
[42.05524063 395.65188599]
[44.05925369 380.78637695]
[30.79594040 373.90377808]
[20.66866684 362.87802124]
[14.91394806 349.02676392]
[14.24416351 334.01434326]
[18.75943565 319.65179443]
[27.93321228 307.67840576]
[40.67359543 299.55102539]
[55.45328903 296.26681519]
[57.45730209 281.40127563]
[59.46131897 266.53576660]
[61.46533203 251.67022705]
[63.46934509 236.80468750]
[65.47335815 221.93916321]
[52.91923904 230.14855957]
[38.20959854 227.21147156]
[29.77078629 214.81040955]
[32.43693542 200.04925537]
[44.68075562 191.38388062]
[59.48843002 193.77818298]
[68.37722015 205.85971069]
[71.69947815 191.23223877]
[75.02174377 176.60478210]
[78.34400177 161.97732544]
[81.66625977 147.34986877]
[84.98851776 132.72239685]
[88.31077576 118.09494019]
[91.63304138 103.46748352]
[90.06100464 99.94596863]
[90.04882812 95.74861908]
[91.86354828 91.58763123]
[95.44406128 88.26802826]
[99.41616058 73.80350494]
[103.38825226 59.33897781]
[107.36035156 44.87445450]
[111.33245087 30.40992928]
[115.30454254 15.94540596]
[119.27664185 1.48088169]
[123.24873352 -12.98364258]
[124.58696747 -27.92382812]
[123.24873352 -42.86401367]
[121.91049957 -57.80419540]
[120.57226562 -72.74438477]
[119.23403168 -87.68457031]
[117.89579773 -102.62475586]
[114.89152527 -106.89340973]
[113.92199707 -111.43359375]
[114.74990845 -115.42478943]
[116.84668732 -118.25954437]
[116.17690277 -133.24458313]
[115.50711823 -148.22962952]
[105.23963165 -163.51557922]
[113.92820740 -178.76272583]
[113.03539276 -193.73612976]
[112.14257050 -208.70953369]
[97.76599121 -213.64738464]
[86.37670135 -223.71478271]
[79.71149445 -237.37654114]
[78.78675842 -252.54931641]
[83.74351501 -266.91940308]
[93.82588959 -278.29544067]
[107.49639130 -284.94265747]
[122.67037964 -285.84744263]
[137.03392029 -280.87179565]
[148.39668274 -270.77444458]
[155.02592468 -257.09521484]
[155.91073608 -241.92005920]
[150.91619873 -227.56306458]
[140.80392456 -216.21359253]
[127.11598206 -209.60235596]
[128.00878906 -194.62895203]
[128.90161133 -179.65554810]
[137.73794556 -171.39443970]
[138.60430908 -158.92715454]
[130.49215698 -148.89941406]
[131.16194153 -133.91436768]
[131.83172607 -118.92932892]
[132.83598328 -103.96298981]
[134.17422485 -89.02280426]
[135.51245117 -74.08261871]
[136.85069275 -59.14243317]
[138.18891907 -44.20224762]
[139.52716064 -29.26206207]
[144.95697021 -43.24480438]
[153.53491211 -55.55003738]
[164.77589417 -65.48183441]
[178.04414368 -72.47850800]
[192.58929443 -76.14436340]
[207.58876038 -76.27207184]
[222.19421387 -72.85441589]
[235.57968140 -66.08468628]
[246.98814392 -56.34573364]
[255.77436829 -44.18834686]
[261.44149780 -30.30008507]
[263.66897583 -15.46639729]
[262.33087158 -0.52620095]
[257.50283813 13.67556381]
[249.45794678 26.33571815]
[238.65113831 36.73826981]
[225.69361877 44.29490280]
[211.31819153 48.57825470]
[196.33786011 49.34608078]
[181.59982300 46.55495453]
[167.93760681 40.36272812]
[156.12385559 31.11960602]
[146.82670593 19.34832764]
[140.57196045 5.71461582]
[137.71325684 -9.01154613]
[133.74116516 5.45297813]
[129.76907349 19.91750145]
[125.79697418 34.38202667]
[121.82487488 48.84654999]
[117.85277557 63.31107330]
[113.88068390 77.77559662]
[109.90858459 92.24011993]
[106.26049805 106.78974152]
[102.93824005 121.41720581]
[99.61598206 136.04466248]
[96.29371643 150.67211914]
[92.97145844 165.29957581]
[89.64920044 179.92704773]
[86.32694244 194.55450439]
[83.00468445 209.18196106]
[80.33889008 223.94317627]
[78.33486938 238.80871582]
[76.33085632 253.67424011]
[74.32684326 268.53976440]
[72.32283020 283.40530396]
[70.31881714 298.27081299]
[83.70121765 305.35153198]
[93.83460999 316.56253052]
[99.51026154 330.53778076]
[100.06105804 345.58325195]
[95.43979645 359.88241577]
[86.22260284 371.71533203]
[73.53717041 379.66571045]
[58.92478180 382.79037476]
[56.92076874 397.65591431]
[54.91675568 412.52142334]
[52.91274261 427.38696289]
[50.90872955 442.25250244]
[56.73295212 456.96264648]
[47.36463928 468.54211426]
[45.36062622 483.40765381]
[43.35660934 498.27316284]
[41.35259628 513.13873291]
[39.34858322 528.00421143]
[37.34457016 542.86975098]
[35.34055710 557.73529053]
[49.87438202 561.52014160]
[63.84600449 567.02935791]
[77.05168152 574.18249512]
[89.29882812 582.87530518]
[100.40885925 592.98095703]
[110.21974182 604.35217285]
[118.58840942 616.82305908]
[125.39282227 630.21173096]
[130.53375244 644.32299805]
[133.93624878 658.95104980]
[135.55065918 673.88262939]
[135.35345459 688.89990234]
[133.34751892 703.78387451]
[129.56208801 718.31756592]
[124.05239105 732.28900146]
[116.89875031 745.49438477]
[108.20549774 757.74121094]
[98.09940338 768.85089111]
[86.72785187 778.66131592]
[74.25666046 787.02954102]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 190]
[31 189]
[32 188]
[33 187]
[34 186]
[35 185]
[36 184]
[38 182]
[39 181]
[40 180]
[41 179]
[42 178]
[50 170]
[51 169]
[52 168]
[53 167]
[54 166]
[55 165]
[62 164]
[63 163]
[64 162]
[65 161]
[66 160]
[67 159]
[68 158]
[69 157]
[73 156]
[74 155]
[75 154]
[76 153]
[77 152]
[78 151]
[79 150]
[80 149]
[81 124]
[82 123]
[83 122]
[84 121]
[85 120]
[86 119]
[90 118]
[91 117]
[92 116]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
