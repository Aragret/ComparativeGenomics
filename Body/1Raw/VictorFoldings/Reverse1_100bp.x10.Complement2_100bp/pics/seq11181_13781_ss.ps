%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[265.25204468 572.21575928]
[259.17819214 558.50048828]
[253.10437012 544.78521729]
[247.03053284 531.06994629]
[240.85476685 517.40026855]
[234.57740784 503.77694702]
[228.30004883 490.15362549]
[213.44560242 480.80953979]
[215.28643799 462.48760986]
[208.80694580 448.95925903]
[202.32745361 435.43090820]
[195.84794617 421.90255737]
[189.36845398 408.37420654]
[182.88896179 394.84588623]
[176.30892944 381.36614990]
[169.62873840 367.93576050]
[162.94854736 354.50540161]
[156.26835632 341.07501221]
[144.90419006 336.92984009]
[139.22889709 325.79544067]
[142.77084351 313.39312744]
[136.29133606 299.86477661]
[135.70358276 314.85327148]
[130.57189941 328.94815063]
[121.38545227 340.80603027]
[109.01980591 349.29666138]
[94.65357971 353.61077881]
[79.65607452 353.33718872]
[65.45675659 348.50195312]
[53.40901184 339.56597900]
[44.66115952 327.38092041]
[40.04698181 313.10824585]
[40.00627899 298.10830688]
[44.54292679 283.81079102]
[53.22452545 271.57846069]
[65.22359467 262.57723999]
[79.39646149 257.66500854]
[94.39225769 257.31002808]
[108.78168488 261.54611206]
[121.19322968 269.96951294]
[130.44445801 281.77835083]
[127.77866364 267.01712036]
[125.11286926 252.25590515]
[122.11809540 237.55790710]
[118.79583740 222.93045044]
[115.47357178 208.30299377]
[105.40853119 201.59318542]
[102.52098846 189.43399048]
[108.88957214 178.21775818]
[105.78546143 163.54246521]
[102.68135071 148.86715698]
[92.47775269 138.01655579]
[97.19174957 122.91394043]
[94.08763885 108.23863983]
[89.47113037 101.63103485]
[91.04827118 93.32180023]
[80.79888916 85.49153900]
[78.69878387 73.17190552]
[85.33612061 63.05892944]
[82.67032623 48.29771423]
[72.60363007 36.09229660]
[77.95587921 22.19255638]
[75.29007721 7.43133879]
[72.62428284 -7.32987881]
[69.95848846 -22.09109497]
[67.18287659 -36.83205795]
[64.29760742 -51.55194855]
[61.41233444 -66.27184296]
[56.69067001 -74.09128571]
[58.59539795 -81.23228455]
[55.92959976 -95.99349976]
[53.26380539 -110.75471497]
[50.26903152 -125.45272064]
[46.94676971 -140.08018494]
[43.62451172 -154.70764160]
[40.30225372 -169.33509827]
[29.70059967 -181.07884216]
[34.42684937 -195.20370483]
[31.10458946 -209.83117676]
[26.75292206 -195.47627258]
[17.56703377 -183.61796570]
[4.75548792 -175.81640625]
[-9.99613667 -173.09803772]
[-24.74700928 -175.82048035]
[-37.55640030 -183.62557983]
[-46.73901367 -195.48641968]
[-51.08671951 -209.84251404]
[-50.02750015 -224.80506897]
[-43.70071411 -238.40550232]
[-32.93876266 -248.85444641]
[-19.15756226 -254.77716064]
[-4.17026711 -255.39440918]
[10.05128574 -250.62496948]
[21.63600540 -241.09637451]
[29.06050873 -228.05999756]
[29.06050873 -243.05999756]
[29.06050873 -258.05999756]
[21.32320786 -271.86016846]
[29.06050873 -284.58743286]
[15.28664017 -291.16342163]
[5.73671341 -303.06979370]
[2.30687404 -317.94253540]
[5.67811871 -332.82870483]
[15.18108368 -344.77258301]
[28.92894936 -351.40274048]
[44.19206619 -351.40274048]
[57.93993378 -344.77258301]
[67.44290161 -332.82870483]
[70.81414032 -317.94253540]
[67.38430786 -303.06979370]
[57.83437729 -291.16342163]
[44.06050873 -284.58743286]
[51.79780960 -271.86016846]
[44.06050873 -258.05999756]
[44.06050873 -243.05999756]
[44.06050873 -228.05999756]
[45.73204803 -213.15342712]
[49.05430984 -198.52597046]
[59.41833115 -187.82847595]
[54.92971420 -172.65736389]
[58.25197220 -158.02990723]
[61.57423019 -143.40243530]
[64.89649200 -128.77497864]
[67.66908264 -126.59665680]
[69.52433014 -122.96717834]
[69.79167938 -118.33233643]
[68.02502441 -113.42050934]
[70.69081879 -98.65929413]
[73.35661316 -83.89807892]
[76.13222504 -69.15711212]
[79.01749420 -54.43722153]
[81.90277100 -39.71733093]
[86.27416992 -33.75808334]
[84.71970367 -24.75689125]
[87.38550568 -9.99567413]
[90.05130005 4.76554298]
[92.71709442 19.52676010]
[102.59310913 30.67635727]
[97.43154144 45.63191986]
[100.09733582 60.39313507]
[112.13852692 73.15937042]
[105.76816559 90.43652344]
[108.76293945 105.13452911]
[111.86705017 119.80982971]
[122.29267883 131.71011353]
[117.35665894 145.76304626]
[120.46076965 160.43835449]
[123.56488037 175.11364746]
[136.18731689 188.52095032]
[130.10102844 204.98072815]
[133.42329407 219.60818481]
[136.74555969 234.23564148]
[140.29319763 238.06466675]
[141.86061096 242.43461609]
[141.57334900 246.50064087]
[139.87408447 249.59011841]
[142.53988647 264.35131836]
[145.20567322 279.11254883]
[149.81968689 293.38528442]
[156.29917908 306.91363525]
[171.72897339 316.96365356]
[169.69873047 334.39480591]
[176.37892151 347.82519531]
[183.05911255 361.25558472]
[189.73930359 374.68594360]
[196.36305237 380.97592163]
[196.41731262 388.36636353]
[202.89680481 401.89471436]
[209.37629700 415.42306519]
[215.85578918 428.95141602]
[222.33529663 442.47976685]
[228.81478882 456.00811768]
[240.69845581 461.02221680]
[245.81672668 472.42340088]
[241.92335510 483.87628174]
[248.20072937 497.49960327]
[254.47808838 511.12292480]
[260.91162109 517.60729980]
[260.74578857 524.99609375]
[266.81964111 538.71136475]
[272.89346313 552.42663574]
[278.96731567 566.14190674]
[293.67492676 562.93713379]
[308.72662354 562.75897217]
[323.50598145 565.61468506]
[337.40786743 571.38726807]
[349.86294556 579.84045410]
[360.36120605 590.62799072]
[368.47274780 603.30822754]
[373.86541748 617.36181641]
[376.31842041 632.21331787]
[375.73123169 647.25463867]
[372.12796021 661.86975098]
[365.65612793 675.46014404]
[356.58078003 687.46942139]
[345.27349854 697.40576172]
[332.19735718 704.86224365]
[317.88778687 709.53356934]
[302.93078613 711.22845459]
[287.93878174 709.87744141]
[273.52575684 705.53588867]
[260.28186035 698.38159180]
[248.74942017 688.70751953]
[239.40072632 676.90979004]
[232.61856079 663.47149658]
[228.68067932 648.94299316]
[227.74832153 633.91912842]
[229.85964966 619.01519775]
[234.92823792 604.84149170]
[242.74652100 591.97839355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 182]
[2 181]
[3 180]
[4 179]
[5 177]
[6 176]
[7 175]
[9 172]
[10 171]
[11 170]
[12 169]
[13 168]
[14 167]
[15 165]
[16 164]
[17 163]
[18 162]
[21 160]
[22 159]
[41 158]
[42 157]
[43 156]
[44 152]
[45 151]
[46 150]
[49 148]
[50 147]
[51 146]
[53 144]
[54 143]
[56 142]
[59 140]
[60 139]
[62 137]
[63 136]
[64 135]
[65 134]
[66 132]
[67 131]
[68 130]
[70 129]
[71 128]
[72 127]
[73 123]
[74 122]
[75 121]
[76 120]
[78 118]
[79 117]
[95 116]
[96 115]
[97 114]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
