%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[193.92138672 526.55023193]
[186.92233276 513.27612305]
[180.87707520 499.54135132]
[175.81571960 485.41436768]
[171.76347351 470.96554565]
[168.74053955 456.26687622]
[166.76196289 441.39160156]
[165.83760071 426.41378784]
[165.97207642 411.40811157]
[167.16470337 396.44927979]
[169.40953064 381.61184692]
[172.69540405 366.96969604]
[177.00593567 352.59582520]
[182.31965637 338.56182861]
[188.61007690 324.93762207]
[195.84588623 311.79104614]
[203.99101257 299.18765259]
[213.00488281 287.19018555]
[222.84259033 275.85842896]
[233.45513916 265.24887085]
[223.62455750 253.91928101]
[213.79397583 242.58969116]
[203.96339417 231.26008606]
[194.13281250 219.93049622]
[184.30223083 208.60090637]
[174.47164917 197.27131653]
[159.64239502 196.47825623]
[149.51139832 185.12846375]
[150.44378662 169.57955933]
[140.61320496 158.24996948]
[130.78262329 146.92037964]
[120.95204163 135.59078979]
[111.12145996 124.26119232]
[101.29087830 112.93160248]
[91.12733459 101.89972687]
[80.63983154 91.17534637]
[70.15232849 80.45096588]
[54.97185898 75.99407196]
[51.60522461 61.48493958]
[34.90559387 64.17165375]
[20.04269600 56.45184708]
[12.78267670 41.54366302]
[15.80863762 25.40919495]
[5.16262913 14.84214783]
[-5.48337984 4.27510023]
[-16.12938881 -6.29194736]
[-27.65514565 3.32529783]
[-40.03083801 11.82098293]
[-53.14770889 19.12044525]
[-66.89048767 25.15953827]
[-81.13838959 29.88518333]
[-95.76620483 33.25585556]
[-110.64538574 35.24193192]
[-125.64516449 35.82595444]
[-140.63372803 35.00279617]
[-155.47933960 32.77968979]
[-170.05154419 29.17616653]
[-184.22227478 24.22390366]
[-197.86698914 17.96641541]
[-210.86578369 10.45870018]
[-223.10441589 1.76673377]
[-234.47534180 -8.03309536]
[-244.87861633 -18.85466576]
[-254.22280884 -30.60287285]
[-262.42581177 -43.17447281]
[-269.41555786 -56.45898056]
[-275.13058472 -70.33965302]
[-279.52066040 -84.69449615]
[-282.54724121 -99.39736176]
[-284.18368530 -114.31904602]
[-284.41564941 -129.32839966]
[-283.24108887 -144.29351807]
[-280.67031860 -159.08288574]
[-276.72592163 -173.56654358]
[-271.44256592 -187.61718750]
[-264.86669922 -201.11135864]
[-257.05609131 -213.93043518]
[-248.07939148 -225.96179199]
[-238.01548767 -237.09967041]
[-226.95283508 -247.24620056]
[-214.98864746 -256.31222534]
[-202.22805786 -264.21804810]
[-188.78323364 -270.89419556]
[-174.77230835 -276.28198242]
[-160.31842041 -280.33410645]
[-145.54858398 -283.01489258]
[-130.59262085 -284.30084229]
[-115.58196259 -284.18063354]
[-100.64851379 -282.65530396]
[-85.92352295 -279.73825073]
[-71.53639221 -275.45516968]
[-57.61356354 -269.84362793]
[-44.27738953 -262.95300293]
[-31.64507103 -254.84379578]
[-19.82762527 -245.58731079]
[-8.92890930 -235.26489258]
[0.95529908 -223.96723938]
[9.73813438 -211.79365540]
[17.34241104 -198.85110474]
[23.70130348 -185.25335693]
[28.75892258 -171.11988831]
[32.47082520 -156.57490540]
[34.80438995 -141.74626160]
[35.73910904 -126.76424408]
[35.26676559 -111.76052856]
[33.39151382 -96.86698151]
[30.12983131 -82.21446991]
[25.51038361 -67.93178558]
[19.57376671 -54.14443588]
[12.37215424 -40.97358704]
[3.96883512 -28.53498840]
[-5.56234074 -16.93795586]
[5.08366776 -6.37090874]
[15.72967625 4.19613934]
[26.37568474 14.76318741]
[39.29898071 11.41198540]
[52.29485703 14.91217232]
[61.94094086 24.45275307]
[65.64244843 37.61775589]
[62.32960510 50.99743652]
[76.75994110 54.68724823]
[80.87670898 69.96346283]
[91.36421204 80.68784332]
[101.85171509 91.41222382]
[104.88554382 91.70444489]
[107.88008881 93.10701752]
[110.42390442 95.60750580]
[112.11588287 99.04166412]
[112.62047577 103.10102081]
[122.45105743 114.43061066]
[132.28163147 125.76020813]
[142.11221313 137.08979797]
[151.94279480 148.41938782]
[161.77337646 159.74899292]
[177.29844666 161.01791382]
[187.10665894 172.64778137]
[185.80123901 187.44073486]
[195.63182068 198.77032471]
[205.46240234 210.09991455]
[215.29298401 221.42950439]
[225.12356567 232.75910950]
[234.95414734 244.08869934]
[244.78472900 255.41828918]
[256.78445435 246.40742493]
[269.38989258 238.26544189]
[282.53826904 231.03294373]
[296.16406250 224.74591064]
[310.19940186 219.43571472]
[324.57434082 215.12878418]
[339.21728516 211.84657288]
[354.05529785 209.60545349]
[369.01443481 208.41656494]
[384.02014160 208.28585815]
[398.99771118 209.21395874]
[413.87249756 211.19625854]
[428.57040405 214.22288513]
[443.01821899 218.27873230]
[457.14392090 223.34362793]
[470.87719727 229.39233398]
[484.14956665 236.39468384]
[496.89492798 244.31582642]
[509.04980469 253.11628723]
[520.55358887 262.75222778]
[531.34906006 273.17562866]
[541.38232422 284.33456421]
[550.60351562 296.17346191]
[558.96655273 308.63330078]
[566.42993164 321.65203857]
[572.95629883 335.16479492]
[578.51330566 349.10427856]
[583.07318115 363.40100098]
[586.61315918 377.98379517]
[589.11572266 392.77993774]
[590.56829834 407.71575928]
[590.96374512 422.71685791]
[590.29998779 437.70846558]
[588.58038330 452.61590576]
[585.81353760 467.36492920]
[582.01318359 481.88201904]
[577.19824219 496.09487915]
[571.39276123 509.93270874]
[564.62567139 523.32653809]
[556.93060303 536.20965576]
[548.34594727 548.51788330]
[538.91442871 560.18988037]
[528.68310547 571.16754150]
[517.70288086 581.39611816]
[506.02850342 590.82470703]
[493.71813965 599.40631104]
[480.83309937 607.09814453]
[467.43756104 613.86193848]
[453.59829712 619.66394043]
[439.38421631 624.47528076]
[424.86614990 628.27203369]
[410.11645508 631.03521729]
[395.20858765 632.75103760]
[380.21679688 633.41101074]
[365.21582031 633.01184082]
[350.28036499 631.55554199]
[335.48483276 629.04931641]
[320.90295410 625.50561523]
[306.60736084 620.94219971]
[292.66928101 615.38171387]
[279.15814209 608.85192871]
[266.14126587 601.38531494]
[253.68351746 593.01916504]
[241.84693909 583.79504395]
[230.69050598 573.75891113]
[220.26980591 562.96087646]
[210.63674927 551.45465088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 143]
[21 142]
[22 141]
[23 140]
[24 139]
[25 138]
[26 137]
[29 134]
[30 133]
[31 132]
[32 131]
[33 130]
[34 129]
[35 124]
[36 123]
[37 122]
[39 120]
[43 115]
[44 114]
[45 113]
[46 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
