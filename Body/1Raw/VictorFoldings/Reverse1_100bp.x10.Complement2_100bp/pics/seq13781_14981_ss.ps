%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAAAAUAAAAUUCAAACAACCAAUCCAUCAACUCCAGAUCCCGACAAUCUUCAGGAUCCUUUCACUGUCGCUCCCGACACUCAAAAUCCAUCUCCCCCxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[53.00410461 881.99749756]
[38.02139664 882.81475830]
[23.01693726 882.68969727]
[8.04993916 881.62268066]
[-6.82052565 879.61798096]
[-21.53577232 876.68353271]
[-36.03772354 872.83093262]
[-50.26914978 868.07525635]
[-64.17388153 862.43542480]
[-77.69705200 855.93365479]
[-90.78527832 848.59552002]
[-103.38691711 840.45007324]
[-115.45222473 831.52941895]
[-126.93359375 821.86883545]
[-137.78572083 811.50634766]
[-147.96574402 800.48291016]
[-157.43351746 788.84197998]
[-166.15167236 776.62957764]
[-174.08580017 763.89379883]
[-181.20457458 750.68499756]
[-187.47991943 737.05529785]
[-192.88705444 723.05841064]
[-197.40464783 708.74963379]
[-201.01487732 694.18548584]
[-203.70347595 679.42333984]
[-205.45985413 664.52148438]
[-206.27705383 649.53875732]
[-206.15187073 634.53430176]
[-205.08479309 619.56732178]
[-203.08004761 604.69683838]
[-200.14552307 589.98162842]
[-196.29280090 575.47967529]
[-191.53709412 561.24829102]
[-185.89718628 547.34356689]
[-179.39530945 533.82043457]
[-172.05712891 520.73229980]
[-163.91162109 508.13067627]
[-154.99092102 496.06539917]
[-145.33024597 484.58410645]
[-134.96771240 473.73202515]
[-123.94420624 463.55206299]
[-112.30325317 454.08435059]
[-100.09078217 445.36624146]
[-87.35499573 437.43218994]
[-74.14615631 430.31347656]
[-60.51639557 424.03820801]
[-46.51949692 418.63116455]
[-32.21070480 414.11361694]
[-17.64649200 410.50347900]
[-2.88433480 407.81497192]
[12.01750755 406.05865479]
[27.00022316 405.24154663]
[42.00468445 405.36679077]
[56.97166824 406.43395996]
[58.97568130 391.56842041]
[51.89339447 381.76190186]
[53.44131088 369.36077881]
[63.33082962 361.08068848]
[65.55594635 346.24664307]
[67.78106689 331.41259766]
[70.00617981 316.57855225]
[72.23130035 301.74450684]
[74.45641327 286.91046143]
[76.68153381 272.07641602]
[69.74603271 262.16552734]
[71.47840881 249.78884888]
[81.49011230 241.65689087]
[83.93584442 226.85762024]
[86.38156891 212.05834961]
[88.82729340 197.25907898]
[91.27302551 182.45980835]
[92.50000000 167.51007080]
[92.50000000 152.51007080]
[92.50000000 137.51007080]
[92.50000000 122.51007843]
[92.50000000 107.51007843]
[91.60718536 92.53667450]
[89.82471466 77.64295197]
[85.69771576 69.49398804]
[88.12828827 62.51443481]
[86.56776428 47.59583282]
[85.00724030 32.67722702]
[83.44672394 17.75862312]
[72.11732483 27.58942604]
[57.34050751 25.01148605]
[50.00919724 11.92516136]
[55.52775955 -2.02279472]
[69.82811737 -6.55046844]
[82.36771393 1.67836094]
[81.92111206 -13.31498909]
[81.47450256 -28.30833817]
[81.02790070 -43.30168915]
[80.58129120 -58.29504013]
[80.13468933 -73.28839111]
[71.98993683 -86.85207367]
[79.34486389 -99.80406952]
[78.89826202 -114.79742432]
[64.67507172 -120.16112518]
[53.59057617 -130.56315613]
[47.33507919 -144.41729736]
[46.86250687 -159.61088562]
[52.24491119 -173.82701111]
[62.66152191 -184.89781189]
[76.52388000 -191.13508606]
[91.71807861 -191.58766174]
[105.92710876 -186.18656921]
[116.98419952 -175.75540161]
[123.20321655 -161.88484192]
[123.63581848 -146.69006348]
[118.21603394 -132.48815918]
[107.77033234 -121.44480133]
[93.89160919 -115.24402618]
[94.33821869 -100.25067902]
[102.45102692 -87.75941467]
[95.12803650 -73.73499298]
[95.57463837 -58.74164581]
[96.02124786 -43.74829483]
[96.46785736 -28.75494576]
[96.91445923 -13.76159477]
[97.36106873 1.23175502]
[98.36532593 16.19809914]
[99.92584991 31.11670494]
[101.48637390 46.03530884]
[103.04689789 60.95391464]
[104.71843719 75.86048889]
[106.50090027 90.75420380]
[114.96426392 78.36988068]
[129.05139160 73.21693420]
[143.50813293 77.21727753]
[152.94247437 88.87889099]
[153.83564758 103.85227203]
[145.85450745 116.55272675]
[131.97584534 122.24330139]
[117.37603760 118.80154419]
[107.50000000 107.51007843]
[107.50000000 122.51007843]
[107.50000000 137.51007080]
[107.50000000 152.51007080]
[107.50000000 167.51007080]
[115.95791626 155.12202454]
[129.16047668 148.00218201]
[144.15820312 147.74111938]
[157.60057068 154.39715576]
[166.48449707 166.48333740]
[168.82531738 181.29956055]
[164.10006714 195.53585815]
[153.36439514 206.01179504]
[139.01666260 210.38702393]
[124.26219940 207.68409729]
[112.39718628 198.50688171]
[106.07229614 184.90553284]
[103.62657166 199.70480347]
[101.18083954 214.50407410]
[98.73511505 229.30334473]
[96.28938293 244.10261536]
[103.17132568 261.18243408]
[91.51557922 274.30154419]
[89.29045868 289.13558960]
[87.06534576 303.96960449]
[84.84022522 318.80364990]
[82.61510468 333.63769531]
[80.38999176 348.47174072]
[78.16487122 363.30578613]
[85.30034637 380.28125000]
[73.84120941 393.57241821]
[71.83719635 408.43795776]
[86.55247498 411.37225342]
[101.05446625 415.22476196]
[115.28594208 419.98022461]
[129.19073486 425.61993408]
[142.71397400 432.12158203]
[155.80227661 439.45956421]
[168.40399170 447.60485840]
[180.46940613 456.52539062]
[191.95086670 466.18588257]
[202.80310059 476.54824829]
[212.98324585 487.57159424]
[222.45114136 499.21240234]
[231.16941833 511.42471313]
[239.10368347 524.16040039]
[246.22259521 537.36914062]
[252.49807739 550.99877930]
[257.90536499 564.99560547]
[262.42309570 579.30432129]
[266.03347778 593.86846924]
[268.72222900 608.63061523]
[270.47875977 623.53240967]
[271.29611206 638.51513672]
[271.17111206 653.51959229]
[270.10418701 668.48657227]
[268.09957886 683.35705566]
[265.16522217 698.07232666]
[261.31265259 712.57427979]
[256.55709839 726.80572510]
[250.91731262 740.71051025]
[244.41558838 754.23370361]
[237.07754517 767.32196045]
[228.93217468 779.92364502]
[220.01159668 791.98901367]
[210.35104370 803.47039795]
[199.98861694 814.32257080]
[188.96522522 824.50268555]
[177.32435608 833.97052002]
[165.11198425 842.68872070]
[152.37628174 850.62292480]
[139.16751099 857.74176025]
[125.53781891 864.01721191]
[111.54097748 869.42437744]
[97.23223114 873.94207764]
[82.66806030 877.55236816]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 166]
[55 165]
[58 163]
[59 162]
[60 161]
[61 160]
[62 159]
[63 158]
[64 157]
[67 155]
[68 154]
[69 153]
[70 152]
[71 151]
[72 139]
[73 138]
[74 137]
[75 136]
[76 135]
[77 126]
[78 125]
[80 124]
[81 123]
[82 122]
[83 121]
[89 120]
[90 119]
[91 118]
[92 117]
[93 116]
[94 115]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
