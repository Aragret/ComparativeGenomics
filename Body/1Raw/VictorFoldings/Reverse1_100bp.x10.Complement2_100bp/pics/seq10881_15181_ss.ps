%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[6.57706213 516.12567139]
[3.19829130 530.76452637]
[-2.14240670 544.80700684]
[-9.34553814 557.99145508]
[-18.27691269 570.07214355]
[-28.77014351 580.82415771]
[-40.62974930 590.04718018]
[-53.63479614 597.56933594]
[-67.54299927 603.25048828]
[-82.09526825 606.98480225]
[-97.02049255 608.70275879]
[-112.04063416 608.37231445]
[-126.87586975 605.99969482]
[-141.24983215 601.62896729]
[-154.89472961 595.34167480]
[-167.55639648 587.25488281]
[-178.99891663 577.51922607]
[-189.00915527 566.31616211]
[-197.40060425 553.85430908]
[-204.01695251 540.36590576]
[-208.73493958 526.10217285]
[-211.46665955 511.32882690]
[-212.16122437 496.32110596]
[-210.80570984 481.35861206]
[-207.42535400 466.72006226]
[-202.08312988 452.67819214]
[-194.87857056 439.49456787]
[-185.94589233 427.41479492]
[-175.45150757 416.66390991]
[-163.59089661 407.44219971]
[-150.58503723 399.92147827]
[-136.67622375 394.24182129]
[-122.12354279 390.50906372]
[-107.19813538 388.79272461]
[-92.17803192 389.12478638]
[-77.34305573 391.49905396]
[-62.96956635 395.87130737]
[-56.69220352 382.24798584]
[-50.41484451 368.62466431]
[-52.11577988 353.82751465]
[-39.31335449 344.53189087]
[-33.03599548 330.90856934]
[-26.75863266 317.28524780]
[-20.48127365 303.66192627]
[-32.56672287 312.54687500]
[-46.94255447 316.82885742]
[-61.91990662 316.00488281]
[-75.73925781 310.17175293]
[-86.77711487 300.01467896]
[-93.73677826 286.72698975]
[-95.80062103 271.86965942]
[-92.72618866 257.18811035]
[-84.87466431 244.40711975]
[-73.16842651 235.02819824]
[-58.98273087 230.15316772]
[-43.98408508 230.35473633]
[-29.93451881 235.60922241]
[-18.48456192 245.29934692]
[-10.97934151 258.28671265]
[-8.30056572 273.04559326]
[-10.76345253 287.84356689]
[-1.44856966 276.08633423]
[7.86631298 264.32907104]
[17.18119621 252.57182312]
[25.59581375 240.15432739]
[33.06355667 227.14537048]
[40.53129578 214.13641357]
[47.99903870 201.12747192]
[55.46677780 188.11851501]
[62.93452072 175.10955811]
[70.40225983 162.10060120]
[76.47609711 148.38534546]
[81.09010315 134.11260986]
[85.70411682 119.83987427]
[90.31812286 105.56713867]
[94.82575226 91.26045227]
[99.22675323 76.92060852]
[103.62774658 62.58076096]
[108.02874756 48.24091339]
[112.42974091 33.90106583]
[116.72386932 19.52885437]
[120.91088104 5.12507153]
[125.09789276 -9.27871037]
[128.74597168 -23.82833099]
[131.85008240 -38.50363159]
[134.95419312 -53.17893600]
[137.94897461 -67.87693787]
[140.83424377 -82.59683228]
[143.71951294 -97.31671906]
[135.16987610 -110.33753204]
[138.30564880 -125.22449493]
[150.77168274 -133.29502869]
[153.65696716 -148.01490784]
[156.54223633 -162.73480225]
[142.48616028 -168.07658386]
[129.53511047 -175.71716309]
[118.06172943 -185.43670654]
[108.39611816 -196.95556641]
[100.81638336 -209.94230652]
[95.54060364 -224.02330017]
[92.72058105 -238.79338074]
[92.43744659 -253.82760620]
[94.69934845 -268.69338989]
[99.44120789 -282.96304321]
[106.52658844 -296.22598267]
[115.75164032 -308.10058594]
[126.85092163 -318.24523926]
[139.50509644 -326.36804199]
[153.35008240 -332.23526001]
[167.98753357 -335.67813110]
[182.99627686 -336.59753418]
[197.94451904 -334.96707153]
[212.40213013 -330.83364868]
[225.95317078 -324.31616211]
[238.20771790 -315.60217285]
[248.81320190 -304.94235229]
[257.46447754 -292.64343262]
[263.91265869 -279.05929565]
[267.97216797 -264.58071899]
[269.52624512 -249.62437439]
[268.53015137 -234.62051392]
[265.01254272 -220.00083923]
[259.07464600 -206.18601990]
[250.88731384 -193.57350159]
[240.68609619 -182.52618408]
[228.76451111 -173.36193848]
[215.46554565 -166.34440613]
[201.17185974 -161.67550659]
[186.29470825 -159.48959351]
[171.26213074 -159.84953308]
[168.37684631 -145.12963867]
[165.49157715 -130.40974426]
[173.98837280 -118.23025513]
[171.27198792 -103.26109314]
[158.43940735 -94.43144989]
[155.55413818 -79.71155548]
[152.66886902 -64.99166870]
[154.46705627 -57.82310486]
[149.62950134 -50.07482529]
[146.52539062 -35.39952469]
[143.42127991 -20.72422028]
[157.22534180 -26.59345436]
[170.49273682 -19.59514618]
[173.44322205 -4.88818932]
[163.90182495 6.68599510]
[148.90209961 6.59534931]
[139.50167847 -5.09169912]
[135.31466675 9.31208324]
[131.12765503 23.71586418]
[132.27912903 31.01626778]
[126.76959229 38.30206299]
[122.36859131 52.64191055]
[117.96759796 66.98175812]
[113.56659698 81.32160950]
[109.16559601 95.66145325]
[109.99919891 103.67878723]
[104.59085846 110.18115234]
[99.97684479 124.45388794]
[95.36283875 138.72662354]
[90.74883270 152.99934387]
[101.97317505 143.04876709]
[116.12576294 138.07843018]
[131.10713196 138.82565308]
[144.69490051 145.17958069]
[154.87339783 156.19767761]
[160.13270569 170.24543762]
[159.69262695 185.23898315]
[153.61846924 198.95410156]
[142.81126404 209.35623169]
[128.87422180 214.90229797]
[113.87480164 214.76954651]
[100.03810120 208.97770691]
[89.41669464 198.38592529]
[83.58620453 184.56546021]
[83.41121674 169.56834412]
[75.94347382 182.57730103]
[68.47573090 195.58625793]
[61.00799179 208.59519958]
[53.54024887 221.60415649]
[46.07250977 234.61311340]
[38.60476685 247.62207031]
[52.30920029 241.52383423]
[67.23673248 242.99649048]
[79.48534393 251.65510559]
[85.85327911 265.23632812]
[84.67596436 280.19003296]
[76.26116180 292.60742188]
[62.80846786 299.24255371]
[47.83439255 298.36105347]
[35.25312042 290.19332886]
[28.35336494 276.87442017]
[28.93844795 261.88668823]
[19.62356377 273.64395142]
[10.30868149 285.40121460]
[0.99379879 297.15844727]
[-6.85795689 309.93930054]
[-13.13531780 323.56262207]
[-19.41267776 337.18594360]
[-25.69003868 350.80923462]
[-24.43810272 366.58084106]
[-36.79152679 374.90203857]
[-43.06888962 388.52536011]
[-49.34624863 402.14865112]
[-36.68371582 410.23406982]
[-25.24013329 419.96847534]
[-15.22868633 431.17047119]
[-6.83588314 443.63137817]
[-0.21807715 457.11907959]
[4.50144625 471.38232422]
[7.23476601 486.15536499]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 203]
[38 202]
[39 201]
[41 199]
[42 198]
[43 197]
[44 196]
[61 195]
[62 194]
[63 193]
[64 192]
[65 181]
[66 180]
[67 179]
[68 178]
[69 177]
[70 176]
[71 175]
[72 160]
[73 159]
[74 158]
[75 157]
[76 155]
[77 154]
[78 153]
[79 152]
[80 151]
[81 149]
[82 148]
[83 147]
[84 141]
[85 140]
[86 139]
[87 137]
[88 136]
[89 135]
[92 132]
[93 131]
[94 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
