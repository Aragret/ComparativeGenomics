%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[111.61071014 339.13034058]
[107.38300323 353.56066895]
[100.77721405 367.06887817]
[91.98341370 379.26629639]
[81.25460815 389.80200195]
[68.89949036 398.37280273]
[55.27353668 404.73217773]
[40.76880264 408.69711304]
[25.80261230 410.15353394]
[10.80557346 409.05953979]
[-3.79081869 405.44659424]
[-17.56659698 399.41864014]
[-30.12540627 391.14916992]
[-41.10589981 380.87606812]
[-50.19215393 368.89489746]
[-57.12273407 355.55044556]
[-61.69823456 341.22659302]
[-63.78701019 326.33547974]
[-63.32896042 311.30557251]
[-60.33726501 296.56930542]
[-54.89800644 282.55065918]
[-47.16767502 269.65298462]
[-37.36869049 258.24737549]
[-25.78299141 248.66197205]
[-12.74391937 241.17260742]
[1.37336540 235.99475098]
[16.16267967 233.27735901]
[31.19850540 233.09863281]
[46.04823303 235.46371460]
[50.87422943 221.26126099]
[47.64310455 206.72134399]
[59.40898895 196.14427185]
[64.23498535 181.94181824]
[69.06098175 167.73936462]
[73.88698578 153.53691101]
[70.65586090 138.99699402]
[82.42174530 128.41990662]
[87.24774170 114.21746063]
[80.93753052 101.17416382]
[85.59929657 87.45503998]
[98.54980469 80.95654297]
[103.37580109 66.75408936]
[94.88111877 57.58304214]
[91.11357880 45.73930359]
[92.72968292 33.48908997]
[99.36189270 23.14912987]
[109.69994354 16.64854240]
[121.74927521 15.16902637]
[126.99599457 1.11655486]
[132.24270630 -12.93591595]
[137.48942566 -26.98838806]
[142.73614502 -41.04085922]
[142.02033997 -47.61346436]
[144.37744141 -52.78464508]
[148.35394287 -55.42972565]
[154.01673889 -69.31975555]
[159.57595825 -83.25154877]
[165.03131104 -97.22434998]
[170.48667908 -111.19714355]
[156.81802368 -117.38368225]
[143.49490356 -124.28297424]
[130.55448914 -131.87577820]
[118.03279877 -140.14094543]
[105.96476746 -149.05541992]
[94.38401794 -158.59437561]
[83.32283020 -168.73121643]
[72.81202698 -179.43768311]
[62.88091660 -190.68394470]
[53.55717468 -202.43865967]
[44.86678314 -214.66905212]
[36.83396912 -227.34103394]
[29.48111534 -240.41929626]
[22.82872391 -253.86738586]
[16.89533043 -267.64782715]
[11.69747353 -281.72216797]
[7.24964190 -296.05123901]
[3.56423163 -310.59509277]
[0.65151477 -325.31314087]
[-1.48039031 -340.16442871]
[-2.82554150 -355.10751343]
[-3.38018990 -370.10076904]
[-3.14278936 -385.10241699]
[-2.11400151 -400.07061768]
[-0.29669404 -414.96365356]
[2.30406809 -429.74002075]
[5.68103600 -444.35855103]
[9.82479763 -458.77850342]
[14.72380257 -472.95965576]
[20.36439705 -486.86248779]
[26.73086166 -500.44827271]
[33.80544662 -513.67913818]
[41.56843948 -526.51818848]
[49.99819946 -538.92968750]
[59.07123566 -550.87896729]
[68.76225281 -562.33276367]
[79.04424286 -573.25915527]
[89.88855743 -583.62768555]
[101.26495361 -593.40942383]
[113.14173889 -602.57714844]
[125.48580170 -611.10534668]
[138.26274109 -618.97015381]
[151.43693542 -626.14971924]
[164.97167969 -632.62396240]
[178.82925415 -638.37487793]
[192.97100830 -643.38647461]
[207.35755920 -647.64471436]
[221.94877625 -651.13781738]
[236.70402527 -653.85595703]
[251.58215332 -655.79156494]
[266.54168701 -656.93933105]
[281.54095459 -657.29595947]
[296.53817749 -656.86053467]
[311.49148560 -655.63421631]
[326.35922241 -653.62042236]
[341.09997559 -650.82482910]
[355.67266846 -647.25512695]
[370.03662109 -642.92138672]
[384.15185547 -637.83557129]
[397.97903442 -632.01190186]
[411.47958374 -625.46661377]
[424.61587524 -618.21795654]
[437.35131836 -610.28613281]
[449.65042114 -601.69323730]
[461.47888184 -592.46325684]
[472.80371094 -582.62182617]
[483.59341431 -572.19647217]
[493.81787109 -561.21624756]
[503.44857788 -549.71166992]
[512.45867920 -537.71490479]
[520.82312012 -525.25933838]
[528.51855469 -512.37963867]
[535.52355957 -499.11181641]
[541.81854248 -485.49276733]
[547.38604736 -471.56048584]
[552.21051025 -457.35379028]
[556.27844238 -442.91226196]
[559.57855225 -428.27621460]
[562.10168457 -413.48635864]
[563.84069824 -398.58398438]
[564.79083252 -383.61056519]
[564.94940186 -368.60791016]
[564.31604004 -353.61776733]
[562.89239502 -338.68194580]
[560.68249512 -323.84207153]
[557.69250488 -309.13952637]
[553.93072510 -294.61523438]
[549.40765381 -280.30975342]
[544.13592529 -266.26287842]
[538.13024902 -252.51380920]
[531.40728760 -239.10086060]
[523.98583984 -226.06140137]
[515.88653564 -213.43179321]
[507.13201904 -201.24722290]
[497.74667358 -189.54165649]
[487.75662231 -178.34771729]
[477.18969727 -167.69660950]
[466.07540894 -157.61802673]
[454.44470215 -148.14004517]
[442.33001709 -139.28909302]
[429.76507568 -131.08982849]
[416.78494263 -123.56510162]
[403.42578125 -116.73590851]
[389.72482300 -110.62126160]
[375.72024536 -105.23821259]
[361.45108032 -100.60176086]
[346.95712280 -96.72483063]
[332.27874756 -93.61823273]
[317.45687866 -91.29061890]
[302.53283691 -89.74848175]
[287.54821777 -88.99611664]
[272.54473877 -89.03562164]
[257.56427002 -89.86688232]
[242.64855957 -91.48758698]
[227.83915710 -93.89321899]
[213.17735291 -97.07706451]
[198.70401001 -101.03026581]
[184.45947266 -105.74179077]
[179.00411987 -91.76898956]
[173.54875183 -77.79619598]
[174.04434204 -70.42217255]
[167.90676880 -63.65696716]
[162.24397278 -49.76693726]
[156.78862000 -35.79413986]
[151.54190063 -21.74166870]
[146.29518127 -7.68919802]
[141.04846191 6.36327314]
[135.80174255 20.41574478]
[146.22950745 34.66822815]
[146.01237488 52.48405457]
[135.04849243 66.72740936]
[117.57825470 71.58008575]
[112.75225830 85.78253937]
[119.06246948 98.82583618]
[114.40070343 112.54496002]
[101.45019531 119.04345703]
[96.62419891 133.24591064]
[99.51013184 148.80168152]
[88.08943939 158.36289978]
[83.26344299 172.56535339]
[78.43744659 186.76780701]
[73.61144257 200.97026062]
[76.49738312 216.52603149]
[65.07668304 226.08726501]
[60.25069046 240.28971863]
[73.46709442 247.46151733]
[85.28125000 256.76385498]
[95.35323334 267.92913818]
[103.39326477 280.63604736]
[109.17000580 294.51904297]
[112.51725006 309.17864990]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 204]
[30 203]
[32 201]
[33 200]
[34 199]
[35 198]
[37 196]
[38 195]
[41 192]
[42 191]
[48 187]
[49 186]
[50 185]
[51 184]
[52 183]
[55 182]
[56 181]
[57 179]
[58 178]
[59 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
