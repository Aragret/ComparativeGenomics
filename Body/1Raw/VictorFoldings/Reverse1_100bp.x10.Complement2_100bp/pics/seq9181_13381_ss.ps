%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[-30.82229614 437.85403442]
[-29.13031578 452.77774048]
[-29.28515434 467.79626465]
[-31.28446579 482.68188477]
[-35.09793854 497.20901489]
[-40.66776657 511.15737915]
[-47.90950394 524.31549072]
[-56.71337509 536.48394775]
[-66.94591522 547.47827148]
[-78.45199585 557.13177490]
[-91.05718994 565.29809570]
[-104.57041168 571.85339355]
[-118.78679657 576.69842529]
[-133.49082947 579.75958252]
[-148.45960999 580.99060059]
[-163.46620178 580.37274170]
[-178.28312683 577.91534424]
[-192.68572998 573.65576172]
[-206.45571899 567.65844727]
[-219.38429260 560.01446533]
[-231.27549744 550.83953857]
[-241.94905090 540.27282715]
[-251.24314880 528.47454834]
[-259.01690674 515.62353516]
[-265.15243530 501.91461182]
[-269.55676270 487.55560303]
[-272.16308594 472.76416016]
[-272.93194580 457.76455688]
[-271.85162354 442.78414917]
[-268.93853760 428.05004883]
[-264.23684692 413.78561401]
[-257.81781006 400.20712280]
[-249.77874756 387.52038574]
[-240.24153137 375.91775513]
[-229.35075378 365.57510376]
[-217.27149963 356.64923096]
[-204.18688965 349.27545166]
[-190.29528809 343.56555176]
[-175.80728149 339.60610962]
[-160.94250488 337.45709229]
[-145.92631531 337.15115356]
[-130.98634338 338.69287109]
[-116.34908295 342.05889893]
[-102.23641968 347.19821167]
[-88.86231232 354.03289795]
[-80.44769287 341.61538696]
[-72.03307343 329.19790649]
[-70.88311768 321.89724731]
[-63.39959335 316.65945435]
[-54.80102921 304.36862183]
[-46.20246506 292.07778931]
[-45.24657440 277.21386719]
[-30.99593544 270.34146118]
[-22.39737129 258.05062866]
[-13.79880810 245.75979614]
[-5.20024395 233.46896362]
[3.39831996 221.17811584]
[4.65684795 213.89541626]
[12.21752644 208.76959229]
[20.99812889 196.60813904]
[14.77489471 183.07533264]
[16.17025757 168.14520264]
[24.90917778 155.83676147]
[38.72634888 149.51358032]
[53.95267487 150.96488953]
[62.73327637 138.80343628]
[71.51387787 126.64198303]
[80.29448700 114.48052979]
[89.07508850 102.31906891]
[97.76491547 90.09258270]
[106.36347961 77.80175018]
[91.60797119 80.49897003]
[78.50911713 73.19007111]
[73.05553436 59.21657944]
[77.74052429 44.96699142]
[90.42218018 36.95602036]
[105.30261230 38.84617996]
[115.57868958 49.77331161]
[116.55181885 64.74346161]
[119.62845612 46.58813477]
[136.42700195 41.51114273]
[146.08781433 30.03644371]
[155.74862671 18.56174469]
[165.40943909 7.08704424]
[164.24565125 -8.44625473]
[174.20654297 -19.94561005]
[189.02235413 -20.95937157]
[198.68316650 -32.43407059]
[208.34396362 -43.90877151]
[211.14996338 -62.10789108]
[227.87106323 -67.43442535]
[237.35995483 -79.05168915]
[246.84884644 -90.66895294]
[256.33773804 -102.28621674]
[265.82666016 -113.90348053]
[265.31140137 -126.79135132]
[273.45391846 -136.27204895]
[285.47528076 -137.61846924]
[295.13610840 -149.09317017]
[284.70571899 -159.89183044]
[275.44097900 -171.70573425]
[267.44006348 -184.40965271]
[260.78781128 -197.86889648]
[255.55471802 -211.94082642]
[251.79627991 -226.47622681]
[249.55232239 -241.32104492]
[248.84664917 -256.31793213]
[249.68673706 -271.30786133]
[252.06365967 -286.13195801]
[255.95225525 -300.63311768]
[261.31127930 -314.65753174]
[268.08392334 -328.05664062]
[276.19839478 -340.68829346]
[285.56866455 -352.41870117]
[296.09542847 -363.12341309]
[307.66708374 -372.68902588]
[320.16098022 -381.01409912]
[333.44464111 -388.01037598]
[347.37728882 -393.60375977]
[361.81118774 -397.73486328]
[376.59338379 -400.35995483]
[391.56713867 -401.45120239]
[406.57373047 -400.99700928]
[421.45407104 -399.00222778]
[436.05044556 -395.48797607]
[450.20809937 -390.49151611]
[463.77697754 -384.06579590]
[476.61322021 -376.27896118]
[488.58078003 -367.21353149]
[499.55276489 -356.96563721]
[509.41287231 -345.64389038]
[518.05664062 -333.36831665]
[525.39233398 -320.26901245]
[531.34222412 -306.48486328]
[535.84332275 -292.16201782]
[538.84783936 -277.45223999]
[540.32391357 -262.51153564]
[540.25592041 -247.49821472]
[538.64459229 -232.57147217]
[535.50695801 -217.88952637]
[530.87634277 -203.60801697]
[524.80187988 -189.87834167]
[517.34783936 -176.84602356]
[508.59326172 -164.64921570]
[498.63101196 -153.41723633]
[487.56665039 -143.26911926]
[475.51748657 -134.31246948]
[462.61123657 -126.64220428]
[448.98474121 -120.33965302]
[434.78240967 -115.47161102]
[420.15481567 -112.08969879]
[405.25698853 -110.22975159]
[390.24691772 -109.91149902]
[375.28366089 -111.13830566]
[360.52584839 -113.89716339]
[346.12994385 -118.15884399]
[332.24853516 -123.87815094]
[319.02877808 -130.99446106]
[306.61080933 -139.43235779]
[296.94998169 -127.95765686]
[294.80953979 -110.53969574]
[277.44390869 -104.41458130]
[267.95501709 -92.79731750]
[258.46612549 -81.18005371]
[248.97721863 -69.56278992]
[239.48832703 -57.94552612]
[240.38960266 -45.88259888]
[232.57931519 -36.12640762]
[219.81866455 -34.24796295]
[210.15785217 -22.77326202]
[200.49705505 -11.29856110]
[202.02255249 3.47331786]
[192.38858032 15.24791718]
[176.88414001 16.74785423]
[167.22332764 28.22255516]
[157.56251526 39.69725418]
[147.90170288 51.17195511]
[148.62329102 63.24696350]
[140.66862488 72.88579559]
[127.88140869 74.57404327]
[118.65431213 86.40031433]
[110.05574799 98.69114685]
[108.38279724 106.57617950]
[101.23654175 111.09967041]
[92.45594025 123.26113129]
[83.67533875 135.42259216]
[74.89473724 147.58404541]
[66.11412811 159.74549866]
[72.28306580 173.74162292]
[70.62904358 188.84661865]
[61.69580460 201.01475525]
[47.96321869 207.03738403]
[33.15958405 205.38874817]
[24.37898254 217.55020142]
[15.68915749 229.77668762]
[7.09059381 242.06752014]
[-1.50797009 254.35836792]
[-10.10653400 266.64920044]
[-18.70509720 278.94003296]
[-20.27601624 294.68307495]
[-33.91162491 300.67633057]
[-42.51018906 312.96716309]
[-51.10875320 325.25802612]
[-59.61558151 337.61251831]
[-68.03019714 350.03002930]
[-76.44481659 362.44750977]
[-65.14021301 372.33618164]
[-55.13652802 383.53912354]
[-46.58541489 395.88650513]
[-39.61650467 409.19116211]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 206]
[46 205]
[47 204]
[49 203]
[50 202]
[51 201]
[53 199]
[54 198]
[55 197]
[56 196]
[57 195]
[59 194]
[60 193]
[65 188]
[66 187]
[67 186]
[68 185]
[69 184]
[70 182]
[71 181]
[79 180]
[81 177]
[82 176]
[83 175]
[84 174]
[87 171]
[88 170]
[89 169]
[91 166]
[92 165]
[93 164]
[94 163]
[95 162]
[98 160]
[99 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
