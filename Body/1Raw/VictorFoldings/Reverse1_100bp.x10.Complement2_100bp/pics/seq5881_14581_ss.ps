%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[107.80316162 487.44699097]
[103.86379242 502.36291504]
[92.47019958 512.76434326]
[77.25804901 515.33221436]
[63.08147430 509.24713135]
[54.46417236 496.45083618]
[54.15588760 481.02655029]
[62.25500107 467.89611816]
[76.17710876 461.24945068]
[77.95957184 446.35571289]
[70.73206329 436.65573120]
[72.09517670 424.23294067]
[81.86032104 415.80651855]
[83.86433411 400.94097900]
[85.86834717 386.07546997]
[87.87236023 371.20993042]
[89.87637329 356.34439087]
[91.88038635 341.47888184]
[93.88439941 326.61334229]
[95.88841248 311.74780273]
[88.35794067 295.89666748]
[99.73390198 281.41671753]
[101.51636505 266.52301025]
[103.29883575 251.62928772]
[105.08129883 236.73556519]
[105.19296265 221.73597717]
[103.63243866 206.81736755]
[102.07192230 191.89877319]
[100.51139832 176.98016357]
[98.95087433 162.06155396]
[84.13201904 160.00787354]
[70.23497009 154.46817017]
[58.06706238 145.76425171]
[48.33515167 134.40176392]
[41.60459518 121.04078674]
[38.26638794 106.45748901]
[38.51445770 91.49906158]
[42.33439255 77.03446960]
[49.50428009 63.90401459]
[59.60760117 52.87047577]
[72.05743408 44.57481766]
[86.13052368 39.49896240]
[84.56999969 24.58035660]
[75.43898773 11.66001892]
[81.81021881 -1.80313969]
[80.24969482 -16.72174454]
[78.68917084 -31.64034843]
[77.12865448 -46.55895233]
[75.56813049 -61.47755814]
[74.00760651 -76.39616394]
[72.44708252 -91.31476593]
[70.88655853 -106.23337555]
[69.32603455 -121.15197754]
[67.76551056 -136.07058716]
[66.20498657 -150.98918152]
[51.28169250 -153.08224487]
[37.30150604 -158.68283081]
[25.07545471 -167.46138000]
[15.31169415 -178.90406799]
[8.57447338 -192.34294128]
[5.25153446 -206.99485779]
[5.53180122 -222.00718689]
[9.39464092 -236.50733948]
[16.61131668 -249.65356445]
[26.75852776 -260.68380737]
[39.24323654 -268.95977783]
[53.33732605 -274.00408936]
[38.35663605 -275.40792847]
[23.94231606 -279.70617676]
[10.64782906 -286.73181152]
[-1.01674426 -296.21319580]
[-10.60427380 -307.78445435]
[-17.74771690 -320.99963379]
[-22.17417336 -335.34997559]
[-23.71530724 -350.28338623]
[-22.31375122 -365.22573853]
[-18.02523613 -379.60287476]
[-11.01638031 -392.86279297]
[-1.55821633 -404.49676514]
[9.98429108 -414.05877686]
[23.16632462 -421.18283081]
[37.48036194 -425.59671021]
[35.91983795 -440.51531982]
[34.35931778 -455.43392944]
[32.79879379 -470.35253906]
[31.23826981 -485.27114868]
[29.67774773 -500.18972778]
[28.11722374 -515.10833740]
[16.95811081 -529.75604248]
[24.72375107 -545.49334717]
[22.94128418 -560.38702393]
[8.04234982 -562.87670898]
[-5.55105305 -569.46429443]
[-16.73696709 -579.61572266]
[-24.60860252 -592.50811768]
[-28.52783775 -607.09637451]
[-28.17695999 -622.19781494]
[-23.58441353 -636.58825684]
[-15.12249565 -649.10113525]
[-3.47717452 -658.72210693]
[10.40751457 -664.67126465]
[25.40600204 -666.46624756]
[40.30242920 -663.96160889]
[53.88920593 -657.36041260]
[65.06491852 -647.19775391]
[72.92359924 -634.29742432]
[76.82817841 -619.70526123]
[76.46212769 -604.60418701]
[71.85512543 -590.21838379]
[63.38064194 -577.71398926]
[51.72566223 -568.10467529]
[37.83500290 -562.16949463]
[39.61746979 -547.27581787]
[48.92984390 -539.55529785]
[50.53673553 -527.16168213]
[43.03582764 -516.66888428]
[44.59635162 -501.75027466]
[46.15687561 -486.83166504]
[47.71739960 -471.91305542]
[49.27791977 -456.99444580]
[50.83844376 -442.07583618]
[52.39896774 -427.15722656]
[67.31656647 -425.80105591]
[81.68751526 -421.55911255]
[94.95893860 -414.59268188]
[106.61990356 -405.16784668]
[116.22106171 -393.64538574]
[123.39196014 -380.46691895]
[127.85535431 -366.13806152]
[129.43791199 -351.20898438]
[128.07693481 -336.25326538]
[123.82289124 -321.84585571]
[116.83745575 -308.54104614]
[107.38746643 -296.85101318]
[95.83464813 -287.22628784]
[82.62182617 -280.03817749]
[68.25592804 -275.56463623]
[83.08880615 -273.54614258]
[97.01589966 -268.03289795]
[109.22606659 -259.34130859]
[119.00701141 -247.97305298]
[125.78691101 -234.58616638]
[129.16777039 -219.95680237]
[128.94883728 -204.93438721]
[125.13850403 -190.39222717]
[117.95405579 -177.17671204]
[107.80929565 -166.05812073]
[95.29071808 -157.68568420]
[81.12359619 -152.54971313]
[82.68412018 -137.63110352]
[84.24464417 -122.71250153]
[85.80516052 -107.79389954]
[87.36568451 -92.87528992]
[88.92620850 -77.95668793]
[90.48673248 -63.03808212]
[92.04725647 -48.11947632]
[93.60778046 -33.20087051]
[95.16830444 -18.28226662]
[96.72882080 -3.36366272]
[105.74822235 8.48959732]
[99.48860168 23.01983452]
[101.04912567 37.93843842]
[115.86798096 39.99212646]
[129.76502991 45.53183365]
[141.93293762 54.23574829]
[151.66484070 65.59823608]
[158.39540100 78.95921326]
[161.73361206 93.54251099]
[161.48554993 108.50093842]
[157.66560364 122.96553040]
[150.49572754 136.09597778]
[140.39239502 147.12953186]
[127.94256592 155.42518616]
[113.86947632 160.50103760]
[115.43000031 175.41964722]
[116.99052429 190.33824158]
[118.55104828 205.25685120]
[120.11157227 220.17546082]
[126.13821411 206.43939209]
[136.66815186 195.75666809]
[150.31597900 189.53280640]
[165.28611755 188.58663940]
[179.60896301 193.04266357]
[191.40010071 202.31460571]
[199.10821533 215.18258667]
[201.71916199 229.95359802]
[198.88943481 244.68428040]
[190.99131775 257.43652344]
[179.06396484 266.53256226]
[164.67660522 270.77569580]
[149.72215271 269.60760498]
[136.16813660 263.18200684]
[125.79778290 252.34429932]
[119.97501373 238.51803589]
[118.19255066 253.41174316]
[116.41008759 268.30545044]
[114.62761688 283.19918823]
[121.97147369 293.80252075]
[120.18023682 306.17083740]
[110.75394440 313.75183105]
[108.74993134 328.61737061]
[106.74591827 343.48287964]
[104.74190521 358.34841919]
[102.73789215 373.21395874]
[100.73387909 388.07946777]
[98.72986603 402.94500732]
[96.72584534 417.81051636]
[104.11326599 434.67788696]
[92.85328674 448.13818359]
[91.07082367 463.03189087]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 210]
[10 209]
[13 207]
[14 206]
[15 205]
[16 204]
[17 203]
[18 202]
[19 201]
[20 200]
[22 197]
[23 196]
[24 195]
[25 194]
[26 178]
[27 177]
[28 176]
[29 175]
[30 174]
[42 162]
[43 161]
[45 159]
[46 158]
[47 157]
[48 156]
[49 155]
[50 154]
[51 153]
[52 152]
[53 151]
[54 150]
[55 149]
[67 137]
[82 122]
[83 121]
[84 120]
[85 119]
[86 118]
[87 117]
[88 116]
[90 113]
[91 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
