%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[113.04073334 603.20397949]
[98.61554718 598.98834229]
[84.97982788 592.66973877]
[72.43820190 584.38928223]
[61.27085876 574.33203125]
[51.72727585 562.72265625]
[44.02066422 549.82049561]
[38.32319260 535.91381836]
[34.76214218 521.31323242]
[33.41706848 506.34500122]
[34.31802368 491.34347534]
[37.44487381 476.64379883]
[42.72777176 462.57437134]
[50.04869080 449.44952393]
[59.24407578 437.56243896]
[70.10850525 427.17871094]
[82.39926147 418.53030396]
[95.84176636 411.81042480]
[110.13570404 407.16918945]
[124.96174622 404.71029663]
[124.73841858 389.71197510]
[124.51509094 374.71362305]
[124.29176331 359.71530151]
[124.06843567 344.71694946]
[123.62183380 329.72360229]
[122.95204926 314.73858643]
[121.50262451 299.80877686]
[119.27751160 284.97473145]
[117.05239105 270.14068604]
[114.82727814 255.30662537]
[112.60215759 240.47259521]
[103.06248474 229.03388977]
[108.66704559 214.23863220]
[106.44193268 199.40458679]
[104.21681213 184.57055664]
[91.20543671 180.42071533]
[81.20339966 171.02453613]
[76.20166779 158.17417908]
[77.22946167 144.35673523]
[84.14305878 132.27293396]
[95.64274597 124.30925751]
[93.63873291 109.44372559]
[85.97650909 122.33908844]
[72.60681152 129.13990784]
[57.67238617 127.73888397]
[45.80082321 118.57012939]
[40.67065811 104.47469330]
[43.87152863 89.82019043]
[54.41160965 79.14748383]
[69.02494049 75.76362610]
[83.18342590 80.71714020]
[92.50000000 92.47336578]
[92.50000000 77.47336578]
[92.50000000 62.47336578]
[92.50000000 47.47336578]
[84.76270294 33.67319489]
[92.50000000 20.94592285]
[92.50000000 5.94592333]
[92.50000000 -9.05407619]
[85.81752014 4.37516260]
[76.04397583 15.75399590]
[63.77702713 24.38660431]
[49.76679611 29.74510002]
[34.87001801 31.50180817]
[19.99763870 29.54930496]
[6.05910397 24.00698853]
[-6.09323549 15.21377373]
[-15.71626091 3.70736718]
[-22.22151947 -9.80860901]
[-25.21121407 -24.50764656]
[-24.50252151 -39.49089813]
[-20.13877869 -53.84212494]
[-12.38683224 -66.68374634]
[-1.72071457 -77.23049927]
[11.20733547 -84.83744049]
[25.60676384 -89.03939819]
[40.59704208 -89.57942200]
[55.26150131 -86.42449951]
[68.70341492 -79.76754761]
[80.10079193 -70.01564026]
[88.75669098 -57.76511002]
[94.14179230 -43.76508713]
[95.92680359 -28.87164688]
[100.96372223 -43.00067520]
[106.00063324 -57.12970734]
[111.03755188 -71.25873566]
[116.07447052 -85.38776398]
[120.79460144 -99.62575531]
[125.19560242 -113.96559906]
[129.59660339 -128.30545044]
[133.99758911 -142.64529419]
[138.39859009 -156.98513794]
[135.05078125 -172.44808960]
[146.18174744 -182.34510803]
[150.58274841 -196.68495178]
[153.13858032 -211.46560669]
[153.80836487 -226.45065308]
[154.47814941 -241.43568420]
[155.14793396 -256.42071533]
[141.24224854 -262.50320435]
[130.47557068 -273.20101929]
[124.30402374 -287.06738281]
[123.56224823 -302.22702026]
[128.35055542 -316.62966919]
[138.02137756 -328.32751465]
[151.26681519 -335.73852539]
[166.29551697 -337.86038208]
[181.07499695 -334.40618896]
[193.60643005 -325.84301758]
[202.19505310 -313.32904053]
[205.67933655 -298.55661011]
[203.58804321 -283.52362061]
[196.20399475 -270.26315308]
[184.52584839 -260.56854248]
[170.13296509 -255.75094604]
[169.46318054 -240.76589966]
[168.79339600 -225.78086853]
[168.12361145 -210.79582214]
[175.82585144 -223.66732788]
[187.24752808 -233.39074707]
[201.18333435 -238.93995667]
[216.16253662 -239.72932434]
[230.60438538 -235.67555237]
[242.98478699 -227.20645142]
[251.99719238 -215.21575928]
[256.69052124 -200.96891785]
[256.56945801 -185.96940613]
[251.64680481 -171.80017090]
[242.44203186 -159.95651245]
[229.92654419 -151.68832397]
[215.42115784 -147.86817932]
[200.45663452 -148.89921570]
[186.61222839 -154.67263794]
[175.34895325 -164.57914734]
[167.85548401 -177.57328796]
[164.92259216 -192.28395081]
[160.52159119 -177.94410706]
[164.18418884 -163.50685120]
[152.73843384 -152.58413696]
[148.33744812 -138.24429321]
[143.93644714 -123.90444946]
[139.53544617 -109.56460571]
[135.13444519 -95.22475433]
[136.45454407 -91.95524597]
[136.25659180 -87.88389587]
[134.18099976 -83.73116302]
[130.20349121 -80.35084534]
[125.16658020 -66.22181702]
[120.12966156 -52.09278870]
[115.09275055 -37.96376038]
[110.05583191 -23.83473015]
[107.50000000 -9.05407619]
[107.50000000 5.94592333]
[107.50000000 20.94592285]
[115.23729706 33.67319489]
[107.50000000 47.47336578]
[107.50000000 62.47336578]
[107.50000000 77.47336578]
[107.50000000 92.47336578]
[108.50425720 107.43971252]
[110.50827026 122.30523682]
[125.86769104 128.42733765]
[135.98591614 141.38563538]
[138.17593384 157.58503723]
[131.93388367 172.59144592]
[119.05085754 182.34542847]
[121.27597809 197.17947388]
[123.50109100 212.01351929]
[133.19992065 224.51324463]
[127.43620300 238.24746704]
[129.66131592 253.08151245]
[131.88644409 267.91555786]
[134.11155701 282.74960327]
[136.33666992 297.58364868]
[145.18179321 285.46902466]
[159.71401978 281.75225830]
[173.28941345 288.13259888]
[179.70149231 301.69302368]
[176.01873779 316.23391724]
[163.92485046 325.10733032]
[148.94900513 324.25653076]
[137.93708801 314.06878662]
[138.60687256 329.05383301]
[141.83723450 334.82238770]
[141.69134521 340.50357056]
[139.06677246 344.49362183]
[139.29010010 359.49197388]
[139.51342773 374.49029541]
[139.73675537 389.48864746]
[139.96008301 404.48696899]
[154.85276794 406.50335693]
[169.27854919 410.71694946]
[182.91517639 417.03359985]
[195.45797729 425.31222534]
[206.62675476 435.36788940]
[216.17198181 446.97589111]
[223.88043213 459.87698364]
[229.57989502 473.78286743]
[233.14302063 488.38293457]
[234.49021912 503.35098267]
[233.59140015 518.35266113]
[230.46664429 533.05273438]
[225.18576050 547.12292480]
[217.86671448 560.24884033]
[208.67301941 572.13720703]
[197.81005859 582.52246094]
[185.52053833 591.17266846]
[172.07899475 597.89447021]
[157.78570557 602.53771973]
[142.96002197 604.99871826]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 190]
[21 189]
[22 188]
[23 187]
[24 186]
[25 183]
[26 182]
[27 174]
[28 173]
[29 172]
[30 171]
[31 170]
[33 168]
[34 167]
[35 166]
[41 161]
[42 160]
[52 159]
[53 158]
[54 157]
[55 156]
[57 154]
[58 153]
[59 152]
[83 151]
[84 150]
[85 149]
[86 148]
[87 147]
[88 143]
[89 142]
[90 141]
[91 140]
[92 139]
[94 137]
[95 136]
[96 118]
[97 117]
[98 116]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
