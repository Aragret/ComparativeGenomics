%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[50.73115921 701.85534668]
[36.20978165 705.66131592]
[21.38886833 708.04791260]
[6.40679932 708.99298096]
[-8.59653759 708.48760986]
[-23.48105812 706.53656006]
[-38.10778427 703.15802002]
[-52.34014511 698.38360596]
[-66.04525757 692.25781250]
[-79.09516144 684.83782959]
[-91.36799622 676.19305420]
[-102.74918365 666.40405273]
[-113.13245392 655.56231689]
[-122.42086029 643.76904297]
[-130.52767944 631.13439941]
[-137.37721252 617.77624512]
[-142.90550232 603.81939697]
[-147.06094360 589.39416504]
[-149.80473328 574.63519287]
[-151.11125183 559.68029785]
[-150.96829224 544.66912842]
[-149.37719727 529.74188232]
[-146.35281372 515.03784180]
[-141.92340088 500.69433594]
[-136.13029480 486.84530640]
[-129.02760315 473.62005615]
[-120.68163300 461.14205933]
[-111.17030334 449.52783203]
[-100.58243561 438.88583374]
[-89.01688385 429.31536865]
[-76.58162689 420.90585327]
[-63.39278030 413.73580933]
[-49.57348633 407.87213135]
[-35.25277328 403.36959839]
[-20.56435776 400.27026367]
[-5.64537907 398.60305786]
[9.36486149 398.38351440]
[24.32621574 399.61373901]
[26.99201012 384.85250854]
[29.65780640 370.09127808]
[24.30556107 356.19155884]
[34.37225342 343.98614502]
[37.03805161 329.22491455]
[39.70384598 314.46371460]
[42.36964035 299.70248413]
[45.03543854 284.94125366]
[31.41224480 291.21890259]
[17.94236946 284.61871338]
[14.55530167 270.00613403]
[23.74786186 258.15298462]
[38.74363708 257.79699707]
[48.48786926 269.19897461]
[52.24417114 254.67691040]
[56.00046921 240.15486145]
[43.13690186 232.51902771]
[32.93588257 221.55679321]
[26.23038101 208.15074158]
[23.57147789 193.38352966]
[25.18306732 178.45037842]
[30.94304085 164.56243896]
[40.39249039 152.84851074]
[52.77226257 144.26327515]
[67.08393860 139.50952148]
[82.17036438 138.98063660]
[85.92666626 124.45857239]
[89.68296814 109.93651581]
[86.13245392 96.41299438]
[95.79496765 86.30718994]
[89.93357086 74.81776428]
[93.36116791 62.79964066]
[103.71578217 56.54596329]
[107.68787384 42.08143616]
[111.65997314 27.61691475]
[115.63207245 13.15239048]
[119.60416412 -1.31213379]
[123.57626343 -15.77665806]
[127.54835510 -30.24118233]
[130.97941589 -44.84350586]
[133.86468506 -59.56339645]
[136.74996948 -74.28328705]
[139.63523865 -89.00318146]
[142.52050781 -103.72306824]
[145.40577698 -118.44296265]
[148.29106140 -133.16285706]
[151.17633057 -147.88273621]
[153.18034363 -162.74827576]
[154.29598999 -177.70672607]
[155.41163635 -192.66517639]
[156.52728271 -207.62362671]
[144.85795593 -217.68011475]
[141.38830566 -232.50627136]
[147.24487305 -246.36862183]
[159.98860168 -254.03251648]
[161.10426331 -268.99096680]
[162.21990967 -283.94943237]
[163.33555603 -298.90786743]
[164.45120239 -313.86633301]
[150.25366211 -318.99783325]
[137.96771240 -327.77041626]
[128.50509644 -339.53314209]
[122.56797028 -353.41308594]
[120.59692383 -368.38031006]
[122.73822021 -383.32409668]
[128.83294678 -397.13558960]
[138.42884827 -408.78982544]
[150.81385803 -417.42199707]
[165.06889343 -422.39154053]
[180.13615417 -423.32968140]
[194.89755249 -420.16680908]
[208.25769043 -413.13763428]
[219.22515869 -402.76376343]
[226.98609924 -389.81500244]
[230.96458435 -375.25225830]
[230.86540222 -360.15612793]
[226.69590759 -345.64688110]
[218.76550293 -332.80120850]
[207.66267395 -322.57235718]
[194.21133423 -315.71932983]
[179.40965271 -312.75067139]
[178.29400635 -297.79223633]
[177.17835999 -282.83377075]
[176.06271362 -267.87533569]
[174.94706726 -252.91687012]
[186.41293335 -243.44734192]
[190.14834595 -228.86959839]
[184.51776123 -214.72216797]
[171.48573303 -206.50798035]
[170.37008667 -191.54953003]
[169.25444031 -176.59107971]
[168.13879395 -161.63262939]
[178.82626343 -172.15774536]
[193.64149475 -174.50479126]
[207.05879211 -167.79837036]
[214.07383728 -154.53981018]
[212.07017517 -139.67424011]
[201.79513550 -128.74613953]
[187.08103943 -125.83141327]
[173.41590881 -132.01719666]
[165.89622498 -144.99746704]
[163.01094055 -130.27757263]
[160.12567139 -115.55768585]
[157.24040222 -100.83779907]
[154.35513306 -86.11790466]
[151.46984863 -71.39801788]
[148.58457947 -56.67812347]
[145.69931030 -41.95823288]
[159.41445923 -48.03233719]
[172.78457642 -41.23233414]
[175.95370483 -26.57093620]
[166.58569336 -14.85597801]
[151.58627319 -14.72329044]
[142.01287842 -26.26908493]
[138.04078674 -11.80456161]
[134.06869507 2.65996242]
[130.09658813 17.12448692]
[126.12449646 31.58901024]
[122.15239716 46.05353546]
[118.18030548 60.51805878]
[123.52554321 77.23318481]
[110.31703186 90.06348419]
[113.86754608 103.58700562]
[104.20503235 113.69281006]
[100.44873047 128.21487427]
[96.69242859 142.73693848]
[109.63025665 150.51463318]
[119.84194946 161.61163330]
[126.50622559 175.12283325]
[129.09063721 189.94946289]
[127.39418793 204.88847351]
[121.56284332 218.73013306]
[112.07705688 230.35600281]
[99.71221161 238.82926941]
[85.47521973 243.47032166]
[70.52252960 243.91116333]
[66.76622772 258.43322754]
[63.00992966 272.95526123]
[59.79665375 287.60705566]
[57.13085938 302.36828613]
[54.46506500 317.12948608]
[51.79926682 331.89071655]
[49.13347244 346.65191650]
[54.29504013 361.60748291]
[44.41902161 372.75708008]
[41.75322723 387.51831055]
[39.08743286 402.27951050]
[53.53400421 406.36022949]
[67.51927948 411.81619263]
[80.91268921 418.59646606]
[93.58916473 426.63775635]
[105.43035889 435.86499023]
[116.32570648 446.19198608]
[126.17347717 457.52233887]
[134.88172913 469.75024414]
[142.36914062 482.76156616]
[148.56581116 496.43478394]
[153.41387939 510.64224243]
[156.86808777 525.25128174]
[158.89616394 540.12548828]
[159.47920227 555.12597656]
[158.61174011 570.11279297]
[156.30186462 584.94586182]
[152.57116699 599.48675537]
[147.45446777 613.59967041]
[140.99955750 627.15289307]
[133.26667786 640.01983643]
[124.32804871 652.08032227]
[114.26712799 663.22186279]
[103.17784882 673.34033203]
[91.16375732 682.34130859]
[78.33702850 690.14068604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 185]
[39 184]
[40 183]
[42 181]
[43 180]
[44 179]
[45 178]
[46 177]
[52 176]
[53 175]
[54 174]
[64 164]
[65 163]
[66 162]
[68 160]
[71 158]
[72 157]
[73 156]
[74 155]
[75 154]
[76 153]
[77 152]
[78 146]
[79 145]
[80 144]
[81 143]
[82 142]
[83 141]
[84 140]
[85 139]
[86 130]
[87 129]
[88 128]
[89 127]
[93 123]
[94 122]
[95 121]
[96 120]
[97 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
