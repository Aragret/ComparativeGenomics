%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[125.53750610 827.32739258]
[111.73283386 821.44012451]
[98.42588806 814.50085449]
[85.69670105 806.55126953]
[73.62183380 797.63916016]
[62.27390671 787.81811523]
[51.72116089 777.14721680]
[42.02706528 765.69067383]
[33.24992371 753.51733398]
[25.44252205 740.70043945]
[18.65181732 727.31707764]
[12.91865063 713.44769287]
[8.27750015 699.17578125]
[4.75627899 684.58709717]
[2.37616491 669.76940918]
[1.15147281 654.81188965]
[1.08956778 639.80438232]
[2.19082212 624.83721924]
[4.44861317 610.00042725]
[7.84936094 595.38323975]
[12.37261391 581.07348633]
[17.99116898 567.15728760]
[24.67123222 553.71838379]
[32.37263107 540.83746338]
[41.04904556 528.59216309]
[50.64829636 517.05603027]
[61.11265182 506.29843140]
[72.37917328 496.38409424]
[84.38011169 487.37268066]
[97.04328156 479.31832886]
[110.29251862 472.26950073]
[124.04815674 466.26861572]
[138.22744751 461.35171509]
[152.74513245 457.54840088]
[150.07934570 442.78717041]
[147.41354370 428.02597046]
[144.74775696 413.26473999]
[142.08195496 398.50354004]
[128.01672363 398.17324829]
[114.28446198 395.08941650]
[101.41911316 389.36987305]
[89.92131805 381.23498535]
[80.23895264 370.99908447]
[72.74964905 359.05853271]
[67.74608612 345.87606812]
[65.42455292 331.96316528]
[65.87723541 317.86001587]
[69.08856964 304.11456299]
[74.93577576 291.26135254]
[83.19351959 279.80047607]
[93.54264069 270.17846680]
[105.58243561 262.77059937]
[118.84622192 257.86639404]
[116.62110901 243.03234863]
[114.39598846 228.19830322]
[112.17087555 213.36425781]
[109.94575500 198.53021240]
[107.50003052 183.73094177]
[97.62400818 172.58134460]
[102.78558350 157.62577820]
[100.11978149 142.86456299]
[97.45398712 128.10334778]
[94.78819275 113.34213257]
[85.90407562 102.54564667]
[90.45059204 89.32366180]
[80.31892395 81.34167480]
[78.40246582 68.99214172]
[85.18963623 58.97910690]
[82.74391174 44.17983627]
[80.29818726 29.38056564]
[77.85245514 14.58129501]
[75.40673065 -0.21797615]
[72.96099854 -15.01724720]
[70.51527405 -29.81651878]
[60.63141632 -42.17046356]
[66.19001770 -55.98897171]
[63.74428558 -70.78824615]
[53.86042786 -83.14218903]
[59.41902542 -96.96070099]
[47.40784836 -110.91825104]
[54.22302246 -127.08983612]
[51.55722809 -141.85105896]
[48.89143372 -156.61227417]
[33.84793472 -156.70068359]
[19.07687187 -159.55206299]
[5.08134079 -165.06929016]
[-7.66197491 -173.06445312]
[-18.71904373 -183.26522827]
[-27.71326447 -195.32418823]
[-34.33829880 -208.83061218]
[-38.36850357 -223.32447815]
[-39.66660309 -238.31213379]
[-38.18839264 -253.28308105]
[-33.98421478 -267.72744751]
[-27.19726562 -281.15322876]
[-18.05870438 -293.10317993]
[-6.87978601 -303.17028809]
[5.95873833 -311.01165771]
[20.01959229 -316.36019897]
[34.82387161 -319.03378296]
[49.86734390 -318.94131470]
[64.63764191 -316.08593750]
[78.63168335 -310.56494141]
[91.37284088 -302.56634521]
[102.42716217 -292.36260986]
[111.41812897 -280.30120850]
[118.03952789 -266.79299927]
[122.06581879 -252.29804993]
[123.35987854 -237.31004333]
[121.87763214 -222.33949280]
[117.66956329 -207.89627075]
[110.87899780 -194.47230530]
[101.73721313 -182.52481079]
[90.55558014 -172.46072388]
[77.71494293 -164.62283325]
[63.65264893 -159.27807617]
[66.31844330 -144.51684570]
[68.98423767 -129.75563049]
[78.73963928 -122.60309601]
[81.08135986 -110.32710266]
[74.21829987 -99.40642548]
[83.92722321 -88.11102295]
[78.54355621 -73.23397064]
[80.98928833 -58.43470001]
[90.69820404 -47.13930130]
[85.31454468 -32.26224518]
[87.76026917 -17.46297455]
[90.20600128 -2.66370368]
[92.65172577 12.13556767]
[95.09745789 26.93483734]
[97.54318237 41.73410797]
[99.98890686 56.53337860]
[111.83869171 69.47747803]
[105.21180725 86.65786743]
[114.09592438 97.45435333]
[109.54940796 110.67633820]
[112.21520996 125.43755341]
[114.88100433 140.19877625]
[117.54679871 154.95999146]
[127.61349487 167.16540527]
[122.26124573 181.06513977]
[126.23333740 186.35041809]
[126.84776306 192.00015259]
[124.77980042 196.30509949]
[127.00492096 211.13914490]
[129.23004150 225.97317505]
[131.45515442 240.80722046]
[133.68026733 255.64126587]
[149.62307739 256.74798584]
[164.91891479 261.35452271]
[178.80966187 269.22946167]
[190.60754395 279.97949219]
[199.72914124 293.06893921]
[205.72431946 307.84664917]
[208.29833984 323.57824707]
[207.32644653 339.48260498]
[202.85981750 354.77078247]
[195.12295532 368.68499756]
[184.50236511 380.53628540]
[171.52725220 389.73861694]
[156.84317017 395.83773804]
[159.50897217 410.59896851]
[162.17475891 425.36016846]
[164.84056091 440.12139893]
[167.50634766 454.88259888]
[182.43730164 453.36764526]
[197.44075012 453.01431274]
[212.42646790 453.82467651]
[227.30432129 455.79388428]
[241.98483276 458.91012573]
[256.37969971 463.15460205]
[270.40237427 468.50183105]
[283.96853638 474.91964722]
[296.99652100 482.36944580]
[309.40805054 490.80639648]
[321.12844849 500.17977905]
[332.08724976 510.43325806]
[342.21850586 521.50512695]
[351.46130371 533.32879639]
[359.76007080 545.83312988]
[367.06484985 558.94299316]
[373.33178711 572.57946777]
[378.52313232 586.66058350]
[382.60766602 601.10168457]
[385.56082153 615.81585693]
[387.36489868 630.71466064]
[388.00897217 645.70843506]
[387.48919678 660.70703125]
[385.80871582 675.62023926]
[382.97760010 690.35839844]
[379.01290894 704.83282471]
[373.93844604 718.95654297]
[367.78479004 732.64453125]
[360.58889771 745.81445312]
[352.39407349 758.38714600]
[343.24960327 770.28704834]
[333.21047974 781.44250488]
[322.33706665 791.78643799]
[310.69476318 801.25665283]
[298.35360718 809.79620361]
[285.38778687 817.35375977]
[271.87530518 823.88378906]
[257.89743042 829.34704590]
[243.53823853 833.71069336]
[228.88406372 836.94854736]
[214.02304077 839.04101562]
[199.04455566 839.97558594]
[184.03869629 839.74658203]
[169.09570312 838.35546875]
[154.30545044 835.81054688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 165]
[35 164]
[36 163]
[37 162]
[38 161]
[53 148]
[54 147]
[55 146]
[56 145]
[57 144]
[58 141]
[60 139]
[61 138]
[62 137]
[63 136]
[65 134]
[68 132]
[69 131]
[70 130]
[71 129]
[72 128]
[73 127]
[74 126]
[76 124]
[77 123]
[79 121]
[81 118]
[82 117]
[83 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
