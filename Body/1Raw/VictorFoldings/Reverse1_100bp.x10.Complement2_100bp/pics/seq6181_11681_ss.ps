%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[44.55129242 518.13385010]
[44.14924622 533.18884277]
[40.51978302 547.80529785]
[33.83266449 561.29962158]
[24.40065384 573.04064941]
[12.66490459 582.47918701]
[-0.82568026 589.17382812]
[-15.44012165 592.81146240]
[-30.49487495 593.22186279]
[-45.28580475 590.38592529]
[-59.12110901 584.43627930]
[-71.35368347 575.65118408]
[-81.41139984 564.44152832]
[-88.82382965 551.33160400]
[-93.24427795 536.93457031]
[-94.46600342 521.92388916]
[-92.43185425 507.00155640]
[-87.23697662 492.86550903]
[-79.12434387 480.17697144]
[-68.47339630 469.52935791]
[-55.78229904 461.42071533]
[-41.64463806 456.23028564]
[-26.72165680 454.20083618]
[-11.71132946 455.42727661]
[-15.37392998 440.99002075]
[-3.92818069 430.06732178]
[0.47281730 415.72747803]
[4.87381554 401.38760376]
[9.27481365 387.04776001]
[13.67581177 372.70791626]
[18.07680893 358.36807251]
[16.67032814 353.80398560]
[18.11604500 348.30792236]
[22.82821083 343.67034912]
[27.65420723 329.46789551]
[26.82985878 322.12335205]
[32.65922928 315.09082031]
[37.69614410 300.96179199]
[42.73305893 286.83276367]
[47.76997757 272.70373535]
[52.27760315 258.39706421]
[56.24970245 243.93254089]
[60.22179794 229.46801758]
[52.65440369 216.69029236]
[56.47661972 201.96463013]
[69.93038177 194.11387634]
[73.90247345 179.64935303]
[77.87457275 165.18482971]
[81.84666443 150.72030640]
[85.27772522 136.11798096]
[88.16300201 121.39809418]
[91.04827118 106.67819977]
[93.82388306 91.93724060]
[96.48967743 77.17602539]
[99.15547943 62.41480637]
[100.93794250 47.52108765]
[101.83075714 32.54768372]
[102.72357178 17.57427788]
[103.61638641 2.60087156]
[93.57588959 -6.37704372]
[90.58307648 -19.30969810]
[95.51226044 -31.42519188]
[106.35633087 -38.38476562]
[107.47197723 -53.34321976]
[108.58763123 -68.30167389]
[109.70327759 -83.26012421]
[110.81892395 -98.21858215]
[97.62408447 -103.80408478]
[86.81547546 -113.17752075]
[79.44116974 -125.41245270]
[76.21079254 -139.30584717]
[77.42727661 -153.49635315]
[82.95848083 -166.59770203]
[92.25142670 -177.33413696]
[104.38751984 -184.66464233]
[118.17338562 -187.88386536]
[119.51161957 -202.82405090]
[120.62726593 -217.78251648]
[121.52008057 -232.75592041]
[122.41290283 -247.72932434]
[123.30571747 -262.70272827]
[124.19853210 -277.67614746]
[109.54473877 -283.92962646]
[97.93773651 -294.80450439]
[90.76831818 -308.97247314]
[88.88690948 -324.71228027]
[92.50275421 -340.11865234]
[101.16076660 -353.33306885]
[113.79876709 -362.76791382]
[128.87773132 -367.29711914]
[129.54751587 -382.28216553]
[130.21730042 -397.26721191]
[130.88708496 -412.25222778]
[131.33369446 -427.24560547]
[131.55702209 -442.24392700]
[131.66868591 -457.24349976]
[131.66868591 -472.24349976]
[131.66868591 -487.24349976]
[131.66868591 -502.24349976]
[117.89482117 -508.81948853]
[108.34489441 -520.72583008]
[104.91505432 -535.59863281]
[108.28630066 -550.48474121]
[117.78926849 -562.42864990]
[131.53712463 -569.05877686]
[146.80024719 -569.05877686]
[160.54811096 -562.42864990]
[170.05108643 -550.48474121]
[173.42233276 -535.59863281]
[169.99249268 -520.72583008]
[160.44256592 -508.81948853]
[146.66868591 -502.24349976]
[146.66868591 -487.24349976]
[146.66868591 -472.24349976]
[146.66868591 -457.24349976]
[149.81219482 -450.55468750]
[146.55535889 -442.02059937]
[146.33203125 -427.02227783]
[148.95660400 -423.03219604]
[149.10249329 -417.35101318]
[145.87213135 -411.58245850]
[145.20234680 -396.59741211]
[144.53256226 -381.61236572]
[143.86277771 -366.62734985]
[157.09495544 -361.59518433]
[168.14289856 -352.70898438]
[175.91813660 -340.82723999]
[179.64939880 -327.10437012]
[178.95910645 -312.87857056]
[173.90153503 -299.54132080]
[164.95872498 -288.40127563]
[152.99472046 -280.55590820]
[139.17193604 -276.78332520]
[138.27911377 -261.80990601]
[137.38630676 -246.83650208]
[136.49348450 -231.86309814]
[135.60067749 -216.88969421]
[138.04446411 -212.78640747]
[137.93652344 -207.10438538]
[134.45179749 -201.48582458]
[133.11357117 -186.54563904]
[147.45225525 -180.04246521]
[158.71646118 -169.00376892]
[165.53138733 -154.75108337]
[167.05650330 -138.99974060]
[163.08912659 -123.65241241]
[154.09111023 -110.56928253]
[141.13526917 -101.34260559]
[125.77738190 -97.10292816]
[124.66172791 -82.14447784]
[123.54608154 -67.18602753]
[122.43043518 -52.22756958]
[121.31478119 -37.26911926]
[132.82383728 -25.00614929]
[131.88426208 -7.87629080]
[118.58979797 3.49368739]
[117.69697571 18.46709251]
[116.80416107 33.44049835]
[115.91134644 48.41390610]
[126.44092560 37.73083115]
[141.21957397 35.16347122]
[154.73524475 41.66938400]
[161.94689941 54.82202148]
[160.16479492 69.71578217]
[150.05358887 80.79565430]
[135.38452148 83.92913055]
[121.62879944 77.94748688]
[113.91669464 65.08060455]
[111.25090027 79.84181976]
[108.58509827 94.60303497]
[110.36550140 102.46450806]
[105.76816559 109.56347656]
[102.88288879 124.28337097]
[99.99761963 139.00326538]
[113.71276855 132.92915344]
[127.08288574 139.72915649]
[130.25201416 154.39054871]
[120.88399506 166.10551453]
[105.88458252 166.23820496]
[96.31118774 154.69239807]
[92.33909607 169.15692139]
[88.36699677 183.62145996]
[84.39490509 198.08598328]
[91.95241547 211.70661926]
[87.71809387 226.31910706]
[74.68631744 233.44010925]
[70.71422577 247.90463257]
[66.74212646 262.36914062]
[80.87105560 257.33197021]
[93.69837952 265.10754395]
[95.76827240 279.96405029]
[85.55488586 290.94979858]
[70.58714294 289.96652222]
[61.89900589 277.74066162]
[56.86209106 291.86968994]
[51.82517242 305.99871826]
[46.78825760 320.12774658]
[41.85666275 334.29388428]
[37.03066635 348.49633789]
[32.41665649 362.76907349]
[28.01565933 377.10891724]
[23.61466026 391.44876099]
[19.21366310 405.78860474]
[14.81266403 420.12844849]
[10.41166687 434.46832275]
[13.75947762 449.93124390]
[2.62851763 459.82827759]
[15.74256516 467.23339844]
[26.95782852 477.28485107]
[35.74975204 489.51254272]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 207]
[26 205]
[27 204]
[28 203]
[29 202]
[30 201]
[31 200]
[34 199]
[35 198]
[37 197]
[38 196]
[39 195]
[40 194]
[41 188]
[42 187]
[43 186]
[46 183]
[47 182]
[48 181]
[49 180]
[50 174]
[51 173]
[52 172]
[53 170]
[54 169]
[55 168]
[56 159]
[57 158]
[58 157]
[59 156]
[63 153]
[64 152]
[65 151]
[66 150]
[67 149]
[76 141]
[77 140]
[78 137]
[79 136]
[80 135]
[81 134]
[82 133]
[90 124]
[91 123]
[92 122]
[93 121]
[94 118]
[95 117]
[96 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
