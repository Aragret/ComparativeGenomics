%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[42.69214249 526.08715820]
[38.79064941 540.71783447]
[30.34789848 553.28759766]
[18.27970314 562.43292236]
[3.89512634 567.16186523]
[-11.24549866 566.96136475]
[-25.49983215 561.85327148]
[-37.32166672 552.39160156]
[-45.42866135 539.60278320]
[-48.94143295 524.87390137]
[-47.47893524 509.80273438]
[-41.19981003 496.02407837]
[-30.78517723 485.03253174]
[-17.36473083 478.02038574]
[-2.39422321 475.74822998]
[0.27157235 460.98703003]
[2.93736792 446.22579956]
[5.60316324 431.46459961]
[8.26895905 416.70336914]
[10.93475437 401.94213867]
[13.27024174 387.12509155]
[15.27425480 372.25955200]
[4.47078800 382.66555786]
[-10.22253418 385.68322754]
[-24.25282478 380.37750244]
[-33.27264786 368.39239502]
[-34.48711014 353.44161987]
[-27.51990128 340.15786743]
[-14.52988243 332.65725708]
[0.45784497 333.26388550]
[12.79917145 341.78982544]
[18.67003441 355.59347534]
[22.64212990 341.12893677]
[18.55130196 326.80712891]
[29.66676712 315.54849243]
[25.57593918 301.22668457]
[36.69140625 289.96801758]
[40.66350174 275.50350952]
[44.63559723 261.03897095]
[48.60769272 246.57446289]
[44.51686478 232.25263977]
[55.63233185 220.99400330]
[54.09058380 216.47381592]
[55.37202072 210.93713379]
[59.94401932 206.16131592]
[64.34501648 191.82147217]
[68.74601746 177.48162842]
[73.14701080 163.14178467]
[77.54801178 148.80192566]
[81.94901276 134.46208191]
[77.10381317 117.59522247]
[90.68847656 105.16387177]
[93.68325043 90.46586609]
[95.46571350 75.57215118]
[97.24817657 60.67843246]
[98.58641815 45.73824692]
[99.47923279 30.76484299]
[100.37204742 15.79143620]
[101.26486206 0.81803089]
[102.15767670 -14.15537453]
[92.15809631 -2.97465944]
[77.72991943 1.12748361]
[63.34386063 -3.12003946]
[53.45761108 -14.40108776]
[51.13452530 -29.22010422]
[57.09444046 -42.98525620]
[69.49060822 -51.43126297]
[84.48194122 -51.94103622]
[97.42321777 -44.35661697]
[104.30448151 -31.02786636]
[107.18975830 -45.74775696]
[110.07502747 -60.46765137]
[112.96030426 -75.18753815]
[115.84557343 -89.90743256]
[118.73085022 -104.62732697]
[121.61611938 -119.34721375]
[109.01187134 -127.79758453]
[100.62578583 -140.39585876]
[97.70983124 -155.20500183]
[100.67781067 -169.96232605]
[109.04692078 -182.42518616]
[121.51598358 -190.71180725]
[136.16766357 -193.58534241]
[138.94328308 -208.32630920]
[141.60906982 -223.08752441]
[144.27487183 -237.84873962]
[146.94067383 -252.60995483]
[140.31378174 -269.79034424]
[152.16355896 -282.73443604]
[154.60929871 -297.53372192]
[157.05502319 -312.33297729]
[159.50074768 -327.13226318]
[161.94647217 -341.93151855]
[164.39219666 -356.73080444]
[166.83793640 -371.53005981]
[169.06304932 -386.36410522]
[171.06706238 -401.22964478]
[165.24284363 -415.93981934]
[174.61114502 -427.51928711]
[176.61515808 -442.38479614]
[162.88891602 -448.71578979]
[151.63967896 -458.81262207]
[143.86773682 -471.77749634]
[140.26416016 -486.45761108]
[141.14939880 -501.54760742]
[146.44470215 -515.70568848]
[155.67924500 -527.67291260]
[168.03187561 -536.38519287]
[182.40422058 -541.06781006]
[197.51831055 -541.30444336]
[212.03018188 -537.07397461]
[224.64947510 -528.75262451]
[234.25407410 -517.08026123]
[239.98995972 -503.09490967]
[241.34709167 -488.04000854]
[238.20478821 -473.25430298]
[230.84246826 -460.05249023]
[219.91479492 -449.60848999]
[206.39343262 -442.85095215]
[191.48069763 -440.38079834]
[189.47668457 -425.51525879]
[195.44424438 -411.86837769]
[185.93258667 -399.22561646]
[183.92857361 -384.36010742]
[186.06039429 -380.08642578]
[185.53016663 -374.42816162]
[181.63720703 -369.08435059]
[179.19146729 -354.28506470]
[176.74574280 -339.48580933]
[174.30001831 -324.68652344]
[171.85429382 -309.88726807]
[169.40856934 -295.08798218]
[166.96282959 -280.28872681]
[173.75001526 -270.27569580]
[171.83355713 -257.92614746]
[161.70188904 -249.94416809]
[159.03608704 -235.18293762]
[156.37030029 -220.42172241]
[153.70449829 -205.66050720]
[155.60922241 -198.51951599]
[150.88755798 -190.70007324]
[163.37023926 -182.50787354]
[171.78825378 -170.12715149]
[174.83309937 -155.42701721]
[172.01028442 -140.64123535]
[163.71936035 -128.02876282]
[151.19773865 -119.52865601]
[136.33601379 -116.46194458]
[133.45074463 -101.74205017]
[130.56546021 -87.02216339]
[127.68019104 -72.30226898]
[124.79492188 -57.58237839]
[121.90964508 -42.86248398]
[119.02437592 -28.14259338]
[117.13108063 -13.26255894]
[116.23826599 1.71084678]
[115.34545135 16.68425179]
[114.45263672 31.65765762]
[113.55982208 46.63106537]
[115.31748962 48.81481171]
[116.31604767 51.82637024]
[116.23587036 55.38009644]
[114.86653137 59.08001709]
[112.14189911 62.46089935]
[110.35942841 77.35461426]
[108.57696533 92.24833679]
[118.44703674 80.95312500]
[132.40211487 75.45259857]
[147.32460022 76.97557831]
[159.88076782 85.18183136]
[167.26554871 98.23806000]
[167.82914734 113.22746277]
[161.44566345 126.80138397]
[149.54118347 135.92735291]
[134.77520752 138.56663513]
[120.44647980 134.12957764]
[109.75607300 123.60744476]
[105.09225464 109.35088348]
[110.60897827 121.00972748]
[106.82507324 132.92047119]
[96.28885651 138.86308289]
[91.88785553 153.20292664]
[87.48686218 167.54277039]
[83.08586121 181.88262939]
[78.68486023 196.22247314]
[74.28386688 210.56231689]
[70.09685516 224.96609497]
[73.90357208 240.32250977]
[63.07221603 250.54655457]
[59.10012054 265.01107788]
[55.12802505 279.47561646]
[51.15592957 293.94012451]
[54.96264648 309.29653931]
[44.13129044 319.52059937]
[47.93800735 334.87701416]
[37.10665512 345.10104370]
[33.13455582 359.56555176]
[30.13978386 374.26358032]
[28.13576889 389.12908936]
[30.11999130 393.95712280]
[30.05986404 398.59930420]
[28.36852837 402.30798340]
[25.69597244 404.60794067]
[23.03017616 419.36917114]
[20.36437988 434.13037109]
[17.69858551 448.89160156]
[15.03278923 463.65280151]
[12.36699390 478.41403198]
[25.59708405 485.77905273]
[35.71705627 497.04248047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 208]
[16 207]
[17 206]
[18 205]
[19 204]
[20 203]
[21 199]
[22 198]
[32 197]
[33 196]
[35 194]
[37 192]
[38 191]
[39 190]
[40 189]
[42 187]
[45 186]
[46 185]
[47 184]
[48 183]
[49 182]
[50 181]
[52 178]
[53 166]
[54 165]
[55 164]
[56 159]
[57 158]
[58 157]
[59 156]
[60 155]
[70 154]
[71 153]
[72 152]
[73 151]
[74 150]
[75 149]
[76 148]
[83 141]
[84 139]
[85 138]
[86 137]
[87 136]
[89 133]
[90 132]
[91 131]
[92 130]
[93 129]
[94 128]
[95 127]
[96 124]
[97 123]
[99 121]
[100 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
