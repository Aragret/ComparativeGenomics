%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[134.88862610 647.30950928]
[130.38366699 632.97338867]
[128.01416016 618.13415527]
[127.83061218 603.10803223]
[129.83692932 588.21533203]
[133.99034119 573.77349854]
[140.20233154 560.09033203]
[148.34048462 547.45751953]
[158.23133850 536.14428711]
[169.66407776 526.39178467]
[182.39498901 518.40795898]
[196.15272522 512.36291504]
[192.18063354 497.89840698]
[188.20852661 483.43389893]
[185.84173584 481.93176270]
[183.92735291 479.40158081]
[182.85990906 476.01101685]
[182.96606445 472.06726074]
[184.45808411 467.98953247]
[181.35397339 453.31423950]
[171.15036011 442.46362305]
[175.86436462 427.36099243]
[172.76025391 412.68569946]
[169.65614319 398.01040649]
[166.55203247 383.33511353]
[163.44792175 368.65979004]
[160.34381104 353.98449707]
[157.13053894 339.33270264]
[153.48245239 324.78308105]
[149.51036072 310.31857300]
[145.53825378 295.85403442]
[141.56616211 281.38952637]
[137.59407043 266.92498779]
[124.46194458 255.28392029]
[129.26551819 237.50733948]
[125.07849884 223.10354614]
[120.89148712 208.69976807]
[116.70447540 194.29598999]
[105.72210693 184.23434448]
[109.29976654 168.82295227]
[106.40243530 166.81352234]
[104.33444214 163.30090332]
[103.79169464 158.69018555]
[105.26286316 153.68191528]
[101.72319031 139.10554504]
[98.18351746 124.52916718]
[94.64384460 109.95278931]
[87.71208954 123.25507355]
[74.33711243 130.04550171]
[59.50744247 127.79141235]
[48.75418854 117.33352661]
[46.08803940 102.57237244]
[52.50341034 89.01349640]
[65.60752106 81.71402740]
[80.51287079 83.39649200]
[91.66071320 93.43437195]
[89.87824249 78.54064941]
[88.09577942 63.64693451]
[83.96878052 55.49796677]
[86.39935303 48.51841736]
[84.83882904 33.59981155]
[83.27830505 18.68120766]
[81.71778107 3.76260304]
[80.15725708 -11.15600204]
[76.58927155 -16.72205925]
[76.39675140 -22.40184402]
[78.77917480 -26.54106140]
[77.66352844 -41.49951553]
[76.54788208 -56.45796967]
[74.76541138 -71.35168457]
[72.31968689 -86.15095520]
[69.87395477 -100.95022583]
[67.20816040 -115.71144104]
[64.32289124 -130.43133545]
[61.43761826 -145.15122986]
[58.55234528 -159.87112427]
[46.58351135 -166.04862976]
[40.44746399 -177.81974792]
[42.18562698 -190.78358459]
[50.94136047 -200.23698425]
[40.87466431 -212.44239807]
[46.22690964 -226.34213257]
[43.56111526 -241.10334778]
[40.64007950 -244.31607056]
[39.05294418 -247.92793274]
[38.76138687 -251.47058105]
[39.57892609 -254.53623962]
[41.20349884 -256.82073975]
[39.42103195 -271.71444702]
[37.63856506 -286.60815430]
[35.85609818 -301.50189209]
[34.07363510 -316.39559937]
[19.22899437 -319.30969238]
[6.01239204 -326.67016602]
[-4.28134680 -337.75592041]
[-10.64374542 -351.48089600]
[-12.45148182 -366.50045776]
[-9.52745152 -381.34313965]
[-2.15812159 -394.55480957]
[8.93453598 -404.84112549]
[22.66377640 -411.19433594]
[37.68454742 -412.99200439]
[52.52526855 -410.05801392]
[65.73199463 -402.67984009]
[76.01086426 -391.58029175]
[82.35486603 -377.84680176]
[84.14247131 -362.82482910]
[81.19855499 -347.98608398]
[73.81152344 -334.78430176]
[62.70509338 -324.51284790]
[48.96735001 -318.17807007]
[50.74981689 -303.28433228]
[52.53228378 -288.39062500]
[54.31474686 -273.49691772]
[56.09721375 -258.60317993]
[58.32233047 -243.76914978]
[60.98812866 -229.00793457]
[70.86414337 -217.85833740]
[65.70257568 -202.90277100]
[79.91581726 -193.91264343]
[83.29583740 -177.09329224]
[73.27223969 -162.75639343]
[76.15750885 -148.03649902]
[79.04277802 -133.31660461]
[81.92805481 -118.59671783]
[85.32151794 -115.23614502]
[86.63991547 -109.70813751]
[84.67322540 -103.39595795]
[87.11895752 -88.59667969]
[89.56468201 -73.79740906]
[99.15766144 -85.32888794]
[114.08166504 -86.83686829]
[125.78755188 -77.45752716]
[127.56966400 -62.56376266]
[118.40711975 -50.68741226]
[103.54863739 -48.63177872]
[91.50633240 -57.57361603]
[92.62197876 -42.61516190]
[93.73763275 -27.65670967]
[95.07586670 -12.71652508]
[96.63638306 2.20208001]
[98.19690704 17.12068558]
[99.75743103 32.03929138]
[101.31795502 46.95789337]
[102.98949432 61.86446762]
[104.77196503 76.75818634]
[106.55442810 91.65190125]
[109.22022247 106.41312408]
[112.75989532 120.98949432]
[116.29956818 135.56587219]
[119.83924103 150.14224243]
[123.70354462 164.63594055]
[134.98539734 175.72784424]
[131.10826111 190.10897827]
[135.29527283 204.51275635]
[139.48228455 218.91653442]
[143.66929626 233.32032776]
[154.57638550 240.20495605]
[157.76722717 252.28808594]
[152.05859375 262.95288086]
[156.03068542 277.41741943]
[160.00277710 291.88195801]
[163.97488403 306.34646606]
[167.94697571 320.81100464]
[171.66204834 324.47778320]
[173.42301941 328.77337646]
[173.31761169 332.84817505]
[171.75799561 336.01043701]
[176.71038818 343.68585205]
[175.01911926 350.88037109]
[178.12322998 365.55569458]
[181.22734070 380.23098755]
[184.33145142 394.90628052]
[187.43554688 409.58160400]
[190.53965759 424.25689697]
[200.96530151 436.15719604]
[196.02926636 450.21011353]
[199.13337708 464.88540649]
[202.67304993 479.46179199]
[206.64515686 493.92633057]
[210.61724854 508.39083862]
[225.53277588 506.56192017]
[240.55563354 506.92431641]
[255.36563110 509.47027588]
[269.64709473 514.14556885]
[283.09558105 520.85046387]
[295.42443848 529.44213867]
[306.37091064 539.73742676]
[315.70166016 551.51684570]
[323.21777344 564.52935791]
[328.75906372 578.49761963]
[332.20742798 593.12384033]
[333.48937988 608.09631348]
[332.57754517 623.09588623]
[329.49139404 637.80279541]
[324.29669189 651.90362549]
[317.10418701 665.09771729]
[308.06713867 677.10400391]
[297.37823486 687.66644287]
[285.26528931 696.55993652]
[271.98645020 703.59484863]
[257.82479858 708.62139893]
[243.08219910 711.53228760]
[228.07286072 712.26550293]
[213.11672974 710.80541992]
[198.53257751 707.18322754]
[184.63127136 701.47607422]
[171.70913696 693.80560303]
[160.04158020 684.33532715]
[149.87733459 673.26708984]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 181]
[13 180]
[14 179]
[19 178]
[20 177]
[22 175]
[23 174]
[24 173]
[25 172]
[26 171]
[27 170]
[28 168]
[29 164]
[30 163]
[31 162]
[32 161]
[33 160]
[35 157]
[36 156]
[37 155]
[38 154]
[40 152]
[44 151]
[45 150]
[46 149]
[47 148]
[56 147]
[57 146]
[58 145]
[60 144]
[61 143]
[62 142]
[63 141]
[64 140]
[67 139]
[68 138]
[69 137]
[70 130]
[71 129]
[72 128]
[73 125]
[74 124]
[75 123]
[76 122]
[80 119]
[82 117]
[83 116]
[88 115]
[89 114]
[90 113]
[91 112]
[92 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
