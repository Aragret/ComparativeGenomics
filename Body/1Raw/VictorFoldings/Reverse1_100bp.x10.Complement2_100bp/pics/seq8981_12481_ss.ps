%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[67.88710022 582.13043213]
[54.40237427 588.85791016]
[39.72953033 592.29364014]
[24.65985870 592.25238037]
[10.00604534 588.73638916]
[-3.44164848 581.93518066]
[-14.95800495 572.21557617]
[-23.92196083 560.10180664]
[-29.85010147 546.24707031]
[-32.42273331 531.39855957]
[-31.50111008 516.35699463]
[-27.13494110 501.93365479]
[-19.55968285 488.90631104]
[-9.18386364 477.97747803]
[3.43296313 469.73657227]
[17.61038780 464.62802124]
[32.58384323 462.92730713]
[34.36630630 448.03359985]
[36.14877319 433.13989258]
[37.82031250 418.23330688]
[39.38083649 403.31469727]
[40.94136047 388.39608765]
[42.50188446 373.47750854]
[35.13075638 363.88619995]
[36.30876160 351.44448853]
[45.94736481 342.87359619]
[39.77728271 329.31707764]
[49.09965134 316.53411865]
[50.88211823 301.64041138]
[52.66458130 286.74667358]
[40.92719269 296.08657837]
[25.92951965 295.82244873]
[14.52829456 286.07504272]
[11.93600559 271.30072021]
[19.33781242 258.25415039]
[33.34970856 252.90000916]
[47.56564331 257.68615723]
[55.48667145 270.42623901]
[58.80893326 255.79876709]
[62.13119125 241.17131042]
[65.45345306 226.54385376]
[68.66672516 211.89205933]
[71.77083588 197.21676636]
[66.83480835 183.16383362]
[77.26044464 171.26354980]
[80.36455536 156.58824158]
[83.46865845 141.91294861]
[86.57276917 127.23764038]
[89.67687988 112.56233978]
[83.92377472 102.43598175]
[86.41867065 91.05983734]
[95.88154602 84.27049255]
[99.20380402 69.64303589]
[102.52606964 55.01557159]
[105.84832764 40.38811111]
[109.17058563 25.76065063]
[112.49284363 11.13319111]
[110.90534973 4.71513891]
[112.55044556 -0.72459346]
[116.13791656 -3.87722516]
[119.89421844 -18.39928436]
[123.65052032 -32.92134476]
[127.40682220 -47.44340134]
[131.16311646 -61.96546173]
[122.01064301 -76.87355804]
[126.38577271 -93.46189880]
[141.10891724 -101.59011078]
[144.64859009 -116.16648865]
[148.18826294 -130.74285889]
[151.51051331 -145.37033081]
[154.61462402 -160.04562378]
[156.39709473 -174.93934631]
[156.84370422 -189.93269348]
[157.29031372 -204.92604065]
[157.73690796 -219.91938782]
[158.07188416 -234.91564941]
[158.29521179 -249.91398621]
[158.51853943 -264.91232300]
[158.74186707 -279.91067505]
[158.96519470 -294.90899658]
[157.62696838 -309.84918213]
[154.74169922 -324.56909180]
[151.85641479 -339.28897095]
[141.60911560 -351.34317017]
[146.75382996 -365.32104492]
[143.86856079 -380.04092407]
[128.81008911 -380.62326050]
[114.29196930 -384.66320801]
[101.09716034 -391.94287109]
[89.93722534 -402.06970215]
[81.41402435 -414.49755859]
[75.98718262 -428.55624390]
[73.94937897 -443.48754883]
[75.41049957 -458.48626709]
[80.29175568 -472.74356079]
[88.32990265 -485.49050903]
[99.09145355 -496.03973389]
[111.99604797 -503.82226562]
[126.34776306 -508.41845703]
[141.37261963 -509.58044434]
[156.26036072 -507.24551392]
[170.20811462 -501.53961182]
[182.46366882 -492.77044678]
[192.36611938 -481.41094971]
[199.38142395 -468.07369995]
[203.13127136 -453.47796631]
[203.41342163 -438.41088867]
[200.21267700 -423.68499756]
[193.70162964 -410.09445190]
[184.23143005 -398.37216187]
[172.31277466 -389.15029907]
[158.58843994 -382.92620850]
[161.47372437 -368.20632935]
[171.51464844 -357.20498657]
[166.57630920 -342.17425537]
[169.46157837 -327.45434570]
[172.34686279 -312.73446655]
[177.33857727 -326.87951660]
[187.30612183 -338.08880615]
[200.77084351 -344.69949341]
[215.73533630 -345.73095703]
[229.97970581 -341.03012085]
[241.39089966 -331.29437256]
[248.27612305 -317.96795654]
[249.61398315 -303.02774048]
[245.20603943 -288.69000244]
[235.70616150 -277.08172607]
[222.52362061 -269.92486572]
[207.61395264 -268.28112793]
[193.18893433 -272.39434814]
[181.38841248 -281.65435791]
[173.96353149 -294.68566895]
[173.74020386 -279.68734741]
[173.51687622 -264.68899536]
[173.29354858 -249.69065857]
[173.07022095 -234.69232178]
[176.11380005 -227.95745850]
[172.73027039 -219.47279358]
[172.28366089 -204.47944641]
[171.83705139 -189.48608398]
[171.39044189 -174.49273682]
[179.89125061 -186.85139465]
[192.86923218 -194.37281799]
[207.81855774 -195.60475159]
[221.85273743 -190.30932617]
[232.26200867 -179.50898743]
[237.03648376 -165.28912354]
[235.25430298 -150.39537048]
[227.25955200 -137.70347595]
[214.59593201 -129.66404724]
[199.70854187 -127.82937622]
[185.47195435 -132.55369568]
[174.63499451 -142.92481995]
[169.28993225 -156.94151306]
[166.18582153 -142.26622009]
[167.99388123 -137.84580994]
[167.04426575 -132.24266052]
[162.76463318 -127.20319366]
[159.22496033 -112.62681580]
[155.68528748 -98.05044556]
[163.86282349 -88.09265900]
[164.82627869 -75.04835510]
[158.00048828 -63.66332245]
[145.68518066 -58.20915985]
[141.92887878 -43.68710327]
[138.17257690 -29.16504288]
[134.41627502 -14.64298344]
[130.65997314 -0.12092453]
[127.12030792 14.45545101]
[123.79804993 29.08291054]
[120.47578430 43.71037292]
[117.15352631 58.33782959]
[113.83126831 72.96529388]
[110.50901031 87.59275055]
[115.88227844 103.48313141]
[104.35218811 115.66644287]
[101.24807739 130.34175110]
[98.14396667 145.01704407]
[95.03985596 159.69235229]
[91.93574524 174.36766052]
[96.64974213 189.47026062]
[86.44613647 200.32087708]
[83.34202576 214.99617004]
[84.62779999 224.03965759]
[80.08090973 229.86611938]
[76.75865173 244.49357605]
[73.43639374 259.12103271]
[70.11413574 273.74850464]
[67.55829620 288.52914429]
[65.77583313 303.42285156]
[63.99336624 318.31658936]
[70.03595734 332.93841553]
[60.84108353 344.65606689]
[68.47881317 361.41156006]
[57.42048645 375.03802490]
[55.85996628 389.95663452]
[54.29944229 404.87521362]
[52.73891830 419.79382324]
[54.95855713 428.65447998]
[51.04249191 434.92236328]
[49.26002502 449.81607056]
[47.47755814 464.70977783]
[61.62680435 469.89587402]
[74.19833374 478.20571899]
[84.51416779 489.19116211]
[92.01799011 502.25982666]
[96.30513763 516.70684814]
[97.14440155 531.75317383]
[94.49052429 546.58740234]
[88.48662567 560.40948486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 202]
[18 201]
[19 200]
[20 198]
[21 197]
[22 196]
[23 195]
[26 193]
[28 191]
[29 190]
[30 189]
[38 188]
[39 187]
[40 186]
[41 185]
[42 183]
[43 182]
[45 180]
[46 179]
[47 178]
[48 177]
[49 176]
[52 174]
[53 173]
[54 172]
[55 171]
[56 170]
[57 169]
[60 168]
[61 167]
[62 166]
[63 165]
[64 164]
[67 160]
[68 159]
[69 158]
[70 155]
[71 154]
[72 141]
[73 140]
[74 139]
[75 138]
[76 136]
[77 135]
[78 134]
[79 133]
[80 132]
[81 117]
[82 116]
[83 115]
[85 113]
[86 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
