%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGAUUCGUAUCACAAUCUCAAACCUAAUCACCCGAUAAAAGACGAUCCCCCACCUUCGCCUACUCAUUCUUCUAAGGACGAUGUUGAUAUCACGAACxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[38.83072662 444.25891113]
[44.77436066 458.07604980]
[48.15512466 472.73245239]
[48.86434555 487.75698853]
[46.87922668 502.66668701]
[42.26357651 516.98223877]
[35.16576767 530.24353027]
[25.81397057 542.02416992]
[14.50880527 551.94549561]
[1.61368561 559.68859863]
[-12.45686436 565.00457764]
[-27.25053406 567.72247314]
[-42.29176712 567.75500488]
[-57.09705353 565.10107422]
[-71.19046021 559.84600830]
[-84.11894226 552.15875244]
[-95.46691132 542.28643799]
[-104.86956787 530.54632568]
[-112.02465820 517.31585693]
[-116.70217133 503.02041626]
[-118.75175476 488.11941528]
[-118.10751343 473.09194946]
[-114.79016113 458.42108154]
[-108.90633392 444.57836914]
[-100.64517975 432.00885010]
[-90.27225494 421.11654663]
[-78.12100983 412.25161743]
[-64.58204651 405.69903564]
[-50.09059906 401.66943359]
[-35.11249924 400.29235840]
[-20.12923813 401.61203003]
[-5.62245941 405.58612061]
[0.85703635 392.05776978]
[7.33653212 378.52941895]
[13.81602764 365.00106812]
[20.19463348 351.42486572]
[26.47199440 337.80154419]
[32.74935532 324.17822266]
[39.02671432 310.55490112]
[44.68950272 296.66488647]
[49.72641754 282.53585815]
[54.76333237 268.40682983]
[59.80025101 254.27780151]
[64.83716583 240.14877319]
[69.87408447 226.01974487]
[69.15917206 218.66374207]
[75.09259796 211.71879578]
[80.33931732 197.66632080]
[83.77037811 183.06399536]
[85.33090210 168.14540100]
[86.89142609 153.22679138]
[72.44464111 147.38806152]
[60.22434998 137.72033691]
[51.21796417 125.00478363]
[46.15320206 110.26882172]
[45.43930435 94.70312500]
[49.13395691 79.56542969]
[56.93862152 66.07885742]
[68.22267914 55.33314133]
[82.07437134 48.19654465]
[97.37446594 45.24570465]
[98.71269989 30.30552101]
[100.05093384 15.36533546]
[87.64750671 8.59026814]
[78.78998566 -2.36731553]
[74.79000854 -15.83229542]
[76.21983337 -29.76234055]
[82.83073425 -42.05767822]
[93.59553528 -50.87760162]
[106.86804199 -54.91602325]
[108.42855835 -69.83462524]
[109.98908234 -84.75323486]
[111.54960632 -99.67183685]
[99.24547577 -91.09230042]
[84.45491028 -93.59012604]
[75.65061188 -105.73443604]
[77.87608337 -120.56842804]
[89.85647583 -129.59451294]
[104.72887421 -127.64213562]
[113.97343445 -115.83063507]
[116.85871124 -130.55052185]
[119.74398041 -145.27041626]
[120.97095490 -160.22015381]
[120.52435303 -175.21350098]
[120.07774353 -190.20684814]
[119.63114166 -205.20019531]
[119.18453217 -220.19354248]
[118.73793030 -235.18690491]
[105.31892395 -242.52703857]
[97.42775726 -255.51264954]
[97.09810638 -270.60430908]
[104.31840515 -283.74670410]
[117.06176758 -291.45855713]
[116.61516571 -306.45190430]
[113.23163605 -314.93655396]
[116.27519989 -321.67144775]
[116.05187225 -336.66976929]
[101.80880737 -341.91375732]
[90.42448425 -351.95178223]
[83.43852997 -365.42623901]
[81.79575348 -380.51483154]
[85.71830750 -395.17694092]
[94.67572021 -407.42968750]
[107.45655823 -415.61593628]
[122.33232117 -418.62857056]
[137.29119873 -416.06018066]
[150.31010437 -408.25808716]
[159.62834167 -396.27749634]
[163.98571777 -381.73864746]
[162.79290771 -366.60781860]
[156.21124268 -352.93136597]
[145.13082886 -342.55883789]
[131.05021667 -336.89309692]
[131.27354431 -321.89477539]
[131.60852051 -306.89849854]
[132.05511475 -291.90515137]
[145.23490906 -284.96548462]
[153.22465515 -272.27612305]
[153.79385376 -257.19161987]
[146.68959045 -243.75933838]
[133.73127747 -235.63349915]
[134.17788696 -220.64015198]
[134.62449646 -205.64680481]
[135.07109070 -190.65345764]
[135.51770020 -175.66011047]
[135.96430969 -160.66674805]
[142.99589539 -173.91653442]
[154.29121399 -183.78648376]
[168.36416626 -188.97804260]
[183.36320496 -188.80815125]
[197.31494141 -183.29919434]
[208.38381958 -173.17593384]
[215.11349487 -159.77029419]
[216.61860657 -144.84599304]
[212.70109558 -130.36659241]
[203.87638855 -118.23709869]
[191.30554199 -110.05335999]
[176.64244080 -106.89208221]
[161.81628418 -109.16918945]
[148.77770996 -116.58509064]
[139.24217224 -128.16409302]
[134.46386719 -142.38514709]
[131.57859802 -127.66525269]
[128.69332886 -112.94535828]
[126.46820831 -98.11131287]
[124.90769196 -83.19271088]
[123.34716797 -68.27410889]
[121.78664398 -53.35549927]
[135.54266357 -45.22393799]
[144.40769958 -31.85887527]
[146.56463623 -15.90797520]
[141.53137207 -0.55784637]
[130.26733398 11.10256767]
[114.99111938 16.70356941]
[113.65288544 31.64375496]
[112.31465149 46.58393860]
[125.72977448 51.59643936]
[137.38880920 59.91255188]
[146.49598694 70.96469116]
[152.42974854 83.99853516]
[154.78511047 98.12450409]
[153.40130615 112.37847137]
[148.37278748 125.78759766]
[140.04273987 137.43667603]
[128.97972107 146.53065491]
[115.93880463 152.44883728]
[101.81002808 154.78732300]
[100.24950409 169.70591736]
[98.68898773 184.62452698]
[107.14368439 172.23428345]
[119.12387848 163.20793152]
[133.36524963 158.49803162]
[148.36489868 158.60165405]
[162.53985596 163.50782776]
[174.39421082 172.69882202]
[182.67694092 185.20466614]
[186.51396179 199.70561218]
[185.50033569 214.67132568]
[179.74302673 228.52243042]
[169.84962463 239.79721069]
[156.86421204 247.30580139]
[142.15715027 250.25579834]
[127.28052521 248.33589172]
[113.80430603 241.74867249]
[103.15065765 231.18933105]
[96.44388580 217.77220154]
[94.39179230 202.91304016]
[89.14507294 216.96551514]
[84.00311279 231.05665588]
[78.96619415 245.18568420]
[73.92928314 259.31472778]
[68.89236450 273.44375610]
[63.85544586 287.57278442]
[58.81853104 301.70181274]
[72.79975128 296.26806641]
[86.58318329 302.18560791]
[92.27304077 316.06457520]
[86.60991669 329.95443726]
[72.83791351 335.89852905]
[58.84625244 330.49172974]
[52.65003204 316.83227539]
[46.37266922 330.45559692]
[40.09531021 344.07891846]
[33.81794739 357.70220947]
[33.06880569 366.80587769]
[27.34437370 371.48056030]
[20.86487770 385.00891113]
[14.38538170 398.53726196]
[7.90588617 412.06561279]
[20.09535789 420.87789917]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 209]
[33 208]
[34 207]
[35 206]
[36 204]
[37 203]
[38 202]
[39 201]
[40 194]
[41 193]
[42 192]
[43 191]
[44 190]
[45 189]
[47 188]
[48 187]
[49 169]
[50 168]
[51 167]
[61 156]
[62 155]
[63 154]
[70 148]
[71 147]
[72 146]
[73 145]
[80 144]
[81 143]
[82 142]
[83 126]
[84 125]
[85 124]
[86 123]
[87 122]
[88 121]
[93 116]
[94 115]
[96 114]
[97 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
