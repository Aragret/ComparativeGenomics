%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[74.76177979 551.56134033]
[63.78765869 541.23339844]
[55.49162674 528.65277100]
[50.32107544 514.49786377]
[48.55485153 499.53198242]
[50.28820419 484.56228638]
[55.42765045 470.39602661]
[63.69603348 457.79718018]
[74.64744568 447.44522095]
[87.69129181 439.89837646]
[102.12413025 435.56365967]
[101.23131561 420.59024048]
[100.33850098 405.61685181]
[99.44568634 390.64343262]
[97.99626923 375.71362305]
[95.99225616 360.84811401]
[93.98824310 345.98257446]
[91.98423004 331.11703491]
[80.95255280 341.28082275]
[66.10552979 339.14398193]
[58.38784409 326.28173828]
[63.48867416 312.17565918]
[77.64788818 307.22421265]
[90.42693329 315.07604980]
[89.53411102 300.10263062]
[88.64129639 285.12924194]
[87.74848175 270.15582275]
[86.85566711 255.18241882]
[76.11507416 265.65332031]
[61.11516571 265.60049438]
[50.44857407 255.05422974]
[50.22560501 240.05589294]
[60.57398605 229.19720459]
[75.56569672 228.69853210]
[86.61239624 238.84466553]
[87.05899811 223.85131836]
[87.50560760 208.85795593]
[80.15067291 195.90596008]
[88.29542542 182.34228516]
[88.74203491 167.34892273]
[89.18863678 152.35557556]
[89.63524628 137.36222839]
[90.08184814 122.36888123]
[79.87501526 133.36071777]
[65.17935181 136.36695862]
[51.47597885 130.26634216]
[43.87591171 117.33425140]
[45.21379089 102.39403534]
[54.99061966 91.01802063]
[69.55988312 87.44918823]
[83.48760986 93.01861572]
[91.57939148 105.65018463]
[89.56571960 97.84520721]
[93.94965363 90.61250305]
[96.39537811 75.81323242]
[98.84111023 61.01396179]
[101.28683472 46.21469116]
[91.21111298 57.32683945]
[77.34460449 63.04697037]
[62.36470795 62.27061462]
[49.16381073 55.14767075]
[40.29079819 43.05347061]
[37.45891190 28.32321739]
[41.21493912 13.80108738]
[50.83365631 2.29107881]
[64.45783997 -3.98440623]
[79.45686340 -3.81366992]
[92.93466187 2.77032113]
[102.28887939 14.49630165]
[105.71337891 29.10144234]
[110.75028992 14.97241306]
[115.78720856 0.84338403]
[120.82412720 -13.28564548]
[107.73106384 -5.96636581]
[92.82319641 -7.62627792]
[81.66077423 -17.64627457]
[78.40711212 -32.28914642]
[84.27574158 -46.09346390]
[97.07781219 -53.91055679]
[112.03846741 -52.82484436]
[123.57775879 -43.24126816]
[127.39173889 -28.73310089]
[134.07192993 -42.16347504]
[140.75212097 -55.59385300]
[147.43232727 -69.02423096]
[151.93995667 -83.33091736]
[154.16506958 -98.16496277]
[156.39018250 -112.99900055]
[158.61529541 -127.83304596]
[153.01074219 -142.62829590]
[162.55041504 -154.06700134]
[164.77552795 -168.90104675]
[167.00065613 -183.73509216]
[165.26855469 -187.71676636]
[164.92787170 -191.64723206]
[165.79159546 -195.09532166]
[167.55198669 -197.73495483]
[169.82518005 -199.37528992]
[172.92929077 -214.05059814]
[176.03340149 -228.72590637]
[162.45597839 -235.27699280]
[150.84129333 -244.88754272]
[141.86465454 -256.99884033]
[136.04791260 -270.90670776]
[133.72926331 -285.80258179]
[135.04351807 -300.82043457]
[139.91424561 -315.08715820]
[148.05828857 -327.77331543]
[159.00215149 -338.14129639]
[172.10957336 -345.58837891]
[186.61851501 -349.68154907]
[201.68544006 -350.18286133]
[216.43437195 -347.06317139]
[230.00782776 -340.50387573]
[241.61668396 -330.88626099]
[250.58598328 -318.76956177]
[256.39428711 -304.85815430]
[258.70388794 -289.96087646]
[257.38055420 -274.94378662]
[252.50115967 -260.68002319]
[244.34944153 -247.99884033]
[233.39929199 -237.63748169]
[220.28735352 -230.19836426]
[205.77592468 -226.11398315]
[190.70870972 -225.62179565]
[187.60459900 -210.94648743]
[184.50048828 -196.27117920]
[181.83468628 -181.50996399]
[179.60957336 -166.67591858]
[177.38446045 -151.84187317]
[183.14817810 -138.10766602]
[173.44934082 -125.60793304]
[171.22422791 -110.77388763]
[168.99911499 -95.93984222]
[166.77400208 -81.10579681]
[175.45378113 -93.33941650]
[187.07743835 -102.82048035]
[200.80584717 -108.86454773]
[215.64793396 -111.03529358]
[230.53225708 -109.17601013]
[244.38429260 -103.42091370]
[256.20404053 -94.18547058]
[265.13824463 -82.13639832]
[270.54193115 -68.14353180]
[272.02499390 -53.21702957]
[269.48034668 -38.43444443]
[263.09173584 -24.86294174]
[253.32034302 -13.48226547]
[240.87156677 -5.11399317]
[226.64410400 -0.36223862]
[211.66503906 0.42996481]
[197.01573181 -2.79457259]
[183.75370789 -9.80306816]
[172.83639526 -20.08957481]
[165.05191040 -32.91149521]
[160.96220398 -47.34321213]
[160.86270142 -62.34403229]
[154.18251038 -48.91365814]
[147.50230408 -35.48328400]
[140.82211304 -22.05290604]
[134.95315552 -8.24872971]
[129.91624451 5.88030005]
[124.87931824 20.00932884]
[119.84240723 34.13835907]
[116.08610535 48.66041946]
[113.64038086 63.45969009]
[111.19464874 78.25895691]
[108.74892426 93.05822754]
[106.41343689 107.87529755]
[105.07520294 122.81548309]
[104.62859344 137.80883789]
[104.18199158 152.80218506]
[103.73538208 167.79553223]
[103.28878021 182.78887939]
[110.61176300 196.81330872]
[102.49895477 209.30456543]
[102.05235291 224.29791260]
[101.60574341 239.29127502]
[101.82907104 254.28961182]
[102.72188568 269.26300049]
[103.61470795 284.23641968]
[104.50752258 299.20980835]
[105.40033722 314.18322754]
[106.84975433 329.11303711]
[108.85376740 343.97857666]
[110.85778046 358.84408569]
[112.86179352 373.70962524]
[123.89347076 363.54586792]
[138.74049377 365.68270874]
[146.45817566 378.54492188]
[141.35734558 392.65103149]
[127.19813538 397.60244751]
[114.41909027 389.75064087]
[115.31190491 404.72402954]
[116.20472717 419.69744873]
[117.09754181 434.67083740]
[131.94322205 437.25976562]
[145.79144287 443.20312500]
[157.89538574 452.18038940]
[167.60232544 463.70739746]
[174.38874817 477.16256714]
[177.88868713 491.82022095]
[177.91337585 506.88992310]
[174.46151733 521.55902100]
[167.71923828 535.03631592]
[158.05014038 546.59509277]
[145.97567749 555.61199951]
[132.14701843 561.60070801]
[117.30990601 564.23828125]
[102.26449585 563.38250732]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 196]
[12 195]
[13 194]
[14 193]
[15 187]
[16 186]
[17 185]
[18 184]
[24 183]
[25 182]
[26 181]
[27 180]
[28 179]
[35 178]
[36 177]
[37 176]
[39 174]
[40 173]
[41 172]
[42 171]
[43 170]
[52 169]
[54 168]
[55 167]
[56 166]
[57 165]
[70 164]
[71 163]
[72 162]
[73 161]
[82 160]
[83 159]
[84 158]
[85 157]
[86 135]
[87 134]
[88 133]
[89 132]
[91 130]
[92 129]
[93 128]
[98 127]
[99 126]
[100 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
