%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[17.88061142 598.41998291]
[17.23825645 583.35845947]
[20.21972466 568.58093262]
[26.65167999 554.94665527]
[36.16017151 543.24829102]
[48.19239426 534.16595459]
[62.04880905 528.22766113]
[59.60308075 513.42840576]
[49.89415741 502.13299561]
[55.27782059 487.25595093]
[52.83209610 472.45666504]
[50.38636780 457.65740967]
[47.94063950 442.85812378]
[40.03870392 455.60800171]
[26.19572258 461.38482666]
[11.57477951 458.03399658]
[1.62912869 446.80529785]
[0.06825078 431.88671875]
[7.47431469 418.84255981]
[21.08504295 412.53796387]
[35.82396698 415.32437134]
[46.19434738 426.16357422]
[45.52456284 411.17852783]
[44.85477829 396.19351196]
[44.18499374 381.20846558]
[43.51520920 366.22341919]
[37.20711899 379.83255005]
[27.21261978 391.01779175]
[14.39632797 398.81155396]
[-0.13301648 402.53958130]
[-15.11847973 401.87936401]
[-29.26366997 396.88800049]
[-41.34488678 387.99731445]
[-50.31698227 375.97644043]
[-55.40378189 361.86529541]
[-56.16522598 346.88464355]
[-52.53544235 332.33044434]
[-44.82844543 319.46179199]
[-33.71096420 309.39193726]
[-20.14477539 302.99206543]
[-5.30348778 300.81579590]
[9.52897930 303.05139160]
[23.06946754 309.50549316]
[34.14659119 319.61968994]
[41.80206299 332.51907349]
[45.37329102 347.08416748]
[48.91296387 332.50778198]
[52.45263672 317.93139648]
[55.99230576 303.35504150]
[59.53197861 288.77865601]
[51.58750153 276.23190308]
[54.96958542 261.39895630]
[68.18363190 253.15113831]
[71.72330475 238.57476807]
[74.60858154 223.85487366]
[76.83369446 209.02082825]
[71.06997681 195.28660583]
[80.76880646 182.78688049]
[82.99392700 167.95283508]
[85.21903992 153.11878967]
[87.44416046 138.28474426]
[89.66927338 123.45069885]
[91.56256866 108.57066345]
[92.90080261 93.63047791]
[94.01644897 78.67202759]
[95.13209534 63.71357346]
[96.24774933 48.75511932]
[97.36339569 33.79666901]
[98.47904205 18.83821297]
[99.59469604 3.87976027]
[97.11222839 -4.91086912]
[100.83993530 -11.29255867]
[102.17816925 -26.23274422]
[91.14852905 -34.49941254]
[85.68719482 -47.03704834]
[87.12262726 -60.52812576]
[94.97353363 -71.46006775]
[107.10237122 -77.03980255]
[108.66289520 -91.95841217]
[110.22341919 -106.87701416]
[103.96380615 -121.40724945]
[112.98320007 -133.26051331]
[106.72357941 -147.79074097]
[115.74298096 -159.64401245]
[117.30349731 -174.56260681]
[118.86402130 -189.48121643]
[120.42454529 -204.39982605]
[110.74734497 -216.60594177]
[112.54245758 -231.71330261]
[124.23876953 -240.86381531]
[125.79929352 -255.78242493]
[127.35981750 -270.70101929]
[128.36407471 -285.66735840]
[128.81068420 -300.66070557]
[129.25729370 -315.65408325]
[121.93430328 -329.67849731]
[130.04710388 -342.16973877]
[130.49371338 -357.16311646]
[116.40103149 -362.74630737]
[105.06986237 -372.81509399]
[97.86850739 -386.15359497]
[95.66655731 -401.15118408]
[98.72991943 -415.99676514]
[106.68866730 -428.89770508]
[118.58175659 -438.29614258]
[132.97302246 -443.05712891]
[148.12466431 -442.60580444]
[162.20703125 -436.99667358]
[173.51962280 -426.90701294]
[180.69638062 -413.55523682]
[182.87069702 -398.55364990]
[179.77998352 -383.71371460]
[171.79747009 -370.82745361]
[159.88708496 -361.45098877]
[145.48706055 -356.71649170]
[145.04046631 -341.72314453]
[152.39538574 -328.77114868]
[144.25064087 -315.20745850]
[143.80403137 -300.21411133]
[143.35742188 -285.22076416]
[155.89866638 -293.44982910]
[170.19859314 -288.92080688]
[175.71583557 -274.97232056]
[168.38328552 -261.88668823]
[153.60623169 -259.31015015]
[142.27842712 -269.14050293]
[140.71789551 -254.22189331]
[139.15737915 -239.30329895]
[148.70689392 -227.93041992]
[147.33682251 -212.77859497]
[135.34315491 -202.83929443]
[133.78262329 -187.92070007]
[132.22210693 -173.00209045]
[130.66157532 -158.08348083]
[137.03282166 -144.62033081]
[127.90180206 -131.69998169]
[134.27304077 -118.23683167]
[125.14202118 -105.31649017]
[123.58150482 -90.39788818]
[122.02098083 -75.47927856]
[134.57109070 -64.89759064]
[138.37913513 -48.75880432]
[131.75155640 -33.37776184]
[117.11835480 -24.89451027]
[115.78012085 -9.95432472]
[114.55314636 4.99540901]
[113.43750000 19.95386314]
[112.32184601 34.91231537]
[111.20619965 49.87076950]
[110.09055328 64.82922363]
[108.97490692 79.78767395]
[107.85925293 94.74613190]
[110.29347229 99.39247894]
[109.95115662 105.07192230]
[106.48117065 110.13118744]
[108.60826111 114.89801025]
[108.68637848 119.53990173]
[107.10621643 123.29731750]
[104.50331879 125.67581940]
[102.27819824 140.50985718]
[100.05308533 155.34390259]
[97.82796478 170.17794800]
[95.60285187 185.01199341]
[101.20741272 199.80725098]
[91.66773987 211.24594116]
[89.44261932 226.07998657]
[102.11757660 218.05841064]
[116.78185272 221.21418762]
[125.03510284 233.73951721]
[122.14947510 248.45933533]
[109.77799988 256.94146729]
[95.00760651 254.32695007]
[86.29968262 242.11444092]
[82.76000977 256.69079590]
[90.71970367 270.08038330]
[86.92233276 284.81250000]
[74.10835266 292.31832886]
[70.56867981 306.89471436]
[67.02900696 321.47106934]
[63.48933792 336.04745483]
[59.94966507 350.62384033]
[58.50024796 365.55364990]
[59.17003250 380.53866577]
[59.83981705 395.52371216]
[60.50960159 410.50875854]
[61.17938614 425.49380493]
[62.73991013 440.41238403]
[65.18563843 455.21166992]
[67.63136292 470.01092529]
[70.07709503 484.81021118]
[79.96095276 497.16415405]
[74.40235138 510.98266602]
[76.84808350 525.78192139]
[91.87829590 526.94641113]
[106.19286346 531.67468262]
[118.95954895 539.69189453]
[129.43611145 550.53186035]
[137.01347351 563.56439209]
[141.25108337 578.03179932]
[141.90255737 593.09295654]
[138.93005371 607.87225342]
[132.50636292 621.51043701]
[123.00496674 633.21459961]
[110.97825623 642.30419922]
[97.12544250 648.25091553]
[82.25192261 650.70892334]
[67.22241211 649.53533936]
[52.91071320 644.79833984]
[40.14889145 636.77343750]
[29.67889595 625.92712402]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 193]
[8 192]
[10 190]
[11 189]
[12 188]
[13 187]
[22 186]
[23 185]
[24 184]
[25 183]
[26 182]
[46 181]
[47 180]
[48 179]
[49 178]
[50 177]
[53 174]
[54 173]
[55 166]
[56 165]
[58 163]
[59 162]
[60 161]
[61 160]
[62 159]
[63 155]
[64 152]
[65 151]
[66 150]
[67 149]
[68 148]
[69 147]
[70 146]
[72 145]
[73 144]
[78 140]
[79 139]
[80 138]
[82 136]
[84 134]
[85 133]
[86 132]
[87 131]
[90 128]
[91 127]
[92 126]
[93 120]
[94 119]
[95 118]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
