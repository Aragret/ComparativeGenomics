%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAUGCGGGAGAGUCGGCUACUUGUCAACCUUAUCCAACAAUCGCCAUUGAUUCUAAUCAUACCAUUAAUCCUUCUACUCAUCUAUAAACUUCUUGACxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[192.52857971 616.61279297]
[193.47128296 601.58197021]
[197.62355042 587.10534668]
[204.79119873 573.86004639]
[214.63896179 562.46545410]
[226.70625305 553.45465088]
[240.42864990 547.24908447]
[237.32453918 532.57373047]
[234.22042847 517.89843750]
[231.11631775 503.22314453]
[213.63792419 496.60510254]
[203.59971619 480.66259766]
[205.21115112 461.74136353]
[218.00141907 447.50253296]
[207.32348633 437.11837769]
[211.35841370 421.82034302]
[207.60211182 407.29827881]
[203.84580994 392.77621460]
[200.08952332 378.25415039]
[196.33322144 363.73208618]
[192.57691956 349.21002197]
[181.89898682 338.82586670]
[185.93391418 323.52783203]
[171.09138489 315.61972046]
[166.46975708 299.09835815]
[175.39926147 284.05563354]
[171.42716980 269.59112549]
[166.18045044 255.53865051]
[159.70095825 242.01029968]
[153.22146606 228.48196411]
[146.74195862 214.95361328]
[140.26246643 201.42526245]
[133.78297424 187.89692688]
[119.69311523 183.20529175]
[112.92926788 169.57792664]
[117.94581604 154.83099365]
[111.46632385 141.30264282]
[104.98682404 127.77430725]
[98.50733185 114.24595642]
[87.08138275 106.18746185]
[87.96432495 92.23353577]
[82.73445892 88.18878174]
[80.64588165 82.90343475]
[81.50004578 78.20455933]
[75.42620850 64.48929596]
[62.76360321 55.00409317]
[64.68465424 40.23389435]
[58.61082458 26.51862717]
[52.53698730 12.80336094]
[38.31473541 13.56398582]
[24.71561813 9.43297386]
[13.36725140 0.92605519]
[5.62057781 -10.91859913]
[2.38907051 -24.66703796]
[4.04105234 -38.66312408]
[10.35783672 -51.22802734]
[20.56242943 -60.86159515]
[14.69346905 -74.66577148]
[2.17348671 -84.33844757]
[4.31423378 -99.07840729]
[-1.55472720 -112.88258362]
[-7.42368793 -126.68675995]
[-12.46772861 -130.96101379]
[-14.31822109 -136.33433533]
[-13.25509548 -140.99038696]
[-18.71045303 -154.96319580]
[-24.16580963 -168.93598938]
[-29.72503471 -182.86778259]
[-35.38782120 -196.75781250]
[-41.05060959 -210.64784241]
[-46.71339417 -224.53787231]
[-52.37618256 -238.42788696]
[-66.98234558 -234.88984680]
[-81.95269012 -233.56837463]
[-96.95278168 -234.49296570]
[-111.64751434 -237.64297485]
[-125.70859528 -242.94802856]
[-138.82189941 -250.28962708]
[-150.69445801 -259.50372314]
[-161.06106567 -270.38452148]
[-169.69009399 -282.68887329]
[-176.38877869 -296.14196777]
[-181.00747681 -310.44320679]
[-183.44299316 -325.27310181]
[-183.64093018 -340.30035400]
[-181.59684753 -355.18923950]
[-177.35643005 -369.60717773]
[-171.01440430 -383.23202515]
[-162.71244812 -395.75939941]
[-152.63603210 -406.90945435]
[-141.01026917 -416.43307495]
[-128.09487915 -424.11749268]
[-114.17840576 -429.79107666]
[-99.57173920 -433.32702637]
[-84.60120392 -434.64636230]
[-69.60124207 -433.71963501]
[-54.90696335 -430.56753540]
[-40.84663773 -425.26046753]
[-27.73438263 -417.91702271]
[-15.86312771 -408.70120239]
[-5.49808264 -397.81896973]
[3.12919402 -385.51336670]
[9.82596588 -372.05932617]
[14.44262409 -357.75744629]
[16.87602997 -342.92718506]
[17.07182312 -327.89990234]
[15.02562714 -313.01129150]
[10.78315544 -298.59396362]
[4.43918562 -284.97003174]
[-3.86455441 -272.44384766]
[-13.94255638 -261.29522705]
[-25.56967545 -251.77326965]
[-38.48615646 -244.09068298]
[-32.82336807 -230.20065308]
[-27.16058159 -216.31062317]
[-21.49779510 -202.42059326]
[-15.83500862 -188.53057861]
[-10.39896774 -183.52345276]
[-10.19301224 -174.39134216]
[-4.73765469 -160.41854858]
[0.71770227 -146.44575500]
[6.38048887 -132.55572510]
[12.24944973 -118.75154114]
[18.11841011 -104.94736481]
[30.21860504 -96.26206207]
[28.49764633 -80.53472900]
[34.36660767 -66.73055267]
[50.20873642 -67.12162781]
[65.02397156 -61.38945770]
[76.53305817 -50.38418961]
[82.95322418 -35.76963425]
[83.27429962 -19.77173996]
[77.41754913 -4.83959246]
[66.25225830 6.72952700]
[72.32608795 20.44479370]
[78.39992523 34.16006088]
[90.62808990 42.66424942]
[89.14147949 58.41545868]
[95.21530914 72.13072205]
[101.49266815 85.75404358]
[112.91861725 93.81253815]
[112.03567505 107.76646423]
[118.51516724 121.29480743]
[124.99466705 134.82315063]
[131.47416687 148.35150146]
[146.10897827 153.68626404]
[152.48739624 167.49824524]
[147.31132507 181.41741943]
[153.79081726 194.94577026]
[160.27030945 208.47412109]
[166.74980164 222.00245667]
[173.22930908 235.53080750]
[179.70880127 249.05915833]
[181.59483337 234.17819214]
[189.67790222 221.54237366]
[202.39730835 213.59147644]
[217.29711914 211.86068726]
[231.50042725 216.68420410]
[242.26477051 227.13067627]
[247.51174927 241.18304443]
[246.22825623 256.12802124]
[238.66209412 269.07998657]
[226.27416992 277.53808594]
[211.45642090 279.86923218]
[197.06990051 275.62326050]
[185.89169312 265.61901855]
[189.86378479 280.08355713]
[202.25894165 285.35375977]
[209.25347900 296.63589478]
[208.48434448 309.69308472]
[200.45597839 319.77151489]
[211.40257263 331.19442749]
[207.09896851 345.45373535]
[210.85527039 359.97579956]
[214.61157227 374.49786377]
[218.36787415 389.01989746]
[222.12417603 403.54196167]
[225.88047791 418.06402588]
[236.82708740 429.48690796]
[232.52348328 443.74624634]
[243.75778198 446.02764893]
[253.28640747 452.30822754]
[259.75384521 461.64871216]
[262.25720215 472.67782593]
[260.47219849 483.79379272]
[254.69450378 493.39672852]
[245.79162598 500.11904907]
[248.89573669 514.79431152]
[251.99984741 529.46966553]
[255.10395813 544.14495850]
[270.16384888 544.26257324]
[284.84625244 547.61529541]
[298.46447754 554.04632568]
[310.38156128 563.25488281]
[320.04010010 574.81024170]
[326.98834229 588.17193604]
[330.90136719 602.71508789]
[331.59609985 617.75939941]
[329.04003906 632.60125732]
[323.35278320 646.54644775]
[314.80032349 658.94281006]
[303.78262329 669.21044922]
[290.81506348 676.86920166]
[276.50411987 681.56079102]
[261.51916504 683.06585693]
[246.56106567 681.31390381]
[232.32943726 676.38702393]
[219.48991394 668.51550293]
[208.64302063 658.06756592]
[200.29611206 645.53186035]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 190]
[8 189]
[9 188]
[10 187]
[14 180]
[16 178]
[17 177]
[18 176]
[19 175]
[20 174]
[21 173]
[23 171]
[26 167]
[27 166]
[28 153]
[29 152]
[30 151]
[31 150]
[32 149]
[33 148]
[36 145]
[37 144]
[38 143]
[39 142]
[41 140]
[44 139]
[45 138]
[47 136]
[48 135]
[49 134]
[57 127]
[58 126]
[60 124]
[61 123]
[62 122]
[65 121]
[66 120]
[67 119]
[68 117]
[69 116]
[70 115]
[71 114]
[72 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
