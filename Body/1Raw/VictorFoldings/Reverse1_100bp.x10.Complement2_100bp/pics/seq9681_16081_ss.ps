%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[218.93783569 338.97219849]
[226.46997070 325.98260498]
[235.38539124 313.90042114]
[245.57585144 302.87237549]
[235.74526978 291.54278564]
[225.91468811 280.21319580]
[216.08410645 268.88360596]
[203.23010254 269.78033447]
[192.03955078 263.00881958]
[186.71395874 250.84951782]
[189.40280151 237.65161133]
[179.74198914 226.17691040]
[169.66084290 215.06968689]
[159.17333984 204.34530640]
[148.68585205 193.62092590]
[138.19834900 182.89654541]
[127.71084595 172.17216492]
[132.35092163 186.43644714]
[133.49165344 201.39300537]
[131.06848145 216.19598389]
[125.21847534 230.00820923]
[116.27247620 242.04852295]
[104.73642731 251.63598633]
[91.26273346 258.22839355]
[76.61341858 261.45288086]
[61.61695480 261.12713623]
[47.12147141 257.26953125]
[33.94676208 250.09828186]
[22.83791351 240.01892090]
[14.42318821 227.60148621]
[9.17848110 213.54827881]
[7.40040398 198.65403748]
[9.18951607 183.76110840]
[14.44463444 169.71177673]
[22.86855698 157.30059814]
[33.98487091 147.22946167]
[47.16489029 140.06796265]
[61.66322708 136.22111511]
[76.65992737 135.90647888]
[91.30685425 139.14183044]
[104.77565002 145.74421692]
[116.30533600 155.34100342]
[110.23150635 141.62573242]
[104.15766907 127.91046906]
[98.08383179 114.19519806]
[86.90288544 105.80008698]
[88.20089722 91.87863159]
[87.43187714 106.85890961]
[82.70214844 121.09371185]
[74.35315704 133.55541992]
[62.98761368 143.34442139]
[49.42601776 149.75402832]
[34.64738464 152.32153320]
[19.71860313 150.86158752]
[5.71739101 145.47956848]
[-6.34549141 136.56402588]
[-15.59921360 124.75857544]
[-21.37574196 110.91546631]
[-23.25806427 96.03404236]
[-21.11029434 81.18859863]
[-15.08747959 67.45085144]
[-5.62441444 55.81253815]
[6.59575558 47.11383438]
[20.69084549 41.98270798]
[35.64331818 40.78958511]
[50.37374496 43.62059021]
[63.81871796 50.27135468]
[75.00763702 60.26175690]
[83.13325500 72.87162781]
[81.57273102 57.95302582]
[80.01220703 43.03442001]
[78.45168304 28.11581612]
[76.89115906 13.19721031]
[75.33064270 -1.72139418]
[72.26314545 -5.94484711]
[71.22612762 -10.47009754]
[71.99452209 -14.47317314]
[74.04886627 -17.33883476]
[73.15604401 -32.31224060]
[72.26322937 -47.28564453]
[70.92499542 -62.22583008]
[69.14253235 -77.11954498]
[67.36006165 -92.01326752]
[65.57759857 -106.90698242]
[63.46297455 -121.75717926]
[61.01724625 -136.55645752]
[58.57152176 -151.35572815]
[56.12579346 -166.15499878]
[41.10125351 -167.46421814]
[26.87460518 -172.46954346]
[14.34014416 -180.85632324]
[4.28579664 -192.09736633]
[-2.65641189 -205.48603821]
[-6.05008793 -220.18072510]
[-5.68190289 -235.25769043]
[-1.57500029 -249.76921082]
[6.01245594 -262.80307007]
[16.60351181 -273.53994751]
[29.53240585 -281.30490112]
[43.98641586 -285.60983276]
[59.05694962 -286.18411255]
[73.79666138 -282.99166870]
[87.27899933 -276.23318481]
[98.65645599 -266.33346558]
[107.21383667 -253.91484070]
[112.41320801 -239.75796509]
[113.92774200 -224.75273132]
[111.66222382 -209.84239197]
[105.75907898 -195.96421814]
[96.58937836 -183.99060059]
[84.72953033 -174.67422485]
[70.92506409 -168.60072327]
[73.37078857 -153.80145264]
[75.81652069 -139.00218201]
[78.26224518 -124.20291138]
[80.90026855 -121.86341858]
[82.53619385 -118.12995148]
[82.52719879 -113.48741150]
[80.47131348 -108.68944550]
[82.25378418 -93.79573059]
[84.03624725 -78.90201569]
[85.81871796 -64.00830078]
[87.93649292 -62.17168808]
[89.45437622 -59.38553238]
[90.00704193 -55.87412643]
[89.31704712 -51.98974228]
[87.23663330 -48.17846298]
[88.12945557 -33.20505524]
[89.02227020 -18.23165131]
[90.24924469 -3.28191733]
[91.80976868 11.63668728]
[93.37029266 26.55529213]
[94.93081665 41.47389603]
[96.49133301 56.39250183]
[98.05185699 71.31110382]
[101.91616821 85.80480194]
[113.09711456 94.19991302]
[111.79910278 108.12136841]
[117.87293243 121.83663177]
[123.94676971 135.55189514]
[130.02059937 149.26716614]
[138.43522644 161.68466187]
[148.92272949 172.40904236]
[159.41021729 183.13342285]
[169.89772034 193.85780334]
[180.38522339 204.58218384]
[183.16055298 189.84115601]
[196.34373474 182.68551636]
[210.21664429 188.39010620]
[214.55268860 202.74972534]
[206.15547180 215.17900085]
[191.21669006 216.51609802]
[200.87750244 227.99079895]
[218.33129883 229.16720581]
[229.31784058 242.34336853]
[227.41369629 259.05303955]
[237.24427795 270.38262939]
[247.07485962 281.71221924]
[256.90545654 293.04180908]
[269.25994873 284.50778198]
[282.47830200 277.38470459]
[296.40002441 271.75900269]
[310.85614014 267.69897461]
[325.67117310 265.25390625]
[340.66525269 264.45349121]
[355.65637207 265.30740356]
[370.46258545 267.80535889]
[384.90411377 271.91696167]
[398.80566406 277.59231567]
[411.99850464 284.76254272]
[424.32247925 293.34060669]
[435.62796021 303.22235107]
[445.77774048 314.28784180]
[454.64859009 326.40277100]
[462.13284302 339.42004395]
[468.13964844 353.18164062]
[472.59606934 367.52050781]
[475.44799805 382.26260376]
[476.66085815 397.22897339]
[476.21990967 412.23794556]
[474.13046265 427.10729980]
[470.41796875 441.65652466]
[465.12741089 455.70904541]
[458.32302856 469.09426880]
[450.08746338 481.64968872]
[440.52066040 493.22290039]
[429.73873901 503.67343140]
[417.87261963 512.87438965]
[405.06628418 520.71411133]
[391.47525024 527.09747314]
[377.26446533 531.94689941]
[362.60647583 535.20355225]
[347.67913818 536.82788086]
[332.66375732 536.80023193]
[317.74252319 535.12091064]
[303.09658813 531.81030273]
[288.90377808 526.90856934]
[275.33633423 520.47521973]
[262.55899048 512.58837891]
[250.72680664 503.34378052]
[239.98344421 492.85360718]
[230.45932007 481.24523926]
[222.27005005 468.65957642]
[215.51502991 455.24938965]
[210.27626038 441.17749023]
[206.61735535 426.61468506]
[204.58270264 411.73773193]
[204.19702148 396.72726440]
[205.46499634 381.76547241]
[208.37120056 367.03396606]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 159]
[5 158]
[6 157]
[7 156]
[11 153]
[12 152]
[13 146]
[14 145]
[15 144]
[16 143]
[17 142]
[42 141]
[43 140]
[44 139]
[45 138]
[47 136]
[69 135]
[70 134]
[71 133]
[72 132]
[73 131]
[74 130]
[78 129]
[79 128]
[80 127]
[81 122]
[82 121]
[83 120]
[84 119]
[85 115]
[86 114]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
