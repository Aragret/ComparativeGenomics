%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[89.08148956 595.35852051]
[82.83875275 609.56445312]
[69.42130280 617.35876465]
[53.98842621 615.74444580]
[42.47438049 605.34222412]
[39.30655289 590.15197754]
[45.70303345 576.01458740]
[59.20425034 568.36627197]
[60.76477051 553.44769287]
[54.39353561 539.98449707]
[63.52455139 527.06420898]
[65.08507538 512.14556885]
[66.64559937 497.22698975]
[68.20612335 482.30838013]
[69.65554047 467.37857056]
[63.08456421 454.01174927]
[72.02220154 440.95690918]
[65.45122528 427.59008789]
[74.38886261 414.53524780]
[75.72709656 399.59506226]
[77.06533051 384.65487671]
[78.06958771 369.68853760]
[78.73937988 354.70349121]
[75.89768219 347.88098145]
[79.53233337 339.50082397]
[80.42514801 324.52740479]
[73.45910645 311.36218262]
[82.00408936 298.04699707]
[82.89690399 283.07360840]
[83.78971863 268.10018921]
[84.68253326 253.12678528]
[85.57535553 238.15338135]
[86.46817017 223.17997742]
[72.36277008 215.67076111]
[62.90979767 202.71487427]
[60.04276657 186.87619019]
[64.38559723 171.31661987]
[75.11772919 159.16487122]
[90.12860870 152.88734436]
[90.79839325 137.90229797]
[91.46817780 122.91726685]
[92.13796234 107.93222809]
[92.69617462 92.94261932]
[85.37319183 78.91819763]
[93.48600006 66.42693329]
[93.93260193 51.43358231]
[94.37921143 36.44023514]
[81.83797455 44.66928864]
[67.53804779 40.14026260]
[62.02080154 26.19178391]
[69.35334778 13.10615349]
[84.13040924 10.52960968]
[95.45821381 20.35997200]
[97.01873779 5.44136715]
[98.57926178 -9.47723770]
[100.13978577 -24.39584160]
[97.80087280 -30.57977676]
[98.78790283 -36.17645264]
[101.97532654 -39.73305130]
[103.97933960 -54.59857941]
[98.15512085 -69.30874634]
[107.52342987 -80.88820648]
[109.52744293 -95.75373840]
[111.53145599 -110.61926270]
[113.53546906 -125.48479462]
[115.53948212 -140.35032654]
[117.54350281 -155.21585083]
[119.54751587 -170.08137512]
[117.75634003 -174.03683472]
[117.35716248 -177.96177673]
[118.16946411 -181.42236328]
[119.89035797 -184.08789062]
[122.13887787 -185.76190186]
[125.02414703 -200.48179626]
[118.48927307 -211.60197449]
[121.19546509 -223.80281067]
[131.15950012 -230.66171265]
[134.26361084 -245.33702087]
[134.82182312 -260.32662964]
[132.81781006 -275.19216919]
[130.81379700 -290.05767822]
[128.80976868 -304.92321777]
[126.80576324 -319.78872681]
[124.80175018 -334.65426636]
[121.06961823 -340.11163330]
[120.70808411 -345.78317261]
[122.96620941 -349.99148560]
[121.40568542 -364.91009521]
[119.84516144 -379.82867432]
[118.28463745 -394.74728394]
[116.72411346 -409.66589355]
[101.84060669 -412.19250488]
[88.19118500 -418.64199829]
[76.78873444 -428.53576660]
[68.47937775 -441.13961792]
[63.87974167 -455.51828003]
[63.33113480 -470.60476685]
[66.87427521 -485.27954102]
[74.24623871 -498.45361328]
[84.89997101 -509.14944458]
[98.04490662 -516.57330322]
[112.70558929 -520.17425537]
[127.79410553 -519.68511963]
[142.19078064 -515.14221191]
[154.82730103 -506.88259888]
[164.76594543 -495.51922607]
[171.26919556 -481.89535522]
[173.85447693 -467.02191162]
[172.32992554 -452.00265503]
[166.80868530 -437.95208740]
[157.70048523 -425.91284180]
[145.68118286 -416.77835083]
[131.64271545 -411.22640991]
[133.20324707 -396.30780029]
[134.76376343 -381.38922119]
[136.32429504 -366.47061157]
[137.88481140 -351.55200195]
[139.66728210 -336.65829468]
[141.67129517 -321.79275513]
[143.67530823 -306.92721558]
[145.67932129 -292.06170654]
[147.68333435 -277.19616699]
[149.68734741 -262.33062744]
[154.51576233 -276.53228760]
[162.68145752 -289.11486816]
[173.68511963 -299.30895996]
[186.85385132 -306.49118042]
[201.38238525 -310.22238159]
[216.38229370 -310.27432251]
[230.93632507 -306.64389038]
[244.15451050 -299.55307007]
[255.22853088 -289.43548584]
[263.48123169 -276.90975952]
[268.40792847 -262.74194336]
[269.70733643 -247.79832458]
[267.30007935 -232.99275208]
[261.33325195 -219.23057556]
[252.17182922 -207.35337830]
[240.37596130 -198.08743286]
[226.66700745 -191.99937439]
[211.88327026 -189.46147156]
[196.92877197 -190.62892151]
[182.71798706 -195.43034363]
[170.11991882 -203.57212830]
[159.90493774 -214.55639648]
[152.69769287 -227.71145630]
[148.93890381 -242.23291016]
[145.83479309 -227.55760193]
[152.16546631 -211.19027710]
[139.74403381 -197.59652710]
[136.85876465 -182.87663269]
[134.41304016 -168.07736206]
[132.40902710 -153.21183777]
[130.40501404 -138.34631348]
[128.40100098 -123.48078156]
[126.39698792 -108.61524963]
[124.39297485 -93.74972534]
[122.38896179 -78.88419342]
[128.35652161 -65.23731232]
[118.84487152 -52.59456635]
[116.84085083 -37.72903824]
[115.05838776 -22.83531952]
[113.49786377 -7.91671467]
[111.93733978 7.00189018]
[110.37682343 21.92049408]
[109.37255859 36.88684082]
[108.92595673 51.88018799]
[108.47934723 66.87354279]
[115.83428192 79.82553864]
[107.68952942 93.38922119]
[110.61640930 100.89961243]
[107.12300110 108.60201263]
[106.45321655 123.58705139]
[105.78343201 138.57208252]
[105.11364746 153.55712891]
[117.80723572 159.77159119]
[127.14519501 170.32273865]
[131.74243164 183.59568787]
[130.93603516 197.57568359]
[124.88074493 210.15394592]
[114.52051544 219.44573975]
[101.44157410 224.07278442]
[100.54875946 239.04618835]
[99.65594482 254.01959229]
[98.76313019 268.99301147]
[97.87030792 283.96640015]
[96.97749329 298.93981934]
[103.87967682 313.17605591]
[95.39855194 325.42022705]
[94.50573730 340.39364624]
[93.72441864 355.37326050]
[93.05462646 370.35830688]
[95.46167755 374.99008179]
[95.81594086 379.61907959]
[94.46222687 383.46389771]
[92.00551605 385.99310303]
[90.66728210 400.93328857]
[89.32904816 415.87347412]
[95.80430603 430.30889893]
[86.96238708 442.29513550]
[93.43764496 456.73056030]
[84.59572601 468.71679688]
[86.94703674 477.54342651]
[83.12472534 483.86889648]
[81.56420135 498.78750610]
[80.00367737 513.70611572]
[78.44315338 528.62469482]
[84.70277405 543.15496826]
[75.68338013 555.00817871]
[74.12285614 569.92681885]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 210]
[9 209]
[11 207]
[12 206]
[13 205]
[14 204]
[15 202]
[17 200]
[19 198]
[20 197]
[21 196]
[22 192]
[23 191]
[25 190]
[26 189]
[28 187]
[29 186]
[30 185]
[31 184]
[32 183]
[33 182]
[39 175]
[40 174]
[41 173]
[42 172]
[43 170]
[45 168]
[46 167]
[47 166]
[53 165]
[54 164]
[55 163]
[56 162]
[59 161]
[60 160]
[62 158]
[63 157]
[64 156]
[65 155]
[66 154]
[67 153]
[68 152]
[73 151]
[74 150]
[77 148]
[78 147]
[79 123]
[80 122]
[81 121]
[82 120]
[83 119]
[84 118]
[87 117]
[88 116]
[89 115]
[90 114]
[91 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
