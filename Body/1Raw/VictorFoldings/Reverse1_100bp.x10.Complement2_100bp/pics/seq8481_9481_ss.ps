%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[99.51034546 374.47415161]
[111.98738861 365.51766968]
[110.42686462 350.59906006]
[108.86634827 335.68045044]
[107.30582428 320.76184082]
[105.74530029 305.84323120]
[94.68697357 292.21679688]
[102.32469940 275.46130371]
[100.54223633 260.56756592]
[98.75977325 245.67385864]
[88.66146088 256.76547241]
[73.68499756 257.60556030]
[62.40959549 247.71287537]
[61.29430389 232.75439453]
[70.97801971 221.29902649]
[85.91346741 219.90890503]
[97.54448700 229.37954712]
[97.09788513 214.38619995]
[96.65127563 199.39283752]
[96.09306335 184.40322876]
[95.42327881 169.41819763]
[94.75349426 154.43315125]
[94.08370972 139.44812012]
[93.41392517 124.46308136]
[92.74414062 109.47804260]
[85.91059875 122.83104706]
[74.76348877 132.86807251]
[60.76939392 138.26856995]
[45.76948929 138.32202148]
[31.73726654 133.02139282]
[20.51890564 123.06405640]
[13.59037399 109.76009369]
[11.86324024 94.85986328]
[15.56473923 80.32373810]
[24.20787430 68.06420135]
[36.65549088 59.69420242]
[51.26989365 56.31496811]
[66.12830353 58.37108231]
[79.27584839 65.59204102]
[88.98272705 77.02778625]
[93.97222137 91.17611694]
[96.63801575 76.41490173]
[99.30381012 61.65368271]
[86.33656311 56.19844818]
[74.80017853 48.15834808]
[65.20219421 37.89032364]
[57.96419907 25.84924889]
[53.40330124 12.56780529]
[51.71826172 -1.36710489]
[52.98080444 -15.34028244]
[57.13259506 -28.73539543]
[63.98791504 -40.96216202]
[73.24195862 -51.48236847]
[84.48442078 -59.83354568]
[97.21763611 -65.64932251]
[110.87866211 -68.67546844]
[124.86412811 -68.78103638]
[127.96823883 -83.45633698]
[131.07234192 -98.13164520]
[134.17645264 -112.80694580]
[120.37239838 -106.93771362]
[107.10500336 -113.93601990]
[104.15451050 -128.64297485]
[113.69590759 -140.21716309]
[128.69563293 -140.12651062]
[138.09606934 -128.43946838]
[142.28308105 -142.84324646]
[146.47009277 -157.24702454]
[150.65710449 -171.65081787]
[154.84411621 -186.05459595]
[144.60772705 -175.09027100]
[131.82159424 -167.24713135]
[117.40876007 -163.09138489]
[102.40970612 -162.92301941]
[87.90721893 -166.75419617]
[74.94824982 -174.30833435]
[64.46832275 -185.04011536]
[57.22397995 -198.17478943]
[53.73820496 -212.76414490]
[54.26264191 -227.75497437]
[58.75942230 -242.06507874]
[66.90393066 -254.66139221]
[78.10819244 -264.63458252]
[91.56337738 -271.26464844]
[106.29814148 -274.07299805]
[121.24875641 -272.85690308]
[135.33593750 -267.70410156]
[147.54272461 -258.98660278]
[156.98788452 -247.33377075]
[162.98956299 -233.58677673]
[165.11450195 -218.73805237]
[163.20899963 -203.85841370]
[164.54534912 -219.62307739]
[178.09022522 -225.81871033]
[186.50483704 -238.23620605]
[194.91946411 -250.65370178]
[203.33407593 -263.07119751]
[211.74870300 -275.48867798]
[200.33871460 -285.25045776]
[190.09346008 -296.22836304]
[181.14178467 -308.28439331]
[173.59626770 -321.26690674]
[167.55181885 -335.01260376]
[163.08442688 -349.34866333]
[160.25027466 -364.09475708]
[159.08503723 -379.06546021]
[159.60333252 -394.07250977]
[161.79866028 -408.92715454]
[165.64340210 -423.44259644]
[171.08921814 -437.43627930]
[178.06761169 -450.73220825]
[186.49084473 -463.16320801]
[196.25294495 -474.57290649]
[207.23117065 -484.81784058]
[219.28746033 -493.76913452]
[232.27018738 -501.31427002]
[246.01606750 -507.35830688]
[260.35226440 -511.82528687]
[275.09844971 -514.65899658]
[290.06921387 -515.82379150]
[305.07623291 -515.30505371]
[319.93081665 -513.10925293]
[334.44613647 -509.26406860]
[348.43963623 -503.81784058]
[361.73538208 -496.83905029]
[374.16610718 -488.41546631]
[385.57553101 -478.65301514]
[395.82012939 -467.67446899]
[404.77105713 -455.61791992]
[412.31579590 -442.63497925]
[418.35943604 -428.88888550]
[422.82598877 -414.55258179]
[425.65924072 -399.80630493]
[426.82357788 -384.83551025]
[426.30438232 -369.82852173]
[424.10818481 -354.97399902]
[420.26257324 -340.45877075]
[414.81591797 -326.46542358]
[407.83670044 -313.16992188]
[399.41275024 -300.73941040]
[389.64996338 -289.33032227]
[378.67111206 -279.08602905]
[366.61428833 -270.13543701]
[353.63113403 -262.59109497]
[339.88485718 -256.54788208]
[325.54843140 -252.08177185]
[310.80206299 -249.24896240]
[295.83123779 -248.08505249]
[280.82424927 -248.60469055]
[265.96978760 -250.80136108]
[251.45469666 -254.64739990]
[237.46150208 -260.09448242]
[224.16619873 -267.07406616]
[215.75157166 -254.65657043]
[207.33695984 -242.23907471]
[198.92233276 -229.82157898]
[190.50772095 -217.40408325]
[189.77323914 -202.52760315]
[175.62649536 -195.44378662]
[169.24789429 -181.86758423]
[165.06088257 -167.46380615]
[160.87387085 -153.06001282]
[156.68685913 -138.65623474]
[152.49984741 -124.25245667]
[148.85176086 -109.70283508]
[145.74765015 -95.02753448]
[142.64353943 -80.35223389]
[139.53942871 -65.67692566]
[153.99975586 -58.87888718]
[166.43063354 -48.82617950]
[176.11363220 -36.09462357]
[182.48793030 -21.41501045]
[185.18270874 -5.63114595]
[184.03884888 10.34864235]
[179.11820984 25.60378265]
[170.70036316 39.25449371]
[159.26666260 50.51251221]
[145.47279358 58.72662735]
[130.11106873 63.42033386]
[114.06503296 64.31947327]
[111.39923859 79.08069611]
[108.73343658 93.84191132]
[107.72917938 108.80825806]
[108.39896393 123.79329681]
[109.06874847 138.77833557]
[109.73853302 153.76336670]
[110.40831757 168.74841309]
[111.07810211 183.73344421]
[114.58758545 192.16679382]
[111.64463043 198.94624329]
[112.09123230 213.93959045]
[112.53784180 228.93293762]
[113.65348816 243.89138794]
[115.43595123 258.78509521]
[117.21842194 273.67883301]
[126.85702515 282.24972534]
[128.03503418 294.69140625]
[120.66390228 304.28271484]
[122.22442627 319.20132446]
[123.78495026 334.11993408]
[125.34547424 349.03854370]
[126.90599823 363.95715332]
[140.96641541 370.13775635]
[150.03985596 382.53002930]
[151.68559265 397.80050659]
[145.46092224 411.84149170]
[133.04028320 420.87600708]
[117.76472473 422.47387695]
[103.74332428 416.20523071]
[94.74775696 403.75634766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 202]
[3 201]
[4 200]
[5 199]
[6 198]
[8 195]
[9 194]
[10 193]
[17 192]
[18 191]
[19 190]
[20 188]
[21 187]
[22 186]
[23 185]
[24 184]
[25 183]
[41 182]
[42 181]
[43 180]
[57 168]
[58 167]
[59 166]
[60 165]
[66 164]
[67 163]
[68 162]
[69 161]
[70 160]
[92 159]
[94 157]
[95 156]
[96 155]
[97 154]
[98 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
