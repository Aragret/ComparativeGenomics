%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[140.89723206 691.64703369]
[130.39758301 680.91943359]
[120.93257141 669.26873779]
[112.58293915 656.79443359]
[105.41991425 643.60296631]
[99.50461578 629.80676270]
[94.88751984 615.52368164]
[91.60800934 600.87548828]
[89.69406891 585.98718262]
[89.16202545 570.98577881]
[90.01641846 555.99932861]
[92.24996185 541.15557861]
[95.84359741 526.58129883]
[100.76666260 512.40075684]
[106.97715759 498.73492432]
[114.42208862 485.70046997]
[123.03794861 473.40850830]
[132.75122070 461.96401978]
[143.47903442 451.46453857]
[155.12986755 441.99972534]
[167.60430908 433.65029907]
[180.79592896 426.48748779]
[194.59219360 420.57241821]
[189.97817993 406.29968262]
[185.36416626 392.02694702]
[180.75015259 377.75424194]
[176.13615417 363.48150635]
[164.85906982 353.75128174]
[167.97628784 338.24023438]
[163.36228943 323.96749878]
[152.73875427 318.18240356]
[148.77793884 306.32931519]
[154.12046814 294.58963013]
[149.71946716 280.24978638]
[144.75181580 274.77764893]
[145.36140442 265.66357422]
[141.17439270 251.25979614]
[136.98738098 236.85601807]
[132.80036926 222.45223999]
[129.12062073 219.40780640]
[127.31430054 214.01947021]
[128.71000671 207.55700684]
[124.95369720 193.03494263]
[121.08939362 178.54124451]
[117.11730194 164.07672119]
[112.29129791 149.87426758]
[106.62851715 135.98423767]
[100.96572876 122.09421539]
[95.30294037 108.20418549]
[91.05420685 105.12811279]
[88.83139038 99.89051819]
[89.68514252 93.81532288]
[84.43842316 79.76284790]
[79.19170380 65.71038055]
[65.09118652 59.09122849]
[59.97045135 44.76528168]
[66.36769867 31.36338425]
[61.12097931 17.31091309]
[57.67548370 14.66846752]
[55.47171021 11.39617252]
[54.55519485 7.96172857]
[54.81489182 4.79958248]
[56.00760651 2.26273799]
[51.60660553 -12.07710934]
[47.20560837 -26.41695595]
[36.19722366 -33.13843155]
[32.82683563 -45.17272949]
[38.37606049 -55.92134094]
[34.18904877 -70.32512665]
[30.00203705 -84.72890472]
[25.81502533 -99.13269043]
[21.62801361 -113.53646851]
[14.48071384 -100.34874725]
[0.57532978 -94.72377777]
[-13.73078442 -99.23322296]
[-21.89706612 -111.81542206]
[-20.19000053 -126.71797180]
[-9.39003563 -137.12762451]
[5.56523037 -138.28521729]
[17.83951759 -129.66000366]
[15.17372227 -144.42121887]
[10.56900311 -152.31010437]
[12.57983589 -159.42195129]
[10.13410854 -174.22122192]
[7.68838167 -189.02049255]
[3.79542184 -194.36430359]
[3.26517987 -200.02256775]
[5.39700699 -204.29624939]
[3.39299321 -219.16177368]
[1.38897967 -234.02729797]
[-0.61503404 -248.89283752]
[-15.52776814 -251.36300659]
[-29.04913139 -258.12054443]
[-39.97681046 -268.56454468]
[-47.33912659 -281.76635742]
[-50.48142624 -296.55206299]
[-49.12429810 -311.60693359]
[-43.38842010 -325.59234619]
[-33.78381729 -337.26464844]
[-21.16452789 -345.58599854]
[-6.65264988 -349.81646729]
[8.46143055 -349.57986450]
[22.83378029 -344.89724731]
[35.18641663 -336.18496704]
[44.42095566 -324.21774292]
[49.71626663 -310.05966187]
[50.60149384 -294.96966553]
[46.99792480 -280.28955078]
[39.22598267 -267.32467651]
[27.97674942 -257.22781372]
[14.25049400 -250.89685059]
[16.25450706 -236.03131104]
[18.25852203 -221.16578674]
[20.26253510 -206.30026245]
[22.48765182 -191.46621704]
[24.93338013 -176.66694641]
[27.37910652 -161.86767578]
[29.93494034 -147.08702087]
[32.60073471 -132.32580566]
[36.03179550 -117.72348022]
[40.21880722 -103.31970215]
[44.40581894 -88.91591644]
[48.59283066 -74.51213837]
[52.77984238 -60.10835266]
[66.08382416 -48.66409683]
[61.54545593 -30.81795502]
[65.94645691 -16.47810745]
[70.34745026 -2.13826013]
[75.17344666 12.06419563]
[80.42016602 26.11666679]
[94.03527832 32.04662704]
[99.55637360 46.22309113]
[93.24417877 60.46366119]
[98.49089050 74.51612854]
[103.73760986 88.56860352]
[109.19297028 102.54139709]
[114.85575867 116.43142700]
[120.51853943 130.32145691]
[126.18132782 144.21148682]
[131.06311035 130.02810669]
[143.28282166 121.32874298]
[158.28279114 121.35804749]
[170.46841431 130.10508728]
[175.29475403 144.30741882]
[170.96170044 158.66795349]
[159.08537292 167.83053589]
[144.09535217 168.37776184]
[131.58181763 160.10462952]
[135.55392456 174.56915283]
[140.84408569 182.01576233]
[139.47575378 189.27864075]
[143.23205566 203.80070496]
[147.20416260 218.26522827]
[151.39117432 232.66900635]
[155.57818604 247.07278442]
[159.76519775 261.47656250]
[164.05931091 275.84878540]
[168.46031189 290.18862915]
[182.22854614 302.41635132]
[177.63500977 319.35348511]
[182.24902344 333.62622070]
[193.85612488 344.37728882]
[190.40888977 358.86749268]
[195.02288818 373.14022827]
[199.63690186 387.41296387]
[204.25091553 401.68569946]
[208.86491394 415.95840454]
[223.51293945 412.67819214]
[238.40115356 410.76348877]
[253.40251160 410.23071289]
[268.38903809 411.08435059]
[283.23284912 413.31713867]
[297.80734253 416.91006470]
[311.98815918 421.83239746]
[325.65426636 428.04220581]
[338.68911743 435.48651123]
[350.98147583 444.10174561]
[362.42648315 453.81445312]
[372.92648315 464.54174805]
[382.39187622 476.19210815]
[390.74194336 488.66610718]
[397.90539551 501.85739136]
[403.82113647 515.65332031]
[408.43872070 529.93627930]
[411.71871948 544.58435059]
[413.63314819 559.47259521]
[414.16571045 574.47399902]
[413.31179810 589.46051025]
[411.07876587 604.30426025]
[407.48562622 618.87872314]
[402.56301880 633.05944824]
[396.35296631 646.72546387]
[388.90847778 659.76019287]
[380.29302979 672.05236816]
[370.58013916 683.49725342]
[359.85266113 693.99707031]
[348.20214844 703.46228027]
[335.72799683 711.81207275]
[322.53662109 718.97534180]
[308.74053955 724.89086914]
[294.45751953 729.50817871]
[279.80938721 732.78796387]
[264.92111206 734.70214844]
[249.91975403 735.23443604]
[234.93325806 734.38031006]
[220.08949280 732.14697266]
[205.51513672 728.55358887]
[191.33448792 723.63079834]
[177.66857910 717.42053223]
[164.63398743 709.97576904]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 167]
[24 166]
[25 165]
[26 164]
[27 163]
[29 161]
[30 160]
[33 158]
[34 157]
[36 156]
[37 155]
[38 154]
[39 153]
[42 152]
[43 151]
[44 149]
[45 148]
[46 139]
[47 138]
[48 137]
[49 136]
[52 135]
[53 134]
[54 133]
[57 130]
[58 129]
[63 128]
[64 127]
[65 126]
[68 124]
[69 123]
[70 122]
[71 121]
[72 120]
[80 119]
[81 118]
[83 117]
[84 116]
[85 115]
[88 114]
[89 113]
[90 112]
[91 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
