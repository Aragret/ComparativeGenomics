%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCUACUACCUGGGCCUCGUGUAUUUAUCAUACCGAAACUUCUUCCGCACCCAUGUCUACACGUCCUUACGAUCCACACCAACCAACUACGGCUAACAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[146.63133240 481.78390503]
[141.99282837 467.50100708]
[139.04386902 452.77621460]
[137.82432556 437.80859375]
[138.35070801 422.80062866]
[140.61589050 407.95523071]
[144.58923340 393.47320557]
[150.21699524 379.55038452]
[157.42308044 366.37509155]
[166.11004639 354.12545776]
[176.16038513 342.96716309]
[187.43818665 333.05114746]
[199.79092407 324.51147461]
[213.05157471 317.46362305]
[207.59620667 303.49081421]
[202.14085388 289.51803589]
[196.68550110 275.54522705]
[190.10546875 262.06549072]
[182.44487000 249.16917419]
[174.78427124 236.27284241]
[167.02787781 223.43389893]
[159.17613220 210.65306091]
[145.92141724 203.85879517]
[145.29032898 188.05018616]
[137.43856812 175.26934814]
[129.58682251 162.48849487]
[121.73506165 149.70765686]
[113.88330841 136.92681885]
[100.62859344 130.13255310]
[99.99750519 114.32394409]
[87.79519653 107.49787140]
[87.22164917 93.52780914]
[79.36989594 80.74697113]
[71.51814270 67.96612549]
[63.38292694 55.36381531]
[54.96830750 42.94631958]
[46.55368805 30.52882385]
[34.30685043 34.05739594]
[21.57983017 34.00236511]
[9.39826965 30.37822151]
[-1.25897717 23.48668098]
[-9.53849411 13.89158440]
[-14.78064346 2.37277961]
[-16.57210922 -10.13725567]
[-14.77847290 -22.62890053]
[-9.55424023 -34.09687042]
[-1.32959008 -43.62112045]
[-9.18134594 -56.40196228]
[-17.03310013 -69.18280029]
[-24.88485718 -81.96364594]
[-32.73661041 -94.74449158]
[-40.58836746 -107.52532959]
[-48.62953949 -120.18785858]
[-56.85834885 -132.72926331]
[-65.08715820 -145.27066040]
[-73.31596375 -157.81205750]
[-76.27943420 -143.10771179]
[-87.92247009 -133.65045166]
[-102.92204285 -133.76402283]
[-114.42053986 -143.39649963]
[-117.16101074 -158.14404297]
[-109.89054108 -171.26426697]
[-95.93309784 -176.75878906]
[-81.66837311 -172.11445618]
[-88.54778290 -185.44387817]
[-95.26444244 -191.63453674]
[-95.42872620 -199.02337646]
[-102.10891724 -212.45375061]
[-108.78910828 -225.88412476]
[-123.07431030 -221.22033691]
[-137.88635254 -218.68629456]
[-152.90950012 -218.33598328]
[-167.82354736 -220.17689514]
[-182.31060791 -224.16978455]
[-196.06187439 -230.22952271]
[-208.78424072 -238.22697449]
[-220.20652771 -247.99166870]
[-230.08528137 -259.31546021]
[-238.20991516 -271.95697021]
[-244.40727234 -285.64678955]
[-248.54522705 -300.09307861]
[-250.53561401 -314.98791504]
[-250.33599854 -330.01382446]
[-247.95060730 -344.85052490]
[-243.43032837 -359.18176270]
[-236.87147522 -372.70211792]
[-228.41386414 -385.12332153]
[-218.23777771 -396.18069458]
[-206.56010437 -405.63848877]
[-193.62977600 -413.29513550]
[-179.72238159 -418.98742676]
[-165.13435364 -422.59402466]
[-150.17666626 -424.03808594]
[-135.16812134 -423.28878784]
[-120.42863464 -420.36212158]
[-106.27236938 -415.32049561]
[-93.00108337 -408.27133179]
[-80.89764404 -399.36489868]
[-70.22003174 -388.79104614]
[-61.19585419 -376.77511597]
[-54.01745605 -363.57330322]
[-48.83784103 -349.46691895]
[-45.76742172 -334.75671387]
[-44.87163544 -319.75619507]
[-46.16958237 -304.78512573]
[-49.63359451 -290.16259766]
[-55.18983459 -276.20028687]
[-62.71987152 -263.19580078]
[-72.06320953 -251.42636108]
[-83.02068329 -241.14279175]
[-95.35873413 -232.56431580]
[-88.67854309 -219.13394165]
[-81.99834442 -205.70356750]
[-75.21835327 -192.32328796]
[-68.33894348 -178.99386597]
[-60.77456284 -166.04086304]
[-52.54575729 -153.49946594]
[-44.31694794 -140.95806885]
[-36.08813858 -128.41667175]
[-31.67710686 -126.58586884]
[-28.36933708 -121.96464539]
[-27.80752563 -115.37709045]
[-19.95576859 -102.59624481]
[-12.10401440 -89.81539917]
[-4.25225830 -77.03456116]
[3.59949684 -64.25371552]
[11.45125198 -51.47287369]
[28.50747871 -54.73141861]
[45.54172897 -51.18269730]
[59.93604660 -41.34444046]
[69.46758270 -26.70310783]
[72.65184784 -9.48936939]
[68.97385406 7.66174555]
[58.97118378 22.11420441]
[67.38580322 34.53170013]
[75.80042267 46.94919586]
[79.17537689 47.96997833]
[82.22358704 50.67617416]
[84.15827942 54.89639282]
[84.29898071 60.11436844]
[92.15074158 72.89521027]
[100.00249481 85.67605591]
[112.20480347 92.50212860]
[112.77835083 106.47219086]
[126.59466553 114.18061829]
[126.66414642 129.07505798]
[134.51589966 141.85591125]
[142.36766052 154.63674927]
[150.21942139 167.41758728]
[158.07116699 180.19842529]
[171.88749695 187.90686035]
[171.95697021 202.80130005]
[179.80873108 215.58215332]
[186.96722412 221.25610352]
[187.68060303 228.61224365]
[195.34120178 241.50857544]
[203.00180054 254.40489197]
[203.94686890 239.43470764]
[211.66169739 226.57073975]
[224.42274475 218.68684387]
[239.37916565 217.54431152]
[253.18966675 223.39837646]
[262.76892090 234.94123840]
[265.97695923 249.59417725]
[262.09701538 264.08370972]
[251.99594116 275.17279053]
[237.93031311 280.38415527]
[223.04244995 278.55352783]
[210.65829468 270.08987427]
[216.11364746 284.06268311]
[221.56901550 298.03546143]
[227.02436829 312.00827026]
[241.55241394 308.20666504]
[256.42358398 306.11737061]
[271.43673706 305.76870728]
[286.38885498 307.16534424]
[301.07772827 310.28842163]
[315.30468750 315.09570312]
[328.87738037 321.52215576]
[341.61218262 329.48086548]
[353.33691406 338.86419678]
[363.89300537 349.54528809]
[373.13766479 361.37966919]
[380.94592285 374.20727539]
[387.21215820 387.85467529]
[391.85159302 402.13723755]
[394.80154419 416.86184692]
[396.02209473 431.82937622]
[395.49670410 446.83740234]
[393.23251343 461.68292236]
[389.26013184 476.16522217]
[383.63330078 490.08840942]
[376.42810059 503.26422119]
[367.74197388 515.51440430]
[357.69235229 526.67333984]
[346.41522217 536.59014893]
[334.06304932 545.13067627]
[320.80288696 552.17938232]
[306.81405640 557.64099121]
[292.28573608 561.44165039]
[277.41445923 563.52990723]
[262.40127563 563.87756348]
[247.44923401 562.47991943]
[232.76057434 559.35589600]
[218.53392029 554.54766846]
[204.96168518 548.12030029]
[192.22740173 540.16076660]
[180.50329590 530.77661133]
[169.94793701 520.09484863]
[160.70404053 508.25982666]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 172]
[15 171]
[16 170]
[17 169]
[18 157]
[19 156]
[20 155]
[21 153]
[22 152]
[24 150]
[25 149]
[26 148]
[27 147]
[28 146]
[30 144]
[32 142]
[33 141]
[34 140]
[35 136]
[36 135]
[37 134]
[47 127]
[48 126]
[49 125]
[50 124]
[51 123]
[52 122]
[53 119]
[54 118]
[55 117]
[56 116]
[64 115]
[65 114]
[67 113]
[68 112]
[69 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
