%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[-4.71526909 387.04058838]
[-4.24108648 402.04968262]
[-5.48093653 417.01498413]
[-8.41865635 431.74142456]
[-13.01594543 446.03695679]
[-19.21286964 459.71527100]
[-26.92863846 472.59799194]
[-36.06266022 484.51718140]
[-46.49585724 495.31747437]
[-58.09220886 504.85803223]
[-70.70053864 513.01452637]
[-84.15645599 519.68054199]
[-98.28455353 524.76922607]
[-112.90063477 528.21423340]
[-127.81414032 529.97064209]
[-142.83065796 530.01550293]
[-157.75440979 528.34832764]
[-172.39082336 524.99084473]
[-186.54910278 519.98675537]
[-200.04466248 513.40130615]
[-212.70153809 505.32040405]
[-224.35475159 495.84936523]
[-234.85235596 485.11166382]
[-244.05749512 473.24731445]
[-251.85017395 460.41094971]
[-258.12878418 446.76995850]
[-262.81149292 432.50216675]
[-265.83724976 417.79357910]
[-267.16659546 402.83593750]
[-266.78216553 387.82427979]
[-264.68902588 372.95428467]
[-260.91445923 358.41983032]
[-255.50765991 344.41040039]
[-248.53910828 331.10864258]
[-240.09965515 318.68795776]
[-230.29934692 307.31027222]
[-219.26593018 297.12393188]
[-207.14326477 288.26171875]
[-194.08938599 280.83920288]
[-180.27447510 274.95309448]
[-165.87863159 270.68020630]
[-151.08955383 268.07620239]
[-136.10003662 267.17501831]
[-121.10550690 267.98843384]
[-106.30142975 270.50579834]
[-91.88082886 274.69436646]
[-78.03169250 280.49945068]
[-64.93457794 287.84542847]
[-56.15397644 275.68399048]
[-47.37337112 263.52252197]
[-38.59276962 251.36106873]
[-53.53500748 252.67617798]
[-65.11878967 243.14643860]
[-66.70839691 228.23089600]
[-57.39323044 216.47387695]
[-42.50944138 214.61030579]
[-30.58314133 223.70774841]
[-28.44602394 238.55383301]
[-18.61544228 227.22424316]
[-8.78486156 215.89465332]
[-6.77550697 208.78237915]
[1.27740800 204.47096252]
[11.27558041 193.28898621]
[21.10616112 181.95939636]
[30.76697159 170.48469543]
[40.42778015 159.00999451]
[50.08859253 147.53529358]
[59.74940109 136.06059265]
[69.41020966 124.58589172]
[79.07102203 113.11119080]
[88.73183441 101.63649750]
[74.03345490 104.62941742]
[60.01211166 99.30006409]
[51.01247787 87.29978943]
[49.82318497 72.34700775]
[56.81274796 59.07500839]
[69.81537628 51.59626007]
[84.80205536 52.22813034]
[97.12901306 60.77483368]
[102.97660065 74.58808136]
[100.53276825 89.38791656]
[111.63999939 79.30677795]
[122.74723816 69.22563934]
[132.32235718 57.67933655]
[140.17411804 44.89849472]
[148.02586365 32.11764908]
[155.87762451 19.33680725]
[157.70324707 10.38667488]
[163.94262695 6.42535400]
[171.98379517 -6.23717070]
[180.02496338 -18.89969635]
[188.06614685 -31.56222153]
[196.10731506 -44.22474670]
[196.97370911 -60.02221298]
[210.32809448 -66.61837769]
[211.19448853 -82.41584015]
[224.54888916 -89.01200104]
[232.59005737 -101.67453003]
[240.63122559 -114.33705139]
[248.67240906 -126.99958038]
[237.10130310 -136.57626343]
[226.82174683 -147.52769470]
[217.99588013 -159.68118286]
[210.76287842 -172.84503174]
[205.23683167 -186.81164551]
[201.50489807 -201.36073303]
[199.62591553 -216.26283264]
[199.62951660 -231.28292847]
[201.51567078 -246.18411255]
[205.25462341 -260.73141479]
[210.78738403 -274.69534302]
[218.02670288 -287.85571289]
[226.85842896 -300.00497437]
[237.14324951 -310.95144653]
[248.71894836 -320.52255249]
[261.40298462 -328.56735229]
[274.99530029 -334.95889282]
[289.28155518 -339.59646606]
[304.03637695 -342.40682983]
[319.02709961 -343.34576416]
[334.01727295 -342.39837646]
[348.77050781 -339.57965088]
[363.05410767 -334.93402100]
[376.64282227 -328.53475952]
[389.32232666 -320.48281860]
[400.89260864 -310.90518188]
[411.17123413 -299.95288086]
[419.99609375 -287.79864502]
[427.22796631 -274.63418579]
[432.75283813 -260.66711426]
[436.48358154 -246.11770630]
[438.36129761 -231.21545410]
[438.35641479 -216.19535828]
[436.46902466 -201.29431152]
[432.72885132 -186.74734497]
[427.19491577 -172.78387451]
[419.95446777 -159.62409973]
[411.12173462 -147.47561646]
[400.83599854 -136.52998352]
[389.25946045 -126.95984650]
[376.57476807 -118.91613007]
[362.98190308 -112.52571106]
[348.69528198 -107.88936615]
[333.94021606 -105.08022308]
[318.94940186 -104.14257812]
[303.95932007 -105.09121704]
[289.20629883 -107.91118622]
[274.92309570 -112.55801392]
[261.33493042 -118.95840454]
[253.29376221 -106.29587555]
[245.25257874 -93.63335419]
[237.21141052 -80.97083282]
[236.92018127 -66.07907104]
[222.99063110 -58.57720184]
[222.69940186 -43.68544388]
[208.76983643 -36.18357086]
[200.72866821 -23.52104759]
[192.68750000 -10.85852242]
[184.64631653 1.80400217]
[176.60514832 14.46652699]
[168.65846252 27.18856430]
[160.80670166 39.96940613]
[152.95495605 52.75024796]
[145.10319519 65.53108978]
[157.95960999 57.80369186]
[172.50802612 54.15082932]
[187.48988342 54.88851166]
[201.60908508 59.95292282]
[213.64416504 68.90594482]
[222.55400085 80.97303772]
[227.56779480 95.11029816]
[228.25178528 110.09469604]
[224.54679871 124.62992859]
[216.77339172 137.45857239]
[205.60398865 147.47079468]
[192.00489807 153.80046082]
[177.15255737 155.89997864]
[162.33184814 153.58773804]
[148.82490540 147.06373596]
[137.80021667 136.89239502]
[130.21153259 123.95362091]
[126.71533966 109.36675262]
[127.61410522 94.39370728]
[132.82836914 80.33287048]
[121.72113800 90.41400909]
[110.61390686 100.49514771]
[100.20653534 111.29730225]
[90.54572296 122.77200317]
[80.88491058 134.24670410]
[71.22410583 145.72140503]
[61.56329346 157.19610596]
[51.90248108 168.67080688]
[42.24167252 180.14550781]
[32.58086014 191.62020874]
[31.04805756 198.05154419]
[27.09136772 202.13095093]
[22.45755386 203.28715515]
[12.45938301 214.46913147]
[2.54473138 225.72523499]
[-7.28584957 237.05482483]
[-17.11643028 248.38441467]
[-26.43131256 260.14166260]
[-35.21191788 272.30313110]
[-43.99251938 284.46456909]
[-52.77312469 296.62603760]
[-41.67898560 306.74621582]
[-31.81080055 318.06506348]
[-23.29722214 330.43505859]
[-16.24924088 343.69491577]
[-10.75874043 357.67175293]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 205]
[49 204]
[50 203]
[51 202]
[58 201]
[59 200]
[60 199]
[62 198]
[63 197]
[64 194]
[65 193]
[66 192]
[67 191]
[68 190]
[69 189]
[70 188]
[71 187]
[81 186]
[82 185]
[83 184]
[84 164]
[85 163]
[86 162]
[87 161]
[89 160]
[90 159]
[91 158]
[92 157]
[93 156]
[95 154]
[97 152]
[98 151]
[99 150]
[100 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
