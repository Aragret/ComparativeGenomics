%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[125.41674042 535.26068115]
[116.42117310 547.70959473]
[102.39977264 553.97821045]
[87.12422180 552.38037109]
[74.70357513 543.34582520]
[68.47891235 529.30487061]
[70.12464905 514.03436279]
[79.19808197 501.64212036]
[93.25850677 495.46148682]
[94.81903076 480.54290771]
[96.37955475 465.62429810]
[97.94007111 450.70568848]
[91.56884003 437.24252319]
[100.69985199 424.32217407]
[102.26037598 409.40359497]
[103.82089996 394.48498535]
[105.38142395 379.56637573]
[99.01018524 366.10321045]
[108.14120483 353.18286133]
[109.70172119 338.26428223]
[109.47839355 323.26593018]
[107.47438049 308.40039062]
[105.47036743 293.53488159]
[103.46635437 278.66934204]
[101.46234131 263.80383301]
[99.45832825 248.93829346]
[91.61506653 244.77700806]
[86.48806000 237.36024475]
[85.33139038 228.27969360]
[88.52995300 219.55610657]
[95.48513031 213.18957520]
[94.14689636 198.24938965]
[92.80866241 183.30920410]
[91.47042847 168.36901855]
[82.64208984 180.49586487]
[68.40778351 185.22709656]
[54.07656097 180.79809570]
[44.99361038 168.86076355]
[44.54664993 153.86743164]
[52.90237808 141.41023254]
[66.94432068 136.13540649]
[81.43518066 140.01031494]
[90.97065735 151.59082031]
[91.41725922 136.59747314]
[91.86386871 121.60412598]
[92.31047058 106.61077881]
[89.38359070 99.10038757]
[92.87699890 91.39798737]
[93.54678345 76.41294861]
[90.80368042 67.70012665]
[94.33973694 61.21028137]
[95.23255157 46.23687363]
[96.12536621 31.26346970]
[85.91278839 19.50162888]
[87.03153229 4.32918406]
[98.30758667 -5.33446836]
[99.20040131 -20.30787468]
[100.09321594 -35.28128052]
[97.97859192 -50.13147736]
[92.94167328 -64.26050568]
[88.16098785 -68.82740021]
[86.63359833 -74.30135345]
[87.97197723 -78.88587189]
[83.35796356 -93.15859985]
[78.74395752 -107.43133545]
[64.79518890 -119.45271301]
[69.13604736 -136.45635986]
[64.31005096 -150.65881348]
[59.48405457 -164.86126709]
[54.65805435 -179.06372070]
[49.83205795 -193.26617432]
[45.00606155 -207.46862793]
[33.24017715 -218.04570007]
[36.47130203 -232.58561707]
[31.64530373 -246.78807068]
[16.83209229 -244.23558044]
[1.80195451 -244.03192139]
[-13.07497692 -246.18214417]
[-27.43234444 -250.63325500]
[-40.91658401 -257.27566528]
[-53.19564056 -265.94583130]
[-63.96712112 -276.43017578]
[-72.96577454 -288.47055054]
[-79.97000122 -301.77044678]
[-84.80731201 -316.00234985]
[-87.35858917 -330.81576538]
[-87.56099701 -345.84591675]
[-85.40956116 -360.72268677]
[-80.95725250 -375.07968140]
[-74.31372070 -388.56338501]
[-65.64257050 -400.84170532]
[-55.15732574 -411.61233521]
[-43.11620712 -420.60998535]
[-29.81572914 -427.61312866]
[-15.58343220 -432.44924927]
[-0.76979947 -434.99929810]
[14.26037121 -435.20046997]
[29.13694763 -433.04782104]
[43.49357986 -428.59432983]
[56.97672653 -421.94967651]
[69.25434875 -413.27749634]
[80.02410126 -402.79138184]
[89.02076721 -390.74951172]
[96.02279663 -377.44845581]
[100.85775757 -363.21575928]
[103.40659332 -348.40191650]
[103.60652161 -333.37173462]
[101.45262909 -318.49533081]
[96.99795532 -304.13906860]
[90.35219574 -290.65646362]
[81.67901611 -278.37957764]
[71.19199371 -267.61068726]
[59.14939117 -258.61502075]
[45.84775925 -251.61407471]
[50.67375565 -237.41162109]
[62.09445190 -227.85040283]
[59.20851517 -212.29463196]
[64.03451538 -198.09217834]
[68.86051178 -183.88972473]
[73.68650818 -169.68725586]
[78.51250458 -155.48480225]
[83.33850098 -141.28234863]
[94.04698944 -135.65608215]
[98.18383789 -123.86327362]
[93.01668549 -112.04534912]
[97.63069916 -97.77261353]
[102.24470520 -83.49987793]
[107.07070923 -69.29742432]
[112.10762024 -55.16839218]
[113.83168793 -70.06898499]
[118.67658234 -84.26500702]
[126.42189789 -97.11063385]
[136.71527100 -108.02146912]
[149.08842468 -116.50115967]
[162.97845459 -122.16391754]
[177.75347900 -124.75213623]
[192.74130249 -124.14807129]
[207.26011658 -120.37918854]
[220.64936829 -113.61696625]
[232.29997253 -104.16902924]
[241.68188477 -92.46519470]
[248.36828613 -79.03791046]
[252.05502319 -64.49803162]
[252.57432556 -49.50702667]
[249.90261841 -34.74687958]
[244.16140747 -20.88908386]
[235.61189270 -8.56407356]
[224.64302063 1.66744292]
[211.75381470 9.34000111]
[197.53062439 14.10455036]
[182.62051392 15.74433613]
[167.70181274 14.18475914]
[153.45321655 9.49676895]
[140.52291870 1.89363801]
[129.49919128 -8.27874184]
[120.88351440 -20.55759430]
[115.06661987 -34.38846207]
[114.17380524 -19.41505814]
[113.28099060 -4.44165230]
[123.32880402 6.49347353]
[122.63666534 21.69135475]
[111.09877014 32.15628433]
[110.20595551 47.12969208]
[109.31314087 62.10309601]
[108.53182220 77.08273315]
[107.86203766 92.06777191]
[107.30382538 107.05738068]
[106.85721588 122.05073547]
[106.41061401 137.04408264]
[105.96400452 152.03742981]
[106.41061401 167.03077698]
[107.74884796 181.97096252]
[109.08708191 196.91114807]
[110.42531586 211.85133362]
[123.79620361 228.59744263]
[114.32386017 246.93428040]
[116.32787323 261.79980469]
[118.33188629 276.66534424]
[120.33589935 291.53085327]
[122.33991241 306.39639282]
[124.34392548 321.26193237]
[129.78306580 307.28280640]
[139.62319946 295.96151733]
[152.70832825 288.62805176]
[167.50120544 286.14395142]
[182.26399231 288.80105591]
[195.26235962 296.28720093]
[204.96928406 307.72290039]
[210.24440002 321.76473999]
[210.46800232 336.76306152]
[205.61380005 350.95590210]
[196.25209045 362.67590332]
[183.48265076 370.54620361]
[168.80563354 373.64218140]
[153.94528198 371.60015869]
[140.64736938 364.66003418]
[130.47412109 353.63708496]
[124.62033081 339.82479858]
[123.05980682 354.74340820]
[129.31942749 369.27362061]
[120.30002594 381.12689209]
[118.73950195 396.04550171]
[117.17897797 410.96411133]
[115.61846161 425.88272095]
[121.87807465 440.41293335]
[112.85868073 452.26620483]
[111.29815674 467.18481445]
[109.73763275 482.10342407]
[108.17710876 497.02203369]
[120.65415192 505.97851562]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 209]
[10 208]
[11 207]
[12 206]
[14 204]
[15 203]
[16 202]
[17 201]
[19 199]
[20 198]
[21 181]
[22 180]
[23 179]
[24 178]
[25 177]
[26 176]
[31 174]
[32 173]
[33 172]
[34 171]
[43 170]
[44 169]
[45 168]
[46 167]
[48 166]
[49 165]
[51 164]
[52 163]
[53 162]
[56 159]
[57 158]
[58 157]
[59 129]
[60 128]
[63 127]
[64 126]
[65 125]
[67 122]
[68 121]
[69 120]
[70 119]
[71 118]
[72 117]
[74 115]
[75 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
