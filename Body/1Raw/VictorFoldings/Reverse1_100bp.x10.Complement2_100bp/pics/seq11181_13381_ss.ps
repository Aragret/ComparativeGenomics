%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[124.94044495 670.50671387]
[113.56121826 660.55664062]
[105.62179565 647.69360352]
[101.82815552 633.06146240]
[102.51761627 617.96124268]
[107.62887573 603.73571777]
[116.70744324 591.64971924]
[128.94606018 582.77801514]
[143.25646973 577.90936279]
[142.80986023 562.91601562]
[142.36326599 547.92266846]
[141.91665649 532.92932129]
[141.47004700 517.93597412]
[133.35723877 505.44473267]
[140.68022156 491.42028809]
[140.23362732 476.42694092]
[139.34080505 461.45355225]
[130.49888611 449.46731567]
[136.97415161 435.03189087]
[135.63591003 420.09170532]
[134.29768372 405.15151978]
[132.95944214 390.21133423]
[131.62121582 375.27114868]
[122.77928925 363.28491211]
[129.25454712 348.84948730]
[114.06021881 344.34854126]
[101.72650909 334.33712769]
[94.16066742 320.32522583]
[92.54722595 304.44439697]
[97.16267395 289.12338257]
[107.32860565 276.71676636]
[121.51122284 269.14300537]
[119.95069885 254.22441101]
[118.39017487 239.30581665]
[116.82965088 224.38720703]
[107.81025696 212.53395081]
[114.06987000 198.00370789]
[112.50935364 183.08509827]
[109.84355164 168.32388306]
[106.08725739 153.80183411]
[102.33095551 139.27976990]
[98.57465363 124.75770569]
[94.81835175 110.23564911]
[89.28392792 124.17732239]
[77.58172607 133.56126404]
[62.77066422 135.93453979]
[48.72232056 130.67677307]
[39.10889816 119.16233826]
[36.44332886 104.40108490]
[41.42237854 90.25155640]
[52.74453735 80.41241455]
[67.45021820 77.45558929]
[81.69540405 82.15397644]
[91.75601196 93.27865601]
[90.19548798 78.36004639]
[88.52394867 63.45347595]
[86.74147797 48.55975723]
[84.95901489 33.66604233]
[75.63665009 20.88308144]
[81.80673218 7.32655716]
[80.02426147 -7.56716013]
[78.24179840 -22.46087837]
[64.42230225 -25.90653610]
[52.63372421 -33.84571838]
[44.28072739 -45.30785751]
[40.35020828 -58.90409851]
[41.29471207 -72.99559021]
[46.98043823 -85.89101410]
[56.70576096 -96.04959106]
[69.28773499 -102.26515198]
[67.72721100 -117.18376160]
[66.16668701 -132.10237122]
[64.60616302 -147.02096558]
[63.04564285 -161.93957520]
[49.11787415 -168.26132202]
[40.28273392 -180.62405396]
[38.83153534 -195.64938354]
[45.05434799 -209.29241943]
[57.18883133 -217.93069458]
[55.62831116 -232.84930420]
[44.29891205 -223.01849365]
[29.52209663 -225.59643555]
[22.19078636 -238.68276978]
[27.70934677 -252.63072205]
[42.00970078 -257.15838623]
[54.54930496 -248.92956543]
[54.10269928 -263.92291260]
[42.88150024 -274.72674561]
[42.64216614 -289.93847656]
[53.01110458 -300.56961060]
[52.56449890 -315.56295776]
[52.11789322 -330.55630493]
[51.67128754 -345.54965210]
[43.52653503 -359.11334229]
[50.88146591 -372.06533813]
[50.43486023 -387.05868530]
[49.98825455 -402.05203247]
[35.76506424 -407.41574097]
[24.68057060 -417.81777954]
[18.42507744 -431.67190552]
[17.95250130 -446.86550903]
[23.33490753 -461.08163452]
[33.75151825 -472.15243530]
[47.61387634 -478.38967896]
[62.80807495 -478.84228516]
[77.01710510 -473.44116211]
[88.07419586 -463.01000977]
[94.29321289 -449.13946533]
[94.72581482 -433.94467163]
[89.30603027 -419.74276733]
[78.86032867 -408.69940186]
[64.98160553 -402.49862671]
[65.42820740 -387.50527954]
[65.87481689 -372.51193237]
[73.98762512 -360.02069092]
[66.66463470 -345.99624634]
[67.11124420 -331.00289917]
[67.55784607 -316.00955200]
[68.00445557 -301.01620483]
[78.98778534 -291.02111816]
[79.65429688 -275.82208252]
[69.09604645 -264.36950684]
[69.54265594 -249.37617493]
[70.54691315 -234.40982056]
[72.10743713 -219.49122620]
[85.76686096 -213.55105591]
[94.67827606 -201.49108887]
[96.36784363 -186.49069214]
[90.28230286 -172.56723022]
[77.96424866 -163.50009155]
[79.52477264 -148.58149719]
[81.08529663 -133.66288757]
[82.64581299 -118.74428558]
[84.20633698 -103.82567596]
[99.46599579 -99.55146027]
[111.94739532 -89.72477722]
[119.72101593 -75.82708740]
[121.57071686 -59.97204590]
[117.18388367 -44.58401871]
[107.20380402 -32.02740860]
[93.13551331 -24.24334335]
[94.91798401 -9.34962559]
[96.70044708 5.54409122]
[105.89532471 17.26175308]
[99.85272980 31.88357544]
[101.63520050 46.77729416]
[103.41766357 61.67100906]
[107.33373260 67.93888092]
[105.11408997 76.79953003]
[106.67461395 91.71813202]
[109.34040833 106.47934723]
[113.09671021 121.00141144]
[116.85301208 135.52346802]
[120.60931396 150.04553223]
[124.36561584 164.56758118]
[129.90003967 150.62591553]
[141.60223389 141.24197388]
[156.41329956 138.86869812]
[170.46163940 144.12646484]
[180.07507324 155.64089966]
[182.74063110 170.40214539]
[177.76158142 184.55168152]
[166.43942261 194.39082336]
[151.73374939 197.34764099]
[137.48857117 192.64926147]
[127.42795563 181.52458191]
[128.98847961 196.44319153]
[138.11949158 209.36352539]
[131.74826050 222.82667542]
[133.30877686 237.74528503]
[134.86930847 252.66389465]
[136.42982483 267.58248901]
[150.19648743 271.23352051]
[161.86555481 279.34735107]
[170.04698181 290.93258667]
[173.77462769 304.58581543]
[172.62043762 318.66168213]
[166.74334717 331.47103882]
[156.86784363 341.48370361]
[144.19473267 347.51123047]
[153.13237000 360.56610107]
[146.56138611 373.93289185]
[147.89962769 388.87307739]
[149.23785400 403.81326294]
[150.57609558 418.75344849]
[151.91433716 433.69363403]
[160.85197449 446.74850464]
[154.28099060 460.11529541]
[156.90374756 463.57580566]
[158.16232300 467.31484985]
[158.13665771 470.86941528]
[157.04887390 473.84988403]
[155.22697449 475.98034668]
[155.67358398 490.97369385]
[163.81832886 504.53738403]
[156.46339417 517.48937988]
[156.91000366 532.48272705]
[157.35661316 547.47607422]
[157.80322266 562.46942139]
[158.24981689 577.46276855]
[172.82464600 581.47100830]
[185.56962585 589.59851074]
[195.35147095 601.12274170]
[201.30038452 615.01885986]
[202.88740540 630.05120850]
[199.97140503 644.88323975]
[192.81167603 658.19598389]
[182.04487610 668.80578613]
[168.62834167 675.76910400]
[153.75509644 678.46685791]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 200]
[10 199]
[11 198]
[12 197]
[13 196]
[15 194]
[16 193]
[17 188]
[19 186]
[20 185]
[21 184]
[22 183]
[23 182]
[25 180]
[32 172]
[33 171]
[34 170]
[35 169]
[37 167]
[38 166]
[39 155]
[40 154]
[41 153]
[42 152]
[43 151]
[54 150]
[55 149]
[56 147]
[57 146]
[58 145]
[60 143]
[61 142]
[62 141]
[70 134]
[71 133]
[72 132]
[73 131]
[74 130]
[79 125]
[80 124]
[86 123]
[87 122]
[90 119]
[91 118]
[92 117]
[93 116]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
