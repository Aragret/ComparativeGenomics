%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUG\
) } def
/len { sequence length } bind def

/coor [
[124.85067749 654.81011963]
[117.57586670 641.57177734]
[114.32675934 626.81982422]
[115.36673737 611.75018311]
[120.61150360 597.58441162]
[129.63589478 585.47088623]
[141.70831299 576.39160156]
[155.85014343 571.08258057]
[154.73449707 556.12414551]
[153.61885071 541.16571045]
[152.50320435 526.20721436]
[148.87091064 519.77075195]
[151.48397827 511.01806641]
[143.00286865 498.77389526]
[149.90504456 484.53765869]
[149.01222229 469.56423950]
[148.11941528 454.59085083]
[147.22659302 439.61743164]
[146.33378601 424.64404297]
[145.44096375 409.67062378]
[144.54814148 394.69720459]
[143.65533447 379.72381592]
[142.76251221 364.75039673]
[141.86970520 349.77700806]
[140.97688293 334.80358887]
[129.70083618 325.13995361]
[128.58209229 309.96749878]
[138.79466248 298.20565796]
[137.90185547 283.23223877]
[137.00903320 268.25885010]
[136.11622620 253.28544617]
[135.22340393 238.31202698]
[134.33058167 223.33862305]
[132.88116455 208.40881348]
[130.87715149 193.54328918]
[126.79748535 179.10873413]
[120.72365570 165.39347839]
[114.64981842 151.67820740]
[108.57598877 137.96293640]
[102.50215149 124.24767303]
[96.42832184 110.53240204]
[90.02871704 124.09872437]
[75.95785522 129.29592896]
[62.27617264 123.14682770]
[56.82114792 109.17389679]
[62.71767426 95.38147736]
[76.58795166 89.67047882]
[90.48577118 95.31176758]
[85.65977478 81.10931396]
[80.94760895 76.47174835]
[79.50189209 70.97566223]
[80.90837860 66.41158295]
[76.50737762 52.07173538]
[72.10637665 37.73188782]
[67.70538330 23.39204025]
[63.30438232 9.05219364]
[58.79675293 -5.25449324]
[54.18274307 -19.52722740]
[42.57564163 -30.27830696]
[46.02288818 -44.76850128]
[41.40887833 -59.04123688]
[36.79486847 -73.31397247]
[30.87169075 -59.53297043]
[18.03880501 -51.76656342]
[3.08255911 -52.91143417]
[-8.41873550 -62.54056549]
[-12.17538166 -77.06253815]
[-6.78624296 -91.06100464]
[5.73866558 -99.31489563]
[20.72786140 -98.74570465]
[32.59140778 -89.56476593]
[29.70613670 -104.28466034]
[26.82086372 -119.00454712]
[16.57356453 -131.05873108]
[21.71826935 -145.03662109]
[18.83299828 -159.75651550]
[3.83723950 -158.85614014]
[-11.14472294 -159.96260071]
[-25.84551811 -163.05615234]
[-40.00279236 -168.08157349]
[-53.36389542 -174.94920349]
[-65.69038391 -183.53648376]
[-76.76226807 -193.69013977]
[-86.38196564 -205.22897339]
[-94.37779999 -217.94708252]
[-100.60707855 -231.61746216]
[-104.95862579 -245.99618530]
[-107.35478973 -260.82662964]
[-107.75280762 -275.84411621]
[-106.14556885 -290.78063965]
[-102.56175995 -305.36968994]
[-97.06534576 -319.35083008]
[-89.75440979 -332.47460938]
[-80.75942230 -344.50680542]
[-70.24091339 -355.23269653]
[-58.38659286 -364.46084595]
[-45.40802383 -372.02655029]
[-31.53681946 -377.79483032]
[-17.02052498 -381.66275024]
[-2.11820436 -383.56121826]
[12.90419388 -383.45645142]
[27.77857780 -381.35021973]
[42.23949814 -377.28018188]
[56.02887726 -371.31893921]
[68.90063477 -363.57287598]
[80.62505341 -354.18026733]
[90.99290466 -343.30868530]
[99.81914520 -331.15216064]
[106.94628143 -317.92767334]
[112.24710846 -303.87118530]
[115.62702942 -289.23358154]
[117.02573395 -274.27606201]
[116.41824341 -259.26559448]
[113.81541443 -244.47003174]
[109.26368713 -230.15342712]
[102.84429932 -216.57127380]
[94.67180634 -203.96595764]
[84.89206696 -192.56245422]
[73.67960358 -182.56423950]
[61.23451233 -174.14978027]
[47.77889633 -167.46922302]
[33.55289078 -162.64178467]
[36.43815994 -147.92189026]
[46.47908783 -136.92057800]
[41.54075623 -121.88982391]
[44.42602921 -107.16992950]
[47.31130219 -92.45003510]
[51.06760025 -77.92797852]
[55.68161011 -63.65524673]
[60.29561996 -49.38251114]
[71.57270050 -39.65231323]
[68.45547485 -24.14123535]
[73.06948853 -9.86850262]
[78.11805725 -4.47093725]
[77.64422607 4.65119553]
[82.04522705 18.99104309]
[86.44622803 33.33089066]
[90.84722137 47.67073822]
[95.24822235 62.01058578]
[99.86222839 76.28331757]
[104.68823242 90.48577118]
[110.14358521 104.45857239]
[116.21742249 118.17383575]
[122.29125214 131.88909912]
[128.36508179 145.60437012]
[134.43891907 159.31964111]
[140.51275635 173.03489685]
[141.43936157 158.06355286]
[146.68145752 144.00935364]
[155.78558350 132.08815002]
[167.96411133 123.33124542]
[182.16348267 118.49618530]
[197.15530396 118.00125885]
[211.64265442 121.88928223]
[224.37222290 129.82389832]
[234.24276733 141.11869812]
[240.40039062 154.79655457]
[242.31240845 169.67419434]
[239.81338501 184.46455383]
[233.11953735 197.88812256]
[222.80993652 208.78364563]
[209.77647400 216.20851135]
[195.14666748 219.52043152]
[180.18614197 218.43287659]
[166.18914795 213.03993225]
[154.36653137 203.80813599]
[145.74269104 191.53927612]
[147.74670410 206.40480042]
[158.77838135 196.24104309]
[173.62539673 198.37788391]
[181.34307861 211.24012756]
[176.24224854 225.34620667]
[162.08303833 230.29763794]
[149.30400085 222.44581604]
[150.19680786 237.41921997]
[151.08963013 252.39262390]
[151.98243713 267.36602783]
[152.87525940 282.33944702]
[153.76806641 297.31283569]
[165.30596924 307.77777100]
[165.99810791 322.97564697]
[155.95028687 333.91076660]
[156.84310913 348.88418579]
[157.73591614 363.85760498]
[158.62873840 378.83099365]
[159.52156067 393.80441284]
[160.41436768 408.77780151]
[161.30718994 423.75122070]
[162.19999695 438.72460938]
[163.09281921 453.69802856]
[163.98562622 468.67141724]
[164.87844849 483.64483643]
[173.42343140 496.96002197]
[166.45739746 510.12524414]
[167.46165466 525.09161377]
[168.57730103 540.05004883]
[169.69294739 555.00848389]
[170.80859375 569.96697998]
[185.58149719 573.11938477]
[198.86720276 580.30737305]
[209.58866882 590.94818115]
[216.87677002 604.17919922]
[220.14070129 618.92791748]
[219.11585999 633.99859619]
[213.88533020 648.16961670]
[204.87312317 660.29223633]
[192.80981445 669.38360596]
[178.67332458 674.70678711]
[163.60964966 675.83032227]
[148.83992004 672.66302490]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 198]
[9 197]
[10 196]
[11 195]
[13 194]
[15 192]
[16 191]
[17 190]
[18 189]
[19 188]
[20 187]
[21 186]
[22 185]
[23 184]
[24 183]
[25 182]
[28 179]
[29 178]
[30 177]
[31 176]
[32 175]
[33 174]
[34 168]
[35 167]
[36 147]
[37 146]
[38 145]
[39 144]
[40 143]
[41 142]
[48 141]
[49 140]
[52 139]
[53 138]
[54 137]
[55 136]
[56 135]
[57 133]
[58 132]
[60 130]
[61 129]
[62 128]
[71 127]
[72 126]
[73 125]
[75 123]
[76 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
