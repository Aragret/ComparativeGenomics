%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[57.30627060 753.51123047]
[43.78739929 746.94940186]
[31.36806107 738.48901367]
[20.31297112 728.31048584]
[10.85777378 716.63067627]
[3.20400500 703.69866943]
[-2.48519444 689.78997803]
[-6.08855867 675.20117188]
[-7.52928209 660.24316406]
[-6.77665520 645.23480225]
[-3.84672046 630.49597168]
[1.19807041 616.34082031]
[8.25018692 603.07110596]
[17.15931320 590.96960449]
[27.73555183 580.29437256]
[39.75346756 571.27288818]
[52.95689774 564.09741211]
[67.06441498 558.92095947]
[81.77530670 555.85375977]
[80.88249207 540.88037109]
[79.98967743 525.90698242]
[79.09686279 510.93356323]
[69.20619965 522.21075439]
[54.40033340 524.61621094]
[41.44829559 517.05017090]
[36.27158737 502.97177124]
[41.23693085 488.81741333]
[54.07423782 481.05831909]
[68.91446686 483.24182129]
[78.97356415 494.37136841]
[79.64334869 479.38635254]
[69.43383789 468.60202026]
[69.89962769 453.39553833]
[81.28043365 442.75997925]
[81.95021820 427.77493286]
[82.62000275 412.78988647]
[83.28978729 397.80484009]
[73.08027649 387.02053833]
[73.54606628 371.81402588]
[84.92687225 361.17849731]
[85.59665680 346.19345093]
[76.68204498 331.07733154]
[86.72080231 315.64022827]
[87.16741180 300.64688110]
[87.61401367 285.65350342]
[88.06062317 270.66015625]
[80.70568848 257.70816040]
[88.85044098 244.14448547]
[81.49550629 231.19248962]
[89.64025879 217.62879944]
[90.08686829 202.63545227]
[90.53347778 187.64210510]
[90.98007965 172.64874268]
[91.42668915 157.65539551]
[82.28800201 142.67369080]
[92.09580994 127.08882141]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[92.90585327 72.68785095]
[93.12918091 57.68951416]
[93.24084473 42.68992996]
[93.01751709 27.69159317]
[92.57091522 12.69824314]
[92.12430573 -2.29510713]
[91.67770386 -17.28845787]
[91.23109436 -32.28180695]
[78.28104401 -44.04257202]
[77.85190582 -61.19281006]
[89.72097015 -73.10767365]
[89.05118561 -88.09271240]
[87.71295166 -103.03289795]
[85.70893860 -117.89842224]
[83.70492554 -132.76396179]
[81.36943817 -147.58102417]
[78.70364380 -162.34223938]
[76.03784943 -177.10345459]
[73.37205505 -191.86466980]
[70.70626068 -206.62588501]
[68.04045868 -221.38711548]
[60.96169281 -208.16247559]
[47.90900040 -200.77143860]
[32.92691040 -201.50421143]
[20.65778351 -210.13372803]
[14.90334034 -223.98603821]
[17.44666100 -238.76884460]
[27.49966621 -249.90155029]
[41.94732666 -253.93455505]
[56.31287766 -249.61819458]
[66.14510345 -238.28968811]
[65.47531128 -253.27473450]
[64.80552673 -268.25976562]
[64.13574219 -283.24481201]
[55.16130829 -292.50885010]
[54.91194153 -305.00369263]
[62.97601700 -314.02020264]
[62.52941132 -329.01354980]
[62.08280563 -344.00689697]
[48.11925125 -350.16986084]
[38.21906281 -361.78659058]
[34.34792709 -376.55065918]
[37.27445984 -391.53057861]
[46.41759872 -403.75210571]
[59.96196365 -410.78863525]
[75.21831512 -411.24307251]
[89.15749359 -405.02520752]
[99.01185608 -393.36953735]
[102.82482147 -378.59036255]
[99.83932495 -363.62207031]
[90.64812469 -351.43664551]
[77.07615662 -344.45352173]
[77.52275848 -329.46014404]
[77.96936798 -314.46679688]
[87.98357391 -300.05560303]
[79.12078094 -283.91458130]
[79.79056549 -268.92956543]
[80.46035004 -253.94451904]
[81.13014221 -238.95947266]
[82.80168152 -224.05290222]
[85.46747589 -209.29168701]
[88.13327026 -194.53047180]
[90.79906464 -179.76925659]
[93.46485901 -165.00804138]
[96.13065338 -150.24681091]
[98.80321503 -147.94686890]
[100.49455261 -144.23817444]
[100.55467987 -139.59600830]
[98.57045746 -134.76797485]
[100.57447052 -119.90244293]
[102.57848358 -105.03691101]
[112.51053619 -116.27764893]
[127.47282410 -117.34062195]
[138.89427185 -107.61691284]
[140.23214722 -92.67669678]
[130.72006226 -81.07840729]
[115.80696106 -79.46607971]
[104.03622437 -88.76249695]
[104.70600891 -73.77745819]
[115.33805847 -66.49810028]
[119.90433502 -54.24121857]
[116.52780151 -41.40340424]
[106.22444153 -32.72841263]
[106.67105103 -17.73506355]
[107.11765289 -2.74171305]
[107.56426239 12.25163651]
[108.01086426 27.24498749]
[110.81098175 31.11388779]
[111.21041107 36.78288269]
[108.24084473 42.68992996]
[111.38434601 49.37874222]
[108.12751770 57.91284180]
[107.90419006 72.91117859]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[107.09414673 127.31214905]
[115.50126648 137.09391785]
[115.00648499 149.58148193]
[106.42003632 158.10200500]
[105.97342682 173.09535217]
[105.52682495 188.08869934]
[105.08021545 203.08206177]
[104.63361359 218.07540894]
[111.95659637 232.09982300]
[103.84378815 244.59109497]
[111.16677856 258.61550903]
[103.05397034 271.10678101]
[102.60736084 286.10012817]
[102.16075897 301.09347534]
[101.71414948 316.08682251]
[109.97470093 325.99267578]
[109.29405975 338.47149658]
[100.58169556 346.86322021]
[99.91191101 361.84826660]
[110.29847717 373.45675659]
[109.40575409 388.64416504]
[98.27482605 398.47463989]
[97.60504150 413.45968628]
[96.93525696 428.44473267]
[96.26547241 443.42974854]
[106.65203857 455.03823853]
[105.75931549 470.22567749]
[94.62838745 480.05612183]
[93.95860291 495.04116821]
[94.07026672 510.04074097]
[94.96308136 525.01416016]
[95.85589600 539.98754883]
[96.74871826 554.96099854]
[111.71984863 556.25830078]
[126.34252930 559.72167969]
[140.30508423 565.27728271]
[153.30987549 572.80676270]
[165.07972717 582.14959717]
[175.36375427 593.10662842]
[183.94276428 605.44433594]
[190.63388062 618.89971924]
[195.29447937 633.18591309]
[197.82524109 647.99853516]
[198.17219543 663.02178955]
[196.32797241 677.93542480]
[192.33186340 692.42156982]
[186.26905823 706.17150879]
[178.26876831 718.89208984]
[168.50154114 730.31219482]
[157.17555237 740.18841553]
[144.53222656 748.31024170]
[130.84104919 754.50457764]
[116.39384460 758.63928223]
[101.49855804 760.62640381]
[86.47269440 760.42340088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 188]
[20 187]
[21 186]
[22 185]
[30 184]
[31 183]
[34 180]
[35 179]
[36 178]
[37 177]
[40 174]
[41 173]
[43 170]
[44 169]
[45 168]
[46 167]
[48 165]
[50 163]
[51 162]
[52 161]
[53 160]
[54 159]
[56 156]
[57 155]
[59 153]
[60 152]
[61 151]
[62 149]
[63 146]
[64 145]
[65 144]
[66 143]
[67 142]
[70 138]
[71 137]
[72 130]
[73 129]
[74 128]
[75 124]
[76 123]
[77 122]
[78 121]
[79 120]
[80 119]
[90 118]
[91 117]
[92 116]
[93 115]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
