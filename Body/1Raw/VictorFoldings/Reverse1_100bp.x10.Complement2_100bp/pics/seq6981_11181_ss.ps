%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[120.28546143 716.97729492]
[131.76860046 706.36260986]
[130.87579346 691.38922119]
[129.98297119 676.41583252]
[129.09016418 661.44238281]
[128.19734192 646.46899414]
[114.81678009 639.92480469]
[106.45276642 627.47894287]
[105.43468475 612.41809082]
[112.13587189 598.78027344]
[124.84651184 590.27221680]
[123.95368958 575.29876709]
[115.47257233 563.05462646]
[122.37474823 548.81835938]
[121.48193359 533.84497070]
[120.03251648 518.91516113]
[118.02850342 504.04962158]
[116.02449036 489.18411255]
[114.02047729 474.31857300]
[112.01646423 459.45306396]
[110.01245117 444.58752441]
[100.58615875 437.00653076]
[98.79492188 424.63821411]
[106.13877106 414.03488159]
[104.35630798 399.14114380]
[100.44024658 392.87329102]
[102.65988159 384.01263428]
[93.64048767 372.15939331]
[99.90010071 357.62915039]
[90.88070679 345.77587891]
[97.14031982 331.24563599]
[95.57979584 316.32702637]
[91.75748444 310.00155640]
[94.10880280 301.17495728]
[92.77056885 286.23477173]
[82.34648895 297.02081299]
[67.35166168 297.41461182]
[56.37579727 287.19061279]
[55.70637131 272.20553589]
[65.72686005 261.04357910]
[80.69707489 260.09875488]
[92.04096222 269.91149902]
[92.04096222 254.91148376]
[92.04096222 239.91148376]
[92.04096222 224.91148376]
[84.30366516 212.18421936]
[92.04096222 198.38404846]
[92.04096222 183.38404846]
[92.04096222 168.38404846]
[92.04096222 153.38404846]
[92.04096222 138.38404846]
[88.89746857 131.69523621]
[92.15429688 123.16113281]
[92.37762451 108.16278839]
[92.48928833 93.16320801]
[92.48928833 78.16320801]
[92.37762451 63.16362381]
[92.15429688 48.16528702]
[91.93096924 33.16695023]
[83.98905945 19.48350334]
[91.53601074 6.64244461]
[83.59410858 -7.04100132]
[91.14105988 -19.88205910]
[82.86852264 -7.36946011]
[69.77342224 -0.05383058]
[54.78124619 0.43049943]
[41.24127579 -6.02467060]
[32.17837906 -17.97723961]
[29.61723137 -32.75697327]
[34.12999725 -47.06203842]
[44.70851135 -57.69665146]
[58.98951340 -62.28501129]
[73.78258514 -59.80206680]
[85.78292084 -50.80250931]
[92.30961609 -37.29684830]
[94.53472900 -52.13089371]
[96.75984955 -66.96493530]
[98.98496246 -81.79898071]
[101.21008301 -96.63302612]
[103.43519592 -111.46706390]
[105.43920898 -126.33259583]
[107.22167969 -141.22631836]
[101.17909241 -155.84812927]
[110.37396240 -167.56579590]
[112.15642548 -182.45951843]
[106.11383820 -197.08132935]
[115.30871582 -208.79899597]
[117.09117889 -223.69271851]
[111.04859161 -238.31454468]
[120.24346161 -250.03219604]
[118.15599060 -258.92489624]
[122.16494751 -265.13378906]
[124.16896057 -279.99929810]
[126.17297363 -294.86483765]
[118.78555298 -311.73217773]
[130.04553223 -325.19250488]
[131.82800293 -340.08621216]
[125.78540802 -354.70803833]
[134.98028564 -366.42568970]
[136.76274109 -381.31942749]
[123.02500153 -387.65420532]
[111.91857147 -397.92562866]
[104.53154755 -411.12741089]
[101.58762360 -425.96618652]
[103.37522888 -440.98815918]
[109.71923065 -454.72164917]
[119.99810028 -465.82119751]
[133.20483398 -473.19937134]
[148.04554749 -476.13333130]
[163.06631470 -474.33566284]
[176.79556274 -467.98248291]
[187.88821411 -457.69616699]
[195.25755310 -444.48449707]
[198.18157959 -429.64181519]
[196.37384033 -414.62225342]
[190.01144409 -400.89727783]
[179.71771240 -389.81149292]
[166.50109863 -382.45101929]
[151.65646362 -379.53695679]
[149.87399292 -364.64321899]
[156.04408264 -351.08670044]
[146.72171021 -338.30374146]
[144.93925476 -323.41003418]
[152.16676331 -313.71005249]
[150.80364990 -301.28726196]
[141.03849792 -292.86080933]
[139.03448486 -277.99530029]
[137.03047180 -263.12976074]
[135.13717651 -248.24972534]
[141.30726624 -234.69320679]
[131.98489380 -221.91024780]
[130.20242310 -207.01652527]
[136.37251282 -193.46000671]
[127.05014801 -180.67704773]
[125.26767731 -165.78332520]
[131.43775940 -152.22680664]
[122.11539459 -139.44384766]
[120.33293152 -124.55013275]
[122.52815247 -120.30866241]
[122.08220673 -114.64313507]
[118.26924133 -109.24195099]
[116.04412842 -94.40790558]
[113.81900787 -79.57386017]
[111.59389496 -64.73982239]
[109.36877441 -49.90577316]
[107.14365387 -35.07173157]
[106.13939667 -20.10538673]
[114.06533051 -7.49472284]
[106.53434753 6.41911697]
[114.46028137 19.02978134]
[106.92930603 32.94362259]
[107.15263367 47.94195938]
[107.37596130 62.94029617]
[110.61869812 69.58156586]
[107.48928833 78.16320801]
[107.48928833 93.16320801]
[110.63848877 100.58312225]
[107.37596130 108.38612366]
[107.15263367 123.38446045]
[107.04096222 138.38404846]
[107.04096222 153.38404846]
[107.04096222 168.38404846]
[107.04096222 183.38404846]
[107.04096222 198.38404846]
[114.77826691 212.18421936]
[107.04096222 224.91148376]
[107.04096222 239.91148376]
[107.04096222 254.91148376]
[107.04096222 269.91149902]
[107.71075439 284.89651489]
[109.04898834 299.83670044]
[110.49840546 314.76651001]
[112.05892944 329.68511963]
[121.18994141 342.60546875]
[114.81870270 356.06863403]
[123.94972229 368.98895264]
[117.57848358 382.45211792]
[119.25002289 397.35870361]
[121.03249359 412.25241089]
[132.40844727 426.73236084]
[124.87797546 442.58349609]
[126.88198853 457.44903564]
[128.88600159 472.31457520]
[130.89001465 487.18008423]
[132.89402771 502.04562378]
[134.89804077 516.91113281]
[145.92971802 506.74737549]
[160.77673340 508.88421631]
[168.49443054 521.74645996]
[163.39360046 535.85253906]
[149.23439026 540.80401611]
[136.45533752 532.95214844]
[137.34815979 547.92553711]
[145.89314270 561.24072266]
[138.92709351 574.40600586]
[139.81991577 589.37939453]
[153.45150757 596.31671143]
[161.72581482 609.06164551]
[162.50465393 624.13677979]
[155.67884827 637.48834229]
[143.17074585 645.57617188]
[144.06356812 660.54956055]
[144.95637512 675.52301025]
[145.84919739 690.49639893]
[146.74200439 705.46978760]
[159.40515137 714.64471436]
[163.15798950 729.82531738]
[156.22854614 743.84375000]
[141.88871765 750.08099365]
[126.90930176 745.59197998]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 205]
[3 204]
[4 203]
[5 202]
[6 201]
[11 196]
[12 195]
[14 193]
[15 192]
[16 186]
[17 185]
[18 184]
[19 183]
[20 182]
[21 181]
[24 179]
[25 178]
[27 177]
[29 175]
[31 173]
[32 172]
[34 171]
[35 170]
[42 169]
[43 168]
[44 167]
[45 166]
[47 164]
[48 163]
[49 162]
[50 161]
[51 160]
[53 159]
[54 158]
[55 156]
[56 155]
[57 153]
[58 152]
[59 151]
[61 149]
[63 147]
[75 146]
[76 145]
[77 144]
[78 143]
[79 142]
[80 141]
[81 138]
[82 137]
[84 135]
[85 134]
[87 132]
[88 131]
[90 129]
[92 128]
[93 127]
[94 126]
[96 123]
[97 122]
[99 120]
[100 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
