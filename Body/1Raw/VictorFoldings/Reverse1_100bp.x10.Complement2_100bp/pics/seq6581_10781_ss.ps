%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[78.84270477 620.07653809]
[64.57190704 624.71520996]
[50.02051163 628.37988281]
[35.25490952 631.05383301]
[20.34247780 632.72485352]
[5.35125589 633.38531494]
[-9.65035248 633.03222656]
[-24.59389877 631.66717529]
[-39.41119766 629.29638672]
[-54.03464127 625.93072510]
[-68.39750671 621.58544922]
[-82.43425751 616.28051758]
[-96.08084106 610.04003906]
[-109.27500153 602.89251709]
[-121.95653534 594.87054443]
[-134.06756592 586.01080322]
[-145.55285645 576.35357666]
[-156.35997009 565.94305420]
[-166.43962097 554.82672119]
[-175.74581909 543.05523682]
[-184.23608398 530.68231201]
[-191.87167358 517.76446533]
[-198.61778259 504.36062622]
[-204.44358826 490.53195190]
[-209.32254028 476.34149170]
[-213.23236084 461.85403442]
[-216.15521240 447.13568115]
[-218.07775879 432.25360107]
[-218.99122620 417.27566528]
[-218.89144897 402.27023315]
[-217.77888489 387.30575562]
[-215.65859985 372.45056152]
[-212.54028320 357.77236938]
[-208.43815613 343.33819580]
[-203.37094116 329.21386719]
[-197.36174011 315.46386719]
[-190.43800354 302.15093994]
[-182.63128662 289.33578491]
[-173.97724915 277.07687378]
[-164.51533508 265.43020630]
[-154.28875732 254.44885254]
[-143.34414673 244.18295288]
[-131.73146057 234.67935181]
[-119.50367737 225.98141479]
[-106.71659088 218.12879944]
[-93.42855072 211.15736389]
[-79.70018005 205.09890747]
[-65.59413147 199.98107910]
[-51.17475128 195.82722473]
[-36.50784302 192.65631104]
[-21.66032791 190.48277283]
[-6.69995117 189.31657410]
[8.30502701 189.16299438]
[23.28614044 190.02275085]
[38.17503357 191.89192200]
[52.90377045 194.76199341]
[67.40514374 198.61984253]
[72.23114777 184.41737366]
[77.05714417 170.21492004]
[81.88314056 156.01246643]
[86.70913696 141.81001282]
[91.53513336 127.60755920]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[90.49746704 73.42967224]
[89.38182068 58.47121811]
[88.26617432 43.51276398]
[87.15052032 28.55431175]
[85.59000397 13.63570786]
[83.58599091 -1.22982061]
[81.58197021 -16.09534836]
[79.57795715 -30.96087646]
[77.57394409 -45.82640457]
[69.91172791 -32.93104172]
[56.54202652 -26.13022041]
[41.60760117 -27.53124619]
[29.73603630 -36.69999695]
[24.60587311 -50.79543686]
[27.80674362 -65.44993591]
[38.34682465 -76.12265015]
[52.96015549 -79.50650787]
[67.11864471 -74.55299377]
[76.43521118 -62.79676437]
[76.43521118 -77.79676056]
[76.43521118 -92.79676056]
[76.43521118 -107.79676056]
[76.43521118 -122.79676056]
[61.62414551 -125.40508270]
[47.49108124 -130.54586792]
[34.46551895 -138.06289673]
[22.94327927 -147.72773743]
[13.27451897 -159.24668884]
[5.75305605 -172.26969910]
[0.60746080 -186.40101624]
[-2.00589800 -201.21119690]
[-2.00760365 -216.25018311]
[0.60239595 -231.06095886]
[5.74478579 -245.19343567]
[13.26329422 -258.21813965]
[22.92944336 -269.73928833]
[34.44948959 -279.40673828]
[47.47334671 -286.92672729]
[61.60524368 -292.07070923]
[76.41571808 -294.68240356]
[91.45470428 -294.68240356]
[106.26518250 -292.07070923]
[120.39707947 -286.92672729]
[133.42094421 -279.40673828]
[144.94097900 -269.73928833]
[154.60713196 -258.21813965]
[162.12564087 -245.19343567]
[167.26803589 -231.06095886]
[169.87803650 -216.25018311]
[169.87632751 -201.21119690]
[167.26296997 -186.40101624]
[162.11737061 -172.26969910]
[154.59591675 -159.24668884]
[144.92715454 -147.72773743]
[133.40490723 -138.06289673]
[120.37934875 -130.54586792]
[106.24628448 -125.40508270]
[91.43521118 -122.79676056]
[91.43521118 -107.79676056]
[91.43521118 -92.79676056]
[91.43521118 -77.79676056]
[91.43521118 -62.79676437]
[92.43947601 -47.83041763]
[94.44348907 -32.96488953]
[96.44750214 -18.09936333]
[98.45151520 -3.23383427]
[100.45552826 11.63169384]
[102.60041809 13.43657112]
[104.15961456 16.19981766]
[104.76449585 19.70260429]
[104.13240814 23.59683037]
[102.10897827 27.43866348]
[103.22462463 42.39711761]
[104.34027100 57.35557175]
[105.45592499 72.31402588]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[113.99517059 97.69975281]
[122.42630768 85.29347229]
[133.29673767 74.95742035]
[146.11190796 67.16182709]
[160.28883362 62.26134491]
[175.18255615 60.47890472]
[190.11550903 61.89560318]
[204.40834045 66.44698334]
[217.41081238 73.92598724]
[228.53141785 83.99237061]
[237.26423645 96.18818665]
[243.21197510 109.95860291]
[246.10406494 124.67716217]
[245.80892944 139.67425537]
[242.33998108 154.26762390]
[235.85505676 167.79336548]
[226.64916992 179.63615417]
[215.14112854 189.25721741]
[201.85444641 196.21885681]
[187.39361572 200.20437622]
[172.41648865 201.03244019]
[157.60443115 198.66540527]
[143.63128662 193.21092224]
[131.13275146 184.91717529]
[120.67740631 174.16143799]
[112.74091339 161.43304443]
[107.68432617 147.31103516]
[105.73759460 132.43354797]
[100.91159058 146.63601685]
[96.08559418 160.83847046]
[91.25959778 175.04092407]
[86.43360138 189.24337769]
[81.60760498 203.44583130]
[95.45724487 209.22166443]
[108.88536835 215.91931152]
[121.83069611 223.50820923]
[134.23416138 231.95373535]
[146.03918457 241.21736145]
[157.19187927 251.25680542]
[167.64135742 262.02624512]
[177.33996582 273.47659302]
[186.24342346 285.55554199]
[194.31112671 298.20800781]
[201.50625610 311.37628174]
[207.79597473 325.00024414]
[213.15159607 339.01773071]
[217.54867554 353.36483765]
[220.96714783 367.97601318]
[223.39141846 382.78466797]
[224.81042480 397.72317505]
[225.21769714 412.72341919]
[224.61137390 427.71691895]
[222.99423218 442.63528442]
[220.37362671 457.41046143]
[216.76153564 471.97497559]
[212.17442322 486.26245117]
[206.63323975 500.20764160]
[200.16325378 513.74688721]
[192.79399109 526.81854248]
[184.55908203 539.36279297]
[175.49609375 551.32250977]
[165.64637756 562.64312744]
[155.05487061 573.27294922]
[143.76991272 583.16351318]
[131.84298706 592.26959229]
[119.32852936 600.54980469]
[106.28362274 607.96618652]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 176]
[58 175]
[59 174]
[60 173]
[61 172]
[62 171]
[63 143]
[65 141]
[66 140]
[67 139]
[68 138]
[69 137]
[70 132]
[71 131]
[72 130]
[73 129]
[74 128]
[84 127]
[85 126]
[86 125]
[87 124]
[88 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
