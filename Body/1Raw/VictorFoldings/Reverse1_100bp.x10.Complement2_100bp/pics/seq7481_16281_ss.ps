%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[165.90904236 660.29296875]
[167.17716980 645.30969238]
[170.95939636 630.75622559]
[177.14692688 617.05139160]
[185.56172180 604.58947754]
[195.96168518 593.72906494]
[208.04756165 584.78259277]
[221.47163391 578.00744629]
[217.07063293 563.66760254]
[212.66964722 549.32775879]
[208.26864624 534.98791504]
[203.86764526 520.64807129]
[199.46664429 506.30822754]
[194.49899292 500.83609009]
[195.10858154 491.72201538]
[184.12620544 481.66036987]
[187.70387268 466.24899292]
[183.51686096 451.84521484]
[179.32984924 437.44143677]
[175.14283752 423.03762817]
[170.95582581 408.63385010]
[166.76881409 394.23007202]
[162.58180237 379.82629395]
[150.53225708 375.26144409]
[143.20257568 364.42825317]
[143.45431519 351.15621948]
[151.41958618 340.29486084]
[147.44747925 325.83032227]
[143.47538757 311.36581421]
[132.64402771 301.14178467]
[136.45074463 285.78536987]
[132.47865295 271.32083130]
[128.39898682 256.88629150]
[124.21197510 242.48249817]
[120.02496338 228.07872009]
[116.34521484 225.03428650]
[114.53888702 219.64595032]
[115.93459320 213.18348694]
[112.17829132 198.66142273]
[109.83412170 197.12420654]
[107.95761871 194.56582642]
[106.94078064 191.15972900]
[107.10562897 187.21798706]
[108.65819550 183.16293335]
[105.77292633 168.44303894]
[102.88764954 153.72314453]
[100.00238037 139.00326538]
[97.11711121 124.28337097]
[94.23183441 109.56347656]
[91.23706055 94.86547089]
[88.13294983 80.19017029]
[85.02883911 65.51486969]
[81.59777832 50.91254425]
[70.65116882 39.48965836]
[74.95477295 25.23033714]
[71.19847107 10.70827770]
[67.44217682 -3.81378174]
[54.23366165 -16.64408684]
[59.57889938 -33.35921097]
[55.60680389 -47.82373428]
[51.63470840 -62.28825760]
[47.66261292 -76.75278473]
[36.54714584 -88.01142120]
[40.63797379 -102.33323669]
[36.66587830 -116.79776001]
[28.32463455 -104.33086395]
[13.63849354 -101.27844238]
[1.02034342 -109.38906860]
[-2.30156541 -124.01660919]
[5.57570648 -136.78173828]
[20.13969994 -140.37202454]
[33.04692459 -132.73152161]
[30.38113022 -147.49273682]
[27.71533394 -162.25395203]
[19.23483467 -149.88136292]
[4.81971312 -145.73356628]
[-8.93963146 -151.70687866]
[-15.75261116 -165.07037354]
[-12.50442505 -179.71446228]
[-0.68009800 -188.94404602]
[14.31444550 -188.53950500]
[25.62480545 -178.68414307]
[24.50915718 -193.64259338]
[23.39350891 -208.60104370]
[20.82255936 -212.10021973]
[19.61979294 -215.85758972]
[19.69837761 -219.41136169]
[20.83041573 -222.37532043]
[22.68383980 -224.47840881]
[22.46051216 -239.47674561]
[22.23718452 -254.47508240]
[22.01385689 -269.47341919]
[14.07194996 -283.15686035]
[21.61890221 -295.99792480]
[21.39557457 -310.99624634]
[21.17224693 -325.99459839]
[20.94891930 -340.99295044]
[20.72559166 -355.99127197]
[20.50226402 -370.98962402]
[6.81683350 -377.84289551]
[-2.10671043 -390.27789307]
[-4.21780348 -405.43710327]
[0.96866769 -419.83706665]
[12.26089096 -430.16879272]
[27.06399536 -434.05810547]
[41.97633362 -430.61126709]
[53.57116699 -420.62033081]
[59.18407822 -406.38116455]
[57.52526855 -391.16583252]
[48.97591400 -378.47064209]
[35.50060272 -371.21295166]
[35.72393036 -356.21459961]
[35.94725800 -341.21627808]
[36.17058563 -326.21792603]
[36.39391327 -311.21957397]
[36.61724091 -296.22125244]
[44.54317093 -283.61059570]
[37.01219559 -269.69674683]
[37.23552322 -254.69841003]
[37.45885086 -239.70007324]
[37.68217850 -224.70173645]
[38.35196304 -209.71669006]
[39.46760941 -194.75823975]
[40.58325958 -179.79978943]
[42.47655106 -164.91975403]
[45.14234543 -150.15853882]
[47.80814362 -135.39732361]
[51.13040161 -120.76985931]
[55.10249710 -106.30533600]
[65.93385315 -96.08129120]
[62.12713623 -80.72487640]
[66.09923553 -66.26035309]
[70.07132721 -51.79582977]
[74.04342651 -37.33130646]
[84.39804077 -31.07762718]
[87.82563782 -19.05950165]
[81.96423340 -7.57008219]
[85.72053528 6.95197678]
[89.47683716 21.47403526]
[100.15476990 31.85820770]
[96.11983490 47.15624237]
[98.95605469 49.25104904]
[100.91854858 52.82367706]
[101.32377625 57.44851303]
[99.70413971 62.41075516]
[102.80825043 77.08605957]
[105.91236115 91.76136017]
[110.52886963 98.36896515]
[108.95172882 106.67819977]
[111.83699799 121.39809418]
[114.72227478 136.11798096]
[117.60754395 150.83787537]
[120.49281311 165.55776978]
[123.37808990 180.27766418]
[126.70034790 194.90512085]
[130.45664978 209.42718506]
[134.42874146 223.89170837]
[138.61575317 238.29548645]
[142.80276489 252.69926453]
[148.20321655 260.06628418]
[146.94317627 267.34872437]
[150.91526794 281.81326294]
[162.03073120 293.07189941]
[157.93991089 307.39370728]
[161.91200256 321.85824585]
[165.88410950 336.32275391]
[181.24369812 344.69546509]
[185.70780945 361.26007080]
[176.98559570 375.63928223]
[181.17259216 390.04306030]
[185.35960388 404.44683838]
[189.54661560 418.85064697]
[193.73362732 433.25442505]
[197.92063904 447.65820312]
[202.10765076 462.06198120]
[213.38951111 473.15386963]
[209.51237488 487.53500366]
[213.80648804 501.90722656]
[218.20748901 516.24707031]
[222.60848999 530.58691406]
[227.00949097 544.92675781]
[231.41049194 559.26660156]
[235.81147766 573.60644531]
[250.72505188 571.68457031]
[265.74887085 572.31085205]
[280.45074463 575.46740723]
[294.40759277 581.06329346]
[307.21789551 588.93756104]
[318.51306152 598.86364746]
[327.96810913 610.55596924]
[335.31100464 623.67803955]
[340.33047485 637.85241699]
[342.88208008 652.67126465]
[342.89245605 667.70812988]
[340.36123657 682.53045654]
[335.36126709 696.71173096]
[328.03646851 709.84393311]
[318.59750366 721.54925537]
[307.31600952 731.49084473]
[294.51657104 739.38275146]
[280.56741333 744.99786377]
[265.86993408 748.17462158]
[250.84695435 748.82159424]
[235.93077087 746.92022705]
[221.55052185 742.52520752]
[208.11994934 735.76300049]
[196.02549744 726.82806396]
[185.61512756 715.97766113]
[177.18838501 703.52380371]
[170.98771667 689.82489014]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 183]
[9 182]
[10 181]
[11 180]
[12 179]
[13 178]
[15 177]
[17 175]
[18 174]
[19 173]
[20 172]
[21 171]
[22 170]
[23 169]
[27 166]
[28 165]
[29 164]
[31 162]
[32 161]
[33 159]
[34 158]
[35 157]
[38 156]
[39 155]
[44 154]
[45 153]
[46 152]
[47 151]
[48 150]
[49 149]
[50 147]
[51 146]
[52 145]
[53 141]
[55 139]
[56 138]
[57 137]
[59 134]
[60 133]
[61 132]
[62 131]
[64 129]
[65 128]
[72 127]
[73 126]
[74 125]
[82 124]
[83 123]
[84 122]
[89 121]
[90 120]
[91 119]
[92 118]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
