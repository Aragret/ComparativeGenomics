%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[151.93580627 579.34179688]
[151.95968628 564.31030273]
[154.33482361 549.46759033]
[159.00274658 535.17926025]
[165.84849548 521.79711914]
[174.70350647 509.65066528]
[185.34970093 499.03912354]
[197.52490234 490.22372437]
[210.92929077 483.42163086]
[206.31527710 469.14889526]
[201.70126343 454.87615967]
[197.08726501 440.60342407]
[192.47325134 426.33068848]
[187.85923767 412.05795288]
[183.24523926 397.78521729]
[178.52510071 383.54724121]
[173.69909668 369.34478760]
[168.87310791 355.14233398]
[155.44058228 348.80963135]
[150.34402466 334.47506714]
[157.07742310 320.42874146]
[152.25141907 306.22628784]
[148.43940735 303.34921265]
[146.39427185 298.04690552]
[147.50001526 291.52853394]
[143.09902954 277.18869019]
[138.69802856 262.84884644]
[134.29702759 248.50900269]
[129.89602661 234.16915894]
[117.95613098 231.97508240]
[108.02332306 224.87068176]
[102.01831818 214.15429688]
[101.13422394 201.82962036]
[105.60003662 190.23112488]
[114.62553406 181.58193970]
[110.65343475 167.11741638]
[106.68133545 152.65289307]
[102.70924377 138.18836975]
[98.73714447 123.72385406]
[94.76505280 109.25933075]
[89.72813416 95.13029480]
[83.65429688 81.41503143]
[77.58046722 67.69976807]
[71.50662994 53.98449707]
[65.43280029 40.26922989]
[59.25703049 26.59955978]
[52.97966766 12.97624493]
[46.70230865 -0.64707166]
[31.28420258 2.05037904]
[15.70384502 0.67265779]
[1.01926804 -4.68089771]
[-11.77382088 -13.64115524]
[-21.80955315 -25.59463310]
[-28.41050148 -39.72550201]
[-31.13340950 -55.07126617]
[-29.79894829 -70.58831787]
[-24.50351906 -85.22290802]
[-15.61230755 -97.98271942]
[-3.73411465 -108.00411987]
[-16.67351723 -117.10810089]
[-15.19307899 -131.92895508]
[-21.67257500 -145.45729065]
[-28.15207100 -158.98564148]
[-34.63156509 -172.51399231]
[-41.11106110 -186.04232788]
[-47.59055710 -199.57067871]
[-54.07005310 -213.09902954]
[-60.59941864 -219.48692322]
[-60.54362869 -226.87736511]
[-66.82099152 -240.50068665]
[-73.09835052 -254.12399292]
[-87.54846954 -249.98944092]
[-102.46038818 -248.10925293]
[-117.48455048 -248.52751160]
[-132.26876831 -251.23440552]
[-146.46649170 -256.16647339]
[-159.74487305 -263.20812988]
[-171.79267883 -272.19427490]
[-182.32748413 -282.91427612]
[-191.10234070 -295.11682129]
[-197.91152954 -308.51589966]
[-202.59545898 -322.79739380]
[-205.04432678 -337.62655640]
[-205.20072937 -352.65573120]
[-203.06098938 -367.53262329]
[-198.67526245 -381.90847778]
[-192.14637756 -395.44638062]
[-183.62736511 -407.82888794]
[-173.31793213 -418.76580811]
[-161.45973206 -428.00070190]
[-148.33074951 -435.31713867]
[-134.23875427 -440.54360962]
[-119.51406097 -443.55758667]
[-104.50185394 -444.28839111]
[-89.55403900 -442.71893311]
[-75.02101135 -438.88598633]
[-61.24344254 -432.87939453]
[-48.54430389 -424.83996582]
[-37.22128296 -414.95617676]
[-27.53980446 -403.45965576]
[-19.72681427 -390.61996460]
[-13.96546364 -376.73806763]
[-10.39080524 -362.13937378]
[-9.08663464 -347.16607666]
[-10.08352280 -332.16918945]
[-13.35810184 -317.50024414]
[-18.83361053 -303.50314331]
[-26.38169479 -290.50595093]
[-35.82542038 -278.81335449]
[-46.94340515 -268.69946289]
[-59.47503662 -260.40136719]
[-53.19767380 -246.77804565]
[-46.92031479 -233.15472412]
[-40.54170990 -219.57852173]
[-34.06221390 -206.05017090]
[-27.58271599 -192.52183533]
[-21.10321999 -178.99348450]
[-14.62372494 -165.46513367]
[-8.14422894 -151.93679810]
[-1.66473341 -138.40844727]
[10.81121159 -130.27210999]
[9.79423141 -114.48361969]
[23.89979362 -117.37461853]
[38.29653931 -116.79928589]
[52.14459610 -112.78665161]
[64.63501740 -105.56639099]
[75.03703308 -95.55569458]
[82.74079895 -83.33517456]
[87.29315186 -69.61517334]
[88.42427826 -55.19447327]
[86.06368256 -40.91380692]
[80.34457397 -27.60683632]
[71.59634399 -16.05147743]
[60.32562256 -6.92443228]
[66.60298157 6.69888401]
[72.88034821 20.32220078]
[78.53454590 25.08159447]
[79.14806366 34.19539642]
[85.22190094 47.91066360]
[91.29573059 61.62593079]
[97.36956787 75.34119415]
[103.44339752 89.05646515]
[106.63059235 74.39897919]
[116.64616394 63.23258591]
[130.87207031 58.47615051]
[145.58967590 61.37299347]
[156.95187378 71.16588593]
[161.98857117 85.29499054]
[159.38320923 100.06699371]
[149.81681824 111.62052917]
[135.79002380 116.93553162]
[120.96941376 114.62266541]
[109.22957611 105.28723145]
[113.20166779 119.75175476]
[117.17376709 134.21627808]
[121.14585876 148.68080139]
[125.11795807 163.14532471]
[129.09005737 177.60984802]
[146.24047852 183.49377441]
[156.33714294 198.36445618]
[155.49348450 216.16162109]
[144.23587036 229.76815796]
[148.63687134 244.10800171]
[153.03787231 258.44784546]
[157.43887329 272.78768921]
[161.83987427 287.12756348]
[166.45387268 301.40029907]
[171.27987671 315.60275269]
[185.17706299 322.63879395]
[189.86898804 337.11083984]
[183.07556152 350.31631470]
[187.90155029 364.51876831]
[192.72755432 378.72122192]
[198.45156860 385.83975220]
[197.51795959 393.17120361]
[202.13197327 407.44393921]
[206.74598694 421.71667480]
[211.36000061 435.98941040]
[215.97399902 450.26214600]
[220.58801270 464.53488159]
[225.20202637 478.80761719]
[240.05158997 476.47595215]
[255.08309937 476.49609375]
[269.92636108 478.86755371]
[284.21588135 483.53195190]
[297.59973145 490.37438965]
[309.74832153 499.22637939]
[320.36251831 509.86996460]
[329.18090820 522.04296875]
[335.98635864 535.44567871]
[340.61123657 549.74804688]
[342.94168091 564.59777832]
[342.92028809 579.62927246]
[340.54760742 594.47235107]
[335.88201904 608.76147461]
[329.03848267 622.14477539]
[320.18548584 634.29266357]
[309.54104614 644.90594482]
[297.36730957 653.72332764]
[283.96401978 660.52764893]
[269.66131592 665.15136719]
[254.81134033 667.48059082]
[239.77984619 667.45794678]
[224.93696594 665.08404541]
[210.64823914 660.41729736]
[197.26551819 653.57263184]
[185.11836243 644.71862793]
[174.50593567 634.07336426]
[165.68954468 621.89886475]
[158.88632202 608.49505615]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 181]
[10 180]
[11 179]
[12 178]
[13 177]
[14 176]
[15 175]
[16 173]
[17 172]
[18 171]
[21 168]
[22 167]
[25 166]
[26 165]
[27 164]
[28 163]
[29 162]
[35 158]
[36 157]
[37 156]
[38 155]
[39 154]
[40 153]
[41 142]
[42 141]
[43 140]
[44 139]
[45 138]
[46 136]
[47 135]
[48 134]
[59 122]
[61 120]
[62 119]
[63 118]
[64 117]
[65 116]
[66 115]
[67 114]
[69 113]
[70 112]
[71 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
