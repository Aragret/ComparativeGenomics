%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[144.66484070 569.39373779]
[132.67764282 560.21716309]
[123.61170197 548.14611816]
[118.13976288 534.07623291]
[116.66788483 519.05175781]
[119.30529022 504.18746948]
[125.85626221 490.58645630]
[135.83468628 479.25799561]
[148.50007629 471.04275513]
[162.91259766 466.55032349]
[162.46598816 451.55697632]
[162.01937866 436.56362915]
[161.57278442 421.57028198]
[159.90124512 406.66372681]
[157.01596069 391.94381714]
[154.13069153 377.22393799]
[151.24542236 362.50402832]
[148.36015320 347.78414917]
[145.47486877 333.06427002]
[135.61407471 326.05776978]
[133.08982849 313.81799316]
[139.78953552 302.79635620]
[137.12374878 288.03512573]
[127.24772644 276.88552856]
[132.40930176 261.92996216]
[129.74349976 247.16874695]
[126.53022766 232.51696777]
[122.77392578 217.99490356]
[119.01762390 203.47283936]
[115.26132965 188.95079041]
[111.50502777 174.42872620]
[107.74872589 159.90666199]
[103.99242401 145.38461304]
[91.06812286 138.07037354]
[87.05182648 123.39645386]
[94.81128693 109.88984680]
[90.94698334 95.39615631]
[86.97489166 80.93163300]
[84.14162445 95.66162109]
[78.34738922 109.49732971]
[69.83854675 121.85044861]
[58.97690582 132.19572449]
[46.22430801 140.09327698]
[32.12300110 145.20729065]
[17.27257347 147.32029724]
[2.30447841 146.34248352]
[-12.14483452 142.31539917]
[-25.46097374 135.41030884]
[-37.07772827 125.92078400]
[-46.50115204 114.25034332]
[-53.33055115 100.89522552]
[-57.27553940 86.42327881]
[-58.16837311 71.44987488]
[-55.97108841 56.61168671]
[-50.77711487 42.53963470]
[-42.80730438 29.83207321]
[-32.40053558 19.02933502]
[-19.99930954 10.59075737]
[-6.13093185 4.87515306]
[8.61490440 2.12555289]
[23.61120033 2.45887065]
[38.22030640 5.86093378]
[51.82103348 12.18708515]
[63.83507538 21.16833305]
[73.75158691 32.42279053]
[81.14891052 45.47191238]
[85.71255493 59.76101303]
[87.93766785 44.92696762]
[90.16278839 30.09292412]
[92.38790131 15.25888062]
[94.61302185 0.42483652]
[96.83813477 -14.40920734]
[99.06325531 -29.24325180]
[88.17420959 -40.13980484]
[85.81690216 -55.18296051]
[92.68827820 -68.57131958]
[105.96672058 -75.26615906]
[108.19184113 -90.10019684]
[99.06932068 -102.72625732]
[101.53722382 -117.73839569]
[113.63046265 -126.35751343]
[115.85558319 -141.19155884]
[106.73306274 -153.81761169]
[109.20096588 -168.82974243]
[121.29420471 -177.44886780]
[114.15872955 -194.42433167]
[125.61786652 -207.71549988]
[127.62187958 -222.58102417]
[129.62590027 -237.44656372]
[131.62991333 -252.31208801]
[117.21513367 -256.56820679]
[103.61903381 -262.97497559]
[91.16033173 -271.38217163]
[80.13106537 -281.59274292]
[70.78977966 -293.36734009]
[63.35545349 -306.42993164]
[58.00235367 -320.47430420]
[54.85596466 -335.17126465]
[53.99004364 -350.17630005]
[55.42488861 -365.13763428]
[59.12686157 -379.70458984]
[65.00918579 -393.53564453]
[72.93397522 -406.30664062]
[82.71545410 -417.71817017]
[94.12433624 -427.50274658]
[106.89317322 -435.43099976]
[120.72265625 -441.31707764]
[135.28858948 -445.02301025]
[150.24954224 -446.46191406]
[165.25479126 -445.60006714]
[179.95260620 -442.45764160]
[193.99844360 -437.10836792]
[207.06304932 -429.67758179]
[218.84016418 -420.33947754]
[229.05372620 -409.31298828]
[237.46430969 -396.85656738]
[243.87477112 -383.26220703]
[248.13481140 -368.84860229]
[250.14459229 -353.95358276]
[249.85697937 -338.92636108]
[247.27874756 -324.11914062]
[242.47032166 -309.87908936]
[235.54440308 -296.53997803]
[226.66334534 -284.41448975]
[216.03535461 -273.78686523]
[203.90956116 -264.90625000]
[190.57020569 -257.98080444]
[176.32997131 -253.17286682]
[161.52267456 -250.59513855]
[146.49543762 -250.30807495]
[144.49142456 -235.44255066]
[142.48741150 -220.57701111]
[140.48339844 -205.71148682]
[147.56568909 -195.90496826]
[146.01776123 -183.50386047]
[136.12825012 -175.22373962]
[145.16041565 -163.43580627]
[143.11514282 -148.36027527]
[130.68962097 -138.96643066]
[128.46450806 -124.13239288]
[137.49667358 -112.34445190]
[135.45140076 -97.26892090]
[123.02588654 -87.87508392]
[120.80076599 -73.04103851]
[131.53056335 -62.74494934]
[134.17138672 -47.92975235]
[127.50415802 -34.24028778]
[113.89730072 -27.01813316]
[111.67218018 -12.18408966]
[109.44706726 2.64995360]
[107.22194672 17.48399734]
[104.99683380 32.31804276]
[102.77171326 47.15208435]
[100.54659271 61.98612976]
[101.43941498 76.95953369]
[105.41150665 91.42405701]
[110.41312408 97.74516296]
[109.33335114 106.13354492]
[122.66873169 114.18372345]
[126.27127838 128.96467590]
[118.51448059 141.62831116]
[122.27078247 156.15036011]
[126.02708435 170.67242432]
[129.78338623 185.19448853]
[133.53968811 199.71653748]
[137.29598999 214.23860168]
[141.05229187 228.76066589]
[150.79803467 217.35800171]
[165.79377747 217.71542358]
[174.98521423 229.56942749]
[171.59675598 244.18168640]
[158.12626648 250.78060913]
[144.50471497 244.50296021]
[147.17051697 259.26416016]
[157.23721313 271.46960449]
[151.88496399 285.36932373]
[154.55076599 300.13055420]
[166.76841736 313.90771484]
[160.19476318 330.17898560]
[163.08003235 344.89886475]
[165.96531677 359.61877441]
[168.85058594 374.33865356]
[171.73585510 389.05856323]
[174.62112427 403.77844238]
[180.53823853 389.99484253]
[192.12474060 380.46841431]
[206.79219055 377.32739258]
[221.26383972 381.27346802]
[232.30667114 391.42510986]
[237.45368958 405.51440430]
[235.55505371 420.39376831]
[227.03492737 432.73910522]
[213.79670715 439.79241943]
[198.79785156 439.97802734]
[185.38914490 433.25442505]
[176.56613159 421.12368774]
[177.01274109 436.11703491]
[177.45933533 451.11038208]
[177.90594482 466.10372925]
[192.56030273 469.73034668]
[205.69223022 477.17715454]
[216.32723999 487.89160156]
[223.67614746 501.07858276]
[227.19360352 515.75952148]
[226.61860657 530.84497070]
[221.99382019 545.21557617]
[213.66244507 557.80487061]
[202.24269104 567.67871094]
[188.58201599 574.10430908]
[173.69410706 576.60485840]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 199]
[11 198]
[12 197]
[13 196]
[14 184]
[15 183]
[16 182]
[17 181]
[18 180]
[19 179]
[22 177]
[23 176]
[25 174]
[26 173]
[27 167]
[28 166]
[29 165]
[30 164]
[31 163]
[32 162]
[33 161]
[36 158]
[37 156]
[38 155]
[67 154]
[68 153]
[69 152]
[70 151]
[71 150]
[72 149]
[73 148]
[77 144]
[78 143]
[81 140]
[82 139]
[85 136]
[87 133]
[88 132]
[89 131]
[90 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
