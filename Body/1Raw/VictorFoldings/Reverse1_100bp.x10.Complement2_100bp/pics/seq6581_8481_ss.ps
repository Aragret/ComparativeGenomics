%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxUUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGC\
) } def
/len { sequence length } bind def

/coor [
[-54.34146500 496.38488770]
[-46.43627548 509.18740845]
[-41.09709167 523.25476074]
[-38.51691437 538.07830811]
[-38.78901672 553.12237549]
[-41.90356827 567.84295654]
[-47.74797058 581.70800781]
[-56.11096191 594.21624756]
[-66.69021606 604.91558838]
[-79.10330963 613.41925049]
[-92.90150452 619.41973877]
[-107.58602142 622.70025635]
[-122.62600708 623.14208984]
[-137.47778320 620.72943115]
[-151.60447693 615.54931641]
[-164.49539185 607.78912354]
[-175.68455505 597.72937012]
[-184.76747131 585.73364258]
[-191.41580200 572.23565674]
[-195.38922119 557.72326660]
[-196.54408264 542.72119141]
[-194.83865356 527.77166748]
[-190.33454895 513.41516113]
[-183.19462585 500.17062378]
[-173.67698669 488.51681519]
[-162.12565613 478.87506104]
[-148.95823669 471.59387207]
[-134.65072632 466.93649292]
[-119.72030640 465.07122803]
[-104.70671844 466.06558228]
[-90.15269470 469.88351440]
[-91.63312531 455.06268311]
[-78.69372559 445.95870972]
[-72.21423340 432.43035889]
[-65.73473358 418.90200806]
[-59.25523758 405.37365723]
[-52.77574158 391.84530640]
[-46.29624557 378.31698608]
[-48.58578873 360.91796875]
[-33.30734253 350.63934326]
[-27.02998352 337.01602173]
[-20.75262260 323.39270020]
[-14.47526169 309.76937866]
[-8.19790077 296.14605713]
[-21.89174080 302.26806641]
[-36.59207535 299.28475952]
[-46.81604767 288.30883789]
[-48.75036240 273.43408203]
[-41.67357254 260.20837402]
[-28.22514153 253.56460571]
[-13.42100620 255.98071289]
[-2.78274107 266.55557251]
[-0.27832150 281.34613037]
[7.57343388 268.56530762]
[3.87352490 254.18315125]
[11.65425396 241.10971069]
[26.76466370 237.32641602]
[34.61641693 224.54557800]
[42.46817398 211.76472473]
[49.44662476 198.48689270]
[55.52046204 184.77162170]
[61.59429550 171.05635071]
[58.78773499 153.73324585]
[73.75337219 143.00425720]
[79.62233734 129.20007324]
[85.49129486 115.39589691]
[91.36025238 101.59172058]
[90.46381378 98.67866516]
[90.60750580 95.37504578]
[91.93802643 92.06549072]
[94.45792389 89.18341827]
[98.01141357 87.15717316]
[104.69161224 73.72679901]
[111.37180328 60.29642105]
[118.05200195 46.86604309]
[117.27020264 31.06416702]
[129.86590576 23.11447525]
[134.58602905 8.87648582]
[137.25183105 -5.88473177]
[139.91763306 -20.64594841]
[131.17507935 -33.53802490]
[134.08885193 -48.47002029]
[146.43334961 -56.72525787]
[149.09915161 -71.48647308]
[151.76493835 -86.24768829]
[146.60337830 -101.20325470]
[156.47938538 -112.35285187]
[159.14518738 -127.11406708]
[161.81098938 -141.87528992]
[164.47677612 -156.63650513]
[162.92231750 -165.63769531]
[167.29371643 -171.59693909]
[168.85423279 -186.51554871]
[169.07756042 -201.51388550]
[169.30088806 -216.51222229]
[169.52421570 -231.51055908]
[169.74754333 -246.50889587]
[155.49365234 -251.61820984]
[143.67262268 -261.08087158]
[135.56669617 -273.87042236]
[132.05517578 -288.59957886]
[133.51895142 -303.67062378]
[139.79924011 -317.44873047]
[150.21481323 -328.43939209]
[163.63584900 -335.45040894]
[178.60655212 -337.72128296]
[193.50300598 -335.00570679]
[206.70935059 -327.59817505]
[216.79306030 -316.30227661]
[222.66033936 -302.34329224]
[223.67474365 -287.23535156]
[219.72624207 -272.61727905]
[211.24311829 -260.07473755]
[199.14558411 -250.96821594]
[184.74588013 -246.28556824]
[184.52255249 -231.28723145]
[184.29922485 -216.28889465]
[184.07589722 -201.29055786]
[183.85256958 -186.29222107]
[192.16842651 -198.77606201]
[205.03298950 -206.48988342]
[219.96232605 -207.94425964]
[234.07379150 -202.85835266]
[244.64270020 -192.21418762]
[249.62837219 -178.06700134]
[248.06811523 -163.14836121]
[240.26322937 -150.33885193]
[227.72070312 -142.11177063]
[212.86228943 -140.05563354]
[198.55693054 -144.56747437]
[187.56675720 -154.77610779]
[182.01361084 -168.71166992]
[179.23799133 -153.97070312]
[176.57220459 -139.20948792]
[173.90640259 -124.44827271]
[171.24061584 -109.68704987]
[176.59284973 -95.78731537]
[166.52615356 -83.58189392]
[163.86036682 -68.82067871]
[161.19456482 -54.05945969]
[169.87176514 -42.00782394]
[167.37854004 -26.99987411]
[154.67884827 -17.98015404]
[152.01304626 -3.21893620]
[149.34725952 11.54228115]
[158.51287842 -0.33169895]
[170.73651123 -9.02553558]
[184.96067810 -13.78712559]
[199.95487976 -14.20454311]
[214.42193604 -10.24167728]
[227.11030579 -2.24135661]
[236.92233276 9.10431194]
[243.00917053 22.81381416]
[244.84423828 37.70114136]
[242.26879883 52.47838974]
[235.50563049 65.86717987]
[225.13984680 76.70925140]
[212.06817627 84.06665039]
[197.42144775 87.30289459]
[182.46675110 86.13800812]
[168.49780273 80.67277527]
[156.72308350 71.37998199]
[148.16120911 59.06356049]
[143.55287170 44.78899384]
[143.29627991 29.79467010]
[144.55589294 44.63591766]
[131.48237610 53.54623795]
[124.80218506 66.97661591]
[118.12198639 80.40699005]
[111.44179535 93.83736420]
[105.16443634 107.46068573]
[99.29547119 121.26486206]
[93.42651367 135.06903076]
[87.55754852 148.87321472]
[91.64974976 161.10501099]
[86.47729492 172.48170471]
[75.30956268 177.13018799]
[69.23572540 190.84545898]
[63.16189194 204.56071472]
[76.44062042 197.58393860]
[91.39224243 198.78762817]
[103.38385010 207.79881287]
[108.69969940 221.82528687]
[105.69262695 236.52076721]
[95.29440308 247.33174133]
[80.72702789 250.90826416]
[66.50436401 246.14215088]
[57.03345871 234.51022339]
[55.24901581 219.61648560]
[47.39726257 232.39732361]
[39.54550552 245.17817688]
[43.00063705 260.36697388]
[34.85577393 273.21670532]
[20.35427666 276.41705322]
[12.50252056 289.19790649]
[5.42541552 302.42343140]
[-0.85194510 316.04675293]
[-7.12930584 329.67004395]
[-13.40666676 343.29336548]
[-19.68402672 356.91668701]
[-15.95782661 369.26489258]
[-21.46671867 380.48254395]
[-32.76790237 384.79647827]
[-39.24739838 398.32479858]
[-45.72689438 411.85314941]
[-52.20639038 425.38150024]
[-58.68588638 438.90985107]
[-65.16538239 452.43820190]
[-64.14839935 468.22668457]
[-76.62434387 476.36303711]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 210]
[33 208]
[34 207]
[35 206]
[36 205]
[37 204]
[38 203]
[40 200]
[41 199]
[42 198]
[43 197]
[44 196]
[53 195]
[54 194]
[57 191]
[58 190]
[59 189]
[60 179]
[61 178]
[62 177]
[64 174]
[65 173]
[66 172]
[67 171]
[72 170]
[73 169]
[74 168]
[75 167]
[77 165]
[78 145]
[79 144]
[80 143]
[83 140]
[84 139]
[85 138]
[87 136]
[88 135]
[89 134]
[90 133]
[92 132]
[93 119]
[94 118]
[95 117]
[96 116]
[97 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
