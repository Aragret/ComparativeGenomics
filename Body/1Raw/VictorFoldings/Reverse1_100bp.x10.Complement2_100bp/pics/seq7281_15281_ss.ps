%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[36.84176636 630.50933838]
[22.32743073 626.38665771]
[9.37518501 618.64703369]
[-1.13186502 607.81817627]
[-8.47733116 594.63836670]
[-12.16038704 580.00628662]
[-11.92991734 564.91955566]
[-7.80163383 550.40686035]
[-0.05701114 537.45758057]
[10.77591038 526.95471191]
[23.95852280 519.61431885]
[38.59201431 515.93695068]
[38.81534195 500.93859863]
[35.77177811 494.20370483]
[39.15530777 485.71905518]
[39.60191345 470.72570801]
[40.04851913 455.73236084]
[40.49512482 440.73901367]
[40.94173050 425.74566650]
[33.58679962 412.79364014]
[41.73155212 399.22998047]
[42.17815781 384.23663330]
[42.62476349 369.24325562]
[32.96250916 380.71676636]
[18.66285896 385.24664307]
[4.15671778 381.42935181]
[-6.06102896 370.44766235]
[-8.82430172 355.70437622]
[-3.27687120 341.76788330]
[8.86233234 332.95651245]
[23.83184242 332.00064087]
[36.99319839 339.19638062]
[44.26826096 352.31433105]
[46.71398926 337.51507568]
[37.00062180 330.23318481]
[31.27112007 319.44866943]
[30.66698647 307.17935181]
[35.36416245 295.75061035]
[44.52800751 287.35464478]
[56.46094131 283.63000488]
[59.34621429 268.91012573]
[62.23148727 254.19021606]
[65.11676025 239.47033691]
[68.00202942 224.75044250]
[70.88730621 210.03054810]
[73.77257538 195.31065369]
[67.28653717 185.09997559]
[69.56983948 172.81298828]
[79.93466187 165.13618469]
[83.03877258 150.46089172]
[85.92404938 135.74099731]
[88.58984375 120.97978210]
[91.25563812 106.21855927]
[91.59061432 91.22230530]
[89.58660126 76.35677338]
[87.58258820 61.49124527]
[85.57857513 46.62571716]
[76.06692505 33.98297119]
[82.03448486 20.33608627]
[78.84259796 16.20583725]
[77.67130280 11.71346951]
[78.32017517 7.68929005]
[80.28828430 4.76373339]
[78.95005035 -10.17645168]
[77.61181641 -25.11663628]
[68.67417908 -38.17148972]
[75.24515533 -51.53829956]
[73.90692139 -66.47848511]
[72.56868744 -81.41867065]
[71.23045349 -96.35885620]
[69.89221954 -111.29904175]
[68.55398560 -126.23922729]
[67.21575165 -141.17941284]
[60.77953339 -127.63041687]
[49.69992828 -117.51892090]
[35.62052917 -112.34490204]
[20.62992859 -112.87588501]
[6.95189762 -119.03311157]
[-3.38451266 -129.90319824]
[-8.84595585 -143.87361145]
[-8.62226009 -158.87194824]
[-2.74660921 -172.67327881]
[7.90937948 -183.23025513]
[21.76495361 -188.97683716]
[36.76472092 -189.06051636]
[50.68355179 -183.46891785]
[61.45667648 -173.03149414]
[67.48554230 -159.29844666]
[69.26801300 -174.19216919]
[70.60624695 -189.13235474]
[71.49906158 -204.10575867]
[63.53710556 -214.25317383]
[64.58898926 -226.70617676]
[73.54734039 -234.83479309]
[74.66298676 -249.79325867]
[67.97353363 -264.13067627]
[76.63600922 -276.24722290]
[77.75165558 -291.20568848]
[78.86730957 -306.16412354]
[79.98295593 -321.12258911]
[66.26453400 -327.61636353]
[55.82115173 -338.63000488]
[50.06519318 -352.67398071]
[49.77510071 -367.84896851]
[54.99010849 -382.10269165]
[65.00492859 -393.50741577]
[78.46514893 -400.52075195]
[93.55036926 -402.19424438]
[108.22044373 -398.30151367]
[120.49137115 -389.36904907]
[128.70359802 -376.60488892]
[131.74650574 -361.73529053]
[129.20854187 -346.77124023]
[121.43296814 -333.73648071]
[109.47135162 -324.39385986]
[94.94141388 -320.00692749]
[93.82575989 -305.04849243]
[92.71011353 -290.09002686]
[91.59446716 -275.13156128]
[98.36372375 -261.86407471]
[89.62144470 -248.67761230]
[88.50579834 -233.71914673]
[96.96639252 -218.34432983]
[86.47246552 -203.21293640]
[85.57965088 -188.23953247]
[87.33731842 -186.05578613]
[88.33587646 -183.04423523]
[88.25569916 -179.49049377]
[86.88636017 -175.79057312]
[84.16172791 -172.40969849]
[82.37926483 -157.51597595]
[82.15593719 -142.51763916]
[83.49417114 -127.57746124]
[84.83240509 -112.63727570]
[86.17063904 -97.69709015]
[87.50887299 -82.75690460]
[88.84710693 -67.81671906]
[90.18534088 -52.87653351]
[99.02725983 -40.89030075]
[92.55200195 -26.45487022]
[93.89023590 -11.51468563]
[95.22846985 3.42549920]
[96.90000916 18.33207321]
[106.26832581 29.91153717]
[100.44409943 44.62170410]
[102.44811249 59.48723221]
[104.45213318 74.35276031]
[106.45614624 89.21829224]
[111.37609863 75.04811096]
[119.89125061 62.69933701]
[131.38688660 53.06343842]
[145.03311157 46.83604050]
[159.84480286 44.46670532]
[174.75268555 46.12647629]
[188.68055725 51.69552994]
[200.62295532 60.77183533]
[209.71772766 72.70016479]
[215.30833435 86.61940002]
[216.99118042 101.52470398]
[214.64476013 116.34004211]
[208.43849182 129.99589539]
[198.82040405 141.50642395]
[186.48481750 150.04067993]
[172.32228088 154.98255920]
[157.35516357 155.97531128]
[142.66397095 152.94726562]
[129.30928040 146.11701965]
[118.25517273 135.97766113]
[110.29965210 123.26115417]
[106.01685333 108.88436127]
[103.35105896 123.64557648]
[100.68526459 138.40679932]
[102.55775452 144.74755859]
[101.15719604 150.25532532]
[97.71408081 153.56500244]
[94.60997009 168.24029541]
[100.72238922 185.61038208]
[88.49246979 198.19592285]
[85.60719299 212.91581726]
[82.72192383 227.63571167]
[79.83664703 242.35560608]
[76.95137787 257.07550049]
[74.06610107 271.79537964]
[71.18083191 286.51528931]
[83.91622925 299.42138672]
[86.33374786 317.23248291]
[77.65247345 332.79159546]
[61.51325989 339.96078491]
[59.06753159 354.76007080]
[57.61811447 369.68988037]
[57.17150879 384.68322754]
[56.72489929 399.67657471]
[64.04788971 413.70098877]
[55.93508148 426.19226074]
[55.48847580 441.18560791]
[55.04187012 456.17895508]
[54.59526062 471.17230225]
[54.14865494 486.16564941]
[53.81367874 501.16192627]
[53.59035110 516.16027832]
[68.10786438 520.27172852]
[81.06608582 528.00134277]
[91.58149719 538.82208252]
[98.93713379 551.99621582]
[102.63149261 566.62542725]
[102.41267395 581.71234131]
[98.29559326 596.22821045]
[90.56097412 609.18347168]
[79.73616791 619.69470215]
[66.55922699 627.04528809]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 200]
[13 199]
[15 198]
[16 197]
[17 196]
[18 195]
[19 194]
[21 192]
[22 191]
[23 190]
[33 189]
[34 188]
[40 184]
[41 183]
[42 182]
[43 181]
[44 180]
[45 179]
[46 178]
[49 176]
[50 175]
[51 172]
[52 171]
[53 170]
[54 148]
[55 147]
[56 146]
[57 145]
[59 143]
[63 142]
[64 141]
[65 140]
[67 138]
[68 137]
[69 136]
[70 135]
[71 134]
[72 133]
[73 132]
[88 131]
[89 130]
[90 125]
[91 124]
[94 122]
[95 121]
[97 119]
[98 118]
[99 117]
[100 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
