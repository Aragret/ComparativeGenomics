%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[99.29661560 525.74902344]
[84.39704132 523.41375732]
[70.54664612 517.44573975]
[58.61608124 508.22009277]
[49.35530853 496.31680298]
[43.34647369 482.48403931]
[40.96728897 467.59143066]
[42.36731720 452.57507324]
[47.45855331 438.37893677]
[55.92095184 425.89541626]
[67.22256470 415.90921021]
[80.65296173 409.04806519]
[95.36788940 405.74328613]
[95.81449890 390.74993896]
[85.44555664 380.11880493]
[85.68489075 364.90704346]
[96.90608978 354.10324097]
[97.35269165 339.10989380]
[97.79930115 324.11654663]
[90.44436646 311.16455078]
[98.58911896 297.60086060]
[99.03572845 282.60751343]
[99.48233032 267.61416626]
[99.92893982 252.62080383]
[100.37554932 237.62745667]
[100.82215118 222.63410950]
[101.26876068 207.64076233]
[100.82215118 192.64739990]
[99.48391724 177.70721436]
[98.14568329 162.76702881]
[89.30376434 150.78080750]
[95.77902222 136.34536743]
[94.44078827 121.40518951]
[93.10255432 106.46500397]
[89.94332886 102.27773285]
[89.35504150 96.61846924]
[91.95368195 91.06113434]
[91.06086731 76.08772278]
[90.16805267 61.11431885]
[89.27523804 46.14091492]
[88.38242340 31.16750908]
[87.48960114 16.19410324]
[86.59678650 1.22069705]
[79.51908112 14.44590282]
[67.72425842 23.71316719]
[53.19995880 27.46079445]
[38.39377975 25.05724525]
[25.80082321 16.90755653]
[17.54322243 4.38509512]
[15.01252937 -10.39988327]
[18.63520813 -24.95585060]
[27.80077744 -36.82987213]
[40.96467590 -44.02096176]
[55.90855408 -45.31730270]
[70.11410522 -40.50043106]
[81.18744659 -30.38207817]
[87.26287842 -16.66574287]
[89.26689148 -31.53127098]
[91.27090454 -46.39679718]
[93.27491760 -61.26232529]
[95.27893066 -76.12785339]
[86.18107605 -64.20187378]
[73.42763519 -56.30568695]
[58.69654083 -53.47817993]
[43.92591858 -56.09135818]
[31.05909920 -63.80141449]
[21.78893471 -75.59395599]
[17.33507538 -89.91747284]
[18.28350067 -104.88745880]
[24.50943184 -118.53435516]
[35.19373703 -129.06268311]
[48.93071747 -135.08724976]
[63.91303253 -135.81542969]
[78.16950226 -131.15141296]
[89.82444000 -121.70882416]
[97.34444427 -108.73001099]
[99.74007416 -93.92018127]
[104.98679352 -107.97264862]
[110.23351288 -122.02512360]
[115.48023224 -136.07759094]
[120.72695160 -150.13006592]
[125.97366333 -164.18254089]
[131.22038269 -178.23500061]
[135.83439636 -192.50773621]
[139.80648804 -206.97225952]
[143.77857971 -221.43678284]
[147.75068665 -235.90130615]
[151.72277832 -250.36582947]
[150.97755432 -259.46981812]
[155.86318970 -265.01531982]
[160.05020142 -279.41909790]
[164.23721313 -293.82287598]
[168.42422485 -308.22665405]
[172.50389099 -322.66119385]
[176.47598267 -337.12573242]
[180.44807434 -351.59024048]
[184.42018127 -366.05477905]
[170.82853699 -372.49203491]
[158.56132507 -381.19183350]
[147.99130249 -391.88977051]
[139.43969727 -404.26077271]
[133.16639709 -417.92886353]
[129.36201477 -432.47869873]
[128.14216614 -447.46813965]
[129.54393005 -462.44165039]
[133.52470398 -476.94421387]
[139.96351624 -490.53512573]
[148.66470337 -502.80136108]
[159.36384583 -513.37017822]
[171.73579407 -521.92034912]
[185.40460205 -528.19213867]
[199.95486450 -531.99487305]
[214.94444275 -533.21301270]
[229.91780090 -531.80950928]
[244.41992188 -527.82708740]
[258.01010132 -521.38677979]
[270.27532959 -512.68420410]
[280.84292603 -501.98382568]
[289.39172363 -489.61093140]
[295.66192627 -475.94140625]
[299.46301270 -461.39071655]
[300.67947388 -446.40100098]
[299.27429199 -431.42779541]
[295.29022217 -416.92611694]
[288.84832764 -403.33666992]
[280.14437866 -391.07241821]
[269.44284058 -380.50604248]
[257.06893921 -371.95864868]
[243.39871216 -365.69000244]
[228.84757996 -361.89056396]
[213.85774231 -360.67581177]
[198.88470459 -362.08267212]
[194.91259766 -347.61816406]
[190.94050598 -333.15362549]
[186.96841431 -318.68911743]
[188.22845459 -311.40664673]
[182.82800293 -304.03964233]
[178.64099121 -289.63586426]
[174.45397949 -275.23208618]
[170.26696777 -260.82830811]
[166.18730164 -246.39373779]
[162.21520996 -231.92921448]
[158.24310303 -217.46469116]
[154.27101135 -203.00016785]
[150.29891968 -188.53564453]
[163.83728027 -194.99420166]
[178.02264404 -190.11822510]
[184.72901917 -176.70089722]
[180.11466980 -162.42828369]
[166.82290649 -155.47636414]
[152.46786499 -159.82752991]
[145.27285767 -172.98829651]
[140.02613831 -158.93582153]
[134.77941895 -144.88334656]
[129.53269958 -130.83087158]
[124.28598022 -116.77840424]
[119.03926849 -102.72593689]
[113.79254913 -88.67346191]
[110.14446259 -74.12384033]
[108.14044952 -59.25831223]
[106.13642883 -44.39278412]
[104.13241577 -29.52725601]
[102.12840271 -14.66172886]
[101.57019043 0.32788119]
[102.46301270 15.30128670]
[103.35582733 30.27469254]
[104.24864197 45.24810028]
[105.14145660 60.22150421]
[106.03427124 75.19490814]
[106.92708588 90.16831207]
[108.04273987 105.12677002]
[109.38097382 120.06695557]
[110.71920776 135.00714111]
[119.65684509 148.06199646]
[113.08586884 161.42880249]
[114.42410278 176.36898804]
[115.76233673 191.30917358]
[124.59067535 179.18232727]
[138.82498169 174.45108032]
[153.15620422 178.88008118]
[162.23915100 190.81742859]
[162.68611145 205.81076050]
[154.33038330 218.26795959]
[140.28843689 223.54278564]
[125.79758453 219.66786194]
[116.26210785 208.08735657]
[115.81549835 223.08070374]
[115.36889648 238.07406616]
[114.92228699 253.06741333]
[114.47568512 268.06076050]
[114.02907562 283.05410767]
[113.58247375 298.04745483]
[120.90545654 312.07186890]
[112.79264832 324.56314087]
[112.34604645 339.55648804]
[111.89943695 354.54983521]
[122.45768738 366.00241089]
[121.79118347 381.20144653]
[110.80784607 391.19653320]
[110.36124420 406.18988037]
[124.85337830 410.36465454]
[137.85157776 418.01303101]
[148.53877258 428.65420532]
[156.24313354 441.61929321]
[160.48036194 456.09329224]
[160.98413086 471.16635132]
[157.72273254 485.89096069]
[150.90121460 499.34152222]
[140.94836426 510.67254639]
[128.48983765 519.17169189]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 200]
[14 199]
[17 196]
[18 195]
[19 194]
[21 192]
[22 191]
[23 190]
[24 189]
[25 188]
[26 187]
[27 186]
[28 177]
[29 176]
[30 175]
[32 173]
[33 172]
[34 171]
[37 170]
[38 169]
[39 168]
[40 167]
[41 166]
[42 165]
[43 164]
[57 163]
[58 162]
[59 161]
[60 160]
[61 159]
[77 158]
[78 157]
[79 156]
[80 155]
[81 154]
[82 153]
[83 152]
[84 145]
[85 144]
[86 143]
[87 142]
[88 141]
[90 140]
[91 139]
[92 138]
[93 137]
[94 135]
[95 134]
[96 133]
[97 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
