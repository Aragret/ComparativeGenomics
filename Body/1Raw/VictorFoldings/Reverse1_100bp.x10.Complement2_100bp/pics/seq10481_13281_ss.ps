%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[45.40954208 437.64904785]
[46.76085663 452.63198853]
[45.33581543 467.60812378]
[41.18295288 482.06732178]
[34.44372177 495.51712036]
[25.34764862 507.49945068]
[14.20454788 517.60614014]
[1.39394855 525.49304199]
[-12.64782619 530.89154053]
[-27.44251823 533.61761475]
[-42.48622513 533.57861328]
[-57.26656342 530.77569580]
[-71.28012085 525.30444336]
[-84.04960632 517.35113525]
[-95.14008331 507.18667603]
[-104.17382812 495.15728760]
[-110.84314728 481.67266846]
[-114.92088318 467.19210815]
[-116.26815796 452.20880127]
[-114.83908081 437.23309326]
[-110.68232727 422.77499390]
[-103.93946075 409.32702637]
[-94.84016418 397.34713745]
[-83.69433594 387.24340820]
[-70.88161469 379.35998535]
[-56.83838654 373.96530151]
[-42.04295731 371.24316406]
[-26.99926376 371.28628540]
[-12.21967983 374.09317017]
[-6.76432276 360.12036133]
[-1.30896568 346.14755249]
[4.14639139 332.17477417]
[9.49757767 318.16174316]
[14.74429512 304.10928345]
[19.99101448 290.05679321]
[9.01110744 279.93893433]
[2.72439504 266.35134888]
[2.11713457 251.35148621]
[7.31297779 237.22383118]
[17.54938698 226.13195801]
[31.28937912 219.78721619]
[46.45225143 219.18472290]
[51.69897079 205.13226318]
[56.94568634 191.07978821]
[62.19240570 177.02731323]
[55.25611115 166.16833496]
[55.84954453 153.10197449]
[63.97987366 142.60873413]
[76.85604095 138.65666199]
[82.31140137 124.68386078]
[87.76675415 110.71105957]
[84.81012726 94.19940948]
[98.01994324 83.86127472]
[103.26666260 69.80880737]
[108.51338196 55.75633240]
[113.76010132 41.70386124]
[119.00682068 27.65139008]
[124.25354004 13.59891891]
[117.94133759 -0.64165235]
[123.46243286 -14.81811523]
[137.07754517 -20.74807549]
[142.32426453 -34.80054474]
[147.15025330 -49.00300217]
[151.55125427 -63.34284973]
[155.95225525 -77.68269348]
[160.35325623 -92.02254486]
[164.75425720 -106.36238861]
[154.02134705 -115.55757904]
[147.62313843 -128.11094666]
[146.49620056 -142.11221313]
[150.77775574 -155.44483948]
[159.78996277 -166.10595703]
[172.14694214 -172.50727844]
[185.96786499 -173.71166992]
[190.58186340 -187.98440552]
[195.19587708 -202.25714111]
[199.80989075 -216.52986145]
[203.13214111 -231.15733337]
[205.13615417 -246.02285767]
[207.14016724 -260.88839722]
[209.14418030 -275.75390625]
[211.14820862 -290.61944580]
[213.15222168 -305.48495483]
[215.15623474 -320.35049438]
[217.16024780 -335.21603394]
[202.63468933 -339.03546143]
[188.68861389 -344.61099243]
[175.53344727 -351.85812378]
[163.36859131 -360.66699219]
[152.37847900 -370.90402222]
[142.72972107 -382.41406250]
[134.56857300 -395.02261353]
[128.01876831 -408.53851318]
[123.17960358 -422.75689697]
[120.12443542 -437.46218872]
[118.89957428 -452.43145752]
[119.52359772 -467.43780518]
[121.98703766 -482.25369263]
[126.25254822 -496.65457153]
[132.25547791 -510.42208862]
[139.90480042 -523.34753418]
[149.08457947 -535.23498535]
[159.65563965 -545.90423584]
[171.45773315 -555.19348145]
[184.31193542 -562.96191406]
[198.02337646 -569.09185791]
[212.38420105 -573.49029541]
[227.17671204 -576.09057617]
[242.17663574 -576.85327148]
[257.15661621 -575.76678467]
[271.88949585 -572.84765625]
[286.15200806 -568.14013672]
[299.72787476 -561.71551514]
[312.41128540 -553.67126465]
[324.01000977 -544.12933350]
[334.34820557 -533.23431396]
[343.26913452 -521.15136719]
[350.63754272 -508.06375122]
[356.34173584 -494.16979980]
[360.29525757 -479.68017578]
[362.43817139 -464.81451416]
[362.73797607 -449.79821777]
[361.19012451 -434.85885620]
[357.81808472 -420.22299194]
[352.67300415 -406.11242676]
[345.83282471 -392.74111938]
[337.40130615 -380.31176758]
[327.50622559 -369.01278687]
[316.29757690 -359.01547241]
[303.94534302 -350.47137451]
[290.63671875 -343.51004028]
[276.57348633 -338.23696899]
[261.96884155 -334.73211670]
[247.04418945 -333.04864502]
[232.02577209 -333.21200562]
[230.02175903 -318.34649658]
[228.01774597 -303.48095703]
[226.01373291 -288.61541748]
[224.00971985 -273.74990845]
[222.00570679 -258.88436890]
[220.00169373 -244.01884460]
[217.99768066 -229.15332031]
[227.73808289 -240.56053162]
[241.42813110 -246.69097900]
[256.42449951 -246.36097717]
[269.83163452 -239.63423157]
[279.06079102 -227.80957031]
[282.32998657 -213.17016602]
[279.00802612 -198.54264832]
[269.73626709 -186.75135803]
[256.30496216 -180.07301331]
[241.30749512 -179.79708862]
[227.63964844 -185.97688293]
[217.94044495 -197.41915894]
[214.08262634 -211.91586304]
[209.46861267 -197.64312744]
[204.85459900 -183.37039185]
[200.24058533 -169.09765625]
[212.01609802 -158.29544067]
[217.92346191 -143.38514709]
[216.73281860 -127.33316803]
[208.63192749 -113.35690308]
[195.19871521 -104.27988434]
[179.09410095 -101.96139526]
[174.69309998 -87.62154388]
[170.29209900 -73.28170013]
[165.89109802 -58.94185257]
[161.49011230 -44.60200500]
[162.68281555 -42.06515884]
[162.94252014 -38.90301132]
[162.02600098 -35.46857071]
[159.82223511 -32.19627380]
[156.37673950 -29.55382729]
[151.13002014 -15.50135708]
[157.52726746 -2.09945989]
[152.40652466 12.22648621]
[138.30601501 18.84563637]
[133.05929565 32.89810944]
[127.81256866 46.95058060]
[122.56585693 61.00305176]
[117.31913757 75.05551910]
[112.07241821 89.10799408]
[116.25971985 99.97573090]
[112.10487366 110.85591888]
[101.73955536 116.16641998]
[96.28419495 130.13922119]
[90.82884216 144.11201477]
[98.14492798 160.00207520]
[91.82958221 175.95298767]
[76.24487305 182.27403259]
[70.99816132 196.32650757]
[65.75144196 210.37898254]
[60.50472260 224.43144226]
[71.56247711 234.82383728]
[77.78221893 248.62086487]
[78.24453735 263.70727539]
[72.91011810 277.78320312]
[62.62095642 288.71472168]
[48.96763229 294.85736084]
[34.04348373 295.30352783]
[28.79676628 309.35598755]
[23.55004883 323.40844727]
[23.48007965 332.54263306]
[18.11918831 337.63012695]
[12.66383171 351.60290527]
[7.20847511 365.57571411]
[1.75311804 379.54852295]
[14.52474308 387.49838257]
[25.61796379 397.65982056]
[34.65494919 409.68676758]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 207]
[30 206]
[31 205]
[32 204]
[33 202]
[34 201]
[35 200]
[42 193]
[43 192]
[44 191]
[45 190]
[49 187]
[50 186]
[51 185]
[53 182]
[54 181]
[55 180]
[56 179]
[57 178]
[58 177]
[61 174]
[62 173]
[63 168]
[64 167]
[65 166]
[66 165]
[67 164]
[74 158]
[75 157]
[76 156]
[77 155]
[78 142]
[79 141]
[80 140]
[81 139]
[82 138]
[83 137]
[84 136]
[85 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
