%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[62.50647736 814.10577393]
[47.49848175 814.46197510]
[32.52783966 813.34539795]
[17.73873138 810.76684570]
[3.27358723 806.75103760]
[-10.72828293 801.33679199]
[-24.13203049 794.57611084]
[-36.80856323 786.53424072]
[-48.63580322 777.28851318]
[-59.49983597 766.92803955]
[-69.29603577 755.55255127]
[-77.93006134 743.27166748]
[-85.31875610 730.20361328]
[-91.39096832 716.47424316]
[-96.08820343 702.21582031]
[-99.36523438 687.56567383]
[-101.19049835 672.66479492]
[-101.54641724 657.65679932]
[-100.42955780 642.68621826]
[-97.85068512 627.89715576]
[-93.83462524 613.43206787]
[-88.42006683 599.43029785]
[-81.65914917 586.02667236]
[-73.61698914 573.35034180]
[-64.37104034 561.52325439]
[-54.01034164 550.65942383]
[-42.63468170 540.86346436]
[-30.35361290 532.22967529]
[-17.28541374 524.84124756]
[-3.55594110 518.76934814]
[10.70258045 514.07238770]
[25.35282898 510.79562378]
[40.25371170 508.97067261]
[55.26171875 508.61505127]
[56.37736893 493.65658569]
[57.49301910 478.69815063]
[58.60866547 463.73968506]
[50.95523834 454.37210083]
[51.76228333 441.90084839]
[61.14142990 433.04678345]
[62.47966385 418.10659790]
[63.81789780 403.16641235]
[57.24692154 389.79959106]
[66.18456268 376.74475098]
[67.52279663 361.80456543]
[54.66246796 354.24960327]
[46.32337952 341.80895996]
[44.20402908 326.92041016]
[48.77780914 312.52941895]
[59.18858337 301.50659180]
[73.41037750 296.07501221]
[74.74861145 281.13482666]
[76.08684540 266.19464111]
[77.42507935 251.25445557]
[78.76331329 236.31427002]
[80.10154724 221.37408447]
[81.43978119 206.43389893]
[78.90556335 199.49130249]
[82.91078186 191.28179932]
[84.47129822 176.36318970]
[86.03182220 161.44459534]
[87.59234619 146.52598572]
[89.15287018 131.60737610]
[90.71339417 116.68877411]
[81.67102814 105.36703491]
[83.17844391 90.95613861]
[94.36800385 81.75070190]
[95.92852783 66.83209991]
[96.70984650 51.85245895]
[96.70984650 36.85245895]
[96.70984650 21.85246086]
[96.70984650 6.85246038]
[96.70984650 -8.14754009]
[86.83480835 3.14332366]
[72.23516846 6.58577442]
[58.35622787 0.89586431]
[50.37449265 -11.80421162]
[51.26695251 -26.77763939]
[60.70074081 -38.43969727]
[75.15728760 -42.44073105]
[89.24465942 -37.28845215]
[97.70894623 -24.90341187]
[99.49140930 -39.79712677]
[101.27388000 -54.69084549]
[102.83440399 -69.60945129]
[104.17263794 -84.54963684]
[105.51087189 -99.48982239]
[106.84910583 -114.43000793]
[104.88309479 -118.30153656]
[104.30905914 -122.20474243]
[104.96602631 -125.69813538]
[106.56618500 -128.43786621]
[108.73770905 -130.21060181]
[110.96282959 -145.04464722]
[105.35826111 -159.83990479]
[114.89794159 -171.27859497]
[117.12305450 -186.11264038]
[119.34817505 -200.94668579]
[121.57328796 -215.78073120]
[107.73522186 -221.79489136]
[95.92584991 -231.18644714]
[86.95037079 -243.31506348]
[81.42074585 -257.35379028]
[79.71398926 -272.34542847]
[81.94647217 -287.26782227]
[87.96597290 -301.10357666]
[97.36209106 -312.90933228]
[109.49416351 -321.88012695]
[123.53501892 -327.40432739]
[138.52731323 -329.10528564]
[153.44886780 -326.86706543]
[167.28228760 -320.84219360]
[179.08439636 -311.44152832]
[188.05050659 -299.30599976]
[193.56930542 -285.26300049]
[195.26448059 -270.27005005]
[193.02047729 -255.34936523]
[186.99028015 -241.51828003]
[177.58505249 -229.71978760]
[165.44606018 -220.75836182]
[151.40093994 -215.24501038]
[136.40733337 -213.55561829]
[134.18222046 -198.72157288]
[131.95709229 -183.88752747]
[129.73197937 -169.05348206]
[135.49569702 -155.31925964]
[125.79687500 -142.81953430]
[123.57175446 -127.98548889]
[121.78929138 -113.09177399]
[120.45105743 -98.15158844]
[119.11282349 -83.21140289]
[117.77458191 -68.27121735]
[120.09511566 -64.09698486]
[119.81805420 -58.42070007]
[116.16759491 -52.90837860]
[114.38513184 -38.01466370]
[112.60266113 -23.12094498]
[111.70984650 -8.14754009]
[111.70984650 6.85246038]
[111.70984650 21.85246086]
[111.70984650 36.85245895]
[111.70984650 51.85245895]
[122.25420380 41.18397522]
[137.17700195 39.66405106]
[149.65573120 47.98757935]
[153.98530579 62.34915543]
[148.18627930 76.18286133]
[134.90989685 83.16410828]
[120.22595215 80.10116577]
[110.84712982 68.39262390]
[109.28660583 83.31122589]
[118.32897186 94.63296509]
[116.82155609 109.04386139]
[105.63199615 118.24929810]
[104.07147217 133.16790771]
[102.51094818 148.08650208]
[100.95043182 163.00511169]
[99.38990784 177.92372131]
[97.82938385 192.84231567]
[96.37996674 207.77212524]
[95.04173279 222.71231079]
[93.70349884 237.65249634]
[92.36526489 252.59268188]
[91.02703094 267.53286743]
[89.68879700 282.47305298]
[88.35055542 297.41323853]
[101.38066101 305.28585815]
[109.66672516 317.98339844]
[111.61013794 332.95816040]
[106.87853241 347.23306274]
[96.46125031 357.99362183]
[82.46298218 363.14279175]
[81.12474823 378.08297729]
[87.59999847 392.51840210]
[78.75807953 404.50463867]
[77.41984558 419.44482422]
[76.08161163 434.38500977]
[84.21483612 450.90567017]
[73.56711578 464.85534668]
[72.45146942 479.81378174]
[71.33582306 494.77224731]
[70.22017670 509.73068237]
[85.00938416 512.30865479]
[99.47469330 516.32385254]
[113.47677612 521.73760986]
[126.88079071 528.49768066]
[139.55764771 536.53912354]
[151.38525391 545.78436279]
[162.24971008 556.14440918]
[172.04637146 567.51947021]
[180.68087769 579.79998779]
[188.07009888 592.86779785]
[194.14285278 606.59686279]
[198.84066772 620.85510254]
[202.11827087 635.50518799]
[203.94413757 650.40594482]
[204.30065918 665.41394043]
[203.18440247 680.38458252]
[200.60610962 695.17376709]
[196.59063721 709.63897705]
[191.17663574 723.64093018]
[184.41625977 737.04486084]
[176.37460327 749.72155762]
[167.12911987 761.54895020]
[156.76885986 772.41320801]
[145.39360046 782.20965576]
[133.11286926 790.84387207]
[120.04496765 798.23284912]
[106.31573486 804.30535889]
[92.05740356 809.00286865]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 182]
[35 181]
[36 180]
[37 179]
[40 177]
[41 176]
[42 175]
[44 173]
[45 172]
[51 166]
[52 165]
[53 164]
[54 163]
[55 162]
[56 161]
[57 160]
[59 159]
[60 158]
[61 157]
[62 156]
[63 155]
[64 154]
[67 151]
[68 150]
[69 142]
[70 141]
[71 140]
[72 139]
[73 138]
[82 137]
[83 136]
[84 135]
[85 132]
[86 131]
[87 130]
[88 129]
[93 128]
[94 127]
[96 125]
[97 124]
[98 123]
[99 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
