%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[135.04379272 405.82690430]
[131.28750610 391.30484009]
[127.53119659 376.78277588]
[123.77489471 362.26074219]
[118.24047852 376.20239258]
[106.53826904 385.58633423]
[91.72721100 387.95962524]
[77.67886353 382.70184326]
[68.06544495 371.18740845]
[65.39987183 356.42617798]
[70.37892151 342.27664185]
[81.70108032 332.43750000]
[96.40676880 329.48068237]
[110.65194702 334.17904663]
[120.71255493 345.30374146]
[119.15203094 330.38513184]
[117.59150696 315.46652222]
[116.03099060 300.54791260]
[114.47046661 285.62930298]
[105.45107269 273.77606201]
[111.71068573 259.24581909]
[110.15016174 244.32720947]
[101.13076782 232.47395325]
[107.39038086 217.94371033]
[96.33205414 204.31726074]
[103.96978760 187.56176758]
[102.18732452 172.66804504]
[100.40485382 157.77433777]
[98.62239075 142.88061523]
[96.61837769 128.01509094]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[88.54757690 74.21002960]
[84.17978668 66.18755341]
[86.40147400 59.13872910]
[84.39746094 44.27320099]
[82.39344788 29.40767479]
[80.38942719 14.54214668]
[70.87777710 1.89939988]
[76.84533691 -11.74748516]
[74.84132385 -26.61301422]
[72.83731079 -41.47854233]
[70.83329773 -56.34407043]
[59.24301529 -70.65304565]
[66.53665161 -86.61455536]
[64.31153870 -101.44860077]
[62.08642197 -116.28264618]
[59.86130524 -131.11668396]
[50.16247177 -143.61642456]
[55.92619324 -157.35063171]
[53.70107651 -172.18467712]
[48.34988785 -186.19770813]
[40.12108231 -198.73910522]
[31.89227295 -211.28050232]
[23.66346550 -223.82189941]
[15.43465805 -236.36331177]
[1.39495468 -243.65695190]
[0.88204169 -258.54272461]
[-7.34676600 -271.08413696]
[-20.78892517 -264.38751221]
[-34.92877960 -259.32778931]
[-49.56782532 -255.97596741]
[-64.50055695 -254.37911987]
[-79.51734161 -254.55966187]
[-94.40736389 -256.51507568]
[-108.96159363 -260.21786499]
[-122.97570801 -265.61611938]
[-136.25297546 -272.63397217]
[-148.60700989 -281.17297363]
[-159.86436462 -291.11318970]
[-169.86700439 -302.31512451]
[-178.47453308 -314.62152100]
[-185.56608582 -327.85958862]
[-191.04212952 -341.84347534]
[-194.82575989 -356.37689209]
[-196.86389160 -371.25582886]
[-197.12789917 -386.27136230]
[-195.61408997 -401.21273804]
[-192.34368896 -415.87020874]
[-187.36262512 -430.03796387]
[-180.74081421 -443.51712036]
[-172.57122803 -456.11846924]
[-162.96855164 -467.66513062]
[-152.06759644 -477.99496460]
[-140.02137756 -486.96295166]
[-126.99902344 -494.44323730]
[-113.18333435 -500.33078003]
[-98.76826477 -504.54293823]
[-83.95619202 -507.02056885]
[-68.95503235 -507.72891235]
[-53.97539902 -506.65798950]
[-39.22756958 -503.82287598]
[-24.91858673 -499.26333618]
[-11.24932480 -493.04339600]
[1.58832192 -485.25036621]
[13.41413212 -475.99365234]
[24.06208992 -465.40322876]
[33.38271713 -453.62774658]
[41.24516296 -440.83248901]
[47.53905106 -427.19711304]
[52.17602539 -412.91305542]
[55.09099579 -398.18078613]
[56.24303436 -383.20718384]
[55.61596680 -368.20239258]
[53.21860123 -353.37710571]
[49.08459091 -338.93945312]
[43.27197266 -325.09207153]
[35.86234283 -312.02938843]
[26.95972252 -299.93478394]
[16.68909264 -288.97802734]
[5.19463396 -279.31292725]
[13.42344189 -266.77154541]
[26.87456512 -260.37493896]
[27.97605896 -244.59211731]
[36.20486450 -232.05072021]
[44.43367386 -219.50930786]
[52.66248322 -206.96791077]
[60.89128876 -194.42651367]
[59.06876373 -209.31538391]
[60.23912430 -224.26965332]
[64.35576630 -238.69371033]
[71.25470734 -252.01303101]
[80.66118622 -263.69714355]
[92.20053101 -273.28063965]
[105.41313934 -280.38183594]
[119.77275848 -284.71786499]
[134.70745850 -286.11608887]
[149.62237549 -284.52075195]
[163.92346191 -279.99539185]
[177.04113770 -272.72030640]
[188.45289612 -262.98522949]
[197.70420837 -251.17790222]
[204.42663574 -237.76861572]
[208.35240173 -223.29144287]
[209.32513428 -208.32302856]
[207.30610657 -193.45951843]
[202.37573242 -179.29296875]
[194.73039246 -166.38758850]
[184.67459106 -155.25741577]
[172.60884094 -146.34574890]
[159.01373291 -140.00755310]
[144.43072510 -136.49525452]
[129.44068909 -135.94876099]
[114.64064789 -138.38983154]
[100.62009430 -143.72125244]
[87.93745422 -151.73065186]
[77.09786987 -162.09904480]
[68.53511810 -174.40980530]
[70.76023865 -159.57575989]
[80.29991150 -148.13705444]
[74.69535065 -133.34179688]
[76.92046356 -118.50775909]
[79.14558411 -103.67371368]
[81.37069702 -88.83967590]
[90.90881348 -81.39985657]
[92.88400269 -69.05957794]
[85.69882965 -58.34808350]
[87.70284271 -43.48255539]
[89.70685577 -28.61702728]
[91.71086884 -13.75149918]
[101.07917786 -2.17203450]
[95.25495911 12.53813267]
[97.25897217 27.40366173]
[99.26298523 42.26918793]
[101.26699829 57.13471603]
[103.38162231 71.98491669]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[111.45242310 125.78997040]
[115.26538849 131.19116211]
[115.71132660 136.85667419]
[113.51610565 141.09814453]
[115.29857635 155.99186707]
[117.08103943 170.88558960]
[118.86350250 185.77929688]
[128.50210571 194.35018921]
[129.68011475 206.79188538]
[122.30899048 216.38319397]
[131.44000244 229.30352783]
[125.06876373 242.76669312]
[126.62928772 257.68530273]
[135.76029968 270.60562134]
[129.38906860 284.06878662]
[130.94958496 298.98739624]
[132.51011658 313.90600586]
[134.07063293 328.82461548]
[135.63116455 343.74322510]
[138.29695129 358.50442505]
[142.05325317 373.02648926]
[145.80955505 387.54855347]
[149.56585693 402.07061768]
[164.66674805 402.97531128]
[178.74822998 408.50405884]
[190.43075562 418.11517334]
[198.56977844 430.86709595]
[202.36793518 445.51049805]
[201.45312500 460.61077881]
[195.91494751 474.68853760]
[186.29598999 486.36462402]
[173.53862000 494.49511719]
[158.89268494 498.28344727]
[143.79302979 497.35852051]
[129.71896362 491.81091309]
[118.04932404 482.18414307]
[109.92739105 469.42132568]
[106.14886475 454.77285767]
[107.08392334 439.67379761]
[112.64095306 425.60348511]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 193]
[2 192]
[3 191]
[4 190]
[15 189]
[16 188]
[17 187]
[18 186]
[19 185]
[21 183]
[22 182]
[24 180]
[26 177]
[27 176]
[28 175]
[29 174]
[30 171]
[31 170]
[33 168]
[34 167]
[36 166]
[37 165]
[38 164]
[39 163]
[41 161]
[42 160]
[43 159]
[44 158]
[46 155]
[47 154]
[48 153]
[49 152]
[51 150]
[52 149]
[53 119]
[54 118]
[55 117]
[56 116]
[57 115]
[59 113]
[60 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
