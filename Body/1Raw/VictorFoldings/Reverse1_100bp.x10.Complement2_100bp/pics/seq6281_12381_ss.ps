%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[145.54142761 697.11383057]
[134.54223633 686.90112305]
[124.46170807 675.78070068]
[115.37447357 663.83483887]
[107.34780884 651.15197754]
[100.44114685 637.82611084]
[94.70561218 623.95581055]
[90.18368530 609.64379883]
[86.90883636 594.99603271]
[84.90531158 580.12097168]
[84.18794250 565.12878418]
[84.76204681 550.13037109]
[86.62337494 535.23681641]
[89.75814056 520.55847168]
[94.14312744 506.20391846]
[99.74588776 492.27944946]
[106.52492523 478.88818359]
[114.43006134 466.12924194]
[123.40275574 454.09713745]
[133.37658691 442.88088989]
[144.27770996 432.56356812]
[156.02540588 423.22155762]
[168.53269958 414.92404175]
[181.70700073 407.73242188]
[195.45075989 401.69995117]
[190.62475586 387.49749756]
[179.20407104 377.93627930]
[182.08999634 362.38052368]
[177.26400757 348.17807007]
[172.43800354 333.97561646]
[161.72952271 328.34933472]
[157.59266663 316.55651855]
[162.75982666 304.73858643]
[158.14581299 290.46588135]
[153.53179932 276.19314575]
[136.90731812 275.25372314]
[121.88571930 267.98507690]
[110.78373718 255.47682190]
[105.32563019 239.62908936]
[106.37542725 222.86384583]
[113.80027008 207.75476074]
[126.48647308 196.63217163]
[121.44955444 182.50314331]
[116.41263580 168.37411499]
[111.37572479 154.24508667]
[106.33880615 140.11605835]
[101.30188751 125.98702240]
[85.62279510 121.68677521]
[75.55693054 108.91945648]
[75.03427124 92.66974640]
[84.25887299 79.28195953]
[79.01215363 65.22949219]
[73.76543427 51.17701721]
[68.46352386 65.20875549]
[55.99022293 73.54043579]
[40.99777603 73.06453705]
[29.07798767 63.95856857]
[24.67664909 49.61882782]
[29.43534851 35.39368057]
[41.57920837 26.58875847]
[56.57887268 26.48807907]
[68.84053802 35.13012314]
[65.30086517 20.55374908]
[61.76119232 5.97737408]
[58.22151947 -8.59900093]
[54.68184662 -23.17537689]
[51.14217377 -37.75175095]
[47.60250092 -52.32812881]
[43.24736404 -37.97428513]
[33.79029465 -26.33109856]
[20.63418579 -19.12576675]
[5.73067141 -17.42715645]
[-8.70940018 -21.48724556]
[-20.54393196 -30.70374680]
[-28.01733971 -43.70944595]
[-30.02098846 -58.57501984]
[-26.25764847 -73.09526062]
[-17.28558922 -85.11616516]
[-4.43576431 -92.85450745]
[10.38563442 -95.16235352]
[24.97993851 -91.69734955]
[37.18217087 -82.97349548]
[45.18151474 -70.28672028]
[44.73490524 -85.28007507]
[44.28829956 -100.27342224]
[43.84169388 -115.26676941]
[43.39508820 -130.26011658]
[32.17389297 -141.06393433]
[31.93455505 -156.27569580]
[42.30349731 -166.90681458]
[41.85689163 -181.90016174]
[41.41028595 -196.89350891]
[33.26553345 -210.45719910]
[40.62046432 -223.40919495]
[40.17385864 -238.40254211]
[39.72725296 -253.39588928]
[25.32723427 -258.13037109]
[13.41685104 -267.50686646]
[5.43433952 -280.39309692]
[2.34362626 -295.23303223]
[4.51792955 -310.23464966]
[11.69469261 -323.58642578]
[23.00728607 -333.67605591]
[37.08965683 -339.28521729]
[52.24129486 -339.73654175]
[66.63256073 -334.97552490]
[78.52565002 -325.57708740]
[86.48439789 -312.67617798]
[89.54776001 -297.83056641]
[87.34580994 -282.83300781]
[80.14445496 -269.49447632]
[68.81328583 -259.42568970]
[54.72060394 -253.84249878]
[55.16720963 -238.84915161]
[55.61381531 -223.85580444]
[63.72662354 -211.36453247]
[56.40363312 -197.34011841]
[56.85024261 -182.34675598]
[57.29684830 -167.35340881]
[68.28018188 -157.35832214]
[68.94668579 -142.15928650]
[58.38843918 -130.70672607]
[58.83504486 -115.71337891]
[59.28165054 -100.72003174]
[59.72825623 -85.72667694]
[60.17486191 -70.73332977]
[62.17887497 -55.86780167]
[65.71855164 -41.29142380]
[69.25822449 -26.71504974]
[72.79789734 -12.13867378]
[76.33756256 2.43770146]
[79.87723541 17.01407623]
[83.41690826 31.59045219]
[87.81790924 45.93029785]
[93.06462860 59.98276901]
[98.31134796 74.03524017]
[111.30344391 76.56386566]
[121.37061310 85.15692139]
[125.90783691 97.59082794]
[123.74104309 110.64814758]
[115.43092346 120.95010376]
[120.46783447 135.07913208]
[125.50475311 149.20816040]
[130.54167175 163.33718872]
[135.57858276 177.46621704]
[140.61549377 191.59526062]
[154.05622864 191.51916504]
[166.84471130 195.58145142]
[177.74064636 203.37342834]
[185.69187927 214.12538147]
[189.93591309 226.78263855]
[190.07304382 240.10899353]
[186.10395813 252.80741882]
[178.42831421 263.64636230]
[167.80453491 271.57913208]
[172.41854858 285.85186768]
[177.03254700 300.12460327]
[190.98132324 312.14596558]
[186.64045715 329.14959717]
[191.46646118 343.35205078]
[196.29244995 357.55450439]
[208.05833435 368.13159180]
[204.82720947 382.67150879]
[209.65321350 396.87396240]
[224.22697449 393.28411865]
[239.05538940 390.96038818]
[254.02865601 389.92001343]
[269.03594971 390.17068481]
[283.96612549 391.71051025]
[298.70867920 394.52813721]
[313.15441895 398.60266113]
[327.19641113 403.90396118]
[340.73071289 410.39276123]
[353.65707397 418.02102661]
[365.87982178 426.73223877]
[377.30847168 436.46197510]
[387.85839844 447.13815308]
[397.45147705 458.68173218]
[406.01666260 471.00726318]
[413.49060059 484.02346802]
[419.81793213 497.63400269]
[424.95178223 511.73806763]
[428.85418701 526.23126221]
[431.49621582 541.00628662]
[432.85833740 555.95373535]
[432.93041992 570.96295166]
[431.71197510 585.92279053]
[429.21203613 600.72247314]
[425.44906616 615.25250244]
[420.45092773 629.40527344]
[414.25466919 643.07592773]
[406.90612793 656.16339111]
[398.45971680 668.57061768]
[388.97799683 680.20581055]
[378.53112793 690.98284912]
[367.19650269 700.82196045]
[355.05801392 709.65020752]
[342.20550537 717.40228271]
[328.73419189 724.02081299]
[314.74377441 729.45678711]
[300.33782959 733.66992188]
[285.62304688 736.62902832]
[270.70834351 738.31225586]
[255.70416260 738.70709229]
[240.72157288 737.81060791]
[225.87152100 735.62945557]
[211.26394653 732.17980957]
[197.00700378 727.48712158]
[183.20623779 721.58624268]
[169.96383667 714.52081299]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 164]
[26 163]
[28 161]
[29 160]
[30 159]
[33 157]
[34 156]
[35 155]
[42 146]
[43 145]
[44 144]
[45 143]
[46 142]
[47 141]
[51 136]
[52 135]
[53 134]
[62 133]
[63 132]
[64 131]
[65 130]
[66 129]
[67 128]
[68 127]
[83 126]
[84 125]
[85 124]
[86 123]
[87 122]
[90 119]
[91 118]
[92 117]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
