%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[67.81425476 501.97720337]
[54.08069611 508.11755371]
[39.45263290 511.62960815]
[24.42829132 512.39367676]
[9.51939774 510.38385010]
[-4.76625776 505.66848755]
[-17.94211197 498.40820312]
[-29.55939865 488.85031128]
[-39.22243881 477.32034302]
[-46.60211182 464.21099854]
[-51.44707108 449.96875000]
[-53.59229660 435.07873535]
[-52.96472168 420.04809570]
[-49.58572769 405.38870239]
[-43.57039261 391.59994507]
[-35.12360382 379.15139771]
[-24.53305054 368.46707153]
[-12.15944862 359.91085815]
[1.57576597 353.77420044]
[16.20477486 350.26611328]
[31.22932053 349.50604248]
[33.23333359 334.64053345]
[31.10150719 330.36685181]
[31.63174820 324.70858765]
[35.52470779 319.36477661]
[37.97043610 304.56549072]
[40.41616440 289.76623535]
[42.86189270 274.96694946]
[45.30761719 260.16769409]
[34.94303513 271.01089478]
[20.75626564 275.88281250]
[5.91667032 273.69503784]
[-6.26054764 264.93630981]
[-13.05496597 251.56335449]
[-12.94869518 236.56373596]
[-5.96547604 223.28839111]
[6.33462286 214.70307922]
[21.20372772 212.72576904]
[35.32004166 217.79821777]
[45.52994537 228.78720093]
[49.55252075 243.23779297]
[54.37851715 229.03533936]
[59.20451736 214.83288574]
[52.41108322 201.62739563]
[57.10301208 187.15533447]
[71.00019836 180.11929321]
[75.82619476 165.91683960]
[80.65219879 151.71438599]
[77.42107391 137.17446899]
[89.18695831 126.59739685]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[93.72218323 72.48873901]
[94.39196777 57.50370407]
[95.06175232 42.51866531]
[95.73153687 27.53362465]
[96.40132141 12.54858589]
[97.07110596 -2.43645287]
[89.95773315 -16.56834984]
[98.25561523 -28.93743896]
[98.92540741 -43.92247772]
[99.48361206 -58.91208649]
[99.93022156 -73.90543365]
[100.37682343 -88.89878845]
[100.82343292 -103.89213562]
[88.55764771 -110.61622620]
[80.42443085 -121.91520691]
[77.96471405 -135.55075073]
[81.60242462 -148.85173035]
[90.57265472 -159.23747253]
[103.08169556 -164.71842957]
[103.75148773 -179.70347595]
[104.42127228 -194.68850708]
[105.09105682 -209.67355347]
[105.76084137 -224.65858459]
[90.32862091 -228.81124878]
[76.20449066 -236.27395630]
[64.08789825 -246.67375183]
[54.57811737 -259.49237061]
[48.14462662 -274.09194946]
[45.10391998 -289.74688721]
[45.60395432 -305.67980957]
[49.61693954 -321.10025024]
[56.94086075 -335.24374390]
[67.20967102 -347.40994263]
[79.91154480 -356.99703979]
[94.41442871 -363.53173828]
[109.99748230 -366.69247437]
[110.22080994 -381.69079590]
[110.44413757 -396.68914795]
[110.66746521 -411.68746948]
[102.26034546 -421.46923828]
[102.75512695 -433.95681763]
[111.34157562 -442.47732544]
[111.78818512 -457.47067261]
[104.46519470 -471.49511719]
[112.57800293 -483.98635864]
[113.02460480 -498.97970581]
[99.14588928 -505.18048096]
[88.70018768 -516.22381592]
[83.28039551 -530.42578125]
[83.71299744 -545.62054443]
[89.93202209 -559.49108887]
[100.98911285 -569.92224121]
[115.19813538 -575.32336426]
[130.39233398 -574.87078857]
[144.25469971 -568.63348389]
[154.67131042 -557.56268311]
[160.05371094 -543.34655762]
[159.58113098 -528.15301514]
[153.32563782 -514.29882812]
[142.24114990 -503.89682007]
[128.01795959 -498.53311157]
[127.57135010 -483.53976440]
[134.92628479 -470.58776855]
[126.78153229 -457.02407837]
[126.33492279 -442.03073120]
[135.47360229 -427.04901123]
[125.66580200 -411.46414185]
[125.44247437 -396.46582031]
[125.21914673 -381.46746826]
[124.99581909 -366.46914673]
[138.73486328 -363.43954468]
[151.61750793 -357.77188110]
[163.14245605 -349.68447876]
[172.86077881 -339.48986816]
[180.39344788 -327.58270264]
[185.44610596 -314.42453003]
[187.82057190 -300.52581787]
[187.42259216 -286.42617798]
[184.26559448 -272.67346191]
[178.47027588 -259.80239868]
[170.25991821 -248.31390381]
[159.95185852 -238.65545654]
[147.94519043 -231.20379639]
[134.70530701 -226.25012207]
[120.74588013 -223.98880005]
[120.07609558 -209.00376892]
[119.40631104 -194.01872253]
[118.73652649 -179.03369141]
[118.06673431 -164.04864502]
[131.89460754 -155.68788147]
[139.66398621 -141.41229248]
[139.17114258 -125.07294464]
[130.45594788 -111.13233185]
[115.81678009 -103.44553375]
[115.37017822 -88.45217896]
[114.92356873 -73.45883179]
[114.47696686 -58.46548080]
[117.41992188 -51.68604279]
[113.91044617 -43.25269318]
[113.24065399 -28.26765251]
[120.40193939 -15.20758724]
[112.05614471 -1.76666772]
[111.38636017 13.21837139]
[110.71657562 28.20340919]
[110.04679108 43.18844986]
[109.37700653 58.17348862]
[108.70722198 73.15852356]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[114.44467926 99.53414917]
[125.39723206 89.28516388]
[138.85774231 82.66590118]
[153.66174316 80.24898529]
[168.52854919 82.24351501]
[182.17202759 88.47693634]
[193.41188049 98.40999603]
[201.27574158 111.18338776]
[205.08332825 125.69208527]
[204.50521851 140.68093872]
[199.59146118 154.85327148]
[190.76710510 166.98301697]
[178.79557800 176.02085876]
[164.71250916 181.18489075]
[149.73625183 182.02841187]
[135.16238403 178.47843933]
[122.25168610 170.84207153]
[112.12108612 159.77993774]
[105.64696503 146.24902344]
[103.38941193 131.42340088]
[106.27534485 146.97915649]
[94.85465240 156.54039001]
[90.02865601 170.74284363]
[85.20265961 184.94529724]
[91.93605804 198.99162292]
[86.83948517 213.32617188]
[73.40697479 219.65887451]
[68.58097839 233.86134338]
[63.75497818 248.06379700]
[60.10688782 262.61340332]
[57.66116333 277.41268921]
[55.21543503 292.21194458]
[52.76970673 307.01123047]
[50.32397842 321.81048584]
[48.09886169 336.64453125]
[46.09484863 351.51007080]
[60.38177490 356.22158813]
[73.55958557 363.47830200]
[85.17945099 373.03305054]
[94.84559631 384.56042480]
[102.22880554 397.66778564]
[107.07759857 411.90872192]
[109.22683716 426.79815674]
[108.60331726 441.82897949]
[105.22827148 456.48925781]
[99.21665192 470.27966309]
[90.77322388 482.73046875]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 199]
[22 198]
[25 197]
[26 196]
[27 195]
[28 194]
[29 193]
[41 192]
[42 191]
[43 190]
[46 187]
[47 186]
[48 185]
[50 183]
[51 163]
[53 161]
[54 160]
[55 159]
[56 158]
[57 157]
[58 156]
[59 155]
[61 153]
[62 152]
[63 150]
[64 149]
[65 148]
[66 147]
[72 142]
[73 141]
[74 140]
[75 139]
[76 138]
[89 123]
[90 122]
[91 121]
[92 120]
[95 118]
[96 117]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
