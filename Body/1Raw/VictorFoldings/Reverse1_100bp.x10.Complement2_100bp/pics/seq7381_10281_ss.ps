%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[76.20475769 479.36822510]
[86.67185974 468.46267700]
[99.88922119 461.12832642]
[96.78511047 446.45303345]
[93.68099976 431.77770996]
[90.57689667 417.10241699]
[87.36361694 402.45062256]
[84.04135895 387.82318115]
[80.71910095 373.19570923]
[70.35507965 362.49822998]
[74.84369659 347.32708740]
[71.52143860 332.69964600]
[68.19918060 318.07217407]
[64.68614960 332.65499878]
[57.82908630 345.99594116]
[48.01578903 357.34051514]
[35.80124283 366.04711914]
[21.87624550 371.62335205]
[7.02831745 373.75384521]
[-7.90281534 372.31814575]
[-22.07272530 367.39739990]
[-34.68003845 359.26992798]
[-45.01174545 348.39538574]
[-52.48353958 335.38876343]
[-56.67285919 320.98565674]
[-57.34276962 306.00061035]
[-54.45539093 291.28112793]
[-48.17401886 277.65966797]
[-38.85388947 265.90658569]
[-27.02210426 256.68655396]
[-13.34780979 250.52102661]
[1.39564800 247.75869751]
[16.37445450 248.55580139]
[30.74148560 252.86721802]
[43.68421555 260.44915771]
[54.47067261 270.87280273]
[62.49082947 283.54864502]
[67.29132080 297.76086426]
[69.29534149 282.89532471]
[71.29935455 268.02981567]
[73.30336761 253.16427612]
[75.30738068 238.29875183]
[68.22509003 228.49223328]
[69.77301025 216.09112549]
[79.66252899 207.81101990]
[73.89881134 194.07679749]
[83.59764099 181.57705688]
[85.82275391 166.74301147]
[88.04787445 151.90898132]
[89.71941376 137.00239563]
[90.83506012 122.04394531]
[79.66205597 112.50199127]
[76.19287872 98.22438812]
[81.74163055 84.61937714]
[94.20648193 76.84040833]
[95.32213593 61.88195038]
[96.43778229 46.92350006]
[80.72370148 42.24730301]
[66.43482208 34.22151566]
[54.27441406 23.24444199]
[44.84025955 9.85957527]
[38.59526443 -5.27133131]
[35.84474945 -21.40097618]
[36.72151947 -37.73341751]
[41.17945862 -53.46335220]
[48.99594879 -67.81581116]
[59.78298187 -80.08437347]
[73.00641632 -89.66588593]
[88.01242065 -96.09015656]
[104.05982208 -99.04300690]
[104.50643158 -114.03635406]
[104.95304108 -129.02970886]
[105.39964294 -144.02305603]
[98.07665253 -158.04748535]
[106.18946075 -170.53874207]
[106.63607025 -185.53208923]
[107.08267975 -200.52543640]
[106.85935211 -215.52377319]
[105.96652985 -230.49717712]
[95.47260284 -245.62857056]
[103.93320465 -261.00338745]
[93.21515656 -275.97686768]
[101.44590759 -291.47595215]
[100.10767365 -306.41613770]
[98.76943970 -321.35632324]
[97.43120575 -336.29650879]
[93.54866028 -344.56472778]
[96.18596649 -351.46884155]
[95.07031250 -366.42727661]
[92.12992859 -370.74020386]
[91.22810364 -375.29431152]
[92.11534119 -379.27273560]
[94.25409698 -382.07595825]
[93.80748749 -397.06930542]
[93.36088562 -412.06265259]
[92.91427612 -427.05599976]
[92.46767426 -442.04937744]
[78.24448395 -447.41305542]
[67.15998840 -457.81509399]
[60.90449524 -471.66925049]
[60.43191910 -486.86282349]
[65.81432343 -501.07894897]
[76.23093414 -512.14978027]
[90.09329987 -518.38702393]
[105.28749084 -518.83959961]
[119.49652100 -513.43847656]
[130.55360413 -503.00735474]
[136.77262878 -489.13677979]
[137.20523071 -473.94201660]
[131.78544617 -459.74011230]
[121.33974457 -448.69674683]
[107.46102142 -442.49597168]
[107.90763092 -427.50262451]
[108.35423279 -412.50927734]
[108.80084229 -397.51593018]
[109.24744415 -382.52258301]
[110.02877045 -367.54293823]
[111.14441681 -352.58447266]
[112.37139130 -337.63473511]
[113.70962524 -322.69454956]
[115.04785919 -307.75436401]
[116.38609314 -292.81417847]
[125.46447754 -284.81985474]
[126.70165253 -272.38388062]
[118.89165497 -262.11904907]
[127.85000610 -253.99041748]
[128.90188599 -241.53741455]
[120.93994141 -231.38999939]
[121.83275604 -216.41659546]
[132.57334900 -226.88748169]
[147.57325745 -226.83467102]
[158.23985291 -216.28840637]
[158.46281433 -201.29005432]
[148.11444092 -190.43138123]
[133.12272644 -189.93269348]
[122.07602692 -200.07882690]
[121.62941742 -185.08547974]
[121.18281555 -170.09213257]
[128.53775024 -157.14013672]
[120.39299011 -143.57644653]
[119.94638824 -128.58309937]
[119.49977875 -113.58975220]
[119.05317688 -98.59639740]
[132.38774109 -95.56535339]
[144.93373108 -90.11396790]
[156.25587463 -82.42955780]
[165.96104431 -72.77697754]
[173.71188354 -61.48942566]
[179.23852539 -48.95697784]
[182.34802246 -35.61311722]
[182.93104553 -21.91970825]
[180.96577454 -8.35103607]
[176.51864624 4.62262964]
[169.74214172 16.55133438]
[160.86961365 27.02104187]
[150.20712280 35.66800690]
[138.12300110 42.19141006]
[125.03507996 46.36382294]
[111.39623260 48.03914642]
[110.28058624 62.99760056]
[109.16493988 77.95605469]
[120.33794403 87.49800873]
[123.80712128 101.77561188]
[118.25836945 115.38062286]
[105.79351807 123.15959167]
[104.67786407 138.11804199]
[117.57404327 130.45719910]
[131.65747070 135.62022400]
[136.54638672 149.80114746]
[128.63684082 162.54631042]
[113.75947571 164.46046448]
[102.88191986 154.13409424]
[100.65679932 168.96813965]
[98.43167877 183.80218506]
[104.03624725 198.59742737]
[94.49656677 210.03613281]
[101.63204193 227.01159668]
[90.17290497 240.30276489]
[88.16889191 255.16828918]
[86.16487885 270.03381348]
[84.16086578 284.89935303]
[82.15685272 299.76489258]
[82.82663727 314.74990845]
[86.14889526 329.37738037]
[89.47115326 344.00485229]
[100.07280731 355.74859619]
[95.34655762 369.87344360]
[98.66882324 384.50091553]
[101.99108124 399.12835693]
[106.94346619 406.80377197]
[105.25219727 413.99832153]
[108.35630798 428.67361450]
[111.46041870 443.34890747]
[114.56452942 458.02420044]
[129.61967468 459.37838745]
[143.60618591 465.11151123]
[155.28039551 474.71383667]
[163.60421753 487.33148193]
[167.83752441 501.84252930]
[167.60389709 516.95666504]
[162.92408752 531.32995605]
[154.21423340 543.68426514]
[142.24880981 552.92114258]
[128.09176636 558.21923828]
[113.00196075 559.10742188]
[98.32113647 555.50677490]
[85.35472870 547.73736572]
[75.25568390 536.49011230]
[68.92201233 522.76507568]
[66.91689301 507.78274536]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 194]
[4 193]
[5 192]
[6 191]
[7 189]
[8 188]
[9 187]
[11 185]
[12 184]
[13 183]
[38 182]
[39 181]
[40 180]
[41 179]
[42 178]
[45 176]
[47 174]
[48 173]
[49 172]
[50 166]
[51 165]
[55 161]
[56 160]
[57 159]
[70 143]
[71 142]
[72 141]
[73 140]
[75 138]
[76 137]
[77 136]
[78 129]
[79 128]
[81 125]
[83 122]
[84 121]
[85 120]
[86 119]
[88 118]
[89 117]
[93 116]
[94 115]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
