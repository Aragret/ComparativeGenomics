%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[59.28638458 833.02966309]
[44.45998383 835.33312988]
[29.52473450 836.77062988]
[14.53116989 837.33728027]
[-0.46997494 837.03118896]
[-15.42794132 835.85333252]
[-30.29211617 833.80773926]
[-45.01220322 830.90136719]
[-59.53839493 827.14398193]
[-73.82154083 822.54833984]
[-87.81330109 817.13000488]
[-101.46634674 810.90728760]
[-114.73446655 803.90118408]
[-127.57277679 796.13549805]
[-139.93782043 787.63647461]
[-151.78778076 778.43286133]
[-163.08255005 768.55578613]
[-173.78388977 758.03869629]
[-183.85562134 746.91717529]
[-193.26365662 735.22888184]
[-201.97615051 723.01324463]
[-209.96363831 710.31176758]
[-217.19906616 697.16729736]
[-223.65798950 683.62438965]
[-229.31851196 669.72888184]
[-234.16151428 655.52764893]
[-238.17059326 641.06890869]
[-241.33218384 626.40155029]
[-243.63558960 611.57513428]
[-245.07302856 596.63989258]
[-245.63960266 581.64630127]
[-245.33343506 566.64514160]
[-244.15554810 551.68719482]
[-242.10990906 536.82305908]
[-239.20346069 522.10296631]
[-235.44602966 507.57678223]
[-230.85034180 493.29367065]
[-225.43191528 479.30191040]
[-219.20912170 465.64889526]
[-212.20300293 452.38079834]
[-204.43725586 439.54254150]
[-195.93817139 427.17752075]
[-186.73451233 415.32760620]
[-176.85739136 404.03286743]
[-166.34025574 393.33157349]
[-155.21870422 383.25988770]
[-143.53033447 373.85189819]
[-131.31471252 365.13946533]
[-118.61317444 357.15203857]
[-105.46869659 349.91665649]
[-91.92575073 343.45779419]
[-78.03017426 337.79730225]
[-63.82897949 332.95437622]
[-49.37021637 328.94534302]
[-34.70280838 325.78381348]
[-19.87639236 323.48046875]
[-4.94113064 322.04312134]
[10.05243874 321.47659302]
[25.05358124 321.78280640]
[40.01153946 322.96078491]
[54.87569809 325.00646973]
[69.59575653 327.91299438]
[73.35205841 313.39093018]
[77.10836029 298.86886597]
[80.21247101 284.19357300]
[82.65819550 269.39428711]
[85.10392761 254.59501648]
[87.54965210 239.79574585]
[89.99538422 224.99647522]
[91.55590057 210.07786560]
[92.22569275 195.09283447]
[92.89547729 180.10778809]
[93.56526184 165.12275696]
[94.23504639 150.13771057]
[94.23504639 135.13771057]
[93.56526184 120.15267944]
[92.89547729 105.16764069]
[90.82864380 102.92761230]
[89.53118134 99.88604736]
[89.30154419 96.32645416]
[90.32926178 92.63862610]
[92.65885162 89.27618408]
[92.88217926 74.27784729]
[93.10550690 59.27951050]
[93.32883453 44.28117371]
[93.55216217 29.28283691]
[85.14504242 19.50106239]
[85.63982391 7.01350927]
[94.22627258 -1.50701964]
[94.67287445 -16.50037003]
[95.11948395 -31.49371910]
[92.32711029 -37.48656464]
[92.89514923 -43.14115143]
[95.80921173 -46.92496872]
[96.70202637 -61.89837265]
[89.79985046 -76.13461304]
[98.28096771 -88.37878418]
[99.17378998 -103.35219574]
[100.06660461 -118.32559967]
[86.14640045 -124.32590485]
[75.12004089 -134.72760010]
[68.31900787 -148.27462769]
[66.56457520 -163.33110046]
[70.06858826 -178.07890320]
[78.40792084 -190.73716736]
[90.57555389 -199.77731323]
[105.10219574 -204.10774231]
[120.23368073 -203.20549011]
[134.14280701 -197.17955017]
[145.14997864 -186.75755310]
[151.92602539 -173.19801331]
[153.65270996 -158.13832092]
[150.12152100 -143.39700317]
[141.75888062 -130.75413513]
[129.57460022 -121.73641968]
[115.04000854 -117.43278503]
[114.14719391 -102.45937347]
[113.25437927 -87.48596954]
[120.22042084 -74.32073212]
[111.67543793 -61.00555801]
[110.78261566 -46.03215408]
[110.11283112 -31.04711342]
[109.66622925 -16.05376434]
[109.21961975 -1.06041372]
[118.35830688 13.92128849]
[108.55049896 29.50616455]
[108.32717133 44.50450134]
[108.10384369 59.50283813]
[107.88051605 74.50117493]
[107.65718842 89.49951172]
[107.88051605 104.49784851]
[108.55030060 119.48288727]
[109.22008514 134.46792603]
[120.11538696 124.15810394]
[135.11283875 124.43424225]
[145.62123108 135.13815308]
[145.62088013 150.13815308]
[135.11196899 160.84156799]
[120.11449432 161.11697388]
[109.22008514 150.80749512]
[108.55030060 165.79254150]
[107.88051605 180.77757263]
[107.21073151 195.76261902]
[106.54093933 210.74765015]
[116.91029358 199.90899658]
[131.64909363 197.12188721]
[145.26011658 203.42585754]
[152.66679382 216.46966553]
[151.10662842 231.38830566]
[141.16151428 242.61749268]
[126.54073334 245.96900940]
[112.69747925 240.19284058]
[104.79465485 227.44219971]
[102.34892273 242.24147034]
[99.90319824 257.04074097]
[97.45746613 271.84002686]
[95.01174164 286.63928223]
[107.80471802 278.80731201]
[122.42038727 282.18106079]
[130.48623657 294.82788086]
[127.38177490 309.50311279]
[114.88538361 317.80010986]
[100.15555573 314.96597290]
[91.63041687 302.62515259]
[87.87412262 317.14721680]
[84.11782074 331.66928101]
[98.40100098 336.26480103]
[112.39280701 341.68304443]
[126.04590607 347.90567017]
[139.31408691 354.91162109]
[152.15245056 362.67721558]
[164.51757812 371.17614746]
[176.36761475 380.37966919]
[187.66246033 390.25662231]
[198.36389160 400.77362061]
[208.43571472 411.89508057]
[217.84384155 423.58331299]
[226.55644226 435.79882812]
[234.54402161 448.50027466]
[241.77957153 461.64465332]
[248.23858643 475.18753052]
[253.89924622 489.08303833]
[258.74237061 503.28417969]
[262.75155640 517.74285889]
[265.91326904 532.41021729]
[268.21679688 547.23663330]
[269.65435791 562.17187500]
[270.22106934 577.16546631]
[269.91500854 592.16656494]
[268.73724365 607.12457275]
[266.69174194 621.98876953]
[263.78540039 636.70886230]
[260.02810669 651.23504639]
[255.43252563 665.51818848]
[250.01422119 679.51000977]
[243.79153442 693.16308594]
[236.78552246 706.43121338]
[229.01989746 719.26953125]
[220.52090454 731.63464355]
[211.31733704 743.48461914]
[201.44032288 754.77941895]
[190.92327881 765.48083496]
[179.80178833 775.55261230]
[168.11351013 784.96069336]
[155.89794922 793.67321777]
[143.19648743 801.66076660]
[130.05206299 808.89624023]
[116.50917816 815.35522461]
[102.61364746 821.01580811]
[88.41249084 825.85888672]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 166]
[63 165]
[64 164]
[65 157]
[66 156]
[67 155]
[68 154]
[69 153]
[70 144]
[71 143]
[72 142]
[73 141]
[74 140]
[75 133]
[76 132]
[77 131]
[82 130]
[83 129]
[84 128]
[85 127]
[86 126]
[89 124]
[90 123]
[91 122]
[94 121]
[95 120]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
