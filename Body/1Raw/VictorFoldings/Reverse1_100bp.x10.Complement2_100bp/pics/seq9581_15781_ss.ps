%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[88.32373810 516.55102539]
[88.10041046 501.55270386]
[87.87708282 486.55435181]
[87.65375519 471.55603027]
[87.31877899 456.55975342]
[86.87217712 441.56640625]
[86.31396484 426.57678223]
[85.64418030 411.59176636]
[83.30285645 408.95538330]
[82.12216949 405.05395508]
[82.68277740 400.44537354]
[85.29424286 395.92572021]
[85.29424286 380.92572021]
[85.29424286 365.92572021]
[85.29424286 350.92572021]
[85.29424286 335.92572021]
[85.29424286 320.92572021]
[85.29424286 305.92572021]
[85.29424286 290.92572021]
[77.55693817 278.19845581]
[85.29424286 264.39825439]
[85.29424286 249.39826965]
[85.29424286 234.39826965]
[85.29424286 219.39826965]
[85.29424286 204.39826965]
[73.00357056 212.99707031]
[58.57513809 208.89581299]
[52.64504242 195.11779785]
[59.58473206 181.81964111]
[74.27852631 178.80427551]
[85.89399719 188.29301453]
[87.00964355 173.33456421]
[80.24038696 160.06706238]
[88.98266602 146.88058472]
[90.09831238 131.92213440]
[77.24411774 124.47929382]
[68.88432312 112.20166779]
[66.67003632 97.51414490]
[71.03858948 83.31759644]
[81.12716675 72.41590881]
[94.94322968 66.96221924]
[96.05888367 52.00376129]
[97.17453003 37.04531097]
[97.73274231 22.05570030]
[97.73274231 7.05569983]
[97.73274231 -7.94430017]
[97.73274231 -22.94429970]
[97.50941467 -37.94263840]
[97.06280518 -52.93598557]
[96.61620331 -67.92933655]
[84.58699799 -58.96840286]
[70.04285431 -62.63825226]
[63.70516205 -76.23361206]
[70.24584198 -89.73248291]
[84.84333801 -93.18400574]
[96.73617554 -84.04531097]
[97.40596008 -99.03034973]
[90.29258728 -113.16224670]
[98.59047699 -125.53133392]
[99.26026154 -140.51637268]
[99.93004608 -155.50141907]
[100.59983063 -170.48645020]
[101.26961517 -185.47149658]
[101.82782745 -200.46110535]
[102.27443695 -215.45445251]
[102.72103882 -230.44779968]
[102.94436646 -245.44613647]
[102.94436646 -260.44613647]
[102.94436646 -275.44613647]
[102.94436646 -290.44613647]
[102.94436646 -305.44613647]
[102.94436646 -320.44613647]
[102.94436646 -335.44613647]
[102.94436646 -350.44613647]
[102.94436646 -365.44613647]
[88.00830078 -366.96435547]
[73.30246735 -369.98583984]
[58.97776794 -374.47961426]
[45.18120193 -380.39956665]
[32.05434418 -387.68493652]
[19.73189354 -396.26095581]
[8.34030342 -406.03964233]
[-2.00353146 -416.92065430]
[-11.19346619 -428.79229736]
[-19.13519859 -441.53277588]
[-25.74723053 -455.01135254]
[-30.96171379 -469.08972168]
[-34.72513962 -483.62338257]
[-36.99888611 -498.46322632]
[-37.75962448 -513.45697021]
[-36.99954605 -528.45074463]
[-34.72645187 -543.29071045]
[-30.96366692 -557.82452393]
[-25.74980164 -571.90313721]
[-19.13836288 -585.38201904]
[-11.19719219 -598.12280273]
[-2.00777984 -609.99487305]
[8.33557606 -620.87634277]
[19.72673607 -630.65551758]
[32.04880905 -639.23211670]
[45.17534637 -646.51800537]
[58.97165298 -652.43859863]
[73.29615021 -656.93298340]
[88.00185394 -659.95513916]
[102.93785095 -661.47399902]
[117.95088196 -661.47399902]
[132.88688660 -659.95513916]
[147.59257507 -656.93298340]
[161.91708374 -652.43859863]
[175.71339417 -646.51800537]
[188.83992004 -639.23211670]
[201.16200256 -630.65551758]
[212.55316162 -620.87634277]
[222.89651489 -609.99487305]
[232.08592224 -598.12280273]
[240.02709961 -585.38201904]
[246.63853455 -571.90313721]
[251.85240173 -557.82452393]
[255.61518860 -543.29071045]
[257.88827515 -528.45074463]
[258.64834595 -513.45697021]
[257.88763428 -498.46322632]
[255.61387634 -483.62338257]
[251.85044861 -469.08972168]
[246.63597107 -455.01135254]
[240.02392578 -441.53277588]
[232.08219910 -428.79229736]
[222.89225769 -416.92065430]
[212.54843140 -406.03964233]
[201.15684509 -396.26095581]
[188.83439636 -387.68493652]
[175.70753479 -380.39956665]
[161.91096497 -374.47961426]
[147.58627319 -369.98583984]
[132.88043213 -366.96435547]
[117.94436646 -365.44613647]
[117.94436646 -350.44613647]
[117.94436646 -335.44613647]
[117.94436646 -320.44613647]
[117.94436646 -305.44613647]
[117.94436646 -290.44613647]
[117.94436646 -275.44613647]
[117.94436646 -260.44613647]
[117.94436646 -245.44613647]
[120.62805176 -241.49559021]
[120.85851288 -235.81721497]
[117.71438599 -230.00119019]
[117.26778412 -215.00784302]
[116.82117462 -200.01449585]
[119.76412964 -193.23506165]
[116.25465393 -184.80171204]
[115.58486938 -169.81666565]
[114.91508484 -154.83163452]
[114.24530029 -139.84658813]
[113.57551575 -124.86154938]
[120.73679352 -111.80148315]
[112.39099884 -98.36056519]
[111.72121429 -83.37552643]
[111.60955048 -68.37594604]
[112.05615234 -53.38259506]
[112.50276184 -38.38924408]
[115.30287933 -34.52034378]
[115.70230103 -28.85134888]
[112.73274231 -22.94429970]
[112.73274231 -7.94430017]
[112.73274231 7.05569983]
[112.73274231 22.05570030]
[125.02340698 13.45689392]
[139.45184326 17.55814934]
[145.38194275 31.33617401]
[138.44224548 44.63432312]
[123.74845123 47.64969254]
[112.13298035 38.16095734]
[111.01733398 53.11941147]
[109.90168762 68.07786560]
[122.75588226 75.52070618]
[131.11567688 87.79833221]
[133.32997131 102.48585510]
[128.96141052 116.68240356]
[118.87283325 127.58409119]
[105.05677032 133.03778076]
[103.94111633 147.99623108]
[110.63057709 162.33366394]
[101.96810150 174.45021057]
[100.85244751 189.40866089]
[100.29424286 204.39826965]
[100.29424286 219.39826965]
[100.29424286 234.39826965]
[100.29424286 249.39826965]
[100.29424286 264.39825439]
[108.03153992 278.19845581]
[100.29424286 290.92572021]
[100.29424286 305.92572021]
[100.29424286 320.92572021]
[100.29424286 335.92572021]
[100.29424286 350.92572021]
[100.29424286 365.92572021]
[100.29424286 380.92572021]
[100.29424286 395.92572021]
[100.62921906 410.92196655]
[101.29900360 425.90701294]
[104.80847931 434.34036255]
[101.86552429 441.11981201]
[102.31212616 456.11315918]
[105.69565582 464.59780884]
[102.65209198 471.33270264]
[102.87541962 486.33102417]
[103.09874725 501.32937622]
[103.32207489 516.32769775]
[105.79939270 535.55041504]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 209]
[2 208]
[3 207]
[4 206]
[5 204]
[6 203]
[7 201]
[8 200]
[12 199]
[13 198]
[14 197]
[15 196]
[16 195]
[17 194]
[18 193]
[19 192]
[21 190]
[22 189]
[23 188]
[24 187]
[25 186]
[31 185]
[32 184]
[34 182]
[35 181]
[41 175]
[42 174]
[43 173]
[44 167]
[45 166]
[46 165]
[47 164]
[48 161]
[49 160]
[50 159]
[56 158]
[57 157]
[59 155]
[60 154]
[61 153]
[62 152]
[63 151]
[64 149]
[65 148]
[66 147]
[67 144]
[68 143]
[69 142]
[70 141]
[71 140]
[72 139]
[73 138]
[74 137]
[75 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
