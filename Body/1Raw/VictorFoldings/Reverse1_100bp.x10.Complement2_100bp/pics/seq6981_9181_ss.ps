%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[197.34977722 649.64160156]
[207.23416138 638.14923096]
[220.45458984 630.73327637]
[218.00886536 615.93402100]
[215.56314087 601.13476562]
[211.37109375 595.04803467]
[213.19287109 586.09710693]
[210.96775818 571.26306152]
[208.74264526 556.42901611]
[205.42037964 541.80151367]
[201.01937866 527.46166992]
[196.61837769 513.12182617]
[192.89372253 510.13253784]
[191.00737000 504.77169800]
[192.30670166 498.28915405]
[188.33459473 483.82464600]
[184.36250305 469.36010742]
[170.59068298 469.60388184]
[157.15321350 466.53308105]
[144.83660889 460.32260132]
[134.36299133 451.33117676]
[126.34765625 440.08084106]
[121.26301575 427.22644043]
[119.41070557 413.51757812]
[120.90371704 399.75500488]
[125.65949249 386.74368286]
[133.40451050 375.24581909]
[143.69000244 365.93612671]
[155.91792297 359.36236572]
[152.37825012 344.78598022]
[148.83857727 330.20959473]
[145.29890442 315.63323975]
[141.65081787 301.08361816]
[137.89451599 286.56155396]
[134.13821411 272.03948975]
[130.38191223 257.51742554]
[126.62561798 242.99537659]
[122.86931610 228.47331238]
[119.11301422 213.95124817]
[114.39466095 208.26275635]
[115.41061401 199.18499756]
[111.87094116 184.60862732]
[108.33126831 170.03225708]
[103.69812775 164.27413940]
[104.84912109 155.21250916]
[101.52686310 140.58505249]
[98.20459747 125.95759583]
[83.14760590 119.82465363]
[74.67021942 105.95166016]
[76.08222961 89.75498199]
[86.83235168 77.55821991]
[83.29267883 62.98184967]
[79.75301361 48.40547180]
[76.21334076 33.82909775]
[72.67366791 19.25272179]
[69.13399506 4.67634630]
[64.85436249 -0.36312619]
[63.90474701 -5.96627331]
[65.71280670 -10.38667583]
[62.60869598 -25.06197929]
[59.28643799 -39.68943787]
[55.74676514 -54.26581573]
[52.20709229 -68.84218597]
[48.66741943 -83.41856384]
[43.60131073 -91.01937866]
[45.18527222 -98.23829651]
[41.86301422 -112.86576080]
[38.31537628 -116.69477081]
[36.74796295 -121.06472778]
[37.03522491 -125.13075256]
[38.73448181 -128.22023010]
[36.06868744 -142.98144531]
[33.40289307 -157.74266052]
[30.73709679 -172.50387573]
[28.07130051 -187.26509094]
[25.40550423 -202.02632141]
[22.73970985 -216.78753662]
[10.52205658 -230.56469727]
[17.09570312 -246.83596802]
[14.21043110 -261.55584717]
[11.32515812 -276.27575684]
[8.43988514 -290.99563599]
[3.71822286 -298.81509399]
[5.62294865 -305.95608521]
[2.95715332 -320.71731567]
[-7.10954046 -332.92272949]
[-1.75729620 -346.82244873]
[-16.80318451 -347.76303101]
[-31.18656158 -352.27767944]
[-44.07119751 -360.10388184]
[-54.70799255 -370.78668213]
[-62.47854614 -383.70495605]
[-66.93107605 -398.10766602]
[-67.80673218 -413.15747070]
[-65.05458832 -427.97940063]
[-58.83466721 -441.71170044]
[-49.50857925 -453.55599976]
[-37.61853027 -462.82369995]
[-23.85579300 -468.97595215]
[-9.02051353 -471.65512085]
[6.02480125 -470.70544434]
[20.40543938 -466.18209839]
[33.28532791 -458.34805298]
[43.91564560 -447.65881348]
[51.67836380 -434.73583984]
[56.12216187 -420.33041382]
[56.98869324 -405.28009033]
[54.22756958 -390.45983887]
[47.99932098 -376.73132324]
[38.66605377 -364.89266968]
[26.77038574 -355.63217163]
[13.00392151 -349.48825073]
[22.87994003 -338.33865356]
[17.71837044 -323.38308716]
[20.38416672 -308.62188721]
[23.15977669 -293.88092041]
[26.04504967 -279.16101074]
[28.93032265 -264.44113159]
[31.81559563 -249.72123718]
[41.67640305 -242.71473694]
[44.20063782 -230.47497559]
[37.50092697 -219.45332336]
[40.16672134 -204.69210815]
[42.83251953 -189.93089294]
[45.49831390 -175.16967773]
[48.16410828 -160.40846252]
[50.82990265 -145.64724731]
[53.49570084 -130.88601685]
[56.49047470 -116.18801880]
[59.81273270 -101.56056213]
[63.24379349 -86.95823669]
[66.78347015 -72.38185883]
[70.32314301 -57.80548477]
[73.86280823 -43.22911072]
[77.40294647 -40.02341843]
[78.96687317 -34.55979538]
[77.28399658 -28.16608810]
[80.38810730 -13.49078655]
[83.71036530 1.13667405]
[87.25003815 15.71304989]
[90.78971100 30.28942490]
[94.32938385 44.86579895]
[97.86905670 59.44217682]
[101.40872955 74.01855469]
[114.00829315 78.07312012]
[122.98300934 87.80158234]
[126.01055145 100.68655396]
[122.30749512 113.39387512]
[112.83206177 122.63533783]
[116.15431976 137.26280212]
[119.47657776 151.89025879]
[122.90763855 166.49258423]
[126.44731140 181.06895447]
[129.98698425 195.64532471]
[133.63507080 210.19494629]
[137.39137268 224.71701050]
[141.14767456 239.23907471]
[144.90397644 253.76112366]
[148.66027832 268.28317261]
[152.41658020 282.80523682]
[156.17288208 297.32730103]
[161.35159302 304.85183716]
[159.87527466 312.09356689]
[163.41494751 326.66992188]
[166.95462036 341.24630737]
[170.49429321 355.82269287]
[186.78442383 356.44430542]
[202.23004150 361.61465454]
[215.58854675 370.90957642]
[225.78758240 383.57333374]
[232.01112366 398.58013916]
[233.76473999 414.71731567]
[230.91485596 430.68319702]
[223.69892883 445.19207764]
[212.70567322 457.07797241]
[198.82702637 465.38803101]
[202.79911804 479.85253906]
[206.77122498 494.31707764]
[210.95823669 508.72085571]
[215.35922241 523.06066895]
[219.76022339 537.40051270]
[224.66659546 523.22564697]
[235.93812561 513.32855225]
[250.62843323 510.29629517]
[264.89755249 514.92150879]
[275.01550293 525.99517822]
[278.33755493 540.62268066]
[273.99526978 554.98046875]
[263.12374878 565.31530762]
[248.56477356 568.92584229]
[234.12400818 564.86822510]
[223.57669067 554.20385742]
[225.80180359 569.03790283]
[228.02691650 583.87194824]
[230.36241150 598.68902588]
[232.80813599 613.48828125]
[235.25386047 628.28759766]
[250.15731812 631.05578613]
[263.21362305 638.75695801]
[272.84619141 650.46118164]
[277.89181519 664.75518799]
[277.74124146 679.91278076]
[272.41262817 694.10369873]
[262.54943848 705.61425781]
[249.34269714 713.05456543]
[234.38719177 715.52606201]
[219.48886108 712.73046875]
[206.44676208 705.00518799]
[196.83578491 693.28320312]
[191.81649780 678.97998047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 197]
[4 196]
[5 195]
[7 194]
[8 193]
[9 192]
[10 181]
[11 180]
[12 179]
[15 178]
[16 177]
[17 176]
[29 166]
[30 165]
[31 164]
[32 163]
[33 161]
[34 160]
[35 159]
[36 158]
[37 157]
[38 156]
[39 155]
[41 154]
[42 153]
[43 152]
[45 151]
[46 150]
[47 149]
[51 144]
[52 143]
[53 142]
[54 141]
[55 140]
[56 139]
[59 138]
[60 137]
[61 134]
[62 133]
[63 132]
[64 131]
[66 130]
[67 129]
[71 128]
[72 127]
[73 126]
[74 125]
[75 124]
[76 123]
[77 122]
[79 119]
[80 118]
[81 117]
[82 116]
[84 115]
[85 114]
[87 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
