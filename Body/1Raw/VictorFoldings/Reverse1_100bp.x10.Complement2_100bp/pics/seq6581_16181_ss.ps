%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[-44.20841599 504.40084839]
[-38.26478195 518.21795654]
[-34.88401794 532.87438965]
[-34.17479706 547.89892578]
[-36.15991592 562.80859375]
[-40.77556992 577.12420654]
[-47.87337494 590.38543701]
[-57.22517014 602.16607666]
[-68.53033447 612.08740234]
[-81.42546082 619.83050537]
[-95.49600983 625.14648438]
[-110.28968048 627.86444092]
[-125.33090973 627.89691162]
[-140.13619995 625.24298096]
[-154.22959900 619.98797607]
[-167.15808105 612.30065918]
[-178.50605774 602.42834473]
[-187.90870667 590.68823242]
[-195.06379700 577.45782471]
[-199.74131775 563.16229248]
[-201.79089355 548.26135254]
[-201.14665222 533.23388672]
[-197.82929993 518.56298828]
[-191.94548035 504.72027588]
[-183.68432617 492.15075684]
[-173.31140137 481.25845337]
[-161.16015625 472.39352417]
[-147.62118530 465.84094238]
[-133.12974548 461.81134033]
[-118.15164185 460.43426514]
[-103.16838074 461.75396729]
[-88.66160583 465.72802734]
[-82.18210602 452.19967651]
[-75.70261383 438.67132568]
[-69.22311401 425.14297485]
[-62.74361801 411.61465454]
[-56.97758484 397.76715088]
[-51.94067001 383.63812256]
[-46.90375519 369.50909424]
[-41.86683655 355.38006592]
[-36.82992172 341.25103760]
[-31.79300499 327.12200928]
[-26.75608826 312.99298096]
[-38.44409943 322.39459229]
[-52.92456436 326.30816650]
[-67.75727844 324.07418823]
[-80.44266510 316.06912231]
[-88.84300995 303.64196777]
[-91.54270935 288.88693237]
[-88.08682251 274.29046631]
[-79.05772400 262.31234741]
[-65.97697449 254.97109985]
[-51.04890442 253.50384521]
[-36.78916550 258.15786743]
[-25.60076714 268.14883423]
[-19.36915588 281.79315186]
[-19.14478111 296.79309082]
[-11.48418331 283.89675903]
[-3.82358623 271.00042725]
[3.83701134 258.10409546]
[11.49760914 245.20777893]
[19.15820694 232.31146240]
[26.52889633 219.24726868]
[25.71171951 204.37509155]
[39.04473114 195.85797119]
[46.12183762 182.63244629]
[38.16628265 171.53170776]
[35.75814438 158.02136230]
[39.42350769 144.72796631]
[48.50202179 134.26094055]
[61.26506042 128.70027161]
[75.24466705 129.18341064]
[82.51789856 116.06472015]
[89.79112244 102.94602203]
[96.16973114 89.36981964]
[101.62508392 75.39701843]
[107.08044434 61.42422104]
[112.53579712 47.45142365]
[117.99115753 33.47862625]
[123.02807617 19.34959602]
[119.91085052 3.83851957]
[131.18792725 -5.89167929]
[135.80194092 -20.16441345]
[140.41595459 -34.43714523]
[145.02995300 -48.70988083]
[147.91523743 -63.42977142]
[149.03088379 -78.38822174]
[150.14653015 -93.34667969]
[147.66406250 -102.13730621]
[151.39176941 -108.51899719]
[152.73001099 -123.45918274]
[146.25474548 -137.89460754]
[155.09666443 -149.88084412]
[156.43490601 -164.82102966]
[157.77313232 -179.76121521]
[159.11137390 -194.70140076]
[160.44960022 -209.64158630]
[161.78784180 -224.58177185]
[147.72662354 -230.10073853]
[135.79071045 -239.35873413]
[126.94767761 -251.60527039]
[121.91440582 -265.84756470]
[121.09889984 -280.93103027]
[124.56728363 -295.63296509]
[132.03839111 -308.76153564]
[142.90657043 -319.25247192]
[156.29077148 -326.25527954]
[171.10603333 -329.20233154]
[186.15130615 -327.85467529]
[200.20697021 -322.32159424]
[212.13357544 -313.05160522]
[220.96430969 -300.79620361]
[225.98327637 -286.54885864]
[226.78361511 -271.46456909]
[223.30046082 -256.76611328]
[215.81617737 -243.64506531]
[204.93746948 -233.16506958]
[191.54623413 -226.17568970]
[176.72802734 -223.24353027]
[175.38978577 -208.30334473]
[174.05155945 -193.36315918]
[172.71331787 -178.42297363]
[171.37509155 -163.48278809]
[170.03684998 -148.54260254]
[176.60783386 -135.17579651]
[167.67019653 -122.12094879]
[166.33195496 -107.18076324]
[165.10498047 -92.23102570]
[163.98933411 -77.27257538]
[162.87368774 -62.31412125]
[171.08793640 -74.86505890]
[183.05790710 -83.90496826]
[197.37736511 -88.37184143]
[212.36408997 -87.74091339]
[226.25744629 -82.08631134]
[237.42527771 -72.07232666]
[244.55555725 -58.87540054]
[246.81066895 -44.04588318]
[243.92565918 -29.32594109]
[236.23945618 -16.44485474]
[224.65504456 -6.91587973]
[210.53334045 -1.85847282]
[195.53334045 -1.86677229]
[181.41723633 -6.93980312]
[169.84338379 -16.48159027]
[162.17144775 -29.37117577]
[159.30268860 -44.09587097]
[154.68869019 -29.82313728]
[150.07467651 -15.55040359]
[145.46066284 -1.27767015]
[148.90791321 13.21252537]
[137.30081177 23.96360588]
[138.45561218 26.51792717]
[138.66821289 29.68358803]
[137.70065308 33.10400772]
[135.44841003 36.34312820]
[131.96395874 38.93398285]
[126.50859833 52.90678024]
[121.05323792 66.87957764]
[115.59788513 80.85237885]
[110.14252472 94.82517242]
[123.09648132 87.26242828]
[138.08694458 87.79729462]
[150.46894836 96.26403809]
[156.40582275 110.03914642]
[154.05793762 124.85425568]
[144.15281677 136.11874390]
[129.75967407 140.34217834]
[115.33837128 136.21588135]
[105.35752106 125.01844788]
[102.90982056 110.21925354]
[95.63658905 123.33795166]
[88.36335754 136.45663452]
[97.02375031 150.54171753]
[97.39712524 166.97814941]
[89.47624969 181.27767944]
[75.50584412 189.58331299]
[59.34736252 189.70954895]
[52.27025604 202.93507385]
[52.58123016 218.75323486]
[39.75442505 226.32437134]
[39.92454910 231.54147339]
[38.24447632 235.86936951]
[35.36274719 238.75219727]
[32.05453110 239.97204590]
[24.39393616 252.86837769]
[16.73333740 265.76470947]
[9.07274055 278.66104126]
[1.41214335 291.55737305]
[-6.24845409 304.45367432]
[-12.62705898 318.02990723]
[-17.66397476 332.15893555]
[-22.70089149 346.28796387]
[-27.73780823 360.41699219]
[-32.77472305 374.54602051]
[-37.81164169 388.67504883]
[-42.84855652 402.80407715]
[-29.33403969 396.29577637]
[-14.76734924 399.87509155]
[-5.80818129 411.90560913]
[-6.55254602 426.88714600]
[-16.66012955 437.97030640]
[-31.50988197 440.08807373]
[-44.31269455 432.27218628]
[-49.21527481 418.09414673]
[-55.69477081 431.62246704]
[-62.17426682 445.15081787]
[-68.65376282 458.67916870]
[-75.13325500 472.20751953]
[-62.94378662 481.01980591]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 209]
[33 208]
[34 207]
[35 206]
[36 205]
[37 197]
[38 196]
[39 195]
[40 194]
[41 193]
[42 192]
[43 191]
[57 190]
[58 189]
[59 188]
[60 187]
[61 186]
[62 185]
[63 181]
[65 179]
[66 178]
[72 173]
[73 172]
[74 171]
[75 161]
[76 160]
[77 159]
[78 158]
[79 157]
[80 152]
[82 150]
[83 149]
[84 148]
[85 147]
[86 130]
[87 129]
[88 128]
[90 127]
[91 126]
[93 124]
[94 123]
[95 122]
[96 121]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
