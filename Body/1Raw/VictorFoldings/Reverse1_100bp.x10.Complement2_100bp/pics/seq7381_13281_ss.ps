%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[144.47172546 335.06616211]
[150.23522949 321.18814087]
[157.95805359 308.29721069]
[167.47557068 296.66818237]
[178.58494568 286.54888916]
[191.04934692 278.15505981]
[184.56985474 264.62670898]
[178.09036255 251.09837341]
[171.61087036 237.57002258]
[165.13136292 224.04168701]
[158.65187073 210.51333618]
[151.67341614 197.23548889]
[144.20567322 184.22653198]
[136.44929504 171.38760376]
[128.40811157 158.72506714]
[120.36694336 146.06254578]
[112.32576752 133.40002441]
[98.97137451 126.80386353]
[98.10498810 111.00639343]
[89.96977234 98.40408325]
[81.74095917 85.86268616]
[73.51215363 73.32128143]
[60.90135193 77.76274872]
[47.62484360 79.27047729]
[34.35559464 77.77175140]
[21.76537704 73.34615326]
[10.49076080 66.22133636]
[1.10092497 56.76133347]
[-5.93107843 45.44796753]
[-10.25215054 32.85628128]
[-11.64687824 19.62533569]
[-10.04826832 6.42575836]
[-5.54095364 -6.07423353]
[1.64327323 -17.24267006]
[11.13738346 -26.51577759]
[3.47678590 -39.41210556]
[-3.59644079 -45.19200897]
[-4.20021868 -52.55796051]
[-11.66796017 -65.56690979]
[-19.13570023 -78.57586670]
[-26.60344124 -91.58481598]
[-25.65378189 -76.61490631]
[-28.01375580 -61.80171967]
[-33.56821823 -47.86802292]
[-42.04615402 -35.49366760]
[-53.03390121 -25.28243256]
[-65.99535370 -17.73254204]
[-80.29808044 -13.21237373]
[-95.24423218 -11.94247532]
[-110.10453796 -13.98480988]
[-124.15394592 -19.23972702]
[-136.70695496 -27.45082474]
[-147.15106201 -38.21746826]
[-154.97668457 -51.01433182]
[-159.80198669 -65.21701813]
[-161.39154053 -80.13256073]
[-159.66778564 -95.03318787]
[-154.71481323 -109.19186401]
[-146.77432251 -121.91776276]
[-136.23371887 -132.58995056]
[-123.60730743 -140.68771362]
[-109.51116180 -145.81594849]
[-94.63306427 -147.72442627]
[-79.69895172 -146.32003784]
[-65.43749237 -141.67129517]
[-52.54453659 -134.00503540]
[-41.64915085 -123.69530487]
[-33.28601456 -111.25099945]
[-35.29002762 -126.11653137]
[-37.29404449 -140.98205566]
[-39.29805756 -155.84757996]
[-41.30207062 -170.71311951]
[-43.30608368 -185.57864380]
[-45.31009674 -200.44416809]
[-55.07524109 -208.87060547]
[-56.43835449 -221.29339600]
[-49.21084595 -230.99337769]
[-50.99331284 -245.88708496]
[-52.77577591 -260.78082275]
[-67.79727936 -261.04183960]
[-82.64332581 -263.34591675]
[-97.03732300 -267.65014648]
[-110.71114349 -273.87435913]
[-123.41003418 -281.90255737]
[-134.89743042 -291.58517456]
[-144.95932007 -302.74188232]
[-153.40826416 -315.16482544]
[-160.08686829 -328.62252808]
[-164.87071228 -342.86431885]
[-167.67066956 -357.62487793]
[-168.43458557 -372.62921143]
[-167.14822388 -387.59780884]
[-163.83554077 -402.25183105]
[-158.55825806 -416.31823730]
[-151.41470337 -429.53500366]
[-142.53793335 -441.65594482]
[-132.09332275 -452.45520020]
[-120.27546692 -461.73159790]
[-107.30449677 -469.31234741]
[-93.42206573 -475.05621338]
[-78.88680267 -478.85620117]
[-63.96948242 -480.64147949]
[-48.94800568 -480.37884521]
[-34.10221100 -478.07315063]
[-19.70867538 -473.76733398]
[-6.03553486 -467.54168701]
[6.66248703 -459.51211548]
[18.14883232 -449.82821655]
[28.20952034 -438.67044067]
[36.65712357 -426.24658203]
[43.33427048 -412.78814697]
[48.11656952 -398.54583740]
[50.91492844 -383.78497314]
[51.67721558 -368.78057861]
[50.38923264 -353.81210327]
[47.07497025 -339.15844727]
[41.79616928 -325.09262085]
[34.65118027 -311.87658691]
[25.77309799 -299.75665283]
[15.32732487 -288.95849609]
[3.50845456 -279.68338013]
[-9.46333313 -272.10403442]
[-23.34638214 -266.36166382]
[-37.88206100 -262.56326294]
[-36.09959412 -247.66955566]
[-34.31712723 -232.77583313]
[-23.05714989 -219.31553650]
[-30.44456863 -202.44818115]
[-28.44055557 -187.58265686]
[-26.43654251 -172.71713257]
[-24.43252754 -157.85159302]
[-22.42851448 -142.98606873]
[-20.42450142 -128.12054443]
[-18.42048645 -113.25501251]
[-13.59449005 -99.05255890]
[-6.12674856 -86.04360199]
[1.34099269 -73.03465271]
[8.80873394 -60.02569962]
[16.37311363 -47.07270050]
[24.03371048 -34.17637634]
[40.14017487 -38.61841965]
[56.85949707 -38.36462784]
[72.84944153 -33.42781448]
[86.82422638 -24.19706345]
[97.65787506 -11.40705109]
[104.47499084 3.92040825]
[106.72142792 20.55799866]
[104.20937347 37.17118073]
[97.13301849 52.42522812]
[86.05355072 65.09247589]
[94.28236389 77.63387299]
[102.51116943 90.17527771]
[109.21466064 94.65140533]
[110.76750946 102.96522522]
[124.69706726 110.46709442]
[124.98829651 125.35884857]
[133.02946472 138.02137756]
[141.07063293 150.68389893]
[149.11181641 163.34642029]
[153.73922729 165.76182556]
[156.68302917 169.35171509]
[157.77778625 173.27810669]
[157.21463013 176.75880432]
[164.68237305 189.76774597]
[171.06071472 176.19142151]
[185.61576843 172.56509399]
[197.61810303 181.56198120]
[198.22004700 196.54989624]
[186.97785950 206.48031616]
[172.18022156 204.03384399]
[178.65971375 217.56217957]
[185.13920593 231.09053040]
[191.61871338 244.61888123]
[198.09820557 258.14721680]
[204.57769775 271.67556763]
[218.93075562 267.22497559]
[233.77886963 264.91174316]
[248.80557251 264.78515625]
[263.69058228 266.84790039]
[278.11657715 271.05603027]
[291.77609253 277.31985474]
[304.37796021 285.50582886]
[315.65362549 295.43951416]
[325.36267090 306.90911865]
[333.29818726 319.67019653]
[339.29104614 333.45074463]
[343.21347046 347.95706177]
[344.98187256 362.87988281]
[344.55856323 377.90115356]
[341.95254517 392.70068359]
[337.21939087 406.96304321]
[330.45996094 420.38424683]
[321.81835938 432.67816162]
[311.47875977 443.58279419]
[299.66159058 452.86566162]
[286.61868286 460.32894897]
[272.62808228 465.81353760]
[257.98797607 469.20257568]
[243.01045227 470.42376709]
[228.01472473 469.45111084]
[213.32043457 466.30532837]
[199.24081421 461.05346680]
[186.07594299 453.80749512]
[174.10644531 444.72186279]
[163.58744812 433.99017334]
[154.74317932 421.84124756]
[147.76213074 408.53399658]
[142.79310608 394.35208130]
[139.94204712 379.59780884]
[139.26968384 364.58560181]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 175]
[7 174]
[8 173]
[9 172]
[10 171]
[11 170]
[12 164]
[13 163]
[14 159]
[15 158]
[16 157]
[17 156]
[19 154]
[20 152]
[21 151]
[22 150]
[35 140]
[36 139]
[38 138]
[39 137]
[40 136]
[41 135]
[68 134]
[69 133]
[70 132]
[71 131]
[72 130]
[73 129]
[74 128]
[77 126]
[78 125]
[79 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
