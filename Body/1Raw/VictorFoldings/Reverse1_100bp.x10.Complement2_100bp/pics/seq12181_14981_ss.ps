%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUAGGAAAUUUUCAACUCUUUCGGUACAACAAUCUGUACCCCCGUACUCAAUCGUCAAGAACACUCGAAAGAGCCAUUUAUUCCCCAGCAUUCGGAGAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[200.68232727 407.90969849]
[199.21476746 392.97299194]
[198.98570251 377.96609497]
[199.99667358 362.99151611]
[202.24079895 348.15161133]
[205.70274353 333.54766846]
[210.35885620 319.27951050]
[216.17732239 305.44461060]
[223.11840820 292.13742065]
[231.13468933 279.44888306]
[240.17140198 267.46569824]
[250.16682434 256.26965332]
[239.84016418 245.39033508]
[229.51348877 234.51100159]
[219.18681335 223.63166809]
[208.54081726 213.06462097]
[197.58489990 202.81922913]
[186.62899780 192.57383728]
[175.67308044 182.32844543]
[164.71717834 172.08305359]
[153.76126099 161.83766174]
[141.66505432 161.92929077]
[132.45365906 153.48335266]
[131.43376160 140.62556458]
[120.63160706 130.21820068]
[109.82945251 119.81082153]
[99.02729797 109.40345001]
[93.89689636 108.31124878]
[89.74363708 104.42231750]
[88.06428528 98.52175140]
[77.57678223 87.79737091]
[80.57872772 102.49391174]
[76.99078369 117.05847931]
[67.50573730 128.67889404]
[53.95499420 135.11141968]
[38.95499420 135.11404419]
[25.40200233 128.68626404]
[15.91288757 117.06916809]
[12.31984901 102.50585938]
[15.31664753 87.80826569]
[24.32464600 75.81427002]
[37.60454559 68.83972168]
[52.59220123 68.23130035]
[66.39476776 74.10722351]
[57.98014832 61.68972778]
[49.56552887 49.27223206]
[41.15091324 36.85473633]
[32.73629379 24.43724060]
[24.32167435 12.01974487]
[15.90705585 -0.39775023]
[7.40022898 -12.75225925]
[-6.85040903 -19.62466049]
[-7.80629969 -34.48855972]
[-16.40486336 -46.77939987]
[-25.00342751 -59.07023621]
[-33.60198975 -71.36107635]
[-42.20055389 -83.65190887]
[-50.79911804 -95.94274902]
[-64.00415039 -88.79258728]
[-77.93817902 -83.19432068]
[-92.41954803 -79.22093964]
[-107.25946045 -76.92424011]
[-122.26444244 -76.33416748]
[-137.23889160 -77.45841980]
[-151.98754883 -80.28233337]
[-166.31817627 -84.76909637]
[-180.04393005 -90.86020660]
[-192.98585510 -98.47626495]
[-204.97523499 -107.51797485]
[-215.85575867 -117.86746216]
[-225.48558044 -129.38980103]
[-233.73916626 -141.93476868]
[-240.50891113 -155.33880615]
[-245.70652771 -169.42718506]
[-249.26429749 -184.01622009]
[-251.13580322 -198.91572571]
[-251.29667664 -213.93145752]
[-249.74478149 -228.86763000]
[-246.50039673 -243.52954102]
[-241.60577393 -257.72604370]
[-235.12475586 -271.27203369]
[-227.14183044 -283.99093628]
[-217.76106262 -295.71694946]
[-207.10475159 -306.29714966]
[-195.31182861 -315.59362793]
[-182.53602600 -323.48519897]
[-168.94392395 -329.86898804]
[-154.71272278 -334.66171265]
[-140.02792358 -337.80096436]
[-125.08101654 -339.24575806]
[-110.06683350 -338.97729492]
[-95.18112183 -336.99902344]
[-80.61795807 -333.33679199]
[-66.56719208 -328.03833008]
[-53.21200562 -321.17272949]
[-40.72651291 -312.82943726]
[-29.27349281 -303.11727905]
[-19.00225258 -292.16284180]
[-10.04670048 -280.10897827]
[-2.52359128 -267.11279297]
[3.46899629 -253.34375000]
[7.85293627 -238.98133850]
[10.57107544 -224.21281433]
[11.58797741 -209.23069763]
[10.89038372 -194.23033142]
[8.48739052 -179.40725708]
[4.41032410 -164.95474243]
[-1.28766155 -151.06118774]
[-8.53228188 -137.90774536]
[-17.22908783 -125.66587830]
[-27.26469994 -114.49518585]
[-38.50828171 -104.54131317]
[-29.90971756 -92.25047302]
[-21.31115341 -79.95964050]
[-12.71258926 -67.66880035]
[-4.11402559 -55.37796402]
[4.48453808 -43.08712387]
[18.12014961 -37.09384537]
[19.69106674 -21.35082245]
[26.10109520 -17.67205620]
[28.32455063 -8.81236839]
[36.73917007 3.60512662]
[45.15378952 16.02262306]
[53.56840515 28.44011688]
[61.98302460 40.85761261]
[70.39764404 53.27510834]
[78.81226349 65.69260406]
[88.30116272 77.30986786]
[98.78866577 88.03424835]
[109.43466949 98.60129547]
[120.23682404 109.00866699]
[131.03898621 119.41603851]
[141.84114075 129.82341003]
[159.81156921 133.84155273]
[164.00665283 150.88174438]
[174.96257019 161.12713623]
[185.91847229 171.37252808]
[196.87438965 181.61791992]
[207.83029175 191.86331177]
[218.78620911 202.10870361]
[223.04795837 202.94020081]
[226.47842407 204.88864136]
[228.82855225 207.55552673]
[230.00428772 210.50244141]
[230.06616211 213.30499268]
[240.39282227 224.18432617]
[250.71949768 235.06365967]
[261.04617310 245.94299316]
[272.74761963 236.54432678]
[285.18527222 228.14405823]
[298.27413940 220.79957581]
[311.92480469 214.56106567]
[326.04400635 209.47113037]
[340.53530884 205.56454468]
[355.29974365 202.86799622]
[370.23641968 201.39990234]
[385.24331665 201.17028809]
[400.21789551 202.18074036]
[415.05792236 204.42433167]
[429.66195679 207.88574219]
[443.93026733 212.54135132]
[457.76541138 218.35931396]
[471.07281494 225.29992676]
[483.76162720 233.31575012]
[495.74517822 242.35203552]
[506.94155884 252.34706116]
[517.27429199 263.23254395]
[526.67285156 274.93414307]
[535.07293701 287.37188721]
[542.41729736 300.46081543]
[548.65563965 314.11154175]
[553.74542236 328.23083496]
[557.65179443 342.72219849]
[560.34820557 357.48663330]
[561.81610107 372.42333984]
[562.04553223 387.43023682]
[561.03491211 402.40481567]
[558.79113770 417.24478149]
[555.32952881 431.84878540]
[550.67376709 446.11706543]
[544.85565186 459.95211792]
[537.91485596 473.25946045]
[529.89892578 485.94818115]
[520.86248779 497.93161011]
[510.86730957 509.12786865]
[499.98168945 519.46051025]
[488.27999878 528.85888672]
[475.84216309 537.25885010]
[462.75311279 544.60302734]
[449.10232544 550.84118652]
[434.98300171 555.93078613]
[420.49157715 559.83703613]
[405.72708130 562.53326416]
[390.79037476 564.00097656]
[375.78347778 564.23022461]
[360.80892944 563.21942139]
[345.96896362 560.97546387]
[331.36499023 557.51373291]
[317.09680176 552.85778809]
[303.26181030 547.03948975]
[289.95455933 540.09857178]
[277.26593018 532.08239746]
[265.28259277 523.04583740]
[254.08645630 513.05053711]
[243.75396729 502.16482544]
[234.35571289 490.46301270]
[225.95588684 478.02508545]
[218.61187744 464.93594360]
[212.37385559 451.28506470]
[207.28442383 437.16567993]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 148]
[13 147]
[14 146]
[15 145]
[16 140]
[17 139]
[18 138]
[19 137]
[20 136]
[21 135]
[24 133]
[25 132]
[26 131]
[27 130]
[30 129]
[31 128]
[44 127]
[45 126]
[46 125]
[47 124]
[48 123]
[49 122]
[50 121]
[51 119]
[53 117]
[54 116]
[55 115]
[56 114]
[57 113]
[58 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
