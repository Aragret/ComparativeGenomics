%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[104.97814941 642.76788330]
[90.21241760 640.05865479]
[75.78334808 635.91516113]
[61.82989120 630.37725830]
[48.48644257 623.49835205]
[35.88150787 615.34472656]
[24.13647842 605.99475098]
[13.36447048 595.53863525]
[3.66922712 584.07702637]
[-4.85587883 571.72027588]
[-12.12874413 558.58740234]
[-18.07932472 544.80487061]
[-22.65031242 530.50549316]
[-25.79768562 515.82690430]
[-27.49113083 500.91049194]
[-27.71434021 485.89993286]
[-26.46516418 470.93978882]
[-23.75563240 456.17410278]
[-19.61184120 441.74511719]
[-14.07369614 427.79177856]
[-7.19453621 414.44845581]
[0.95938784 401.84368896]
[10.30954742 390.09884644]
[20.76589203 379.32705688]
[32.22771835 369.63201904]
[44.58464432 361.10717773]
[57.71765900 353.83456421]
[71.50028229 347.88427734]
[85.79977417 343.31356812]
[100.47841644 340.16647339]
[115.39485168 338.47332764]
[115.17152405 323.47500610]
[114.94819641 308.47665405]
[114.72486877 293.47833252]
[113.83205414 278.50491333]
[112.27153015 263.58630371]
[110.71100616 248.66770935]
[109.15048218 233.74909973]
[107.58996582 218.83050537]
[106.02944183 203.91189575]
[104.46891785 188.99328613]
[102.13343048 174.17622375]
[99.02931976 159.50091553]
[95.92520905 144.82562256]
[90.21397400 158.69580078]
[78.77058411 168.39367676]
[64.15152740 171.75273132]
[49.62274170 168.02253723]
[38.42998886 158.03642273]
[33.07376099 144.02532959]
[34.75065613 129.11935425]
[43.08604431 116.64854431]
[56.21778488 109.39889526]
[71.21221161 108.99000549]
[84.71952820 115.51322174]
[93.72218323 127.51126099]
[93.05239868 112.52622223]
[85.69034576 100.63959503]
[91.96256256 88.14356232]
[91.29277802 73.15852356]
[90.62299347 58.17348862]
[89.95320892 43.18844986]
[88.83756256 28.22999573]
[87.27703857 13.31139088]
[85.71651459 -1.60721421]
[84.15599060 -16.52581978]
[82.59546661 -31.44442368]
[81.03495026 -46.36302948]
[79.47442627 -61.28163147]
[67.48075867 -71.22093201]
[66.11068726 -86.37274933]
[75.66020203 -97.74562836]
[66.52918243 -110.66596222]
[72.90042114 -124.12912750]
[71.33989716 -139.04772949]
[69.77937317 -153.96633911]
[68.21884918 -168.88493347]
[54.80370712 -170.50959778]
[42.03178024 -174.90336609]
[30.46770096 -181.86906433]
[20.62207985 -191.09590149]
[12.92898273 -202.17329407]
[7.72677660 -214.60919189]
[5.24326038 -227.85186768]
[5.58568335 -241.31445312]
[8.73612213 -254.40090942]
[14.55239105 -266.53244019]
[22.77446175 -277.17306519]
[33.03608704 -285.85333252]
[44.88110733 -292.19097900]
[57.78373718 -295.90780640]
[56.89092255 -310.88122559]
[55.99810791 -325.85464478]
[41.27377319 -329.22668457]
[28.09657097 -336.61166382]
[17.53471375 -347.41091919]
[10.44440556 -360.74899292]
[7.40042400 -375.54461670]
[8.64953327 -390.59841919]
[14.09047222 -404.69000244]
[23.28216934 -416.67706299]
[35.47949600 -425.58782959]
[49.69366455 -430.69998169]
[64.77239990 -431.59906006]
[79.49333954 -428.21221924]
[92.66311646 -420.81402588]
[103.21411896 -410.00415039]
[110.29102325 -396.65896606]
[113.32014465 -381.86029053]
[112.05590820 -366.80776978]
[106.60081482 -352.72164917]
[97.39707947 -340.74383545]
[85.19081116 -331.84530640]
[70.97151184 -326.74743652]
[71.86432648 -311.77404785]
[72.75714111 -296.80062866]
[89.02871704 -293.73904419]
[103.97431946 -286.58993530]
[116.58555603 -275.82977295]
[126.01001740 -262.17886353]
[131.60887146 -246.55310059]
[133.00022888 -230.00257874]
[130.08508301 -213.64096069]
[123.05444336 -198.57063293]
[112.37675476 -185.80833435]
[98.76671600 -176.21658325]
[83.13745880 -170.44546509]
[84.69798279 -155.52685547]
[86.25849915 -140.60824585]
[87.81902313 -125.68964386]
[96.83841705 -113.83638763]
[90.57880402 -99.30615234]
[102.27511597 -90.15563965]
[104.07022858 -75.04827881]
[94.39302826 -62.84215546]
[95.95355225 -47.92354965]
[97.51407623 -33.00494766]
[99.07460022 -18.08634186]
[100.63512421 -3.16773725]
[102.19564056 11.75086784]
[103.75616455 26.66947174]
[105.84636688 28.53741074]
[107.32260132 31.34585571]
[107.82292175 34.86510086]
[107.07517242 38.73877716]
[104.93824768 42.51866531]
[105.60803223 57.50370407]
[106.27781677 72.48873901]
[106.94760132 87.47377777]
[114.30965424 99.36040497]
[108.03743744 111.85643768]
[108.70722198 126.84147644]
[110.60050964 141.72151184]
[113.70462036 156.39680481]
[116.80873108 171.07211304]
[124.91709137 158.45249939]
[139.20233154 153.87734985]
[153.13342285 159.43833923]
[160.34126282 172.59307861]
[157.53051758 187.32739258]
[145.98623657 196.90493774]
[130.98629761 196.94700623]
[119.38751984 187.43276978]
[120.94804382 202.35137939]
[122.50856781 217.26997375]
[124.06909180 232.18858337]
[125.62961578 247.10719299]
[127.19013977 262.02578735]
[128.75065613 276.94439697]
[139.01298523 266.00436401]
[154.00028992 265.38732910]
[165.12716675 275.44680786]
[166.01962280 290.42022705]
[156.16642761 301.73016357]
[141.21194458 302.89776611]
[129.72320557 293.25500488]
[129.94653320 308.25332642]
[130.16986084 323.25167847]
[130.39318848 338.25000000]
[145.35342407 339.49829102]
[160.11926270 342.20693970]
[174.54850769 346.34985352]
[188.50218201 351.88717651]
[201.84590149 358.76553345]
[214.45117188 366.91870117]
[226.19656372 376.26815796]
[236.96899414 386.72384644]
[246.66468811 398.18508911]
[255.19029236 410.54150391]
[262.46368408 423.67407227]
[268.41482544 437.45635986]
[272.98638916 451.75555420]
[276.13433838 466.43402100]
[277.82836914 481.35037231]
[278.05218506 496.36090088]
[276.80361938 511.32113647]
[274.09466553 526.08691406]
[269.95144653 540.51605225]
[264.41387939 554.46960449]
[257.53524780 567.81323242]
[249.38182068 580.41833496]
[240.03213501 592.16351318]
[229.57621765 602.93572998]
[218.11477661 612.63122559]
[205.75819397 621.15655518]
[192.62547302 628.42968750]
[178.84309387 634.38055420]
[164.54377747 638.95184326]
[149.86526489 642.09948730]
[134.94889832 643.79321289]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 179]
[32 178]
[33 177]
[34 176]
[35 169]
[36 168]
[37 167]
[38 166]
[39 165]
[40 164]
[41 163]
[42 155]
[43 154]
[44 153]
[56 152]
[57 151]
[59 149]
[60 148]
[61 147]
[62 146]
[63 141]
[64 140]
[65 139]
[66 138]
[67 137]
[68 136]
[69 135]
[72 132]
[74 130]
[75 129]
[76 128]
[77 127]
[91 116]
[92 115]
[93 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
