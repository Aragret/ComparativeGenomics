%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUAGGAAAUUUUCAACUCUUUCGGUACAACAAUCUGUACCCCCGUACUCAAUCGUCAAGAACACUCGAAAGAGCCAUUUAUUCCCCAGCAUUCGGAGAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[43.90153503 639.05743408]
[30.58381844 645.98968506]
[16.61443138 651.49182129]
[2.14643097 655.50366211]
[-12.66166592 657.98114014]
[-27.64761162 658.89715576]
[-42.64721298 658.24169922]
[-57.49612808 656.02191162]
[-72.03166199 652.26214600]
[-86.09455109 647.00354004]
[-99.53072357 640.30377197]
[-112.19296265 632.23620605]
[-123.94252777 622.88928223]
[-134.65069580 612.36535645]
[-144.20011902 600.77972412]
[-152.48620605 588.25939941]
[-159.41813660 574.94152832]
[-164.91996765 560.97198486]
[-168.93144226 546.50390625]
[-171.40856934 531.69573975]
[-172.32423401 516.70977783]
[-171.66839600 501.71020508]
[-169.44825745 486.86132812]
[-165.68811035 472.32589722]
[-160.42918396 458.26312256]
[-153.72908020 444.82711792]
[-145.66122437 432.16510010]
[-136.31398010 420.41574097]
[-125.78980255 409.70782471]
[-114.20397186 400.15869141]
[-101.68344116 391.87292480]
[-88.36539459 384.94131470]
[-74.39573669 379.43981934]
[-59.92754364 375.42871094]
[-45.11932755 372.95193481]
[-30.13333511 372.03662109]
[-15.13376427 372.69281006]
[-0.28495795 374.91333008]
[3.47134280 360.39126587]
[7.22764349 345.86920166]
[-0.52915311 333.20556641]
[3.07339764 318.42462158]
[16.40877914 310.37445068]
[20.16507912 295.85238647]
[23.92137909 281.33032227]
[27.67768097 266.80825806]
[23.37407494 252.54895020]
[34.32068253 241.12606812]
[38.07698441 226.60400391]
[41.83328629 212.08193970]
[30.80636787 222.25086975]
[16.48482704 226.71107483]
[1.63392913 224.60137939]
[-10.87884998 216.32911682]
[-18.63748741 203.49153137]
[-20.14391518 188.56736755]
[-15.10726261 174.43824768]
[-4.50003004 163.83227539]
[9.62969303 158.79730225]
[24.55367661 160.30551147]
[37.39033508 168.06567383]
[45.66111374 180.57943726]
[47.76894379 195.43185425]
[54.04630661 181.80853271]
[60.32366562 168.18522644]
[66.60102844 154.56190491]
[72.87838745 140.93858337]
[79.15574646 127.31527710]
[71.17836761 118.70616150]
[66.56394196 107.91437531]
[65.85090637 96.19911957]
[69.12245178 84.92736816]
[75.99684906 75.41431427]
[85.67198181 68.76996613]
[97.01893616 65.76959991]
[108.71372223 66.76330566]
[115.59313202 53.43387222]
[122.47254944 40.10444260]
[129.35195923 26.77501488]
[124.77670288 11.88525963]
[131.94329834 -1.53467727]
[146.16659546 -5.80472231]
[153.04600525 -19.13415146]
[159.92541504 -32.46358109]
[166.80482483 -45.79301071]
[173.68424988 -59.12244034]
[180.56365967 -72.45186615]
[187.44306946 -85.78129578]
[194.32247925 -99.11072540]
[201.20188904 -112.44015503]
[208.08129883 -125.76958466]
[214.05287170 -139.52969360]
[219.08978271 -153.65872192]
[224.12670898 -167.78775024]
[227.99101257 -182.28143311]
[230.65679932 -197.04266357]
[233.32260132 -211.80387878]
[235.98838806 -226.56509399]
[222.12821960 -232.46791077]
[209.92935181 -241.30732727]
[200.00367737 -252.63996887]
[192.84907532 -265.89739990]
[188.82440186 -280.41461182]
[188.13156128 -295.46347046]
[190.80528259 -310.28909302]
[196.71144104 -324.14782715]
[205.55381775 -336.34457397]
[216.88887024 -346.26748657]
[230.14802551 -353.41888428]
[244.66622925 -357.44003296]
[259.71524048 -358.12921143]
[274.54022217 -355.45190430]
[288.39752197 -349.54238892]
[300.59210205 -340.69705200]
[310.51229858 -329.35958862]
[317.66046143 -316.09869385]
[321.67810059 -301.57952881]
[322.36364746 -286.53036499]
[319.68273926 -271.70602417]
[313.76986694 -257.85015869]
[304.92156982 -245.65771484]
[293.58172607 -235.74028015]
[280.31909180 -228.59532166]
[265.79895020 -224.58120728]
[250.74960327 -223.89929199]
[248.08381653 -209.13807678]
[245.41801453 -194.37686157]
[242.75222778 -179.61564636]
[253.27709961 -190.30334473]
[267.53482056 -194.96350098]
[282.34020996 -192.55502319]
[294.38568115 -183.61596680]
[300.98022461 -170.14334106]
[300.65066528 -155.14695740]
[293.47055054 -141.97705078]
[281.04400635 -133.57582092]
[266.14709473 -131.82012939]
[252.10787964 -137.10217285]
[242.06271362 -148.24195862]
[238.25573730 -162.75082397]
[233.21881104 -148.62179565]
[228.18190002 -134.49276733]
[240.90493774 -142.43785095]
[255.90467834 -142.34954834]
[268.53329468 -134.25521851]
[274.87765503 -120.66297913]
[272.97192383 -105.78453064]
[263.40655518 -94.23013306]
[249.14555359 -89.58002472]
[234.60780334 -93.27510834]
[224.29797363 -104.17041779]
[221.41073608 -118.89017487]
[214.53132629 -105.56074524]
[207.65191650 -92.23131561]
[200.77249146 -78.90188599]
[193.89308167 -65.57245636]
[187.01367188 -52.24302673]
[180.13426208 -38.91359711]
[173.25485229 -25.58416748]
[166.37544250 -12.25473881]
[159.49601746 1.07469010]
[164.25537109 15.14181900]
[157.46855164 28.75775528]
[142.68139648 33.65442657]
[135.80197144 46.98385620]
[128.92256165 60.31328583]
[122.04315186 73.64271545]
[132.35928345 88.44647217]
[133.75175476 106.43632507]
[125.83656311 122.65124512]
[110.79647827 132.61967468]
[92.77906799 133.59263611]
[86.50170135 147.21595764]
[80.22434235 160.83926392]
[73.94698334 174.46258545]
[67.66962433 188.08590698]
[61.39226151 201.70921326]
[56.35534668 215.83824158]
[52.59904480 230.36030579]
[48.84274292 244.88237000]
[52.87767410 260.18038940]
[42.19974136 270.56457520]
[38.44343948 285.08663940]
[34.68713760 299.60870361]
[30.93083763 314.13073730]
[38.69030380 327.63735962]
[34.67400742 342.31127930]
[21.74970245 349.62551880]
[17.99340248 364.14755249]
[14.23710155 378.66961670]
[28.30024910 383.92752075]
[41.73674774 390.62664795]
[54.39937592 398.69360352]
[66.14939880 408.03997803]
[76.85807037 418.56338501]
[86.40806580 430.14849854]
[94.69474792 442.66842651]
[101.62732697 455.98599243]
[107.12984467 469.95523071]
[111.14201355 484.42312622]
[113.61986542 499.23117065]
[114.53626251 514.21710205]
[113.88115692 529.21673584]
[111.66172791 544.06567383]
[107.90229797 558.60131836]
[102.64405060 572.66430664]
[95.94459534 586.10064697]
[87.87734985 598.76312256]
[78.53068542 610.51287842]
[68.00702667 621.22131348]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 190]
[39 189]
[40 188]
[43 185]
[44 184]
[45 183]
[46 182]
[48 180]
[49 179]
[50 178]
[63 177]
[64 176]
[65 175]
[66 174]
[67 173]
[68 172]
[76 167]
[77 166]
[78 165]
[79 164]
[82 161]
[83 160]
[84 159]
[85 158]
[86 157]
[87 156]
[88 155]
[89 154]
[90 153]
[91 152]
[92 142]
[93 141]
[94 140]
[95 128]
[96 127]
[97 126]
[98 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
