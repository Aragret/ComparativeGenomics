%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[98.27503204 558.16784668]
[95.68210602 542.95989990]
[101.74382782 528.77337646]
[114.52592468 520.13494873]
[114.07932281 505.14163208]
[113.63271332 490.14828491]
[105.51990509 477.65701294]
[112.84289551 463.63259888]
[112.39628601 448.63925171]
[111.94968414 433.64590454]
[103.83687592 421.15463257]
[111.15985870 407.13021851]
[110.71325684 392.13687134]
[95.99416351 385.91601562]
[85.42301941 373.85513306]
[81.15436554 358.33541870]
[84.09172058 342.45043945]
[93.69693756 329.38967896]
[108.08789825 321.79797363]
[107.41811371 306.81292725]
[94.90821838 298.77301025]
[89.46697998 284.74243164]
[93.37651825 270.02615356]
[105.34009552 260.32156372]
[104.67031097 245.33651733]
[104.00052643 230.35147095]
[103.33074188 215.36643982]
[102.66094971 200.38139343]
[101.87963104 185.40176392]
[100.98681641 170.42835999]
[99.53739929 155.49855042]
[97.53338623 140.63302612]
[95.52936554 125.76749420]
[93.52535248 110.90196228]
[88.65750122 125.09012604]
[80.32749176 137.56454468]
[69.08782959 147.49781799]
[55.68400192 154.23112488]
[41.00503540 157.31785583]
[26.02453423 156.55329895]
[11.73610020 151.98814392]
[-0.91256714 143.92518616]
[-11.08252621 132.89923096]
[-18.09923935 119.64155579]
[-21.49731445 105.03152466]
[-21.05137062 90.03815460]
[-16.79098129 75.65590668]
[-8.99872780 62.83869934]
[1.80856144 52.43665695]
[14.91407585 45.13970566]
[29.44857407 41.43182755]
[44.44803619 41.55895233]
[58.91759872 45.51264954]
[71.89755249 53.03068542]
[82.52697754 63.61441422]
[90.10086823 76.56185150]
[94.11759949 91.01932526]
[97.00286865 76.29943848]
[99.88814545 61.57954407]
[102.66375732 46.83858109]
[105.32955170 32.07736588]
[107.99534607 17.31614685]
[109.99935913 2.45061922]
[111.33759308 -12.48956585]
[112.67582703 -27.42975044]
[114.01406097 -42.36993408]
[115.35229492 -57.31011963]
[116.69052887 -72.25030518]
[118.02876282 -87.19049072]
[115.83094025 -91.92510986]
[115.68372345 -96.56533051]
[117.20777130 -100.34584808]
[119.77496338 -102.76284790]
[121.77897644 -117.62837219]
[123.78298950 -132.49389648]
[125.78700256 -147.35943604]
[123.99582672 -151.31489563]
[123.59664917 -155.23983765]
[124.40895081 -158.70040894]
[126.12985229 -161.36595154]
[128.37837219 -163.03996277]
[131.26364136 -177.75985718]
[134.14891052 -192.47973633]
[137.03417969 -207.19963074]
[139.91946411 -221.91952515]
[142.80473328 -236.63941956]
[141.02685547 -243.00735474]
[142.50926208 -248.49365234]
[146.00126648 -251.75170898]
[149.32353210 -266.37915039]
[152.64579773 -281.00662231]
[155.96804810 -295.63409424]
[159.29031372 -310.26153564]
[154.80169678 -325.43267822]
[165.16571045 -336.13015747]
[151.27490234 -341.88806152]
[138.55709839 -349.91085815]
[127.37818146 -359.96771240]
[118.05982208 -371.76922607]
[110.87010956 -384.97589111]
[106.01591492 -399.20773315]
[103.63690186 -414.05520630]
[103.80152130 -429.09121704]
[106.50502777 -443.88305664]
[111.66964722 -458.00518799]
[119.14677429 -471.05130005]
[128.72128296 -482.64599609]
[140.11769104 -492.45565796]
[153.00810242 -500.19808960]
[167.02163696 -505.65051270]
[181.75509644 -508.65603638]
[196.78457642 -509.12817383]
[211.67764282 -507.05337524]
[226.00578308 -502.49133301]
[239.35675049 -495.57327271]
[251.34642029 -486.49826050]
[261.62982178 -475.52740479]
[269.91110229 -462.97634888]
[275.95193481 -449.20623779]
[279.57858276 -434.61325073]
[280.68664551 -419.61724854]
[279.24429321 -404.64968872]
[275.29296875 -390.14123535]
[268.94638062 -376.50933838]
[260.38714600 -364.14617920]
[249.86154175 -353.40750122]
[237.67237854 -344.60223389]
[224.17037964 -337.98379517]
[209.74401855 -333.74255371]
[194.80836487 -332.00054932]
[179.79316711 -332.80789185]
[184.51942444 -318.68304443]
[173.91777039 -306.93930054]
[170.59550476 -292.31182861]
[167.27325439 -277.68435669]
[163.95098877 -263.05691528]
[160.62873840 -248.42944336]
[157.52462769 -233.75415039]
[154.63934326 -219.03425598]
[151.75407410 -204.31436157]
[148.86880493 -189.59446716]
[145.98353577 -174.87457275]
[143.09825134 -160.15469360]
[140.65252686 -145.35542297]
[138.64851379 -130.48988342]
[136.64450073 -115.62435913]
[134.64048767 -100.75882721]
[132.96894836 -85.85225677]
[131.63072205 -70.91207123]
[130.29248047 -55.97188568]
[128.95425415 -41.03170013]
[127.61601257 -26.09151649]
[126.27777863 -11.15133190]
[124.93954468 3.78885341]
[137.11457825 -4.97292185]
[151.94068909 -2.69558716]
[160.92481995 9.31629658]
[158.92045593 24.18177605]
[147.07577515 33.38523102]
[132.17594910 31.65450287]
[122.75656128 19.98194313]
[120.09076691 34.74316025]
[117.42497253 49.50437927]
[119.32969666 56.64537430]
[114.60803223 64.46482086]
[111.72276306 79.18470764]
[108.83748627 93.90460205]
[108.39088440 108.89794922]
[110.39489746 123.76348114]
[112.39891052 138.62901306]
[114.40292358 153.49453735]
[125.43460083 143.33076477]
[140.28161621 145.46760559]
[147.99931335 158.32984924]
[142.89848328 172.43592834]
[128.73927307 177.38737488]
[115.96022034 169.53553772]
[116.85303497 184.50894165]
[120.48768616 192.88911438]
[117.64598846 199.71160889]
[118.31578064 214.69665527]
[118.98556519 229.68168640]
[119.65534973 244.66673279]
[120.32513428 259.65176392]
[133.10681152 268.25033569]
[138.31367493 282.55911255]
[134.14587402 297.01919556]
[122.40315247 306.14312744]
[123.07293701 321.12817383]
[136.27033997 326.18539429]
[146.51239014 335.86138916]
[152.27543640 348.67123413]
[152.71949768 362.66744995]
[147.81053162 375.73577881]
[138.32058716 385.91482544]
[125.70660400 391.69024658]
[126.15321350 406.68359375]
[134.29795837 420.24728394]
[126.94303131 433.19927979]
[127.38964081 448.19262695]
[127.83624268 463.18597412]
[135.98100281 476.74966431]
[128.62606812 489.70166016]
[129.07267761 504.69500732]
[129.51927185 519.68835449]
[142.79287720 527.55059814]
[149.68824768 541.35125732]
[148.00511169 556.68652344]
[138.28054810 568.66302490]
[123.61761475 573.45904541]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 205]
[5 204]
[6 203]
[8 201]
[9 200]
[10 199]
[12 197]
[13 196]
[19 189]
[20 188]
[24 184]
[25 183]
[26 182]
[27 181]
[28 180]
[29 178]
[30 177]
[31 171]
[32 170]
[33 169]
[34 168]
[57 167]
[58 166]
[59 165]
[60 163]
[61 162]
[62 161]
[63 154]
[64 153]
[65 152]
[66 151]
[67 150]
[68 149]
[69 148]
[73 147]
[74 146]
[75 145]
[76 144]
[81 143]
[82 142]
[83 141]
[84 140]
[85 139]
[86 138]
[89 137]
[90 136]
[91 135]
[92 134]
[93 133]
[95 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
