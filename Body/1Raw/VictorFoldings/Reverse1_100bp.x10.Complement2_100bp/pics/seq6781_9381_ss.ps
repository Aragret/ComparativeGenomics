%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[137.78108215 717.85992432]
[128.26856995 706.24877930]
[119.83517456 693.83166504]
[112.54880524 680.70861816]
[106.46812439 666.98522949]
[101.64208984 652.77197266]
[98.10955811 638.18341064]
[95.89897156 623.33685303]
[95.02813721 608.35192871]
[95.50405121 593.34924316]
[97.32289886 578.44964600]
[100.47001648 563.77307129]
[104.92008209 549.43774414]
[110.63726044 535.55895996]
[117.57551575 522.24853516]
[125.67898560 509.61367798]
[134.88243103 497.75607300]
[145.11172485 486.77117920]
[156.28454590 476.74749756]
[168.31089783 467.76568604]
[181.09397888 459.89807129]
[194.53083801 453.20800781]
[189.07548523 439.23519897]
[183.62013245 425.26242065]
[178.16477966 411.28961182]
[172.70941162 397.31680298]
[161.76039124 392.17431641]
[157.10108948 380.57800293]
[161.73538208 368.54113770]
[150.03507996 359.32418823]
[152.45657349 343.68939209]
[147.20986938 329.63690186]
[141.96315002 315.58444214]
[136.71643066 301.53198242]
[131.46971130 287.47949219]
[126.85390472 301.75164795]
[115.32252502 311.34475708]
[100.44870758 313.28625488]
[86.84125519 306.97457886]
[78.71659088 294.36544800]
[78.59222412 279.36596680]
[86.50669861 266.62387085]
[100.00762177 260.08743286]
[114.91159058 261.78204346]
[126.60059357 271.18283081]
[123.27833557 256.55535889]
[119.78632355 253.29731750]
[118.30391693 247.81101990]
[120.08179474 241.44308472]
[117.19652557 226.72319031]
[114.31124878 212.00329590]
[111.42597961 197.28340149]
[108.54070282 182.56350708]
[105.65543365 167.84362793]
[102.77015686 153.12373352]
[99.88488770 138.40383911]
[96.99961090 123.68394470]
[83.69869232 117.44130707]
[76.57256317 104.59205627]
[78.32053375 90.00337219]
[88.28049469 79.20132446]
[85.39522552 64.48143768]
[82.50994873 49.76154327]
[79.07788849 45.82860184]
[77.64128113 41.41391373]
[78.04947662 37.35824966]
[79.83996582 34.32073212]
[77.61484528 19.48669052]
[75.38973236 4.65264654]
[73.16461182 -10.18139744]
[70.93949890 -25.01544189]
[68.71437836 -39.84948349]
[66.48926544 -54.68352890]
[63.82346725 -69.44474792]
[60.71935654 -84.12004852]
[57.61524582 -98.79534912]
[54.51113510 -113.47064972]
[51.40702438 -128.14595032]
[47.91679001 -132.02735901]
[46.41461182 -136.42016602]
[46.76238251 -140.48146057]
[48.50744629 -143.54530334]
[46.06171799 -158.34457397]
[43.61598969 -173.14384460]
[33.73213577 -185.49778748]
[39.29073334 -199.31629944]
[36.84500504 -214.11557007]
[21.81054497 -215.14598083]
[7.41915178 -219.61639404]
[-5.55306673 -227.28569031]
[-16.40653419 -237.74031067]
[-24.55593872 -250.41642761]
[-29.56179047 -264.63043213]
[-31.15413094 -279.61581421]
[-29.24708939 -294.56439209]
[-23.94350624 -308.67001343]
[-15.52940083 -321.17199707]
[-4.45853329 -331.39611816]
[8.67205811 -338.79098511]
[23.15425682 -342.95785522]
[38.20705795 -343.67193604]
[53.01867676 -340.89480591]
[66.79035187 -334.77615356]
[78.77938080 -325.64599609]
[88.33922577 -313.99670410]
[94.95432281 -300.45648193]
[98.26793671 -285.75558472]
[98.10136414 -270.68676758]
[94.46358490 -256.06271362]
[87.55078888 -242.67204285]
[77.73577118 -231.23690796]
[65.54783630 -222.37400818]
[51.64427567 -216.56129456]
[54.09000397 -201.76202393]
[63.79892349 -190.46662903]
[58.41526413 -175.58956909]
[60.86098862 -160.79029846]
[63.30671692 -145.99102783]
[66.08232880 -131.25006104]
[69.18643951 -116.57476044]
[72.29055023 -101.89945984]
[75.39466095 -87.22415924]
[78.49877167 -72.54885864]
[80.77195740 -70.90850830]
[82.53235626 -68.26888275]
[83.39608765 -64.82078552]
[83.05538940 -60.89033508]
[81.32330322 -56.90864563]
[83.54842377 -42.07460022]
[85.77353668 -27.24055862]
[87.99865723 -12.40651417]
[90.22377777 2.42752934]
[92.44889069 17.26157379]
[94.67401123 32.09561539]
[97.22984314 46.87627029]
[100.11511230 61.59616089]
[103.00038910 76.31605530]
[116.30130768 82.55869293]
[123.42743683 95.40794373]
[121.67946625 109.99662781]
[111.71950531 120.79867554]
[114.60477448 135.51856995]
[117.49005127 150.23846436]
[120.37532043 164.95834351]
[123.26059723 179.67823792]
[126.14586639 194.39813232]
[129.03114319 209.11802673]
[131.91641235 223.83792114]
[134.80168152 238.55780029]
[137.90579224 253.23310852]
[141.22805786 267.86056519]
[145.52218628 282.23278809]
[150.76889038 296.28524780]
[156.01560974 310.33773804]
[161.26232910 324.39019775]
[166.50904846 338.44265747]
[178.58464050 348.66473389]
[175.78785706 363.29440308]
[190.25949097 374.68093872]
[186.68222046 391.86145020]
[192.13757324 405.83425903]
[197.59292603 419.80706787]
[203.04827881 433.77984619]
[208.50364685 447.75265503]
[222.91888428 443.56848145]
[237.65115356 440.69335938]
[252.58184814 439.15042114]
[267.59072876 438.95208740]
[282.55697632 440.09991455]
[297.36010742 442.58474731]
[311.88085938 446.38650513]
[326.00241089 451.47457886]
[339.61096191 457.80807495]
[352.59704590 465.33590698]
[364.85601807 473.99752808]
[376.28921509 483.72317505]
[386.80459595 494.43453979]
[396.31744385 506.04537964]
[404.75122070 518.46221924]
[412.03799438 531.58508301]
[418.11907959 545.30828857]
[422.94555664 559.52136230]
[426.47854614 574.10986328]
[428.68957520 588.95629883]
[429.56088257 603.94122314]
[429.08541870 618.94384766]
[427.26702881 633.84350586]
[424.12033081 648.52020264]
[419.67071533 662.85571289]
[413.95397949 676.73468018]
[407.01611328 690.04528809]
[398.91302490 702.68041992]
[389.70996094 714.53826904]
[379.48098755 725.52349854]
[368.30847168 735.54754639]
[356.28237915 744.52972412]
[343.49957275 752.39770508]
[330.06289673 759.08813477]
[316.08059692 764.54724121]
[301.66522217 768.73095703]
[286.93286133 771.60559082]
[272.00213623 773.14813232]
[256.99322510 773.34600830]
[242.02700806 772.19769287]
[227.22398376 769.71240234]
[212.70332336 765.91021729]
[198.58195496 760.82171631]
[184.97357178 754.48779297]
[171.98773193 746.95959473]
[159.72901917 738.29760742]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 164]
[23 163]
[24 162]
[25 161]
[26 160]
[29 158]
[31 156]
[32 155]
[33 154]
[34 153]
[35 152]
[45 151]
[46 150]
[49 149]
[50 148]
[51 147]
[52 146]
[53 145]
[54 144]
[55 143]
[56 142]
[57 141]
[61 137]
[62 136]
[63 135]
[67 134]
[68 133]
[69 132]
[70 131]
[71 130]
[72 129]
[73 128]
[74 123]
[75 122]
[76 121]
[77 120]
[78 119]
[82 118]
[83 117]
[84 116]
[86 114]
[87 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
