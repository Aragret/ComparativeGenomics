%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[91.00711823 488.48568726]
[83.11041260 475.68405151]
[77.62663269 461.67803955]
[74.73205566 446.91793823]
[74.51972198 431.87814331]
[76.99646759 417.04220581]
[82.08267975 402.88699341]
[89.61484528 389.86752319]
[99.35083771 378.40234375]
[110.97769165 368.86001587]
[124.12165070 361.54730225]
[138.36018372 356.69921875]
[136.13507080 341.86517334]
[133.90995789 327.03112793]
[131.68482971 312.19708252]
[120.02908325 299.07800293]
[126.91102600 281.99816895]
[124.46530151 267.19891357]
[122.01956940 252.39962769]
[119.57384491 237.60035706]
[117.12811279 222.80108643]
[114.24284363 208.08119202]
[110.92058563 193.45373535]
[107.42856598 190.19569397]
[105.94616699 184.70938110]
[107.72404480 178.34144592]
[97.68312073 167.34011841]
[102.62145233 152.30937195]
[99.73617554 137.58947754]
[96.85090637 122.86959076]
[93.96562958 108.14969635]
[89.44801331 101.47409821]
[91.14869690 93.18926239]
[88.48290253 78.42803955]
[85.81710052 63.66682434]
[83.15130615 48.90560532]
[80.48551178 34.14439011]
[77.81971741 19.38317299]
[75.15392303 4.62195539]
[72.48812866 -10.13926220]
[67.03276825 -24.11205864]
[58.99159622 -36.77458572]
[50.95042419 -49.43711090]
[43.70824432 -55.00385284]
[42.88542175 -62.34856415]
[35.03366470 -75.12940216]
[21.21734619 -82.83783722]
[21.14786530 -97.73227692]
[13.29611015 -110.51312256]
[5.44435453 -123.29396057]
[-2.40740108 -136.07479858]
[-10.25915623 -148.85565186]
[-18.39437294 -161.45796204]
[-26.80899048 -173.87545776]
[-35.22360992 -186.29295349]
[-43.63822937 -198.71044922]
[-56.87920761 -191.63272095]
[-70.78748322 -185.97785950]
[-85.21067047 -181.80780029]
[-99.99074554 -179.16824341]
[-114.96575928 -178.08811951]
[-129.97163391 -178.57923889]
[-144.84397888 -180.63623047]
[-159.41983032 -184.23657227]
[-173.53947449 -189.34080505]
[-187.04823303 -195.89299011]
[-199.79808044 -203.82136536]
[-211.64932251 -213.03904724]
[-222.47212219 -223.44503784]
[-232.14790344 -234.92533875]
[-240.57063293 -247.35414124]
[-247.64802551 -260.59530640]
[-253.30255127 -274.50372314]
[-257.47225952 -288.92700195]
[-260.11145020 -303.70712280]
[-261.19122314 -318.68215942]
[-260.69973755 -333.68804932]
[-258.64236450 -348.56033325]
[-255.04168701 -363.13607788]
[-249.93711853 -377.25561523]
[-243.38459778 -390.76422119]
[-235.45591736 -403.51388550]
[-226.23794556 -415.36489868]
[-215.83169556 -426.18743896]
[-204.35116577 -435.86294556]
[-191.92214966 -444.28536987]
[-178.68081665 -451.36242676]
[-164.77226257 -457.01663208]
[-150.34887695 -461.18597412]
[-135.56867981 -463.82482910]
[-120.59361267 -464.90423584]
[-105.58775330 -464.41238403]
[-90.71551514 -462.35464478]
[-76.13984680 -458.75360107]
[-62.02044296 -453.64871216]
[-48.51200485 -447.09585571]
[-35.76254272 -439.16687012]
[-23.91174126 -429.94860840]
[-13.08944607 -419.54208374]
[-3.41423368 -408.06130981]
[5.00789022 -395.63211060]
[12.08464813 -382.39059448]
[17.73850250 -368.48190308]
[21.90750885 -354.05841064]
[24.54598618 -339.27816772]
[25.62502670 -324.30307007]
[25.13280869 -309.29721069]
[23.07472610 -294.42501831]
[19.47332764 -279.84945679]
[14.36807060 -265.73016357]
[7.81489229 -252.22189331]
[-0.11440704 -239.47261047]
[-9.33294964 -227.62203979]
[-19.73973274 -216.80000305]
[-31.22073364 -207.12506104]
[-22.80611420 -194.70756531]
[-14.39149570 -182.29006958]
[-5.97687674 -169.87257385]
[-2.60191941 -168.85179138]
[0.44628847 -166.14559937]
[2.38098168 -161.92538452]
[2.52168584 -156.70739746]
[10.37344170 -143.92655945]
[18.22519684 -131.14572144]
[26.07695198 -118.36487579]
[33.92870712 -105.58403015]
[47.18341827 -98.78977203]
[47.81450653 -82.98116302]
[55.66626358 -70.20031738]
[63.61294937 -57.47828293]
[71.65412140 -44.81575775]
[79.69529724 -32.15323257]
[78.07814026 -47.06580353]
[79.77431488 -61.96959686]
[84.70106506 -76.13741302]
[92.61800385 -88.87799072]
[103.13883209 -99.56966400]
[115.75023651 -107.69078827]
[129.83686829 -112.84510040]
[144.71139526 -114.78111267]
[159.64808655 -113.40435791]
[173.91812134 -108.78202057]
[186.82525635 -101.13963318]
[197.73970032 -90.85008240]
[206.12892151 -78.41542053]
[211.58360291 -64.44235229]
[213.83758545 -49.61267090]
[212.78088379 -34.64993668]
[208.46508789 -20.28421783]
[201.10075378 -7.21645260]
[191.04719543 3.91575646]
[178.79496765 12.56924343]
[164.94186401 18.32178497]
[150.16383362 20.89270401]
[135.18190002 20.15655708]
[120.72708893 16.14926338]
[107.50467682 9.06634712]
[96.15980530 -0.74659914]
[87.24934387 -12.80505753]
[89.91513824 1.95615995]
[92.58093262 16.71737671]
[95.24672699 31.47859383]
[97.91252899 46.23981094]
[100.57832336 61.00102997]
[103.24411774 75.76224518]
[105.90991211 90.52346039]
[108.68552399 105.26442719]
[111.57079315 119.98431396]
[114.45606995 134.70420837]
[117.34133911 149.42410278]
[127.58863831 161.47828674]
[122.44393158 175.45617676]
[125.54804230 190.13146973]
[128.87030029 204.75894165]
[131.93188477 207.83801270]
[133.67871094 211.37539673]
[134.12817383 214.90150452]
[133.44833374 218.00061035]
[131.92738342 220.35536194]
[134.37310791 235.15463257]
[136.81884766 249.95390320]
[139.26457214 264.75317383]
[141.71029663 279.55242920]
[151.72200012 287.68438721]
[153.45437622 300.06109619]
[146.51887512 309.97195435]
[148.74400330 324.80599976]
[150.96911621 339.64004517]
[153.19422913 354.47409058]
[168.22854614 354.93121338]
[182.93960571 358.06570435]
[196.85447693 363.77673340]
[209.52586365 371.88079834]
[220.54644775 382.11730957]
[229.56195068 394.15728760]
[236.28256226 407.61361694]
[240.49223328 422.05377197]
[242.05566406 437.01358032]
[240.92259216 452.01211548]
[237.12940979 466.56723022]
[230.79809570 480.21105957]
[222.13214111 492.50500488]
[211.41014099 503.05386353]
[198.97676086 511.51855469]
[185.23167419 517.62695312]
[170.61672974 521.18267822]
[155.60174561 522.07141113]
[140.66937256 520.26470947]
[126.29965210 515.82049561]
[112.95449829 508.88174438]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 189]
[13 188]
[14 187]
[15 186]
[17 183]
[18 182]
[19 181]
[20 180]
[21 179]
[22 174]
[23 173]
[26 172]
[28 170]
[29 169]
[30 168]
[31 167]
[33 166]
[34 165]
[35 164]
[36 163]
[37 162]
[38 161]
[39 160]
[40 159]
[41 132]
[42 131]
[43 130]
[45 129]
[46 128]
[48 126]
[49 125]
[50 124]
[51 123]
[52 122]
[53 118]
[54 117]
[55 116]
[56 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
