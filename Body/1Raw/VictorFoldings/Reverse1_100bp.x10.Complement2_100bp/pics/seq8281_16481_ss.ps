%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[-34.18806076 712.44042969]
[-48.32462311 717.46520996]
[-62.69071579 721.79034424]
[-77.25172424 725.40533447]
[-91.97257233 728.30145264]
[-106.81779480 730.47180176]
[-121.75163269 731.91113281]
[-136.73809814 732.61590576]
[-151.74110413 732.58453369]
[-166.72448730 731.81701660]
[-181.65217590 730.31518555]
[-196.48817444 728.08276367]
[-211.19677734 725.12500000]
[-225.74252319 721.44909668]
[-240.09039307 717.06390381]
[-254.20579529 711.97998047]
[-268.05474854 706.20959473]
[-281.60388184 699.76654053]
[-294.82052612 692.66650391]
[-307.67288208 684.92645264]
[-320.12997437 676.56512451]
[-332.16177368 667.60260010]
[-343.73931885 658.06054688]
[-354.83471680 647.96185303]
[-365.42123413 637.33093262]
[-375.47335815 626.19329834]
[-384.96685791 614.57592773]
[-393.87890625 602.50665283]
[-402.18801880 590.01470947]
[-409.87414551 577.13000488]
[-416.91879272 563.88372803]
[-423.30499268 550.30773926]
[-429.01736450 536.43475342]
[-434.04214478 522.29821777]
[-438.36718750 507.93209839]
[-441.98214722 493.37106323]
[-444.87826538 478.65020752]
[-447.04855347 463.80499268]
[-448.48782349 448.87115479]
[-449.19259644 433.88467407]
[-449.16116333 418.88168335]
[-448.39361572 403.89828491]
[-446.89175415 388.97061157]
[-444.65927124 374.13461304]
[-441.70150757 359.42602539]
[-438.02557373 344.88027954]
[-433.64031982 330.53244019]
[-428.55636597 316.41702271]
[-422.78591919 302.56808472]
[-416.34289551 289.01898193]
[-409.24279785 275.80233765]
[-401.50271606 262.95001221]
[-393.14135742 250.49295044]
[-384.17880249 238.46115112]
[-374.63668823 226.88363647]
[-364.53799438 215.78826904]
[-353.90704346 205.20178223]
[-342.76940918 195.14968872]
[-331.15197754 185.65620422]
[-319.08273315 176.74418640]
[-306.59069824 168.43511963]
[-293.70602417 160.74902344]
[-280.45971680 153.70440674]
[-266.88372803 147.31823730]
[-253.01071167 141.60589600]
[-238.87413025 136.58116150]
[-224.50802612 132.25613403]
[-209.94699097 128.64122009]
[-195.22613525 125.74514771]
[-180.38088989 123.57488251]
[-165.44705200 122.13565063]
[-150.46058655 121.43091583]
[-135.45758057 121.46239471]
[-120.47419739 122.22998810]
[-105.54652405 123.73186493]
[-90.71052551 125.96439362]
[-76.00193787 128.92221069]
[-61.45620728 132.59817505]
[-47.10836792 136.98344421]
[-32.99298859 142.06744385]
[-19.14406967 147.83792114]
[-5.59497690 154.28099060]
[7.62164783 161.38113403]
[20.47396469 169.12121582]
[32.93101120 177.48262024]
[41.89170837 165.45324707]
[50.85240555 153.42385864]
[59.81309891 141.39448547]
[68.77379608 129.36511230]
[77.73448944 117.33573151]
[86.69519043 105.30635071]
[88.51278687 91.44316864]
[101.27543640 85.73294830]
[99.18915558 70.29646301]
[108.44794464 58.22461319]
[123.17713165 56.33079529]
[132.13783264 44.30141830]
[141.09852600 32.27204132]
[130.07868958 22.07423019]
[120.20526123 10.76283741]
[111.59012604 -1.53396881]
[104.33087921 -14.67685699]
[98.50979614 -28.51690865]
[94.19281769 -42.89730453]
[91.42886353 -57.65510559]
[90.24924469 -72.62309265]
[90.66734314 -87.63166809]
[92.67841339 -102.51076508]
[96.25965881 -117.09180450]
[101.37051392 -131.20956421]
[107.95307159 -144.70408630]
[115.93273163 -157.42247009]
[125.21908569 -169.22059631]
[135.70692444 -179.96478271]
[147.27738953 -189.53327942]
[159.79939270 -197.81770325]
[173.13104248 -204.72415161]
[187.12129211 -210.17439270]
[201.61161804 -214.10664368]
[216.43782043 -216.47637939]
[231.43193054 -217.25672913]
[246.42402649 -216.43884277]
[261.24426270 -214.03201294]
[275.72470093 -210.06350708]
[289.70126343 -204.57827759]
[303.01559448 -197.63847351]
[315.51681519 -189.32275391]
[327.06329346 -179.72531128]
[337.52420044 -168.95491028]
[346.78100586 -157.13359070]
[354.72882080 -144.39527893]
[361.27758789 -130.88432312]
[366.35308838 -116.75381470]
[369.89782715 -102.16385651]
[371.87164307 -87.27976990]
[372.25216675 -72.27019501]
[371.03509521 -57.30520630]
[368.23422241 -42.55437088]
[363.88125610 -28.18482399]
[358.02557373 -14.35938549]
[350.73345947 -1.23470688]
[342.08755493 11.04049873]
[332.18585205 22.32714462]
[321.14053345 32.49734497]
[309.07675171 41.43585968]
[296.13116455 49.04141235]
[282.45053101 55.22782516]
[268.18978882 59.92499924]
[253.51054382 63.07971573]
[238.57914734 64.65622711]
[223.56477356 64.63667297]
[208.63752747 63.02127075]
[193.96655273 59.82832336]
[179.71810913 55.09401703]
[166.05360413 48.87198639]
[153.12789917 41.23273468]
[144.16720581 53.26211548]
[135.20651245 65.29148865]
[137.60855103 79.94638062]
[128.69248962 92.27352905]
[113.30480957 94.69364929]
[111.48721313 108.55683136]
[98.72456360 114.26705170]
[89.76387024 126.29642487]
[80.80317688 138.32580566]
[71.84247589 150.35517883]
[62.88178253 162.38455200]
[53.92108536 174.41394043]
[44.96038818 186.44331360]
[56.53798676 195.98533630]
[67.63343048 206.08396912]
[78.21999359 216.71485901]
[88.27217102 227.85238647]
[97.76573944 239.46975708]
[106.67784119 251.53895569]
[114.98699951 264.03091431]
[122.67319489 276.91552734]
[129.71791077 290.16177368]
[136.10418701 303.73773193]
[141.81661987 317.61068726]
[146.84146118 331.74725342]
[151.16659546 346.11331177]
[154.78161621 360.67431641]
[157.67779541 375.39517212]
[159.84817505 390.24038696]
[161.28752136 405.17419434]
[161.99237061 420.16067505]
[161.96101379 435.16366577]
[161.19352722 450.14706421]
[159.69175720 465.07476807]
[157.45933533 479.91076660]
[154.50163269 494.61938477]
[150.82577515 509.16513062]
[146.44061279 523.51300049]
[141.35671997 537.62841797]
[135.58633423 551.47741699]
[129.14337158 565.02655029]
[122.04333496 578.24322510]
[114.30334473 591.09558105]
[105.94203186 603.55267334]
[96.97955322 615.58453369]
[87.43750000 627.16210938]
[77.33884430 638.25750732]
[66.70793152 648.84405518]
[55.57036972 658.89617920]
[43.95298386 668.38977051]
[31.88376427 677.30181885]
[19.39178848 685.61096191]
[6.50714970 693.29711914]
[-6.73911190 700.34179688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[85 169]
[86 168]
[87 167]
[88 166]
[89 165]
[90 164]
[91 163]
[93 161]
[96 158]
[97 157]
[98 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
