%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[-15.98444939 355.00064087]
[-9.93980217 368.75476074]
[-5.82437658 383.20388794]
[-3.71484017 398.07882690]
[-3.65049243 413.10244751]
[-5.63253212 427.99490356]
[-9.62403488 442.47875977]
[-15.55064201 456.28414917]
[-23.30194473 469.15393066]
[-32.73353958 480.84832764]
[-43.66972351 491.14947510]
[-55.90675735 499.86547852]
[-69.21668243 506.83395386]
[-83.35153198 511.92507935]
[-98.04798889 515.04406738]
[-113.03226471 516.13269043]
[-128.02520752 515.17083740]
[-142.74752808 512.17626953]
[-156.92492676 507.20486450]
[-170.29331970 500.34921265]
[-182.60363770 491.73699951]
[-193.62655640 481.52871704]
[-203.15672302 469.91452026]
[-211.01658630 457.11077881]
[-217.05975342 443.35598755]
[-221.17361450 428.90643311]
[-223.28153992 414.03128052]
[-223.34425354 399.00762939]
[-221.36061096 384.11538696]
[-217.36753845 369.63195801]
[-211.43943787 355.82720947]
[-203.68673706 342.95828247]
[-194.25387573 331.26492310]
[-183.31658936 320.96493530]
[-171.07859802 312.25027466]
[-157.76792908 305.28323364]
[-143.63252258 300.19360352]
[-128.93572998 297.07623291]
[-113.95133209 295.98919678]
[-98.95848846 296.95272827]
[-84.23650360 299.94885254]
[-70.05963898 304.92181396]
[-56.69199371 311.77890015]
[-48.09342957 299.48806763]
[-39.58660126 287.13357544]
[-31.17198372 274.71606445]
[-22.75736618 262.29858398]
[-14.34274769 249.88107300]
[-5.92812872 237.46357727]
[2.48648977 225.04608154]
[3.22097301 210.16960144]
[17.36771202 203.08578491]
[18.51767159 195.78515625]
[26.00119591 190.54733276]
[34.59975815 178.25650024]
[35.85828781 170.97378540]
[43.41896820 165.84797668]
[52.19956970 153.68652344]
[49.57960510 139.06901550]
[58.31113815 126.61048889]
[73.66108704 123.96154022]
[82.44168854 111.80007935]
[91.22229004 99.63862610]
[90.99330902 96.59937286]
[91.86513519 93.40962982]
[93.89562225 90.47695160]
[96.99127197 88.22457886]
[100.90528870 87.03569794]
[110.39418793 75.41843414]
[119.88307953 63.80117035]
[129.37197876 52.18390656]
[130.20855713 47.03150558]
[132.68972778 43.10759735]
[136.07215881 40.83290863]
[139.55323792 40.27217102]
[149.55140686 29.09019661]
[159.54957581 17.90822220]
[162.98013306 2.46341991]
[177.23130798 -1.86705828]
[187.22947693 -13.04903316]
[197.22766113 -24.23100662]
[207.22583008 -35.41298294]
[210.65637207 -50.85778427]
[224.90756226 -55.18826294]
[234.90573120 -66.37023926]
[244.90390015 -77.55220795]
[254.81855774 -88.80830383]
[264.64913940 -100.13790131]
[267.84933472 -115.63206482]
[282.03448486 -120.17424011]
[291.86505127 -131.50382996]
[281.35726929 -142.21983337]
[271.74581909 -153.74659729]
[263.09307861 -166.00939941]
[255.45513916 -178.92871094]
[248.88154602 -192.42071533]
[243.41494751 -206.39793396]
[239.09077454 -220.76969910]
[235.93707275 -235.44282532]
[233.97430420 -250.32212830]
[233.21519470 -265.31112671]
[233.66467285 -280.31259155]
[235.31982422 -295.22927856]
[238.16989136 -309.96438599]
[242.19642639 -324.42236328]
[247.37329102 -338.50946045]
[253.66691589 -352.13430786]
[261.03649902 -365.20855713]
[269.43420410 -377.64739990]
[278.80560303 -389.37014771]
[289.08993530 -400.30081177]
[300.22042847 -410.36846924]
[312.12500000 -419.50784302]
[324.72634888 -427.65966797]
[337.94281006 -434.77102661]
[351.68862915 -440.79586792]
[365.87466431 -445.69506836]
[380.40893555 -449.43688965]
[395.19717407 -451.99703979]
[410.14349365 -453.35891724]
[425.15087891 -453.51370239]
[440.12210083 -452.46035767]
[454.95999146 -450.20574951]
[469.56832886 -446.76449585]
[483.85241699 -442.15890503]
[497.71957397 -436.41885376]
[511.07989502 -429.58157349]
[523.84667969 -421.69137573]
[535.93719482 -412.79946899]
[547.27301025 -402.96353149]
[557.78057861 -392.24728394]
[567.39172363 -380.72030640]
[576.04418945 -368.45730591]
[583.68188477 -355.53784180]
[590.25512695 -342.04568481]
[595.72143555 -328.06835938]
[600.04528809 -313.69650269]
[603.19866943 -299.02331543]
[605.16113281 -284.14395142]
[605.91992188 -269.15493774]
[605.47009277 -254.15347290]
[603.81463623 -239.23684692]
[600.96423340 -224.50180054]
[596.93737793 -210.04389954]
[591.76019287 -195.95690918]
[585.46624756 -182.33219910]
[578.09643555 -169.25811768]
[569.69842529 -156.81947327]
[560.32678223 -145.09690857]
[550.04217529 -134.16648865]
[538.91143799 -124.09906769]
[527.00671387 -114.95996094]
[514.40515137 -106.80842590]
[501.18856812 -99.69733429]
[487.44259644 -93.67280579]
[473.25643921 -88.77391052]
[458.72207642 -85.03241730]
[443.93380737 -82.47259521]
[428.98748779 -81.11104584]
[413.98007202 -80.95660400]
[399.00888062 -82.01026154]
[384.17105103 -84.26519775]
[369.56274414 -87.70677185]
[355.27877808 -92.31267548]
[341.41174316 -98.05303192]
[328.05160522 -104.89061737]
[315.28497314 -112.78108215]
[303.19464111 -121.67325592]
[293.36407471 -110.34366608]
[290.86700439 -95.65986633]
[275.97872925 -90.30731964]
[266.14813232 -78.97772980]
[264.13879395 -71.86546326]
[256.08587646 -67.55403900]
[246.08770752 -56.37206650]
[236.08952332 -45.19009018]
[233.37411499 -30.54509735]
[218.40780640 -25.41481018]
[208.40962219 -14.23283577]
[198.41145325 -3.05086088]
[188.41328430 8.13111401]
[185.69787598 22.77610588]
[170.73155212 27.90639496]
[160.73338318 39.08836746]
[150.73521423 50.27034378]
[140.98924255 61.67280579]
[131.50035095 73.29006958]
[122.01144409 84.90733337]
[112.52255249 96.52459717]
[103.38374329 108.41922760]
[94.60314178 120.58068848]
[85.82254028 132.74214172]
[88.13841248 148.14585876]
[79.06038666 160.35421753]
[64.36102295 162.46711731]
[55.58042145 174.62857056]
[46.89059830 186.85505676]
[38.29203415 199.14590454]
[29.78520775 211.50041199]
[28.44885445 227.26507568]
[14.90398502 233.46070862]
[6.48936653 245.87820435]
[-1.92525184 258.29568481]
[-10.33987045 270.71319580]
[-18.75448990 283.13067627]
[-27.16910744 295.54818726]
[-29.39256287 304.40786743]
[-35.80259323 308.08663940]
[-44.40115738 320.37747192]
[-33.37713242 330.58456421]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 209]
[44 208]
[45 206]
[46 205]
[47 204]
[48 203]
[49 202]
[50 201]
[52 199]
[54 198]
[55 197]
[57 196]
[58 195]
[61 192]
[62 191]
[63 190]
[68 189]
[69 188]
[70 187]
[71 186]
[75 185]
[76 184]
[77 183]
[79 181]
[80 180]
[81 179]
[82 178]
[84 176]
[85 175]
[86 174]
[87 172]
[88 171]
[90 169]
[91 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
