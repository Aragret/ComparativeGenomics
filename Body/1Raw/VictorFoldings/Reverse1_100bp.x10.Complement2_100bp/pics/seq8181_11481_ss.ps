%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[169.19004822 472.36331177]
[173.56613159 457.99563599]
[179.67471313 444.27468872]
[187.42317200 431.40841675]
[196.69406128 419.59188843]
[207.34681702 409.00424194]
[219.21995544 399.80596924]
[211.55935669 386.90963745]
[203.89877319 374.01330566]
[196.23817444 361.11700439]
[188.57757568 348.22067261]
[180.72581482 335.43981934]
[172.68464661 322.77728271]
[164.64346313 310.11477661]
[156.60229492 297.45223999]
[148.56112671 284.78973389]
[145.21804810 283.66891479]
[142.25177002 280.87316895]
[140.44358826 276.59719849]
[140.45831299 271.37734985]
[132.99057007 258.36840820]
[125.52281952 245.35943604]
[126.41309357 260.33300781]
[123.60179901 275.06719971]
[117.26085663 288.66104126]
[107.77802277 300.28326416]
[95.73316956 309.22314453]
[81.86284637 314.93399048]
[67.01522064 317.06665039]
[52.09824371 315.49066162]
[38.02408981 310.30236816]
[25.65339470 301.81909180]
[15.74263477 290.55957031]
[8.89785576 277.21234131]
[5.53761911 262.59356689]
[5.86740446 247.59718323]
[9.86704540 233.14024353]
[17.29196167 220.10681152]
[27.68811798 209.29385376]
[40.41978455 201.36260986]
[54.70841217 196.79806519]
[69.68025208 195.87934875]
[84.41976929 198.66264343]
[98.02562714 204.97773743]
[109.66583252 214.43847656]
[118.62860107 226.46635437]
[115.96280670 211.70513916]
[113.29700470 196.94392395]
[110.63121033 182.18270874]
[107.63643646 167.48469543]
[104.31417847 152.85723877]
[100.99192047 138.22978210]
[97.66966248 123.60231781]
[94.34739685 108.97486115]
[90.37530518 94.51033783]
[85.76129150 80.23760223]
[81.14728546 65.96486664]
[69.54018402 55.21379089]
[72.98742676 40.72359467]
[68.37342072 26.45086098]
[63.75940704 12.17812729]
[52.15230560 1.42704654]
[55.59954834 -13.06314945]
[43.99244690 -23.81422997]
[47.43969345 -38.30442429]
[42.82568359 -52.57715988]
[38.21167374 -66.84989166]
[32.59427261 -74.05284882]
[33.63693237 -81.36959076]
[29.23593330 -95.70943451]
[14.45207024 -93.06467438]
[-0.54279429 -92.22123718]
[-15.52999210 -93.19142151]
[-30.29096603 -95.96107483]
[-44.61045837 -100.48982239]
[-58.27964401 -106.71161652]
[-71.09918976 -114.53571320]
[-82.88214874 -123.84803009]
[-93.45669556 -134.51275635]
[-102.66861725 -146.37437439]
[-110.38356781 -159.25990295]
[-116.48905945 -172.98143005]
[-120.89604187 -187.33886719]
[-123.54025269 -202.12281799]
[-124.38313293 -217.11772156]
[-123.41238403 -232.10487366]
[-120.64217377 -246.86575317]
[-116.11289215 -261.18505859]
[-109.89058685 -274.85403442]
[-102.06600952 -287.67327881]
[-92.75325775 -299.45590210]
[-82.08813477 -310.03002930]
[-70.22617340 -319.24151611]
[-57.34035873 -326.95599365]
[-43.61859894 -333.06097412]
[-29.26100159 -337.46740723]
[-14.47694206 -340.11105347]
[0.51798552 -340.95336914]
[15.50511074 -339.98208618]
[30.26587677 -337.21130371]
[44.58502960 -332.68148804]
[58.25375366 -326.45867920]
[71.07271576 -318.63363647]
[82.85498047 -309.32043457]
[93.42872620 -298.65490723]
[102.63975525 -286.79260254]
[110.35374451 -273.90649414]
[116.45820618 -260.18450928]
[120.86412048 -245.82675171]
[123.50722504 -231.04260254]
[124.34898376 -216.04763794]
[123.37711334 -201.06054688]
[120.60579681 -186.29988098]
[116.07544708 -171.98091125]
[109.85212708 -158.31240845]
[102.02658081 -145.49374390]
[92.71295166 -133.71182251]
[82.04703522 -123.13848114]
[70.18438721 -113.92789459]
[57.29799652 -106.21438599]
[43.57577896 -100.11043549]
[47.97677612 -85.77058411]
[52.48440552 -71.46389771]
[57.09841537 -57.19116592]
[61.71242523 -42.91843414]
[72.98950195 -33.18823624]
[69.87228394 -17.67715836]
[81.14936066 -7.94695950]
[78.03214264 7.56411743]
[82.64614868 21.83685112]
[87.26016235 36.10958481]
[98.53723907 45.83978271]
[95.42002106 61.35086060]
[100.03402710 75.62359619]
[104.64803314 89.89632416]
[112.42428589 77.06940460]
[126.95948029 73.36425781]
[139.92720032 80.90336609]
[143.89895630 95.36798859]
[136.59953308 108.47212219]
[122.21038055 112.70913696]
[108.97486115 105.65260315]
[112.29711914 120.28005981]
[115.61937714 134.90751648]
[118.94163513 149.53498840]
[122.26390076 164.16244507]
[125.81153870 167.99145508]
[127.37895203 172.36140442]
[127.09168243 176.42742920]
[125.39243317 179.51690674]
[128.05822754 194.27812195]
[130.72401428 209.03933716]
[133.38981628 223.80056763]
[138.53176880 237.89170837]
[145.99951172 250.90065002]
[153.46725464 263.90960693]
[161.22364807 276.74853516]
[169.26481628 289.41107178]
[177.30599976 302.07360840]
[185.34716797 314.73611450]
[193.38833618 327.39865112]
[199.06179810 330.79327393]
[201.76364136 335.79296875]
[201.47389221 340.56005859]
[209.13449097 353.45639038]
[216.79508972 366.35272217]
[224.45568848 379.24905396]
[232.11628723 392.14538574]
[245.87348938 386.11886597]
[260.26702881 381.82864380]
[275.07867432 379.33981323]
[290.08392334 378.69006348]
[305.05529785 379.88925171]
[319.76580811 382.91921997]
[333.99243164 387.73400879]
[347.51956177 394.26062012]
[360.14208984 402.40011597]
[371.66864014 412.02914429]
[381.92453003 423.00167847]
[390.75421143 435.15142822]
[398.02389526 448.29415894]
[403.62335205 462.23065186]
[407.46765137 476.74963379]
[409.49859619 491.63098145]
[409.68533325 506.64913940]
[408.02505493 521.57641602]
[404.54293823 536.18646240]
[399.29177856 550.25787354]
[392.35113525 563.57733154]
[383.82629395 575.94287109]
[373.84640503 587.16699219]
[362.56283569 597.07965088]
[350.14663696 605.53051758]
[336.78598022 612.39147949]
[322.68344116 617.55853271]
[308.05282593 620.95330811]
[293.11593628 622.52441406]
[278.09915161 622.24798584]
[263.23019409 620.12823486]
[248.73443604 616.19726562]
[234.83163452 610.51464844]
[221.73254395 603.16662598]
[209.63577271 594.26452637]
[198.72467041 583.94329834]
[189.16467285 572.35943604]
[181.10067749 559.68853760]
[174.65496826 546.12268066]
[169.92524719 531.86755371]
[166.98320007 517.13916016]
[165.87344360 502.16094971]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 168]
[8 167]
[9 166]
[10 165]
[11 164]
[12 161]
[13 160]
[14 159]
[15 158]
[16 157]
[20 156]
[21 155]
[22 154]
[46 153]
[47 152]
[48 151]
[49 150]
[50 146]
[51 145]
[52 144]
[53 143]
[54 142]
[55 135]
[56 134]
[57 133]
[59 131]
[60 130]
[61 129]
[63 127]
[65 125]
[66 124]
[67 123]
[69 122]
[70 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
