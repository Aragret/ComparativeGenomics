%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[99.34011078 387.29779053]
[112.20228577 379.14398193]
[109.97717285 364.30993652]
[107.75205231 349.47589111]
[98.21393585 342.03607178]
[96.23875427 329.69580078]
[103.42392731 318.98431396]
[101.41991425 304.11877441]
[99.41590118 289.25326538]
[97.41188812 274.38772583]
[87.98559570 266.80673218]
[86.19435883 254.43841553]
[93.53820801 243.83508301]
[91.75574493 228.94136047]
[89.63796234 227.10475159]
[88.12008667 224.31860352]
[87.56742096 220.80718994]
[88.25741577 216.92280579]
[90.33782196 213.11152649]
[89.44500732 198.13812256]
[88.55219269 183.16471863]
[87.65937805 168.19131470]
[79.54660034 180.80807495]
[66.25790405 187.76585388]
[51.26692200 187.24588013]
[38.49225616 179.38407898]
[31.27317429 166.23550415]
[31.49672890 151.23718262]
[39.10448074 138.30960083]
[52.10778809 130.83203125]
[67.10761261 130.75907898]
[80.18302917 138.10981750]
[87.91592407 150.96192932]
[89.25415802 136.02174377]
[90.59239197 121.08155060]
[91.93062592 106.14136505]
[89.45596313 98.47008514]
[93.40162659 90.98927307]
[94.96215057 76.07066345]
[96.52267456 61.15206146]
[98.08319092 46.23345566]
[99.64371490 31.31485176]
[93.38410187 16.78461456]
[102.40349579 4.93135405]
[103.96401978 -9.98725033]
[101.74438477 -18.84789467]
[105.66044617 -25.11576843]
[107.44291687 -40.00948334]
[109.22537994 -54.90320206]
[101.03582001 -42.33613586]
[90.20168304 -31.96206093]
[77.29129791 -24.32518578]
[62.98191452 -19.82612038]
[48.02417755 -18.70088005]
[33.20274353 -21.00849152]
[19.29511070 -26.62790298]
[7.03084898 -35.26432800]
[-2.94668484 -46.46472168]
[-10.11408901 -59.64153290]
[-14.09537601 -74.10353088]
[-14.68169498 -89.09206390]
[-11.84228992 -103.82087708]
[-5.72610855 -117.51731110]
[3.34600520 -129.46289062]
[14.89814663 -139.03096008]
[28.32431412 -145.71960449]
[42.92019653 -149.17796326]
[57.92012405 -149.22459412]
[72.53723145 -145.85707092]
[86.00473022 -139.25204468]
[97.61614990 -129.75599670]
[106.76236725 -117.86706543]
[112.96360016 -104.20893097]
[115.89454651 -89.49806213]
[115.40119934 -74.50453186]
[122.47830200 -87.73005676]
[129.55540466 -100.95558167]
[121.56768799 -112.43857574]
[119.31749725 -126.17730713]
[123.18771362 -139.48143005]
[132.36830139 -149.77053833]
[145.02513123 -155.07464600]
[158.66613770 -154.41120911]
[165.93936157 -167.52990723]
[173.21258545 -180.64860535]
[180.48582458 -193.76728821]
[180.25587463 -198.10331726]
[181.31149292 -201.90464783]
[183.32675171 -204.83282471]
[185.89923096 -206.68995667]
[188.60258484 -207.43156433]
[196.64376831 -220.09408569]
[204.68493652 -232.75660706]
[212.72610474 -245.41914368]
[220.76727295 -258.08166504]
[209.00331116 -267.41046143]
[198.27893066 -277.91787720]
[188.71163940 -289.48870850]
[180.40626526 -301.99624634]
[173.45379639 -315.30343628]
[167.93041992 -329.26446533]
[163.89665222 -343.72634888]
[161.39668274 -358.53067017]
[160.45790100 -373.51519775]
[161.09059143 -388.51577759]
[163.28784180 -403.36804199]
[167.02555847 -417.90927124]
[172.26278687 -431.98013306]
[178.94216919 -445.42645264]
[186.99049377 -458.10092163]
[196.31958008 -469.86468506]
[206.82723999 -480.58880615]
[218.39833069 -490.15582275]
[230.90606689 -498.46087646]
[244.21340942 -505.41302490]
[258.17456055 -510.93606567]
[272.63656616 -514.96948242]
[287.44091797 -517.46911621]
[302.42550659 -518.40753174]
[317.42605591 -517.77447510]
[332.27825928 -515.57684326]
[346.81939697 -511.83877563]
[360.89013672 -506.60119629]
[374.33630371 -499.92150879]
[387.01058960 -491.87286377]
[398.77407837 -482.54348755]
[409.49795532 -472.03555298]
[419.06469727 -460.46423340]
[427.36944580 -447.95629883]
[434.32128906 -434.64880371]
[439.84396362 -420.68750000]
[443.87704468 -406.22540283]
[446.37631226 -391.42098999]
[447.31436157 -376.43640137]
[446.68090820 -361.43585205]
[444.48297119 -346.58367920]
[440.74453735 -332.04263306]
[435.50662231 -317.97204590]
[428.82659912 -304.52603149]
[420.77764893 -291.85195923]
[411.44796753 -280.08865356]
[400.93981934 -269.36505127]
[389.36825562 -259.79861450]
[376.86010742 -251.49414062]
[363.55242920 -244.54264832]
[349.59100342 -239.02027893]
[335.12881470 -234.98756409]
[320.32431030 -232.48867798]
[305.33972168 -231.55097961]
[290.33917236 -232.18476868]
[275.48706055 -234.38310242]
[260.94613647 -238.12187195]
[246.87564087 -243.36013794]
[233.42980957 -250.04049683]
[225.38862610 -237.37796021]
[217.34745789 -224.71543884]
[209.30628967 -212.05291748]
[201.26510620 -199.39039612]
[193.60452271 -186.49406433]
[186.33128357 -173.37536621]
[179.05805969 -160.25666809]
[171.78482056 -147.13798523]
[180.44229126 -133.49391174]
[181.04107666 -117.25206757]
[173.32315063 -102.84198761]
[159.31152344 -94.24142456]
[142.78092957 -93.87847900]
[135.70382690 -80.65295410]
[128.62672424 -67.42742157]
[124.11909485 -53.12073517]
[122.33663177 -38.22702026]
[120.55416107 -23.33330154]
[118.88262177 -8.42672729]
[117.32209778 6.49187708]
[123.69333649 19.95503616]
[114.56232452 32.87537384]
[113.00180054 47.79397964]
[111.44127655 62.71258545]
[109.88075256 77.63118744]
[108.32022858 92.54979706]
[106.87081146 107.47959900]
[105.53257751 122.41978455]
[104.19434357 137.35997009]
[102.85610962 152.30015564]
[102.63278198 167.29849243]
[103.52559662 182.27189636]
[104.41841125 197.24530029]
[105.31122589 212.21870422]
[106.64945984 227.15888977]
[108.43193054 242.05261230]
[119.80788422 256.53256226]
[112.27741241 272.38372803]
[114.28142548 287.24923706]
[116.28543854 302.11477661]
[118.28945160 316.98028564]
[129.87973022 331.28927612]
[122.58609772 347.25079346]
[124.81121826 362.08483887]
[127.03633118 376.91888428]
[141.72476196 380.94003296]
[153.50364685 390.59292603]
[160.33219910 404.20507812]
[161.02735901 419.41812134]
[155.46867371 433.59628296]
[144.61921692 444.28317261]
[130.35871887 449.62713623]
[115.15790558 448.70236206]
[101.65040588 441.66906738]
[92.17648315 429.74578857]
[88.37754059 414.99832153]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 199]
[3 198]
[4 197]
[7 195]
[8 194]
[9 193]
[10 192]
[13 190]
[14 189]
[19 188]
[20 187]
[21 186]
[22 185]
[33 184]
[34 183]
[35 182]
[36 181]
[38 180]
[39 179]
[40 178]
[41 177]
[42 176]
[44 174]
[45 173]
[47 172]
[48 171]
[49 170]
[75 169]
[76 168]
[77 167]
[83 162]
[84 161]
[85 160]
[86 159]
[91 158]
[92 157]
[93 156]
[94 155]
[95 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
