%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[104.54795837 590.21209717]
[96.39801788 577.43109131]
[93.11396790 562.63275146]
[95.09237671 547.60406494]
[102.09434509 534.15979004]
[113.27434540 523.92340088]
[127.28234863 518.13104248]
[126.61256409 503.14599609]
[118.31467438 490.77688599]
[125.42804718 476.64498901]
[124.75826263 461.65997314]
[124.08847809 446.67492676]
[123.41869354 431.68988037]
[122.74890900 416.70483398]
[122.07912445 401.71981812]
[111.85146332 387.45932007]
[120.47296143 371.18814087]
[119.58013916 356.21472168]
[118.13072205 341.28491211]
[116.12670898 326.41937256]
[114.12269592 311.55386353]
[112.11868286 296.68832397]
[110.11466980 281.82278442]
[108.11065674 266.95727539]
[94.31301880 257.34143066]
[91.68739319 240.38795471]
[102.34117889 226.51292419]
[100.11605835 211.67887878]
[90.57638550 200.24018860]
[96.18094635 185.44493103]
[93.95583344 170.61088562]
[91.73071289 155.77684021]
[85.86112213 169.58074951]
[74.94012451 179.86334229]
[60.80808640 184.89183044]
[45.84651566 183.81880188]
[32.57669449 176.82510376]
[23.23482323 165.08927917]
[19.39517021 150.58903503]
[21.70478439 135.76791382]
[29.77445602 123.12352753]
[42.24430084 114.78668976]
[57.01293564 112.16229248]
[71.59158325 115.69259644]
[83.52348328 124.78268433]
[90.79839325 137.90229797]
[91.46817780 122.91726685]
[92.13796234 107.93222809]
[92.69617462 92.94261932]
[93.14278412 77.94926453]
[93.58938599 62.95591736]
[94.03599548 47.96256638]
[86.71300507 33.93814468]
[94.82581329 21.44688416]
[95.27242279 6.45353365]
[92.39990997 -2.21748042]
[95.83894348 -8.75925541]
[96.50872803 -23.74429512]
[97.17851257 -38.72933197]
[97.73672485 -53.71894455]
[98.18333435 -68.71229553]
[90.18267822 -56.02412796]
[77.98001862 -47.30087662]
[63.38554382 -43.83658600]
[48.56425858 -46.14516068]
[35.71480942 -53.88413239]
[26.74334335 -65.90547943]
[22.98071671 -80.42590332]
[24.98509407 -95.29138184]
[32.45914078 -108.29671478]
[44.29412460 -117.51263428]
[58.73439407 -121.57201385]
[73.63782501 -119.87267303]
[86.79357910 -112.66669464]
[96.25007629 -101.02304077]
[100.60431671 -86.67089081]
[104.03537750 -101.27320862]
[107.35764313 -115.90067291]
[110.67990112 -130.52813721]
[114.00215912 -145.15559387]
[117.32441711 -159.78305054]
[119.54953766 -174.61709595]
[120.66518402 -189.57554626]
[121.78083038 -204.53399658]
[122.89648438 -219.49246216]
[124.01213074 -234.45091248]
[125.12777710 -249.40936279]
[110.46417999 -252.69519043]
[96.43529510 -258.08114624]
[83.34016418 -265.45239258]
[71.45789337 -274.65182495]
[61.04176712 -285.48333740]
[52.31380081 -297.71612549]
[45.46003342 -311.08935547]
[40.62654877 -325.31802368]
[37.91637802 -340.09887695]
[37.38728714 -355.11679077]
[39.05055618 -370.05169678]
[42.87072372 -384.58523560]
[48.76637268 -398.40765381]
[56.61183167 -411.22430420]
[66.23987579 -422.76202393]
[77.44528198 -432.77484131]
[89.98921204 -441.04937744]
[103.60427856 -447.40921021]
[118.00028229 -451.71884155]
[132.87037659 -453.88638306]
[147.89759827 -453.86560059]
[162.76164246 -451.65698242]
[177.14569092 -447.30758667]
[190.74313354 -440.91012573]
[203.26412964 -432.60098267]
[214.44181824 -422.55722046]
[224.03794861 -410.99295044]
[231.84794617 -398.15466309]
[237.70536804 -384.31597900]
[241.48535156 -369.77194214]
[243.10734558 -354.83248901]
[242.53674316 -339.81610107]
[239.78573608 -325.04281616]
[234.91293335 -310.82754517]
[228.02223206 -297.47329712]
[219.26049805 -285.26470947]
[208.81446838 -274.46200562]
[196.90681458 -265.29544067]
[183.79136658 -257.96041870]
[169.74765015 -252.61326599]
[155.07502747 -249.36798096]
[140.08622742 -248.29371643]
[138.97058105 -233.33526611]
[137.85493469 -218.37680054]
[136.73928833 -203.41835022]
[135.62364197 -188.45989990]
[134.50799561 -173.50144958]
[144.23364258 -184.92123413]
[158.33277893 -190.04124451]
[173.11990356 -187.52313232]
[184.72970581 -178.02510071]
[190.12741089 -164.02993774]
[187.90206909 -149.19592285]
[178.63537598 -137.40065002]
[164.74963379 -131.72735596]
[149.87452698 -133.65905762]
[137.89839172 -142.69078064]
[131.95187378 -156.46078491]
[128.62962341 -141.83332825]
[125.30735779 -127.20587158]
[121.98509979 -112.57840729]
[118.66284180 -97.95095062]
[120.24680328 -90.73202515]
[115.18069458 -83.13121796]
[113.17668152 -68.26568604]
[112.73007202 -53.27233887]
[115.67302704 -46.49289703]
[112.16355133 -38.05954742]
[111.49376678 -23.07450867]
[110.82398224 -8.08947086]
[110.26576996 6.90013933]
[109.81916809 21.89348984]
[117.17409515 34.84548569]
[109.02934265 48.40917206]
[108.58274078 63.40252304]
[108.13613129 78.39587402]
[107.68952942 93.38922119]
[110.61640930 100.89961243]
[107.12300110 108.60201263]
[106.45321655 123.58705139]
[105.78343201 138.57208252]
[106.56475830 153.55172729]
[108.78987122 168.38577271]
[111.01499176 183.21981812]
[120.71382141 195.71954346]
[114.95010376 209.45376587]
[117.17521667 224.28781128]
[128.85627747 230.99359131]
[134.46058655 243.02696228]
[132.14529419 255.90025330]
[122.97618103 264.95324707]
[124.98019409 279.81878662]
[126.98420715 294.68432617]
[128.98822021 309.54983521]
[130.99223328 324.41537476]
[132.99624634 339.28088379]
[144.02792358 329.11712646]
[158.87493896 331.25396729]
[166.59263611 344.11621094]
[161.49180603 358.22229004]
[147.33259583 363.17373657]
[134.55354309 355.32189941]
[135.44636536 370.29531860]
[144.55773926 379.42471313]
[144.99310303 391.91445923]
[137.06416321 401.05001831]
[137.73394775 416.03506470]
[138.40373230 431.02011108]
[139.07351685 446.00512695]
[139.74330139 460.99017334]
[140.41308594 475.97521973]
[148.75888062 489.41613770]
[141.59759521 502.47619629]
[142.26737976 517.46124268]
[156.73629761 521.98077393]
[168.78495789 531.17895508]
[176.95845032 543.94488525]
[180.26976013 558.73718262]
[178.31904602 573.76947021]
[171.34187317 587.22662354]
[160.18075562 597.48358154]
[146.18345642 603.30175781]
[131.04020691 603.97863770]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 201]
[8 200]
[10 198]
[11 197]
[12 196]
[13 195]
[14 194]
[15 193]
[17 190]
[18 189]
[19 183]
[20 182]
[21 181]
[22 180]
[23 179]
[24 178]
[27 174]
[28 173]
[30 171]
[31 170]
[32 169]
[46 168]
[47 167]
[48 166]
[49 164]
[50 163]
[51 162]
[52 161]
[54 159]
[55 158]
[57 157]
[58 156]
[59 155]
[60 153]
[61 152]
[76 151]
[77 149]
[78 148]
[79 147]
[80 146]
[81 145]
[82 134]
[83 133]
[84 132]
[85 131]
[86 130]
[87 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
