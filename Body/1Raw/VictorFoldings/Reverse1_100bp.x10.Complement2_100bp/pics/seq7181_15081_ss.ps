%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[210.65875244 574.02770996]
[223.66368103 566.27203369]
[220.55957031 551.59674072]
[217.45545959 536.92144775]
[214.35134888 522.24615479]
[211.24723816 507.57086182]
[208.14314270 492.89553833]
[204.38684082 478.37350464]
[199.98583984 464.03363037]
[195.58483887 449.69378662]
[191.18383789 435.35394287]
[186.67620850 421.04727173]
[182.06221008 406.77453613]
[177.44819641 392.50180054]
[172.83418274 378.22906494]
[168.22016907 363.95632935]
[165.78866577 362.56137085]
[163.76321411 360.11920166]
[162.54544067 356.77969360]
[162.47538757 352.83511353]
[163.78384399 348.69482422]
[160.02754211 334.17279053]
[156.27124023 319.65072632]
[152.51493835 305.12866211]
[135.97584534 303.20141602]
[121.41351318 295.05154419]
[111.07572174 281.90466309]
[106.57056427 265.76016235]
[108.61638641 249.08711243]
[116.92736816 234.44676208]
[130.25311279 224.09898376]
[126.06609344 209.69520569]
[121.87908936 195.29142761]
[108.57510376 183.84716797]
[113.11347198 166.00102234]
[108.71247101 151.66117859]
[104.20484161 137.35449219]
[99.59083557 123.08175659]
[94.97682190 108.80902100]
[89.69794464 102.71755981]
[90.40208435 94.28932953]
[86.00108337 79.94947815]
[81.60009003 65.60963440]
[78.51300812 80.28852844]
[70.65047455 93.06274414]
[58.93616486 102.43157196]
[44.74627304 107.29438019]
[29.74780655 107.07988739]
[15.70277214 101.81329346]
[4.26116657 92.11331177]
[-3.23286152 79.11948395]
[-5.89892149 64.35831451]
[-3.42380714 49.56393051]
[3.90170741 36.47436142]
[15.21702766 26.62735748]
[29.19284248 21.17973137]
[44.18728638 20.77146912]
[58.43882370 25.45053101]
[70.27320099 34.66722488]
[78.30073547 47.34023285]
[77.40791321 32.36682892]
[65.87002563 21.90189552]
[65.17788696 6.70401478]
[75.22570038 -4.23111105]
[74.33288574 -19.20451736]
[73.44007111 -34.17792130]
[72.54724884 -49.15132904]
[59.25278473 -60.52130508]
[58.31320572 -77.65116882]
[69.82226562 -89.91413116]
[68.70661163 -104.87258911]
[67.59096527 -119.83103943]
[55.36105347 -126.18871307]
[47.92856216 -137.66812134]
[47.14508438 -151.21269226]
[53.10849762 -163.27842712]
[64.16526031 -170.76109314]
[63.27244186 -185.73449707]
[62.37962341 -200.70790100]
[61.48680878 -215.68130493]
[60.59399414 -230.65470886]
[50.10006332 -245.78610229]
[58.56066513 -261.16091919]
[57.44501877 -276.11938477]
[56.32936859 -291.07781982]
[55.21371841 -306.03628540]
[54.09807205 -320.99475098]
[42.48099518 -311.50561523]
[27.78748703 -314.52236938]
[20.84905434 -327.82116699]
[26.78045273 -341.59863281]
[41.20927429 -345.69851685]
[53.49831390 -337.10000610]
[53.49831390 -352.10000610]
[53.49831390 -367.10000610]
[53.49831390 -382.10000610]
[39.10514069 -386.75744629]
[26.85683632 -395.63629150]
[17.95336723 -407.86672974]
[13.26700306 -422.25051880]
[13.25686646 -437.37847900]
[17.92395020 -451.76852417]
[26.81102180 -464.01086426]
[39.04741287 -472.90612793]
[53.43433380 -477.58285522]
[68.56229401 -477.58285522]
[82.94921112 -472.90612793]
[95.18560791 -464.01086426]
[104.07267761 -451.76852417]
[108.73976135 -437.37847900]
[108.72962189 -422.25051880]
[104.04325867 -407.86672974]
[95.13979340 -395.63629150]
[82.89148712 -386.75744629]
[68.49831390 -382.10000610]
[68.49831390 -367.10000610]
[68.49831390 -352.10000610]
[68.49831390 -337.10000610]
[69.05652618 -322.11038208]
[70.17217255 -307.15194702]
[71.28781891 -292.19348145]
[72.40347290 -277.23501587]
[73.51911926 -262.27658081]
[82.47747040 -254.14794922]
[83.52935791 -241.69494629]
[75.56739807 -231.54753113]
[76.46021271 -216.57412720]
[77.35302734 -201.60070801]
[78.24584961 -186.62730408]
[79.13866425 -171.65390015]
[93.24616241 -163.26010132]
[99.63465118 -147.95817566]
[95.60361481 -131.70233154]
[82.54941559 -120.94668579]
[83.66506958 -105.98823547]
[84.78071594 -91.02978516]
[95.62478638 -84.07020569]
[100.55397034 -71.95471191]
[97.56115723 -59.02206039]
[87.52066040 -50.04414368]
[88.41347504 -35.07073975]
[89.30628967 -20.09733200]
[90.19910431 -5.12392664]
[101.47515869 4.53972530]
[102.59390259 19.71216965]
[92.38132477 31.47401047]
[93.27413940 46.44741821]
[95.93993378 61.20863342]
[100.34093475 75.54848480]
[104.74192810 89.88832855]
[109.24955750 104.19501495]
[113.86357117 118.46775055]
[118.47757721 132.74047852]
[124.09497833 139.94343567]
[123.05232239 147.26017761]
[127.45331573 161.60002136]
[138.46170044 168.32150269]
[141.83209229 180.35580444]
[136.28286743 191.10441589]
[140.46987915 205.50819397]
[144.65689087 219.91197205]
[158.07832336 220.63603210]
[170.60232544 225.45230103]
[181.01516724 233.87899780]
[188.31233215 245.08515930]
[191.79547119 257.97259521]
[191.13916016 271.28347778]
[186.42129517 283.72314453]
[178.11410522 294.08599854]
[167.03698730 301.37234497]
[170.79328918 315.89440918]
[174.54959106 330.41647339]
[178.30589294 344.93853760]
[182.49290466 359.34231567]
[187.10691833 373.61505127]
[191.72093201 387.88778687]
[196.33493042 402.16052246]
[200.94894409 416.43325806]
[206.56634521 423.63619995]
[205.52368164 430.95294189]
[209.92468262 445.29278564]
[214.32568359 459.63265991]
[218.72668457 473.97250366]
[226.69303894 461.26275635]
[241.28178406 457.77444458]
[254.13583374 465.50579834]
[257.89178467 480.02792358]
[250.39807129 493.02194214]
[235.94743347 497.04425049]
[222.81843567 489.79144287]
[225.92254639 504.46673584]
[229.02665710 519.14202881]
[232.13076782 533.81732178]
[235.23487854 548.49267578]
[238.33898926 563.16796875]
[253.37051392 564.99334717]
[266.99377441 571.60284424]
[277.73104858 582.27941895]
[284.41763306 595.86499023]
[286.32821655 610.88592529]
[283.25552368 625.71289062]
[275.53289795 638.73742676]
[263.99801636 648.54687500]
[249.90209961 654.07714844]
[234.77415466 654.72827148]
[220.25515747 650.42974854]
[207.92001343 641.64776611]
[199.10676575 629.33496094]
[194.77139282 614.82690430]
[195.38415527 599.69738770]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 195]
[3 194]
[4 193]
[5 192]
[6 191]
[7 190]
[8 183]
[9 182]
[10 181]
[11 180]
[12 178]
[13 177]
[14 176]
[15 175]
[16 174]
[21 173]
[22 172]
[23 171]
[24 170]
[31 161]
[32 160]
[33 159]
[35 156]
[36 155]
[37 153]
[38 152]
[39 151]
[41 150]
[42 149]
[43 148]
[60 147]
[61 146]
[64 143]
[65 142]
[66 141]
[67 140]
[70 136]
[71 135]
[72 134]
[77 130]
[78 129]
[79 128]
[80 127]
[81 126]
[83 123]
[84 122]
[85 121]
[86 120]
[87 119]
[93 118]
[94 117]
[95 116]
[96 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
