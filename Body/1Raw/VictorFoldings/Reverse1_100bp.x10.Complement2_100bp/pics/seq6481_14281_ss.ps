%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[133.46382141 642.72473145]
[124.04249573 630.92889404]
[118.15407562 617.02825928]
[116.23551178 602.05419922]
[118.42917633 587.11798096]
[124.57229614 573.32794189]
[134.20899963 561.70745850]
[146.62417603 553.11871338]
[160.89656067 548.19921875]
[160.00373840 533.22576904]
[159.11093140 518.25238037]
[158.21810913 503.27899170]
[157.32530212 488.30557251]
[155.98706055 473.36538696]
[154.20458984 458.47167969]
[152.42213440 443.57794189]
[150.63966370 428.68423462]
[138.80841064 419.70889282]
[136.78857422 404.62991333]
[146.28297424 392.28106689]
[144.50050354 377.38735962]
[142.71803284 362.49365234]
[140.93556213 347.59991455]
[138.26977539 332.83871460]
[134.73010254 318.26232910]
[131.19042969 303.68594360]
[127.65075684 289.10958862]
[124.11108398 274.53320312]
[120.57141113 259.95681763]
[117.03173828 245.38044739]
[107.11730957 256.63674927]
[92.12855530 256.05612183]
[83.11461639 244.06657410]
[86.72024536 229.50637817]
[100.28750610 223.10874939]
[113.81407166 229.58850098]
[111.36833954 214.78923035]
[108.92261505 199.98995972]
[106.47689056 185.19068909]
[104.03115845 170.39141846]
[101.58543396 155.59214783]
[99.13970184 140.79287720]
[96.69397736 125.99360657]
[94.24825287 111.19433594]
[91.47264099 96.45337677]
[88.36853027 81.77806854]
[83.53096771 74.02979279]
[85.32916260 66.86122894]
[82.44389343 52.14133835]
[79.55862427 37.42144775]
[69.31132507 25.36725998]
[74.45602417 11.38937378]
[71.57075500 -3.33051753]
[68.68547821 -18.05040932]
[65.80020905 -32.77030182]
[62.91493607 -47.49019241]
[60.02966309 -62.21008301]
[57.14439011 -76.92997742]
[54.25911713 -91.64986420]
[49.53745651 -99.46930695]
[51.44218063 -106.61030579]
[48.77638626 -121.37152100]
[38.70969391 -133.57693481]
[44.06193542 -147.47668457]
[41.39614105 -162.23789978]
[26.35539246 -162.34774780]
[11.59486675 -165.21884155]
[-2.38301873 -170.75192261]
[-15.10275936 -178.75720215]
[-26.13194084 -188.96081543]
[-35.09593582 -201.01417542]
[-41.69063950 -214.50592041]
[-45.69277191 -228.97589111]
[-46.96744156 -243.93090820]
[-45.47269821 -258.86154175]
[-41.26091385 -273.25939941]
[-34.47692490 -286.63461304]
[-25.35309029 -298.53228760]
[-14.20129585 -308.54809570]
[-1.40231848 -316.34207153]
[12.60718441 -321.64999390]
[9.94138908 -336.41119385]
[7.27559376 -351.17242432]
[4.60979843 -365.93365479]
[1.94400287 -380.69485474]
[-0.72179264 -395.45608521]
[-3.38758802 -410.21728516]
[-18.43347549 -411.15786743]
[-32.81685257 -415.67251587]
[-45.70148849 -423.49871826]
[-56.33828735 -434.18151855]
[-64.10883331 -447.09979248]
[-68.56137085 -461.50250244]
[-69.43701935 -476.55230713]
[-66.68488312 -491.37423706]
[-60.46496201 -505.10653687]
[-51.13887024 -516.95080566]
[-39.24882126 -526.21850586]
[-25.48608398 -532.37078857]
[-10.65080547 -535.04998779]
[4.39450932 -534.10028076]
[18.77514648 -529.57690430]
[31.65503502 -521.74291992]
[42.28535461 -511.05364990]
[50.04806900 -498.13067627]
[54.49187088 -483.72525024]
[55.35839844 -468.67492676]
[52.59727478 -453.85467529]
[46.36903000 -440.12615967]
[37.03575897 -428.28750610]
[25.14009476 -419.02700806]
[11.37362957 -412.88308716]
[14.03942490 -398.12188721]
[16.70521927 -383.36065674]
[19.37101555 -368.59942627]
[22.03681183 -353.83822632]
[24.70260620 -339.07699585]
[27.36840248 -324.31579590]
[42.34955597 -324.24340820]
[57.06622314 -321.41864014]
[71.01692200 -315.93618774]
[83.72599792 -307.98141479]
[94.75984192 -297.82400513]
[103.74168396 -285.80883789]
[110.36445618 -272.34420776]
[114.40129089 -257.88800049]
[115.71329498 -242.93220520]
[114.25432587 -227.98602295]
[110.07260895 -213.55862427]
[103.30915833 -200.14175415]
[94.19300842 -188.19302368]
[83.03345490 -178.12025452]
[70.20957947 -170.26757812]
[56.15736008 -164.90368652]
[58.82315445 -150.14247131]
[68.69917297 -138.99287415]
[63.53760147 -124.03731537]
[66.20339966 -109.27610016]
[68.97901154 -94.53514099]
[71.86428070 -79.81524658]
[74.74955750 -65.09535217]
[77.63482666 -50.37546539]
[80.52010345 -35.65557098]
[83.40537262 -20.93568230]
[86.29064178 -6.21579027]
[89.17591858 8.50410175]
[99.21684265 19.50542450]
[94.27851105 34.53617477]
[97.16378784 49.25606537]
[100.04905701 63.97595596]
[103.04383087 78.67395782]
[106.14794159 93.34926605]
[109.04942322 95.88969421]
[110.81702423 99.69672394]
[110.91019440 104.23526001]
[109.04752350 108.74861145]
[111.49324799 123.54788208]
[113.93897247 138.34715271]
[116.38470459 153.14642334]
[118.83042908 167.94569397]
[121.27616119 182.74496460]
[123.72188568 197.54423523]
[126.16761017 212.34350586]
[128.61334229 227.14277649]
[131.60810852 241.84077454]
[135.14778137 256.41714478]
[138.68745422 270.99353027]
[142.22712708 285.56991577]
[145.76679993 300.14627075]
[149.30647278 314.72265625]
[152.84614563 329.29904175]
[159.77790833 315.99673462]
[173.15287781 309.20632935]
[187.98255920 311.46041870]
[198.73580933 321.91830444]
[201.40196228 336.67944336]
[194.98658752 350.23834229]
[181.88247681 357.53778076]
[166.97712708 355.85534668]
[155.82928467 345.81744385]
[157.61175537 360.71118164]
[159.39422607 375.60488892]
[161.17668152 390.49859619]
[173.31700134 400.25823975]
[174.91250610 415.38796997]
[165.53338623 426.90176392]
[167.31584167 441.79550171]
[169.09831238 456.68920898]
[170.88078308 471.58291626]
[173.60540771 474.96380615]
[174.97474670 478.66372681]
[175.05493164 482.21746826]
[174.05636597 485.22900391]
[172.29870605 487.41275024]
[173.19151306 502.38616943]
[174.08433533 517.35955811]
[174.97714233 532.33294678]
[175.86996460 547.30639648]
[190.62580872 550.49505615]
[203.97363281 557.54760742]
[214.92292786 567.94067383]
[222.66119385 580.90295410]
[226.61421204 595.47265625]
[226.48861694 610.56860352]
[222.29374695 625.07049561]
[214.34089661 637.90228271]
[203.22018433 648.11169434]
[189.75688171 654.94122314]
[174.95002747 657.88397217]
[159.89840698 656.72155762]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 198]
[10 197]
[11 196]
[12 195]
[13 194]
[14 189]
[15 188]
[16 187]
[17 186]
[20 183]
[21 182]
[22 181]
[23 180]
[24 171]
[25 170]
[26 169]
[27 168]
[28 167]
[29 166]
[30 165]
[36 164]
[37 163]
[38 162]
[39 161]
[40 160]
[41 159]
[42 158]
[43 157]
[44 156]
[45 152]
[46 151]
[48 150]
[49 149]
[50 148]
[52 146]
[53 145]
[54 144]
[55 143]
[56 142]
[57 141]
[58 140]
[59 139]
[61 138]
[62 137]
[64 135]
[65 134]
[81 118]
[82 117]
[83 116]
[84 115]
[85 114]
[86 113]
[87 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
