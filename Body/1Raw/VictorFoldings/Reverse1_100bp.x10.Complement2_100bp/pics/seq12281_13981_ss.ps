%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCUUCAGUCCCAAUCCCACCAAUAUCAUCACACGUACCAAUAAUGAAAAUAAACCUCAACGUGGUUUUAAAAACCCCGGAUUCUGGUUACCUAUCGAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[83.70191956 560.28863525]
[68.64730072 561.64868164]
[53.86096954 558.50927734]
[40.65771866 551.14959717]
[30.21157265 540.22393799]
[23.45139503 526.70391846]
[20.97829437 511.79165649]
[23.01218033 496.81317139]
[29.37220001 483.10034180]
[39.49282455 471.87252808]
[52.47413254 464.12802124]
[67.16184235 460.55554199]
[68.05465698 445.58212280]
[68.94747162 430.60873413]
[69.84028625 415.63531494]
[70.73310089 400.66192627]
[60.68528748 389.72680664]
[61.37742615 374.52890015]
[72.91532135 364.06399536]
[73.80813599 349.09057617]
[74.70095062 334.11715698]
[75.59376526 319.14376831]
[68.62772369 305.97851562]
[77.17270660 292.66336060]
[70.20666504 279.49810791]
[78.75164795 266.18295288]
[79.64446259 251.20953369]
[76.90466309 244.34547424]
[80.66368103 236.02035522]
[73.89441681 222.75286865]
[82.63669586 209.56639099]
[83.75234985 194.60794067]
[81.11504364 187.70384216]
[84.99758911 179.43562317]
[86.33582306 164.49543762]
[87.67405701 149.55525208]
[81.10308075 136.18843079]
[90.04072571 123.13358307]
[87.50650024 116.19099426]
[91.51171875 107.98148346]
[82.11527252 119.67365265]
[68.61381531 126.20899200]
[53.61426926 126.32563019]
[40.01280975 120.00104523]
[30.43566895 108.45642090]
[26.73204041 93.92083740]
[29.61703873 79.20088959]
[38.53361511 67.13877869]
[51.76011658 60.06349182]
[66.74271393 59.34116745]
[80.58850098 65.11127472]
[90.62407684 76.25968933]
[94.91181946 90.63510895]
[99.09883118 76.23132324]
[103.28583527 61.82754135]
[107.47284698 47.42375946]
[111.65985870 33.01997757]
[115.84687042 18.61619759]
[114.60079956 13.54723358]
[115.34888458 8.96534920]
[117.57166290 5.54857874]
[120.55582428 3.67052388]
[125.38182831 -10.53193188]
[130.20782471 -24.73438644]
[126.20281219 -42.70774078]
[139.84162903 -53.75081635]
[136.72441101 -69.26189423]
[148.00149536 -78.99208832]
[152.61550903 -93.26482391]
[157.22950745 -107.53755951]
[161.63050842 -121.87740326]
[165.81752014 -136.28118896]
[170.00453186 -150.68496704]
[174.19154358 -165.08874512]
[178.37855530 -179.49253845]
[174.80088806 -194.90391541]
[185.78326416 -204.96557617]
[189.97027588 -219.36935425]
[191.64181519 -234.27592468]
[190.74900818 -249.24932861]
[189.85618591 -264.22274780]
[188.96337891 -279.19613647]
[188.07055664 -294.16955566]
[187.17774963 -309.14294434]
[186.28492737 -324.11636353]
[185.39210510 -339.08975220]
[184.49929810 -354.06317139]
[172.74223328 -344.74804688]
[158.09526062 -347.98324585]
[151.35560608 -361.38388062]
[157.49147034 -375.07150269]
[171.97973633 -378.95611572]
[184.13938904 -370.17556763]
[184.36271667 -385.17391968]
[184.58604431 -400.17224121]
[184.69770813 -415.17184448]
[184.69770813 -430.17184448]
[184.69770813 -445.17184448]
[170.64051819 -450.95663452]
[159.87065125 -461.68408203]
[154.03041077 -475.71832275]
[154.01042175 -490.91925049]
[159.81370544 -504.96881104]
[170.55532837 -515.72454834]
[184.59724426 -521.54632568]
[199.79817200 -521.54632568]
[213.84010315 -515.72454834]
[224.58171082 -504.96881104]
[230.38499451 -490.91925049]
[230.36500549 -475.71832275]
[224.52476501 -461.68408203]
[213.75489807 -450.95663452]
[199.69770813 -445.17184448]
[199.69770813 -430.17184448]
[199.69770813 -415.17184448]
[202.84121704 -408.48303223]
[199.58438110 -399.94891357]
[199.36105347 -384.95059204]
[199.13772583 -369.95223999]
[199.47270203 -354.95599365]
[200.36550903 -339.98257446]
[201.25833130 -325.00918579]
[202.15115356 -310.03576660]
[203.04396057 -295.06237793]
[203.93678284 -280.08895874]
[204.82958984 -265.11553955]
[205.72241211 -250.14215088]
[206.61523438 -235.16874695]
[212.48654175 -248.97192383]
[221.56547546 -260.91232300]
[233.29684448 -270.25976562]
[246.96330261 -276.44265747]
[261.72909546 -279.08291626]
[276.69134521 -278.01910400]
[290.93502808 -273.31625366]
[303.58920288 -265.26193237]
[313.88006592 -254.34870911]
[321.17825317 -241.24389648]
[325.03756714 -226.74887085]
[325.22195435 -211.75000000]
[321.72012329 -197.16447449]
[314.74627686 -183.88421631]
[304.72683716 -172.72131348]
[292.27447510 -164.35836792]
[278.15066528 -159.30679321]
[263.21911621 -157.87547302]
[248.39286804 -160.15196228]
[234.57856750 -165.99703979]
[222.62094116 -175.05326843]
[213.25123596 -186.76687622]
[207.04237366 -200.42155457]
[204.37406921 -215.18234253]
[200.18705750 -200.77856445]
[204.06419373 -186.39743042]
[192.78233337 -175.30552673]
[188.59532166 -160.90173340]
[184.40830994 -146.49795532]
[180.22129822 -132.09417725]
[176.03428650 -117.69039154]
[177.50857544 -113.14775848]
[176.14483643 -107.63076019]
[171.50224304 -102.92354584]
[166.88822937 -88.65081787]
[162.27423096 -74.37808228]
[165.72146606 -59.88788605]
[154.11436462 -49.13680649]
[159.34111023 -38.22773743]
[155.61390686 -26.29912567]
[144.41027832 -19.90839005]
[139.58427429 -5.70593405]
[134.75828552 8.49652195]
[130.25065613 22.80320740]
[126.06364441 37.20698929]
[121.87663269 51.61077118]
[117.68962097 66.01455688]
[113.50260925 80.41833496]
[109.31559753 94.82212067]
[106.43032837 109.54200745]
[104.98090363 124.47181702]
[111.45616150 138.90724182]
[102.61424255 150.89347839]
[101.27600861 165.83366394]
[99.93777466 180.77384949]
[98.71080017 195.72358704]
[97.59515381 210.68203735]
[104.28461456 225.01945496]
[95.62213135 237.13600159]
[94.61787415 252.10235596]
[93.72505951 267.07574463]
[100.62723541 281.31198120]
[92.14611053 293.55618286]
[99.04829407 307.79241943]
[90.56716919 320.03659058]
[89.67435455 335.00997925]
[88.78153992 349.98339844]
[87.88872528 364.95678711]
[98.10131073 376.71862793]
[96.98256683 391.89108276]
[85.70650482 401.55474854]
[84.81369019 416.52813721]
[83.92087555 431.50155640]
[83.02806091 446.47494507]
[82.13524628 461.44836426]
[96.29435730 466.74090576]
[108.26340485 475.97308350]
[116.97810364 488.32400513]
[121.66354370 502.69543457]
[121.90311432 517.80944824]
[117.67549896 532.32220459]
[109.35662079 544.94311523]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 203]
[13 202]
[14 201]
[15 200]
[16 199]
[19 196]
[20 195]
[21 194]
[22 193]
[24 191]
[26 189]
[27 188]
[29 187]
[31 185]
[32 184]
[34 183]
[35 182]
[36 181]
[38 179]
[40 178]
[53 177]
[54 176]
[55 175]
[56 174]
[57 173]
[58 172]
[62 171]
[63 170]
[64 169]
[66 166]
[68 164]
[69 163]
[70 162]
[71 159]
[72 158]
[73 157]
[74 156]
[75 155]
[77 153]
[78 152]
[79 128]
[80 127]
[81 126]
[82 125]
[83 124]
[84 123]
[85 122]
[86 121]
[87 120]
[93 119]
[94 118]
[95 117]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
