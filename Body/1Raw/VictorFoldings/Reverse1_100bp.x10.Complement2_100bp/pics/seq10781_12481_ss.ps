%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[62.85558701 478.97268677]
[53.43426132 467.17687988]
[47.54583359 453.27621460]
[45.62726974 438.30215454]
[47.82094193 423.36596680]
[53.96405792 409.57592773]
[63.60076141 397.95541382]
[76.01594543 389.36669922]
[90.28832245 384.44717407]
[89.39550781 369.47375488]
[88.50268555 354.50036621]
[87.60987091 339.52694702]
[86.71705627 324.55355835]
[83.18100739 318.06369019]
[85.92410278 309.35089111]
[85.25431824 294.36584473]
[81.81527710 287.82406616]
[84.68779755 279.15304565]
[84.24118805 264.15969849]
[83.79457855 249.16635132]
[83.34797668 234.17300415]
[73.12593842 245.15069580]
[58.25501251 247.11425781]
[45.53398514 239.16595459]
[40.77873993 224.93965149]
[46.16331100 210.93942261]
[59.22594452 203.56599426]
[73.99457550 206.19036865]
[83.71784973 217.61448669]
[84.83349609 202.65603638]
[85.94914246 187.69758606]
[87.06479645 172.73912048]
[88.18044281 157.78067017]
[89.29608917 142.82221985]
[79.41220093 131.73870850]
[80.33053589 116.55281830]
[92.02295685 106.26082611]
[89.43434906 98.62724304]
[93.26820374 91.08850861]
[94.60643768 76.14832306]
[95.94467163 61.20813751]
[97.28290558 46.26795578]
[98.62113953 31.32776833]
[99.95937347 16.38758469]
[101.29760742 1.44739878]
[93.49104309 14.25589466]
[83.22334290 25.19090462]
[70.93110657 33.78746796]
[57.13699722 39.68004990]
[42.42755127 42.61809921]
[27.42821693 42.47668839]
[12.77677727 39.26182938]
[-0.90378177 33.11022186]
[-13.03175640 24.28343010]
[-23.09145737 13.15677738]
[-30.65514374 0.20337464]
[-35.40120316 -14.02599430]
[-37.12782669 -28.92628860]
[-35.76160431 -43.86394119]
[-31.36062431 -58.20379257]
[-24.11201668 -71.33610535]
[-14.32400036 -82.70249176]
[-2.41276479 -91.81964874]
[11.11521816 -98.29989624]
[25.68473244 -101.86770630]
[40.67627335 -102.37136841]
[55.45239639 -99.78945923]
[69.38481140 -94.23177338]
[81.88110352 -85.93462372]
[92.40991974 -75.25080872]
[100.52358246 -62.63460922]
[105.87708282 -48.62247086]
[108.24279022 -33.81019592]
[107.52009583 -18.82744408]
[114.69545746 -31.99991989]
[121.77256775 -45.22544861]
[128.84967041 -58.45097351]
[135.82812500 -71.72882080]
[142.70753479 -85.05825043]
[149.58694458 -98.38768005]
[156.46635437 -111.71710968]
[163.34577942 -125.04653931]
[170.22518921 -138.37596130]
[177.10459900 -151.70539856]
[170.30030823 -165.52595520]
[172.90821838 -180.52769470]
[183.72172546 -190.99345398]
[198.44810486 -193.06021118]
[205.32751465 -206.38963318]
[212.10751343 -219.76991272]
[218.78770447 -233.20028687]
[225.46789551 -246.63066101]
[232.14810181 -260.06103516]
[238.82829285 -273.49142456]
[226.23252869 -281.66726685]
[214.65087891 -291.22567749]
[204.23432922 -302.04202271]
[195.11865234 -313.97525024]
[187.42272949 -326.86984253]
[181.24687195 -340.55767822]
[176.67158508 -354.86029053]
[173.75654602 -369.59121704]
[172.53973389 -384.55841064]
[173.03701782 -399.56674194]
[175.24191284 -414.42059326]
[179.12568665 -428.92623901]
[184.63769531 -442.89462280]
[191.70606995 -456.14361572]
[200.23869324 -468.50048828]
[210.12428284 -479.80413818]
[221.23397827 -489.90722656]
[233.42295837 -498.67800903]
[246.53228760 -506.00216675]
[260.39108276 -511.78417969]
[274.81863403 -515.94873047]
[289.62689209 -518.44146729]
[304.62274170 -519.22985840]
[319.61074829 -518.30371094]
[334.39547729 -515.67510986]
[348.78417969 -511.37820435]
[362.58926392 -505.46911621]
[375.63076782 -498.02487183]
[387.73864746 -489.14248657]
[398.75506592 -478.93777466]
[408.53643799 -467.54379272]
[416.95516968 -455.10906982]
[423.90155029 -441.79568481]
[429.28503418 -427.77728271]
[433.03536987 -413.23657227]
[435.10375977 -398.36309814]
[435.46316528 -383.35083008]
[434.10891724 -368.39541626]
[431.05865479 -353.69189453]
[426.35220337 -339.43191528]
[420.05087280 -325.80139160]
[412.23681641 -312.97805786]
[403.01193237 -301.12902832]
[392.49645996 -290.40884399]
[380.82748413 -280.95724487]
[368.15716553 -272.89739990]
[354.65066528 -266.33447266]
[340.48406982 -261.35397339]
[325.84207153 -258.02084351]
[310.91555786 -256.37850952]
[295.89913940 -256.44842529]
[280.98858643 -258.22967529]
[266.37826538 -261.69900513]
[252.25866699 -266.81121826]
[245.57847595 -253.38084412]
[238.89828491 -239.95046997]
[232.21807861 -226.52009583]
[225.53788757 -213.08970642]
[225.37361145 -205.70088196]
[218.65695190 -199.51022339]
[211.77754211 -186.18078613]
[218.62423706 -172.98001099]
[216.35810852 -158.10289001]
[205.64102173 -147.28636169]
[190.43402100 -144.82598877]
[183.55461121 -131.49655151]
[176.67520142 -118.16712189]
[169.79579163 -104.83769226]
[162.91638184 -91.50827026]
[156.03697205 -78.17884064]
[149.15754700 -64.84941101]
[148.88328552 -57.46384430]
[142.07519531 -51.37387085]
[134.99809265 -38.14834213]
[127.92098999 -24.92281342]
[127.53678894 -17.54215050]
[120.63878632 -11.55421448]
[116.23779297 2.78563285]
[114.89955902 17.72581863]
[113.56132507 32.66600418]
[112.22309113 47.60618973]
[110.88484955 62.54637146]
[109.54661560 77.48655701]
[108.20838165 92.42674255]
[106.98140717 107.37648010]
[117.01774597 119.28906250]
[115.67322540 134.44317627]
[104.25454712 143.93786621]
[103.13889313 158.89631653]
[102.02324677 173.85478210]
[100.90760040 188.81323242]
[99.79195404 203.77168274]
[98.67630005 218.73013306]
[98.34132385 233.72639465]
[98.78793335 248.71974182]
[99.23453522 263.71310425]
[99.68114471 278.70645142]
[100.23935699 293.69604492]
[100.90914154 308.68109131]
[101.69046021 323.66073608]
[102.58327484 338.63412476]
[103.47609711 353.60754395]
[104.36891174 368.58093262]
[105.26172638 383.55435181]
[120.01757050 386.74304199]
[133.36538696 393.79556274]
[144.31469727 404.18862915]
[152.05296326 417.15093994]
[156.00598145 431.72064209]
[155.88038635 446.81655884]
[151.68551636 461.31848145]
[143.73265076 474.15026855]
[132.61195374 484.35968018]
[119.14864349 491.18917847]
[104.34178925 494.13192749]
[89.29016113 492.96954346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 198]
[10 197]
[11 196]
[12 195]
[13 194]
[15 193]
[16 192]
[18 191]
[19 190]
[20 189]
[21 188]
[29 187]
[30 186]
[31 185]
[32 184]
[33 183]
[34 182]
[37 179]
[39 178]
[40 177]
[41 176]
[42 175]
[43 174]
[44 173]
[45 172]
[74 171]
[75 169]
[76 168]
[77 167]
[78 165]
[79 164]
[80 163]
[81 162]
[82 161]
[83 160]
[84 159]
[88 155]
[89 154]
[90 152]
[91 151]
[92 150]
[93 149]
[94 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
