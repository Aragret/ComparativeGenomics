%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[175.85256958 599.51159668]
[161.33822632 595.38891602]
[148.38598633 587.64929199]
[137.87893677 576.82043457]
[130.53347778 563.64062500]
[126.85041809 549.00854492]
[127.08088684 533.92181396]
[131.20916748 519.40911865]
[138.95379639 506.45983887]
[149.78671265 495.95697021]
[162.96932983 488.61660767]
[177.60281372 484.93917847]
[177.82614136 469.94085693]
[170.27919006 457.09979248]
[178.22109985 443.41635132]
[178.44442749 428.41799927]
[178.66775513 413.41967773]
[178.89108276 398.42132568]
[179.11441040 383.42300415]
[177.99876404 368.46453857]
[175.55303955 353.66528320]
[173.10731506 338.86599731]
[169.35101318 324.34393311]
[164.31408691 310.21490479]
[159.27717590 296.08587646]
[154.24026489 281.95684814]
[149.20333862 267.82781982]
[137.64155579 258.43771362]
[140.29557800 242.84068298]
[135.25865173 228.71165466]
[130.22174072 214.58262634]
[119.43067932 209.11640930]
[115.11870575 197.38650513]
[120.10933685 185.49296570]
[115.28333282 171.29049683]
[110.15496063 165.96870422]
[110.49292755 156.84053040]
[105.87891388 142.56779480]
[90.97476959 142.01338196]
[77.15780640 136.39797974]
[66.09244537 126.39804077]
[59.11162949 113.21816254]
[57.05627441 98.44600677]
[60.17396545 83.86105347]
[68.08914948 71.22021484]
[79.84835052 62.04621887]
[75.23434448 47.77348328]
[70.62033081 33.50075150]
[66.00632477 19.22801781]
[49.85765076 14.19647503]
[39.98801804 0.66533893]
[40.12700272 -15.91604996]
[50.02174759 -29.01457977]
[45.19575119 -43.21703720]
[40.36975098 -57.41949081]
[31.49909592 -45.32356644]
[16.51830673 -44.56465149]
[6.47066450 -55.70219803]
[8.76291847 -70.52601624]
[21.70530319 -78.10853577]
[35.75602341 -72.86140442]
[31.99972534 -87.38346100]
[28.24342346 -101.90551758]
[18.49768257 -90.50286865]
[3.50194168 -90.86027527]
[-5.68949747 -102.71427917]
[-2.30104804 -117.32654572]
[11.16945171 -123.92546082]
[24.79099274 -117.64781189]
[22.12519646 -132.40902710]
[12.05850315 -144.61444092]
[17.41074753 -158.51419067]
[12.80602741 -166.40306091]
[14.81686115 -173.51490784]
[12.37113380 -188.31417847]
[2.48727632 -200.66812134]
[8.04587364 -214.48663330]
[-6.93320704 -216.35935974]
[-20.76370621 -222.37098694]
[-32.32817459 -232.02645874]
[-40.69487762 -244.53671265]
[-45.19286346 -258.88314819]
[-45.46575546 -273.90051270]
[-41.49998856 -288.37164307]
[-33.62519836 -301.12600708]
[-22.48685455 -311.13442993]
[-8.99334717 -317.59216309]
[-11.43907452 -332.39144897]
[-13.88480186 -347.19070435]
[-28.89230728 -348.82696533]
[-42.90140915 -354.45260620]
[-54.87253189 -363.65014648]
[-63.91734695 -375.73706055]
[-69.36466980 -389.81646729]
[-70.81026459 -404.84353638]
[-68.14685822 -419.70318604]
[-61.57210541 -433.29269409]
[-51.57388306 -444.60366821]
[-38.89413452 -452.79675293]
[-24.47377777 -457.26394653]
[-9.38289928 -457.67376709]
[5.25865746 -453.99581909]
[18.36439133 -446.50299072]
[28.96177101 -435.75134277]
[36.26440048 -422.53869629]
[39.73037338 -407.84552002]
[39.10249329 -392.76214600]
[34.42735672 -378.40783691]
[26.05188370 -365.84780884]
[14.59759331 -356.01412964]
[0.91446930 -349.63644409]
[3.36019659 -334.83715820]
[5.80592394 -320.03790283]
[20.65966034 -318.26480103]
[34.42582703 -312.37210083]
[45.98541260 -302.82946777]
[54.39616394 -290.40371704]
[58.96936798 -276.09698486]
[59.32626343 -261.06619263]
[55.42938232 -246.52926636]
[47.58627319 -233.66650391]
[36.42527390 -223.52478027]
[22.84514427 -216.93235779]
[32.55406570 -205.63696289]
[27.17040443 -190.75990295]
[29.61613274 -175.96063232]
[32.17196274 -161.17997742]
[42.04798126 -150.03038025]
[36.88641357 -135.07482910]
[39.55220795 -120.31360626]
[42.76548386 -105.66181946]
[46.52178574 -91.13976288]
[50.27808380 -76.61769867]
[54.57220840 -62.24549103]
[59.39820480 -48.04303360]
[64.22420502 -33.84057617]
[77.28762817 -31.08576202]
[87.36479950 -22.16417503]
[91.75263977 -9.32608795]
[89.20383453 4.10976219]
[80.27906036 14.61400795]
[84.89306641 28.88674164]
[89.50707245 43.15947342]
[94.12108612 57.43220901]
[109.02523041 57.98662567]
[122.84219360 63.60202026]
[133.90754700 73.60195923]
[140.88836670 86.78183746]
[142.94372559 101.55399323]
[139.82603455 116.13894653]
[131.91084290 128.77978516]
[120.15164948 137.95378113]
[124.76565552 152.22651672]
[129.48579407 166.46450806]
[134.31178284 180.66696167]
[148.43798828 192.47932434]
[144.35076904 209.54571533]
[149.38769531 223.67474365]
[154.42460632 237.80377197]
[166.34666443 248.20449829]
[163.33236694 262.79089355]
[168.36929321 276.91995239]
[173.40620422 291.04898071]
[178.44311523 305.17800903]
[183.48004150 319.30703735]
[186.90397644 304.70303345]
[196.25775146 292.97671509]
[209.73530579 286.39221191]
[224.73432922 286.22091675]
[238.35874939 292.49588013]
[247.97789001 304.00552368]
[251.73446655 318.52752686]
[248.90312195 333.25787354]
[240.03056335 345.35241699]
[226.82992554 352.47586060]
[211.85006714 353.25277710]
[197.98333740 347.53317261]
[187.90658569 336.42028809]
[190.35231018 351.21954346]
[192.79803467 366.01882935]
[198.76287842 352.25579834]
[210.05175781 342.37847900]
[224.48495483 338.29403687]
[239.27566528 340.79110718]
[251.56800842 349.38751221]
[258.98852539 362.42346191]
[260.10446167 377.38186646]
[254.70031738 391.37457275]
[243.81956482 401.69973755]
[229.56309509 406.36376953]
[214.68362427 404.46609497]
[202.05412292 396.37313843]
[194.11274719 383.64633179]
[193.88941956 398.64465332]
[193.66609192 413.64300537]
[193.44276428 428.64132690]
[193.21943665 443.63967896]
[200.75041199 457.55352783]
[192.82447815 470.16418457]
[192.60115051 485.16250610]
[207.11866760 489.27398682]
[220.07688904 497.00360107]
[230.59230042 507.82434082]
[237.94793701 520.99847412]
[241.64228821 535.62768555]
[241.42347717 550.71459961]
[237.30639648 565.23052979]
[229.57177734 578.18572998]
[218.74696350 588.69696045]
[205.57003784 596.04754639]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 200]
[13 199]
[15 197]
[16 196]
[17 195]
[18 194]
[19 193]
[20 180]
[21 179]
[22 178]
[23 165]
[24 164]
[25 163]
[26 162]
[27 161]
[29 159]
[30 158]
[31 157]
[34 155]
[35 154]
[37 153]
[38 152]
[46 144]
[47 143]
[48 142]
[49 141]
[53 136]
[54 135]
[55 134]
[61 133]
[62 132]
[63 131]
[69 130]
[70 129]
[72 127]
[74 126]
[75 125]
[77 123]
[87 113]
[88 112]
[89 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
