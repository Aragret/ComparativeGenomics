%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[56.91026688 461.92388916]
[42.08100510 458.69009399]
[29.42346382 450.31448364]
[20.64947319 437.92974854]
[16.94564629 423.21084595]
[18.81289101 408.14837646]
[25.99868011 394.77941895]
[37.53119659 384.91201782]
[51.85075760 379.88067627]
[52.29736328 364.88732910]
[52.74396896 349.89398193]
[53.19057465 334.90063477]
[53.63718033 319.90728760]
[46.28224945 306.95526123]
[54.42700195 293.39160156]
[54.87360764 278.39822388]
[46.80953217 269.38174438]
[47.05889893 256.88687134]
[56.03333664 247.62284851]
[56.70312119 232.63780212]
[57.37290573 217.65277100]
[50.21162415 204.59269714]
[58.55741882 191.15177917]
[51.28195572 204.26924133]
[41.01007080 215.20031738]
[28.36988831 223.27656555]
[14.13436413 228.00411987]
[-0.82599628 229.09390259]
[-15.59636021 226.47926331]
[-29.27351379 220.32008362]
[-41.02109528 210.99301147]
[-50.12073517 199.06838989]
[-56.01598358 185.27542114]
[-58.34635162 170.45755005]
[-56.96932602 155.52088928]
[-51.96912003 141.37882996]
[-43.65149689 128.89614868]
[-32.52508163 118.83618164]
[-19.27025795 111.81410217]
[-4.69756508 108.25930023]
[10.30187225 108.38916016]
[24.81083298 112.19574738]
[37.94208908 119.44627380]
[48.89265823 129.69737244]
[56.99290848 142.32218933]
[61.74750519 156.54870605]
[62.86570358 171.50698853]
[68.52848816 157.61697388]
[74.19127655 143.72694397]
[79.85406494 129.83691406]
[85.51685333 115.94688416]
[91.17963409 102.05686188]
[90.20281219 98.32614899]
[90.87517548 94.18299103]
[93.34405518 90.37357330]
[97.41790771 87.68218231]
[103.69527435 74.05886841]
[109.97263336 60.43555069]
[116.24999237 46.81223297]
[122.11894989 33.00805664]
[127.57431030 19.03525925]
[133.02966309 5.06246185]
[138.48503113 -8.91033554]
[143.94038391 -22.88313293]
[149.39573669 -36.85593033]
[147.20727539 -52.52504730]
[159.04351807 -61.56677246]
[164.49887085 -75.53957367]
[169.95423889 -89.51236725]
[170.16018677 -98.64447784]
[175.59622192 -103.65159607]
[179.46054077 -118.14528656]
[181.46455383 -133.01081848]
[183.46856689 -147.87634277]
[185.47257996 -162.74186707]
[187.47659302 -177.60740662]
[189.48060608 -192.47293091]
[188.69927979 -207.45256042]
[185.15960693 -222.02894592]
[181.61993408 -236.60531616]
[178.08026123 -251.18168640]
[174.54058838 -265.75805664]
[171.00091553 -280.33444214]
[155.95095825 -279.89556885]
[141.13871765 -282.59573364]
[127.21169281 -288.31692505]
[114.77873230 -296.80899048]
[104.38334656 -307.70068359]
[96.47997284 -320.51593018]
[91.41412354 -334.69448853]
[89.40724945 -349.61648560]
[90.54708099 -364.62960815]
[94.78379059 -379.07760620]
[101.93216705 -392.32879639]
[111.67971802 -403.80395508]
[123.60031891 -413.00137329]
[137.17285156 -419.51904297]
[151.80398560 -423.07202148]
[166.85411072 -423.50497437]
[181.66529846 -420.79898071]
[195.59007263 -415.07232666]
[208.01968384 -406.57537842]
[218.41078186 -395.67956543]
[226.30911255 -382.86120605]
[231.36938477 -368.68069458]
[233.37039185 -353.75790405]
[232.22465515 -338.74520874]
[227.98226929 -324.29888916]
[220.82867432 -311.05050659]
[211.07661438 -299.57919312]
[199.15238953 -290.38644409]
[185.57728577 -283.87411499]
[189.11695862 -269.29772949]
[192.65663147 -254.72135925]
[196.19630432 -240.14498901]
[199.73597717 -225.56861877]
[203.27565002 -210.99223328]
[206.55216980 -225.63002014]
[213.07327271 -239.13835144]
[222.49688721 -250.80862427]
[234.32868958 -260.02865601]
[247.94796753 -266.31475830]
[262.64031982 -269.33715820]
[277.63497925 -268.93734741]
[292.14538574 -265.13629150]
[305.41033936 -258.13336182]
[316.73400879 -248.29592896]
[325.52233887 -236.14006042]
[331.31433105 -222.30340576]
[333.80612183 -207.51182556]
[332.86706543 -192.54124451]
[328.54635620 -178.17700195]
[321.07067871 -165.17260742]
[310.83218384 -154.21025085]
[298.36798096 -145.86499023]
[284.33187866 -140.57460022]
[269.46023560 -138.61662292]
[254.53312683 -140.09373474]
[240.33364868 -144.92848206]
[227.60665894 -152.86723328]
[217.01979065 -163.49353027]
[209.12840271 -176.24993896]
[204.34613037 -190.46891785]
[202.34211731 -175.60339355]
[200.33810425 -160.73785400]
[198.33409119 -145.87232971]
[196.33007812 -131.00680542]
[194.32606506 -116.14127350]
[203.14591980 -128.27429199]
[215.38954163 -136.93995667]
[229.76484680 -141.22373962]
[244.75474548 -140.67358398]
[258.77734375 -135.34753418]
[270.35278320 -125.80767059]
[278.25952148 -113.06076050]
[281.66308594 -98.45200348]
[280.20431519 -83.52310181]
[274.03717041 -69.84954834]
[263.81246948 -58.87432861]
[250.60923767 -51.75569534]
[235.82087708 -49.24488831]
[221.00801086 -51.60688400]
[207.73388672 -58.59241486]
[197.39935303 -69.46427917]
[191.09503174 -83.07514191]
[189.48625183 -97.98880768]
[183.92703247 -84.05701447]
[178.47167969 -70.08421326]
[173.01631165 -56.11141586]
[175.59497070 -41.44172668]
[163.36853027 -31.40057373]
[157.91317749 -17.42777634]
[152.45782471 -3.45497870]
[147.00247192 10.51781940]
[141.54710388 24.49061775]
[136.09175110 38.46341324]
[137.09248352 41.08194351]
[137.11627197 44.25464630]
[135.94685364 47.61140823]
[133.50579834 50.71073151]
[129.87330627 53.08959579]
[123.59594727 66.71291351]
[117.31858826 80.33622742]
[111.04122925 93.95954132]
[105.06966400 107.71965027]
[99.40687561 121.60967255]
[93.74408722 135.49969482]
[88.08130646 149.38972473]
[82.41851807 163.27975464]
[76.75572968 177.16978455]
[73.54245758 191.82156372]
[80.65583038 205.95346069]
[72.35794830 218.32255554]
[71.68815613 233.30758667]
[71.01837158 248.29263306]
[79.88116455 264.43365479]
[69.86695862 278.84484863]
[69.42034912 293.83819580]
[76.74333954 307.86260986]
[68.63053131 320.35388184]
[68.18392944 335.34722900]
[67.73731995 350.34057617]
[67.29071045 365.33392334]
[66.84410858 380.32727051]
[80.83881378 386.20202637]
[91.76355743 396.73837280]
[98.14087677 410.51132202]
[99.10827637 425.65820312]
[94.53493500 440.13055420]
[85.03934479 451.97109985]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 204]
[10 203]
[11 202]
[12 201]
[13 200]
[15 198]
[16 197]
[19 195]
[20 194]
[21 193]
[23 191]
[47 190]
[48 189]
[49 188]
[50 187]
[51 186]
[52 185]
[56 184]
[57 183]
[58 182]
[59 181]
[60 176]
[61 175]
[62 174]
[63 173]
[64 172]
[65 171]
[67 169]
[68 168]
[69 167]
[71 166]
[72 148]
[73 147]
[74 146]
[75 145]
[76 144]
[77 143]
[78 117]
[79 116]
[80 115]
[81 114]
[82 113]
[83 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
