%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[167.88825989 466.31692505]
[178.79681396 455.92697144]
[191.74412537 448.22534180]
[187.13011169 433.95260620]
[182.51609802 419.67987061]
[177.79597473 405.44186401]
[172.96997070 391.23941040]
[168.14396667 377.03695679]
[156.72328186 367.47573853]
[159.60920715 351.91998291]
[154.67761230 337.75384521]
[149.64070129 323.62481689]
[144.60379028 309.49578857]
[139.56686401 295.36676025]
[137.09490967 294.04479980]
[134.99763489 291.66403198]
[133.68098450 288.36224365]
[133.49351501 284.42150879]
[134.67811584 280.24411011]
[132.28921509 278.77737427]
[130.33737183 276.27600098]
[129.21957397 272.90170288]
[129.26698303 268.95678711]
[130.69813538 264.85729980]
[127.37586975 250.22984314]
[117.01184845 239.53234863]
[121.50046539 224.36123657]
[111.13644409 213.66374207]
[115.62506104 198.49263000]
[112.30280304 183.86515808]
[108.98054504 169.23770142]
[105.54948425 154.63537598]
[102.00981140 140.05900574]
[98.47013855 125.48262787]
[94.93046570 110.90625763]
[91.17416382 96.38419342]
[87.20207214 81.91967010]
[83.22997284 67.45514679]
[72.11450958 56.19650650]
[76.20533752 41.87469101]
[72.23323822 27.41016769]
[68.26114655 12.94564342]
[64.07413483 -1.45813823]
[59.67313385 -15.79798508]
[55.27213669 -30.13783264]
[50.87113953 -44.47768021]
[46.47013855 -58.81752777]
[42.06914139 -73.15737152]
[37.45513153 -87.43010712]
[32.62913513 -101.63256073]
[27.80313683 -115.83502197]
[22.97713852 -130.03747559]
[18.15114212 -144.23992920]
[9.28048515 -132.14399719]
[-5.70030451 -131.38508606]
[-15.74794579 -142.52262878]
[-13.45569229 -157.34645081]
[-0.51330739 -164.92897034]
[13.53741455 -159.68183899]
[9.78111362 -174.20390320]
[6.02481318 -188.72595215]
[-7.31056738 -196.77613831]
[-10.91311836 -211.55708313]
[-3.15632176 -224.22071838]
[-6.91262245 -238.74278259]
[-10.66892338 -253.26483154]
[-14.42522335 -267.78689575]
[-27.63373566 -280.61718750]
[-22.28849792 -297.33233643]
[-26.26059341 -311.79684448]
[-30.23268890 -326.26138306]
[-34.20478439 -340.72589111]
[-40.07548523 -326.92245483]
[-52.41672897 -318.39639282]
[-67.40444946 -317.78961182]
[-80.39453888 -325.29013062]
[-87.36187744 -338.57379150]
[-86.14756012 -353.52456665]
[-77.12785339 -365.50976562]
[-63.09761047 -370.81564331]
[-48.40425873 -367.79812622]
[-37.60056305 -357.39196777]
[-39.60457993 -372.25750732]
[-41.60859299 -387.12304688]
[-43.61260605 -401.98855591]
[-53.12425995 -414.63131714]
[-47.15669632 -428.27819824]
[-49.16070938 -443.14373779]
[-51.16472244 -458.00924683]
[-66.14362335 -459.76522827]
[-80.21493530 -465.19192505]
[-92.49413300 -473.94818115]
[-102.20933533 -485.48358154]
[-108.74983978 -499.07302856]
[-111.70449066 -513.86224365]
[-110.88757324 -528.92156982]
[-106.35042572 -543.30438232]
[-98.37827301 -556.10656738]
[-87.47223663 -566.52331543]
[-74.31787872 -573.89990234]
[-59.74210358 -577.77258301]
[-44.66115189 -577.89788818]
[-30.02302551 -574.26800537]
[-16.74788857 -567.11108398]
[-5.67022705 -556.87701416]
[2.51360750 -544.20910645]
[7.28917217 -529.90368652]
[8.35627174 -514.86004639]
[5.64782572 -500.02374268]
[-0.66590923 -486.32748413]
[-10.18804646 -474.63220215]
[-22.32001686 -465.67306519]
[-36.29919434 -460.01327515]
[-34.29518127 -445.14773560]
[-32.29116821 -430.28222656]
[-22.92285538 -418.70275879]
[-28.74707794 -403.99258423]
[-26.74306297 -389.12704468]
[-24.73904991 -374.26153564]
[-22.73503685 -359.39599609]
[-19.74026299 -344.69799805]
[-15.76816559 -330.23345947]
[-11.79607010 -315.76895142]
[-7.82397366 -301.30441284]
[2.53064108 -295.05075073]
[5.95823908 -283.03262329]
[0.09683550 -271.54318237]
[3.85313606 -257.02114868]
[7.60943699 -242.49908447]
[11.36573792 -227.97702026]
[24.29004288 -220.66279602]
[28.30633736 -205.98886108]
[20.54687309 -192.48225403]
[24.30317307 -177.96020508]
[28.05947304 -163.43814087]
[32.35359573 -149.06593323]
[37.17959595 -134.86347961]
[42.00559235 -120.66101837]
[46.83158875 -106.45855713]
[51.65758896 -92.25610352]
[55.46960449 -89.37902832]
[57.51473236 -84.07672119]
[56.40898895 -77.55837250]
[60.80998611 -63.21852493]
[65.21098328 -48.87867737]
[69.61198425 -34.53882980]
[74.01297760 -20.19898415]
[78.41397858 -5.85913610]
[82.13864899 -2.86983800]
[84.02499390 2.49101114]
[82.72566986 8.97354794]
[86.69776154 23.43807220]
[90.66986084 37.90259552]
[101.50121307 48.12663651]
[97.69449615 63.48305130]
[101.66659546 77.94757843]
[105.63868713 92.41210175]
[109.49178314 95.97126007]
[111.07646942 101.43588257]
[109.50684357 107.36658478]
[113.04651642 121.94295502]
[116.58618927 136.51933289]
[120.12586212 151.09570312]
[125.19197083 158.69651794]
[123.60800171 165.91545105]
[126.93026733 180.54290771]
[130.25251770 195.17036438]
[140.85417175 206.91410828]
[136.12792969 221.03897095]
[146.72958374 232.78271484]
[142.00332642 246.90757751]
[145.32559204 261.53503418]
[149.08189392 276.05709839]
[153.69590759 290.32983398]
[158.73281860 304.45886230]
[163.76972961 318.58789062]
[168.80665588 332.71691895]
[174.63601685 339.74945068]
[173.81167603 347.09396362]
[185.57756042 357.67105103]
[182.34642029 372.21096802]
[187.17242432 386.41342163]
[191.99842834 400.61587524]
[197.72244263 407.73440552]
[196.78883362 415.06585693]
[201.40284729 429.33859253]
[206.01686096 443.61132812]
[221.02238464 442.27651978]
[235.94865417 444.31472778]
[250.04695129 449.62374878]
[262.61013794 457.93725586]
[273.00802612 468.83825684]
[280.71905518 481.77996826]
[285.35644531 496.11322021]
[286.68762207 511.11907959]
[284.64578247 526.04486084]
[279.33337402 540.14184570]
[271.01681519 552.70300293]
[260.11331177 563.09826660]
[247.16972351 570.80615234]
[232.83535767 575.44006348]
[217.82917786 576.76763916]
[202.90390015 574.72216797]
[188.80816650 569.40631104]
[176.24902344 561.08673096]
[165.85643005 550.18072510]
[158.15165710 537.23529053]
[153.52119446 522.89978027]
[152.19729614 507.89324951]
[154.24636841 492.96847534]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 187]
[4 186]
[5 185]
[6 183]
[7 182]
[8 181]
[10 179]
[11 177]
[12 176]
[13 175]
[14 174]
[19 173]
[24 172]
[25 171]
[27 169]
[29 167]
[30 166]
[31 165]
[32 163]
[33 162]
[34 161]
[35 160]
[36 157]
[37 156]
[38 155]
[40 153]
[41 152]
[42 151]
[43 148]
[44 147]
[45 146]
[46 145]
[47 144]
[48 143]
[49 140]
[50 139]
[51 138]
[52 137]
[53 136]
[59 135]
[60 134]
[61 133]
[64 130]
[65 129]
[66 128]
[67 127]
[69 124]
[70 123]
[71 122]
[72 121]
[82 120]
[83 119]
[84 118]
[85 117]
[87 115]
[88 114]
[89 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
