%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[57.19052887 588.47540283]
[42.67134094 582.66784668]
[35.32759857 568.86193848]
[38.62678909 553.57635498]
[51.01113892 544.02850342]
[51.45774460 529.03509521]
[51.90435028 514.04174805]
[52.35095596 499.04843140]
[52.79756165 484.05508423]
[42.19841003 478.13619995]
[35.07945251 468.21380615]
[32.84154129 456.13522339]
[35.96971512 444.18139648]
[43.92970276 434.63638306]
[55.25804138 429.35089111]
[56.15085983 414.37747192]
[57.04367447 399.40405273]
[57.93648911 384.43066406]
[58.15981674 369.43231201]
[57.71321106 354.43896484]
[57.26660538 339.44561768]
[56.81999969 324.45227051]
[56.37339401 309.45892334]
[55.92678833 294.46557617]
[48.89519501 307.71536255]
[37.59988022 317.58529663]
[23.52693748 322.77685547]
[8.52789879 322.60696411]
[-5.42385054 317.09799194]
[-16.49271774 306.97476196]
[-23.22240448 293.56912231]
[-24.72750473 278.64480591]
[-20.80999565 264.16540527]
[-11.98529243 252.03591919]
[0.58556187 243.85217285]
[15.24865627 240.69090271]
[30.07480812 242.96800232]
[43.11338043 250.38391113]
[52.64892960 261.96292114]
[57.42722321 276.18395996]
[60.31249619 261.46408081]
[63.19776535 246.74417114]
[66.08303833 232.02429199]
[68.96831512 217.30439758]
[58.99802399 203.76068115]
[61.96650314 186.86384583]
[76.51788330 177.15422058]
[79.18367767 162.39300537]
[81.84947205 147.63179016]
[80.15021515 144.54231262]
[79.86295319 140.47628784]
[81.43036652 136.10633850]
[84.97800446 132.27732849]
[80.25175476 118.15245819]
[90.85340881 106.40871429]
[94.06668091 91.75692749]
[97.17079163 77.08162689]
[100.27490234 62.40632248]
[98.98912811 53.36284256]
[103.53601837 47.53638840]
[106.85827637 32.90892792]
[102.36965942 17.73780823]
[112.73368073 7.04031849]
[116.05593872 -7.58714151]
[117.94923401 -22.46717644]
[118.39583588 -37.46052551]
[111.07285309 -51.48495102]
[119.18566132 -63.97621155]
[119.63226318 -78.96955872]
[120.07887268 -93.96291351]
[120.30220032 -108.96125031]
[120.30220032 -123.96125031]
[120.30220032 -138.96124268]
[107.10768890 -146.69766235]
[99.60664368 -159.91247559]
[99.72647858 -175.00724792]
[107.33487701 -187.92886353]
[120.30220032 -195.25785828]
[120.30220032 -210.25785828]
[120.30220032 -225.25785828]
[120.30220032 -240.25785828]
[120.30220032 -255.25785828]
[105.40871429 -257.21722412]
[90.89841461 -261.10391235]
[77.01958466 -266.85134888]
[64.00971222 -274.36123657]
[52.09141541 -283.50503540]
[41.46862793 -294.12631226]
[32.32312012 -306.04330444]
[24.81138611 -319.05209351]
[19.06195831 -332.93011475]
[15.17322063 -347.43984985]
[13.21171188 -362.33303833]
[13.21099663 -377.35485840]
[15.17108822 -392.24826050]
[19.05844498 -406.75836182]
[24.80655098 -420.63693237]
[32.31704712 -433.64645386]
[41.46141815 -445.56430054]
[52.08319473 -456.18658447]
[64.00062561 -465.33154297]
[77.00978088 -472.84265137]
[90.88806152 -478.59140015]
[105.39799500 -482.47946167]
[120.29129028 -484.44024658]
[135.31311035 -484.44024658]
[150.20640564 -482.47946167]
[164.71633911 -478.59140015]
[178.59461975 -472.84265137]
[191.60377502 -465.33154297]
[203.52120972 -456.18658447]
[214.14297485 -445.56430054]
[223.28735352 -433.64645386]
[230.79785156 -420.63693237]
[236.54595947 -406.75836182]
[240.43330383 -392.24826050]
[242.39340210 -377.35485840]
[242.39268494 -362.33303833]
[240.43118286 -347.43984985]
[236.54243469 -332.93011475]
[230.79301453 -319.05209351]
[223.28128052 -306.04330444]
[214.13577271 -294.12631226]
[203.51298523 -283.50503540]
[191.59468079 -274.36123657]
[178.58480835 -266.85134888]
[164.70597839 -261.10391235]
[150.19567871 -257.21722412]
[135.30220032 -255.25785828]
[135.30220032 -240.25785828]
[135.30220032 -225.25785828]
[135.30220032 -210.25785828]
[135.30220032 -195.25785828]
[148.26951599 -187.92886353]
[155.87791443 -175.00724792]
[155.99775696 -159.91247559]
[148.49670410 -146.69766235]
[135.30220032 -138.96124268]
[135.30220032 -123.96125031]
[135.30220032 -108.96125031]
[137.98588562 -105.01068878]
[138.21633911 -99.33232117]
[135.07221985 -93.51630402]
[134.62561035 -78.52295685]
[134.17901611 -63.52960587]
[141.53393555 -50.57760620]
[133.38919067 -37.01391983]
[132.94258118 -22.02057076]
[141.17196655 -34.56159592]
[153.74653625 -42.73962402]
[168.54725647 -45.17651367]
[183.07997131 -41.46160507]
[194.89562988 -32.22092819]
[202.00309753 -19.01169395]
[203.20465088 -4.05989599]
[198.29779053 10.11482811]
[188.10943604 21.12378693]
[174.35647583 27.11177826]
[159.35652161 27.06971931]
[145.63735962 21.00469971]
[135.51089478 9.93878078]
[130.68339539 -4.26488209]
[127.36113739 10.36257839]
[132.08738708 24.48744392]
[121.48574066 36.23118591]
[118.16347504 50.85864639]
[114.95020294 65.51043701]
[111.84609222 80.18573761]
[108.74198151 94.86103821]
[110.28752899 102.77203369]
[105.48086548 109.73097229]
[109.96949005 124.90209198]
[99.60546112 135.59957886]
[96.61068726 150.29759216]
[93.94489288 165.05880737]
[91.27909851 179.82002258]
[100.18160248 189.92744446]
[101.61640930 203.12409973]
[95.28244781 214.56802368]
[83.68820190 220.18966675]
[80.80293274 234.90956116]
[77.91765594 249.62945557]
[75.03238678 264.34933472]
[72.14710999 279.06924438]
[70.92013550 294.01895142]
[71.36674500 309.01232910]
[71.81334686 324.00567627]
[72.25995636 338.99902344]
[72.70655823 353.99237061]
[73.15316772 368.98571777]
[84.20075989 358.83926392]
[99.19244385 359.33865356]
[109.54030609 370.19781494]
[109.31661987 385.19616699]
[98.64952087 395.74191284]
[83.64961243 395.79400635]
[72.90989685 385.32348633]
[72.01708221 400.29687500]
[71.12426758 415.27029419]
[70.23144531 430.24368286]
[84.57694244 441.33264160]
[89.35237122 458.66107178]
[82.82762909 475.24053955]
[67.79091644 484.50167847]
[67.34430695 499.49502563]
[66.89769745 514.48840332]
[66.45109558 529.48175049]
[66.00448608 544.47509766]
[77.79858398 554.74316406]
[80.18210602 570.19799805]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 208]
[6 207]
[7 206]
[8 205]
[9 204]
[15 200]
[16 199]
[17 198]
[18 197]
[19 190]
[20 189]
[21 188]
[22 187]
[23 186]
[24 185]
[40 184]
[41 183]
[42 182]
[43 181]
[44 180]
[47 176]
[48 175]
[49 174]
[53 173]
[55 171]
[56 169]
[57 168]
[58 167]
[60 166]
[61 165]
[63 163]
[64 162]
[65 148]
[66 147]
[68 145]
[69 144]
[70 143]
[71 140]
[72 139]
[73 138]
[78 133]
[79 132]
[80 131]
[81 130]
[82 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
