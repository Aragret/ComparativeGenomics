%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[93.32897186 627.13922119]
[81.16841888 635.99139404]
[67.62258148 642.52972412]
[53.12690735 646.54412842]
[38.14737320 647.90545654]
[23.16550446 646.57006836]
[8.66290855 642.58074951]
[-4.89421654 636.06585693]
[-17.07006454 627.23474121]
[-27.47323418 616.37127686]
[-35.76930237 603.82476807]
[-41.69158936 589.99847412]
[-45.04971695 575.33691406]
[-45.73573685 560.31127930]
[-43.72759247 545.40466309]
[-39.08983994 531.09625244]
[-31.97155952 517.84594727]
[-22.60158157 506.07977295]
[-11.28110695 496.17590332]
[1.62595522 488.45272827]
[15.70469761 483.15850830]
[30.50254631 480.46340942]
[45.54381180 480.45413208]
[48.20960999 465.69290161]
[50.87540436 450.93170166]
[53.54119873 436.17047119]
[55.87668610 421.35339355]
[57.88069916 406.48788452]
[59.88471222 391.62234497]
[61.77800751 376.74230957]
[63.56047058 361.84860229]
[65.34294128 346.95486450]
[63.01654816 339.93991089]
[67.26441956 331.85330200]
[69.26843262 316.98776245]
[71.27244568 302.12222290]
[65.30488586 288.47534180]
[74.81653595 275.83261108]
[76.82054901 260.96707153]
[78.82456207 246.10154724]
[80.82857513 231.23602295]
[82.38909912 216.31741333]
[83.50475311 201.35896301]
[80.86744690 194.45487976]
[84.74999237 186.18664551]
[86.08822632 171.24645996]
[87.42646027 156.30627441]
[88.76469421 141.36608887]
[90.10292816 126.42590332]
[91.44116211 111.48571777]
[85.73317719 98.72208405]
[93.61865234 87.17604828]
[94.84562683 72.22631073]
[95.96127319 57.26786041]
[97.07691956 42.30940628]
[98.19257355 27.35095406]
[91.50311279 13.01353073]
[100.16558838 0.89698410]
[91.78730774 -15.50075531]
[102.22615051 -29.60740280]
[103.11896515 -44.58080673]
[104.01177979 -59.55421448]
[104.79310608 -74.53385162]
[105.46289062 -89.51889038]
[106.13267517 -104.50392914]
[96.30066681 -93.17557526]
[81.93515778 -88.85906982]
[67.48746490 -92.89193726]
[57.43434906 -104.02454376]
[54.89088821 -118.80732727]
[60.64519501 -132.65969849]
[72.91424561 -141.28932190]
[87.89632416 -142.02223206]
[100.94908905 -134.63133240]
[108.02803802 -121.40650940]
[110.69383240 -136.16772461]
[113.35962677 -150.92895508]
[108.19805908 -165.88450623]
[118.07408142 -177.03410339]
[103.62189484 -181.09356689]
[89.62104034 -186.50843811]
[76.19830322 -193.22966003]
[63.47524643 -201.19638062]
[51.56709671 -210.33644104]
[40.58169937 -220.56706238]
[30.61853600 -231.79560852]
[21.76784325 -243.92037964]
[14.10977268 -256.83157349]
[7.71368027 -270.41223145]
[2.63749075 -284.53939819]
[-1.07282400 -299.08514404]
[-3.38366222 -313.91769409]
[-4.27409554 -328.90277100]
[-3.73606086 -343.90460205]
[-1.77442992 -358.78735352]
[1.59303176 -373.41629028]
[6.33582687 -387.65884399]
[12.41100407 -401.38607788]
[19.76354218 -414.47366333]
[28.32685661 -426.80307007]
[38.02339172 -438.26266479]
[48.76533508 -448.74862671]
[60.45540237 -458.16598511]
[72.98772430 -466.42950439]
[86.24880219 -473.46432495]
[100.11854553 -479.20672607]
[114.47133636 -483.60467529]
[129.17718506 -486.61840820]
[144.10293579 -488.22058105]
[159.11338806 -488.39669800]
[174.07261658 -487.14520264]
[188.84513855 -484.47735596]
[203.29716492 -480.41735840]
[217.29782104 -475.00198364]
[230.72032166 -468.28027344]
[243.44308472 -460.31307983]
[255.35090637 -451.17260742]
[266.33593750 -440.94155884]
[276.29867554 -429.71264648]
[285.14892578 -417.58755493]
[292.80651855 -404.67611694]
[299.20211792 -391.09518433]
[304.27780151 -376.96783447]
[307.98757935 -362.42196655]
[310.29788208 -347.58932495]
[311.18777466 -332.60424805]
[310.64920044 -317.60241699]
[308.68701172 -302.71972656]
[305.31903076 -288.09094238]
[300.57571411 -273.84854126]
[294.50003052 -260.12152100]
[287.14700317 -247.03421021]
[278.58325195 -234.70510864]
[268.88629150 -223.24588013]
[258.14398193 -212.76031494]
[246.45356750 -203.34335327]
[233.92094421 -195.08030701]
[220.65960693 -188.04597473]
[206.78965759 -182.30409241]
[192.43670654 -177.90664673]
[177.73074341 -174.89344788]
[162.80493164 -173.29182434]
[147.79447937 -173.11624146]
[132.83529663 -174.36831665]
[138.18754578 -160.46856689]
[128.12084961 -148.26315308]
[125.45504761 -133.50193787]
[122.78925323 -118.74071503]
[121.11771393 -103.83414459]
[120.44792938 -88.84910583]
[119.77814484 -73.86406708]
[122.61983490 -67.04156494]
[118.98519135 -58.66139603]
[118.09236908 -43.68799210]
[117.19955444 -28.71458626]
[124.99160004 -19.46198845]
[124.37033081 -6.98009062]
[115.12404633 2.01263285]
[121.89330292 15.28012657]
[113.15102386 28.46660233]
[112.03537750 43.42505646]
[110.91973114 58.38351059]
[109.80407715 73.34196472]
[112.44138336 80.24604797]
[108.55883789 88.51428223]
[114.26682281 101.27791595]
[106.38134766 112.82395172]
[105.04311371 127.76413727]
[103.70487976 142.70433044]
[102.36664581 157.64450073]
[101.02841187 172.58468628]
[99.69017792 187.52487183]
[98.46320343 202.47460938]
[97.34755707 217.43305969]
[99.37098694 221.27490234]
[100.00307465 225.16912842]
[99.39819336 228.67190552]
[97.83899689 231.43516541]
[95.69410706 233.24003601]
[93.69009399 248.10556030]
[91.68608093 262.97109985]
[89.68206787 277.83660889]
[95.50628662 292.54678345]
[86.13797760 304.12625122]
[84.13396454 318.99179077]
[82.12995148 333.85729980]
[80.23665619 348.73733521]
[78.45419312 363.63107300]
[76.67172241 378.52478027]
[78.75919342 387.41748047]
[74.75024414 393.62637329]
[72.74623108 408.49188232]
[70.74221802 423.35742188]
[72.72644043 428.18545532]
[72.66630554 432.82760620]
[70.97497559 436.53631592]
[68.30241394 438.83627319]
[65.63661957 453.59747314]
[62.97082520 468.35870361]
[60.30503082 483.11990356]
[74.39291382 488.38977051]
[87.31331635 496.09060669]
[98.65090179 505.97488403]
[108.04122162 517.72485352]
[115.18241119 530.96282959]
[119.84490967 545.26318359]
[121.87883759 560.16632080]
[121.21881104 575.19305420]
[117.88604736 589.86047363]
[111.98768616 603.69702148]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 200]
[24 199]
[25 198]
[26 197]
[27 193]
[28 192]
[29 191]
[30 189]
[31 188]
[32 187]
[34 186]
[35 185]
[36 184]
[38 182]
[39 181]
[40 180]
[41 179]
[42 174]
[43 173]
[45 172]
[46 171]
[47 170]
[48 169]
[49 168]
[50 167]
[52 165]
[53 163]
[54 162]
[55 161]
[56 160]
[58 158]
[60 155]
[61 154]
[62 153]
[63 151]
[64 150]
[65 149]
[75 148]
[76 147]
[77 146]
[79 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
