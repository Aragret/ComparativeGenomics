%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[165.46728516 712.97039795]
[152.75337219 705.00189209]
[140.54890442 696.27307129]
[128.89927673 686.81652832]
[117.84783173 676.66729736]
[107.43568420 665.86322021]
[97.70156097 654.44445801]
[88.68167114 642.45355225]
[80.40958405 629.93499756]
[72.91606903 616.93548584]
[66.22898865 603.50329590]
[60.37323380 589.68841553]
[55.37058258 575.54223633]
[51.23964691 561.11737061]
[47.99579239 546.46752930]
[45.65108871 531.64715576]
[44.21425629 516.71142578]
[43.69064331 501.71585083]
[44.08219528 486.71627808]
[45.38745499 471.76846313]
[47.60156631 456.92803955]
[50.71629715 442.25018311]
[54.72005463 427.78952026]
[59.59794998 413.59982300]
[65.33183289 399.73391724]
[71.90037537 386.24337769]
[79.27913666 373.17834473]
[87.44067383 360.58746338]
[96.35462189 348.51757812]
[105.98781586 337.01354980]
[116.30442810 326.11822510]
[127.26608276 315.87210083]
[138.83198547 306.31329346]
[150.95912170 297.47738647]
[163.60237122 289.39721680]
[176.71472168 282.10287476]
[170.23521423 268.57452393]
[163.75572205 255.04618835]
[157.27622986 241.51783752]
[144.64363098 238.97874451]
[135.64570618 229.48561096]
[133.73008728 216.35012817]
[139.81782532 204.33538818]
[133.54046631 190.71208191]
[127.26310730 177.08876038]
[120.98574829 163.46543884]
[106.33962250 166.54377747]
[91.37570953 166.28639221]
[76.84411621 162.70620728]
[63.47327423 155.98269653]
[51.93344498 146.45288086]
[42.80309296 134.59448242]
[36.53990936 121.00193024]
[33.45784760 106.35659027]
[33.71141052 91.39260864]
[37.28788376 76.86009979]
[44.00799179 63.48754883]
[53.53486252 51.94528961]
[65.39093781 42.81191635]
[59.11357498 29.18860054]
[52.83621597 15.56528473]
[46.55885315 1.94196832]
[41.38978958 -2.18020415]
[39.38013458 -7.49605846]
[40.30415726 -12.18169785]
[34.43519974 -25.98587418]
[28.56623650 -39.79005051]
[22.59467506 -53.55015564]
[16.52083969 -67.26541901]
[10.44700623 -80.98069000]
[4.37317228 -94.69595337]
[-10.12117290 -90.72460938]
[-25.04553795 -88.95798492]
[-40.06650925 -89.43555450]
[-54.84851456 -92.14665985]
[-69.06130981 -97.03071594]
[-82.38738251 -103.97862244]
[-94.52902985 -112.83515167]
[-105.21498871 -123.40245819]
[-114.20654297 -135.44445801]
[-121.30280304 -148.69212341]
[-126.34525299 -162.84950256]
[-129.22123718 -177.60031128]
[-129.86650085 -192.61500549]
[-128.26663208 -207.55816650]
[-124.45735931 -222.09596252]
[-118.52381134 -235.90357971]
[-110.59851837 -248.67259216]
[-100.85855103 -260.11770630]
[-89.52149963 -269.98324585]
[-76.84062958 -278.04879761]
[-63.09925079 -284.13421631]
[-48.60433960 -288.10348511]
[-33.67972183 -289.86798096]
[-18.65881729 -289.38827515]
[-3.87720132 -286.67507935]
[10.33490181 -281.78897095]
[23.65998650 -274.83917236]
[35.80036545 -265.98092651]
[46.48482132 -255.41209412]
[55.47465897 -243.36882019]
[62.56903839 -230.12014771]
[67.60946655 -215.96205139]
[70.48335266 -201.21083069]
[71.12647247 -186.19602966]
[69.52447510 -171.25309753]
[65.71314240 -156.71585083]
[59.77761841 -142.90907288]
[51.85050964 -130.14120483]
[42.10891342 -118.69747162]
[30.77045250 -108.83354950]
[18.08843994 -100.76979065]
[24.16227341 -87.05451965]
[30.23610687 -73.33925629]
[36.30994034 -59.62398911]
[41.89265442 -54.78094101]
[42.37041473 -45.65901184]
[48.23937607 -31.85483551]
[54.10833740 -18.05065918]
[60.18217087 -4.33539248]
[66.45953369 9.28792381]
[72.73689270 22.91123962]
[79.01425171 36.53455734]
[93.66037750 33.45623016]
[108.62429047 33.71360779]
[123.15588379 37.29378891]
[136.52673340 44.01730347]
[148.06655884 53.54711533]
[157.19689941 65.40551758]
[163.46009827 78.99806976]
[166.54214478 93.64340973]
[166.28858948 108.60739136]
[162.71211243 123.13990021]
[155.99200439 136.51245117]
[146.46513367 148.05470276]
[134.60906982 157.18807983]
[140.88642883 170.81140137]
[147.16378784 184.43472290]
[153.44114685 198.05802917]
[169.96035767 203.81431580]
[177.06556702 219.42941284]
[170.80456543 235.03834534]
[177.28407288 248.56668091]
[183.76356506 262.09503174]
[190.24305725 275.62338257]
[204.14555359 269.97879028]
[218.36630249 265.19223022]
[232.85241699 261.28155518]
[247.55000305 258.26126099]
[262.40435791 256.14263916]
[277.36026001 254.93353271]
[292.36206055 254.63844299]
[307.35394287 255.25846863]
[322.28012085 256.79132080]
[337.08511353 259.23129272]
[351.71380615 262.56927490]
[366.11178589 266.79287720]
[380.22549438 271.88641357]
[394.00244141 277.83087158]
[407.39135742 284.60418701]
[420.34243774 292.18115234]
[432.80749512 300.53356934]
[444.74020386 309.63037109]
[456.09609985 319.43771362]
[466.83300781 329.91912842]
[476.91091919 341.03561401]
[486.29241943 352.74581909]
[494.94253540 365.00616455]
[502.82913208 377.77105713]
[509.92285156 390.99301147]
[516.19732666 404.62283325]
[521.62915039 418.60980225]
[526.19824219 432.90191650]
[529.88751221 447.44601440]
[532.68322754 462.18795776]
[534.57501221 477.07290649]
[535.55584717 492.04550171]
[535.62200928 507.05004883]
[534.77337646 522.03070068]
[533.01300049 536.93182373]
[530.34747314 551.69781494]
[526.78674316 566.27392578]
[522.34399414 580.60577393]
[517.03576660 594.64013672]
[510.88180542 608.32482910]
[503.90502930 621.60882568]
[496.13137817 634.44287109]
[487.58978271 646.77905273]
[478.31201172 658.57159424]
[468.33258057 669.77655029]
[457.68859863 680.35229492]
[446.41967773 690.25952148]
[434.56771851 699.46124268]
[422.17684937 707.92333984]
[409.29312134 715.61431885]
[395.96450806 722.50549316]
[382.24057007 728.57128906]
[368.17233276 733.78918457]
[353.81219482 738.13964844]
[339.21353149 741.60662842]
[324.43063354 744.17712402]
[309.51855469 745.84161377]
[294.53274536 746.59393311]
[279.52893066 746.43127441]
[264.56292725 745.35418701]
[249.69046021 743.36669922]
[234.96679688 740.47625732]
[220.44674683 736.69354248]
[206.18429565 732.03265381]
[192.23252869 726.51098633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 145]
[37 144]
[38 143]
[39 142]
[43 139]
[44 138]
[45 137]
[46 136]
[59 123]
[60 122]
[61 121]
[62 120]
[65 119]
[66 118]
[67 117]
[68 115]
[69 114]
[70 113]
[71 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
