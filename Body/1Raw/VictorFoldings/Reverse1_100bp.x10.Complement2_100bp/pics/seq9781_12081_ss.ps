%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[120.31279755 764.76989746]
[107.26887512 757.34722900]
[94.85591888 748.91168213]
[83.15242004 739.51654053]
[72.23236084 729.22131348]
[62.16479111 718.09100342]
[53.01335526 706.19598389]
[44.83592224 693.61145020]
[37.68418121 680.41705322]
[31.60335922 666.69610596]
[26.63189507 652.53546143]
[22.80122185 638.02453613]
[20.13555908 623.25518799]
[18.65175819 608.32073975]
[18.35920525 593.31555176]
[19.25974464 578.33459473]
[21.34768486 563.47253418]
[24.60982513 548.82336426]
[29.02554131 534.47967529]
[34.56691742 520.53216553]
[41.19891357 507.06900024]
[48.87960052 494.17532349]
[57.56042099 481.93261719]
[67.18649292 470.41833496]
[77.69695282 459.70523071]
[89.02534485 449.86108398]
[101.10005188 440.94808960]
[113.84473419 433.02261353]
[127.17881775 426.13476562]
[141.01799011 420.32809448]
[155.27474976 415.63931274]
[151.73507690 401.06292725]
[148.19540405 386.48657227]
[144.65573120 371.91018677]
[141.11605835 357.33380127]
[137.57638550 342.75744629]
[134.03671265 328.18106079]
[131.71569824 326.60913086]
[129.87748718 324.02307129]
[128.91148376 320.60223389]
[129.13499451 316.66336060]
[130.74777222 312.63186646]
[120.87174988 301.48226929]
[126.03331757 286.52673340]
[123.36752319 271.76550293]
[120.70172882 257.00427246]
[118.03593445 242.24307251]
[115.37013245 227.48185730]
[112.70433807 212.72062683]
[110.03854370 197.95941162]
[107.37274933 183.19819641]
[104.70695496 168.43698120]
[102.04116058 153.67576599]
[99.37536621 138.91455078]
[96.70956421 124.15332794]
[94.04376984 109.39211273]
[84.62355042 121.06513214]
[69.72364807 122.79514313]
[57.87940979 113.59112549]
[55.87575150 98.72554779]
[64.86045837 86.71409607]
[79.68668365 84.43746948]
[91.86079407 93.19902039]
[90.52255249 78.25884247]
[86.64000702 69.99060822]
[89.27731323 63.08652115]
[88.16166687 48.12806702]
[82.40700531 61.98028183]
[73.17193604 73.80033112]
[61.12314987 82.73490906]
[47.13045502 88.13903046]
[32.20399857 89.62255859]
[17.42133141 87.07839966]
[3.84962797 80.69021606]
[-7.53135777 70.91918182]
[-15.90002346 58.47066879]
[-20.65222740 44.24335098]
[-21.44490433 29.26430893]
[-18.22083092 14.61489487]
[-11.21275330 1.35266030]
[-0.92659348 -9.56498146]
[11.89508343 -17.34987831]
[26.32666969 -21.44002914]
[41.32633591 -21.54016304]
[55.81124115 -17.64305305]
[68.73571014 -10.03003502]
[79.16671753 0.74930316]
[86.35123444 13.91679001]
[89.77071381 28.52301216]
[93.31038666 13.94663715]
[96.85005951 -0.62973863]
[100.38973236 -15.20611382]
[103.92940521 -29.78248978]
[107.46907806 -44.35886383]
[93.59589386 -50.14516830]
[80.79875946 -58.03057861]
[69.39280701 -67.82091522]
[59.65892029 -79.27508545]
[51.83680725 -92.11101532]
[46.11909103 -106.01260376]
[42.64657974 -120.63751984]
[41.50478745 -135.62561035]
[42.72182846 -150.60777283]
[46.26773071 -165.21507263]
[52.05517960 -179.08776855]
[59.94164658 -191.88426208]
[69.73292542 -203.28941345]
[81.18789673 -213.02235413]
[94.02446747 -220.84339905]
[107.92652893 -226.55996704]
[122.55173492 -230.03128052]
[137.53991699 -231.17182922]
[152.52198792 -229.95355225]
[167.12898254 -226.40644836]
[181.00120544 -220.61785889]
[193.79704285 -212.73033142]
[205.20138550 -202.93811035]
[214.93338013 -191.48233032]
[222.75337219 -178.64511108]
[228.46879578 -164.74258423]
[231.93888855 -150.11709595]
[233.07821655 -135.12881470]
[231.85870361 -120.14685059]
[228.31039429 -105.54014587]
[222.52064514 -91.66839600]
[214.63206482 -78.87320709]
[204.83891296 -67.46968079]
[193.38233948 -57.73862839]
[180.54446411 -49.91968918]
[166.64146423 -44.20541763]
[152.01568604 -40.73652649]
[137.02731323 -39.59844208]
[122.04545593 -40.81919098]
[118.50578308 -26.24281693]
[114.96611023 -11.66644192]
[111.42643738 2.90993381]
[107.88676453 17.48630905]
[104.34709167 32.06268311]
[103.12011719 47.01241684]
[104.23576355 61.97087097]
[105.46273804 76.92060852]
[106.80097198 91.86078644]
[108.80499268 106.72631836]
[111.47078705 121.48753357]
[114.13658142 136.24874878]
[116.80237579 151.00996399]
[119.46817017 165.77119446]
[122.13396454 180.53240967]
[124.79975891 195.29362488]
[127.46556091 210.05484009]
[130.13134766 224.81605530]
[132.79714966 239.57727051]
[135.46293640 254.33848572]
[138.12873840 269.09970093]
[140.79454041 283.86093140]
[150.86122131 296.06634521]
[145.50898743 309.96609497]
[148.61309814 324.64138794]
[152.15277100 339.21777344]
[155.69244385 353.79412842]
[159.23211670 368.37051392]
[162.77178955 382.94689941]
[166.31146240 397.52325439]
[169.85113525 412.09963989]
[184.67050171 409.72769165]
[199.63148499 408.54061890]
[214.63948059 408.54598999]
[229.59962463 409.74374390]
[244.41729736 412.12628174]
[258.99884033 415.67858887]
[273.25204468 420.37814331]
[287.08682251 426.19531250]
[300.41567993 433.09323120]
[313.15435791 441.02835083]
[325.22232056 449.95050049]
[336.54324341 459.80322266]
[347.04559326 470.52429199]
[356.66293335 482.04586792]
[365.33450317 494.29510498]
[373.00543213 507.19461060]
[379.62722778 520.66278076]
[385.15805054 534.61450195]
[389.56289673 548.96154785]
[392.81393433 563.61315918]
[394.89062500 578.47680664]
[395.77981567 593.45843506]
[395.47592163 608.46337891]
[393.98080444 623.39672852]
[391.30395508 638.16406250]
[387.46231079 652.67205811]
[382.48013306 666.82897949]
[376.38891602 680.54528809]
[369.22717285 693.73425293]
[361.04022217 706.31256104]
[351.87979126 718.20062256]
[341.80380249 729.32336426]
[330.87594604 739.61035156]
[319.16534424 748.99658203]
[306.74600220 757.42272949]
[293.69644165 764.83557129]
[280.09921265 771.18811035]
[266.04025269 776.44030762]
[251.60842896 780.55889893]
[236.89500427 783.51782227]
[221.99301147 785.29840088]
[206.99664307 785.88940430]
[192.00073242 785.28704834]
[177.10008240 783.49517822]
[162.38891602 780.52508545]
[147.96022034 776.39556885]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 164]
[32 163]
[33 162]
[34 161]
[35 160]
[36 159]
[37 158]
[42 157]
[44 155]
[45 154]
[46 153]
[47 152]
[48 151]
[49 150]
[50 149]
[51 148]
[52 147]
[53 146]
[54 145]
[55 144]
[56 143]
[63 142]
[64 141]
[66 140]
[67 139]
[89 138]
[90 137]
[91 136]
[92 135]
[93 134]
[94 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
