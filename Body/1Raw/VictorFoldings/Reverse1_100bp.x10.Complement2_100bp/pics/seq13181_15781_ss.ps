%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGAUAAUACUCAGGAUCAACUGAACUUCACCUCUUCCGAUGCUAAAAAAACUACAGUAAAACACAUUCCCGCGUCUGACGACGCUUGUCUCACCACUAUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[-21.49485016 338.81420898]
[-15.81621075 352.71783447]
[-11.85491276 367.20455933]
[-9.66872215 382.06317139]
[-9.28952026 397.07693481]
[-10.72283840 412.02694702]
[-13.94777203 426.69519043]
[-18.91729546 440.86773682]
[-25.55893517 454.33792114]
[-33.77583694 466.90933228]
[-43.44817734 478.39859009]
[-54.43490219 488.63818359]
[-66.57579041 497.47875977]
[-79.69379425 504.79144287]
[-93.59761810 510.46957397]
[-108.08450317 514.43029785]
[-122.94318390 516.61596680]
[-137.95697021 516.99462891]
[-152.90693665 515.56072998]
[-167.57505798 512.33526611]
[-181.74742126 507.36520386]
[-195.21736145 500.72305298]
[-207.78843689 492.50567627]
[-219.27734375 482.83291626]
[-229.51652527 471.84579468]
[-238.35667419 459.70458984]
[-245.66885376 446.58630371]
[-251.34645081 432.68225098]
[-255.30667114 418.19522095]
[-257.49176025 403.33645630]
[-257.86984253 388.32266235]
[-256.43539429 373.37274170]
[-253.20936584 358.70474243]
[-248.23878479 344.53259277]
[-241.59613037 331.06289673]
[-233.37829590 318.49209595]
[-223.70509338 307.00357056]
[-212.71760559 296.76480103]
[-200.57604980 287.92510986]
[-187.45750427 280.61340332]
[-173.55325317 274.93634033]
[-159.06607056 270.97665405]
[-144.20722961 268.79214478]
[-129.19340515 268.41461182]
[-114.24355316 269.84960938]
[-99.57567596 273.07620239]
[-85.40368652 278.04730225]
[-71.93424225 284.69046021]
[-59.36376953 292.90878296]
[-49.70296097 281.43408203]
[-40.04215240 269.95938110]
[-30.38134003 258.48468018]
[-20.72052956 247.00996399]
[-18.81728935 239.86857605]
[-10.82945728 235.43772888]
[-0.99887615 224.10813904]
[1.01047862 216.99588013]
[9.06339359 212.68444824]
[19.06156540 201.50248718]
[29.05973816 190.32051086]
[39.05791092 179.13853455]
[49.05607986 167.95655823]
[59.05425262 156.77458191]
[69.05242920 145.59260559]
[77.18764496 132.99029541]
[83.26147461 119.27503204]
[89.33531189 105.55976105]
[95.20426941 91.75558472]
[100.86705780 77.86555481]
[106.52984619 63.97553253]
[96.38302612 52.62637329]
[92.18708801 38.05650330]
[94.72280121 23.17059135]
[103.43441772 10.91217899]
[116.55038452 3.68162465]
[131.44335938 2.86616445]
[137.10614014 -11.02386284]
[142.76892090 -24.91388893]
[148.43171692 -38.80391693]
[154.09449768 -52.69394302]
[159.75727844 -66.58396912]
[165.42007446 -80.47399902]
[171.08285522 -94.36402130]
[176.74565125 -108.25405121]
[182.40843201 -122.14408112]
[188.07121277 -136.03410339]
[193.73400879 -149.92413330]
[196.94728088 -164.57591248]
[197.61706543 -179.56095886]
[187.23049927 -191.16944885]
[188.12321472 -206.35685730]
[199.25415039 -216.18733215]
[199.81236267 -231.17694092]
[200.25897217 -246.17028809]
[200.70556641 -261.16363525]
[201.15217590 -276.15698242]
[186.78739929 -280.82922363]
[174.32159424 -289.36038208]
[164.76531982 -301.05883789]
[158.89324951 -314.97628784]
[157.18141174 -329.98449707]
[159.76856995 -344.86682129]
[166.44500732 -358.41680908]
[176.66947937 -369.53601074]
[189.61314392 -377.32305908]
[204.22671509 -381.14669800]
[219.32554626 -380.69696045]
[233.68560791 -376.01028442]
[246.14283752 -367.46661377]
[255.68736267 -355.75854492]
[261.54544067 -341.83520508]
[263.24221802 -326.82528687]
[260.64010620 -311.94558716]
[253.95005798 -298.40231323]
[243.71441650 -287.29336548]
[230.76293945 -279.51934814]
[216.14552307 -275.71038818]
[215.69892883 -260.71704102]
[215.25231934 -245.72367859]
[214.80570984 -230.73033142]
[217.74867249 -223.95089722]
[214.23918152 -215.51754761]
[224.44869995 -204.73323059]
[223.98291016 -189.52673340]
[212.60209656 -178.89117432]
[211.93231201 -163.90612793]
[219.20777893 -177.02359009]
[229.47966003 -187.95466614]
[242.11984253 -196.03091431]
[256.35537720 -200.75846863]
[271.31573486 -201.84825134]
[286.08609009 -199.23361206]
[299.76324463 -193.07443237]
[311.51083374 -183.74736023]
[320.61047363 -171.82273865]
[326.50570679 -158.02976990]
[328.83609009 -143.21189880]
[327.45907593 -128.27523804]
[322.45886230 -114.13317108]
[314.14123535 -101.65049744]
[303.01483154 -91.59053802]
[289.75997925 -84.56845093]
[275.18728638 -81.01364899]
[260.18786621 -81.14351654]
[245.67890930 -84.95009613]
[232.54765320 -92.20062256]
[221.59707642 -102.45172119]
[213.49682617 -115.07653809]
[208.74223328 -129.30305481]
[207.62403870 -144.26135254]
[201.96124268 -130.37132263]
[196.29846191 -116.48129272]
[190.63566589 -102.59126282]
[184.97288513 -88.70124054]
[179.31010437 -74.81121063]
[173.64730835 -60.92118454]
[167.98452759 -47.03115845]
[162.32173157 -33.14112854]
[156.65895081 -19.25110245]
[150.99617004 -5.36107588]
[145.33337402 8.52895069]
[155.41108704 19.52463913]
[159.73310852 33.86443329]
[157.39086914 48.71956635]
[148.79606628 61.13526154]
[135.60937500 68.61845398]
[120.41986847 69.63832092]
[114.75708008 83.52834320]
[109.09429932 97.41837311]
[109.98127747 102.58821106]
[107.90855408 107.88699341]
[103.05057526 111.63359833]
[96.97674561 125.34886169]
[90.90290833 139.06413269]
[102.51237488 129.56568909]
[116.23173523 123.50110626]
[131.07057190 121.30817413]
[145.95765686 123.14520264]
[159.81828308 128.87957764]
[171.65182495 138.09733582]
[180.60403442 150.13304138]
[186.02862549 164.11779785]
[187.53399658 179.04206848]
[185.01147461 193.82844543]
[178.64317322 207.40948486]
[168.88879395 218.80476379]
[156.45254517 227.19163513]
[142.23220825 231.96466064]
[127.25434113 232.77926636]
[112.60021973 229.57662964]
[99.32774353 222.58796692]
[88.39505768 212.31781006]
[80.59140778 199.50753784]
[76.48013306 185.08195496]
[76.35804749 170.08244324]
[80.23439789 155.59077454]
[70.23622894 166.77275085]
[60.23805618 177.95472717]
[50.23988342 189.13670349]
[40.24171066 200.31867981]
[30.24353981 211.50065613]
[20.24536896 222.68263245]
[10.33071709 233.93872070]
[0.50013608 245.26831055]
[-9.24582958 256.67077637]
[-18.90663910 268.14547729]
[-28.56744957 279.62017822]
[-38.22826004 291.09487915]
[-47.88907242 302.56958008]
[-37.64906693 313.55590820]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 209]
[50 208]
[51 207]
[52 206]
[53 205]
[55 204]
[56 203]
[58 202]
[59 201]
[60 200]
[61 199]
[62 198]
[63 197]
[64 196]
[65 174]
[66 173]
[67 172]
[68 169]
[69 168]
[70 167]
[76 161]
[77 160]
[78 159]
[79 158]
[80 157]
[81 156]
[82 155]
[83 154]
[84 153]
[85 152]
[86 151]
[87 150]
[88 126]
[89 125]
[92 122]
[93 120]
[94 119]
[95 118]
[96 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
