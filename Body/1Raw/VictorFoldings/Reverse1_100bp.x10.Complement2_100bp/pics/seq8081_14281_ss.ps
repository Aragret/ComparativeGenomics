%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[110.06133270 340.19348145]
[101.32001495 352.48330688]
[89.79642487 362.21252441]
[76.21495056 368.76956177]
[61.42934418 371.74218750]
[46.36903000 370.94357300]
[31.98071861 366.42391968]
[19.16886711 358.46734619]
[8.73884010 347.57397461]
[1.34627998 334.42858887]
[-2.54411221 319.85754395]
[-2.68778300 304.77676392]
[0.92429906 290.13421631]
[8.06507587 276.85040283]
[18.28567123 265.76028442]
[30.94360924 257.56106567]
[45.24320602 252.76811218]
[60.28556824 251.68272400]
[62.95136642 236.92150879]
[65.61715698 222.16029358]
[68.28295898 207.39906311]
[62.93070984 193.49932861]
[72.99740601 181.29391479]
[75.66320038 166.53269958]
[62.04000854 172.81031799]
[48.57013321 166.21014404]
[45.18306351 151.59754944]
[54.37562561 139.74441528]
[69.37139893 139.38842773]
[79.11563110 150.79040527]
[82.87193298 136.26834106]
[86.62823486 121.74628448]
[90.38453674 107.22422028]
[93.92420959 92.64785004]
[97.24646759 78.02038574]
[100.56872559 63.39292908]
[103.89098358 48.76546860]
[102.45983887 44.66598129]
[102.41242218 40.72107697]
[103.53022003 37.34677124]
[105.48206329 34.84539032]
[107.87096405 33.37865829]
[112.05797577 18.97487450]
[116.24498749 4.57109261]
[120.43199921 -9.83268929]
[124.61901093 -24.23647118]
[128.80601501 -38.64025497]
[132.99302673 -53.04403687]
[135.54885864 -67.82469177]
[136.44168091 -82.79809570]
[137.33450317 -97.77149963]
[138.22731018 -112.74490356]
[139.12013245 -127.71831512]
[140.01293945 -142.69171143]
[140.79426575 -157.67135620]
[141.46405029 -172.65638733]
[142.13383484 -187.64143372]
[142.80361938 -202.62646484]
[127.88616180 -204.24571228]
[113.10143280 -206.80781555]
[98.50897217 -210.30247498]
[84.16754150 -214.71560669]
[70.13487244 -220.02944946]
[56.46749115 -226.22259521]
[43.22042084 -233.27012634]
[30.44700241 -241.14364624]
[18.19867325 -249.81144714]
[6.52475262 -259.23864746]
[-4.52775288 -269.38726807]
[-14.91433811 -280.21646118]
[-24.59317970 -291.68261719]
[-33.52530289 -303.73956299]
[-41.67474365 -316.33871460]
[-49.00868225 -329.42941284]
[-55.49759293 -342.95889282]
[-61.11534119 -356.87265015]
[-65.83930969 -371.11474609]
[-69.65048218 -385.62774658]
[-72.53350067 -400.35327148]
[-74.47676086 -415.23196411]
[-75.47244263 -430.20397949]
[-75.51653290 -445.20901489]
[-74.60884857 -460.18661499]
[-72.75305939 -475.07650757]
[-69.95661926 -489.81869507]
[-66.23080444 -504.35385132]
[-61.59060669 -518.62341309]
[-56.05471420 -532.57000732]
[-49.64542389 -546.13739014]
[-42.38853455 -559.27093506]
[-34.31327438 -571.91778564]
[-25.45215797 -584.02697754]
[-15.84086323 -595.54980469]
[-5.51809502 -606.43981934]
[5.47458172 -616.65325928]
[17.09290314 -626.14886475]
[29.29008484 -634.88854980]
[42.01701355 -642.83697510]
[55.22244263 -649.96221924]
[68.85319519 -656.23559570]
[82.85439301 -661.63177490]
[97.16964722 -666.12915039]
[111.74131775 -669.70947266]
[126.51073456 -672.35839844]
[141.41842651 -674.06530762]
[156.40434265 -674.82318115]
[171.40817261 -674.62915039]
[186.36949158 -673.48388672]
[201.22804260 -671.39196777]
[215.92399597 -668.36193848]
[230.39819336 -664.40588379]
[244.59233093 -659.53979492]
[258.44927979 -653.78326416]
[271.91320801 -647.15942383]
[284.92993164 -639.69500732]
[297.44702148 -631.42004395]
[309.41406250 -622.36785889]
[320.78289795 -612.57489014]
[331.50772095 -602.08056641]
[341.54537964 -590.92718506]
[350.85540771 -579.15960693]
[359.40036011 -566.82525635]
[367.14581299 -553.97375488]
[374.06057739 -540.65692139]
[380.11682129 -526.92834473]
[385.29013062 -512.84326172]
[389.55969238 -498.45840454]
[392.90832520 -483.83175659]
[395.32250977 -469.02215576]
[396.79257202 -454.08926392]
[397.31256104 -439.09317017]
[396.88037109 -424.09432983]
[395.49777222 -409.15307617]
[393.17031860 -394.32958984]
[389.90740967 -379.68356323]
[385.72213745 -365.27398682]
[380.63137817 -351.15887451]
[374.65563965 -337.39505005]
[367.81896973 -324.03793335]
[360.14889526 -311.14132690]
[351.67630005 -298.75714111]
[342.43530273 -286.93527222]
[332.46313477 -275.72329712]
[321.79992676 -265.16638184]
[310.48864746 -255.30702209]
[298.57479858 -246.18492126]
[286.10635376 -237.83680725]
[273.13357544 -230.29629517]
[259.70864868 -223.59376526]
[245.88565063 -217.75617981]
[231.72024536 -212.80706787]
[217.26945496 -208.76635742]
[202.59149170 -205.65029907]
[187.74543762 -203.47145081]
[172.79109192 -202.23860168]
[157.78866577 -201.95668030]
[157.11888123 -186.97164917]
[156.44909668 -171.98660278]
[155.77929688 -157.00157166]
[158.62100220 -150.17906189]
[154.98634338 -141.79890442]
[154.09353638 -126.82549286]
[153.20071411 -111.85208893]
[152.30790710 -96.87868500]
[151.41508484 -81.90528107]
[150.52226257 -66.93186951]
[158.70791626 -79.50149536]
[170.83872986 -88.32436371]
[185.31872559 -92.23968506]
[200.24279785 -90.73233032]
[213.64743042 -84.00062561]
[223.76901245 -72.93022919]
[229.27586365 -58.97764587]
[229.44348145 -43.97858047]
[224.24980164 -29.90642166]
[214.37815857 -18.61259651]
[201.12730408 -11.58300591]
[186.24064636 -9.74251270]
[171.67677307 -13.33326530]
[159.35180664 -21.88283920]
[150.88731384 -34.26638794]
[147.39682007 -48.85702515]
[143.20980835 -34.45324326]
[139.02279663 -20.04945946]
[134.83578491 -5.64567804]
[130.64877319 8.75810432]
[126.46176147 23.16188622]
[122.27474976 37.56566620]
[118.51844788 52.08772659]
[115.19618988 66.71518707]
[111.87392426 81.34265137]
[108.55166626 95.97010803]
[110.26971436 100.92613983]
[109.08868408 106.49197388]
[104.90659332 110.98052216]
[101.15029144 125.50258636]
[97.39398956 140.02464294]
[93.63769531 154.54670715]
[90.42441559 169.19848633]
[87.75862122 183.95970154]
[92.92018890 198.91526794]
[83.04417419 210.06486511]
[80.37837982 224.82608032]
[77.71258545 239.58729553]
[75.04678345 254.34851074]
[88.75930023 260.62689209]
[100.47911835 270.11880493]
[109.46954346 282.22760010]
[115.16540527 296.19213867]
[117.20867920 311.13455200]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 205]
[19 204]
[20 203]
[21 202]
[23 200]
[24 199]
[30 198]
[31 197]
[32 196]
[33 195]
[34 192]
[35 191]
[36 190]
[37 189]
[42 188]
[43 187]
[44 186]
[45 185]
[46 184]
[47 183]
[48 182]
[49 166]
[50 165]
[51 164]
[52 163]
[53 162]
[54 161]
[55 159]
[56 158]
[57 157]
[58 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
