%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[70.13610840 411.46749878]
[62.81538773 398.34545898]
[57.43671799 384.31512451]
[54.10960770 369.66210938]
[52.90178680 354.68472290]
[53.83784866 339.68789673]
[56.89873505 324.97695923]
[62.02212906 310.85137939]
[69.10372925 297.59878540]
[77.99935913 285.48892212]
[88.52791595 274.76837158]
[100.47505188 265.65536499]
[113.59754181 258.33547974]
[127.62821960 252.95767212]
[124.30596161 238.33021545]
[113.94194031 227.63272095]
[118.43055725 212.46159363]
[115.10829926 197.83413696]
[111.78604126 183.20668030]
[108.46378326 168.57922363]
[105.14152527 153.95176697]
[92.54230499 141.73593140]
[98.13484192 124.19155121]
[94.59516907 109.61517334]
[84.68074036 120.87146759]
[69.69198608 120.29083252]
[60.67805099 108.30129242]
[64.28368378 93.74109650]
[77.85093689 87.34346771]
[91.37750244 93.82322693]
[88.93177032 79.02395630]
[86.48604584 64.22468567]
[84.04032135 49.42541504]
[81.59458923 34.62614441]
[78.81897736 19.88518143]
[68.45415497 12.20838833]
[66.17085266 -0.07860959]
[72.65689087 -10.28928375]
[69.77162170 -25.00917625]
[66.88634491 -39.72906876]
[64.00107574 -54.44895935]
[61.11579895 -69.16884613]
[55.14423752 -82.92895508]
[46.36363602 -95.09040833]
[37.58303070 -107.25186157]
[28.80242920 -119.41332245]
[20.02182579 -131.57478333]
[11.24122143 -143.73623657]
[2.46061850 -155.89768982]
[-10.42790890 -148.20513916]
[-23.93784714 -141.66519165]
[-37.96637344 -136.32760620]
[-52.40672302 -132.23301697]
[-67.14898682 -129.41256714]
[-82.08097839 -127.88774872]
[-97.08904266 -127.67014313]
[-112.05895996 -128.76141357]
[-126.87680054 -131.15325928]
[-141.42979431 -134.82748413]
[-155.60716248 -139.75610352]
[-169.30104065 -145.90162659]
[-182.40716553 -153.21726990]
[-194.82582092 -161.64736938]
[-206.46247864 -171.12774658]
[-217.22857666 -181.58625793]
[-227.04217529 -192.94329834]
[-235.82859802 -205.11244202]
[-243.52096558 -218.00108337]
[-250.06072998 -231.51110840]
[-255.39811707 -245.53971863]
[-259.49249268 -259.98013306]
[-262.31274414 -274.72244263]
[-263.83737183 -289.65444946]
[-264.05474854 -304.66250610]
[-262.96325684 -319.63241577]
[-260.57119751 -334.45022583]
[-256.89678955 -349.00314331]
[-251.96795654 -363.18045044]
[-245.82225037 -376.87423706]
[-238.50642395 -389.98028564]
[-230.07615662 -402.39880371]
[-220.59561157 -414.03533936]
[-210.13696289 -424.80130005]
[-198.77976990 -434.61471558]
[-186.61048889 -443.40097046]
[-173.72175598 -451.09317017]
[-160.21162415 -457.63272095]
[-146.18295288 -462.96990967]
[-131.74249268 -467.06411743]
[-117.00014496 -469.88415527]
[-102.06811523 -471.40853882]
[-87.06004333 -471.62573242]
[-72.09015656 -470.53402710]
[-57.27238083 -468.14178467]
[-42.71949387 -464.46713257]
[-28.54225540 -459.53811646]
[-14.84856319 -453.39221191]
[-1.74263549 -446.07620239]
[10.67578125 -437.64578247]
[22.31217384 -428.16506958]
[33.07798004 -417.70623779]
[42.89126587 -406.34893799]
[51.67734146 -394.17953491]
[59.36934280 -381.29067993]
[65.90872192 -367.78045654]
[71.24571991 -353.75170898]
[75.33970642 -339.31118774]
[78.15953064 -324.56881714]
[79.68373108 -309.63674927]
[79.90069580 -294.62869263]
[78.80879211 -279.65881348]
[76.41632080 -264.84106445]
[72.74149323 -250.28823853]
[67.81227112 -236.11106873]
[61.66617584 -222.41746521]
[54.34997940 -209.31163025]
[45.91936493 -196.89334106]
[36.43849945 -185.25708008]
[25.97953606 -174.49140930]
[14.62207413 -164.67828369]
[23.40267754 -152.51683044]
[32.18328094 -140.35537720]
[40.96388245 -128.19392395]
[49.74448776 -116.03247070]
[58.52508926 -103.87100983]
[67.30569458 -91.70955658]
[64.82015991 -106.50219727]
[65.32161713 -121.49381256]
[68.79007721 -136.08729553]
[75.08740234 -149.70138550]
[83.96277618 -161.79385376]
[95.06268311 -171.88305664]
[107.94503021 -179.56715393]
[122.09671021 -184.54005432]
[136.95407104 -186.60372925]
[151.92535400 -185.67597961]
[166.41426086 -181.79373169]
[179.84368896 -175.11163330]
[191.67875671 -165.89581299]
[201.44807434 -154.51336670]
[208.76254272 -141.41761780]
[213.33082581 -127.13018036]
[214.97097778 -112.22012329]
[213.61766052 -97.28129578]
[209.32476807 -82.90871429]
[202.26330566 -69.67482758]
[192.71452332 -58.10673904]
[181.05873108 -48.66520309]
[167.76019287 -41.72626877]
[153.34857178 -37.56631088]
[138.39788818 -36.35102081]
[123.50360870 -38.12880325]
[109.25897980 -42.82885361]
[96.23134613 -50.26396179]
[84.93960571 -60.13799667]
[75.83569336 -72.05412292]
[78.72096252 -57.33423233]
[81.60623932 -42.61433792]
[84.49150848 -27.89444733]
[87.37678528 -13.17455673]
[99.60670471 -0.58901227]
[93.49428558 16.78107071]
[96.23413086 19.00043106]
[98.03514099 22.65712738]
[98.23345947 27.29544258]
[96.39385986 32.18041611]
[98.83959198 46.97968674]
[101.28531647 61.77895737]
[103.73104095 76.57823181]
[106.17677307 91.37750244]
[109.17154694 106.07550812]
[112.71121979 120.65187836]
[123.30001831 128.01667786]
[125.94813538 140.23023987]
[119.76898193 150.62950134]
[123.09123993 165.25695801]
[126.41349792 179.88441467]
[129.73576355 194.51188660]
[133.05801392 209.13934326]
[143.65966797 220.88308716]
[138.93342590 235.00794983]
[142.25567627 249.63540649]
[157.23283386 248.42480469]
[172.22982788 249.35809326]
[186.94134521 252.41624451]
[201.06785583 257.53701782]
[214.32177734 264.61614990]
[226.43328857 273.50952148]
[237.15579224 284.03610229]
[246.27101135 295.98153687]
[253.59335327 309.10266113]
[258.97375488 323.13235474]
[262.30267334 337.78497314]
[263.51235962 352.76220703]
[262.57815552 367.75912476]
[259.51907349 382.47045898]
[254.39743042 396.59664917]
[247.31747437 409.85012817]
[238.42333984 421.96109009]
[227.89611816 432.68295288]
[215.95010376 441.79742432]
[202.82852173 449.11895752]
[188.79850769 454.49850464]
[174.14569092 457.82650757]
[159.16838074 459.03524780]
[144.17150879 458.10012817]
[129.46038818 455.04016113]
[115.33450317 449.91763306]
[102.08145142 442.83685303]
[89.97104645 433.94195557]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 182]
[15 181]
[17 179]
[18 178]
[19 177]
[20 176]
[21 175]
[23 172]
[24 171]
[30 170]
[31 169]
[32 168]
[33 167]
[34 166]
[35 162]
[38 160]
[39 159]
[40 158]
[41 157]
[42 156]
[43 126]
[44 125]
[45 124]
[46 123]
[47 122]
[48 121]
[49 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
