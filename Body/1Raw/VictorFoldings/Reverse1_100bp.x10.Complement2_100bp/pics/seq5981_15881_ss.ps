%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[93.54190826 485.50408936]
[97.88018036 499.94165039]
[98.63655090 514.99792480]
[95.76705170 529.79754639]
[89.43851471 543.48016357]
[80.01885986 555.25018311]
[68.05574799 564.42333984]
[54.24469376 570.46636963]
[39.38865280 573.02795410]
[24.35133553 571.95904541]
[10.00699234 567.32189941]
[-2.81041622 559.38604736]
[-13.35570145 548.61291504]
[-21.01577568 535.62884521]
[-25.34529114 521.18865967]
[-26.09253502 506.13192749]
[-23.21406555 491.33401489]
[-16.87723160 477.65527344]
[-7.45044756 465.89096069]
[4.51822329 456.72500610]
[18.33293915 450.69036865]
[33.19053268 448.13784790]
[48.22719955 449.21585083]
[52.84120941 434.94311523]
[57.45521545 420.67037964]
[62.06922531 406.39764404]
[56.84249115 395.48855591]
[60.56969070 383.55996704]
[71.77331543 377.16921997]
[76.59931183 362.96676636]
[81.42531586 348.76431274]
[86.25131226 334.56185913]
[88.80714417 319.78118896]
[89.03047180 304.78286743]
[89.25379944 289.78451538]
[81.70684814 276.94348145]
[89.64875031 263.26000977]
[89.42542267 248.26168823]
[88.75563812 233.27664185]
[88.08585358 218.29161072]
[87.41606903 203.30656433]
[86.74628448 188.32153320]
[86.07649994 173.33648682]
[77.77677917 185.83106995]
[64.38596344 192.59022522]
[49.40438461 191.84712219]
[36.74818420 183.79598999]
[29.72566605 170.54139709]
[30.17249870 155.54804993]
[37.97188187 142.73518372]
[51.08507538 135.45204163]
[66.08432007 135.60241699]
[79.04885101 143.14701843]
[86.58953857 156.11283875]
[88.15006256 141.19422913]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[95.37081146 72.16385651]
[96.93133545 57.24525070]
[98.38075256 42.31544113]
[99.71898651 27.37525558]
[101.05722046 12.43507099]
[89.83573914 6.04304647]
[81.89411163 -4.08145761]
[78.38430786 -16.41256714]
[79.79376221 -29.10873604]
[85.87796021 -40.28775024]
[95.70201874 -48.30577850]
[107.78414917 -51.99905396]
[109.56661224 -66.89276886]
[111.34908295 -81.78649139]
[100.28691101 -95.33815765]
[102.40660858 -112.36231232]
[115.91181946 -122.38468170]
[117.47234344 -137.30328369]
[119.03286743 -152.22189331]
[120.25984192 -167.17163086]
[121.15265656 -182.14503479]
[122.04547882 -197.11843872]
[122.93829346 -212.09184265]
[108.07144165 -216.98786926]
[94.98423004 -225.55352783]
[84.56266022 -237.20205688]
[77.51048279 -251.13819885]
[74.30169678 -266.41253662]
[75.14866638 -281.98611450]
[79.98811340 -296.80120850]
[88.48576355 -309.85299683]
[100.05945587 -320.25793457]
[113.91902161 -327.31332397]
[129.12020874 -330.54501343]
[129.79000854 -345.53005981]
[130.45979309 -360.51507568]
[131.12957764 -375.50012207]
[131.79936218 -390.48516846]
[117.56301117 -395.56631470]
[105.45783997 -404.61926270]
[96.56022644 -416.83908081]
[91.66133118 -431.13916016]
[91.19676208 -446.24795532]
[95.20783997 -460.82199097]
[103.33788300 -473.56536865]
[114.86399841 -483.34494019]
[128.76127625 -489.29113770]
[143.79397583 -490.87521362]
[158.62539673 -487.95629883]
[171.93676758 -480.79397583]
[182.54441833 -470.02508545]
[189.50514221 -456.60720825]
[192.19999695 -441.73342896]
[190.38934326 -426.72631836]
[184.23419189 -412.92031860]
[174.28184509 -401.54306030]
[161.41728210 -393.60614014]
[146.78439331 -389.81536865]
[146.11460876 -374.83035278]
[145.44482422 -359.84530640]
[144.77503967 -344.86026001]
[144.10525513 -329.87521362]
[157.90614319 -325.76913452]
[170.32833862 -318.46936035]
[180.64500427 -308.39779663]
[188.25126648 -296.13861084]
[192.69963074 -282.40441895]
[193.72631836 -267.99487305]
[191.26695251 -253.75009155]
[185.46047974 -240.50166321]
[176.64141846 -229.02412415]
[165.32054138 -219.98965454]
[152.15531921 -213.92875671]
[137.91169739 -211.19902039]
[137.01887512 -196.22561646]
[136.12606812 -181.25221252]
[135.23324585 -166.27880859]
[137.28759766 -163.41314697]
[138.05598450 -159.41006470]
[137.01896667 -154.88482666]
[133.95147705 -150.66136169]
[132.39094543 -135.74276733]
[130.83042908 -120.82415771]
[140.26501465 -112.04817200]
[142.96257019 -99.24952698]
[137.71900940 -87.05462646]
[126.24279785 -80.00402069]
[124.46033478 -65.11030579]
[122.67786407 -50.21658707]
[136.82550049 -40.40420532]
[144.09204102 -24.69717979]
[142.39375305 -7.38476038]
[132.10871887 6.75485897]
[115.99740601 13.77330589]
[114.65917206 28.71349144]
[113.32093811 43.65367508]
[115.85515594 50.59626389]
[111.84993744 58.80577469]
[110.28941345 73.72438049]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[103.06866455 142.75474548]
[101.50814056 157.67335510]
[101.06153870 172.66670227]
[101.73132324 187.65174866]
[102.40110779 202.63677979]
[103.07089233 217.62182617]
[103.74067688 232.60685730]
[104.41046143 247.59190369]
[106.87609100 251.16606140]
[107.96645355 254.95758057]
[107.78209686 258.50744629]
[106.56230927 261.43637085]
[104.64708710 263.48333740]
[112.17807007 277.39718628]
[104.25213623 290.00784302]
[104.02880859 305.00619507]
[103.80548096 320.00451660]
[110.77302551 306.72094727]
[121.02580261 295.77194214]
[133.82363892 287.94793701]
[148.24267578 283.81375122]
[163.24195862 283.66778564]
[177.73870850 287.52066040]
[190.68635559 295.09417725]
[201.15023804 305.84161377]
[208.37492371 318.98709106]
[211.83888245 333.58166504]
[211.29203796 348.57168579]
[206.77386475 362.87503052]
[198.61053467 375.45916748]
[187.39135742 385.41558838]
[173.92628479 392.02554321]
[159.18733215 394.81185913]
[144.23855591 393.57339478]
[130.15908813 388.39953613]
[117.96535492 379.66381836]
[108.53763580 367.99685669]
[102.55651093 354.24090576]
[100.45376587 339.38784790]
[95.62776947 353.59030151]
[90.80177307 367.79275513]
[85.97577667 381.99520874]
[89.98078156 399.96856689]
[76.34195709 411.01165771]
[71.72795105 425.28439331]
[67.11394501 439.55709839]
[62.49993134 453.82983398]
[75.32215118 461.75790405]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 209]
[24 208]
[25 207]
[26 206]
[29 204]
[30 203]
[31 202]
[32 201]
[33 179]
[34 178]
[35 177]
[37 175]
[38 170]
[39 169]
[40 168]
[41 167]
[42 166]
[43 165]
[54 164]
[55 163]
[56 162]
[57 161]
[59 159]
[60 158]
[61 157]
[62 155]
[63 154]
[64 153]
[71 148]
[72 147]
[73 146]
[76 142]
[77 141]
[78 140]
[79 136]
[80 135]
[81 134]
[82 133]
[93 121]
[94 120]
[95 119]
[96 118]
[97 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
