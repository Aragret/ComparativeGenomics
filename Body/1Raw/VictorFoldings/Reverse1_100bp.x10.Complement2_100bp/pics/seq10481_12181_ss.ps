%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[168.97605896 493.99136353]
[153.72816467 493.30981445]
[140.29006958 486.07241821]
[131.32989502 473.71609497]
[128.62672424 458.69427490]
[132.71723938 443.98950195]
[142.78929138 432.52142334]
[156.84304810 426.56704712]
[157.51283264 411.58203125]
[158.18261719 396.59698486]
[158.85241699 381.61193848]
[159.52220154 366.62689209]
[157.62890625 351.74685669]
[153.22790527 337.40701294]
[148.82690430 323.06716919]
[144.42590332 308.72732544]
[133.29495239 298.83029175]
[136.64276123 283.36737061]
[132.24176025 269.02749634]
[127.84076691 254.68766785]
[125.43029022 253.25665283]
[123.44142151 250.78462219]
[122.27350616 247.42732239]
[122.26219177 243.48214722]
[123.63214111 239.36181641]
[120.09246826 224.78543091]
[116.55279541 210.20906067]
[111.91965485 204.45095825]
[113.07064819 195.38932800]
[109.74839020 180.76187134]
[99.68334198 174.05206299]
[96.79579926 161.89288330]
[103.16439056 150.67663574]
[100.06027985 136.00134277]
[96.95616913 121.32604218]
[93.85205841 106.65073395]
[90.95057678 104.11030579]
[89.18297577 100.30327606]
[89.08980560 95.76473999]
[90.95247650 91.25138855]
[88.50675201 76.45211792]
[78.62289429 64.09817505]
[84.18148804 50.27966309]
[81.73576355 35.48039246]
[79.29003906 20.68112183]
[71.38809967 33.43100357]
[57.54512024 39.20783615]
[42.92417908 35.85700989]
[32.97852707 24.62829399]
[31.41764832 9.70972633]
[38.82371140 -3.33443785]
[52.43444061 -9.63904762]
[67.17336273 -6.85263968]
[77.54374695 3.98657560]
[76.87396240 -10.99846268]
[76.20417786 -25.98350143]
[72.97380829 -31.75206184]
[73.11970520 -37.43323517]
[75.74427032 -41.42330933]
[75.52094269 -56.42164612]
[75.29761505 -71.41998291]
[75.07428741 -86.41831970]
[72.71617126 -90.06431580]
[71.73918152 -93.88661957]
[72.02915192 -97.42940521]
[73.33560181 -100.32073212]
[75.31091309 -102.30976868]
[75.98069763 -117.29480743]
[76.65048218 -132.27984619]
[77.32026672 -147.26489258]
[77.99005127 -162.24992371]
[70.87667847 -176.38182068]
[79.17456818 -188.75091553]
[79.28623199 -203.75050354]
[78.83963013 -218.74385071]
[78.39302063 -233.73719788]
[77.94641876 -248.73054504]
[77.49980927 -263.72390747]
[77.05320740 -278.71725464]
[76.60659790 -293.71060181]
[61.65538406 -295.14739990]
[47.00215149 -298.44680786]
[32.87800598 -303.55676270]
[19.50570679 -310.39669800]
[7.09615278 -318.85876465]
[-4.15493965 -328.80944824]
[-14.07012367 -340.09182739]
[-22.49302483 -352.52798462]
[-29.29079819 -365.92178345]
[-34.35623550 -380.06195068]
[-37.60944748 -394.72549438]
[-38.99912262 -409.68118286]
[-38.50335312 -424.69308472]
[-36.12994766 -439.52447510]
[-31.91634178 -453.94143677]
[-25.92899132 -467.71658325]
[-18.26232529 -480.63269043]
[-9.03725719 -492.48602295]
[1.60071945 -503.08963013]
[13.48382950 -512.27630615]
[26.42465782 -519.90112305]
[40.21910858 -525.84387207]
[54.64962769 -530.01080322]
[69.48861694 -532.33624268]
[84.50205994 -532.78344727]
[99.45314789 -531.34539795]
[114.10610199 -528.04473877]
[128.22981262 -522.93359375]
[141.60154724 -516.09252930]
[154.01039124 -507.62945557]
[165.26063538 -497.67779541]
[175.17488098 -486.39459229]
[183.59672546 -473.95770264]
[190.39337158 -460.56335449]
[195.45762634 -446.42276001]
[198.70959473 -431.75894165]
[200.09802246 -416.80313110]
[199.60098267 -401.79125977]
[197.22633362 -386.96008301]
[193.01150513 -372.54348755]
[187.02299500 -358.76882935]
[179.35523987 -345.85336304]
[170.12918091 -334.00082397]
[159.49031067 -323.39810181]
[147.60643005 -314.21243286]
[134.66496277 -306.58868408]
[120.87000275 -300.64709473]
[106.43914032 -296.48135376]
[91.59994507 -294.15719604]
[92.04655457 -279.16384888]
[92.49316406 -264.17050171]
[92.93976593 -249.17715454]
[93.38637543 -234.18380737]
[93.83297729 -219.19046021]
[94.27958679 -204.19709778]
[106.30878448 -213.15803528]
[120.85292816 -209.48818970]
[127.19062042 -195.89283752]
[120.64994049 -182.39395142]
[106.05244446 -178.94244385]
[94.15960693 -188.08113098]
[101.32088470 -175.02105713]
[92.97509003 -161.58013916]
[92.30530548 -146.59510803]
[91.63552094 -131.61006165]
[90.96573639 -116.62502289]
[90.29595184 -101.63998413]
[90.07262421 -86.64164734]
[90.29595184 -71.64331055]
[90.51927948 -56.64497375]
[90.74260712 -41.64663696]
[91.18921661 -26.65328789]
[91.85900116 -11.66824818]
[92.52878571 3.31679058]
[94.08930969 18.23539543]
[96.53503418 33.03466797]
[98.98076630 47.83393860]
[108.68968201 59.12933731]
[103.30602264 74.00639343]
[105.75174713 88.80566406]
[108.52735901 103.54662323]
[111.63146973 118.22193146]
[114.73558044 132.89723206]
[117.83969116 147.57254028]
[130.46212769 160.97982788]
[124.37584686 177.43960571]
[127.69811249 192.06706238]
[131.12916565 206.66938782]
[134.66883850 221.24575806]
[138.20851135 235.82214355]
[142.18061829 250.28666687]
[146.58160400 264.62652588]
[150.98260498 278.96636963]
[162.42835999 289.88906860]
[158.76576233 304.32632446]
[163.16674805 318.66616821]
[167.56774902 333.00601196]
[171.96875000 347.34585571]
[174.41699219 332.54699707]
[180.42185974 318.80142212]
[189.61613464 306.94958496]
[201.43757629 297.71633911]
[215.16333008 291.66622925]
[229.95404053 289.16925049]
[244.90525818 290.37808228]
[259.10269165 295.21881104]
[271.67819214 303.39541626]
[281.86273193 314.40789795]
[289.03353882 327.58285522]
[292.75213623 342.11462402]
[292.79107666 357.11459351]
[289.14804077 371.66546631]
[282.04574585 384.87747192]
[271.91854858 395.94271851]
[259.38568115 404.18453979]
[245.21357727 409.09896851]
[230.26884460 410.38543701]
[215.46536255 407.96530151]
[201.70837402 401.98657227]
[189.83912659 392.81481934]
[180.58341980 381.01095581]
[174.50723267 367.29669189]
[173.83744812 382.28173828]
[173.16766357 397.26675415]
[172.49787903 412.25180054]
[171.82809448 427.23684692]
[185.29458618 434.42129517]
[194.30334473 446.74218750]
[197.06565857 461.75326538]
[193.03308105 476.47406006]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 206]
[9 205]
[10 204]
[11 203]
[12 202]
[13 178]
[14 177]
[15 176]
[16 175]
[18 173]
[19 172]
[20 171]
[25 170]
[26 169]
[27 168]
[29 167]
[30 166]
[33 164]
[34 163]
[35 162]
[36 161]
[40 160]
[41 159]
[43 157]
[44 156]
[45 155]
[54 154]
[55 153]
[56 152]
[59 151]
[60 150]
[61 149]
[62 148]
[67 147]
[68 146]
[69 145]
[70 144]
[71 143]
[73 141]
[74 135]
[75 134]
[76 133]
[77 132]
[78 131]
[79 130]
[80 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
