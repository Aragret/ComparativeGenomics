%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[165.45686340 555.83160400]
[171.24360657 541.96459961]
[178.94500732 529.06225586]
[188.40426636 517.38739014]
[199.42881775 507.17758179]
[211.79420471 498.64071655]
[205.11399841 485.21035767]
[198.43380737 471.77996826]
[191.75361633 458.34960938]
[184.48039246 445.23089600]
[176.62863159 432.45007324]
[168.77687073 419.66921997]
[160.92512512 406.88836670]
[162.26081848 421.82879639]
[159.88946533 436.64016724]
[153.95606995 450.41677856]
[144.82347107 462.31616211]
[133.05012512 471.61071777]
[119.35598755 477.73202515]
[104.57844543 480.30578613]
[89.62116241 479.17462158]
[75.39877319 474.40768433]
[62.78098297 466.29650879]
[52.53937912 455.33703613]
[45.30023575 442.19952393]
[41.50623322 427.68725586]
[41.38937378 412.68771362]
[44.95680618 398.11810303]
[51.99037552 384.86938477]
[62.05998230 373.75167847]
[74.54985809 365.44488525]
[88.69625092 360.45693970]
[103.63410187 359.09286499]
[118.44995117 361.43606567]
[132.23780823 367.34326172]
[144.15452576 376.45324707]
[153.47143555 388.20892334]
[150.36732483 373.53363037]
[147.26321411 358.85833740]
[144.15910339 344.18301392]
[141.05499268 329.50772095]
[137.95088196 314.83242798]
[134.84677124 300.15713501]
[131.74266052 285.48181152]
[121.53906250 274.63119507]
[126.25305939 259.52859497]
[123.14894867 244.85330200]
[120.04483795 230.17799377]
[116.94072723 215.50270081]
[113.83661652 200.82739258]
[110.73250580 186.15208435]
[98.14768982 178.26805115]
[94.79062653 163.42942810]
[103.14545441 150.28277588]
[100.04134369 135.60746765]
[96.93723297 120.93216705]
[93.83312225 106.25686646]
[91.42871857 104.38381195]
[89.65269470 101.59449768]
[88.84574890 98.11997986]
[89.25841522 94.31393433]
[91.00858307 90.61665344]
[88.78347015 75.78261566]
[86.55834961 60.94857025]
[84.33323669 46.11452484]
[81.99774933 31.29745674]
[79.55201721 16.49818611]
[76.99618530 1.71753275]
[74.33039093 -13.04368401]
[58.71292877 -18.47384834]
[48.02618408 -30.96740723]
[45.11499405 -47.05286407]
[50.68075943 -62.32303619]
[63.11539459 -72.64254761]
[60.23012161 -87.36243439]
[57.34484863 -102.08232880]
[54.45957565 -116.80222321]
[51.57430267 -131.52210999]
[48.68902969 -146.24200439]
[38.44173050 -158.29618835]
[43.58643723 -172.27407837]
[31.61760521 -178.45158386]
[25.48155594 -190.22271729]
[27.21972084 -203.18653870]
[35.97545242 -212.63993835]
[33.30965424 -227.40115356]
[30.64385986 -242.16236877]
[15.59797192 -243.10295105]
[1.21459484 -247.61758423]
[-11.67004013 -255.44378662]
[-22.30683708 -266.12658691]
[-30.07738876 -279.04486084]
[-34.52992249 -293.44757080]
[-35.40557480 -308.49737549]
[-32.65343475 -323.31930542]
[-26.43351173 -337.05160522]
[-17.10742378 -348.89590454]
[-5.21737337 -358.16360474]
[8.54536438 -364.31588745]
[23.38064194 -366.99505615]
[38.42595673 -366.04534912]
[52.80659485 -361.52200317]
[65.68648529 -353.68795776]
[76.31680298 -342.99874878]
[84.07952118 -330.07574463]
[88.52332306 -315.67031860]
[89.38984680 -300.61999512]
[86.62872314 -285.79974365]
[80.40047455 -272.07122803]
[71.06720734 -260.23257446]
[59.17154312 -250.97209167]
[45.40507889 -244.82817078]
[48.07087326 -230.06695557]
[50.73666763 -215.30572510]
[64.94990540 -206.31559753]
[68.32992554 -189.49624634]
[58.30632782 -175.15934753]
[68.34725189 -164.15802002]
[63.40892029 -149.12727356]
[66.29419708 -134.40737915]
[69.17946625 -119.68749237]
[72.06474304 -104.96759796]
[74.95001221 -90.24771118]
[77.83528137 -75.52781677]
[91.01898193 -71.96310425]
[101.43060303 -63.02292252]
[107.00114441 -50.40871811]
[106.59136200 -36.55915833]
[100.22422791 -24.17869759]
[89.09160614 -15.70948029]
[91.75740051 -0.94826269]
[96.03959656 5.07540846]
[94.35128784 14.05245876]
[96.79701996 28.85173035]
[100.98905182 34.93848801]
[99.16727448 43.88940811]
[101.39239502 58.72345352]
[103.61751556 73.55749512]
[105.84262848 88.39154053]
[108.50842285 103.15275574]
[111.61253357 117.82805634]
[114.71664429 132.50335693]
[117.82075500 147.17866516]
[130.78337097 155.81626892]
[133.72233582 170.74333191]
[125.40780640 183.04797363]
[128.51191711 197.72328186]
[131.61602783 212.39859009]
[134.72013855 227.07388306]
[137.82424927 241.74919128]
[140.92835999 256.42449951]
[151.35398865 268.32476807]
[146.41796875 282.37771606]
[149.52207947 297.05300903]
[152.62619019 311.72830200]
[155.73030090 326.40362549]
[158.83441162 341.07891846]
[161.93852234 355.75421143]
[165.04263306 370.42953491]
[168.14674377 385.10482788]
[173.70596313 399.03662109]
[181.55772400 411.81747437]
[189.40946960 424.59829712]
[197.26123047 437.37915039]
[201.79098511 423.07946777]
[215.04135132 416.04895020]
[229.42190552 420.31506348]
[236.69482422 433.43392944]
[232.69384766 447.89047241]
[219.71090698 455.40335083]
[205.18399048 451.66940308]
[211.86418152 465.09979248]
[218.54438782 478.53015137]
[225.22457886 491.96054077]
[239.49307251 487.24984741]
[254.28675842 484.61779785]
[269.30444336 484.11798096]
[284.24038696 485.76058960]
[298.79052734 489.51217651]
[312.65863037 495.29632568]
[325.56234741 502.99533081]
[337.23901367 512.45245361]
[347.45086670 523.47509766]
[355.99002075 535.83886719]
[362.68261719 549.29211426]
[367.39242554 563.56091309]
[370.02355957 578.35479736]
[370.52243042 593.37249756]
[368.87890625 608.30834961]
[365.12643433 622.85827637]
[359.34140015 636.72601318]
[351.64160156 649.62921143]
[342.18377686 661.30529785]
[331.16049194 671.51647949]
[318.79617310 680.05487061]
[305.34249878 686.74664307]
[291.07342529 691.45556641]
[276.27941895 694.08575439]
[261.26165771 694.58374023]
[246.32592773 692.93927002]
[231.77624512 689.18591309]
[217.90887451 683.40002441]
[205.00608826 675.69940186]
[193.33061218 666.24084473]
[183.12013245 655.21691895]
[174.58250427 642.85211182]
[167.89157104 629.39801025]
[163.18351746 615.12866211]
[160.55422974 600.33447266]
[160.05720520 585.31671143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 174]
[7 173]
[8 172]
[9 171]
[10 164]
[11 163]
[12 162]
[13 161]
[37 160]
[38 159]
[39 158]
[40 157]
[41 156]
[42 155]
[43 154]
[44 153]
[46 151]
[47 150]
[48 149]
[49 148]
[50 147]
[51 146]
[54 143]
[55 142]
[56 141]
[57 140]
[62 139]
[63 138]
[64 137]
[65 136]
[66 134]
[67 133]
[68 131]
[69 130]
[74 124]
[75 123]
[76 122]
[77 121]
[78 120]
[79 119]
[81 117]
[85 114]
[86 113]
[87 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
