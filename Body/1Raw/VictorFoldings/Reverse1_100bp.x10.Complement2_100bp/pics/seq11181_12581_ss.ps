%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[145.68345642 628.17510986]
[131.16911316 624.05242920]
[118.21687317 616.31280518]
[107.70982361 605.48394775]
[100.36435699 592.30413818]
[96.68130493 577.67205811]
[96.91177368 562.58532715]
[101.04005432 548.07263184]
[108.78467560 535.12335205]
[119.61759949 524.62048340]
[132.80021667 517.28009033]
[147.43370056 513.60272217]
[147.65702820 498.60437012]
[147.88035583 483.60601807]
[148.10368347 468.60769653]
[147.88035583 453.60934448]
[147.21057129 438.62432861]
[146.54078674 423.63928223]
[144.64749146 408.75924683]
[141.54338074 394.08395386]
[138.43927002 379.40863037]
[135.33517456 364.73333740]
[132.23106384 350.05804443]
[129.95787048 348.41769409]
[128.19746399 345.77804565]
[127.33374023 342.32995605]
[127.67443085 338.39950562]
[129.40652466 334.41781616]
[127.18140411 319.58377075]
[124.95628357 304.74972534]
[122.73117065 289.91567993]
[110.36528015 284.88308716]
[102.03406525 274.31262207]
[99.99765778 260.89910889]
[104.89370728 248.13009644]
[115.54322052 239.37918091]
[113.53920746 224.51365662]
[111.53519440 209.64813232]
[109.53118134 194.78259277]
[107.52716827 179.91706848]
[105.52315521 165.05154419]
[102.96732330 150.27088928]
[99.86321259 135.59558105]
[96.75910187 120.92028046]
[85.38890839 115.31919098]
[79.25638580 104.22659302]
[80.55987549 91.61887360]
[88.83211517 82.01556396]
[85.94684601 67.29566956]
[83.06156921 52.57577896]
[68.62534332 47.52181244]
[58.72248840 35.99661636]
[55.93658447 21.16067505]
[60.91740799 7.01686478]
[72.23283386 -2.66955185]
[69.34756470 -17.38944244]
[64.62590027 -25.20888901]
[66.53062439 -32.34988403]
[63.86483002 -47.11109924]
[61.19903564 -61.87231827]
[56.59431458 -69.76119232]
[58.60514832 -76.87303925]
[56.15942001 -91.67230988]
[53.71369553 -106.47158051]
[51.26796722 -121.27085114]
[40.44062805 -126.18057251]
[33.39979172 -135.61071777]
[31.80188370 -147.14936829]
[35.92929459 -157.91413879]
[44.64862442 -165.27209473]
[42.64461136 -180.13761902]
[40.64059830 -195.00314331]
[38.63658142 -209.86868286]
[36.63256836 -224.73420715]
[34.07673645 -239.51486206]
[30.86346245 -254.16664124]
[27.54120255 -268.79409790]
[24.21894455 -283.42156982]
[20.89668465 -298.04901123]
[17.57442474 -312.67648315]
[14.25216579 -327.30395508]
[-0.77451360 -326.64160156]
[-15.67794514 -328.67324829]
[-29.97904396 -333.33352661]
[-43.21809006 -340.47268677]
[-54.96950531 -349.86117554]
[-64.85552979 -361.19723511]
[-72.55835724 -374.11645508]
[-77.83039093 -388.20352173]
[-80.50215149 -403.00561523]
[-80.48774719 -418.04687500]
[-77.78764343 -432.84381104]
[-72.48863983 -446.92074585]
[-64.76107025 -459.82516479]
[-54.85335922 -471.14230347]
[-43.08398438 -480.50827026]
[-29.83128738 -487.62203979]
[-15.52128792 -492.25494385]
[-0.61399299 -494.25802612]
[14.41138935 -493.56689453]
[29.07185555 -490.20379639]
[42.89613342 -484.27679443]
[55.43982697 -475.97647095]
[66.29971313 -465.56961060]
[75.12668610 -453.39077759]
[81.63699341 -439.83142090]
[85.62136841 -425.32748413]
[86.95171356 -410.34515381]
[85.58527374 -395.36608887]
[81.56597137 -380.87176514]
[75.02301025 -367.32815552]
[66.16672516 -355.17062378]
[55.28179932 -344.78994751]
[42.71814346 -336.51986694]
[28.87962532 -330.62622070]
[32.20188522 -315.99874878]
[35.52414322 -301.37127686]
[38.84640503 -286.74383545]
[42.16866302 -272.11636353]
[45.49092484 -257.48889160]
[50.03781509 -251.66244507]
[48.75204086 -242.61897278]
[58.99721527 -253.57507324]
[73.96203613 -252.54843140]
[82.61500549 -240.29583740]
[78.57746124 -225.84944153]
[64.82573700 -219.85859680]
[51.49809647 -226.73822021]
[53.50210953 -211.87269592]
[55.50612640 -197.00715637]
[57.51013947 -182.14163208]
[59.51415253 -167.27610779]
[74.71357727 -157.07350159]
[77.67946625 -138.68556213]
[66.06723785 -123.71657562]
[68.51296234 -108.91730499]
[70.95869446 -94.11803436]
[73.40441895 -79.31876373]
[75.96025085 -64.53811646]
[78.62604523 -49.77689743]
[81.29183960 -35.01567841]
[84.06745148 -20.27471542]
[86.95272827 -5.55482435]
[101.08763885 -0.85697562]
[111.03945160 10.35986137]
[114.06055450 25.14970016]
[109.24147034 39.56057358]
[97.78146362 49.69050598]
[100.66674042 64.41039276]
[103.55200958 79.13028717]
[117.45539093 88.02206421]
[120.75035858 104.19336700]
[111.43440247 117.81616974]
[114.53851318 132.49147034]
[117.64262390 147.16677856]
[127.88780212 136.21066284]
[142.85263062 137.23731995]
[151.50558472 149.48991394]
[147.46804810 163.93630981]
[133.71632385 169.92715454]
[120.38868713 163.04753113]
[122.39270020 177.91305542]
[124.39671326 192.77857971]
[126.40072632 207.64411926]
[128.40473938 222.50964355]
[130.40875244 237.37516785]
[145.40615845 245.19654846]
[152.71392822 260.26632690]
[149.63031006 276.55905151]
[137.56521606 287.69058228]
[139.79032898 302.52462769]
[142.01544189 317.35867310]
[144.24057007 332.19271851]
[146.90635681 346.95391846]
[150.01046753 361.62921143]
[153.11457825 376.30453491]
[156.21868896 390.97982788]
[159.32279968 405.65512085]
[165.03404236 391.78494263]
[176.47743225 382.08706665]
[191.09648132 378.72802734]
[205.62527466 382.45822144]
[216.81802368 392.44433594]
[222.17424011 406.45541382]
[220.49736023 421.36138916]
[212.16195679 433.83221436]
[199.03022766 441.08184814]
[184.03579712 441.49075317]
[170.52847290 434.96752930]
[161.52583313 422.96948242]
[162.19561768 437.95452881]
[162.86540222 452.93957520]
[165.33102417 456.51373291]
[166.42138672 460.30526733]
[166.23703003 463.85510254]
[165.01724243 466.78405762]
[163.10202026 468.83102417]
[162.87869263 483.82934570]
[162.65536499 498.82769775]
[162.43203735 513.82604980]
[176.94955444 517.93750000]
[189.90777588 525.66711426]
[200.42318726 536.48785400]
[207.77882385 549.66198730]
[211.47317505 564.29119873]
[211.25436401 579.37811279]
[207.13728333 593.89404297]
[199.40266418 606.84924316]
[188.57785034 617.36047363]
[175.40090942 624.71105957]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 200]
[13 199]
[14 198]
[15 197]
[16 192]
[17 191]
[18 190]
[19 178]
[20 177]
[21 176]
[22 175]
[23 174]
[28 173]
[29 172]
[30 171]
[31 170]
[36 166]
[37 165]
[38 164]
[39 163]
[40 162]
[41 161]
[42 155]
[43 154]
[44 153]
[48 150]
[49 149]
[50 148]
[55 143]
[56 142]
[58 141]
[59 140]
[60 139]
[62 138]
[63 137]
[64 136]
[65 135]
[70 132]
[71 131]
[72 130]
[73 129]
[74 128]
[75 122]
[76 120]
[77 119]
[78 118]
[79 117]
[80 116]
[81 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
