%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[145.35003662 455.42300415]
[146.03622437 440.42684937]
[148.16656494 425.56692505]
[151.72116089 410.98199463]
[156.66682434 396.80819702]
[162.95739746 383.17794800]
[170.53411865 370.21844482]
[179.32626343 358.05068970]
[189.25172424 346.78833008]
[200.21783447 336.53652954]
[191.07904053 324.64187622]
[181.94023132 312.74725342]
[172.80143738 300.85263062]
[163.57432556 289.02636719]
[154.25944519 277.26910400]
[156.31097412 292.12814331]
[152.59442139 306.66043091]
[143.66113281 318.71017456]
[130.83630371 326.48986816]
[116.02241516 328.84545898]
[101.41702271 325.42745972]
[89.18675232 316.74298096]
[81.14589691 304.08026123]
[78.48725128 289.31774902]
[81.60523224 274.64538574]
[90.03728485 262.23971558]
[102.53257751 253.94107056]
[117.23751068 250.98048401]
[131.97068787 253.79714966]
[144.54515076 261.97189331]
[137.86495972 248.54151917]
[125.26925659 240.59182739]
[126.05105591 224.78994751]
[119.37086487 211.35957336]
[112.69066620 197.92918396]
[106.01047516 184.49880981]
[106.00791931 199.49880981]
[102.32461548 214.03956604]
[95.18579865 227.23187256]
[85.02801514 238.26905823]
[72.47239685 246.47616577]
[58.28674698 251.35133362]
[43.33851624 252.59645081]
[28.54179001 250.13537598]
[14.80139732 244.11859131]
[2.95756936 234.91404724]
[-6.26544046 223.08457947]
[-12.30364132 209.35359192]
[-14.78779507 194.56072998]
[-13.56599426 179.61056519]
[-8.71295261 165.41732788]
[-0.52543598 152.84893799]
[10.49588585 142.67393494]
[23.67705536 135.51455688]
[38.21203995 131.80857849]
[53.21201706 131.78263855]
[67.75973511 135.43830872]
[80.96559143 142.55204773]
[92.02204895 152.68885803]
[100.25300598 165.22886658]
[98.47054291 150.33515930]
[96.68807983 135.44143677]
[94.90560913 120.54772186]
[84.08045959 113.95456696]
[78.96202850 102.35908508]
[81.38512421 89.91793060]
[90.48114777 81.09092712]
[88.92062378 66.17232513]
[79.78960419 53.25198364]
[86.16084290 39.78882599]
[84.60031891 24.87022018]
[83.03979492 9.95161533]
[81.47927094 -4.96698904]
[79.91874695 -19.88559341]
[76.35076141 -25.45165062]
[76.15824890 -31.13143730]
[78.54066467 -35.27065277]
[77.42501831 -50.22910690]
[76.30937195 -65.18756104]
[75.19371796 -80.14601135]
[74.07807159 -95.10446930]
[70.67739105 -100.77429199]
[70.65406799 -106.45729065]
[73.15866852 -110.52373505]
[72.48888397 -125.50877380]
[71.81909943 -140.49382019]
[71.14931488 -155.47885132]
[70.47953033 -170.46389771]
[69.80974579 -185.44892883]
[60.83530807 -194.71296692]
[60.58594131 -207.20782471]
[68.65001678 -216.22431946]
[68.20341492 -231.21766663]
[67.75680542 -246.21102905]
[67.31020355 -261.20437622]
[52.78474045 -265.43121338]
[40.27750778 -273.94146729]
[31.01384163 -285.90136719]
[25.90129662 -300.13925171]
[25.44074821 -315.26019287]
[29.67731857 -329.78283691]
[38.19594955 -342.28436279]
[50.16207123 -351.54000854]
[64.40336609 -356.64300537]
[79.52462006 -357.09341431]
[94.04440308 -352.84713745]
[106.54022217 -344.32012939]
[115.78784943 -332.34780884]
[120.88130951 -318.10308838]
[121.32159424 -302.98153687]
[117.06556702 -288.46459961]
[108.53018951 -275.97448730]
[96.55167389 -266.73489380]
[82.30355072 -261.65097046]
[82.75016022 -246.65762329]
[83.19676208 -231.66427612]
[83.64337158 -216.67092896]
[93.65757751 -202.25973511]
[84.79478455 -186.11871338]
[85.46456909 -171.13368225]
[86.13435364 -156.14863586]
[86.80413818 -141.16360474]
[87.47392273 -126.17855835]
[88.14370728 -111.19351959]
[89.03652954 -96.22011566]
[90.15217590 -81.26166534]
[91.26782227 -66.30320740]
[92.38346863 -51.34475708]
[93.49912262 -36.38630295]
[94.83735657 -21.44611740]
[96.39788055 -6.52751207]
[97.95840454 8.39109230]
[99.51892090 23.30969810]
[101.07944489 38.22830200]
[110.09883881 50.08156204]
[103.83922577 64.61180115]
[105.39974976 79.53040314]
[118.45440674 89.62712097]
[120.29349518 106.02790070]
[109.79933167 118.76525879]
[111.58179474 133.65896606]
[113.36425781 148.55268860]
[115.14672852 163.44641113]
[119.44084930 177.81861877]
[126.12104797 191.24899292]
[132.80123901 204.67936707]
[139.48143005 218.10974121]
[152.55494690 227.02006531]
[151.29533386 241.86131287]
[157.97552490 255.29168701]
[166.01669312 267.95422363]
[175.33158875 279.71145630]
[183.11360168 284.49456787]
[184.69606018 291.71380615]
[193.83486938 303.60845947]
[202.97366333 315.50308228]
[212.11247253 327.39770508]
[224.84335327 319.44284058]
[238.28256226 312.75381470]
[252.30462646 307.39309692]
[266.77862549 303.41073608]
[281.56939697 300.84393311]
[296.53884888 299.71664429]
[311.54721069 300.03939819]
[326.45437622 301.80920410]
[341.12112427 305.00949097]
[355.41055298 309.61041260]
[369.18917847 315.56896973]
[382.32839966 322.82958984]
[394.70553589 331.32443237]
[406.20498657 340.97418213]
[416.71942139 351.68878174]
[426.15063477 363.36813354]
[434.41058350 375.90322876]
[441.42214966 389.17703247]
[447.11987305 403.06555176]
[451.45053101 417.43917847]
[454.37371826 432.16366577]
[455.86209106 447.10156250]
[455.90182495 462.11334229]
[454.49246216 477.05889893]
[451.64724731 491.79864502]
[447.39270020 506.19497681]
[441.76852417 520.11346436]
[434.82730103 533.42413330]
[426.63375854 546.00274658]
[417.26446533 557.73187256]
[406.80688477 568.50195312]
[395.35864258 578.21240234]
[383.02664185 586.77264404]
[369.92599487 594.10266113]
[356.17907715 600.13403320]
[341.91421509 604.81048584]
[327.26461792 608.08831787]
[312.36703491 609.93695068]
[297.36056519 610.33911133]
[282.38534546 609.29107666]
[267.58120728 606.80255127]
[253.08634949 602.89685059]
[239.03611755 597.61035156]
[225.56170654 590.99255371]
[212.78890991 583.10510254]
[200.83700562 574.02172852]
[189.81759644 563.82727051]
[179.83352661 552.61682129]
[170.97805786 540.49505615]
[163.33386230 527.57525635]
[156.97232056 513.97796631]
[151.95280457 499.83016968]
[148.32220459 485.26397705]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 157]
[11 156]
[12 155]
[13 154]
[14 152]
[15 151]
[30 150]
[31 149]
[33 147]
[34 146]
[35 145]
[36 144]
[60 143]
[61 142]
[62 141]
[63 140]
[67 137]
[68 136]
[70 134]
[71 133]
[72 132]
[73 131]
[74 130]
[77 129]
[78 128]
[79 127]
[80 126]
[81 125]
[84 124]
[85 123]
[86 122]
[87 121]
[88 120]
[89 119]
[92 117]
[93 116]
[94 115]
[95 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
