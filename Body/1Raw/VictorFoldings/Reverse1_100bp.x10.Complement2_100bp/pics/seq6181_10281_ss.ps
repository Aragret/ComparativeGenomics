%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[52.25286102 652.32299805]
[46.24596786 666.11840820]
[37.73660278 678.52752686]
[27.03237724 689.10186768]
[14.52023888 697.45904541]
[0.65249532 703.29705811]
[-14.06954384 706.40478516]
[-29.11368561 706.66998291]
[-43.93609238 704.08294678]
[-58.00094604 698.73724365]
[-70.79981232 690.82611084]
[-81.87001038 680.63562012]
[-90.81137848 668.53399658]
[-97.30066681 654.95880127]
[-101.10331726 640.40081787]
[-102.08184814 625.38616943]
[-100.20088959 610.45770264]
[-95.52844238 596.15509033]
[-88.23341370 582.99536133]
[-78.57950592 571.45416260]
[-66.91571045 561.94879150]
[-53.66365433 554.82281494]
[-39.30240631 550.33386230]
[-24.35110474 548.64410400]
[-9.35023499 549.81475830]
[-5.37813902 535.35028076]
[-1.40604270 520.88574219]
[2.56605363 506.42120361]
[6.43035889 491.92752075]
[10.18665981 477.40545654]
[13.94296074 462.88339233]
[17.69926071 448.36132812]
[21.23893356 433.78494263]
[24.56119347 419.15750122]
[27.88345337 404.53002930]
[31.20571136 389.90258789]
[20.00195503 377.90451050]
[18.13868332 361.42758179]
[26.54704857 346.94308472]
[42.08463669 340.25881958]
[45.18874741 325.58349609]
[48.29285812 310.90820312]
[51.39696884 296.23291016]
[37.59290695 302.10214233]
[24.32551575 295.10382080]
[21.37502098 280.39688110]
[30.91641808 268.82269287]
[45.91614151 268.91333008]
[55.31657791 280.60037231]
[59.50358582 266.19659424]
[63.69059753 251.79281616]
[67.87760925 237.38903809]
[72.06462097 222.98524475]
[76.14428711 208.55070496]
[80.11638641 194.08618164]
[83.00165558 179.36628723]
[84.78412628 164.47256470]
[86.56658936 149.57884216]
[88.34905243 134.68513489]
[90.13152313 119.79141235]
[91.91398621 104.89769745]
[89.68966675 100.14729309]
[90.28524780 94.48879242]
[93.97767639 89.58951569]
[96.20278931 74.75547028]
[97.20705414 59.78912735]
[96.98372650 44.79079056]
[89.04181671 31.10734558]
[96.58876801 18.26628685]
[88.64686584 4.58284140]
[96.19381714 -8.25821686]
[95.97048950 -23.25655365]
[95.74716187 -38.25489044]
[95.52383423 -53.25322723]
[92.84536743 -57.73350906]
[92.21620178 -62.33323288]
[93.33867645 -66.25179291]
[95.64048767 -68.92274475]
[96.08708954 -83.91609955]
[96.53369904 -98.90944672]
[93.66118622 -107.58045959]
[97.10021973 -114.12223816]
[97.77000427 -129.10726929]
[98.43978882 -144.09231567]
[99.10957336 -159.07734680]
[99.77935791 -174.06239319]
[100.44914246 -189.04742432]
[101.11892700 -204.03247070]
[101.78871918 -219.01750183]
[102.45850372 -234.00254822]
[94.34635162 -244.03030396]
[95.21271515 -256.49758911]
[104.04904175 -264.75866699]
[104.94185638 -279.73208618]
[105.83467865 -294.70550537]
[91.43566132 -299.17001343]
[78.52384949 -306.95129395]
[67.84991455 -317.59698486]
[60.03442383 -330.48812866]
[55.53175735 -344.87524414]
[54.60369873 -359.92190552]
[57.30420303 -374.75332642]
[63.47626495 -388.50720215]
[72.76104736 -400.38391113]
[84.61875153 -409.69296265]
[98.35997772 -415.89312744]
[113.18583679 -418.62393188]
[128.23437500 -417.72665405]
[142.63067627 -413.25341797]
[155.53776550 -405.46429443]
[166.20524597 -394.81213379]
[174.01292419 -381.91625977]
[178.50686646 -367.52639771]
[179.42579651 -352.47918701]
[176.71630859 -337.64941406]
[170.53590393 -323.89926147]
[161.24392700 -312.02819824]
[149.38058472 -302.72634888]
[135.63558960 -296.53451538]
[120.80808258 -293.81268311]
[119.91526794 -278.83926392]
[119.02245331 -263.86587524]
[127.71102142 -248.61871338]
[117.44354248 -233.33276367]
[116.77375793 -218.34771729]
[116.10396576 -203.36268616]
[115.43418121 -188.37763977]
[114.76439667 -173.39260864]
[114.09461212 -158.40756226]
[113.42482758 -143.42253113]
[112.75504303 -128.43748474]
[112.08525848 -113.45245361]
[111.52704620 -98.46283722]
[111.08044434 -83.46949005]
[110.63383484 -68.47614288]
[110.52217102 -53.47655487]
[110.74549866 -38.47821808]
[110.96882629 -23.47988129]
[111.19215393 -8.48154449]
[119.11808777 4.12911987]
[111.58710480 18.04295921]
[119.51303864 30.65362358]
[111.98206329 44.56746292]
[112.20539093 59.56579971]
[120.47792816 47.05320358]
[133.57302856 39.73757172]
[148.56520081 39.25324249]
[162.10516357 45.70841217]
[171.16806030 57.66098022]
[173.72921753 72.44071198]
[169.21644592 86.74578094]
[158.63793945 97.38039398]
[144.35693359 101.96875000]
[129.56385803 99.48580933]
[117.56352997 90.48625183]
[111.03683472 76.98059082]
[108.81171417 91.81463623]
[106.80770111 106.68016052]
[105.02523804 121.57388306]
[103.24277496 136.46759033]
[101.46030426 151.36131287]
[99.67784119 166.25503540]
[97.89537048 181.14874268]
[108.12124634 170.17462158]
[122.43493652 165.68927002]
[137.09487915 168.86515808]
[148.26898193 178.87211609]
[153.03639221 193.09436035]
[150.15089417 207.81420898]
[140.36676025 219.18392944]
[126.24154663 224.23152161]
[111.46753693 221.63755798]
[99.90663147 212.08007812]
[94.58090973 198.05827332]
[90.60881042 212.52279663]
[91.35403442 221.62677002]
[86.46840668 227.17225647]
[82.28139496 241.57604980]
[78.09438324 255.97982788]
[73.90737152 270.38360596]
[69.72035980 284.78738403]
[66.07227325 299.33700562]
[62.96815872 314.01229858]
[59.86405182 328.68762207]
[56.75994110 343.36291504]
[66.72909546 352.88168335]
[70.66186523 365.97946167]
[67.63345337 379.20437622]
[58.53911591 389.12591553]
[45.83317184 393.22482300]
[42.51091385 407.85229492]
[39.18865204 422.47976685]
[35.86639404 437.10720825]
[37.45388794 443.52526855]
[35.80879211 448.96499634]
[32.22132111 452.11764526]
[28.46501923 466.63967896]
[24.70871925 481.16174316]
[20.95241737 495.68380737]
[21.83309937 504.77569580]
[17.03057671 510.39331055]
[13.05848122 524.85784912]
[9.08638477 539.32232666]
[5.11428881 553.78686523]
[18.60922050 560.44146729]
[30.60073090 569.52990723]
[40.65533829 580.72369385]
[48.40957260 593.61822510]
[53.58312225 607.74731445]
[55.98896790 622.60021973]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 204]
[26 203]
[27 202]
[28 201]
[29 199]
[30 198]
[31 197]
[32 196]
[33 193]
[34 192]
[35 191]
[36 190]
[40 185]
[41 184]
[42 183]
[43 182]
[49 181]
[50 180]
[51 179]
[52 178]
[53 177]
[54 175]
[55 174]
[56 163]
[57 162]
[58 161]
[59 160]
[60 159]
[61 158]
[64 157]
[65 156]
[66 144]
[67 143]
[69 141]
[71 139]
[72 138]
[73 137]
[74 136]
[78 135]
[79 134]
[80 133]
[82 132]
[83 131]
[84 130]
[85 129]
[86 128]
[87 127]
[88 126]
[89 125]
[90 124]
[93 122]
[94 121]
[95 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
