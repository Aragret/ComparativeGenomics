%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[92.75411224 709.60919189]
[88.09627533 695.22875977]
[87.88573456 680.11431885]
[92.14121246 665.60974121]
[100.48430634 653.00482178]
[112.17317200 643.42034912]
[126.16842651 637.70861816]
[124.83019257 622.76843262]
[115.98828125 610.78216553]
[122.46353149 596.34674072]
[121.12529755 581.40655518]
[119.78706360 566.46636963]
[118.44882965 551.52618408]
[117.11059570 536.58599854]
[115.77236176 521.64581299]
[114.43412781 506.70562744]
[112.98471069 491.77581787]
[111.42418671 476.85720825]
[109.86366272 461.93862915]
[96.89739990 454.65753174]
[90.63069916 440.97570801]
[93.65737152 426.05282593]
[105.02210999 415.65335083]
[103.46158600 400.73474121]
[101.90106201 385.81616211]
[100.34054565 370.89755249]
[92.29777527 383.55905151]
[78.73152161 389.95880127]
[63.84542465 388.11373901]
[52.25211334 378.59558105]
[47.54389572 364.35366821]
[51.17966843 349.80096436]
[62.03284073 339.44680786]
[76.74044800 336.49954224]
[90.74517059 341.87240601]
[99.70758820 353.90081787]
[100.15419006 338.90744019]
[100.60079956 323.91409302]
[100.60079956 308.91409302]
[100.15419006 293.92074585]
[99.70758820 278.92739868]
[99.26097870 263.93405151]
[98.81437683 248.94070435]
[98.36776733 233.94735718]
[97.80955505 218.95774841]
[97.13977051 203.97270203]
[96.46998596 188.98767090]
[95.80020142 174.00262451]
[83.29030609 165.96269226]
[77.84906769 151.93212891]
[81.75860596 137.21585083]
[93.72218323 127.51126099]
[93.05239868 112.52622223]
[85.69034576 100.63959503]
[91.96256256 88.14356232]
[83.61677551 74.70264435]
[90.77805328 61.64257812]
[90.10826874 46.65753937]
[88.54774475 31.73893547]
[86.10202026 16.93966484]
[83.65628815 2.14039445]
[81.21056366 -12.65887642]
[78.43495178 -27.39983940]
[75.33084106 -42.07514191]
[72.22673035 -56.75044250]
[68.73649597 -60.63185120]
[67.23432159 -65.02465820]
[67.58208466 -69.08595276]
[69.32714844 -72.14978790]
[66.88142395 -86.94905853]
[64.00854492 -90.20491028]
[62.47536087 -93.83999634]
[62.23657990 -97.38659668]
[63.09967422 -100.43974304]
[64.75807953 -102.69979095]
[63.19755554 -117.61840057]
[61.63703156 -132.53700256]
[60.07650757 -147.45561218]
[48.74710846 -137.62480164]
[33.97029495 -140.20274353]
[26.63898468 -153.28906250]
[32.15754700 -167.23703003]
[46.45790100 -171.76469421]
[58.99750137 -163.53587341]
[58.55089569 -178.52922058]
[58.10429001 -193.52256775]
[54.72076035 -202.00723267]
[57.76432800 -208.74211121]
[57.54100037 -223.74044800]
[57.31767273 -238.73878479]
[57.09434509 -253.73712158]
[53.83751297 -262.27120972]
[56.98101425 -268.96002197]
[56.98101425 -283.96002197]
[56.98101425 -298.96002197]
[56.98101425 -313.96002197]
[42.58784103 -318.61746216]
[30.33953857 -327.49633789]
[21.43606949 -339.72677612]
[16.74970436 -354.11053467]
[16.73956871 -369.23849487]
[21.40665245 -383.62854004]
[30.29372215 -395.87091064]
[42.53011703 -404.76617432]
[56.91703415 -409.44290161]
[72.04499817 -409.44290161]
[86.43191528 -404.76617432]
[98.66830444 -395.87091064]
[107.55537415 -383.62854004]
[112.22245789 -369.23849487]
[112.21232605 -354.11053467]
[107.52596283 -339.72677612]
[98.62248993 -327.49633789]
[86.37419128 -318.61746216]
[71.98101807 -313.96002197]
[71.98101807 -298.96002197]
[71.98101807 -283.96002197]
[71.98101807 -268.96002197]
[72.09268188 -253.96044922]
[72.31600952 -238.96211243]
[72.53933716 -223.96377563]
[72.76266479 -208.96543884]
[73.09764099 -193.96917725]
[73.54425049 -178.97583008]
[73.99085236 -163.98246765]
[74.99510956 -149.01612854]
[76.55563354 -134.09751892]
[78.11615753 -119.17891693]
[79.67668152 -104.26031494]
[81.68069458 -89.39479065]
[84.12642670 -74.59552002]
[86.90203094 -59.85455322]
[90.00614166 -45.17925262]
[93.11025238 -30.50395012]
[95.85010529 -28.28458977]
[97.65111542 -24.62789345]
[97.84942627 -19.98957825]
[96.00983429 -15.10460377]
[98.45555878 -0.30533296]
[100.90129089 14.49393749]
[103.34701538 29.29320908]
[111.24894714 16.54332924]
[125.09193420 10.76649475]
[139.71287537 14.11732292]
[149.65852356 25.34603691]
[151.21940613 40.26460648]
[143.81333923 53.30876923]
[130.20260620 59.61338043]
[115.46368408 56.82696915]
[105.09330750 45.98775482]
[105.76309204 60.97279358]
[114.06097412 73.34188080]
[106.94760132 87.47377777]
[114.30965424 99.36040497]
[108.03743744 111.85643768]
[108.70722198 126.84147644]
[121.48889160 135.44001770]
[126.69575500 149.74882507]
[122.52796173 164.20889282]
[110.78524017 173.33283997]
[111.45502472 188.31788635]
[112.12480927 203.30291748]
[112.79459381 218.28796387]
[116.30407715 226.72131348]
[113.36111450 233.50074768]
[113.80772400 248.49409485]
[114.25433350 263.48745728]
[114.70093536 278.48080444]
[115.14754486 293.47415161]
[115.59414673 308.46749878]
[118.00628662 312.07797241]
[119.04007721 315.88531494]
[118.80288696 319.43203735]
[117.53962708 322.34249878]
[115.59414673 324.36071777]
[115.14754486 339.35406494]
[114.70093536 354.34741211]
[115.25914764 369.33700562]
[116.81967163 384.25561523]
[118.38019562 399.17422485]
[119.94071960 414.09283447]
[133.21151733 421.91537476]
[139.26083374 435.88888550]
[135.96110535 450.57138062]
[124.78227234 460.37808228]
[126.34278870 475.29669189]
[127.90331268 490.21530151]
[131.90853882 498.42480469]
[129.37431335 505.36740112]
[130.71255493 520.30755615]
[132.05078125 535.24774170]
[133.38902283 550.18792725]
[134.72724915 565.12811279]
[136.06549072 580.06829834]
[137.40371704 595.00848389]
[146.34135437 608.06335449]
[139.77038574 621.43017578]
[141.10861206 636.37036133]
[155.89617920 639.50396729]
[169.10231018 646.85852051]
[179.55274963 657.78002930]
[186.31822205 671.29742432]
[188.79718018 686.20867920]
[186.76916504 701.18798828]
[180.41452026 714.90325928]
[170.29830933 726.13507080]
[157.32003784 733.88464355]
[142.63372803 737.46295166]
[127.54528809 736.55169678]
[113.39636993 731.23193359]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 198]
[8 197]
[10 195]
[11 194]
[12 193]
[13 192]
[14 191]
[15 190]
[16 189]
[17 187]
[18 186]
[19 185]
[23 181]
[24 180]
[25 179]
[26 178]
[36 177]
[37 176]
[38 175]
[39 170]
[40 169]
[41 168]
[42 167]
[43 166]
[44 165]
[45 163]
[46 162]
[47 161]
[48 160]
[52 156]
[53 155]
[55 153]
[57 151]
[58 150]
[59 141]
[60 140]
[61 139]
[62 138]
[63 134]
[64 133]
[65 132]
[69 131]
[70 130]
[75 129]
[76 128]
[77 127]
[78 126]
[84 125]
[85 124]
[86 123]
[88 122]
[89 121]
[90 120]
[91 119]
[93 118]
[94 117]
[95 116]
[96 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
