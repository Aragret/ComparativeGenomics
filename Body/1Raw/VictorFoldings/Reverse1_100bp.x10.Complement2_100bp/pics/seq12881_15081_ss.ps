%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAUCAUCACCCCACUCCGAACCUAAUCGCAAAUCUUCCCGAUAAACAACACCCAGAGUACUCAACCUCACAUCCUAUUUAGUACGAUUCCGCUCCUACxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[128.23258972 747.85247803]
[116.84027863 738.07525635]
[106.47808838 727.21228027]
[97.24900818 715.37158203]
[89.24475861 702.67077637]
[82.54489899 689.23608398]
[77.21601105 675.20104980]
[73.31105804 660.70520020]
[70.86884308 645.89257812]
[69.91365814 630.91040039]
[70.45497894 615.90753174]
[72.48743439 601.03314209]
[75.99081421 586.43499756]
[80.93031311 572.25830078]
[87.25683594 558.64379883]
[94.90749359 545.72692871]
[103.80625916 533.63598633]
[113.86468506 522.49121094]
[124.98281097 512.40325928]
[137.05012512 503.47250366]
[149.94670105 495.78765869]
[163.54437256 489.42510986]
[177.70797729 484.44808960]
[174.16830444 469.87170410]
[170.62863159 455.29534912]
[157.84893799 443.26843262]
[163.17964172 425.64276123]
[159.42335510 411.12069702]
[155.66705322 396.59863281]
[151.91075134 382.07656860]
[138.53823853 379.30288696]
[127.61295319 370.99826050]
[121.30147552 358.73797607]
[120.88619995 344.88858032]
[126.50514221 332.15109253]
[137.11392212 323.03427124]
[133.57424927 308.45788574]
[130.03457642 293.88153076]
[126.49491119 279.30514526]
[122.95523834 264.72875977]
[118.87557220 250.29421997]
[114.26156616 236.02148438]
[109.64755249 221.74874878]
[105.03354645 207.47602844]
[100.41953278 193.20329285]
[97.70605469 207.95581055]
[90.40692139 221.06011963]
[79.29244232 231.13327026]
[65.53555298 237.11221313]
[50.58804321 238.36599731]
[36.02736282 234.76231384]
[23.39013863 226.68142700]
[14.01000404 214.97616577]
[8.87686729 200.88182068]
[8.53244019 185.88577271]
[13.01307201 171.57060242]
[21.84591103 159.44703674]
[34.09880447 150.79449463]
[48.47867966 146.52609253]
[63.46798706 147.09228516]
[77.48487854 152.43333435]
[89.05010986 161.98558044]
[96.94325256 174.74113464]
[96.05043793 159.76773071]
[95.15762329 144.79432678]
[94.26480103 129.82090759]
[93.37198639 114.84751129]
[83.77674103 101.08860016]
[91.44776917 86.17110443]
[90.33211517 71.21265411]
[79.61406708 56.23917770]
[87.84482574 40.74009323]
[78.90718842 27.68523788]
[85.47816467 14.31842995]
[84.13992310 -0.62175483]
[82.80168915 -15.56194019]
[81.46345520 -30.50212479]
[80.12522125 -45.44231033]
[78.78698730 -60.38249588]
[77.44875336 -75.32267761]
[74.82599640 -78.78318787]
[73.56742096 -82.52223969]
[73.59308624 -86.07677460]
[74.68087006 -89.05726624]
[76.50277710 -91.18771362]
[76.05616760 -106.18106079]
[75.60956573 -121.17441559]
[63.58036423 -112.21347809]
[49.03621674 -115.88333130]
[42.69852829 -129.47868347]
[49.23920441 -142.97755432]
[63.83670425 -146.42907715]
[75.72953796 -137.29039001]
[76.39933014 -152.27542114]
[77.06911469 -167.26046753]
[62.64073563 -171.65054321]
[49.75784683 -179.49159241]
[39.23027802 -190.29071045]
[31.71980095 -203.36907959]
[27.69852829 -217.90455627]
[27.41924095 -232.98344421]
[30.89949608 -247.65786743]
[37.92052078 -261.00537109]
[48.04096985 -272.18695068]
[60.62466431 -280.49966431]
[74.88057709 -285.42102051]
[89.91257477 -286.64166260]
[104.77572632 -284.08480835]
[118.53572845 -277.91122437]
[130.32762146 -268.50897217]
[139.41014099 -256.46911621]
[145.21235657 -242.54843140]
[147.36955261 -227.62203979]
[145.74610901 -212.62818909]
[140.44407654 -198.50942993]
[131.79675293 -186.15327454]
[120.34771729 -176.33644104]
[106.81665802 -169.67601013]
[92.05415344 -166.59068298]
[91.38436890 -151.60563660]
[90.71457672 -136.62060547]
[90.60291290 -121.62101746]
[91.04952240 -106.62767029]
[91.49612427 -91.63432312]
[92.38893890 -76.66091156]
[93.72717285 -61.72072983]
[95.06540680 -46.78054428]
[96.40364075 -31.84035873]
[97.74187469 -16.90017319]
[99.08010864 -1.95998907]
[100.41834259 12.98019600]
[109.26026154 24.96642876]
[102.78501129 39.40185928]
[111.86338806 47.39620590]
[113.10056305 59.83216858]
[105.29057312 70.09700012]
[106.40621948 85.05545807]
[114.75726318 93.17341614]
[115.53700256 104.79380035]
[108.34539032 113.95469666]
[109.23821259 128.92810059]
[110.13102722 143.90150452]
[111.02384186 158.87490845]
[111.91665649 173.84831238]
[114.69226837 188.58927917]
[119.30627441 202.86201477]
[123.92028809 217.13475037]
[128.53430176 231.40748596]
[133.14830017 245.68020630]
[142.19807434 233.71769714]
[157.18849182 233.18191528]
[167.06919861 244.46781921]
[164.55650330 259.25585938]
[151.50265503 266.64486694]
[137.53161621 261.18911743]
[141.07128906 275.76547241]
[144.61096191 290.34185791]
[148.15063477 304.91824341]
[151.69030762 319.49459839]
[167.60328674 323.98556519]
[179.01470947 335.82089233]
[182.87815857 351.70455933]
[178.23117065 367.27893066]
[166.43280029 378.32028198]
[170.18910217 392.84231567]
[173.94540405 407.36437988]
[177.70170593 421.88644409]
[188.39898682 429.09277344]
[191.22865295 441.26556396]
[185.20501709 451.75567627]
[188.74468994 466.33203125]
[192.28436279 480.90841675]
[207.15315247 478.83532715]
[222.15446472 478.25302124]
[237.13922119 479.16726685]
[251.95846558 481.56896973]
[266.46493530 485.43432617]
[280.51446533 490.72482300]
[293.96740723 497.38796997]
[306.69003296 505.35748291]
[318.55593872 514.55413818]
[329.44714355 524.88665771]
[339.25546265 536.25219727]
[347.88336182 548.53784180]
[355.24511719 561.62158203]
[361.26754761 575.37322998]
[365.89080811 589.65625000]
[369.06896973 604.32861328]
[370.77041626 619.24450684]
[370.97821045 634.25567627]
[369.69036865 649.21295166]
[366.91961670 663.96765137]
[362.69351196 678.37316895]
[357.05407715 692.28631592]
[350.05737305 705.56878662]
[341.77288818 718.08862305]
[332.28295898 729.72131348]
[321.68194580 740.35131836]
[310.07519531 749.87298584]
[297.57806396 758.19165039]
[284.31475830 765.22467041]
[270.41708374 770.90209961]
[256.02316284 775.16754150]
[241.27607727 777.97857666]
[226.32238770 779.30731201]
[211.31069946 779.14050293]
[196.39021301 777.47985840]
[181.70922852 774.34179688]
[167.41365051 769.75756836]
[153.64556885 763.77270508]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 172]
[24 171]
[25 170]
[27 167]
[28 166]
[29 165]
[30 164]
[36 159]
[37 158]
[38 157]
[39 156]
[40 155]
[41 149]
[42 148]
[43 147]
[44 146]
[45 145]
[63 144]
[64 143]
[65 142]
[66 141]
[67 140]
[69 137]
[70 136]
[72 133]
[74 131]
[75 130]
[76 129]
[77 128]
[78 127]
[79 126]
[80 125]
[85 124]
[86 123]
[87 122]
[93 121]
[94 120]
[95 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
