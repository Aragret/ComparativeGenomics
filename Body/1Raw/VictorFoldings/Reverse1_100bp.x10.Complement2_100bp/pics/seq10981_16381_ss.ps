%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[90.21489716 677.46301270]
[75.24987793 676.26855469]
[60.47814560 673.59002686]
[46.04652023 669.45397949]
[32.09843445 663.90155029]
[18.77251053 656.98791504]
[6.20119381 648.78179932]
[-5.49057341 639.36468506]
[-16.18659019 628.83032227]
[-25.78055191 617.28326416]
[-34.17710876 604.83831787]
[-41.29280472 591.61920166]
[-47.05692291 577.75720215]
[-51.41217804 563.39025879]
[-54.31527710 548.66101074]
[-55.73737335 533.71588135]
[-55.66432953 518.70343018]
[-54.09687424 503.77288818]
[-51.05058289 489.07260132]
[-46.55573273 474.74865723]
[-40.65699768 460.94345093]
[-33.41300583 447.79418945]
[-24.89574814 435.43154907]
[-15.18987751 423.97839355]
[-4.39185858 413.54858398]
[7.39099121 404.24572754]
[20.04156494 396.16229248]
[33.43413162 389.37866211]
[47.43558884 383.96221924]
[61.90677643 379.96682739]
[76.70387268 377.43212891]
[91.67980957 376.38339233]
[92.12641907 361.39004517]
[84.77148438 348.43804932]
[92.91623688 334.87435913]
[93.36284637 319.88101196]
[93.80944824 304.88766479]
[94.25605774 289.89431763]
[91.31310272 283.11486816]
[94.82257843 274.68151855]
[95.49236298 259.69647217]
[96.16214752 244.71144104]
[96.83193207 229.72640991]
[97.50171661 214.74136353]
[97.39005280 199.74179077]
[96.49723816 184.76838684]
[87.66090393 176.50727844]
[86.79454041 164.03999329]
[94.90669250 154.01223755]
[86.60881042 141.64315796]
[93.72218323 127.51126099]
[93.05239868 112.52622223]
[85.69034576 100.63959503]
[91.96256256 88.14356232]
[91.29277802 73.15852356]
[90.62299347 58.17348862]
[89.95320892 43.18844986]
[81.60741425 29.74752998]
[88.76869965 16.68746376]
[88.09891510 1.70242453]
[77.83142853 -13.58352852]
[86.52000427 -28.83068085]
[85.62718964 -43.80408478]
[84.73436737 -58.77749252]
[83.84155273 -73.75090027]
[82.94873810 -88.72430420]
[79.31408691 -97.10446930]
[82.15578461 -103.92697144]
[81.48600006 -118.91201019]
[80.81621552 -133.89704895]
[72.47042084 -147.33796692]
[79.63169861 -160.39804077]
[78.73888397 -175.37144470]
[77.62323761 -190.32989502]
[76.50759125 -205.28834534]
[75.39193726 -220.24679565]
[74.27629089 -235.20526123]
[59.27298355 -235.86639404]
[44.45318222 -238.29740906]
[30.02493477 -242.46418762]
[16.19079399 -248.30824280]
[3.14496684 -255.74751282]
[-8.92940331 -264.67758179]
[-19.86281013 -274.97305298]
[-29.50176620 -286.48944092]
[-37.71095657 -299.06503296]
[-44.37513733 -312.52328491]
[-49.40074921 -326.67529297]
[-52.71724701 -341.32238770]
[-54.27806854 -356.25894165]
[-54.06130219 -371.27523804]
[-52.06999207 -386.16049194]
[-48.33209229 -400.70574951]
[-42.90007782 -414.70681763]
[-35.85020828 -427.96713257]
[-27.28144646 -440.30050659]
[-17.31408882 -451.53387451]
[-6.08806133 -461.50946045]
[6.23904133 -470.08728027]
[19.49416542 -477.14688110]
[33.49123001 -482.58917236]
[48.03373718 -486.33776855]
[62.91753387 -488.33999634]
[77.93367004 -488.56777954]
[92.87135315 -487.01794434]
[107.52087402 -483.71218872]
[121.67657471 -478.69699097]
[135.13973999 -472.04269409]
[147.72135925 -463.84274292]
[159.24481201 -454.21221924]
[169.54830933 -443.28637695]
[178.48724365 -431.21856689]
[185.93608093 -418.17822266]
[191.79028320 -404.34835815]
[195.96766663 -389.92318726]
[198.40956116 -375.10516357]
[199.08171082 -360.10235596]
[197.97468567 -345.12533569]
[195.10398865 -330.38439941]
[190.50996399 -316.08645630]
[184.25708008 -302.43225098]
[176.43310547 -289.61343384]
[167.14791870 -277.80996704]
[156.53182983 -267.18759155]
[144.73388672 -257.89538574]
[131.91970825 -250.06382751]
[118.26920319 -243.80284119]
[103.97398376 -239.20033264]
[89.23474121 -236.32090759]
[90.35039520 -221.36244202]
[91.46604156 -206.40399170]
[92.58168793 -191.44554138]
[93.69734192 -176.48709106]
[96.66741943 -172.74708557]
[97.31958008 -167.10157776]
[94.61673737 -161.06782532]
[102.91462708 -148.69873047]
[95.80125427 -134.56683350]
[96.47103882 -119.58179474]
[97.14082336 -104.59675598]
[97.92214203 -89.61711884]
[98.81496429 -74.64371490]
[99.70777893 -59.67030716]
[100.60059357 -44.69690323]
[101.49340820 -29.72349739]
[110.32974243 -21.46239662]
[111.19610596 -8.99511147]
[103.08395386 1.03263938]
[103.75373840 16.01767731]
[112.05162048 28.38676643]
[104.93824768 42.51866531]
[105.60803223 57.50370407]
[106.27781677 72.48873901]
[106.94760132 87.47377777]
[114.30965424 99.36040497]
[108.03743744 111.85643768]
[108.70722198 126.84147644]
[117.05300903 140.28239441]
[109.89173126 153.34245300]
[120.15921021 168.62841797]
[111.47064209 183.87556458]
[112.36345673 198.84896851]
[122.25411987 187.57179260]
[137.05998230 185.16633606]
[150.01202393 192.73236084]
[155.18873596 206.81077576]
[150.22338867 220.96511841]
[137.38607788 228.72421265]
[122.54585266 226.54071045]
[112.48675537 215.41114807]
[111.81697083 230.39619446]
[111.14718628 245.38122559]
[110.47740173 260.36627197]
[109.80761719 275.35131836]
[109.24940491 290.34091187]
[108.80280304 305.33425903]
[108.35619354 320.32760620]
[107.90959167 335.32098389]
[115.23257446 349.34539795]
[107.11976624 361.83663940]
[106.67316437 376.83001709]
[121.56012726 378.76828003]
[136.18011475 382.17919922]
[150.38784790 387.02886963]
[164.04208374 393.26907349]
[177.00714111 400.83782959]
[189.15414429 409.65988159]
[200.36239624 419.64758301]
[210.52047729 430.70162964]
[219.52743530 442.71218872]
[227.29374695 455.55984497]
[233.74223328 469.11697388]
[238.80882263 483.24880981]
[242.44311523 497.81488037]
[244.60903931 512.67041016]
[245.28503418 527.66778564]
[244.46438599 542.65795898]
[242.15525818 557.49194336]
[238.38061523 572.02227783]
[233.17793274 586.10455322]
[226.59896851 599.59887695]
[218.70906067 612.37103271]
[209.58665466 624.29412842]
[199.32241821 635.24963379]
[188.01834106 645.12872314]
[175.78678894 653.83319092]
[162.74932861 661.27655029]
[149.03552246 667.38476562]
[134.78167725 672.09710693]
[120.12945557 675.36688232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 181]
[33 180]
[35 178]
[36 177]
[37 176]
[38 175]
[40 174]
[41 173]
[42 172]
[43 171]
[44 170]
[45 162]
[46 161]
[49 159]
[51 157]
[52 156]
[54 154]
[55 153]
[56 152]
[57 151]
[59 149]
[60 148]
[62 145]
[63 144]
[64 143]
[65 142]
[66 141]
[68 140]
[69 139]
[70 138]
[72 136]
[73 133]
[74 132]
[75 131]
[76 130]
[77 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
