%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGGCUAUAGCGGCUAUGCCAACAUAUCCUAACGAACUUACCGACGACACAACCGUAGACGAGCCCGCAUAGUAGUUGACUACUCGUUCUUCCUAUAUUxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[11.25123119 361.97744751]
[17.38501167 375.70233154]
[21.23760033 390.23345947]
[22.70920563 405.19442749]
[21.76170921 420.19772339]
[18.41965294 434.85467529]
[12.76960373 448.78570557]
[4.95791292 461.62991333]
[-4.81307888 473.05459595]
[-16.29027939 482.76388550]
[-29.17640114 490.50622559]
[-43.13766098 496.08111572]
[-57.81243134 499.34414673]
[-72.82060242 500.21075439]
[-87.77342224 498.65853882]
[-102.28357697 494.72769165]
[-115.97521973 488.52005005]
[-128.49369812 480.19635010]
[-139.51477051 469.97225952]
[-148.75294495 458.11254883]
[-155.96894836 444.92446899]
[-160.97586060 430.74960327]
[-163.64398193 415.95510864]
[-163.90420532 400.92419434]
[-161.74980164 386.04620361]
[-157.23657227 371.70648193]
[-150.48139954 358.27651978]
[-141.65928650 346.10415649]
[-130.99873352 335.50469971]
[-118.77588654 326.75265503]
[-105.30732727 320.07476807]
[-90.94194031 315.64401245]
[-76.05181122 313.57513428]
[-61.02264023 313.92172241]
[-46.24370956 316.67480469]
[-32.09783936 321.76306152]
[-24.82460976 308.64437866]
[-17.55138016 295.52569580]
[-10.27815056 282.40698242]
[-10.87381077 267.52429199]
[2.58452868 259.20663452]
[9.85775852 246.08793640]
[3.40712762 232.68914795]
[6.11519766 217.88609314]
[17.14958191 207.39344788]
[32.42309189 205.38693237]
[39.69631958 192.26823425]
[39.10066223 177.38554382]
[52.55900192 169.06787109]
[59.83222961 155.94918823]
[67.10546112 142.83049011]
[74.37869263 129.71179199]
[74.87273407 122.33766937]
[81.85912323 116.45309448]
[89.32685852 103.44414520]
[74.87082672 107.44702911]
[61.17213821 101.33589935]
[54.49365234 87.90467834]
[57.88867950 73.29393768]
[69.80506134 64.18350983]
[84.79478455 64.73856354]
[96.00476074 74.70533752]
[98.30957031 89.52896881]
[107.09017944 77.36751556]
[115.87078094 65.20606232]
[124.65138245 53.04460144]
[133.43199158 40.88314819]
[142.21258545 28.72169113]
[150.99319458 16.56023598]
[159.77380371 4.39877939]
[168.55439758 -7.76267624]
[177.33500671 -19.92413139]
[186.11560059 -32.08558655]
[194.89620972 -44.24704361]
[203.67681885 -56.40850067]
[212.45741272 -68.56995392]
[221.23802185 -80.73140717]
[222.68264771 -99.08882141]
[238.96125793 -105.64426422]
[247.55982971 -117.93509674]
[256.15838623 -130.22593689]
[264.75695801 -142.51676941]
[272.98574829 -155.05818176]
[280.83752441 -167.83901978]
[288.68927002 -180.61985779]
[296.54101562 -193.40069580]
[297.17211914 -209.20932007]
[310.42681885 -216.00357056]
[310.56753540 -221.22155762]
[312.50222778 -225.44177246]
[315.55044556 -228.14796448]
[318.92538452 -229.16874695]
[327.33999634 -241.58624268]
[335.75463867 -254.00373840]
[337.09097290 -269.76840210]
[350.63586426 -275.96405029]
[359.05047607 -288.38153076]
[367.46508789 -300.79904175]
[375.87969971 -313.21652222]
[364.50939941 -323.02633667]
[354.35482788 -334.08987427]
[345.55337524 -346.25747681]
[338.22402954 -359.36462402]
[332.46591187 -373.23403931]
[328.35690308 -387.67816162]
[325.95260620 -402.50164795]
[325.28549194 -417.50402832]
[326.36456299 -432.48242188]
[329.17529297 -447.23422241]
[333.67962646 -461.55999756]
[339.81665039 -475.26596069]
[347.50338745 -488.16674805]
[356.63586426 -500.08792114]
[367.09057617 -510.86825562]
[378.72616577 -520.36193848]
[391.38522339 -528.44061279]
[404.89657593 -534.99499512]
[419.07751465 -539.93640137]
[433.73620605 -543.19812012]
[448.67446899 -544.73590088]
[463.69024658 -544.52905273]
[478.58050537 -542.58038330]
[493.14379883 -538.91613770]
[507.18325806 -533.58599854]
[520.50897217 -526.66198730]
[532.94067383 -518.23767090]
[544.31036377 -508.42712402]
[554.46417236 -497.36291504]
[563.26483154 -485.19470215]
[570.59326172 -472.08709717]
[576.35046387 -458.21728516]
[580.45849609 -443.77288818]
[582.86181641 -428.94924927]
[583.52795410 -413.94680786]
[582.44787598 -398.96850586]
[579.63616943 -384.21685791]
[575.13085938 -369.89138794]
[568.99291992 -356.18585205]
[561.30529785 -343.28555298]
[552.17205811 -331.36499023]
[541.71661377 -320.58535767]
[530.08038330 -311.09246826]
[517.42083740 -303.01464844]
[503.90902710 -296.46118164]
[489.72775269 -291.52069092]
[475.06881714 -288.25997925]
[460.13046265 -286.72314453]
[445.11468506 -286.93099976]
[430.22457886 -288.88067627]
[415.66152954 -292.54586792]
[401.62243652 -297.87698364]
[388.29721069 -304.80191040]
[379.88259888 -292.38439941]
[371.46795654 -279.96691895]
[363.05334473 -267.54940796]
[362.31887817 -252.67292786]
[348.17211914 -245.58912659]
[339.75750732 -233.17163086]
[331.34289551 -220.75413513]
[323.20767212 -208.15182495]
[323.13818359 -193.25737000]
[309.32186890 -185.54895020]
[301.47012329 -172.76811218]
[293.61834717 -159.98725891]
[285.76660156 -147.20642090]
[286.28604126 -144.45172119]
[285.74560547 -141.32530212]
[283.99822998 -138.22979736]
[281.04522705 -135.61364746]
[277.04779053 -133.91821289]
[268.44921875 -121.62737274]
[259.85067749 -109.33653259]
[251.25210571 -97.04570007]
[253.04808044 -85.08321381]
[245.98507690 -74.77313995]
[233.39947510 -71.95080566]
[224.61886597 -59.78935242]
[215.83827209 -47.62789536]
[207.05766296 -35.46644211]
[198.27706909 -23.30498505]
[189.49645996 -11.14352894]
[180.71585083 1.01792705]
[171.93525696 13.17938328]
[163.15464783 25.34083939]
[154.37403870 37.50229263]
[145.59344482 49.66374969]
[136.81283569 61.82520676]
[128.03224182 73.98666382]
[119.25163269 86.14811707]
[110.47103119 98.30957031]
[102.33581543 110.91188812]
[94.86807251 123.92083740]
[87.49738312 136.98501587]
[80.22415161 150.10371399]
[72.95092773 163.22241211]
[65.67769623 176.34111023]
[65.75312805 192.16212463]
[52.81501389 199.54147339]
[45.54178619 212.66015625]
[51.93157196 226.67718506]
[48.87816620 241.59461975]
[37.75784683 251.73377991]
[22.97645187 253.36116028]
[15.70322227 266.47985840]
[15.77865314 282.30087280]
[2.84054327 289.68020630]
[-4.43268633 302.79891968]
[-11.70591545 315.91760254]
[-18.97914505 329.03628540]
[-7.16941738 338.33825684]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 209]
[37 208]
[38 207]
[39 206]
[41 204]
[42 203]
[46 199]
[47 198]
[49 196]
[50 195]
[51 194]
[52 193]
[54 192]
[55 191]
[63 190]
[64 189]
[65 188]
[66 187]
[67 186]
[68 185]
[69 184]
[70 183]
[71 182]
[72 181]
[73 180]
[74 179]
[75 178]
[76 177]
[77 176]
[79 173]
[80 172]
[81 171]
[82 170]
[83 165]
[84 164]
[85 163]
[86 162]
[88 160]
[92 159]
[93 158]
[94 157]
[96 155]
[97 154]
[98 153]
[99 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
