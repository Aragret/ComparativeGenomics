%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[81.19268799 646.76641846]
[66.47097015 643.77398682]
[52.27948380 638.84600830]
[38.87148666 632.07037354]
[26.48626137 623.56805420]
[15.34483528 613.49072266]
[5.64604235 602.01831055]
[-2.43703198 589.35546875]
[-8.76013565 575.72821045]
[-13.21042538 561.37976074]
[-15.70848083 546.56616211]
[-16.20972061 531.55175781]
[-14.70520020 516.60449219]
[-11.22176933 501.99121094]
[-5.82159328 487.97259521]
[1.39895439 474.79885864]
[10.31101513 462.70510864]
[20.75554276 451.90719604]
[32.54614258 442.59777832]
[45.47239685 434.94299316]
[59.30362320 429.07949829]
[73.79298401 425.11190796]
[88.68190002 423.11102295]
[88.68190002 408.11102295]
[88.68190002 393.11102295]
[88.68190002 378.11102295]
[88.68190002 363.11102295]
[88.68190002 348.11102295]
[88.68190002 333.11102295]
[85.53839874 326.42221069]
[88.79522705 317.88809204]
[89.01855469 302.88977051]
[89.24188232 287.89141846]
[77.23271179 279.12115479]
[72.63623810 264.79156494]
[77.41477203 250.33409119]
[89.93476105 241.35879517]
[90.15808868 226.36045837]
[90.38141632 211.36212158]
[78.37224579 202.59184265]
[73.77577209 188.26226807]
[78.55430603 173.80477905]
[91.07429504 164.82948303]
[91.29762268 149.83114624]
[88.25405884 143.09628296]
[91.63758850 134.61161804]
[92.08419800 119.61826324]
[92.53079987 104.62491608]
[90.63629913 102.23736572]
[89.56865692 99.10772705]
[89.60440826 95.54090881]
[90.90355682 91.93973541]
[93.47678375 88.75988007]
[94.81501770 73.81969452]
[96.15325165 58.87950897]
[89.67799377 44.44408035]
[98.51991272 32.45784760]
[99.85814667 17.51766205]
[101.19638062 2.57747793]
[94.72112274 -11.85795212]
[103.56304169 -23.84418297]
[104.90127563 -38.78437042]
[102.93526459 -42.65590286]
[102.36122894 -46.55910873]
[103.01819611 -50.05250168]
[104.61835480 -52.79222488]
[106.78988647 -54.56496811]
[109.01499939 -69.39900970]
[111.24011993 -84.23305511]
[113.46523285 -99.06710052]
[112.57241821 -114.04050446]
[108.60032654 -128.50503540]
[104.62822723 -142.96955872]
[100.65612793 -157.43408203]
[96.68403625 -171.89860535]
[92.71193695 -186.36312866]
[88.73984528 -200.82765198]
[84.76774597 -215.29217529]
[80.79564667 -229.75669861]
[65.82260895 -228.34983826]
[50.83276367 -229.56457520]
[36.28163147 -233.36401367]
[22.61140823 -239.63267517]
[10.23751545 -248.18006897]
[-0.46401879 -258.74642944]
[-9.16798687 -271.01071167]
[-15.60988331 -284.60015869]
[-19.59394836 -299.10180664]
[-20.99910927 -314.07501221]
[-19.78266525 -329.06472778]
[-15.98158360 -343.61541748]
[-9.71137333 -357.28494263]
[-1.16257966 -369.65786743]
[9.40500927 -380.35818481]
[21.67025566 -389.06076050]
[35.26043320 -395.50112915]
[49.76255417 -399.48355103]
[64.73590851 -400.88702393]
[79.72547913 -399.66885376]
[94.27574921 -395.86611938]
[107.94454956 -389.59436035]
[120.31650543 -381.04418945]
[131.01564026 -370.47537231]
[139.71682739 -358.20913696]
[146.15563965 -344.61822510]
[150.13641357 -330.11566162]
[151.53817749 -315.14215088]
[150.31834412 -300.15270996]
[146.51396179 -285.60287476]
[140.24064636 -271.93478394]
[131.68904114 -259.56381226]
[121.11903381 -248.86585999]
[108.85181427 -240.16606140]
[95.26017761 -233.72879028]
[99.23226929 -219.26426697]
[103.20436859 -204.79974365]
[107.17646027 -190.33522034]
[111.14855957 -175.87069702]
[115.12065887 -161.40617371]
[119.09275055 -146.94165039]
[123.06484985 -132.47712708]
[127.03694153 -118.01260376]
[129.87020874 -132.74259949]
[135.66444397 -146.57829285]
[144.17327881 -158.93142700]
[155.03492737 -169.27670288]
[167.78752136 -177.17425537]
[181.88882446 -182.28825378]
[196.73925781 -184.40127563]
[211.70735168 -183.42344666]
[226.15666199 -179.39637756]
[239.47280884 -172.49127197]
[251.08955383 -163.00175476]
[260.51296997 -151.33131409]
[267.34237671 -137.97619629]
[271.28738403 -123.50424957]
[272.18020630 -108.53084564]
[269.98291016 -93.69265747]
[264.78894043 -79.62060547]
[256.81912231 -66.91304779]
[246.41236877 -56.11030579]
[234.01113892 -47.67173004]
[220.14276123 -41.95612335]
[205.39692688 -39.20652390]
[190.40063477 -39.53984070]
[175.79151917 -42.94190598]
[162.19079590 -49.26805496]
[150.17675781 -58.24930573]
[140.26023865 -69.50376129]
[132.86291504 -82.55287933]
[128.29928589 -96.84197998]
[126.07416534 -82.00794220]
[123.84904480 -67.17389679]
[121.62392426 -52.33985138]
[119.84146118 -37.44613647]
[118.50322723 -22.50594902]
[125.07420349 -9.13914204]
[116.13656616 3.91571212]
[114.79833221 18.85589790]
[113.46009827 33.79608154]
[120.03107452 47.16289139]
[111.09343719 60.21774292]
[109.75520325 75.15792847]
[108.41696930 90.09811401]
[107.52415466 105.07151794]
[107.07754517 120.06487274]
[106.63093567 135.05821228]
[106.29595947 150.05447388]
[106.07263184 165.05281067]
[118.31984711 174.39689636]
[122.66580963 188.99024963]
[117.64472961 203.17662048]
[105.37975311 211.58544922]
[105.15642548 226.58378601]
[104.93309784 241.58212280]
[117.18031311 250.92620850]
[121.52627563 265.51956177]
[116.50519562 279.70593262]
[104.24021912 288.11474609]
[104.01689148 303.11309814]
[103.79356384 318.11141968]
[103.68190002 333.11102295]
[103.68190002 348.11102295]
[103.68190002 363.11102295]
[103.68190002 378.11102295]
[103.68190002 393.11102295]
[103.68190002 408.11102295]
[103.68190002 423.11102295]
[118.57081604 425.11190796]
[133.06018066 429.07949829]
[146.89140320 434.94299316]
[159.81765747 442.59777832]
[171.60826111 451.90719604]
[182.05278015 462.70510864]
[190.96484375 474.79885864]
[198.18539429 487.97259521]
[203.58557129 501.99121094]
[207.06900024 516.60449219]
[208.57351685 531.55175781]
[208.07228088 546.56616211]
[205.57421875 561.37976074]
[201.12393188 575.72821045]
[194.80082703 589.35546875]
[186.71775818 602.01831055]
[177.01896667 613.49072266]
[165.87753296 623.56805420]
[153.49230957 632.07037354]
[140.08432007 638.84600830]
[125.89282990 643.77398682]
[111.17111206 646.76641846]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 188]
[24 187]
[25 186]
[26 185]
[27 184]
[28 183]
[29 182]
[31 181]
[32 180]
[33 179]
[37 175]
[38 174]
[39 173]
[43 169]
[44 168]
[46 167]
[47 166]
[48 165]
[53 164]
[54 163]
[55 162]
[57 160]
[58 159]
[59 158]
[61 156]
[62 155]
[67 154]
[68 153]
[69 152]
[70 151]
[71 122]
[72 121]
[73 120]
[74 119]
[75 118]
[76 117]
[77 116]
[78 115]
[79 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
