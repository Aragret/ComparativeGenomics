%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[123.24095917 564.02923584]
[120.83345795 549.17663574]
[121.28060913 534.13677979]
[124.56624603 519.45343018]
[130.57160950 505.65734863]
[139.07958984 493.24725342]
[149.78263855 482.67175293]
[162.29383850 474.31314087]
[176.16093445 468.47360229]
[173.05682373 453.79830933]
[169.95271301 439.12298584]
[166.84860229 424.44769287]
[163.74449158 409.77239990]
[151.15966797 401.88836670]
[147.80261230 387.04974365]
[156.15744019 373.90307617]
[153.05332947 359.22778320]
[142.84971619 348.37716675]
[147.56372070 333.27456665]
[137.36010742 322.42395020]
[142.07411194 307.32131958]
[138.97000122 292.64602661]
[135.86589050 277.97073364]
[132.76177979 263.29544067]
[129.65766907 248.62013245]
[126.55355835 233.94482422]
[123.12249756 219.34249878]
[119.36619568 204.82043457]
[115.60990143 190.29838562]
[104.93196869 179.91421509]
[108.96689606 164.61618042]
[105.21059418 150.09411621]
[94.53266144 139.70994568]
[98.56758881 124.41190338]
[94.81128693 109.88984680]
[90.94698334 95.39615631]
[86.97489166 80.93163300]
[83.00279236 66.46710968]
[71.88732910 55.20846558]
[75.97815704 40.88665009]
[72.00605774 26.42212677]
[55.19520569 17.68659210]
[50.19370651 -0.25492099]
[59.72845078 -15.88195896]
[55.32745361 -30.22180557]
[50.92645645 -44.56165314]
[37.15821457 -56.78937149]
[41.75175095 -73.72650146]
[37.13774490 -87.99923706]
[32.52373505 -102.27196503]
[27.90972519 -116.54470062]
[23.26712799 -121.25190735]
[21.90340042 -126.76890564]
[23.37767792 -131.31153870]
[19.19066620 -145.71533203]
[15.00365543 -160.11911011]
[10.81664371 -174.52288818]
[6.62963295 -188.92666626]
[2.12200427 -203.23336792]
[-2.70399332 -217.43582153]
[-16.83019447 -229.24818420]
[-12.74297523 -246.31457520]
[-24.66503334 -256.71530151]
[-21.65074348 -271.30169678]
[-26.68765831 -285.43072510]
[-31.72457504 -299.55975342]
[-36.76148987 -313.68878174]
[-41.79840851 -327.81781006]
[-56.44119263 -324.48239136]
[-71.37570190 -322.90225220]
[-86.39227295 -323.09957886]
[-101.28009796 -325.07162476]
[-115.83017731 -328.79071045]
[-129.83824158 -334.20462036]
[-143.10766602 -341.23733521]
[-155.45213318 -349.79013062]
[-166.69836426 -359.74295044]
[-176.68847656 -370.95608521]
[-185.28222656 -383.27206421]
[-192.35897827 -396.51803589]
[-197.81936646 -410.50805664]
[-201.58676147 -425.04571533]
[-203.60824585 -439.92691040]
[-203.85546875 -454.94274902]
[-202.32493591 -469.88241577]
[-199.03814697 -484.53619385]
[-194.04122925 -498.69836426]
[-187.40435791 -512.17010498]
[-179.22068787 -524.76232910]
[-169.60510254 -536.29821777]
[-158.69259644 -546.61584473]
[-146.63635254 -555.57037354]
[-133.60563660 -563.03613281]
[-119.78337860 -568.90820312]
[-105.36361694 -573.10424805]
[-90.54877472 -575.56530762]
[-75.54683685 -576.25683594]
[-60.56840515 -575.16918945]
[-45.82375717 -572.31756592]
[-31.51988411 -567.74200439]
[-17.85758591 -561.50683594]
[-5.02866316 -553.69946289]
[6.78678751 -544.42950439]
[17.42289543 -533.82714844]
[26.73034477 -522.04125977]
[34.57847595 -509.23724365]
[40.85711288 -495.59481812]
[45.47811127 -481.30557251]
[48.37659836 -466.57006836]
[49.51189041 -451.59518433]
[48.86804581 -436.59112549]
[46.45410156 -421.76852417]
[42.30394745 -407.33547974]
[36.47584534 -393.49462891]
[29.05160904 -380.44021606]
[20.13546944 -368.35559082]
[9.85259151 -357.41030884]
[-1.65266824 -347.75808716]
[-14.21879482 -339.53442383]
[-27.66937828 -332.85473633]
[-22.63246155 -318.72570801]
[-17.59554672 -304.59667969]
[-12.55862999 -290.46765137]
[-7.52171326 -276.33862305]
[4.04006958 -266.94848633]
[1.38605416 -251.35148621]
[12.17711639 -245.88526917]
[16.48908806 -234.15536499]
[11.49846268 -222.26181030]
[16.32446098 -208.05935669]
[19.30862617 -206.18130493]
[21.53140068 -202.76452637]
[22.27948761 -198.18264771]
[21.03341484 -193.11367798]
[25.22042656 -178.70989990]
[29.40743828 -164.30612183]
[33.59444809 -149.90234375]
[37.78145981 -135.49855042]
[42.18245697 -121.15870667]
[46.79646683 -106.88597870]
[51.41047668 -92.61324310]
[56.02448654 -78.34050751]
[66.64801025 -72.55542755]
[70.60883331 -60.70233536]
[65.26630402 -48.96265030]
[69.66729736 -34.62280273]
[74.06829834 -20.28295708]
[85.06661224 -17.24926567]
[93.32016754 -9.19976044]
[96.69773865 1.94860077]
[94.24952698 13.45977592]
[86.47058105 22.45002937]
[90.44268036 36.91455460]
[101.27403259 47.13859558]
[97.46731567 62.49501038]
[101.43941498 76.95953369]
[105.41150665 91.42405701]
[110.41312408 97.74516296]
[109.33335114 106.13354492]
[113.08965302 120.65560913]
[124.03625488 132.07849121]
[119.73265076 146.33781433]
[123.48895264 160.85987854]
[134.43556213 172.28276062]
[130.13195801 186.54208374]
[133.88825989 201.06414795]
[137.64456177 215.58619690]
[141.30462646 219.30789185]
[143.00144958 223.62924194]
[142.83538818 227.70201111]
[141.22886658 230.84071350]
[144.33297729 245.51602173]
[147.43708801 260.19131470]
[150.54119873 274.86660767]
[153.64530945 289.54193115]
[156.74942017 304.21722412]
[167.17504883 316.11752319]
[162.23901367 330.17044067]
[172.66465759 342.07073975]
[167.72862244 356.12365723]
[170.83273315 370.79895020]
[183.79536438 379.43655396]
[186.73431396 394.36361694]
[178.41978455 406.66827393]
[181.52389526 421.34356689]
[184.62800598 436.01889038]
[187.73211670 450.69418335]
[190.83622742 465.36947632]
[205.88018799 465.09378052]
[220.70440674 467.67041016]
[234.77301025 473.00622559]
[247.57740784 480.90835571]
[258.65475464 491.09112549]
[267.60461426 503.18646240]
[274.10342407 516.75708008]
[277.91629028 531.31243896]
[278.90533447 546.32635498]
[277.03485107 561.25616455]
[272.37243652 575.56201172]
[265.08663940 588.72686768]
[255.44084167 600.27484131]
[243.78372192 609.78839111]
[230.53666687 616.92364502]
[216.17857361 621.42272949]
[201.22845459 623.12292480]
[186.22677612 621.96276855]
[171.71580505 617.98431396]
[158.22013855 611.33123779]
[146.22761536 602.24407959]
[136.17175293 591.05139160]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 188]
[10 187]
[11 186]
[12 185]
[13 184]
[16 181]
[17 180]
[19 178]
[21 176]
[22 175]
[23 174]
[24 173]
[25 172]
[26 171]
[27 167]
[28 166]
[29 165]
[31 163]
[32 162]
[34 160]
[35 159]
[36 157]
[37 156]
[38 155]
[40 153]
[41 152]
[44 147]
[45 146]
[46 145]
[48 142]
[49 141]
[50 140]
[51 139]
[54 138]
[55 137]
[56 136]
[57 135]
[58 134]
[59 130]
[60 129]
[62 126]
[64 124]
[65 123]
[66 122]
[67 121]
[68 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
