%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[115.41267395 585.74316406]
[109.58634949 599.65374756]
[100.48298645 611.67791748]
[88.67482758 621.05969238]
[74.90415192 627.20941162]
[60.03659439 629.74053955]
[45.00673676 628.49389648]
[30.75936699 623.54785156]
[18.19009399 615.21331787]
[8.08902740 604.01422119]
[1.09113097 590.65460205]
[-2.36370182 575.97418213]
[-2.05829763 560.89581299]
[1.98814583 546.36730957]
[9.52126503 533.30194092]
[20.06752396 522.52105713]
[32.96397400 514.70239258]
[47.39993286 510.33728027]
[62.46794510 509.70025635]
[65.57205200 495.02493286]
[68.67616272 480.34963989]
[71.78027344 465.67434692]
[74.44606781 450.91311646]
[76.67118835 436.07907104]
[78.89630127 421.24502563]
[76.77980804 414.16390991]
[81.26656342 406.20736694]
[83.71228790 391.40808105]
[86.15802002 376.60882568]
[84.41295624 373.54498291]
[84.06518555 369.48367310]
[85.56735992 365.09088135]
[89.05760193 361.20947266]
[92.16170502 346.53417969]
[95.26581573 331.85885620]
[98.36992645 317.18356323]
[101.47403717 302.50827026]
[102.25536346 287.52862549]
[100.69483948 272.61001587]
[99.13431549 257.69140625]
[97.04411316 255.82347107]
[95.56788635 253.01502991]
[95.06755829 249.49578857]
[95.81530762 245.62210083]
[97.95223236 241.84222412]
[97.28244781 226.85717773]
[96.61266327 211.87214661]
[95.94287872 196.88710022]
[95.27309418 181.90206909]
[94.60330963 166.91702271]
[91.16426849 160.37524414]
[94.03678131 151.70423889]
[93.59017944 136.71089172]
[93.14356995 121.71753693]
[83.57033539 115.77111816]
[78.02029419 105.96276855]
[77.85250854 94.69429016]
[83.10805511 84.72504425]
[92.50000000 78.49623108]
[92.50000000 63.49623108]
[84.76270294 49.69606018]
[92.50000000 36.96878815]
[92.50000000 21.96878815]
[83.65065002 34.08030701]
[69.97137451 40.23478699]
[55.03792191 38.82345581]
[42.75384521 30.21523094]
[36.33018112 16.66028786]
[37.44605637 1.70185077]
[45.80978394 -10.74997807]
[59.23510742 -17.44032097]
[74.21267700 -16.62034035]
[86.82739258 -8.50437450]
[93.78160858 4.78521681]
[88.17704010 -10.01003361]
[97.71671295 -21.44873428]
[99.94183350 -36.28277969]
[94.33727264 -51.07802963]
[103.87694550 -62.51673126]
[106.10205841 -77.35077667]
[108.32717896 -92.18481445]
[110.55229950 -107.01885986]
[101.35280609 -116.85674286]
[99.52571869 -130.00483704]
[105.51614380 -141.63224792]
[116.93787384 -147.59661865]
[119.38359833 -162.39588928]
[121.82932281 -177.19515991]
[116.44566345 -192.07221985]
[126.15458679 -203.36761475]
[127.82612610 -218.27418518]
[128.71894836 -233.24758911]
[129.61175537 -248.22099304]
[130.50457764 -263.19439697]
[131.39738464 -278.16781616]
[116.99837494 -282.63232422]
[104.08656311 -290.41360474]
[93.41262817 -301.05929565]
[85.59713745 -313.95043945]
[81.09447479 -328.33755493]
[80.16641235 -343.38424683]
[82.86691284 -358.21563721]
[89.03897858 -371.96951294]
[98.32376099 -383.84622192]
[110.18146515 -393.15527344]
[123.92269135 -399.35543823]
[138.74855042 -402.08627319]
[153.79708862 -401.18896484]
[168.19338989 -396.71572876]
[181.10047913 -388.92660522]
[191.76795959 -378.27444458]
[199.57563782 -365.37857056]
[204.06958008 -350.98870850]
[204.98851013 -335.94149780]
[202.27902222 -321.11172485]
[196.09861755 -307.36160278]
[186.80664062 -295.49050903]
[174.94329834 -286.18865967]
[161.19830322 -279.99682617]
[146.37078857 -277.27499390]
[145.47798157 -262.30157471]
[144.58515930 -247.32818604]
[143.69235229 -232.35478210]
[142.79953003 -217.38137817]
[153.96018982 -227.40333557]
[168.94699097 -228.03233337]
[180.90818787 -218.98081970]
[184.37525940 -204.38700867]
[177.76312256 -190.92298889]
[164.09475708 -184.74435425]
[149.61914062 -188.67585754]
[140.95385742 -200.92189026]
[146.51245117 -187.10337830]
[136.62860107 -174.74943542]
[134.18287659 -159.95016479]
[131.73713684 -145.15089417]
[142.10626221 -131.91003418]
[139.64218140 -114.93230438]
[125.38633728 -104.79374695]
[123.16122437 -89.95970154]
[120.93610382 -75.12565613]
[118.71099091 -60.29161072]
[124.47470856 -46.55739212]
[114.77587891 -34.05765915]
[112.55075836 -19.22361755]
[118.31447601 -5.48939657]
[108.61564636 7.01033401]
[107.50000000 21.96878815]
[107.50000000 36.96878815]
[115.23729706 49.69606018]
[107.50000000 63.49623108]
[107.50000000 78.49623108]
[120.77935028 90.67902374]
[121.04766083 108.69816589]
[108.13692474 121.27093506]
[108.58352661 136.26428223]
[109.03013611 151.25762939]
[109.58834839 166.24723816]
[110.25813293 181.23228455]
[110.92791748 196.21731567]
[111.59770203 211.20236206]
[112.26748657 226.18739319]
[112.93727112 241.17243958]
[114.05291748 256.13088989]
[115.61344147 271.04949951]
[117.17396545 285.96810913]
[122.51364136 271.95068359]
[131.39268494 259.86090088]
[143.17012024 250.57156372]
[156.99571228 244.75321960]
[171.87138367 242.82592773]
[186.72323608 244.92883301]
[200.47912598 250.91009521]
[212.14598083 260.33795166]
[220.88157654 272.53176880]
[226.05528259 286.61129761]
[227.29357910 301.56008911]
[224.50711060 316.29901123]
[217.89700317 329.76400757]
[207.94046021 340.98309326]
[195.35626221 349.14627075]
[181.05284119 353.66430664]
[166.06282043 354.21096802]
[151.46829224 350.74685669]
[138.32289124 343.52203369]
[127.57556915 333.05804443]
[120.00218964 320.11029053]
[116.14933777 305.61236572]
[113.04523468 320.28765869]
[109.94112396 334.96298218]
[106.83701324 349.63827515]
[103.73290253 364.31356812]
[100.95729065 379.05453491]
[98.51155853 393.85382080]
[96.06583405 408.65307617]
[93.73034668 423.47015381]
[91.50523376 438.30419922]
[89.28011322 453.13824463]
[91.01219940 457.11993408]
[91.35289764 461.05038452]
[90.48915863 464.49847412]
[88.72876740 467.13809204]
[86.45557404 468.77844238]
[83.35146332 483.45376587]
[80.24735260 498.12905884]
[77.14324951 512.80438232]
[90.66275024 519.48822021]
[102.09476471 529.32489014]
[110.72067261 541.69598389]
[115.99823761 555.82391357]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 206]
[20 205]
[21 204]
[22 203]
[23 198]
[24 197]
[25 196]
[27 195]
[28 194]
[29 193]
[33 192]
[34 191]
[35 190]
[36 189]
[37 188]
[38 166]
[39 165]
[40 164]
[45 163]
[46 162]
[47 161]
[48 160]
[49 159]
[50 158]
[52 157]
[53 156]
[54 155]
[59 152]
[60 151]
[62 149]
[63 148]
[74 147]
[76 145]
[77 144]
[79 142]
[80 141]
[81 140]
[82 139]
[86 136]
[87 135]
[88 134]
[90 132]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
