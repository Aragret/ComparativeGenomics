%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[111.74581146 541.55737305]
[107.97782898 526.99572754]
[106.87068939 511.99526978]
[108.45999908 497.03817749]
[112.69464874 482.60531616]
[119.43852997 469.16064453]
[128.47483826 457.13629150]
[139.51312256 446.91882324]
[152.19850159 438.83673096]
[166.12324524 433.14974976]
[163.01913452 418.47445679]
[159.91502380 403.79913330]
[156.81091309 389.12384033]
[146.60729980 378.27322388]
[151.32130432 363.17062378]
[148.21719360 348.49533081]
[132.62684631 344.98937988]
[120.08052826 334.99920654]
[113.12165833 320.48513794]
[113.18918610 304.33102417]
[120.32033539 289.77111816]
[133.13302612 279.74270630]
[129.81076050 265.11526489]
[126.48850250 250.48779297]
[123.16624451 235.86033630]
[119.84398651 221.23287964]
[107.14318085 213.53709412]
[103.56555939 198.75009155]
[111.72373199 185.48049927]
[108.40147400 170.85304260]
[105.07920837 156.22557068]
[94.71518707 145.52809143]
[99.20380402 130.35696411]
[95.88154602 115.72950745]
[84.17134094 103.71920776]
[89.30743408 87.75058746]
[85.76776123 73.17421722]
[82.22808838 58.59783936]
[78.68841553 44.02146530]
[75.20104218 58.61044312]
[67.79479218 71.65449524]
[57.05374146 82.12492371]
[43.82497787 89.19597626]
[29.15177727 92.31001282]
[14.19132900 91.22143555]
[0.12347685 86.01609039]
[-11.94232941 77.10450745]
[-21.05453110 65.18948364]
[-26.49450111 51.21068954]
[-27.83321953 36.27054977]
[-24.96511269 21.54730415]
[-18.11636734 8.20209122]
[-7.82710838 -2.71262980]
[5.09121323 -10.33607864]
[19.61980438 -14.06703854]
[34.61287689 -13.61126995]
[48.88801956 -9.00471687]
[61.31943130 -0.61067122]
[70.92671967 10.90887737]
[76.95314789 24.64879036]
[77.84596252 9.67538548]
[78.73878479 -5.29802036]
[76.40096283 -9.96510601]
[76.11565399 -14.59888363]
[77.52646637 -18.42310524]
[80.02056122 -20.91546059]
[81.58107758 -35.83406448]
[83.14160156 -50.75267029]
[74.40286255 -38.56109619]
[61.89017868 -30.28869629]
[47.24979782 -27.02384377]
[32.40791702 -29.19608688]
[19.31724739 -36.51963043]
[9.70008373 -48.03093719]
[4.82173347 -62.21549606]
[5.32402658 -77.20708466]
[11.14087772 -91.03330231]
[21.50698090 -101.87506866]
[35.05849457 -108.30596924]
[50.01248932 -109.47989655]
[64.40150452 -105.24241638]
[76.33242035 -96.15103149]
[84.23551178 -83.40187073]
[87.07102966 -68.66992950]
[91.89702606 -82.87239075]
[96.72302246 -97.07484436]
[101.54901886 -111.27729797]
[106.37501526 -125.47975159]
[111.20101166 -139.68220520]
[97.91566467 -153.58847046]
[93.55724335 -172.23649597]
[99.25379181 -190.43447876]
[113.34578705 -203.15924072]
[131.86845398 -206.94268799]
[135.84054565 -221.40721130]
[139.81263733 -235.87173462]
[143.78474426 -250.33625793]
[147.64904785 -264.82995605]
[151.40534973 -279.35202026]
[137.88713074 -285.97338867]
[125.97872162 -295.18072510]
[116.16775513 -306.59692383]
[108.85599518 -319.75454712]
[104.34284210 -334.11477661]
[102.81311798 -349.08959961]
[104.32946014 -364.06576538]
[108.82976532 -378.43002319]
[116.12976074 -391.59417725]
[125.93051147 -403.01916504]
[137.83068848 -412.23712158]
[151.34297180 -418.87057495]
[165.91406250 -422.64791870]
[180.94726562 -423.41445923]
[195.82699585 -421.13879395]
[209.94392395 -415.91415405]
[222.71998596 -407.95440674]
[233.63198853 -397.58557129]
[242.23310852 -385.23220825]
[248.17114258 -371.40017700]
[251.20291138 -356.65591431]
[251.20426941 -341.60317993]
[248.17518616 -326.85836792]
[242.23966980 -313.02526855]
[233.64077759 -300.67034912]
[222.73065186 -290.29953003]
[209.95603943 -282.33749390]
[195.84005737 -277.11026001]
[180.96075439 -274.83190918]
[165.92739868 -275.59570312]
[162.17109680 -261.07363892]
[163.53942871 -253.81076050]
[158.24926758 -246.36416626]
[154.27716064 -231.89964294]
[150.30506897 -217.43511963]
[146.33297729 -202.97059631]
[155.28704834 -196.49821472]
[161.86161804 -187.58584595]
[165.41957092 -177.06987000]
[165.60786438 -165.94329834]
[162.39241028 -155.26203918]
[156.06294250 -146.04464722]
[147.20692444 -139.17523193]
[136.65509033 -135.31866455]
[125.40347290 -134.85621643]
[120.57747650 -120.65375519]
[115.75147247 -106.45130157]
[110.92547607 -92.24884796]
[106.09947968 -78.04638672]
[101.27348328 -63.84393311]
[98.06021118 -49.19214630]
[96.49968719 -34.27354431]
[94.93916321 -19.35493851]
[93.71218872 -4.40520477]
[92.81937408 10.56820107]
[91.92655182 25.54160690]
[93.26478577 40.48179245]
[96.80445862 55.05816650]
[100.34413147 69.63454437]
[103.88380432 84.21091461]
[113.44671631 90.85861969]
[116.11071014 102.19636536]
[110.50901031 112.40724945]
[113.83126831 127.03470612]
[124.43292236 138.77845764]
[119.70667267 152.90332031]
[123.02893066 167.53077698]
[126.35118866 182.15823364]
[139.44097900 190.60189819]
[142.60185242 205.48353577]
[134.47145081 217.91061401]
[137.79370117 232.53807068]
[141.11596680 247.16554260]
[144.43821716 261.79299927]
[147.76048279 276.42047119]
[161.64656067 279.05172729]
[173.44517517 286.75347900]
[181.39305115 298.33520508]
[184.31744385 312.02969360]
[181.80912781 325.76239014]
[174.27926636 337.46594238]
[162.89248657 345.39120483]
[165.99659729 360.06649780]
[176.42224121 371.96679688]
[171.48620605 386.01971436]
[174.59031677 400.69503784]
[177.69442749 415.37033081]
[180.79853821 430.04562378]
[195.83341980 429.60708618]
[210.70494080 431.86038208]
[224.93507385 436.73309326]
[238.06636047 444.06854248]
[249.67669678 453.63098145]
[259.39285278 465.11297607]
[266.90246582 478.14544678]
[271.96420288 492.30944824]
[274.41525269 507.14965820]
[274.17691040 522.18902588]
[271.25680542 536.94415283]
[265.74880981 550.94061279]
[257.82998657 563.72857666]
[247.75486755 574.89691162]
[235.84735107 584.08660889]
[222.49020386 591.00231934]
[208.11282349 595.42163086]
[193.17735291 597.20251465]
[178.16392517 596.28778076]
[163.55516052 592.70678711]
[149.82064819 586.57464600]
[137.40193176 578.08843994]
[126.69819641 567.52105713]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 187]
[11 186]
[12 185]
[13 184]
[15 182]
[16 181]
[22 174]
[23 173]
[24 172]
[25 171]
[26 170]
[29 167]
[30 166]
[31 165]
[33 163]
[34 162]
[36 159]
[37 158]
[38 157]
[39 156]
[60 155]
[61 154]
[62 153]
[66 152]
[67 151]
[68 150]
[84 149]
[85 148]
[86 147]
[87 146]
[88 145]
[89 144]
[94 135]
[95 134]
[96 133]
[97 132]
[98 130]
[99 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
