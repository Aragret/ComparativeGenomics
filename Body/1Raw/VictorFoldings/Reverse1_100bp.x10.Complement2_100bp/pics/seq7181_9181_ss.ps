%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[265.09863281 624.53295898]
[274.14535522 612.51641846]
[285.19244385 602.30853271]
[297.88482666 594.23736572]
[292.22204590 580.34735107]
[286.55926514 566.45733643]
[280.89648438 552.56732178]
[275.23370361 538.67730713]
[269.57089233 524.78723145]
[263.90811157 510.89724731]
[257.63076782 497.27392578]
[250.75134277 483.94448853]
[243.87193298 470.61505127]
[227.64651489 466.19073486]
[219.48045349 451.10330200]
[224.85647583 434.45645142]
[217.77935791 421.23092651]
[210.70225525 408.00540161]
[203.62515259 394.77987671]
[196.54804993 381.55435181]
[189.47094727 368.32882690]
[182.39384460 355.10330200]
[175.31672668 341.87777710]
[169.94386292 355.88250732]
[156.29853821 362.11184692]
[142.19740295 356.99737549]
[135.71823120 343.46887207]
[140.57258606 329.27609253]
[153.97967529 322.54928589]
[168.25859070 327.14126587]
[162.38963318 313.33709717]
[156.52066040 299.53292847]
[150.65170288 285.72875977]
[144.78274536 271.92456055]
[138.91378784 258.12039185]
[134.24369812 272.37487793]
[122.15487671 281.25521851]
[107.15613556 281.44924927]
[94.84162903 272.88458252]
[89.80438232 258.75567627]
[93.92314911 244.33224487]
[105.66173553 234.99385071]
[120.64193726 234.22349548]
[133.27726746 242.30941772]
[129.09025574 227.90563965]
[124.90323639 213.50184631]
[120.71622467 199.09806824]
[116.52922058 184.69429016]
[112.23509216 170.32206726]
[107.83409882 155.98222351]
[104.10942841 152.99293518]
[102.22307587 147.63208008]
[103.52240753 141.14953613]
[99.55030823 126.68502045]
[95.57821655 112.22049713]
[91.17721558 97.88064575]
[86.35121918 83.67819214]
[74.58533478 73.10111237]
[77.81645966 58.56120300]
[72.99046326 44.35874557]
[68.27829742 39.72117996]
[66.83258057 34.22509766]
[68.23905945 29.66101265]
[63.83806229 15.32116604]
[59.43706512 0.98131895]
[55.03606796 -13.35852814]
[50.63507080 -27.69837570]
[39.62668228 -34.41985321]
[36.25629807 -46.45414734]
[41.80551910 -57.20276260]
[37.61850739 -71.60654449]
[33.43149567 -86.01032257]
[30.19207954 -88.90171814]
[28.23779488 -92.32885742]
[27.57925987 -95.82195282]
[28.07342911 -98.95602417]
[29.45151901 -101.39713287]
[26.12925911 -116.02459717]
[22.69819832 -130.62692261]
[11.92287159 -142.21151733]
[16.43829918 -156.40518188]
[12.89862728 -170.98156738]
[9.35895538 -185.55793762]
[5.81928253 -200.13430786]
[-9.24396706 -199.91926575]
[-23.97729492 -203.06199646]
[-37.64168167 -209.40489197]
[-49.55172729 -218.62977600]
[-59.11003113 -230.27394104]
[-65.83715057 -243.75331116]
[-69.39566040 -258.39178467]
[-69.60706329 -273.45507812]
[-66.46075439 -288.18765259]
[-60.11454773 -301.85049438]
[-50.88677979 -313.75830078]
[-39.24029922 -323.31378174]
[-25.75929260 -330.03765869]
[-11.11996174 -333.59262085]
[3.94339085 -333.80035400]
[18.67519379 -330.65048218]
[32.33650589 -324.30096436]
[44.24208069 -315.07031250]
[53.79473877 -303.42150879]
[60.51532745 -289.93887329]
[64.06674194 -275.29870605]
[64.27084351 -260.23529053]
[61.11739349 -245.50425720]
[54.76457214 -231.84448242]
[45.53102875 -219.94114685]
[33.87992096 -210.39129639]
[20.39565849 -203.67398071]
[23.93533134 -189.09761047]
[27.47500229 -174.52122498]
[31.01467514 -159.94485474]
[41.53681946 -149.40286255]
[37.27457428 -134.16659546]
[41.90770721 -128.40847778]
[40.75671768 -119.34685516]
[44.07897949 -104.71939850]
[47.83527756 -90.19733429]
[52.02228928 -75.79355621]
[56.20930099 -61.38977051]
[69.51328278 -49.94551468]
[64.97491455 -32.09937286]
[69.37591553 -17.75952530]
[73.77690887 -3.41967916]
[78.17790985 10.92016792]
[82.57891083 25.26001549]
[87.19291687 39.53274918]
[92.01891327 53.73520279]
[103.43961334 63.29642487]
[100.55367279 78.85219574]
[105.37966919 93.05464935]
[107.98961639 94.62871552]
[110.08451080 97.18722534]
[111.29862213 100.54122925]
[111.34115601 104.36934662]
[110.04273987 108.24839783]
[114.01483154 122.71292114]
[117.98693085 137.17744446]
[122.17394257 151.58122253]
[126.57494354 165.92108154]
[132.08447266 173.20687866]
[130.93299866 180.50727844]
[135.12001038 194.91105652]
[139.30702209 209.31483459]
[143.49403381 223.71862793]
[147.68104553 238.12240601]
[152.71795654 252.25143433]
[158.58691406 266.05560303]
[164.45588684 279.85977173]
[170.32484436 293.66397095]
[176.19380188 307.46813965]
[182.06275940 321.27230835]
[188.54226685 334.80065918]
[195.61936951 348.02618408]
[202.69647217 361.25170898]
[209.77357483 374.47723389]
[216.85067749 387.70275879]
[223.92778015 400.92831421]
[231.00489807 414.15383911]
[238.08200073 427.37936401]
[251.33656311 429.77334595]
[260.65621948 439.22610474]
[262.79812622 452.12936401]
[257.20135498 463.73565674]
[264.08078003 477.06506348]
[270.96017456 490.39450073]
[276.54095459 476.47131348]
[290.27752686 470.44583130]
[304.30096436 475.76968384]
[310.57800293 489.39312744]
[305.51284790 503.51208496]
[292.00711060 510.03851318]
[277.79815674 505.23443604]
[283.46093750 519.12445068]
[289.12371826 533.01452637]
[294.78649902 546.90454102]
[300.44927979 560.79455566]
[306.11209106 574.68457031]
[311.77487183 588.57458496]
[326.49246216 585.47106934]
[341.52770996 585.04553223]
[356.39727783 587.31164551]
[370.62319946 592.19665527]
[383.74813843 599.54351807]
[395.35018921 609.11596680]
[405.05639648 620.60632324]
[412.55474854 633.64532471]
[417.60421753 647.81365967]
[420.04248047 662.65600586]
[419.79110718 677.69519043]
[416.85824585 692.44775391]
[411.33813477 706.43945312]
[403.40823364 719.22058105]
[393.32348633 730.38018799]
[381.40802002 739.55957031]
[368.04489136 746.46374512]
[353.66369629 750.87060547]
[338.72668457 752.63861084]
[323.71405029 751.71087646]
[309.10839844 748.11724854]
[295.37921143 741.97320557]
[282.96783447 733.47625732]
[272.27322388 722.89965820]
[263.63922119 710.58325195]
[257.34332275 696.92303467]
[253.58792114 682.35809326]
[252.49375916 667.35668945]
[254.09600830 652.40100098]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 181]
[5 180]
[6 179]
[7 178]
[8 177]
[9 176]
[10 175]
[11 168]
[12 167]
[13 166]
[16 162]
[17 161]
[18 160]
[19 159]
[20 158]
[21 157]
[22 156]
[23 155]
[30 154]
[31 153]
[32 152]
[33 151]
[34 150]
[35 149]
[44 148]
[45 147]
[46 146]
[47 145]
[48 144]
[49 142]
[50 141]
[53 140]
[54 139]
[55 138]
[56 133]
[57 132]
[59 130]
[60 129]
[63 128]
[64 127]
[65 126]
[66 125]
[67 124]
[70 122]
[71 121]
[72 120]
[77 119]
[78 118]
[79 116]
[81 114]
[82 113]
[83 112]
[84 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
