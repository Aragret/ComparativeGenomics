%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[112.42946625 559.54199219]
[101.05023193 549.59185791]
[93.11081696 536.72888184]
[89.31716919 522.09674072]
[90.00663757 506.99652100]
[95.11789703 492.77096558]
[104.19646454 480.68496704]
[116.43507385 471.81323242]
[130.74549866 466.94461060]
[130.29888916 451.95126343]
[129.85227966 436.95791626]
[129.40567017 421.96456909]
[128.95906067 406.97122192]
[128.51246643 391.97787476]
[127.50820160 377.01153564]
[125.94767761 362.09292603]
[124.38715363 347.17431641]
[122.71561432 332.26773071]
[120.93315125 317.37402344]
[111.73827362 305.65637207]
[117.78086853 291.03454590]
[115.99839783 276.14083862]
[114.10511017 261.26080322]
[112.10108948 246.39526367]
[110.09707642 231.52973938]
[98.13350677 222.73152161]
[95.88938904 207.68431091]
[105.19887543 195.19546509]
[103.19486237 180.32994080]
[93.82655334 168.75047302]
[99.65077209 154.04031372]
[97.64675903 139.17478943]
[95.64274597 124.30925751]
[93.63873291 109.44372559]
[85.97650909 122.33908844]
[72.60681152 129.13990784]
[57.67238617 127.73888397]
[45.80082321 118.57012939]
[40.67065811 104.47469330]
[43.87152863 89.82019043]
[54.41160965 79.14748383]
[69.02494049 75.76362610]
[83.18342590 80.71714020]
[92.50000000 92.47336578]
[84.76270294 78.67319489]
[92.50000000 65.94592285]
[92.50000000 50.94592285]
[91.71868134 35.96628571]
[90.15815735 21.04768181]
[81.02713776 8.12734222]
[87.39837646 -5.33581591]
[85.72683716 -20.24238968]
[83.94436646 -35.13610840]
[82.16190338 -50.02982330]
[80.37944031 -64.92353821]
[75.38054657 -50.78101349]
[67.67282867 -37.91279602]
[57.56325912 -26.83142853]
[45.45451736 -17.97827721]
[31.82887840 -11.70595646]
[17.22905159 -8.26429272]
[2.23654079 -7.79036665]
[-12.55150890 -10.30305386]
[-26.54609299 -15.70227432]
[-39.18981552 -23.77297974]
[-49.97908020 -34.19371796]
[-58.48415375 -46.54943466]
[-64.36628723 -60.34800339]
[-67.39118958 -75.03983307]
[-67.43838501 -90.03976440]
[-64.50599670 -104.75034332]
[-58.71081161 -118.58565521]
[-50.28365707 -130.99464417]
[-39.56018448 -141.48306274]
[-26.96749878 -149.63317871]
[-13.00716782 -155.12036133]
[1.76477706 -157.72605896]
[16.75997353 -157.34648132]
[31.38117027 -153.99676514]
[45.04600906 -147.81030273]
[57.21022415 -139.03352356]
[67.38932037 -128.01600647]
[75.17787170 -115.19654083]
[80.26565552 -101.08574677]
[82.44983673 -86.24982452]
[87.06385040 -100.52256012]
[86.72588348 -109.65073395]
[91.85426331 -114.97253418]
[96.68025970 -129.17498779]
[100.54456329 -143.66868591]
[103.42984009 -158.38858032]
[106.31510925 -173.10847473]
[109.20037842 -187.82835388]
[112.08565521 -202.54824829]
[114.97092438 -217.26814270]
[117.85620117 -231.98803711]
[120.74147034 -246.70793152]
[123.62674713 -261.42782593]
[109.81346893 -267.42843628]
[97.61335754 -276.25857544]
[87.59703827 -287.50524902]
[80.23299408 -300.64239502]
[75.86564636 -315.05560303]
[74.69926453 -330.07070923]
[76.78840637 -344.98544312]
[82.03536224 -359.10223389]
[90.19471741 -371.76080322]
[100.88484955 -382.36904907]
[113.60575104 -390.43084717]
[127.76245117 -395.56912231]
[142.69281006 -397.54354858]
[157.69851685 -396.26177979]
[172.07771301 -391.78378296]
[185.15788269 -384.31893921]
[196.32720947 -374.21646118]
[205.06330872 -361.94885254]
[210.95755005 -348.08984375]
[213.73428345 -333.28768921]
[213.26362610 -318.23471069]
[209.56758118 -303.63491821]
[202.81901550 -290.17123413]
[193.33358765 -278.47335815]
[181.55493164 -269.08837891]
[168.03398132 -262.45529175]
[153.40310669 -258.88433838]
[138.34663391 -258.54254150]
[135.46136475 -243.82264709]
[132.57609558 -229.10276794]
[129.69081116 -214.38287354]
[126.80554962 -199.66297913]
[123.92027283 -184.94308472]
[121.03500366 -170.22319031]
[118.14972687 -155.50331116]
[115.26445770 -140.78341675]
[126.66814423 -150.52793884]
[141.51502991 -152.66569519]
[155.20465088 -146.53425598]
[163.49510193 -134.03352356]
[163.81753540 -119.03699493]
[156.07202148 -106.19149780]
[142.65858459 -99.47734070]
[127.73353577 -100.97499847]
[115.92156219 -110.22039032]
[110.88271332 -124.34899139]
[106.05671692 -110.14653778]
[101.33658600 -95.90854645]
[96.72257233 -81.63581848]
[95.27315521 -66.70600891]
[97.05561829 -51.81229019]
[98.83808899 -36.91857147]
[100.62055206 -22.02485657]
[104.53662109 -15.75698376]
[102.31697845 -6.89633894]
[111.33637238 4.95692158]
[105.07675934 19.48715782]
[106.63728333 34.40576172]
[116.01452637 22.69818687]
[130.69821167 19.63401985]
[143.97517395 26.61415863]
[149.77536011 40.44737625]
[145.44699097 54.80931473]
[132.96894836 63.13388443]
[118.04602814 61.61521149]
[107.50000000 50.94592285]
[107.50000000 65.94592285]
[115.23729706 78.67319489]
[107.50000000 92.47336578]
[108.50425720 107.43971252]
[110.50827026 122.30523682]
[112.51229095 137.17076111]
[114.51630402 152.03630066]
[124.02795410 164.67904663]
[118.06039429 178.32592773]
[120.06440735 193.19145203]
[132.34869385 202.76925659]
[134.16928101 217.87356567]
[124.96260834 229.52572632]
[126.96662140 244.39125061]
[128.97064209 259.25677490]
[133.21850586 267.34338379]
[130.89212036 274.35836792]
[132.67457581 289.25207520]
[141.99694824 302.03503418]
[135.82687378 315.59155273]
[137.60932922 330.48529053]
[141.73632812 338.63424683]
[139.30575562 345.61380005]
[140.86628723 360.53240967]
[142.42680359 375.45101929]
[153.75621033 365.62020874]
[168.53302002 368.19815063]
[175.86433411 381.28445435]
[170.34576416 395.23242188]
[156.04541016 399.76010132]
[143.50581360 391.53128052]
[143.95242310 406.52462769]
[144.39901733 421.51797485]
[144.84562683 436.51132202]
[145.29223633 451.50466919]
[145.73884583 466.49801636]
[160.31367493 470.50622559]
[173.05863953 478.63378906]
[182.84048462 490.15795898]
[188.78939819 504.05407715]
[190.37641907 519.08648682]
[187.46041870 533.91845703]
[180.30070496 547.23126221]
[169.53388977 557.84100342]
[156.11737061 564.80438232]
[141.24412537 567.50213623]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 200]
[10 199]
[11 198]
[12 197]
[13 196]
[14 195]
[15 189]
[16 188]
[17 187]
[18 185]
[19 184]
[21 182]
[22 181]
[23 179]
[24 178]
[25 177]
[28 174]
[29 173]
[31 171]
[32 170]
[33 169]
[34 168]
[44 167]
[46 165]
[47 164]
[48 156]
[49 155]
[51 153]
[52 151]
[53 150]
[54 149]
[55 148]
[85 147]
[86 146]
[88 145]
[89 144]
[90 134]
[91 133]
[92 132]
[93 131]
[94 130]
[95 129]
[96 128]
[97 127]
[98 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
