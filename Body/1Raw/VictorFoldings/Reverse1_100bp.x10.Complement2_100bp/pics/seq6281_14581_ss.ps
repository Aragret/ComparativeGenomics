%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[63.43650818 731.04187012]
[51.17652512 722.35992432]
[40.18317413 712.12127686]
[30.65263367 700.50866699]
[22.75499153 687.72937012]
[16.63119125 674.01141357]
[12.39051914 659.59960938]
[10.10865402 644.75115967]
[9.82631779 629.73101807]
[11.54855061 614.80731201]
[15.24461651 600.24633789]
[20.84855461 586.30792236]
[28.26035690 573.24084473]
[37.34775162 561.27825928]
[47.94855881 550.63372803]
[59.87360001 541.49719238]
[72.91005707 534.03161621]
[86.82527924 528.37036133]
[101.37093353 524.61437988]
[99.58847046 509.72067261]
[97.80599976 494.82693481]
[96.02353668 479.93322754]
[94.24107361 465.03952026]
[82.40982056 456.06414795]
[80.38997650 440.98519897]
[89.88437653 428.63635254]
[88.10191345 413.74261475]
[86.31944275 398.84890747]
[84.53697968 383.95520020]
[82.75450897 369.06146240]
[75.40708923 382.13876343]
[62.55608368 389.87515259]
[47.56072998 390.24838257]
[34.34076691 383.16088867]
[26.35186958 370.46530151]
[25.68231010 355.48025513]
[32.50711441 342.12277222]
[45.04228973 333.88449097]
[60.01117706 332.91888428]
[73.50093842 339.47830200]
[81.98509216 351.84735107]
[82.43170166 336.85400391]
[82.87830353 321.86065674]
[83.32491302 306.86730957]
[72.95597076 296.23620605]
[73.19530487 281.02444458]
[84.41650391 270.22064209]
[84.86311340 255.22727966]
[76.79903412 246.21078491]
[77.04840088 233.71591187]
[86.02283478 224.45188904]
[86.69261932 209.46684265]
[87.36240387 194.48181152]
[88.03219604 179.49676514]
[85.19049835 172.67427063]
[88.82514954 164.29409790]
[89.71796417 149.32069397]
[90.61077881 134.34729004]
[91.50359344 119.37388611]
[92.39640808 104.40047455]
[90.57383728 101.95758820]
[89.59984589 98.79753876]
[89.74177551 95.23337555]
[91.14757538 91.67247772]
[93.81433105 88.57064056]
[95.59680176 73.67692566]
[97.37926483 58.78320694]
[99.16173553 43.88949203]
[100.94419861 28.99577332]
[99.09432983 25.06742096]
[98.63675690 21.14885521]
[99.39744568 17.67657089]
[101.07846832 14.98570251]
[103.30181122 13.27839947]
[105.96761322 -1.48281729]
[108.63340759 -16.24403381]
[111.29920197 -31.00525093]
[113.96499634 -45.76646805]
[116.63079071 -60.52768707]
[119.29658508 -75.28890228]
[114.13501740 -90.24446106]
[124.01103973 -101.39405823]
[126.67683411 -116.15528107]
[129.34262085 -130.91648865]
[132.00842285 -145.67771912]
[134.67422485 -160.43893433]
[135.67848206 -175.40527344]
[135.00869751 -190.39031982]
[131.49922180 -198.82366943]
[134.44216919 -205.60310364]
[133.99555969 -220.59645081]
[133.54896545 -235.58979797]
[133.10235596 -250.58314514]
[132.43257141 -265.56817627]
[131.53974915 -280.54159546]
[117.00515747 -284.84524536]
[104.82087708 -293.86294556]
[96.45823669 -306.50582886]
[92.92705536 -321.24713135]
[94.65373993 -336.30682373]
[101.42978668 -349.86636353]
[112.43695831 -360.28836060]
[126.34608459 -366.31430054]
[141.47756958 -367.21655273]
[156.00421143 -362.88613892]
[168.17184448 -353.84597778]
[176.51116943 -341.18771362]
[180.01518250 -326.43991089]
[178.26074219 -311.38342285]
[171.45971680 -297.83642578]
[160.43336487 -287.43472290]
[146.51315308 -281.43441772]
[147.40597534 -266.46099854]
[150.32003784 -262.67718506]
[150.88807678 -257.02261353]
[148.09570312 -251.02975464]
[148.54231262 -236.03640747]
[148.98892212 -221.04306030]
[149.43551636 -206.04971313]
[149.99372864 -191.06010437]
[150.66351318 -176.07505798]
[157.49705505 -189.42807007]
[168.64418030 -199.46508789]
[182.63825989 -204.86558533]
[197.63816833 -204.91903687]
[211.67039490 -199.61840820]
[222.88874817 -189.66107178]
[229.81729126 -176.35711670]
[231.54441833 -161.45687866]
[227.84292603 -146.92076111]
[219.19978333 -134.66122437]
[206.75216675 -126.29122162]
[192.13777161 -122.91198730]
[177.27935791 -124.96810150]
[164.13182068 -132.18905640]
[154.42492676 -143.62480164]
[149.43544006 -157.77313232]
[146.76963806 -143.01191711]
[144.10385132 -128.25070190]
[141.43804932 -113.48948669]
[138.77224731 -98.72826385]
[144.12449646 -84.82852936]
[134.05780029 -72.62310791]
[131.39201355 -57.86188889]
[128.72621155 -43.10067368]
[126.06041718 -28.33945656]
[123.39462280 -13.57823944]
[120.72882843 1.18297815]
[118.06303406 15.94419575]
[115.83791351 30.77823830]
[114.05545044 45.67195511]
[112.27297974 60.56567383]
[110.49051666 75.45938873]
[108.70805359 90.35311127]
[107.36981964 105.29329681]
[106.47700500 120.26670074]
[105.58418274 135.24011230]
[104.69136810 150.21351624]
[103.79855347 165.18692017]
[103.01723480 180.16654968]
[102.34744263 195.15159607]
[101.67765808 210.13662720]
[101.00787354 225.12167358]
[109.87066650 241.26268005]
[99.85646057 255.67388916]
[99.40985107 270.66723633]
[109.96810150 282.11978149]
[109.30159760 297.31881714]
[98.31826019 307.31390381]
[97.87165833 322.30728149]
[97.42504883 337.30062866]
[96.97844696 352.29397583]
[97.64823151 367.27902222]
[99.43069458 382.17272949]
[101.21315765 397.06643677]
[102.99562836 411.96014404]
[104.77809143 426.85388184]
[116.91841125 436.61349487]
[118.51392365 451.74325562]
[109.13478851 463.25704956]
[110.91725159 478.15075684]
[112.69972229 493.04446411]
[114.48218536 507.93820190]
[116.26465607 522.83190918]
[131.28584290 523.04937744]
[146.14401245 525.26708984]
[160.57400513 529.44543457]
[174.31829834 535.50994873]
[187.13159180 543.35229492]
[198.78524780 552.83258057]
[209.07127380 563.78161621]
[217.80610657 576.00396729]
[224.83386230 589.28155518]
[230.02912903 603.37738037]
[233.29919434 618.03991699]
[234.58567810 633.00750732]
[233.86564636 648.01300049]
[231.15193176 662.78863525]
[226.49296570 677.07067871]
[219.97190857 690.60430908]
[211.70510864 703.14801025]
[201.84013367 714.47784424]
[190.55299377 724.39166260]
[178.04515076 732.71258545]
[164.53982544 739.29205322]
[150.27801514 744.01263428]
[135.51423645 746.79016113]
[120.51199341 747.57501221]
[105.53900146 746.35321045]
[90.86246490 743.14648438]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 184]
[20 183]
[21 182]
[22 181]
[23 180]
[26 177]
[27 176]
[28 175]
[29 174]
[30 173]
[41 172]
[42 171]
[43 170]
[44 169]
[47 166]
[48 165]
[51 163]
[52 162]
[53 161]
[54 160]
[56 159]
[57 158]
[58 157]
[59 156]
[60 155]
[65 154]
[66 153]
[67 152]
[68 151]
[69 150]
[74 149]
[75 148]
[76 147]
[77 146]
[78 145]
[79 144]
[80 143]
[82 141]
[83 140]
[84 139]
[85 138]
[86 137]
[87 121]
[88 120]
[90 119]
[91 118]
[92 117]
[93 116]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
