%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[223.19805908 562.20581055]
[232.15232849 550.13238525]
[242.88514709 539.60845947]
[255.13220215 530.89318848]
[248.45201111 517.46282959]
[235.85630798 509.51312256]
[236.63810730 493.71124268]
[229.95791626 480.28085327]
[223.27772522 466.85049438]
[216.59751892 453.42010498]
[210.80412292 448.83117676]
[209.91952515 439.73968506]
[203.44003296 426.21133423]
[196.96054077 412.68298340]
[189.59010315 425.74731445]
[174.80564880 428.28103638]
[163.50570679 418.41638184]
[164.02018738 403.42520142]
[175.96983337 394.35842896]
[190.54452515 397.89874268]
[185.08917236 383.92593384]
[179.63380432 369.95315552]
[174.07458496 356.02133179]
[168.41178894 342.13131714]
[162.74900818 328.24130249]
[157.31297302 323.23416138]
[157.10700989 314.10205078]
[151.65165710 300.12927246]
[146.19630432 286.15646362]
[137.87460327 298.63641357]
[122.94264221 300.06350708]
[112.40769958 289.38571167]
[114.03575134 274.47433472]
[126.62664795 266.32147217]
[140.89765930 270.93597412]
[136.49665833 256.59613037]
[132.09565735 242.25627136]
[127.69466400 227.91642761]
[123.29366302 213.57658386]
[118.89266205 199.23674011]
[110.47586823 196.40997314]
[104.20818329 189.92840576]
[101.58641815 181.15795898]
[103.31981659 172.02958679]
[109.14385986 164.61422729]
[105.38755798 150.09216309]
[101.63125610 135.57011414]
[97.87495422 121.04804993]
[94.11865997 106.52599335]
[91.63301086 104.76216888]
[89.73421478 102.05493164]
[88.77292633 98.61991882]
[89.01522827 94.79924011]
[90.59856415 91.02750397]
[77.76598358 82.19786072]
[75.04959869 67.22869873]
[83.54639435 55.04920578]
[80.66111755 40.32931137]
[77.77584839 25.60942078]
[74.89057922 10.88953018]
[72.00530243 -3.83036137]
[69.12003326 -18.55025291]
[66.12525940 -33.24825668]
[63.02114487 -47.92356110]
[56.86971664 -34.24291992]
[44.76016617 -25.39086723]
[29.85790634 -23.68130875]
[16.05834579 -29.56111908]
[6.96866131 -41.49332809]
[4.96487284 -56.35888672]
[10.57076550 -70.27197266]
[22.32097244 -79.59574127]
[37.14402008 -81.89297485]
[51.16519547 -76.56318665]
[60.71902847 -65.00038147]
[59.82621384 -79.97378540]
[58.93339539 -94.94719696]
[55.29874802 -103.32735443]
[58.14044189 -110.14986420]
[57.47065735 -125.13490295]
[56.80087280 -140.11993408]
[48.45507812 -153.56085205]
[55.61635971 -166.62092590]
[47.27056503 -180.06184387]
[54.43184662 -193.12190247]
[42.45698547 -197.95742798]
[33.23390961 -206.93016052]
[28.10812378 -218.68180847]
[27.80871964 -231.45246887]
[32.34484863 -243.34411621]
[41.00961685 -252.60276794]
[52.49000931 -257.87713623]
[52.26668167 -272.87545776]
[52.04335403 -287.87380981]
[51.82002640 -302.87213135]
[51.48505020 -317.86840820]
[51.03844452 -332.86175537]
[50.59183884 -347.85510254]
[36.62828827 -354.01803589]
[26.72809792 -365.63479614]
[22.85696030 -380.39883423]
[25.78349495 -395.37875366]
[34.92663193 -407.60031128]
[48.47100067 -414.63684082]
[63.72735214 -415.09127808]
[77.66652679 -408.87338257]
[87.52088928 -397.21774292]
[91.33386230 -382.43856812]
[88.34835815 -367.47027588]
[79.15715790 -355.28485107]
[65.58518982 -348.30169678]
[66.03179932 -333.30834961]
[66.47840118 -318.31500244]
[69.81965637 -311.72274780]
[66.81836700 -303.09545898]
[67.04169464 -288.09713745]
[67.26502228 -273.09878540]
[67.48834991 -258.10046387]
[82.82009125 -250.26617432]
[92.11996460 -235.67077637]
[92.74986267 -218.28666687]
[84.44609833 -202.89970398]
[69.41688538 -193.79170227]
[77.71476746 -181.42260742]
[70.60139465 -167.29071045]
[78.89928436 -154.92161560]
[71.78591156 -140.78971863]
[72.45569611 -125.80468750]
[73.12548065 -110.81964874]
[73.90679932 -95.84001160]
[74.79962158 -80.86660004]
[75.69243622 -65.89319611]
[77.69644928 -51.02766800]
[80.80056000 -36.35236740]
[85.26020050 -30.45886230]
[83.83992004 -21.43552589]
[86.72519684 -6.71563387]
[89.61046600 8.00425720]
[92.49574280 22.72414780]
[95.38101196 37.44403839]
[98.26628113 52.16393280]
[110.73232269 60.23445892]
[113.86809540 75.12142181]
[105.31845856 88.14222717]
[108.64071655 102.76969147]
[112.39701843 117.29174805]
[116.15332031 131.81381226]
[119.90961456 146.33586121]
[123.66591644 160.85792542]
[139.58830261 175.19982910]
[133.23251343 194.83573914]
[137.63351440 209.17558289]
[142.03451538 223.51542664]
[146.43550110 237.85528564]
[150.83650208 252.19512939]
[155.23750305 266.53497314]
[160.16909790 280.70111084]
[165.62445068 294.67391968]
[171.07980347 308.64669800]
[176.63903809 322.57849121]
[182.30181885 336.46853638]
[187.96461487 350.35855103]
[194.10218811 357.12374878]
[193.60661316 364.49777222]
[199.06196594 378.47058105]
[204.51731873 392.44338989]
[210.48887634 406.20349121]
[216.96838379 419.73184204]
[223.44787598 433.26016235]
[230.02790833 446.73989868]
[236.70809937 460.17028809]
[243.38829041 473.60064697]
[250.06848145 487.03103638]
[263.14199829 495.94134521]
[261.88238525 510.78259277]
[268.56259155 524.21301270]
[282.90197754 519.70428467]
[297.77017212 517.49444580]
[312.80099487 517.63781738]
[327.62432861 520.13085938]
[341.87512207 524.91223145]
[355.20242310 531.86413574]
[367.27807617 540.81542969]
[377.80465698 551.54565430]
[386.52297974 563.79052734]
[393.21832275 577.24859619]
[397.72579956 591.58837891]
[399.93444824 606.45672607]
[399.78982544 621.48754883]
[397.29556274 636.31066895]
[392.51300049 650.56109619]
[385.55999756 663.88781738]
[376.60772705 675.96270752]
[365.87664795 686.48840332]
[353.63101196 695.20568848]
[340.17242432 701.89996338]
[325.83227539 706.40625000]
[310.96371460 708.61364746]
[295.93292236 708.46783447]
[281.10998535 705.97229004]
[266.85998535 701.18859863]
[253.53382874 694.23449707]
[241.45967102 685.28118896]
[230.93486023 674.54925537]
[222.21856689 662.30291748]
[215.52543640 648.84375000]
[211.02032471 634.50323486]
[208.81413269 619.63452148]
[208.96121216 604.60369873]
[211.45794678 589.78100586]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 176]
[5 175]
[7 173]
[8 172]
[9 171]
[10 170]
[12 169]
[13 168]
[14 167]
[20 166]
[21 165]
[22 164]
[23 162]
[24 161]
[25 160]
[27 159]
[28 158]
[29 157]
[35 156]
[36 155]
[37 154]
[38 153]
[39 152]
[40 151]
[45 149]
[46 148]
[47 147]
[48 146]
[49 145]
[54 144]
[57 141]
[58 140]
[59 139]
[60 138]
[61 137]
[62 136]
[63 134]
[64 133]
[75 132]
[76 131]
[77 130]
[79 129]
[80 128]
[81 127]
[83 125]
[85 123]
[92 118]
[93 117]
[94 116]
[95 115]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
