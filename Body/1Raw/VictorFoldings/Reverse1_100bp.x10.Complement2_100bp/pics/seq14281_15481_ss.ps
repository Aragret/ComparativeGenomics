%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUCCAUCCUAACCACGACACCCACUUUCUCAUACUACCCCACCACCAACACCAUUUGAAAUUAUCACAUCCUUCGACUUAUUAAAUACUUCCUCUCCCxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[139.73439026 560.94885254]
[131.98284912 547.36767578]
[134.82546997 531.99066162]
[146.92005920 522.07824707]
[146.92005920 507.07827759]
[146.92005920 492.07827759]
[146.47344971 477.08493042]
[145.58062744 462.11151123]
[144.68782043 447.13809204]
[143.79499817 432.16470337]
[142.90219116 417.19128418]
[141.23063660 402.28472900]
[138.78491211 387.48544312]
[136.22908020 372.70480347]
[133.56329346 357.94357300]
[130.56851196 343.24557495]
[127.24625397 328.61810303]
[116.88223267 317.92062378]
[121.37084961 302.74951172]
[118.04859161 288.12203979]
[114.72633362 273.49459839]
[111.40407562 258.86712646]
[108.08181000 244.23966980]
[104.75955200 229.61221313]
[100.21266174 223.78575134]
[101.49843597 214.74226379]
[98.39432526 200.06697083]
[92.68309021 213.93713379]
[81.23970032 223.63502502]
[66.62064362 226.99407959]
[52.09185791 223.26388550]
[40.89910889 213.27777100]
[35.54288101 199.26667786]
[37.21977234 184.36070251]
[45.55516434 171.88989258]
[58.68690491 164.64024353]
[73.68132782 164.23135376]
[87.18865204 170.75456238]
[96.19129944 182.75260925]
[95.52151489 167.76756287]
[94.85173035 152.78253174]
[94.18194580 137.79748535]
[93.51216125 122.81245422]
[92.84237671 107.82741547]
[91.61539459 92.87767792]
[82.29302979 80.09471893]
[88.46311188 66.53819275]
[86.68064880 51.64447784]
[84.89817810 36.75075912]
[83.11571503 21.85704231]
[81.33325195 6.96332598]
[76.32216644 21.10153770]
[68.11438751 33.65671158]
[57.17410660 43.91879272]
[44.12005234 51.30740738]
[29.69049263 55.40470123]
[14.70148945 55.97894287]
[0.00074217 52.99766541]
[-13.58034992 46.62946701]
[-25.27371025 37.23450470]
[-34.41802216 25.34410667]
[-40.49613190 11.63073349]
[-43.16428757 -3.13005686]
[-42.27159882 -18.10346985]
[-37.86854935 -32.44268799]
[-30.20415306 -45.33675766]
[-19.71186829 -56.05645370]
[-6.98508263 -63.99553299]
[7.25643969 -68.70499420]
[22.20727348 -69.91850281]
[37.02187347 -67.56742096]
[50.86240768 -61.78471375]
[62.94612122 -52.89742661]
[72.58962250 -41.40817642]
[79.24752808 -27.96673775]
[82.54341125 -13.33221817]
[86.08307648 -27.90859413]
[89.62274933 -42.48497009]
[92.83602905 -57.13675690]
[87.89769745 -72.16750336]
[97.93862152 -83.16883087]
[100.82389069 -97.88871765]
[103.70916748 -112.60861206]
[106.59443665 -127.32850647]
[109.47971344 -142.04840088]
[112.36498260 -156.76828003]
[102.34138489 -171.10519409]
[105.72140503 -187.92453003]
[119.93464661 -196.91467285]
[122.60044098 -211.67588806]
[125.26623535 -226.43710327]
[127.15952301 -241.31713867]
[128.27517700 -256.27560425]
[129.39082336 -271.23403931]
[130.50646973 -286.19250488]
[131.62211609 -301.15093994]
[132.73776245 -316.10940552]
[133.51908875 -331.08905029]
[133.96569824 -346.08239746]
[120.08697510 -352.28317261]
[109.64127350 -363.32653809]
[104.22148895 -377.52844238]
[104.65408325 -392.72320557]
[110.87310791 -406.59378052]
[121.93019867 -417.02493286]
[136.13922119 -422.42602539]
[151.33341980 -421.97344971]
[165.19578552 -415.73617554]
[175.61239624 -404.66537476]
[180.99479675 -390.44924927]
[180.52223206 -375.25567627]
[174.26673889 -361.40151978]
[163.18223572 -350.99948120]
[148.95904541 -345.63580322]
[148.51243591 -330.64242554]
[150.65119934 -327.83920288]
[151.53843689 -323.86077881]
[150.63661194 -319.30667114]
[147.69622803 -314.99374390]
[146.58058167 -300.03530884]
[145.46492004 -285.07684326]
[144.34927368 -270.11840820]
[143.23362732 -255.15994263]
[142.11798096 -240.20149231]
[153.42662048 -250.05618286]
[168.42112732 -250.46197510]
[180.24621582 -241.23338318]
[183.49563599 -226.58956909]
[176.68376160 -213.22549438]
[162.92492676 -207.25103760]
[148.50946045 -211.39762878]
[140.02745056 -223.77131653]
[137.36164856 -209.01008606]
[134.69586182 -194.24887085]
[143.45158386 -184.79548645]
[145.18975830 -171.83164978]
[139.05371094 -160.06053162]
[127.08487701 -153.88301086]
[124.19960022 -139.16311646]
[121.31433105 -124.44322968]
[118.42905426 -109.72334290]
[115.54378510 -95.00344849]
[112.65850830 -80.28355408]
[117.80321503 -66.30567169]
[107.55591583 -54.25148392]
[109.20898438 -51.13705063]
[109.43568420 -47.06720352]
[107.80338287 -42.72106552]
[104.19912720 -38.94529724]
[100.65945435 -24.36892128]
[97.11978149 -9.79254532]
[96.22696686 5.18086004]
[98.00942993 20.07457733]
[99.79190063 34.96829605]
[101.57436371 49.86201096]
[103.35683441 64.75572968]
[112.55170441 76.47338867]
[106.50911713 91.09521484]
[117.69089508 81.09681702]
[132.50445557 83.45446777]
[140.02978516 96.43019104]
[134.71949768 110.45876312]
[120.48813629 115.19884491]
[107.82741547 107.15763092]
[108.49720001 122.14266968]
[109.16698456 137.12770081]
[109.83676910 152.11274719]
[110.50655365 167.09777832]
[111.17633820 182.08282471]
[113.06963348 196.96286011]
[116.17373657 211.63815308]
[119.38701630 226.28994751]
[122.70927429 240.91740417]
[126.03153229 255.54486084]
[129.35379028 270.17233276]
[132.67605591 284.79977417]
[135.99830627 299.42724609]
[146.59996033 311.17098999]
[141.87371826 325.29586792]
[145.19596863 339.92330933]
[148.74360657 343.75231934]
[150.31101990 348.12228394]
[150.02375793 352.18829346]
[148.32450867 355.27777100]
[150.99029541 370.03900146]
[155.59501648 377.92788696]
[153.58418274 385.03973389]
[156.02990723 399.83898926]
[164.69367981 387.59402466]
[179.16896057 383.66131592]
[192.83784485 389.83880615]
[199.45111084 403.30227661]
[195.98526001 417.89636230]
[184.02482605 426.94888306]
[169.03796387 426.32113647]
[157.87559509 416.29849243]
[158.76840210 431.27188110]
[159.66122437 446.24530029]
[160.55403137 461.21868896]
[161.44685364 476.19210815]
[163.96542358 479.72915649]
[165.11210632 483.50402832]
[164.98062134 487.05621338]
[163.80458069 490.00302124]
[161.92005920 492.07827759]
[161.92005920 507.07827759]
[161.92005920 522.07824707]
[174.01463318 531.99066162]
[176.85725403 547.36767578]
[169.10571289 560.94885254]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 207]
[5 206]
[6 205]
[7 200]
[8 199]
[9 198]
[10 197]
[11 196]
[12 188]
[13 187]
[14 185]
[15 184]
[16 180]
[17 179]
[19 177]
[20 176]
[21 175]
[22 174]
[23 173]
[24 172]
[26 171]
[27 170]
[39 169]
[40 168]
[41 167]
[42 166]
[43 165]
[44 164]
[45 158]
[47 156]
[48 155]
[49 154]
[50 153]
[51 152]
[76 151]
[77 150]
[78 149]
[79 145]
[81 143]
[82 142]
[83 141]
[84 140]
[85 139]
[86 138]
[89 134]
[90 133]
[91 132]
[92 124]
[93 123]
[94 122]
[95 121]
[96 120]
[97 119]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
