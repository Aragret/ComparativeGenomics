%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[86.12539673 498.72274780]
[82.43850708 484.07406616]
[83.02935028 468.98010254]
[87.85002136 454.66445923]
[96.50973511 442.28762817]
[108.30649567 432.85293579]
[122.28398132 427.12524414]
[120.72345734 412.20663452]
[119.16293335 397.28802490]
[117.60240936 382.36944580]
[105.90609741 373.21893311]
[104.11098480 358.11157227]
[113.78818512 345.90542603]
[112.22766113 330.98684692]
[110.66713715 316.06823730]
[106.84482574 309.74273682]
[109.19614410 300.91613770]
[107.85791016 285.97595215]
[106.51967621 271.03576660]
[97.67775726 259.04953003]
[104.15300751 244.61410522]
[102.81477356 229.67391968]
[101.47653961 214.73373413]
[100.13830566 199.79354858]
[91.05992889 191.79919434]
[89.82275391 179.36323547]
[97.63274384 169.09840393]
[96.51709747 154.13993835]
[87.85461426 142.02339172]
[94.54407501 127.68597412]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[90.49746704 73.42967224]
[75.13957214 69.18999481]
[62.18373108 59.96332169]
[53.18572617 46.88019180]
[49.21833801 31.53285599]
[50.74345779 15.78151417]
[57.55839539 1.52883756]
[68.82259369 -9.50985336]
[83.16127777 -16.01303291]
[81.82304382 -30.95321846]
[80.48480988 -45.89340210]
[68.64044952 -56.01016617]
[67.49612427 -71.18070221]
[77.21390533 -82.41014099]
[75.87567139 -97.35032654]
[74.53743744 -112.29051208]
[72.20195007 -127.10758209]
[68.87969208 -141.73504639]
[65.55742645 -156.36250305]
[62.23517227 -170.98995972]
[49.14538574 -179.43360901]
[45.98451614 -194.31526184]
[54.11491776 -206.74234009]
[50.79265594 -221.36979675]
[47.47039795 -235.99725342]
[44.14813995 -250.62472534]
[39.94401169 -255.72735596]
[39.07792282 -261.34402466]
[40.95159912 -265.73699951]
[38.06632614 -280.45690918]
[35.18105316 -295.17678833]
[32.29578018 -309.89669800]
[17.36410141 -308.36038208]
[2.35458374 -308.18826294]
[-12.60839748 -309.38177490]
[-27.40085030 -311.93099976]
[-41.90019989 -315.81481934]
[-55.98629761 -321.00106812]
[-69.54241180 -327.44674683]
[-82.45622253 -335.09848022]
[-94.62071228 -343.89282227]
[-105.93508148 -353.75689697]
[-116.30557251 -364.60900879]
[-125.64625549 -376.35919189]
[-133.87971497 -388.91009521]
[-140.93774414 -402.15771484]
[-146.76184082 -415.99227905]
[-151.30375671 -430.29916382]
[-154.52584839 -444.95974731]
[-156.40141296 -459.85263062]
[-156.91490173 -474.85433960]
[-156.06208801 -489.84060669]
[-153.85000610 -504.68722534]
[-150.29701233 -519.27117920]
[-145.43254089 -533.47155762]
[-139.29689026 -547.17083740]
[-131.94090271 -560.25537109]
[-123.42554474 -572.61676025]
[-113.82138062 -584.15258789]
[-103.20798492 -594.76721191]
[-91.67331696 -604.37280273]
[-79.31295013 -612.88958740]
[-66.22930145 -620.24713135]
[-52.53080368 -626.38446045]
[-38.33096313 -631.25061035]
[-23.74744415 -634.80535889]
[-8.90109539 -637.01922607]
[6.08506060 -637.87384033]
[21.08683968 -637.36218262]
[35.97993469 -635.48840332]
[50.64092636 -632.26806641]
[64.94833374 -627.72784424]
[78.78359222 -621.90539551]
[92.03205872 -614.84899902]
[104.58395386 -606.61700439]
[116.33526611 -597.27770996]
[127.18861389 -586.90856934]
[137.05406189 -575.59533691]
[145.84986877 -563.43194580]
[153.50312805 -550.51904297]
[159.95043945 -536.96368408]
[165.13836670 -522.87823486]
[169.02394104 -508.37933350]
[171.57493591 -493.58718872]
[172.77023315 -478.62435913]
[172.59991455 -463.61480713]
[171.06539917 -448.68295288]
[168.17941284 -433.95248413]
[163.96583557 -419.54550171]
[158.45962524 -405.58139038]
[151.70639038 -392.17584229]
[143.76208496 -379.43994141]
[134.69253540 -367.47921753]
[124.57291412 -356.39279175]
[113.48707581 -346.27255249]
[101.52687073 -337.20236206]
[88.79141235 -329.25732422]
[75.38623047 -322.50332642]
[61.42241669 -316.99633789]
[47.01567078 -312.78195190]
[49.90094376 -298.06207275]
[52.78621674 -283.34216309]
[55.67148972 -268.62228394]
[58.77560043 -253.94697571]
[62.09785843 -239.31951904]
[65.42012024 -224.69206238]
[68.74237823 -210.06460571]
[81.44318390 -202.36880493]
[85.02079773 -187.58181763]
[76.86263275 -174.31222534]
[80.18489075 -159.68475342]
[83.50714874 -145.05729675]
[86.82940674 -130.42984009]
[93.31060791 -143.95736694]
[106.02025604 -151.92385864]
[121.02011871 -151.86080933]
[133.66233826 -143.78775024]
[140.02958679 -130.20620728]
[138.14888000 -115.32456970]
[128.60301208 -103.75408173]
[114.34983826 -99.07997894]
[99.80588531 -102.75057983]
[89.47762299 -113.62874603]
[90.81585693 -98.68856049]
[92.15409088 -83.74837494]
[103.71286774 -74.42473602]
[105.28285980 -59.29233170]
[95.42499542 -47.23163605]
[96.76322937 -32.29145050]
[98.10146332 -17.35126686]
[111.88732910 -14.13204575]
[124.02342224 -6.80153561]
[133.31636047 3.93490529]
[138.84757996 17.03625488]
[140.06405640 31.22675705]
[136.83367920 45.12014771]
[129.45938110 57.35508347]
[118.65076447 66.72852325]
[105.45592499 72.31402588]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[109.50253296 126.57032776]
[118.24481201 139.75680542]
[111.47554779 153.02429199]
[112.59120178 167.98275757]
[123.30924988 182.95622253]
[115.07849121 198.45530701]
[116.41672516 213.39549255]
[117.75495911 228.33567810]
[119.09319305 243.27586365]
[128.03083801 256.33071899]
[121.45986176 269.69754028]
[122.79809570 284.63772583]
[124.13632965 299.57788086]
[125.58574677 314.50769043]
[127.14627075 329.42630005]
[128.70678711 344.34490967]
[140.70045471 354.28421021]
[142.07052612 369.43603516]
[132.52101135 380.80889893]
[134.08154297 395.72750854]
[135.64205933 410.64611816]
[137.20259094 425.56472778]
[152.06280518 428.27593994]
[165.55661011 435.06515503]
[176.59014893 445.38201904]
[184.26896667 458.39019775]
[187.97056580 473.03515625]
[187.39489746 488.12969971]
[182.58860779 502.45019531]
[173.94132996 514.83569336]
[162.15405273 524.28222656]
[148.18232727 530.02398682]
[133.15878296 531.59545898]
[118.30129242 528.86932373]
[104.81430054 522.06658936]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 197]
[8 196]
[9 195]
[10 194]
[13 191]
[14 190]
[15 189]
[17 188]
[18 187]
[19 186]
[21 184]
[22 183]
[23 182]
[24 181]
[27 179]
[28 178]
[30 176]
[31 175]
[33 173]
[34 172]
[42 163]
[43 162]
[44 161]
[47 158]
[48 157]
[49 156]
[50 146]
[51 145]
[52 144]
[53 143]
[56 140]
[57 139]
[58 138]
[59 137]
[62 136]
[63 135]
[64 134]
[65 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
