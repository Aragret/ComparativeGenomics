%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[100.55273438 725.34948730]
[89.17350006 715.39935303]
[81.23408508 702.53637695]
[77.44044495 687.90423584]
[78.12990570 672.80401611]
[83.24116516 658.57843018]
[92.31973267 646.49249268]
[104.55834198 637.62072754]
[118.86875916 632.75213623]
[118.42215729 617.75878906]
[117.97554779 602.76544189]
[117.52894592 587.77209473]
[117.08233643 572.77868652]
[116.63572693 557.78533936]
[102.42771149 553.15747070]
[90.63822937 543.93048096]
[82.70208740 531.20288086]
[79.59351349 516.50054932]
[81.70657349 501.59399414]
[88.80534363 488.28506470]
[100.05007935 478.18911743]
[114.09650421 472.53906250]
[113.64989471 457.54571533]
[113.20329285 442.55236816]
[112.75668335 427.55902100]
[112.31008148 412.56567383]
[111.86347198 397.57232666]
[100.88014221 387.57720947]
[100.21363068 372.37820435]
[110.77188110 360.92562866]
[110.32527924 345.93228149]
[102.21247101 333.44100952]
[109.53545380 319.41659546]
[108.75413513 304.43695068]
[107.63848114 289.47851562]
[106.52283478 274.52005005]
[105.40718842 259.56158447]
[96.74470520 247.44505310]
[103.43416595 233.10763550]
[102.31851959 218.14916992]
[91.67080688 204.19950867]
[99.80402374 187.67884827]
[98.46578979 172.73866272]
[97.12755585 157.79847717]
[95.78932190 142.85829163]
[92.06160736 136.47660828]
[94.54407501 127.68597412]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[84.10001373 101.37093353]
[71.46356964 109.45302582]
[56.52679443 110.82884216]
[42.62661362 105.19103241]
[32.86835480 93.79908752]
[29.43204117 79.19800568]
[33.08535385 64.64968872]
[43.01213074 53.40428925]
[56.99470520 47.97404480]
[71.90933990 49.57209015]
[84.42405701 57.84141922]
[91.74305725 70.93466187]
[93.08129120 55.99447250]
[86.60603333 41.55904388]
[95.44795227 29.57281113]
[96.67492676 14.62307835]
[89.98546600 0.28565556]
[98.64794922 -11.83089066]
[99.76359558 -26.78934479]
[100.87924194 -41.74779892]
[101.99489594 -56.70624924]
[102.99915314 -71.67259216]
[103.89196777 -86.64600372]
[96.98978424 -100.88224030]
[105.47090912 -113.12641144]
[106.25223541 -128.10604858]
[106.92201996 -143.09109497]
[107.59180450 -158.07612610]
[108.26158905 -173.06117249]
[108.93137360 -188.04620361]
[96.87568665 -193.45562744]
[87.39869690 -202.61779785]
[81.61334229 -214.42658997]
[80.18872070 -227.46687317]
[83.27282715 -240.18420410]
[90.47748566 -251.06997681]
[100.92704773 -258.84051514]
[113.36480713 -262.58828735]
[114.48046112 -277.54675293]
[115.59610748 -292.50521851]
[116.71175385 -307.46365356]
[102.15206909 -311.23928833]
[88.50062561 -317.55416870]
[76.19625092 -326.20532227]
[65.63447571 -336.91458130]
[57.15483475 -349.33776855]
[51.02989578 -363.07550049]
[47.45656204 -377.68612671]
[46.54969788 -392.70004272]
[48.33845139 -407.63458252]
[52.76532745 -422.00964355]
[59.68801498 -435.36315918]
[68.88397980 -447.26583862]
[80.05761719 -457.33508301]
[92.84973145 -465.24719238]
[106.84911346 -470.74786377]
[121.60573578 -473.66021729]
[136.64523315 -473.89065552]
[151.48416138 -471.43179321]
[165.64550781 -466.36264038]
[178.67402649 -458.84616089]
[190.15090942 -449.12396240]
[199.70724487 -437.50863647]
[207.03581238 -424.37347412]
[211.90103149 -410.14080811]
[214.14651489 -395.26809692]
[213.70007324 -380.23345947]
[210.57606506 -365.52017212]
[204.87490845 -351.60125732]
[196.77986145 -338.92410278]
[186.55116272 -327.89624023]
[174.51762390 -318.87219238]
[161.06605530 -312.14202881]
[146.62889099 -307.92205811]
[131.67021179 -306.34802246]
[130.55456543 -291.38955688]
[129.43891907 -276.43109131]
[128.32325745 -261.47265625]
[143.19656372 -253.45735168]
[153.10243225 -239.70208740]
[156.00866699 -222.94598389]
[151.28288269 -206.55187988]
[139.82934570 -193.83151245]
[123.91641235 -187.37641907]
[123.24662781 -172.39138794]
[122.57684326 -157.40634155]
[121.90705872 -142.42131042]
[121.23727417 -127.43626404]
[124.07896423 -120.61376190]
[120.44431305 -112.23359680]
[127.41035461 -99.06835938]
[118.86537170 -85.75318146]
[117.97255707 -70.77977753]
[120.71235657 -63.91572189]
[116.95334625 -55.59060287]
[115.83769989 -40.63214874]
[114.72204590 -25.67369461]
[113.60639954 -10.71524239]
[120.37565613 2.55225205]
[111.63337708 15.73872757]
[114.27068329 22.64281464]
[110.38813782 30.91104698]
[116.95911407 44.27785492]
[108.02147675 57.33270645]
[106.68324280 72.27289581]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[109.50253296 126.57032776]
[110.72950745 141.52006531]
[112.06774139 156.46025085]
[113.40597534 171.40043640]
[114.74420929 186.34062195]
[124.12335205 195.19468689]
[124.93039703 207.66593933]
[117.27696991 217.03352356]
[118.39262390 231.99197388]
[127.13490295 245.17845154]
[120.36563873 258.44595337]
[121.48129272 273.40441895]
[122.59693909 288.36285400]
[123.71258545 303.32131958]
[126.65297699 307.63421631]
[127.55480194 312.18835449]
[126.66755676 316.16677856]
[124.52880859 318.97000122]
[132.67355347 332.53369141]
[125.31862640 345.48568726]
[125.76523590 360.47903442]
[136.98643494 371.28283691]
[137.22576904 386.49459839]
[126.85682678 397.12570190]
[127.30342865 412.11904907]
[127.75003815 427.11239624]
[128.19664001 442.10577393]
[128.64324951 457.09912109]
[129.08985901 472.09246826]
[143.44767761 476.89645386]
[155.27339172 486.30517578]
[163.15173340 499.16799927]
[166.14830017 513.92236328]
[163.92033386 528.78363037]
[156.75582886 541.96105957]
[145.53645325 551.87341309]
[131.62907410 557.33874512]
[132.07568359 572.33209229]
[132.52229309 587.32543945]
[132.96890259 602.31878662]
[133.41549683 617.31213379]
[133.86210632 632.30548096]
[148.43693542 636.31372070]
[161.18191528 644.44128418]
[170.96376038 655.96545410]
[176.91267395 669.86157227]
[178.49969482 684.89398193]
[175.58369446 699.72595215]
[168.42396545 713.03875732]
[157.65715027 723.64849854]
[144.24063110 730.61187744]
[129.36738586 733.30963135]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 200]
[10 199]
[11 198]
[12 197]
[13 196]
[14 195]
[22 187]
[23 186]
[24 185]
[25 184]
[26 183]
[27 182]
[30 179]
[31 178]
[33 176]
[34 172]
[35 171]
[36 170]
[37 169]
[39 167]
[40 166]
[42 163]
[43 162]
[44 161]
[45 160]
[47 159]
[48 158]
[50 156]
[62 155]
[63 154]
[65 152]
[66 150]
[68 148]
[69 147]
[70 146]
[71 145]
[72 143]
[73 142]
[75 140]
[76 138]
[77 137]
[78 136]
[79 135]
[80 134]
[88 128]
[89 127]
[90 126]
[91 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
