%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[122.58912659 569.21478271]
[123.05784607 554.15728760]
[126.86592102 539.58178711]
[133.82234192 526.21929932]
[143.57818604 514.74011230]
[155.64410400 505.72006226]
[169.41485596 499.61154175]
[166.52958679 484.89166260]
[163.64431763 470.17175293]
[160.75904846 455.45187378]
[157.32798767 440.84954834]
[146.49662781 430.62551880]
[150.30334473 415.26910400]
[146.33125305 400.80456543]
[142.35914612 386.34005737]
[132.78425598 397.88653564]
[117.78485870 397.75244141]
[108.41795349 386.03659058]
[111.58847046 371.37548828]
[124.95922852 364.57675171]
[138.67272949 370.65090942]
[135.78744507 355.93099976]
[132.90217590 341.21112061]
[122.86125183 330.20980835]
[127.79958344 315.17904663]
[124.91431427 300.45916748]
[122.02903748 285.73925781]
[109.92880249 283.93850708]
[98.94259644 278.50158691]
[90.13658142 269.93942261]
[84.37048340 259.06698608]
[82.21363068 246.92584229]
[83.88880920 234.68424988]
[89.24931335 223.52482605]
[97.79167938 214.53031921]
[108.70294189 208.57849121]
[106.47782898 193.74444580]
[96.93815613 182.30575562]
[102.54271698 167.51049805]
[100.31759644 152.67645264]
[98.09248352 137.84240723]
[88.55281067 126.40370941]
[94.15737152 111.60845947]
[91.49157715 96.84724426]
[88.38746643 82.17194366]
[77.96183014 70.27165985]
[82.89785767 56.21872330]
[79.79374695 41.54342270]
[76.68963623 26.86811829]
[73.58552551 12.19281673]
[63.22069931 4.51602268]
[60.93740082 -7.77097511]
[67.42343903 -17.98164940]
[64.53816986 -32.70154190]
[61.10610580 -36.63448334]
[59.66949844 -41.04917145]
[60.07769394 -45.10483551]
[61.86818314 -48.14234924]
[59.64306259 -62.97639465]
[57.41794586 -77.81044006]
[55.19282913 -92.64447784]
[50.48439026 -78.40261841]
[42.15403748 -65.92843628]
[30.80314636 -56.12245560]
[17.25114822 -49.69257736]
[2.47637296 -47.10298157]
[-12.45457554 -48.54061127]
[-26.46381950 -53.90167999]
[-38.54001999 -62.79917526]
[-47.81138229 -74.59077454]
[-53.60860443 -88.42523193]
[-55.51317596 -103.30382538]
[-53.38760376 -118.15246582]
[-47.38533783 -131.89920044]
[-37.93968582 -143.55165100]
[-25.73253441 -152.26861572]
[-11.64513302 -157.42080688]
[3.30553961 -158.63629150]
[18.04018021 -155.82731628]
[31.49508286 -149.19665527]
[42.69892883 -139.22300720]
[50.84289932 -126.62635040]
[55.33927155 -112.31491089]
[57.78499603 -127.11418152]
[60.23072433 -141.91345215]
[62.67645264 -156.71272278]
[65.12217712 -171.51199341]
[67.56790924 -186.31126404]
[62.18424225 -201.18832397]
[71.89316559 -212.48371887]
[74.22865295 -227.30078125]
[76.45377350 -242.13482666]
[78.67888641 -256.96887207]
[80.68289948 -271.83441162]
[82.46537018 -286.72811890]
[84.24783325 -301.62182617]
[86.03029633 -316.51556396]
[87.81276703 -331.40927124]
[89.59523010 -346.30297852]
[75.70457458 -352.23815918]
[64.04959106 -361.84744263]
[55.57510757 -374.35183716]
[50.96810532 -388.73767090]
[50.60205841 -403.83874512]
[54.50663757 -418.43090820]
[62.36531448 -431.33120728]
[73.54102325 -441.49389648]
[87.12780762 -448.09509277]
[102.02423096 -450.59973145]
[117.02272034 -448.80471802]
[130.90740967 -442.85562134]
[142.55273438 -433.23461914]
[151.01464844 -420.72174072]
[155.60719299 -406.33126831]
[155.95806885 -391.22982788]
[152.03883362 -376.64160156]
[144.16720581 -363.74920654]
[132.98129272 -353.59774780]
[119.38788605 -347.01019287]
[104.48894501 -344.52053833]
[102.70648193 -329.62680054]
[100.92401886 -314.73309326]
[99.14154816 -299.83938599]
[97.35908508 -284.94564819]
[95.57662201 -270.05194092]
[97.77183533 -265.81045532]
[97.32589722 -260.14495850]
[93.51293182 -254.74375916]
[91.28781128 -239.90971375]
[89.06269836 -225.07566833]
[91.17919159 -217.99455261]
[86.69243622 -210.03799438]
[92.25103760 -196.21948242]
[82.36717987 -183.86553955]
[79.92144775 -169.06626892]
[77.47572327 -154.26699829]
[75.02999878 -139.46772766]
[72.58426666 -124.66845703]
[70.13854218 -109.86918640]
[70.02687073 -94.86959839]
[72.25199127 -80.03555298]
[74.47711182 -65.20150757]
[76.70222473 -50.36746597]
[79.25805664 -35.58681488]
[82.14333344 -20.86692238]
[94.37325287 -8.28137779]
[88.26083374 9.08870602]
[91.36493683 23.76400948]
[94.46904755 38.43931198]
[97.57315826 53.11461258]
[107.77676392 63.96522141]
[103.06276703 79.06783295]
[106.16687775 93.74313354]
[108.57128143 95.61618805]
[110.34730530 98.40550232]
[111.15425110 101.88002014]
[110.74158478 105.68606567]
[108.99141693 109.38334656]
[118.69024658 121.88307190]
[112.92652893 135.61729431]
[115.15164185 150.45133972]
[117.37676239 165.28538513]
[127.07559204 177.78511047]
[121.31187439 191.51933289]
[123.53698730 206.35337830]
[140.83561707 211.18260193]
[154.23826599 223.05828857]
[161.07406616 239.55192566]
[160.00791931 257.32104492]
[151.30105591 272.78662109]
[136.74893188 282.85400391]
[139.63420105 297.57388306]
[142.51947021 312.29376221]
[152.76676941 324.34796143]
[147.62207031 338.32583618]
[150.50733948 353.04574585]
[153.39260864 367.76562500]
[156.82366943 382.36795044]
[160.79577637 396.83248901]
[164.76786804 411.29699707]
[175.88333130 422.55563354]
[171.79251099 436.87747192]
[181.36740112 425.33096313]
[196.36679077 425.46505737]
[205.73370361 437.18090820]
[202.56318665 451.84201050]
[189.19242859 458.64074707]
[175.47892761 452.56658936]
[178.36421204 467.28649902]
[181.24948120 482.00637817]
[184.13475037 496.72628784]
[199.19258118 497.18405151]
[213.77087402 500.98153687]
[227.13841248 507.92825317]
[238.62466431 517.67572021]
[247.65350342 529.73510742]
[253.77201843 543.50140381]
[256.67333984 558.28417969]
[256.21191406 573.34185791]
[252.41090393 587.91925049]
[245.46095276 601.28509521]
[235.71067810 612.76898193]
[223.64913940 621.79492188]
[209.88134766 627.91009521]
[195.09786987 630.80786133]
[180.04026794 630.34277344]
[165.46380615 626.53820801]
[152.09963989 619.58502197]
[140.61811829 609.83197021]
[131.59512329 597.76824951]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 191]
[8 190]
[9 189]
[10 188]
[11 182]
[13 180]
[14 179]
[15 178]
[21 177]
[22 176]
[23 175]
[25 173]
[26 172]
[27 171]
[36 165]
[37 164]
[39 162]
[40 161]
[41 160]
[43 158]
[44 153]
[45 152]
[47 150]
[48 149]
[49 148]
[50 147]
[53 145]
[54 144]
[58 143]
[59 142]
[60 141]
[61 140]
[83 139]
[84 138]
[85 137]
[86 136]
[87 135]
[88 134]
[90 132]
[91 130]
[92 129]
[93 128]
[94 125]
[95 124]
[96 123]
[97 122]
[98 121]
[99 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
