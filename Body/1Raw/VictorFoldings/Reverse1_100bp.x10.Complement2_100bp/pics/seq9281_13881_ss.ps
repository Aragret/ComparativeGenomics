%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[43.28918076 604.23083496]
[38.31010437 618.49218750]
[29.51371002 630.77227783]
[17.61308861 640.07556152]
[3.57296562 645.64801025]
[-11.46848679 647.03771973]
[-26.29192543 644.13214111]
[-39.69568253 637.16680908]
[-50.59317398 626.70635986]
[-58.10098648 613.59875488]
[-61.61050034 598.90655518]
[-60.83721161 583.82086182]
[-55.84381104 569.56451416]
[-47.03508377 557.29333496]
[-35.12512207 548.00195312]
[-21.07940865 542.44366455]
[-6.03656864 541.06903076]
[-3.15129614 526.34912109]
[-0.26602349 511.62924194]
[2.61924911 496.90933228]
[-10.40124226 504.35696411]
[-24.90998650 500.54953003]
[-32.59571457 487.66818237]
[-29.05569077 473.09188843]
[-16.31780624 465.17062378]
[-1.67889524 468.44207764]
[6.47503090 481.03121948]
[10.66204166 466.62744141]
[14.84905338 452.22366333]
[19.03606415 437.81988525]
[22.79236603 423.29782104]
[18.06611443 409.17297363]
[28.66776848 397.42922974]
[31.99002838 382.80175781]
[27.26377869 368.67687988]
[37.86543274 356.93313599]
[41.18769073 342.30569458]
[44.50995255 327.67822266]
[47.83221054 313.05078125]
[51.15446854 298.42330933]
[54.47673035 283.79583740]
[57.79898834 269.16839600]
[61.12125015 254.54092407]
[64.33452606 239.88914490]
[67.43862915 225.21383667]
[62.50260925 211.16090393]
[72.92823792 199.26062012]
[71.23696899 192.06608582]
[76.18935394 184.39068604]
[79.51161194 169.76322937]
[82.83387756 155.13575745]
[85.71914673 140.41587830]
[88.16487122 125.61660004]
[90.61060333 110.81732941]
[85.86773682 97.66450500]
[94.59012604 86.73694611]
[97.03585052 71.93767548]
[99.48158264 57.13840103]
[101.92730713 42.33913040]
[102.26228333 27.34287262]
[100.47982025 12.44915485]
[98.69734955 -2.44456291]
[96.91488647 -17.33827972]
[94.57939911 -32.15534973]
[91.69412994 -46.87524033]
[88.80885315 -61.59513092]
[85.37679291 -65.52807617]
[83.94018555 -69.94275665]
[84.34838104 -73.99842834]
[86.13887024 -77.03594208]
[83.91374969 -91.86997986]
[81.68863678 -106.70402527]
[79.46351624 -121.53807068]
[77.23840332 -136.37211609]
[67.53957367 -148.87184143]
[73.30329132 -162.60606384]
[63.60446167 -175.10578918]
[69.36817932 -188.84001160]
[67.14305878 -203.67405701]
[64.91794586 -218.50810242]
[62.58245850 -233.32518005]
[60.13673019 -248.12445068]
[57.58089828 -262.90509033]
[54.91510391 -277.66632080]
[52.24930573 -292.42752075]
[48.27721786 -297.71279907]
[47.66279221 -303.36251831]
[49.73075485 -307.66748047]
[47.50563431 -322.50152588]
[45.28051758 -337.33557129]
[30.31406212 -339.38052368]
[16.53055000 -345.56045532]
[5.04734755 -355.37435913]
[-3.20465231 -368.02667236]
[-7.55649662 -382.49172974]
[-7.65540075 -397.59692383]
[-3.49334788 -412.11773682]
[4.59226370 -424.87704468]
[15.94596958 -434.84048462]
[29.64737511 -441.20037842]
[44.58576965 -443.44113159]
[59.55016327 -441.38113403]
[73.32746124 -435.18737793]
[84.80079651 -425.36193848]
[93.04008484 -412.70132446]
[97.37739563 -398.23190308]
[97.46112061 -383.12661743]
[93.28448486 -368.60998535]
[85.18605804 -355.85882568]
[73.82234955 -345.90679932]
[60.11456299 -339.56069946]
[62.33967972 -324.72665405]
[64.56479645 -309.89260864]
[67.01052094 -295.09332275]
[69.67632294 -280.33212280]
[72.34211731 -265.57089233]
[76.62430573 -259.54721069]
[74.93600464 -250.57017517]
[77.38172913 -235.77090454]
[81.57376099 -229.68414307]
[79.75199127 -220.73321533]
[81.97710419 -205.89918518]
[84.20222473 -191.06513977]
[93.74189758 -179.62643433]
[88.13733673 -164.83117676]
[97.67700958 -153.39248657]
[92.07244873 -138.59722900]
[94.29756165 -123.76319122]
[96.52268219 -108.92914581]
[98.74779510 -94.09510040]
[100.97291565 -79.26105499]
[103.52874756 -64.48040009]
[106.41401672 -49.76051331]
[109.29929352 -35.04061890]
[119.70645142 -45.84298325]
[134.65432739 -44.59364319]
[143.12391663 -32.21356964]
[138.87173462 -17.82889175]
[125.03234100 -12.04345894]
[111.80860138 -19.12074661]
[113.59107208 -4.22702885]
[115.37353516 10.66668892]
[117.15600586 25.56040573]
[122.43441772 11.51980972]
[131.56932068 -0.37782153]
[143.77043152 -9.10322475]
[157.98225403 -13.90156555]
[172.97532654 -14.35773849]
[187.45257568 -10.43228149]
[200.16159058 -2.46478391]
[210.00289917 8.85548401]
[216.12515259 22.54920769]
[217.99870300 37.43174362]
[215.46145630 52.21559906]
[208.73294067 65.62182617]
[198.39520264 76.49065399]
[185.34259033 83.88181305]
[170.70428467 87.15590668]
[155.74661255 86.02967834]
[141.76359558 80.60057068]
[129.96490479 71.33824921]
[121.37121582 59.04399490]
[116.72657776 44.78485870]
[114.28085327 59.58412933]
[111.83512878 74.38339996]
[109.38939667 89.18267059]
[114.13226318 102.33549500]
[105.40987396 113.26305389]
[102.96414948 128.06233215]
[100.51841736 142.86160278]
[102.19103241 146.86863708]
[102.47316742 150.80372620]
[101.55819702 154.23857117]
[99.75869751 156.85169983]
[97.46133423 158.45802307]
[94.13907623 173.08547974]
[90.81681824 187.71293640]
[87.60353851 202.36473083]
[92.31754303 217.46733093]
[82.11393738 228.31794739]
[79.00982666 242.99325562]
[80.29560089 252.03672791]
[75.74871063 257.86318970]
[72.42645264 272.49066162]
[69.10418701 287.11810303]
[65.78192902 301.74557495]
[62.45967102 316.37301636]
[59.13741302 331.00048828]
[55.81515121 345.62796021]
[52.49289322 360.25540161]
[56.98151398 375.42651367]
[46.61748886 386.12402344]
[43.29523087 400.75146484]
[47.78384781 415.92260742]
[37.41982651 426.62008667]
[38.85097122 430.71957397]
[38.89838791 434.66448975]
[37.78059006 438.03878784]
[35.82874680 440.54016113]
[33.43984604 442.00689697]
[29.25283623 456.41067505]
[25.06582451 470.81445312]
[20.87881279 485.21823120]
[17.33913994 499.79461670]
[14.45386791 514.51452637]
[11.56859493 529.23437500]
[8.68332291 543.95428467]
[22.09406853 550.90618896]
[33.00206375 561.35565186]
[40.52304077 574.45574951]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 207]
[18 206]
[19 205]
[20 204]
[27 203]
[28 202]
[29 201]
[30 200]
[31 195]
[33 193]
[34 192]
[36 190]
[37 189]
[38 188]
[39 187]
[40 186]
[41 185]
[42 184]
[43 183]
[44 181]
[45 180]
[47 178]
[49 177]
[50 176]
[51 175]
[52 170]
[53 169]
[54 168]
[56 166]
[57 165]
[58 164]
[59 163]
[60 143]
[61 142]
[62 141]
[63 140]
[64 134]
[65 133]
[66 132]
[70 131]
[71 130]
[72 129]
[73 128]
[74 127]
[76 125]
[78 123]
[79 122]
[80 121]
[81 119]
[82 118]
[83 116]
[84 115]
[85 114]
[88 113]
[89 112]
[90 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
