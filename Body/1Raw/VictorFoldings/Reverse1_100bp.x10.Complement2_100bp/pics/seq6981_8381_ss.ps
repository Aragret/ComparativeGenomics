%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGG\
) } def
/len { sequence length } bind def

/coor [
[106.30208588 669.24945068]
[92.79443359 662.70941162]
[79.83420563 655.14233398]
[67.49934387 646.59368896]
[55.86403656 637.11486816]
[44.99825668 626.76287842]
[34.96735382 615.60003662]
[25.83165932 603.69342041]
[17.64611244 591.11468506]
[10.45994568 577.93945312]
[4.31637716 564.24688721]
[-0.74764436 550.11950684]
[-4.70166349 535.64215088]
[-7.52189922 520.90191650]
[-9.19139099 505.98742676]
[-9.70009708 490.98846436]
[-9.04495811 475.99514771]
[-7.22991562 461.09768677]
[-4.26588440 446.38571167]
[-0.17069098 431.94763184]
[5.03103542 417.87033081]
[11.30801010 404.23846436]
[18.62248421 391.13400269]
[26.93046379 378.63577271]
[36.18198395 366.81893921]
[46.32140732 355.75457764]
[57.28775024 345.50918579]
[69.01506042 336.14443970]
[81.43280792 327.71664429]
[94.46630859 320.27645874]
[108.03717041 313.86868286]
[122.06378937 308.53179932]
[136.46179199 304.29791260]
[133.35768127 289.62261963]
[130.25358582 274.94729614]
[127.14946747 260.27200317]
[123.93619537 245.62022400]
[120.61393738 230.99276733]
[117.29167175 216.36529541]
[113.96941376 201.73783875]
[109.42252350 195.91139221]
[110.70829773 186.86790466]
[107.60418701 172.19259644]
[104.50007629 157.51730347]
[101.39597321 142.84199524]
[98.29186249 128.16668701]
[95.18775177 113.49139404]
[85.98612213 102.96421051]
[90.13694763 89.61271667]
[87.03283691 74.93741608]
[81.78611755 60.88494492]
[74.51289368 47.76625061]
[67.23966217 34.64755630]
[59.96643066 21.52886391]
[52.69320297 8.41016865]
[45.41997147 -4.70852518]
[37.95223236 -17.71747780]
[30.29163361 -30.61380386]
[22.63103676 -43.51013184]
[14.97043896 -56.40645981]
[9.40057373 -59.96849823]
[6.84878922 -65.04643250]
[7.28033113 -69.80278015]
[0.00710154 -82.92147064]
[-7.26612806 -96.04016876]
[-14.53935719 -109.15885925]
[-28.54784012 -103.72966003]
[-43.16513824 -100.25859070]
[-58.11894226 -98.81031036]
[-73.13066864 -99.41179657]
[-87.92066193 -102.05184174]
[-102.21339417 -106.68127441]
[-115.74259186 -113.21384430]
[-128.25622559 -121.52785492]
[-139.52116394 -131.46841431]
[-149.32756042 -142.85035706]
[-157.49272156 -155.46162415]
[-163.86453247 -169.06727600]
[-168.32427979 -183.41384888]
[-170.78890991 -198.23408508]
[-171.21247864 -213.25189209]
[-169.58711243 -228.18748474]
[-165.94309998 -242.76261902]
[-160.34829712 -256.70581055]
[-152.90695190 -269.75723267]
[-143.75769043 -281.67382812]
[-133.07095337 -292.23352051]
[-121.04583740 -301.23965454]
[-107.90634918 -308.52441406]
[-93.89728546 -313.95208740]
[-79.27960968 -317.42156982]
[-64.32564545 -318.86822510]
[-49.31398773 -318.26513672]
[-34.52428055 -315.62347412]
[-20.23204994 -310.99249268]
[-6.70355606 -304.45846558]
[5.80917645 -296.14309692]
[17.07304192 -286.20132446]
[26.87820435 -274.81832886]
[35.04199600 -262.20617676]
[41.41233063 -248.59982300]
[45.87053299 -234.25276184]
[48.33355331 -219.43226624]
[48.75550461 -204.41441345]
[47.12852478 -189.47900391]
[43.48292160 -174.90425110]
[37.88661575 -160.96168518]
[30.44386101 -147.91104126]
[21.29330826 -135.99546814]
[10.60543156 -125.43691254]
[-1.42066336 -116.43209076]
[5.85256624 -103.31339264]
[13.12579536 -90.19470215]
[20.39902496 -77.07600403]
[27.86676598 -64.06705475]
[35.52736282 -51.17072678]
[43.18796158 -38.27440262]
[50.84856033 -25.37807465]
[55.17344284 -23.35213852]
[58.27156448 -18.58782768]
[58.53866577 -11.98175430]
[65.81189728 1.13693964]
[73.08512878 14.25563335]
[80.35835266 27.37432671]
[87.63158417 40.49302292]
[94.90481567 53.61171722]
[94.40443420 38.62006378]
[98.09214783 24.08043671]
[105.67712402 11.13948822]
[116.56118011 0.81779695]
[129.88595581 -6.07062578]
[144.60060120 -8.98253059]
[159.54466248 -7.68827200]
[173.53958130 -2.28992081]
[185.48165894 6.78678656]
[194.42910767 18.82602310]
[199.67628479 32.87832260]
[200.80937195 47.83546448]
[197.73901367 62.51786804]
[190.70735168 75.76760864]
[180.26893616 86.53977203]
[167.24697876 93.98480225]
[152.66844177 97.51557159]
[137.68305969 96.85361481]
[123.47262573 92.05113983]
[111.15785217 83.48689270]
[101.70813751 71.83330536]
[104.81224823 86.50860596]
[114.01387787 97.03578949]
[109.86305237 110.38728333]
[112.96716309 125.06258392]
[116.07127380 139.73788452]
[119.17538452 154.41319275]
[122.27949524 169.08848572]
[125.38360596 183.76379395]
[128.59687805 198.41557312]
[131.91912842 213.04304504]
[135.24139404 227.67050171]
[138.56365967 242.29795837]
[143.51603699 249.97335815]
[141.82476807 257.16790771]
[144.92887878 271.84320068]
[148.03298950 286.51849365]
[151.13710022 301.19381714]
[166.01632690 299.23498535]
[181.00259399 298.43505859]
[196.00579834 298.79888916]
[210.93568420 300.32427979]
[225.70246887 303.00204468]
[240.21734619 306.81604004]
[254.39300537 311.74340820]
[268.14422607 317.75445557]
[281.38824463 324.81304932]
[294.04547119 332.87673950]
[306.03976440 341.89700317]
[317.29898071 351.81964111]
[327.75537109 362.58493042]
[337.34613037 374.12817383]
[346.01351929 386.37988281]
[353.70541382 399.26644897]
[360.37554932 412.71029663]
[365.98382568 426.63061523]
[370.49652100 440.94369507]
[373.88650513 455.56341553]
[376.13333130 470.40188599]
[377.22354126 485.36984253]
[377.15057373 500.37725830]
[375.91485596 515.33392334]
[373.52380371 530.14984131]
[369.99182129 544.73590088]
[365.34014893 559.00439453]
[359.59674072 572.86950684]
[352.79617310 586.24786377]
[344.97930908 599.05902100]
[336.19320679 611.22589111]
[326.49066162 622.67529297]
[315.93005371 633.33837891]
[304.57485962 643.15106201]
[292.49343872 652.05426025]
[279.75839233 659.99444580]
[266.44631958 666.92395020]
[252.63731384 672.80096436]
[238.41439819 677.59020996]
[223.86312866 681.26287842]
[209.07099915 683.79693604]
[194.12698364 685.17700195]
[179.12095642 685.39495850]
[164.14315796 684.44934082]
[149.28369141 682.34588623]
[134.63191223 679.09729004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 164]
[34 163]
[35 162]
[36 161]
[37 159]
[38 158]
[39 157]
[40 156]
[42 155]
[43 154]
[44 153]
[45 152]
[46 151]
[47 150]
[49 148]
[50 147]
[51 126]
[52 125]
[53 124]
[54 123]
[55 122]
[56 121]
[57 118]
[58 117]
[59 116]
[60 115]
[63 114]
[64 113]
[65 112]
[66 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
