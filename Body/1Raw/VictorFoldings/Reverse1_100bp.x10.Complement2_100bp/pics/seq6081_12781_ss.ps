%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[113.52496338 504.77316284]
[124.37375641 493.28060913]
[116.07586670 480.91149902]
[123.18923950 466.77960205]
[122.51945496 451.79458618]
[121.84967041 436.80953979]
[121.17988586 421.82449341]
[120.51010132 406.83944702]
[119.84031677 391.85443115]
[108.94501495 402.16424561]
[93.94755554 401.88809204]
[83.43916321 391.18420410]
[83.43952942 376.18420410]
[93.94843292 365.48077393]
[108.94589996 365.20538330]
[119.84031677 375.51486206]
[120.51010132 360.52981567]
[121.17988586 345.54476929]
[121.84967041 330.55972290]
[122.51945496 315.57470703]
[122.40779114 300.57510376]
[121.51497650 285.60171509]
[120.62215424 270.62829590]
[117.08610535 264.13845825]
[119.82920074 255.42562866]
[119.15941620 240.44058228]
[118.48963165 225.45555115]
[116.59633636 210.57551575]
[113.49223328 195.90020752]
[101.07628632 183.49815369]
[106.92941284 166.03898621]
[103.60715485 151.41152954]
[100.28489685 136.78407288]
[95.73799896 130.95761108]
[97.02378082 121.91413116]
[93.91967010 107.23882294]
[90.28524780 103.45663452]
[89.02863312 97.90737915]
[90.94847870 92.08061981]
[88.28268433 77.31940460]
[85.61688995 62.55818558]
[82.95109558 47.79697037]
[72.88439941 35.59154892]
[78.23664093 21.69181061]
[75.57084656 6.93059349]
[61.21146774 1.66225576]
[51.48130035 -10.00910473]
[48.91659164 -24.88487816]
[54.10744095 -38.95296478]
[65.56583405 -48.46983719]
[62.90003586 -63.23105240]
[60.23424149 -77.99227142]
[50.16754913 -90.19769287]
[55.51979065 -104.09742737]
[42.28212357 -104.39448547]
[29.33445549 -107.14392853]
[17.12694740 -112.24840546]
[6.08369303 -119.52871704]
[-3.41200233 -128.73010254]
[-11.03093433 -139.53118896]
[-16.50940895 -151.55514526]
[-19.65836716 -164.38287354]
[-20.36991119 -177.56764221]
[-18.62100220 -190.65057373]
[-14.47419739 -203.17671204]
[-8.07541752 -214.71070862]
[0.35118577 -224.85209656]
[10.51108742 -233.24911499]
[22.04967880 -239.61088562]
[34.56464005 -243.71759033]
[32.78217697 -258.61129761]
[30.99971008 -273.50500488]
[29.10641670 -288.38504028]
[27.10240364 -303.25057983]
[25.09839058 -318.11611938]
[23.09437752 -332.98162842]
[20.75889015 -347.79870605]
[18.09309387 -362.55993652]
[15.42729855 -377.32113647]
[12.76150322 -392.08236694]
[10.09570789 -406.84356689]
[7.42991209 -421.60479736]
[-2.63678169 -433.81021118]
[2.71546268 -447.70996094]
[0.04966731 -462.47116089]
[-2.61612821 -477.23239136]
[-17.66547203 -477.91430664]
[-32.18561935 -481.92840576]
[-45.44824219 -489.07336426]
[-56.78810120 -498.99081421]
[-65.63638306 -511.18322754]
[-71.54927063 -525.03912354]
[-74.23017120 -539.86346436]
[-73.54461670 -554.91259766]
[-69.52698517 -569.43182373]
[-62.37880707 -582.69268799]
[-52.45862961 -594.03015137]
[-40.26404572 -602.87548828]
[-26.40673065 -608.78497314]
[-11.58176041 -611.46228027]
[3.46725059 -610.77313232]
[17.98545074 -606.75195312]
[31.24461174 -599.60058594]
[42.57965851 -589.67767334]
[51.42203522 -577.48089600]
[57.32820511 -563.62219238]
[60.00192261 -548.79656982]
[59.30907440 -533.74768066]
[55.28440857 -519.23046875]
[48.12980652 -505.97305298]
[38.20413589 -494.64041138]
[26.00526619 -485.80099487]
[12.14508915 -479.89819336]
[14.81088448 -465.13696289]
[17.47668076 -450.37573242]
[27.35269928 -439.22613525]
[22.19112968 -424.27059937]
[24.85692406 -409.50936890]
[27.52272034 -394.74813843]
[30.18851662 -379.98693848]
[32.85431290 -365.22570801]
[35.52010727 -350.46450806]
[38.19266510 -348.16455078]
[39.88399887 -344.45584106]
[39.94412613 -339.81369019]
[37.95990372 -334.98565674]
[39.96391678 -320.12011719]
[41.96793365 -305.25460815]
[43.97194672 -290.38906860]
[47.98089600 -284.18020630]
[45.89342880 -275.28747559]
[47.67589188 -260.39376831]
[49.45835876 -245.50004578]
[66.21315765 -243.73526001]
[82.08050537 -238.04922485]
[96.15599060 -228.76208496]
[107.63637543 -216.39933777]
[115.86544800 -201.66212463]
[120.37155914 -185.38746643]
[120.89459991 -168.50068665]
[117.40106964 -151.96289062]
[110.08615112 -136.71615601]
[99.36283875 -123.62996674]
[85.83861542 -113.45153809]
[70.28101349 -106.76322174]
[80.15702820 -95.61362457]
[74.99546051 -80.65806580]
[77.66125488 -65.89685059]
[80.32704926 -51.13563156]
[94.39045715 -46.22785568]
[104.17415619 -34.86409378]
[106.97472382 -20.03091431]
[101.94161987 -5.69338846]
[90.33206940 4.26479816]
[92.99786377 19.02601624]
[102.87387848 30.17561340]
[97.71231079 45.13117218]
[100.37810516 59.89239120]
[103.04389954 74.65361023]
[105.70969391 89.41482544]
[108.59497070 104.13471985]
[111.69908142 118.81002045]
[114.91235352 133.46180725]
[118.23461151 148.08926392]
[121.55687714 162.71672058]
[132.03485107 170.23835754]
[134.50082397 182.48999023]
[128.16752625 192.79609680]
[131.27163696 207.47140503]
[136.98287964 193.60122681]
[148.42626953 183.90335083]
[163.04531860 180.54429626]
[177.57411194 184.27449036]
[188.76686096 194.26058960]
[194.12309265 208.27169800]
[192.44619751 223.17767334]
[184.11080933 235.64848328]
[170.97906494 242.89813232]
[155.98463440 243.30702209]
[142.47732544 236.78379822]
[133.47467041 224.78576660]
[134.14445496 239.77079773]
[134.81423950 254.75584412]
[135.59556580 269.73547363]
[136.48837280 284.70889282]
[137.38119507 299.68228149]
[147.27185059 288.40512085]
[162.07772827 285.99966431]
[175.02976990 293.56567383]
[180.20646667 307.64410400]
[175.24111938 321.79843140]
[162.40382385 329.55752563]
[147.56359863 327.37402344]
[137.50450134 316.24447632]
[136.83471680 331.22952271]
[136.16493225 346.21456909]
[135.49513245 361.19958496]
[134.82534790 376.18463135]
[134.82534790 391.18463135]
[135.49513245 406.16967773]
[136.16493225 421.15472412]
[136.83471680 436.13973999]
[137.50450134 451.12478638]
[138.17428589 466.10983276]
[146.52008057 479.55075073]
[139.35879517 492.61080933]
[151.18963623 503.08969116]
[152.06222534 518.86987305]
[141.45886230 530.58923340]
[125.67033386 531.29498291]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 206]
[4 204]
[5 203]
[6 202]
[7 201]
[8 200]
[9 199]
[16 198]
[17 197]
[18 196]
[19 195]
[20 194]
[21 186]
[22 185]
[23 184]
[25 183]
[26 182]
[27 181]
[28 169]
[29 168]
[31 165]
[32 164]
[33 163]
[35 162]
[36 161]
[39 160]
[40 159]
[41 158]
[42 157]
[44 155]
[45 154]
[50 149]
[51 148]
[52 147]
[54 145]
[70 133]
[71 132]
[72 131]
[73 129]
[74 128]
[75 127]
[76 126]
[77 122]
[78 121]
[79 120]
[80 119]
[81 118]
[82 117]
[84 115]
[85 114]
[86 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
