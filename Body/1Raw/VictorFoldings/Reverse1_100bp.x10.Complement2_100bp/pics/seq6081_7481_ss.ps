%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxAGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUA\
) } def
/len { sequence length } bind def

/coor [
[35.36507797 716.51190186]
[20.34979439 716.44519043]
[5.43297958 714.72711182]
[-9.20428944 711.37847900]
[-23.38432884 706.43988037]
[-36.93500519 699.97131348]
[-49.69182968 692.05126953]
[-61.49994278 682.77593994]
[-72.21600342 672.25793457]
[-81.70993805 660.62481689]
[-89.86648560 648.01794434]
[-96.58663940 634.59027100]
[-101.78882599 620.50482178]
[-105.40988922 605.93249512]
[-107.40587616 591.05035400]
[-107.75255585 576.03894043]
[-106.44572449 561.08044434]
[-103.50123596 546.35656738]
[-98.95484924 532.04595947]
[-92.86174011 518.32232666]
[-85.29587555 505.35235596]
[-76.34909821 493.29339600]
[-66.13002014 482.29187012]
[-54.76268387 472.48132324]
[-42.38508224 463.98083496]
[-29.14746857 456.89361572]
[-15.21053410 451.30566406]
[-0.74345994 447.28485107]
[14.07813644 444.87997437]
[29.07433510 444.12020874]
[29.96714973 429.14682007]
[30.85996628 414.17340088]
[31.75278282 399.19998169]
[19.84402275 408.32037354]
[4.95667410 406.48547363]
[-4.38111496 394.74642944]
[-2.82023454 379.82785034]
[8.74517250 370.27581787]
[23.68991470 371.56216431]
[33.45266724 382.94909668]
[35.67778397 368.11505127]
[37.90290070 353.28100586]
[32.13918304 339.54678345]
[41.83801270 327.04705811]
[44.06312943 312.21301270]
[46.28824615 297.37896729]
[48.51336288 282.54492188]
[50.73847961 267.71087646]
[38.72821426 276.69717407]
[23.74505234 275.98660278]
[12.63909817 265.90405273]
[10.48784542 251.05912781]
[18.27481651 238.23870850]
[32.43991089 233.30413818]
[46.50704193 238.51141357]
[54.04523849 251.48168945]
[57.80154037 236.95962524]
[61.55784225 222.43757629]
[65.31414032 207.91551208]
[69.07044220 193.39344788]
[72.82674408 178.87138367]
[63.68026733 164.75825500]
[67.64920044 148.06805420]
[82.75270844 139.24176025]
[86.29238129 124.66539001]
[89.83205414 110.08901978]
[86.08058929 96.61986542]
[95.59156799 86.37131500]
[99.13124084 71.79493713]
[94.86899567 56.55867004]
[105.39114380 46.01667023]
[108.93081665 31.44029427]
[112.47048950 16.86392021]
[115.02632141 2.08326578]
[116.58684540 -12.83533859]
[118.14736176 -27.75394440]
[119.70788574 -42.67255020]
[113.44827271 -57.20278549]
[122.46766663 -69.05604553]
[124.02819061 -83.97464752]
[125.58871460 -98.89325714]
[112.80017090 -103.25889587]
[101.21395874 -110.20057678]
[91.34169006 -119.40856934]
[83.61859894 -130.47312927]
[78.38439178 -142.90275574]
[75.86828613 -156.14601135]
[76.17897797 -169.61596680]
[79.29994965 -182.71627808]
[85.09030914 -194.86750793]
[93.29118347 -205.53280640]
[103.53725433 -214.24160767]
[115.37304688 -220.61042786]
[128.27317810 -224.35966492]
[141.66567993 -225.32598877]
[143.89080811 -240.16003418]
[146.11592102 -254.99407959]
[148.34103394 -269.82812500]
[150.56614685 -284.66217041]
[152.79127502 -299.49621582]
[139.08348083 -305.84231567]
[127.71977234 -315.79434204]
[119.62134552 -328.54550171]
[115.44470978 -343.06213379]
[115.52844238 -358.16741943]
[119.86575317 -372.63684082]
[128.10504150 -385.29745483]
[139.57836914 -395.12289429]
[153.35566711 -401.31665039]
[168.32006836 -403.37664795]
[183.25845337 -401.13589478]
[196.95986938 -394.77600098]
[208.31356812 -384.81256104]
[216.39918518 -372.05328369]
[220.56123352 -357.53247070]
[220.46232605 -342.42727661]
[216.11048889 -327.96218872]
[207.85848999 -315.30987549]
[196.37528992 -305.49597168]
[182.59176636 -299.31604004]
[167.62532043 -297.27108765]
[165.40019226 -282.43704224]
[163.17507935 -267.60299683]
[160.94996643 -252.76895142]
[158.72485352 -237.93490601]
[156.49972534 -223.10086060]
[171.78550720 -216.73828125]
[184.92814636 -206.65109253]
[195.03968811 -193.51408386]
[201.43521118 -178.20835876]
[203.67927551 -161.76220703]
[201.61552429 -145.28201294]
[195.37759399 -129.87783813]
[185.38047791 -116.58864594]
[172.29289246 -106.31224823]
[156.99253845 -99.74460602]
[140.50732422 -97.33273315]
[138.94679260 -82.41412354]
[137.38627625 -67.49552155]
[143.75750732 -54.03236389]
[134.62649536 -41.11202621]
[133.06596375 -26.19342041]
[131.50544739 -11.27481556]
[129.94493103 3.64378881]
[140.43377686 -7.07926989]
[155.03073120 -10.53306961]
[169.21278381 -5.64741182]
[178.58544922 6.06382847]
[180.24450684 20.97179604]
[173.67588806 34.45709610]
[160.91496277 42.34115982]
[145.91581726 42.18102646]
[133.32611084 34.02631378]
[127.04685974 20.40359116]
[123.50718689 34.97996902]
[119.96751404 49.55634308]
[124.48294830 63.75000763]
[113.70761871 75.33460999]
[110.16794586 89.91098022]
[113.91941071 103.38013458]
[104.40843201 113.62868500]
[100.86875916 128.20506287]
[97.32908630 142.78143311]
[105.61419678 153.40083313]
[106.26097870 166.65950012]
[99.25710297 177.70611572]
[87.34880066 182.62768555]
[83.59249878 197.14974976]
[79.83620453 211.67181396]
[76.07990265 226.19386292]
[72.32360077 240.71592712]
[68.56729889 255.23799133]
[65.57252502 269.93600464]
[63.34740829 284.77005005]
[61.12229156 299.60406494]
[58.89717484 314.43811035]
[56.67205811 329.27215576]
[62.27661896 344.06741333]
[52.73694611 355.50610352]
[50.51182938 370.34014893]
[48.28670883 385.17419434]
[46.72618866 400.09280396]
[45.83337021 415.06622314]
[44.94055557 430.03961182]
[44.04774094 445.01303101]
[58.84740067 447.54940796]
[73.27819824 451.69851685]
[87.16497040 457.41000366]
[100.33913422 464.61447144]
[112.64076996 473.22451782]
[123.92054749 483.13562012]
[134.04154968 494.22744751]
[142.88088989 506.36538696]
[150.33129883 519.40203857]
[156.30230713 533.17919922]
[160.72146606 547.52960205]
[163.53509521 562.27905273]
[164.70906067 577.24853516]
[164.22909546 592.25628662]
[162.10105896 607.12017822]
[158.35073853 621.65972900]
[153.02369690 635.69842529]
[146.18458557 649.06591797]
[137.91641235 661.59991455]
[128.31956482 673.14825439]
[117.51054382 683.57067871]
[105.62053680 692.74084473]
[92.79389191 700.54724121]
[79.18631744 706.89526367]
[64.96298218 711.70776367]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 185]
[31 184]
[32 183]
[33 182]
[40 181]
[41 180]
[42 179]
[44 177]
[45 176]
[46 175]
[47 174]
[48 173]
[56 172]
[57 171]
[58 170]
[59 169]
[60 168]
[61 167]
[64 163]
[65 162]
[66 161]
[68 159]
[69 158]
[71 156]
[72 155]
[73 154]
[74 144]
[75 143]
[76 142]
[77 141]
[79 139]
[80 138]
[81 137]
[95 126]
[96 125]
[97 124]
[98 123]
[99 122]
[100 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
