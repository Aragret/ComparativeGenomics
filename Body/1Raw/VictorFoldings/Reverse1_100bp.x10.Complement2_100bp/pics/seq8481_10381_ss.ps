%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[140.18807983 477.36077881]
[133.66897583 490.94198608]
[124.29080963 502.73168945]
[112.52398682 512.13861084]
[98.95872498 518.69079590]
[84.27545166 522.05969238]
[69.21067810 522.07623291]
[54.52003860 518.73962402]
[40.94041824 512.21722412]
[29.15296173 502.83618164]
[19.74892426 491.06707764]
[13.20000648 477.50021362]
[9.83469963 462.81613159]
[9.82180691 447.75134277]
[13.16197491 433.06152344]
[19.68766212 419.48348999]
[29.07154083 407.69830322]
[40.84292221 398.29711914]
[54.41136169 391.75149536]
[69.09626007 388.38973999]
[84.16104889 388.38049316]
[87.48330688 373.75305176]
[90.80556488 359.12557983]
[94.12782288 344.49810791]
[97.45008087 329.87066650]
[100.77234650 315.24319458]
[94.68606567 298.78341675]
[107.30850220 285.37612915]
[110.41261292 270.70083618]
[111.08239746 255.71578979]
[109.29992676 240.82206726]
[107.51746368 225.92834473]
[105.73500061 211.03463745]
[103.95252991 196.14091492]
[102.17006683 181.24719238]
[92.97519684 169.52954102]
[99.01778412 154.90771484]
[97.23531342 140.01399231]
[95.45285034 125.12027740]
[93.67038727 110.22656250]
[91.66637421 95.36103058]
[89.44125366 80.52698517]
[86.61717224 77.22872925]
[85.13827515 73.57122040]
[84.95232391 70.02145386]
[85.86077881 66.98149872]
[87.55264282 64.74639130]
[86.21440887 49.80620193]
[84.87617493 34.86602020]
[83.53794098 19.92583275]
[82.19970703 4.98564863]
[80.86147308 -9.95453644]
[77.64820099 -24.60632324]
[72.61128235 -38.73535156]
[60.68922806 -49.13608170]
[63.70351791 -63.72248840]
[58.66660309 -77.85151672]
[46.74454498 -88.25224304]
[49.75883484 -102.83865356]
[44.72191620 -116.96768188]
[39.68500137 -131.09671021]
[34.64808655 -145.22573853]
[29.61116982 -159.35476685]
[15.03873634 -155.74606323]
[0.17940256 -153.60624695]
[-14.81914997 -152.95658875]
[-29.80785370 -153.80357361]
[-44.63774109 -156.13874817]
[-59.16142273 -159.93891907]
[-73.23455048 -165.16630554]
[-86.71725464 -171.76898193]
[-99.47554016 -179.68130493]
[-111.38259888 -188.82463074]
[-122.32009125 -199.10810852]
[-132.17932129 -210.42951965]
[-140.86228943 -222.67634583]
[-148.28269958 -235.72685242]
[-154.36680603 -249.45137024]
[-159.05415344 -263.71347046]
[-162.29812622 -278.37139893]
[-164.06649780 -293.27951050]
[-164.34170532 -308.28961182]
[-163.12100220 -323.25250244]
[-160.41651917 -338.01950073]
[-156.25514221 -352.44384766]
[-150.67820740 -366.38217163]
[-143.74118042 -379.69592285]
[-135.51298523 -392.25280762]
[-126.07538605 -403.92800903]
[-115.52220154 -414.60549927]
[-103.95831299 -424.17916870]
[-91.49864197 -432.55386353]
[-78.26703644 -439.64633179]
[-64.39498138 -445.38607788]
[-50.02036667 -449.71609497]
[-35.28604507 -452.59332275]
[-20.33846474 -453.98916626]
[-5.32617807 -453.88973999]
[9.60160828 -452.29605103]
[24.29653168 -449.22396851]
[38.61254120 -444.70394897]
[52.40736008 -438.78097534]
[65.54387665 -431.51388550]
[77.89154053 -422.97494507]
[89.32762909 -413.24896240]
[99.73847961 -402.43264771]
[109.02062225 -390.63348389]
[117.08180237 -377.96871948]
[123.84190369 -364.56427002]
[129.23374939 -350.55331421]
[133.20373535 -336.07513428]
[135.71240234 -321.27359009]
[136.73484802 -306.29583740]
[136.26087952 -291.29071045]
[134.29521179 -276.40734863]
[130.85739136 -261.79364014]
[125.98158264 -247.59486389]
[119.71624756 -233.95213318]
[112.12364960 -221.00103760]
[103.27925110 -208.87028503]
[93.27095032 -197.68043518]
[82.19822693 -187.54272461]
[70.17111969 -178.55787659]
[57.30916595 -170.81521606]
[43.74020004 -164.39169312]
[48.77711487 -150.26266479]
[53.81402969 -136.13363647]
[58.85094833 -122.00460052]
[63.88786316 -107.87557220]
[75.44964600 -98.48545074]
[72.79563141 -82.88843536]
[77.83255005 -68.75940704]
[89.39433289 -59.36928177]
[86.74031830 -43.77227020]
[91.77722931 -29.64323997]
[94.05027008 -44.47001648]
[100.95600128 -57.78583145]
[111.76564026 -68.18543243]
[125.33841705 -74.57133484]
[140.24197388 -76.26960754]
[154.90348816 -73.10102844]
[167.77571106 -65.39999390]
[177.50019836 -53.97920609]
[183.05068970 -40.04393005]
[183.84146118 -25.06478882]
[179.78903198 -10.62256432]
[171.32107544 1.75861776]
[159.33122253 10.77214336]
[145.08480835 15.46679401]
[130.08529663 15.34713173]
[115.91559601 10.42578411]
[104.07108307 1.22211313]
[95.80165863 -11.29277039]
[97.13989258 3.64741421]
[98.47812653 18.58759880]
[99.81636047 33.52778625]
[101.15459442 48.46796799]
[102.49282837 63.40815353]
[104.27529907 78.30187225]
[106.50041199 93.13591766]
[109.90326691 97.12772369]
[110.82735443 102.74193573]
[108.56410217 108.44409180]
[110.34656525 123.33781433]
[112.12903595 138.23153687]
[113.91149902 153.12524414]
[123.23386383 165.90820312]
[117.06378174 179.46473694]
[118.84625244 194.35844421]
[120.62871552 209.25216675]
[122.41117859 224.14588928]
[124.19364929 239.03959656]
[125.97611237 253.93331909]
[131.05467224 239.81919861]
[139.56947327 227.47019958]
[150.95578003 217.70535278]
[164.45837402 211.17236328]
[179.18167114 208.30451965]
[194.14913940 209.29202271]
[208.36801147 214.06941223]
[220.89523315 222.31979370]
[230.89990234 233.49595642]
[237.71846008 246.85661316]
[240.89863586 261.51562500]
[240.22950745 276.50070190]
[235.75546265 290.81790161]
[227.77323914 303.51770020]
[216.81228638 313.75765991]
[203.59957886 320.85870361]
[189.01148987 324.34976196]
[174.01557922 323.99932861]
[159.60649109 319.83062744]
[146.73989868 312.12017822]
[136.26922607 301.37936401]
[128.88894653 288.32061768]
[125.08791351 273.80493164]
[121.98380280 288.48022461]
[128.35238647 299.69647217]
[125.46485138 311.85565186]
[115.39980316 318.56546021]
[112.07754517 333.19293213]
[108.75528717 347.82037354]
[105.43302155 362.44784546]
[102.11076355 377.07528687]
[98.78850555 391.70275879]
[112.37128448 398.21856689]
[124.16328430 407.59387207]
[133.57302856 419.35842896]
[140.12852478 432.92211914]
[143.50094604 447.60455322]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 205]
[22 204]
[23 203]
[24 202]
[25 201]
[26 200]
[28 197]
[29 196]
[30 173]
[31 172]
[32 171]
[33 170]
[34 169]
[35 168]
[37 166]
[38 165]
[39 164]
[40 163]
[41 160]
[42 159]
[47 158]
[48 157]
[49 156]
[50 155]
[51 154]
[52 153]
[53 135]
[54 134]
[56 132]
[57 131]
[59 129]
[60 128]
[61 127]
[62 126]
[63 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
