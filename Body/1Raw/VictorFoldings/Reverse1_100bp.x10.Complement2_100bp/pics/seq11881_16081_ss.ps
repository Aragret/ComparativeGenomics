%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[89.89738464 432.32492065]
[78.76441193 422.14062500]
[70.64749908 409.42144775]
[66.10005188 395.03451538]
[65.43213654 379.96081543]
[68.68928528 365.22808838]
[75.64942932 351.84082031]
[85.83799744 340.71179199]
[98.56033325 332.59979248]
[112.94899750 328.05789185]
[112.27921295 313.07287598]
[111.60942841 298.08782959]
[110.93964386 283.10278320]
[109.71266937 268.15304565]
[107.93019867 253.25933838]
[106.14773560 238.36561584]
[102.23167419 232.09774780]
[104.45130920 223.23710632]
[102.89078522 208.31849670]
[101.33026123 193.39988708]
[99.76973724 178.48129272]
[90.57334137 170.62298584]
[89.15115356 158.20683289]
[96.80744934 147.82684326]
[87.96553040 135.84062195]
[94.44078827 121.40518951]
[93.10255432 106.46500397]
[89.94332886 102.27773285]
[89.35504150 96.61846924]
[91.95368195 91.06113434]
[91.06086731 76.08772278]
[90.16805267 61.11431885]
[89.27523804 46.14091492]
[86.75666809 42.60385513]
[85.60997772 38.82898712]
[85.74146271 35.27678680]
[86.91750336 32.33000565]
[88.80203247 30.25474930]
[88.80203247 15.25474834]
[88.80203247 0.25474846]
[88.80203247 -14.74525166]
[88.80203247 -29.74525070]
[88.24382782 -44.73485947]
[87.12817383 -59.69331360]
[72.63534546 -61.54116058]
[58.78885651 -66.18724823]
[46.12329102 -73.45014191]
[35.12723923 -83.04742432]
[26.22444725 -94.60666656]
[19.75749397 -107.67990112]
[15.97459602 -121.76093292]
[15.02009678 -136.30499268]
[16.92894554 -150.74978638]
[21.62543488 -164.53724670]
[28.92618942 -177.13507080]
[38.54733276 -188.05729675]
[50.11551666 -196.88304138]
[63.18243027 -203.27270508]
[77.24214172 -206.98107910]
[76.34932709 -221.95448303]
[75.45651245 -236.92788696]
[66.27101898 -225.06925964]
[51.90216446 -220.76393127]
[37.70916367 -225.61766052]
[28.98565674 -237.82014465]
[28.98530006 -252.82014465]
[37.70822525 -265.02304077]
[51.90099335 -269.87744141]
[66.27005768 -265.57278442]
[75.45651245 -253.71351624]
[76.34932709 -268.68692017]
[77.24214172 -283.66033936]
[78.13495636 -298.63372803]
[71.23277283 -312.86996460]
[79.71389771 -325.11413574]
[80.60671234 -340.08755493]
[81.49952698 -355.06094360]
[82.39234924 -370.03436279]
[83.28516388 -385.00778198]
[84.17797852 -399.98117065]
[85.07079315 -414.95458984]
[70.28517151 -417.58172607]
[55.90452957 -421.90765381]
[42.12334442 -427.87384033]
[29.12799835 -435.39962769]
[17.09423447 -444.38323975]
[6.18479443 -454.70315552]
[-3.45278096 -466.21981812]
[-11.68815613 -478.77749634]
[-18.40995789 -492.20632935]
[-23.52727890 -506.32473755]
[-26.97091484 -520.94177246]
[-28.69429398 -535.85980225]
[-28.67411041 -550.87695312]
[-26.91063690 -565.79028320]
[-23.42772293 -580.39801025]
[-18.27246857 -594.50262451]
[-11.51459599 -607.91333008]
[-3.24549532 -620.44885254]
[6.42300272 -631.93957520]
[17.36014175 -642.23010254]
[29.41801071 -651.18133545]
[42.43354034 -658.67218018]
[56.23071289 -664.60131836]
[70.62293243 -668.88854980]
[85.41555786 -671.47595215]
[100.40854645 -672.32849121]
[115.39913177 -671.43463135]
[130.18458557 -668.80651855]
[144.56494141 -664.47961426]
[158.34571838 -658.51251221]
[171.34056091 -650.98583984]
[183.37373352 -642.00146484]
[194.28248596 -631.68078613]
[203.91928101 -620.16351318]
[212.15382385 -607.60528564]
[218.87472534 -594.17596436]
[223.99110413 -580.05725098]
[227.43376160 -565.43994141]
[229.15615845 -550.52185059]
[229.13496399 -535.50463867]
[227.37049866 -520.59149170]
[223.88661194 -505.98397827]
[218.73040771 -491.87969971]
[211.97164917 -478.46942139]
[203.70170593 -465.93447876]
[194.03244019 -454.44442749]
[183.09461975 -444.15460205]
[171.03614807 -435.20416260]
[158.02012634 -427.71420288]
[144.22254944 -421.78601074]
[129.83004761 -417.49972534]
[115.03724670 -414.91329956]
[100.04419708 -414.06176758]
[99.15138245 -399.08834839]
[98.25856781 -384.11495972]
[97.36575317 -369.14154053]
[96.47293854 -354.16815186]
[95.58012390 -339.19473267]
[94.68730164 -324.22134399]
[101.65334320 -311.05609131]
[93.10836029 -297.74090576]
[92.21554565 -282.76751709]
[91.32273102 -267.79409790]
[90.42991638 -252.82069397]
[90.42991638 -237.82069397]
[91.32273102 -222.84729004]
[92.21554565 -207.87388611]
[107.47351837 -205.65013123]
[121.94412231 -200.30909729]
[134.99758911 -192.08071899]
[146.06533813 -181.32064819]
[154.66465759 -168.49490356]
[160.41984558 -154.15962219]
[163.07861328 -138.93699646]
[162.52305603 -123.48826599]
[158.77499390 -108.48497772]
[151.99507141 -94.57980347]
[142.47586060 -82.37814331]
[130.62924194 -72.41176605]
[116.96861267 -65.11563873]
[102.08663177 -60.80896378]
[103.20227814 -45.85050964]
[114.81935120 -55.33963776]
[129.51286316 -52.32287979]
[136.45129395 -39.02407455]
[130.51989746 -25.24661064]
[116.09107208 -21.14671898]
[103.80203247 -29.74525070]
[103.80203247 -14.74525166]
[103.80203247 0.25474846]
[103.80203247 15.25474834]
[103.80203247 30.25474930]
[104.24864197 45.24810028]
[105.14145660 60.22150421]
[106.03427124 75.19490814]
[106.92708588 90.16831207]
[108.04273987 105.12677002]
[109.38097382 120.06695557]
[118.31861115 133.12181091]
[111.74763489 146.48861694]
[122.68743134 161.30085754]
[114.68834686 176.92076111]
[116.24886322 191.83937073]
[117.80938721 206.75798035]
[119.36991119 221.67657471]
[121.04145050 236.58316040]
[122.82392120 251.47686768]
[124.60638428 266.37057495]
[135.78816223 256.37219238]
[150.60171509 258.72985840]
[158.12705994 271.70556641]
[152.81677246 285.73413086]
[138.58540344 290.47421265]
[125.92468262 282.43301392]
[126.59446716 297.41802979]
[127.26425171 312.40307617]
[127.93403625 327.38812256]
[142.67053223 330.62820435]
[156.06585693 337.57281494]
[167.20668030 347.74850464]
[175.33341980 360.46142578]
[179.89196777 374.84481812]
[180.57151794 389.91799927]
[177.32574463 404.65325928]
[170.37596130 418.04586792]
[160.19598389 429.18276978]
[147.47991943 437.30459595]
[133.09475708 441.85760498]
[118.02132416 442.53134155]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 198]
[11 197]
[12 196]
[13 195]
[14 189]
[15 188]
[16 187]
[18 186]
[19 185]
[20 184]
[21 183]
[24 181]
[26 179]
[27 178]
[30 177]
[31 176]
[32 175]
[33 174]
[38 173]
[39 172]
[40 171]
[41 170]
[42 169]
[43 163]
[44 162]
[59 148]
[60 147]
[61 146]
[70 145]
[71 144]
[72 143]
[73 142]
[75 140]
[76 139]
[77 138]
[78 137]
[79 136]
[80 135]
[81 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
