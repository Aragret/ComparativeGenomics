%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[158.87596130 579.07714844]
[146.97621155 569.93914795]
[135.57968140 560.18072510]
[124.71865845 549.82965088]
[114.42394257 538.91516113]
[104.72470856 527.46820068]
[95.64846039 515.52130127]
[87.22090912 503.10827637]
[79.46595764 490.26428223]
[72.40558624 477.02575684]
[66.05979919 463.43023682]
[60.44659424 449.51626587]
[55.58187866 435.32324219]
[51.47944260 420.89141846]
[48.15091324 406.26171875]
[45.60572815 391.47561646]
[43.85110474 376.57498169]
[42.89200974 361.60211182]
[42.73116684 346.59939575]
[43.36903000 331.60937500]
[44.80379105 316.67456055]
[47.03138351 301.83728027]
[50.04549408 287.13958740]
[53.83757401 272.62313843]
[58.39688110 258.32907104]
[63.71049118 244.29794312]
[69.76333618 230.56950378]
[76.53826141 217.18266296]
[84.01605988 204.17536926]
[92.17554474 191.58448792]
[100.99357605 179.44572449]
[110.44515991 167.79348755]
[120.50350952 156.66079712]
[131.14010620 146.07920837]
[121.14193726 134.89724731]
[111.14376831 123.71526337]
[101.14559174 112.53329468]
[90.90019989 101.57738495]
[80.41270447 90.85300446]
[69.92520142 80.12862396]
[59.43769836 69.40424347]
[48.95019913 58.67986298]
[38.46269608 47.95548248]
[23.28222656 43.49859619]
[19.91559029 28.98945808]
[8.28666782 38.48020935]
[-4.14619303 46.89033508]
[-17.28288651 54.15212250]
[-31.01764297 60.20709610]
[-45.23987579 65.00650787]
[-59.83507156 68.51171875]
[-74.68571472 70.69449615]
[-89.67224121 71.53727722]
[-104.67398834 71.03326416]
[-119.57015228 69.18653107]
[-134.24081421 66.01193237]
[-148.56782532 61.53503036]
[-162.43586731 55.79187775]
[-175.73326111 48.82871246]
[-188.35293579 40.70159912]
[-200.19329834 31.47597313]
[-211.15899658 21.22611618]
[-221.16175842 10.03455448]
[-230.12103271 -2.00860143]
[-237.96469116 -14.80638504]
[-244.62957764 -28.25575447]
[-250.06202698 -42.24842072]
[-254.21830750 -56.67172241]
[-257.06494141 -71.40953064]
[-258.57901001 -86.34317780]
[-258.74835205 -101.35242462]
[-257.57156372 -116.31642914]
[-255.05813599 -131.11470032]
[-251.22830200 -145.62809753]
[-246.11291504 -159.73976135]
[-239.75314331 -173.33607483]
[-232.20019531 -186.30754089]
[-223.51489258 -198.54975891]
[-213.76716614 -209.96414185]
[-203.03549194 -220.45877075]
[-191.40628052 -229.94917297]
[-178.97315979 -238.35891724]
[-165.83624268 -245.62030029]
[-152.10130310 -251.67485046]
[-137.87892151 -256.47384644]
[-123.28362274 -259.97860718]
[-108.43290710 -262.16091919]
[-93.44635773 -263.00323486]
[-78.44463348 -262.49877930]
[-63.54851913 -260.65158081]
[-48.87796021 -257.47653198]
[-34.55107498 -252.99920654]
[-20.68321228 -247.25563049]
[-7.38603497 -240.29205322]
[5.23339415 -232.16455078]
[17.07347107 -222.93856812]
[28.03886223 -212.68836975]
[38.04127884 -201.49650574]
[47.00019073 -189.45307922]
[54.84345627 -176.65505981]
[61.50793076 -163.20549011]
[66.93995667 -149.21264648]
[71.09578705 -134.78921509]
[73.94197845 -120.05133057]
[75.45559692 -105.11763763]
[75.62446594 -90.10838318]
[74.44721985 -75.14441681]
[71.93334198 -60.34621429]
[68.10307312 -45.83293533]
[62.98725128 -31.72142982]
[56.62706375 -18.12531853]
[49.07372665 -5.15406847]
[40.38805008 7.08787870]
[30.63997078 18.50195694]
[45.07030487 22.19176674]
[49.18707657 37.46798325]
[59.67457962 48.19236374]
[70.16207886 58.91674423]
[80.64958191 69.64112091]
[91.13708496 80.36550140]
[101.62458038 91.08988190]
[105.43579102 91.67901611]
[108.96881104 93.94521332]
[111.48046875 97.72655487]
[112.32756805 102.53511810]
[122.32574463 113.71709442]
[132.32391357 124.89907074]
[142.32208252 136.08103943]
[154.02307129 126.68986511]
[166.20727539 117.93474579]
[178.84019470 109.84050751]
[191.88600159 102.43009186]
[205.30770874 95.72451019]
[219.06727600 89.74275970]
[233.12571716 84.50180817]
[247.44316101 80.01651001]
[261.97903442 76.29956818]
[276.69213867 73.36153412]
[291.54074097 71.21072388]
[306.48278809 69.85324097]
[321.47589111 69.29293060]
[336.47756958 69.53138733]
[351.44528198 70.56792450]
[366.33663940 72.39960480]
[381.10937500 75.02124786]
[395.72167969 78.42540741]
[410.13208008 82.60244751]
[424.29971313 87.54051971]
[438.18447876 93.22563171]
[451.74700928 99.64165497]
[464.94882202 106.77042389]
[477.75250244 114.59171295]
[490.12179565 123.08336639]
[502.02160645 132.22129822]
[513.41821289 141.97961426]
[524.27929688 152.33065796]
[534.57409668 163.24507141]
[544.27337646 174.69194031]
[553.34973145 186.63879395]
[561.77734375 199.05178833]
[569.53234863 211.89572144]
[576.59283447 225.13420105]
[582.93872070 238.72967529]
[588.55200195 252.64363098]
[593.41680908 266.83660889]
[597.51934814 281.26840210]
[600.84796143 295.89807129]
[603.39318848 310.68417358]
[605.14794922 325.58477783]
[606.10711670 340.55767822]
[606.26806641 355.56039429]
[605.63031006 370.55038452]
[604.19561768 385.48522949]
[601.96813965 400.32250977]
[598.95410156 415.02023315]
[595.16210938 429.53671265]
[590.60290527 443.83078003]
[585.28936768 457.86196899]
[579.23663330 471.59045410]
[572.46179199 484.97732544]
[564.98406982 497.98468018]
[556.82464600 510.57559204]
[548.00671387 522.71441650]
[538.55517578 534.36669922]
[528.49694824 545.49945068]
[517.86041260 556.08111572]
[506.67575073 566.08166504]
[494.97470093 575.47277832]
[482.79043579 584.22784424]
[470.15747070 592.32196045]
[457.11163330 599.73229980]
[443.68988037 606.43780518]
[429.93026733 612.41949463]
[415.87179565 617.66033936]
[401.55432129 622.14556885]
[387.01843262 625.86236572]
[372.30529785 628.80035400]
[357.45669556 630.95104980]
[342.51464844 632.30841064]
[327.52154541 632.86865234]
[312.51986694 632.63012695]
[297.55212402 631.59344482]
[282.66079712 629.76171875]
[267.88806152 627.13995361]
[253.27580261 623.73571777]
[238.86543274 619.55859375]
[224.69779968 614.62042236]
[210.81307983 608.93524170]
[197.25059509 602.51910400]
[184.04882812 595.39025879]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 128]
[35 127]
[36 126]
[37 125]
[38 121]
[39 120]
[40 119]
[41 118]
[42 117]
[43 116]
[45 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
