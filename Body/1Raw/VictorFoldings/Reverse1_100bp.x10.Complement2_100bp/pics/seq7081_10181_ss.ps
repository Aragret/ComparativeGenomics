%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[301.75494385 509.97537231]
[313.56466675 500.67340088]
[306.29144287 487.55471802]
[299.01821899 474.43600464]
[291.74499512 461.31732178]
[284.47174072 448.19863892]
[277.19851685 435.07992554]
[269.92529297 421.96124268]
[262.65206909 408.84255981]
[247.82685852 410.61520386]
[233.41337585 406.56585693]
[221.61645508 397.28158569]
[214.25302124 384.15270996]
[212.47229004 369.16461182]
[216.57655334 354.59759521]
[225.97035217 342.67987061]
[218.69711304 329.56118774]
[211.42388916 316.44247437]
[196.64248657 314.81509399]
[185.52217102 304.67596436]
[182.46876526 289.75851440]
[188.85855103 275.74148560]
[181.58532715 262.62280273]
[168.64721680 255.24345398]
[168.72264099 239.42243958]
[161.44941711 226.30374146]
[154.17619324 213.18504333]
[146.90295410 200.06634521]
[133.96484375 192.68701172]
[134.04028320 176.86599731]
[121.10216522 169.48664856]
[121.17759705 153.66563416]
[113.90436554 140.54693604]
[106.63114166 127.42823792]
[99.35791016 114.30954742]
[87.47257233 106.94541931]
[87.52339935 92.96368408]
[80.25016785 79.84498596]
[72.97693634 66.72629547]
[65.70370483 53.60760117]
[52.24536896 45.28992844]
[52.84103012 30.40723991]
[45.56779861 17.28854561]
[38.29457092 4.16985130]
[23.00367165 3.80151868]
[10.03578949 -4.11876249]
[2.82141447 -17.37844467]
[3.21010160 -32.36860275]
[10.99736023 -45.06601334]
[3.72413063 -58.18470764]
[-3.54909897 -71.30339813]
[-10.82232857 -84.42209625]
[-16.28366852 -88.14839172]
[-18.68313408 -93.30004883]
[-18.11016846 -98.04144287]
[-24.98958206 -111.37087250]
[-29.38304520 -114.18948364]
[-31.99483871 -118.02768707]
[-32.73494339 -122.03608704]
[-31.86349678 -125.45265198]
[-38.14085770 -139.07597351]
[-44.51946259 -152.65217590]
[-57.45886230 -161.75616455]
[-55.97842789 -176.57701111]
[-62.45792007 -190.10534668]
[-68.93741608 -203.63369751]
[-75.41691589 -217.16204834]
[-81.89640808 -230.69038391]
[-88.37590790 -244.21873474]
[-102.71295929 -239.72100830]
[-117.54418945 -237.30950928]
[-132.56765747 -237.03334045]
[-147.47749329 -238.89814758]
[-161.97016907 -242.86593628]
[-175.75061035 -248.85592651]
[-188.53828430 -256.74618530]
[-200.07283020 -266.37609863]
[-210.11943054 -277.54956055]
[-218.47357178 -290.03912354]
[-224.96513367 -303.59051514]
[-229.46197510 -317.92785645]
[-231.87255859 -332.75924683]
[-232.14778137 -347.78271484]
[-230.28205872 -362.69244385]
[-226.31338501 -377.18487549]
[-220.32252502 -390.96493530]
[-212.43147278 -403.75213623]
[-202.80085754 -415.28607178]
[-191.62677002 -425.33200073]
[-179.13668823 -433.68536377]
[-165.58488464 -440.17608643]
[-151.24726868 -444.67202759]
[-136.41574097 -447.08169556]
[-121.39224243 -447.35598755]
[-106.48263550 -445.48934937]
[-91.99046326 -441.51977539]
[-78.21075439 -435.52807617]
[-65.42406464 -427.63623047]
[-53.89070511 -418.00488281]
[-43.84548187 -406.83016968]
[-35.49290085 -394.33956909]
[-29.00300980 -380.78738403]
[-24.50793839 -366.44949341]
[-22.09919739 -351.61779785]
[-21.82582664 -336.59429932]
[-23.69339180 -321.68481445]
[-27.66386986 -307.19287109]
[-33.65642929 -293.41354370]
[-41.54906845 -280.62734985]
[-51.18110657 -269.09457397]
[-62.35644150 -259.05004883]
[-74.84755707 -250.69822693]
[-68.36806488 -237.16989136]
[-61.88856888 -223.64154053]
[-55.40907288 -210.11318970]
[-48.92957687 -196.58485413]
[-42.45008087 -183.05650330]
[-29.97413445 -174.92016602]
[-30.99111557 -159.13166809]
[-25.26668358 -154.45698547]
[-24.51753998 -145.35333252]
[-18.24017906 -131.73001099]
[-11.66015244 -118.25028229]
[-4.78073978 -104.92085266]
[2.29636574 -91.69532776]
[9.56959534 -78.57662964]
[16.84282494 -65.45793915]
[24.11605453 -52.33924103]
[39.01070786 -52.21707535]
[51.93031311 -44.60526276]
[59.35430145 -31.46179199]
[59.20166397 -16.26727104]
[51.41326523 -3.10337806]
[58.68649292 10.01531601]
[65.95972443 23.13401031]
[78.89783478 30.51334572]
[78.82240295 46.33436966]
[86.09563446 59.45306396]
[93.36885834 72.57176208]
[100.64208984 85.69045258]
[112.52742767 93.05458069]
[112.47660065 107.03631592]
[119.74983215 120.15501404]
[127.02306366 133.27371216]
[134.29629517 146.39239502]
[147.75463867 154.71006775]
[147.15896606 169.59275818]
[160.61730957 177.91043091]
[160.02165222 192.79312134]
[167.29487610 205.91181946]
[174.56811523 219.03051758]
[181.84133911 232.14920044]
[195.29968262 240.46687317]
[194.70402527 255.34956360]
[201.97724915 268.46826172]
[217.25076294 270.47476196]
[228.28514099 280.96743774]
[230.99320984 295.77047729]
[224.54258728 309.16925049]
[231.81581116 322.28796387]
[239.08903503 335.40664673]
[254.17352295 333.75320435]
[268.70269775 337.98953247]
[280.47122192 347.44018555]
[287.70529175 360.64080811]
[289.32986450 375.56478882]
[285.12829590 389.93463135]
[275.77075195 401.56930542]
[283.04397583 414.68801880]
[290.31723022 427.80670166]
[297.59045410 440.92538452]
[304.86367798 454.04409790]
[312.13690186 467.16278076]
[319.41012573 480.28149414]
[326.68338013 493.40017700]
[340.82925415 488.31192017]
[355.60815430 485.55880737]
[370.63732910 485.21221924]
[385.52746582 487.28112793]
[399.89285278 491.71188354]
[413.36141968 498.38977051]
[425.58425903 507.14178467]
[436.24481201 517.74127197]
[445.06692505 529.91363525]
[451.82208252 543.34362793]
[456.33532715 557.68328857]
[458.48974609 572.56127930]
[458.22949219 587.59222412]
[455.56137085 602.38671875]
[450.55447388 616.56158447]
[443.33847046 629.74969482]
[434.10031128 641.60937500]
[423.07922363 651.83343506]
[410.56076050 660.15716553]
[396.86911011 666.36480713]
[382.35894775 670.29565430]
[367.40612793 671.84783936]
[352.39794922 670.98126221]
[337.72320557 667.71820068]
[323.76193237 662.14337158]
[310.87579346 654.40100098]
[299.39862061 644.69171143]
[289.62762451 633.26702881]
[281.81591797 620.42279053]
[276.16586304 606.49176025]
[272.82382202 591.83483887]
[271.87631226 576.83154297]
[273.34793091 561.87054443]
[277.20053101 547.33941650]
[283.33428955 533.61456299]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 175]
[3 174]
[4 173]
[5 172]
[6 171]
[7 170]
[8 169]
[9 168]
[16 161]
[17 160]
[18 159]
[22 155]
[23 154]
[25 152]
[26 151]
[27 150]
[28 149]
[30 147]
[32 145]
[33 144]
[34 143]
[35 142]
[37 140]
[38 139]
[39 138]
[40 137]
[42 135]
[43 134]
[44 133]
[49 128]
[50 127]
[51 126]
[52 125]
[55 124]
[56 123]
[60 122]
[61 121]
[62 119]
[64 117]
[65 116]
[66 115]
[67 114]
[68 113]
[69 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
