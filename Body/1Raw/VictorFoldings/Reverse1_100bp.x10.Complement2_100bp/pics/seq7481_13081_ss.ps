%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[47.20013809 673.68853760]
[32.28396225 675.32696533]
[17.29074860 675.94366455]
[2.29040432 675.53570557]
[-12.64713192 674.10504150]
[-27.45221519 671.65838623]
[-42.05581284 668.20703125]
[-56.38983917 663.76721191]
[-70.38746643 658.35949707]
[-83.98341370 652.00915527]
[-97.11431122 644.74578857]
[-109.71892548 636.60327148]
[-121.73847961 627.61956787]
[-133.11694336 617.83654785]
[-143.80126953 607.29986572]
[-153.74163818 596.05859375]
[-162.89169312 584.16522217]
[-171.20877075 571.67510986]
[-178.65411377 558.64648438]
[-185.19297791 545.14019775]
[-190.79490662 531.21917725]
[-195.43376160 516.94830322]
[-199.08792114 502.39413452]
[-201.74034119 487.62454224]
[-203.37866211 472.70834351]
[-203.99525452 457.71511841]
[-203.58721924 442.71478271]
[-202.15647888 427.77725220]
[-199.70968628 412.97219849]
[-196.25827026 398.36862183]
[-191.81829834 384.03460693]
[-186.41050720 370.03704834]
[-180.06007385 356.44113159]
[-172.79663086 343.31027222]
[-164.65403748 330.70571899]
[-155.67024231 318.68621826]
[-145.88716125 307.30783081]
[-135.35038757 296.62356567]
[-124.10906219 286.68328857]
[-112.21559143 277.53329468]
[-99.72542572 269.21630859]
[-86.69680023 261.77105713]
[-73.19046783 255.23226929]
[-59.26939774 249.63044739]
[-44.99849701 244.99168396]
[-30.44430161 241.33761597]
[-15.67467403 238.68530273]
[-0.75847542 237.04707336]
[14.23474598 236.43058777]
[29.23508453 236.83872986]
[44.17260361 238.26957703]
[46.61832809 223.47030640]
[49.06405640 208.67103577]
[51.50978470 193.87176514]
[53.95551300 179.07249451]
[56.40124130 164.27320862]
[47.66687393 176.46792603]
[36.46838760 186.44760132]
[23.35218239 193.72531128]
[8.95822430 197.94596863]
[-6.01117373 198.90364075]
[-20.82562065 196.55157471]
[-34.76228714 191.00457764]
[-47.14117432 182.53324890]
[-57.35828400 171.55096436]
[-64.91510010 158.59355164]
[-69.44291687 144.29324341]
[-70.72080994 129.34777832]
[-68.68642426 114.48637390]
[-63.43901825 100.43415833]
[-55.23463440 87.87677002]
[-44.47357559 77.42691040]
[-31.68090057 69.59444427]
[-17.48079109 64.76154327]
[-2.56610417 63.16401672]
[12.33544159 64.87980652]
[26.49676704 69.82519531]
[39.22690582 77.75889587]
[49.90473175 88.29378510]
[58.00924683 100.91586304]
[63.14501572 115.00926208]
[65.06145477 129.88633728]
[63.66638565 144.81471252]
[71.51814270 132.03387451]
[79.36989594 119.25302887]
[87.22164917 106.47219086]
[87.79519653 92.50212860]
[99.99750519 85.67605591]
[107.84925842 72.89521027]
[115.70101929 60.11436844]
[123.55277252 47.33352661]
[131.40452576 34.55268478]
[138.38298035 21.27483940]
[144.45681763 7.55957222]
[147.45158386 -7.13843203]
[147.22825623 -22.13677025]
[147.00492859 -37.13510513]
[146.78160095 -52.13344574]
[146.55827332 -67.13178253]
[132.87284851 -73.98506927]
[123.94930267 -86.42005920]
[121.83821106 -101.57927704]
[127.02468109 -115.97924805]
[138.31690979 -126.31095886]
[153.12001038 -130.20027161]
[168.03234863 -126.75342560]
[179.62718201 -116.76250458]
[185.24009705 -102.52334595]
[183.58128357 -87.30799103]
[175.03192139 -74.61283112]
[161.55661011 -67.35511017]
[161.77993774 -52.35677338]
[162.00326538 -37.35843277]
[162.22659302 -22.36009789]
[162.44992065 -7.36175966]
[168.89300537 -20.90748787]
[177.89764404 -32.90400314]
[189.10519409 -42.87349319]
[202.06927490 -50.41887283]
[216.27351379 -55.23961639]
[231.15217590 -57.14371490]
[246.11264038 -56.05532455]
[260.55902100 -52.01779938]
[273.91595459 -45.19195175]
[285.65145874 -35.84965134]
[295.29803467 -24.36300278]
[302.47155762 -11.18950844]
[306.88623047 3.14613247]
[308.36624146 18.07293701]
[306.85266113 32.99637985]
[302.40579224 47.32205963]
[295.20269775 60.47939682]
[285.53030396 71.94433594]
[273.77386475 81.26023102]
[260.40161133 88.05603790]
[245.94616699 92.06108093]
[230.98329163 93.11583710]
[216.10896301 91.17830658]
[201.91558838 86.32564545]
[188.96850586 78.75114441]
[177.78338623 68.75648499]
[168.80574036 56.73976135]
[162.39312744 43.17958450]
[158.80096436 28.61605644]
[158.17207336 13.63340569]
[152.09825134 27.34867287]
[165.37696838 20.37189293]
[180.32859802 21.57558250]
[192.32020569 30.58676720]
[197.63604736 44.61323166]
[194.62898254 59.30872345]
[184.23075867 70.11968994]
[169.66337585 73.69622803]
[155.44071960 68.93010712]
[145.96981812 57.29817200]
[144.18536377 42.40444183]
[136.33361816 55.18528366]
[128.48185730 67.96612549]
[120.63010406 80.74697113]
[112.77835083 93.52780914]
[112.20480347 107.49787140]
[100.00249481 114.32394409]
[92.15074158 127.10478973]
[84.29898071 139.88563538]
[76.44722748 152.66647339]
[71.20050812 166.71894836]
[68.75478363 181.51821899]
[66.30905914 196.31748962]
[63.86332703 211.11676025]
[61.41760254 225.91603088]
[58.97187424 240.71530151]
[73.57551575 244.16642761]
[87.90960693 248.60609436]
[101.90730286 254.01362610]
[115.50334167 260.36376953]
[128.63433838 267.62695312]
[141.23904419 275.76928711]
[153.25872803 284.75283813]
[164.63732910 294.53570557]
[175.32179260 305.07226562]
[185.26229858 316.31338501]
[194.41252136 328.20666504]
[202.72976685 340.69665527]
[210.17527771 353.72512817]
[216.71434021 367.23135376]
[222.31645203 381.15231323]
[226.95549011 395.42309570]
[230.60984802 409.97723389]
[233.26246643 424.74679565]
[234.90100098 439.66296387]
[235.51777649 454.65618896]
[235.10995483 469.65652466]
[233.67939758 484.59408569]
[231.23281860 499.39916992]
[227.78158569 514.00280762]
[223.34182739 528.33685303]
[217.93420410 542.33453369]
[211.58395386 555.93048096]
[204.32069397 569.06146240]
[196.17826843 581.66613770]
[187.19464111 593.68572998]
[177.41171265 605.06427002]
[166.87507629 615.74865723]
[155.63388062 625.68908691]
[143.74053955 634.83923340]
[131.25048828 643.15637207]
[118.22196198 650.60180664]
[104.71571350 657.14080811]
[90.79471588 662.74279785]
[76.52388000 667.38177490]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 171]
[52 170]
[53 169]
[54 168]
[55 167]
[56 166]
[83 165]
[84 164]
[85 163]
[86 162]
[88 160]
[89 159]
[90 158]
[91 157]
[92 156]
[93 146]
[94 145]
[95 115]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
