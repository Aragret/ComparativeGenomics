%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUUCGAAUCCCUCUCGACCCAACAAACCCAACACCGAGUCACAGUCAAGCUCUAUUAUUGAAGAACCAGAUCCGUGUACUUAUAACAACACCCCUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[104.27553558 616.03521729]
[89.18508911 615.36071777]
[74.89637756 610.46075439]
[62.56773758 601.73254395]
[53.19858932 589.88366699]
[47.54845047 575.87469482]
[46.07535172 560.84112549]
[48.89870834 546.00183105]
[55.78964996 532.55969238]
[66.18955231 521.60437012]
[79.25534058 514.02398682]
[93.92783356 510.43310547]
[94.59762573 495.44808960]
[95.26741028 480.46304321]
[95.93719482 465.47799683]
[96.60697937 450.49295044]
[85.59677124 460.67996216]
[70.62098694 461.53204346]
[58.52636337 452.65960693]
[54.84239197 438.11904907]
[61.25333786 424.55807495]
[74.82820129 418.17660522]
[89.36074066 421.89215088]
[98.20738983 434.00781250]
[100.43251038 419.17376709]
[102.65762329 404.33972168]
[104.88274384 389.50567627]
[107.10785675 374.67163086]
[109.33297729 359.83758545]
[111.55809784 345.00357056]
[113.78321075 330.16952515]
[116.00833130 315.33547974]
[115.89665985 300.33587646]
[113.45093536 285.53662109]
[101.23071289 277.09851074]
[98.53957367 262.12478638]
[107.47309875 249.36428833]
[105.02736664 234.56501770]
[102.58164215 219.76574707]
[100.13591766 204.96647644]
[97.49789429 202.62699890]
[95.86196899 198.89352417]
[95.87096405 194.25099182]
[97.92684174 189.45301819]
[96.14437866 174.55931091]
[94.36191559 159.66558838]
[92.57944489 144.77186584]
[90.79698181 129.87815857]
[85.29650116 143.83325195]
[75.61304474 155.28884888]
[62.76852798 163.03599548]
[48.11846924 166.25714111]
[33.20891953 164.61235046]
[19.61332321 158.27517700]
[8.76645374 147.91441345]
[1.81300652 134.62344360]
[-0.51320386 119.80492401]
[2.03331304 105.02265930]
[9.18381691 91.83667755]
[20.18369865 81.63850403]
[33.87211609 75.50440216]
[48.80449295 74.08169556]
[63.40498352 77.52053833]
[76.13276672 85.45802307]
[85.64463806 97.05648041]
[90.93683624 111.09209442]
[85.80446625 98.08631134]
[94.19763184 86.90389252]
[96.20164490 72.03836823]
[90.37742615 57.32820129]
[99.74573517 45.74873734]
[101.74975586 30.88320732]
[95.92552948 16.17304039]
[105.29384613 4.59357643]
[107.29785919 -10.27195168]
[109.30187225 -25.13747978]
[110.08319092 -40.11711884]
[109.63658905 -55.11046600]
[109.18997955 -70.10382080]
[108.74337769 -85.09716797]
[98.70462036 -100.53429413]
[107.61923218 -115.65039825]
[106.94944763 -130.63543701]
[106.27966309 -145.62046814]
[105.60987854 -160.60551453]
[104.94009399 -175.59054565]
[94.88262939 -164.46186829]
[80.04258728 -162.27713013]
[67.20462799 -170.03515625]
[62.23810196 -184.18907166]
[67.41363525 -198.26792908]
[80.36503601 -205.83503723]
[95.17111206 -203.43081665]
[105.06339264 -192.15274048]
[105.95620728 -207.12614441]
[106.84902191 -222.09954834]
[92.52957916 -226.85516357]
[79.92942810 -235.15568542]
[69.90767670 -246.43518066]
[63.14762878 -259.92459106]
[60.11018753 -274.70416260]
[61.00245285 -289.76626587]
[65.76359558 -304.08386230]
[74.06897736 -316.68081665]
[85.35234070 -326.69821167]
[98.84436035 -333.45303345]
[113.62512207 -336.48477173]
[128.68685913 -335.58670044]
[143.00262451 -330.82003784]
[155.59635925 -322.50976562]
[165.60940552 -311.22253418]
[172.35903931 -297.72793579]
[175.38505554 -282.94598389]
[174.48115540 -267.88461304]
[169.70896912 -253.57067871]
[161.39385986 -240.98014832]
[150.10275269 -230.97146606]
[136.60552979 -224.22705078]
[121.82242584 -221.20672607]
[120.92961121 -206.23332214]
[120.03679657 -191.25991821]
[119.92513275 -176.26033020]
[120.59491730 -161.27529907]
[121.26470184 -146.29025269]
[121.93448639 -131.30522156]
[122.60427094 -116.32018280]
[131.31663513 -107.92843628]
[131.99728394 -95.44963837]
[123.73672485 -85.54376984]
[124.18333435 -70.55042267]
[124.62993622 -55.55707169]
[125.07654572 -40.56372452]
[133.16186523 -53.19810104]
[146.14659119 -60.70788574]
[161.12989807 -61.41537476]
[174.76448059 -55.16250992]
[184.00433350 -43.34619904]
[186.78523254 -28.60623550]
[182.48596191 -14.23556519]
[172.06694031 -3.44463253]
[157.85585022 1.35584044]
[143.02745056 -0.90658396]
[130.89445496 -9.72647476]
[124.16739655 -23.13346672]
[122.16338348 -8.26793861]
[120.15937042 6.59758997]
[126.12693024 20.24447441]
[116.61528015 32.88722229]
[114.61126709 47.75275040]
[120.57882690 61.39963531]
[111.06717682 74.04238129]
[109.06316376 88.90790558]
[114.19553375 101.91368866]
[105.80236816 113.09610748]
[105.69069672 128.09568787]
[107.47316742 142.98941040]
[109.25563049 157.88311768]
[111.03809357 172.77684021]
[112.82056427 187.67056274]
[114.93518829 202.52075195]
[117.38091278 217.32002258]
[119.82663727 232.11929321]
[122.27236938 246.91856384]
[134.83636475 256.12637329]
[137.10586548 271.16976929]
[128.25019836 283.09088135]
[130.69593811 297.89016724]
[135.19180298 283.57977295]
[143.33552551 270.98294067]
[154.53915405 261.00906372]
[167.99391174 254.37811279]
[182.72850037 251.56883240]
[197.67919922 252.78401184]
[211.76670837 257.93591309]
[223.97404480 266.65261841]
[233.41993713 278.30487061]
[239.42248535 292.05148315]
[241.54837036 306.90008545]
[239.64410400 321.77871704]
[233.84716797 335.61328125]
[224.57604980 347.40509033]
[212.50004578 356.30282593]
[198.49090576 361.66418457]
[183.55999756 363.10214233]
[168.78515625 360.51284790]
[155.23303223 354.08325195]
[143.88194275 344.27749634]
[135.55131531 331.80349731]
[130.84237671 317.56057739]
[128.61724854 332.39462280]
[126.39213562 347.22866821]
[124.16702271 362.06271362]
[121.94190216 376.89675903]
[119.71678925 391.73080444]
[117.49166870 406.56484985]
[115.26655579 421.39889526]
[113.04143524 436.23294067]
[111.59201813 451.16275024]
[110.92223358 466.14779663]
[110.25244904 481.13281250]
[109.58266449 496.11785889]
[108.91287231 511.10290527]
[123.20649719 515.98846436]
[135.54389954 524.70428467]
[144.92494202 536.54376221]
[150.58915710 550.54705811]
[152.07736206 565.57910156]
[149.26890564 580.42126465]
[142.39147949 593.87036133]
[132.00259399 604.83605957]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 202]
[13 201]
[14 200]
[15 199]
[16 198]
[24 197]
[25 196]
[26 195]
[27 194]
[28 193]
[29 192]
[30 191]
[31 190]
[32 189]
[33 167]
[34 166]
[37 163]
[38 162]
[39 161]
[40 160]
[44 159]
[45 158]
[46 157]
[47 156]
[48 155]
[66 154]
[68 152]
[69 151]
[71 149]
[72 148]
[74 146]
[75 145]
[76 144]
[77 132]
[78 131]
[79 130]
[80 129]
[82 126]
[83 125]
[84 124]
[85 123]
[86 122]
[94 121]
[95 120]
[96 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
