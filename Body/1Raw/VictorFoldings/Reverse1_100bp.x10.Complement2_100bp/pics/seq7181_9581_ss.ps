%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[197.26077271 494.34844971]
[204.59457397 481.22549438]
[213.93858337 469.44900513]
[225.05075073 459.32400513]
[237.64326477 451.11276245]
[231.56942749 437.39749146]
[225.49560547 423.68222046]
[219.42176819 409.96694946]
[213.34793091 396.25167847]
[207.27409363 382.53640747]
[203.22059631 380.01089478]
[200.71058655 374.91220093]
[201.23037720 368.32119751]
[195.56759644 354.43115234]
[189.90480042 340.54113770]
[184.24201965 326.65112305]
[178.57922363 312.76107788]
[172.91644287 298.87106323]
[167.25366211 284.98101807]
[161.59086609 271.09100342]
[150.56649780 266.11209106]
[145.73504639 254.58641052]
[150.18962097 242.48188782]
[144.73426819 228.50909424]
[139.27891541 214.53630066]
[122.00545502 210.86213684]
[110.29228210 197.43632507]
[108.97163391 179.51049805]
[118.76055908 164.24829102]
[106.66036224 155.56298828]
[108.38132477 139.83566284]
[102.51235962 126.03148651]
[96.64340210 112.22731018]
[95.70643616 127.19801331]
[90.97709656 141.43295288]
[82.76907349 153.98796082]
[71.62676239 164.03031921]
[58.28919983 170.89395142]
[43.64101791 174.12361145]
[28.65377426 173.50509644]
[14.32152271 169.07942200]
[1.59486878 161.14013672]
[-8.68207455 150.21382141]
[-15.82767487 137.02517700]
[-19.36798859 122.44895935]
[-19.06820297 107.45195007]
[-14.94819736 93.02886200]
[-7.28123903 80.13631439]
[3.42414999 69.62943268]
[16.45792007 62.20508957]
[30.95558929 58.35572433]
[45.95557785 58.33664703]
[60.46298981 62.14912415]
[73.51560211 69.54029083]
[84.24768066 80.01991272]
[91.94944763 92.89762115]
[90.83380127 77.93917084]
[89.71815491 62.98071289]
[88.60250854 48.02226257]
[87.48685455 33.06380844]
[86.37120819 18.10535431]
[85.25556183 3.14690042]
[77.74245453 16.12970543]
[65.10600281 24.21179962]
[50.16923523 25.58761978]
[36.26905441 19.94980812]
[26.51079559 8.55786419]
[23.07448006 -6.04322338]
[26.72779274 -20.59153366]
[36.65457153 -31.83693504]
[50.63714600 -37.26718140]
[65.55178070 -35.66913605]
[78.06649780 -27.39980698]
[85.38549805 -14.30656624]
[78.91024017 -28.74199677]
[87.75215912 -40.72822952]
[89.09039307 -55.66841507]
[90.42862701 -70.60859680]
[91.76686096 -85.54878235]
[93.10509491 -100.48896790]
[83.57569885 -88.90489960]
[69.79058075 -82.99131012]
[54.82936859 -84.06932068]
[42.03443146 -91.89809418]
[34.26419830 -104.72866058]
[33.25455475 -119.69464111]
[39.23105621 -133.45260620]
[50.85854340 -142.92897034]
[65.53939819 -146.00671387]
[79.99388123 -141.99824524]
[90.99283600 -131.79907227]
[96.07904816 -117.68769073]
[99.83535004 -132.20974731]
[103.59165192 -146.73181152]
[107.34795380 -161.25386047]
[111.10425568 -175.77592468]
[114.31752777 -190.42771912]
[116.98332214 -205.18893433]
[119.64911652 -219.95014954]
[122.31491089 -234.71136475]
[108.66204071 -241.13487244]
[97.13753510 -250.87387085]
[88.52714539 -263.26434326]
[83.41795349 -277.46148682]
[82.15830994 -292.49728394]
[84.83409882 -307.34661865]
[91.26287842 -320.99700928]
[101.00632477 -332.51776123]
[113.40011597 -341.12335205]
[127.59922028 -346.22705078]
[142.63551331 -347.48089600]
[157.48381042 -344.79937744]
[171.13172913 -338.36532593]
[182.64871216 -328.61743164]
[191.24952698 -316.22033691]
[196.34774780 -302.01925659]
[197.59577942 -286.98248291]
[194.90852356 -272.13522339]
[188.46920776 -258.48977661]
[178.71687317 -246.97656250]
[166.31643677 -238.38053894]
[152.11338806 -233.28779602]
[137.07612610 -232.04556274]
[134.41033936 -217.28434753]
[131.74453735 -202.52313232]
[129.07875061 -187.76191711]
[142.70193481 -194.03955078]
[156.17181396 -187.43936157]
[159.55888367 -172.82676697]
[150.36631775 -160.97363281]
[135.37054443 -160.61764526]
[125.62631226 -172.01962280]
[121.87001038 -157.49755859]
[118.11370850 -142.97550964]
[114.35741425 -128.45344543]
[110.60111237 -113.93138885]
[108.04528046 -99.15073395]
[106.70704651 -84.21054840]
[105.36881256 -69.27036285]
[104.03057861 -54.33018112]
[102.69234467 -39.38999557]
[109.26331329 -26.02318573]
[100.32567596 -12.96833229]
[100.21401215 2.03125191]
[101.32965851 16.98970604]
[102.44531250 31.94815826]
[103.56095886 46.90661240]
[104.67660522 61.86506653]
[105.79225922 76.82351685]
[106.90790558 91.78197479]
[110.44757843 106.35834503]
[116.31653595 120.16252136]
[122.18550110 133.96670532]
[134.70547485 143.63937378]
[132.56472778 158.37933350]
[145.01013184 159.55393982]
[155.71308899 165.87179565]
[162.67366028 176.08111572]
[164.62162781 188.20985413]
[161.24789429 199.94659424]
[153.25170898 209.08093262]
[158.70706177 223.05374146]
[164.16242981 237.02653503]
[178.80198669 248.19635010]
[175.48089600 265.42822266]
[181.14367676 279.31823730]
[186.80647278 293.20828247]
[192.46925354 307.09829712]
[198.13204956 320.98831177]
[203.79483032 334.87835693]
[209.45761108 348.76837158]
[215.12040710 362.65841675]
[220.98936462 376.46258545]
[227.06320190 390.17785645]
[233.13703918 403.89312744]
[239.21086121 417.60836792]
[245.28469849 431.32363892]
[251.35853577 445.03890991]
[265.90194702 441.23297119]
[280.86755371 439.80938721]
[295.86773682 440.80499268]
[310.51388550 444.19406128]
[324.42669678 449.88879395]
[337.24578857 457.74163818]
[348.63909912 467.54925537]
[358.31149292 479.05752563]
[366.01245117 491.96844482]
[371.54251099 505.94750977]
[374.75842285 520.63269043]
[375.57690430 535.64355469]
[373.97671509 550.59130859]
[369.99932861 565.08880615]
[363.74777222 578.76043701]
[355.38397217 591.25213623]
[345.12454224 602.24035645]
[333.23529053 611.44042969]
[320.02410889 618.61407471]
[305.83325195 623.57550049]
[291.03027344 626.19610596]
[275.99859619 626.40814209]
[261.12759399 624.20599365]
[246.80244446 619.64678955]
[233.39422607 612.84857178]
[221.25022888 603.98742676]
[210.68501282 593.29290771]
[201.97224426 581.04205322]
[195.33760071 567.55212402]
[190.95295715 553.17260742]
[188.93185425 538.27593994]
[189.32666016 523.24792480]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 178]
[6 177]
[7 176]
[8 175]
[9 174]
[10 173]
[13 172]
[14 171]
[15 170]
[16 169]
[17 168]
[18 167]
[19 166]
[20 165]
[23 163]
[24 162]
[25 161]
[29 155]
[31 153]
[32 152]
[33 151]
[56 150]
[57 149]
[58 148]
[59 147]
[60 146]
[61 145]
[62 144]
[74 143]
[76 141]
[77 140]
[78 139]
[79 138]
[80 137]
[92 136]
[93 135]
[94 134]
[95 133]
[96 132]
[97 126]
[98 125]
[99 124]
[100 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
