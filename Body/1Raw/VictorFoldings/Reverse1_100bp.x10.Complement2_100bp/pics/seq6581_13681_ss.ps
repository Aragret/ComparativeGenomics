%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[47.86051559 536.50451660]
[41.05661011 549.88372803]
[33.09685898 562.60931396]
[24.04355812 574.58160400]
[13.96756458 585.70684814]
[2.94773817 595.89813232]
[-8.92967510 605.07550049]
[-21.57171631 613.16723633]
[-34.87944031 620.11004639]
[-48.74869919 625.84948730]
[-63.07094193 630.34069824]
[-77.73407745 633.54852295]
[-92.62333679 635.44787598]
[-107.62220001 636.02380371]
[-122.61327362 635.27191162]
[-137.47923279 633.19805908]
[-152.10371399 629.81842041]
[-166.37228394 625.15948486]
[-180.17326355 619.25775146]
[-193.39862061 612.15930176]
[-205.94485474 603.91979980]
[-217.71379089 594.60369873]
[-228.61329651 584.28387451]
[-238.55807495 573.04113770]
[-247.47030640 560.96350098]
[-255.28021240 548.14544678]
[-261.92669678 534.68725586]
[-267.35769653 520.69433594]
[-271.53076172 506.27621460]
[-274.41320801 491.54565430]
[-275.98248291 476.61798096]
[-276.22628784 461.61004639]
[-275.14273071 446.63931274]
[-272.74026489 431.82290649]
[-269.03771973 417.27679443]
[-264.06408691 403.11486816]
[-257.85824585 389.44793701]
[-250.46879578 376.38293457]
[-241.95356750 364.02218628]
[-232.37921143 352.46237183]
[-221.82066345 341.79397583]
[-210.36053467 332.10049438]
[-198.08854675 323.45782471]
[-185.10073853 315.93359375]
[-171.49874878 309.58666992]
[-157.38903809 304.46673584]
[-142.88203430 300.61386108]
[-128.09127808 298.05819702]
[-113.13254547 296.81979370]
[-98.12288666 296.90826416]
[-83.17978668 298.32296753]
[-68.42019653 301.05282593]
[-53.95963287 305.07647705]
[-39.91126633 310.36239624]
[-26.38505363 316.86926270]
[-13.48685360 324.54611206]
[-4.70625019 312.38464355]
[4.07435322 300.22320557]
[12.85495663 288.06173706]
[14.03204250 273.21371460]
[28.38342094 266.55426025]
[37.16402435 254.39280701]
[45.94462585 242.23133850]
[52.62482071 228.80096436]
[57.02581787 214.46112061]
[61.42681885 200.12127686]
[65.82781219 185.78143311]
[70.22881317 171.44157410]
[74.62981415 157.10173035]
[79.03080750 142.76188660]
[83.43180847 128.42204285]
[87.83280945 114.08219147]
[82.09110260 94.93836975]
[97.00419617 81.63225555]
[100.76049805 67.11019897]
[104.51679993 52.58813858]
[108.27310181 38.06608200]
[112.02939606 23.54402161]
[115.78569794 9.02196217]
[119.54199982 -5.50009680]
[122.42726898 -20.21998787]
[124.43128967 -35.08551788]
[113.57211304 -48.80038452]
[115.94503021 -65.79109192]
[129.59797668 -75.61127472]
[131.38043213 -90.50499725]
[118.59050751 -98.76206207]
[110.68616486 -111.70069885]
[109.18947601 -126.72668457]
[114.34399414 -140.85438538]
[125.07704926 -151.30000305]
[139.22241211 -156.03010559]
[141.00488281 -170.92382812]
[142.78735352 -185.81755066]
[144.56982422 -200.71125793]
[146.35227966 -215.60498047]
[148.13475037 -230.49870300]
[149.91722107 -245.39241028]
[151.69967651 -260.28613281]
[137.80902100 -266.22131348]
[126.15404510 -275.83056641]
[117.67955780 -288.33496094]
[113.07255554 -302.72079468]
[112.70650482 -317.82189941]
[116.61108398 -332.41403198]
[124.46976471 -345.31433105]
[135.64547729 -355.47702026]
[149.23225403 -362.07824707]
[164.12867737 -364.58288574]
[179.12716675 -362.78787231]
[193.01185608 -356.83874512]
[204.65718079 -347.21777344]
[213.11909485 -334.70486450]
[217.71163940 -320.31442261]
[218.06251526 -305.21298218]
[214.14328003 -290.62475586]
[206.27165222 -277.73236084]
[195.08573914 -267.58090210]
[181.49234009 -260.99331665]
[166.59339905 -258.50366211]
[164.81092834 -243.60995483]
[163.02847290 -228.71623230]
[161.24600220 -213.82250977]
[159.46353149 -198.92880249]
[157.68107605 -184.03507996]
[155.89860535 -169.14135742]
[154.11613464 -154.24765015]
[166.74581909 -146.31312561]
[174.71081543 -133.62974548]
[176.38592529 -118.68467712]
[171.38571167 -104.43624115]
[160.65135193 -93.72826385]
[146.27415466 -88.72252655]
[144.49168396 -73.82881165]
[153.79457092 -64.91332245]
[156.30126953 -52.07593918]
[150.87673950 -39.96046066]
[139.29681396 -33.08150101]
[137.29280090 -18.21597481]
[148.58778381 -28.08630371]
[163.51644897 -29.54736710]
[176.51078796 -22.05422783]
[182.72422791 -8.40163803]
[179.83930969 6.31832170]
[168.93203735 16.61547089]
[154.07054138 18.64922905]
[140.79780579 11.66105175]
[134.06405640 -1.74379599]
[130.30775452 12.77826309]
[126.55146027 27.30032158]
[122.79515839 41.82238007]
[119.03885651 56.34444046]
[115.28255463 70.86650085]
[111.52625275 85.38855743]
[116.90417480 92.21555328]
[118.59572601 100.74012756]
[116.23202515 109.10330963]
[110.32852936 115.48128510]
[102.17265320 118.48319244]
[97.77165222 132.82304382]
[93.37065887 147.16288757]
[88.96965790 161.50273132]
[84.56866455 175.84257507]
[80.16766357 190.18241882]
[75.76666260 204.52227783]
[71.36566925 218.86212158]
[66.96466827 233.20196533]
[77.32337189 222.35313416]
[90.10928345 214.50964355]
[104.47436523 210.19171143]
[119.46583557 209.68576050]
[134.08935547 213.02532959]
[147.37500000 219.98893738]
[158.44157410 230.11466980]
[166.55509949 242.73097229]
[171.17739868 257.00100708]
[172.00192261 271.97833252]
[168.97395325 286.66955566]
[162.29435730 300.10021973]
[152.40614319 311.37954712]
[139.96517944 319.75939941]
[125.79660797 324.68402100]
[110.84019470 325.82672119]
[96.08794403 323.11175537]
[82.51831818 316.71914673]
[71.03134155 307.07293701]
[62.38890457 294.81292725]
[57.16422653 280.75222778]
[55.70384216 265.82348633]
[58.10608292 251.01194763]
[49.32548141 263.17340088]
[40.54487610 275.33486938]
[38.73974228 291.05276489]
[25.01641273 296.84234619]
[16.23580933 309.00381470]
[7.45520544 321.16525269]
[-1.32539761 333.32672119]
[10.02021313 343.15396118]
[20.45288467 353.94549561]
[29.89096642 365.61682129]
[38.26058960 378.07666016]
[45.49625015 391.22741699]
[51.54131699 404.96621704]
[56.34848404 419.18554688]
[59.88011932 433.77404785]
[62.10858917 448.61764526]
[63.01644897 463.60006714]
[62.59659576 478.60412598]
[60.85231018 493.51232910]
[57.79725266 508.20806885]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 197]
[57 196]
[58 195]
[59 194]
[61 192]
[62 191]
[63 190]
[64 167]
[65 166]
[66 165]
[67 164]
[68 163]
[69 162]
[70 161]
[71 160]
[72 159]
[74 154]
[75 153]
[76 152]
[77 151]
[78 150]
[79 149]
[80 148]
[81 139]
[82 138]
[85 134]
[86 133]
[92 127]
[93 126]
[94 125]
[95 124]
[96 123]
[97 122]
[98 121]
[99 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
