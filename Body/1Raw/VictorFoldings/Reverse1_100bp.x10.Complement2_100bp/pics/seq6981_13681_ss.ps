%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[51.11473846 432.61996460]
[46.85050583 447.01715088]
[41.02831268 460.85787964]
[33.71884155 473.97406006]
[25.01081657 486.20654297]
[15.00994873 497.40679932]
[3.83763838 507.43890381]
[-8.37049198 516.18103027]
[-21.46624756 523.52703857]
[-35.29065704 529.38787842]
[-49.67590714 533.69226074]
[-64.44737244 536.38800049]
[-79.42573547 537.44238281]
[-94.42918396 536.84252930]
[-109.27558136 534.59588623]
[-123.78471375 530.72955322]
[-137.78044128 525.29052734]
[-151.09288025 518.34490967]
[-163.56042480 509.97686768]
[-175.03173828 500.28811646]
[-185.36755371 489.39617920]
[-194.44239807 477.43331909]
[-202.14614868 464.54473877]
[-208.38525391 450.88687134]
[-213.08399963 436.62557983]
[-216.18531799 421.93389893]
[-217.65159607 406.99023438]
[-217.46501160 391.97595215]
[-215.62783813 377.07336426]
[-212.16236877 362.46328735]
[-207.11068726 348.32315063]
[-200.53410339 334.82455444]
[-192.51245117 322.13140869]
[-183.14311218 310.39773560]
[-172.53982544 299.76602173]
[-160.83129883 290.36532593]
[-148.15965271 282.30972290]
[-134.67872620 275.69702148]
[-120.55215454 270.60751343]
[-105.95142365 267.10293579]
[-91.05377960 265.22586060]
[-76.04006195 264.99908447]
[-61.09252167 266.42535400]
[-46.39260864 269.48733521]
[-32.11876678 274.14788818]
[-18.44426918 280.35040283]
[-10.78367138 267.45407104]
[-3.12307358 254.55775452]
[4.53752375 241.66142273]
[12.19812107 228.76510620]
[19.85871887 215.86877441]
[19.70643616 200.97494507]
[33.40645599 193.06166077]
[41.06705475 180.16534424]
[48.72765350 167.26901245]
[48.57536697 152.37518311]
[62.27539062 144.46191406]
[61.76411438 140.97322083]
[62.91721344 137.06356812]
[65.91414642 133.51789856]
[70.57700348 131.17166138]
[78.80580902 118.63026428]
[87.03461456 106.08885956]
[88.02384186 92.14206696]
[100.42398071 85.68233490]
[108.65279388 73.14093018]
[109.75428009 57.35811615]
[123.20540619 50.96150970]
[120.20403290 35.67656708]
[128.72787476 23.07502556]
[143.31822205 20.30787086]
[151.54702759 7.76647091]
[159.77584839 -4.77492952]
[168.00465393 -17.31632996]
[176.23345947 -29.85773087]
[184.46226501 -42.39913177]
[186.55357361 -51.29093933]
[192.90811157 -55.06473541]
[201.32273865 -67.48223114]
[209.73735046 -79.89972687]
[218.15196228 -92.31722260]
[226.56658936 -104.73471832]
[212.76527405 -98.85902405]
[197.77760315 -99.46688843]
[184.49743652 -106.44094086]
[175.48899841 -118.43460083]
[172.49163818 -133.13208008]
[176.08413696 -147.69552612]
[185.57281494 -159.31295776]
[199.12557983 -165.74125671]
[214.12557983 -165.73918152]
[227.67655945 -159.30717468]
[237.16203308 -147.68711853]
[240.75051880 -133.12268066]
[237.74859619 -118.42486572]
[248.23609924 -129.14924622]
[258.72360229 -139.87362671]
[269.21112061 -150.59800720]
[279.69860840 -161.32238770]
[270.01187134 -172.79023743]
[261.45910645 -185.12696838]
[254.11775208 -198.22084045]
[248.05430603 -211.95326233]
[243.32369995 -226.19987488]
[239.96873474 -240.83166504]
[238.01983643 -255.71609497]
[237.49462891 -270.71838379]
[238.39787292 -285.70269775]
[240.72138977 -300.53326416]
[244.44413757 -315.07580566]
[249.53239441 -329.19863892]
[255.94009399 -342.77383423]
[263.60919189 -355.67849731]
[272.47024536 -367.79568481]
[282.44302368 -379.01568604]
[293.43716431 -389.23693848]
[305.35311890 -398.36682129]
[318.08297729 -406.32266235]
[331.51144409 -413.03240967]
[345.51693726 -418.43530273]
[359.97256470 -422.48239136]
[374.74746704 -425.13708496]
[389.70779419 -426.37524414]
[404.71810913 -426.18576050]
[419.64239502 -424.57028198]
[434.34558105 -421.54345703]
[448.69442749 -417.13269043]
[462.55905151 -411.37792969]
[475.81384277 -404.33129883]
[488.33880615 -396.05661011]
[500.02047729 -386.62881470]
[510.75308228 -376.13330078]
[520.43939209 -364.66506958]
[528.99169922 -352.32803345]
[536.33258057 -339.23388672]
[542.39550781 -325.50125122]
[547.12561035 -311.25445557]
[550.48004150 -296.62255859]
[552.42840576 -281.73806763]
[552.95306396 -266.73574829]
[552.04925537 -251.75148010]
[549.72521973 -236.92098999]
[546.00195312 -222.37857056]
[540.91314697 -208.25592041]
[534.50494385 -194.68095398]
[526.83538818 -181.77659607]
[517.97387695 -169.65972900]
[508.00073242 -158.44007874]
[497.00622559 -148.21923828]
[485.08993530 -139.08979797]
[472.35977173 -131.13441467]
[458.93106079 -124.42516327]
[444.92538452 -119.02278137]
[430.46957397 -114.97619629]
[415.69458008 -112.32206726]
[400.73422241 -111.08442688]
[385.72393799 -111.27447510]
[370.79968262 -112.89050293]
[356.09661865 -115.91786957]
[341.74792480 -120.32915497]
[327.88351440 -126.08441162]
[314.62896729 -133.13151550]
[302.10430908 -141.40666199]
[290.42297363 -150.83488464]
[279.93548584 -140.11050415]
[269.44799805 -129.38612366]
[258.96047974 -118.66174316]
[248.47297668 -107.93736267]
[238.98408508 -96.32009888]
[230.56945801 -83.90260315]
[222.15484619 -71.48510742]
[213.74023438 -59.06761169]
[205.32560730 -46.65011597]
[197.00366211 -34.17032242]
[188.77485657 -21.62892151]
[180.54605103 -9.08752155]
[172.31724548 3.45387840]
[164.08843994 15.99527836]
[155.85961914 28.53667831]
[159.12968445 43.02261353]
[150.96316528 55.85860062]
[135.74681091 59.19031906]
[135.23390198 74.07608795]
[121.19419098 81.36973572]
[112.96538544 93.91114044]
[111.97615814 107.85793304]
[99.57601929 114.31766510]
[91.34720612 126.85906982]
[83.11840057 139.40046692]
[75.17171478 152.12251282]
[74.77606201 167.93876648]
[61.62397766 174.92961121]
[53.96338272 187.82594299]
[46.30278397 200.72225952]
[45.90713120 216.53852844]
[32.75504684 223.52937317]
[25.09444809 236.42570496]
[17.43385124 249.32202148]
[9.77325344 262.21835327]
[2.11265588 275.11468506]
[-5.54794168 288.01101685]
[6.44019938 297.05245972]
[17.36092758 307.35781860]
[27.08167458 318.80206299]
[35.48443985 331.24618530]
[42.46722031 344.53921509]
[47.94525146 358.51971436]
[51.85203934 373.01797485]
[54.14015198 387.85806274]
[54.78182220 402.85977173]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 201]
[47 200]
[48 199]
[49 198]
[50 197]
[51 196]
[53 194]
[54 193]
[55 192]
[57 190]
[61 189]
[62 188]
[63 187]
[65 185]
[66 184]
[68 182]
[71 179]
[72 178]
[73 177]
[74 176]
[75 175]
[76 174]
[78 173]
[79 172]
[80 171]
[81 170]
[82 169]
[95 168]
[96 167]
[97 166]
[98 165]
[99 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
