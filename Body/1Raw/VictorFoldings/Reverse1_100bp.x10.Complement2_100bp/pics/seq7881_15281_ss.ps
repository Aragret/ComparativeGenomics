%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[11.37736511 602.66448975]
[-0.78318918 611.51666260]
[-14.32902431 618.05505371]
[-28.82469749 622.06939697]
[-43.80423355 623.43072510]
[-58.78610229 622.09533691]
[-73.28869629 618.10601807]
[-86.84582520 611.59112549]
[-99.02167511 602.76000977]
[-109.42484283 591.89660645]
[-117.72090912 579.35003662]
[-123.64319611 565.52380371]
[-127.00132751 550.86218262]
[-127.68733978 535.83654785]
[-125.67919922 520.92993164]
[-121.04144287 506.62152100]
[-113.92316437 493.37124634]
[-104.55318451 481.60504150]
[-93.23271179 471.70117188]
[-80.32565308 463.97799683]
[-66.24691010 458.68377686]
[-51.44905853 455.98867798]
[-36.40779495 455.97940063]
[-33.74199677 441.21817017]
[-31.07620239 426.45697021]
[-28.41040611 411.69573975]
[-25.74461174 396.93453979]
[-34.42180252 384.88290405]
[-31.92858505 369.87493896]
[-19.22888565 360.85522461]
[-16.56308937 346.09399414]
[-27.82043266 356.00723267]
[-42.63384628 358.36578369]
[-56.41323090 352.43887329]
[-64.88889313 340.06295776]
[-65.43455505 325.07287598]
[-57.88114548 312.11349487]
[-44.56916428 305.20037842]
[-29.62347412 306.47564697]
[-17.67515945 315.54415894]
[-12.42651749 329.59616089]
[-7.81250858 315.32342529]
[-3.19849944 301.05068970]
[1.41550994 286.77795410]
[-11.45382023 294.48382568]
[-26.40450668 293.26852417]
[-37.86031342 283.58529663]
[-41.54850388 269.04580688]
[-36.09347916 255.07287598]
[-23.52982712 246.87808228]
[-8.54347801 247.51788330]
[3.27602935 256.75363159]
[7.52028418 271.14181519]
[13.79764462 257.51849365]
[13.74185753 250.12805176]
[20.27122116 243.74015808]
[26.75071716 230.21180725]
[33.23021317 216.68347168]
[39.70970917 203.15512085]
[35.98728943 191.64555359]
[41.27474976 180.32183838]
[53.23174667 175.48521423]
[59.91194153 162.05482483]
[66.59214020 148.62445068]
[66.75641632 141.23562622]
[73.47307587 135.04496765]
[80.35248566 121.71553802]
[71.24580383 105.54844666]
[73.68340302 87.15375519]
[86.68663788 73.91660309]
[105.03495026 71.15145874]
[103.78301239 55.37985992]
[116.13643646 47.05867004]
[114.88450623 31.28707504]
[127.23793030 22.96588707]
[133.51528931 9.34257126]
[139.79264832 -4.28074503]
[146.07000732 -17.90406036]
[140.83445740 -32.57466888]
[147.39466858 -46.30122375]
[161.41311646 -51.20211411]
[167.69047546 -64.82543182]
[173.96783447 -78.44874573]
[180.24519348 -92.07206726]
[179.76484680 -97.26979065]
[181.18432617 -101.69001007]
[183.88935852 -104.73925018]
[187.11911011 -106.15384674]
[193.99851990 -119.48327637]
[200.87792969 -132.81271362]
[194.43318176 -150.62785339]
[202.91140747 -167.21195984]
[220.51223755 -172.24453735]
[226.99172974 -185.77288818]
[233.47122192 -199.30123901]
[239.74858093 -212.92454529]
[245.82241821 -226.63981628]
[251.89625549 -240.35508728]
[257.97009277 -254.07034302]
[245.28807068 -262.13409424]
[233.94961548 -271.99801636]
[224.20800781 -283.44177246]
[216.28091431 -296.20962524]
[210.34538269 -310.01641846]
[206.53405762 -324.55364990]
[204.93205261 -339.49658203]
[205.57518005 -354.51138306]
[208.44905090 -369.26260376]
[213.48948669 -383.42071533]
[220.58386230 -396.66937256]
[229.57369995 -408.71264648]
[240.25816345 -419.28149414]
[252.39854431 -428.13973999]
[265.72363281 -435.08953857]
[279.93572998 -439.97561646]
[294.71734619 -442.68884277]
[309.73825073 -443.16854858]
[324.66287231 -441.40405273]
[339.15777588 -437.43475342]
[352.89916992 -431.34936523]
[365.58001709 -423.28381348]
[376.91708374 -413.41827393]
[386.65704346 -401.97314453]
[394.58233643 -389.20413208]
[400.51589966 -375.39651489]
[404.32516479 -360.85873413]
[405.92501831 -345.91555786]
[405.27975464 -330.90087891]
[402.40377808 -316.15005493]
[397.36132812 -301.99267578]
[390.26507568 -288.74502563]
[381.27352905 -276.70300293]
[370.58755493 -266.13571167]
[358.44592285 -257.27917480]
[345.11984253 -250.33126831]
[330.90704346 -245.44721985]
[316.12503052 -242.73611450]
[301.10406494 -242.25854492]
[286.17968750 -244.02516174]
[271.68536377 -247.99652100]
[265.61151123 -234.28125000]
[259.53768921 -220.56597900]
[253.46385193 -206.85070801]
[254.31800842 -202.15184021]
[252.22943115 -196.86648560]
[246.99957275 -192.82173157]
[240.52008057 -179.29339600]
[234.04057312 -165.76504517]
[240.07383728 -156.08177185]
[240.68989563 -144.56933594]
[235.62016296 -134.08163452]
[226.01997375 -127.27447510]
[214.20736694 -125.93329620]
[207.32794189 -112.60386658]
[200.44853210 -99.27443695]
[193.86851501 -85.79470062]
[187.59114075 -72.17138672]
[181.31378174 -58.54806900]
[175.03642273 -44.92475510]
[180.41915894 -31.08417320]
[174.24710083 -17.17877007]
[159.69332886 -11.62670040]
[153.41596985 1.99661589]
[147.13861084 15.61993217]
[140.86125183 29.24324799]
[142.56217957 44.04041290]
[129.75975037 53.33603287]
[131.46069336 68.13319397]
[118.65826416 77.42881775]
[125.71596527 85.99005890]
[129.08216858 96.56241608]
[128.27365112 107.62823486]
[123.40648651 117.59902191]
[115.17934418 125.04349518]
[104.77322388 128.89300537]
[93.68191528 128.59495544]
[86.80250549 141.92437744]
[80.02251434 155.30465698]
[73.34231567 168.73503113]
[66.66212463 182.16540527]
[68.22997284 200.51269531]
[53.23805237 209.63461304]
[46.75855637 223.16296387]
[40.27906036 236.69131470]
[33.79956436 250.21965027]
[27.42096138 263.79586792]
[21.14360046 277.41918945]
[15.68824291 291.39196777]
[11.07423401 305.66470337]
[6.46022463 319.93743896]
[1.84621549 334.21017456]
[-1.80187213 348.75979614]
[-4.46766758 363.52102661]
[4.27488136 376.41308594]
[1.36110628 391.34509277]
[-10.98339462 399.60031128]
[-13.64918995 414.36154175]
[-16.31498528 429.12274170]
[-18.98078156 443.88397217]
[-21.64657593 458.64520264]
[-7.55869675 463.91503906]
[5.36170673 471.61590576]
[16.69929504 481.50015259]
[26.08961487 493.25012207]
[33.23080063 506.48806763]
[37.89329910 520.78845215]
[39.92722702 535.69158936]
[39.26720047 550.71838379]
[35.93444061 565.38574219]
[30.03608131 579.22229004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 200]
[24 199]
[25 198]
[26 197]
[27 196]
[30 193]
[31 192]
[41 191]
[42 190]
[43 189]
[44 188]
[53 187]
[54 186]
[56 185]
[57 184]
[58 183]
[59 182]
[62 180]
[63 179]
[64 178]
[66 177]
[67 176]
[71 169]
[73 167]
[75 165]
[76 164]
[77 163]
[78 162]
[81 159]
[82 158]
[83 157]
[84 156]
[88 155]
[89 154]
[90 153]
[93 148]
[94 147]
[95 146]
[96 143]
[97 142]
[98 141]
[99 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
