%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[160.71560669 506.42205811]
[157.83032227 491.70214844]
[154.94505310 476.98226929]
[144.90412903 465.98095703]
[149.84246826 450.95019531]
[147.13595581 448.69027710]
[145.38958740 445.00717163]
[145.26036072 440.36642456]
[147.17247009 435.50939941]
[144.94735718 420.67535400]
[142.72224426 405.84130859]
[140.49713135 391.00726318]
[137.25711060 387.49850464]
[136.18685913 381.91714478]
[138.43344116 375.69906616]
[136.65097046 360.80535889]
[134.86849976 345.91165161]
[133.08604431 331.01791382]
[131.30357361 316.12420654]
[129.52110291 301.23049927]
[127.29598999 286.39645386]
[124.63019562 271.63522339]
[121.96440125 256.87402344]
[106.32456207 247.36027527]
[102.54056549 229.12310791]
[113.47281647 213.65054321]
[110.36870575 198.97523499]
[107.26459503 184.29994202]
[104.16048431 169.62463379]
[101.05637360 154.94932556]
[98.78318787 153.30899048]
[97.02278900 150.66935730]
[96.15905762 147.22126770]
[96.49975586 143.29081726]
[98.23184204 139.30912781]
[96.00672150 124.47508240]
[93.78160858 109.64103699]
[86.82679749 122.93128204]
[74.21183014 131.04685974]
[59.23423767 131.86639404]
[45.80911636 125.17564392]
[37.44576645 112.72356415]
[36.33034134 97.76509094]
[42.75441742 84.21034241]
[55.03875351 75.60249329]
[69.97225189 74.19161224]
[83.65133667 80.34650421]
[92.50000000 92.45746613]
[92.50000000 77.45746613]
[92.50000000 62.45746613]
[92.50000000 47.45746613]
[92.50000000 32.45746613]
[92.50000000 17.45746422]
[84.76270294 3.65729213]
[92.50000000 -9.06997967]
[92.50000000 -24.06998062]
[92.50000000 -39.06998062]
[92.50000000 -54.06998062]
[89.53043365 -59.97702789]
[89.92986298 -65.64601898]
[92.72998047 -69.51492310]
[93.17658234 -84.50827026]
[93.62319183 -99.50162506]
[84.52106476 -115.50889587]
[94.31960297 -130.06759644]
[94.54293060 -145.06593323]
[87.01194763 -158.97976685]
[94.93788147 -171.59043884]
[95.16120911 -186.58877563]
[95.27288055 -201.58834839]
[95.27288055 -216.58834839]
[92.30331421 -222.49540710]
[92.70273590 -228.16439819]
[95.50285339 -232.03329468]
[95.94946289 -247.02664185]
[96.39606476 -262.01998901]
[96.84267426 -277.01333618]
[96.39606476 -292.00671387]
[95.05783081 -306.94686890]
[93.71959686 -321.88705444]
[92.38136292 -336.82723999]
[91.04312897 -351.76742554]
[89.70489502 -366.70761108]
[88.36666107 -381.64779663]
[87.02842712 -396.58798218]
[85.69019318 -411.52816772]
[84.35195923 -426.46835327]
[83.01372528 -441.40853882]
[68.06517792 -443.20706177]
[53.81735229 -448.07461548]
[40.89310074 -455.79843140]
[29.85741806 -466.04086304]
[21.19273376 -478.35415649]
[15.27783394 -492.20001221]
[12.37128925 -506.97314453]
[12.60016441 -522.02777100]
[15.95445156 -536.70568848]
[22.28751755 -550.36535645]
[31.32250595 -562.40954590]
[42.66444778 -572.31176758]
[55.81752014 -579.63916016]
[70.20673370 -584.07135010]
[85.20304108 -585.41461182]
[100.15087891 -583.61022949]
[114.39678955 -578.73706055]
[127.31800079 -571.00811768]
[138.34965515 -560.76135254]
[147.00949097 -548.44470215]
[152.91894531 -534.59649658]
[155.81967163 -519.82220459]
[155.58488464 -504.76770020]
[152.22482300 -490.09106445]
[145.88638306 -476.43389893]
[136.84664917 -464.39328003]
[125.50081635 -454.49551392]
[112.34486389 -447.17330933]
[97.95391083 -442.74679565]
[99.29214478 -427.80661011]
[100.63037872 -412.86642456]
[101.96861267 -397.92623901]
[103.30684662 -382.98605347]
[104.64508057 -368.04586792]
[105.98331451 -353.10568237]
[107.32154846 -338.16549683]
[108.65978241 -323.22531128]
[109.99801636 -308.28512573]
[111.33625031 -293.34494019]
[120.16458893 -305.47177124]
[134.39889526 -310.20303345]
[148.73011780 -305.77401733]
[157.81306458 -293.83666992]
[158.26002502 -278.84335327]
[149.90429688 -266.38613892]
[135.86235046 -261.11132812]
[121.37149811 -264.98623657]
[111.83602142 -276.56674194]
[111.38941956 -261.57339478]
[110.94281006 -246.58004761]
[110.49620819 -231.58670044]
[110.27288055 -216.58834839]
[110.27288055 -201.58834839]
[113.41637421 -194.89955139]
[110.15954590 -186.36544800]
[109.93621826 -171.36711121]
[117.48316956 -158.52604675]
[109.54126740 -144.84260559]
[109.31793976 -129.84426880]
[117.51536560 -120.94882965]
[117.45205688 -108.45163727]
[108.61653900 -99.05501556]
[108.16993713 -84.06166840]
[107.72332764 -69.06831360]
[107.50000000 -54.06998062]
[107.50000000 -39.06998062]
[107.50000000 -24.06998062]
[107.50000000 -9.06997967]
[115.23729706 3.65729213]
[107.50000000 17.45746422]
[107.50000000 32.45746613]
[107.50000000 47.45746613]
[107.50000000 62.45746613]
[107.50000000 77.45746613]
[107.50000000 92.45746613]
[108.61564636 107.41591644]
[110.84076691 122.24996185]
[113.06587982 137.08399963]
[115.73168182 151.84523010]
[118.83578491 166.52052307]
[121.93989563 181.19583130]
[125.04400635 195.87112427]
[128.14811707 210.54643250]
[139.18388367 214.96778870]
[146.63877869 224.07412720]
[148.75032043 235.52993774]
[145.10769653 246.46826172]
[136.72561646 254.20822144]
[139.39141846 268.96942139]
[142.05720520 283.73065186]
[144.97824097 286.94335938]
[146.56538391 290.55520630]
[146.85693359 294.09786987]
[146.03939819 297.16354370]
[144.41482544 299.44802856]
[146.19729614 314.34173584]
[147.97975159 329.23544312]
[149.76222229 344.12918091]
[151.54469299 359.02288818]
[153.32716370 373.91659546]
[155.33117676 388.78213501]
[157.55628967 403.61618042]
[159.78140259 418.45022583]
[162.00651550 433.28427124]
[164.56234741 448.06491089]
[174.80964661 460.11911011]
[169.66494751 474.09698486]
[172.55021667 488.81689453]
[175.43548584 503.53677368]
[190.34289551 506.50964355]
[202.97509766 514.96514893]
[211.40577698 527.61395264]
[214.34931946 542.52716064]
[211.35685730 557.43066406]
[202.88471985 570.05169678]
[190.22483826 578.46575928]
[175.30775452 581.38964844]
[160.40823364 578.37762451]
[147.79832458 569.88885498]
[139.40095520 557.21795654]
[136.49665833 542.29705811]
[139.52832031 527.40148926]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 197]
[2 196]
[3 195]
[5 193]
[9 192]
[10 191]
[11 190]
[12 189]
[15 188]
[16 187]
[17 186]
[18 185]
[19 184]
[20 183]
[21 178]
[22 177]
[23 176]
[26 171]
[27 170]
[28 169]
[29 168]
[30 167]
[35 166]
[36 165]
[37 164]
[48 163]
[49 162]
[50 161]
[51 160]
[52 159]
[53 158]
[55 156]
[56 155]
[57 154]
[58 153]
[61 152]
[62 151]
[63 150]
[65 147]
[66 146]
[68 144]
[69 143]
[70 141]
[71 140]
[74 139]
[75 138]
[76 137]
[77 136]
[78 127]
[79 126]
[80 125]
[81 124]
[82 123]
[83 122]
[84 121]
[85 120]
[86 119]
[87 118]
[88 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
