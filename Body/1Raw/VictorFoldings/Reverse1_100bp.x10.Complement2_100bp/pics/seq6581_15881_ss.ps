%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[88.49342346 476.65664673]
[79.16091919 464.90261841]
[70.81753540 452.42700195]
[63.51880646 439.31283569]
[57.31328964 425.64739990]
[52.24229431 411.52160645]
[48.33956146 397.02947998]
[45.63106918 382.26748657]
[44.13483429 367.33383179]
[43.86082077 352.32791138]
[44.81084824 337.34957886]
[46.97859955 322.49853516]
[50.34963989 307.87359619]
[54.90154648 293.57208252]
[60.60401535 279.68917847]
[67.41910553 266.31729126]
[75.30145264 253.54541016]
[84.19861603 241.45849609]
[94.05136871 230.13702393]
[104.79415894 219.65631104]
[116.35547638 210.08610535]
[128.65840149 201.49011230]
[141.62103271 193.92553711]
[135.14154053 180.39718628]
[128.66203308 166.86885071]
[122.18254089 153.34049988]
[115.10543823 140.11497498]
[107.44483948 127.21864319]
[99.78424072 114.32231903]
[87.68491364 107.31533051]
[87.31942749 93.33827972]
[79.65883636 80.44194794]
[71.99823761 67.54562378]
[64.33763885 54.64929581]
[56.67704010 41.75297165]
[47.36215591 29.99571800]
[36.56000137 19.58834457]
[25.75784492 9.18097210]
[14.95568848 -1.22640097]
[19.19219780 13.16289997]
[18.01725388 28.11681366]
[11.58544159 41.66789246]
[0.74297345 52.03326416]
[-13.08363533 57.84917831]
[-28.07525635 58.35046005]
[-42.25948715 53.47115326]
[-53.77014160 43.85321045]
[-61.09280396 30.76204491]
[-63.26404190 15.92001915]
[-59.99820328 1.27985907]
[-51.72495651 -11.23227024]
[-39.53279114 -19.97018433]
[-25.02579880 -23.78425980]
[-10.11262226 -22.17268753]
[3.24654174 -15.34605122]
[-4.98226595 -27.88745117]
[-13.21107388 -40.42885208]
[-21.43988228 -52.97025299]
[-34.82378387 -46.16331863]
[-48.87528229 -40.87006378]
[-63.42380905 -37.15474701]
[-78.29275513 -35.06246567]
[-93.30162811 -34.61861801]
[-108.26822662 -35.82859421]
[-123.01087952 -38.67770386]
[-137.35061646 -43.13136292]
[-151.11337280 -49.13550949]
[-164.13208008 -56.61725616]
[-176.24868774 -65.48578644]
[-187.31614685 -75.63343048]
[-197.20007324 -86.93702698]
[-205.78050232 -99.25933838]
[-212.95326233 -112.45079803]
[-218.63130188 -126.35127258]
[-222.74568176 -140.79200745]
[-225.24645996 -155.59773254]
[-226.10327148 -170.58869934]
[-225.30574036 -185.58293152]
[-222.86352539 -200.39842224]
[-218.80627441 -214.85531616]
[-213.18324280 -228.77813721]
[-206.06268311 -241.99784851]
[-197.53105164 -254.35400391]
[-187.69189453 -265.69659424]
[-176.66465759 -275.88790894]
[-164.58320618 -284.80429077]
[-151.59417725 -292.33743286]
[-137.85527039 -298.39596558]
[-123.53325653 -302.90628052]
[-108.80198669 -305.81365967]
[-93.84028625 -307.08279419]
[-78.82978058 -306.69830322]
[-63.95267487 -304.66482544]
[-49.38957214 -301.00708008]
[-35.31725311 -295.76940918]
[-21.90654182 -289.01544189]
[-9.32023239 -280.82717896]
[2.28889036 -271.30395508]
[12.77990055 -260.56143188]
[22.02544785 -248.72999573]
[29.91329956 -235.95326233]
[36.34770584 -222.38632202]
[41.25055695 -208.19389343]
[44.56233597 -193.54823303]
[46.24283981 -178.62713623]
[46.27167511 -163.61174011]
[44.64848709 -148.68429565]
[41.39297867 -134.02603149]
[36.54467392 -119.81486511]
[30.16242027 -106.22332001]
[22.32369614 -93.41638184]
[13.12365627 -81.54952240]
[2.67398071 -70.76678467]
[-8.89848137 -61.19905853]
[-0.66967368 -48.65766144]
[7.55913401 -36.11626053]
[15.78794193 -23.57485962]
[25.36306190 -12.02855778]
[36.16521835 -1.62118411]
[46.96737289 8.78618908]
[57.76953125 19.19356155]
[53.07748032 4.94629431]
[52.95485687 -10.05320454]
[57.41336060 -24.37527657]
[66.02802277 -36.65483475]
[77.97776031 -45.72146988]
[92.12358856 -50.71100616]
[107.11722565 -51.14787674]
[121.52957153 -46.99043655]
[133.98692322 -38.63494873]
[143.30195618 -26.87780762]
[148.58677673 -12.83962536]
[149.33770752 2.14156651]
[145.48315430 16.63785553]
[137.39051819 29.26754951]
[125.83112335 38.82686615]
[111.90675354 44.40467072]
[96.94458771 45.46932220]
[82.37071228 41.91934967]
[69.57336426 34.09237289]
[77.23396301 46.98870087]
[84.89456177 59.88502502]
[92.55516052 72.78135681]
[100.21575928 85.67768097]
[112.31508636 92.68466949]
[112.68057251 106.66172028]
[120.34116364 119.55805206]
[128.00177002 132.45437622]
[132.74392700 118.22370911]
[146.09748840 111.39127350]
[160.41294861 115.87099457]
[167.48973083 129.09669495]
[163.27395630 143.49208069]
[150.18060303 150.81083679]
[135.71089172 146.86100769]
[142.19038391 160.38934326]
[148.66987610 173.91769409]
[155.14938354 187.44604492]
[169.16859436 182.08747864]
[183.57794189 177.88943481]
[198.28152466 174.87986755]
[213.18148804 173.07881165]
[228.17868042 172.49824524]
[243.17329407 173.14201355]
[258.06552124 175.00585938]
[272.75631714 178.07736206]
[287.14782715 182.33609009]
[301.14434814 187.75370789]
[314.65267944 194.29414368]
[327.58297729 201.91387939]
[339.84915161 210.56221008]
[351.36959839 220.18157959]
[362.06762695 230.70796204]
[371.87207031 242.07133484]
[380.71765137 254.19602966]
[388.54550171 267.00140381]
[395.30355835 280.40219116]
[400.94683838 294.30926514]
[405.43777466 308.63003540]
[408.74645996 323.26919556]
[410.85092163 338.12933350]
[411.73712158 353.11157227]
[411.39916992 368.11621094]
[409.83932495 383.04333496]
[407.06796265 397.79367065]
[403.10354614 412.26904297]
[397.97241211 426.37307739]
[391.70870972 440.01196289]
[384.35418701 453.09490967]
[375.95773315 465.53485107]
[366.57522583 477.24902344]
[356.26913452 488.15945435]
[345.10800171 498.19351196]
[333.16616821 507.28442383]
[320.52304077 515.37176514]
[307.26281738 522.40161133]
[293.47369385 528.32720947]
[279.24746704 533.10919189]
[264.67880249 536.71563721]
[249.86462402 539.12261963]
[234.90357971 540.31408691]
[219.89518738 540.28210449]
[204.93934631 539.02691650]
[190.13557434 536.55682373]
[175.58239746 532.88836670]
[161.37666321 528.04583740]
[147.61291504 522.06152344]
[134.38275146 514.97521973]
[121.77421570 506.83410645]
[109.87120819 497.69238281]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 158]
[24 157]
[25 156]
[26 155]
[27 148]
[28 147]
[29 146]
[31 144]
[32 143]
[33 142]
[34 141]
[35 140]
[36 121]
[37 120]
[38 119]
[39 118]
[55 117]
[56 116]
[57 115]
[58 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
