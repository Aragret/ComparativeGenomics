%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[-18.62310219 576.55590820]
[-14.12191010 591.03057861]
[-14.84588909 606.17163086]
[-20.70761681 620.15075684]
[-30.99925995 631.27990723]
[-44.47805405 638.21514893]
[-59.51636887 640.11907959]
[-74.29825592 636.76171875]
[-87.03872681 628.54858398]
[-96.19931030 616.47131348]
[-100.67382050 601.98840332]
[-99.92193604 586.84875488]
[-94.03445435 572.88043213]
[-83.72232056 561.77026367]
[-70.23077393 554.85986328]
[-55.18897247 552.98364258]
[-51.86671448 538.35620117]
[-48.54445267 523.72869873]
[-45.22219467 509.10125732]
[-41.89993668 494.47381592]
[-54.97308731 485.51730347]
[-63.62928009 472.19741821]
[-66.51823425 456.53762817]
[-63.16849518 440.93048096]
[-54.06406784 427.77203369]
[-40.57474518 419.09396362]
[-24.75007439 416.25003052]
[-21.64596367 401.57470703]
[-18.54185295 386.89941406]
[-15.43774319 372.22412109]
[-17.12901115 365.02957153]
[-12.17662716 357.35418701]
[-13.91867447 352.90734863]
[-12.88574219 347.31896973]
[-8.53155422 342.34375000]
[-4.77525330 327.82168579]
[-1.01895261 313.29965210]
[2.73734808 298.77758789]
[6.49364853 284.25552368]
[-3.95691752 295.01589966]
[-17.55830574 301.34063721]
[-32.52102280 302.39758301]
[-46.87646103 298.04772949]
[-58.73591614 288.86331177]
[-66.53907776 276.05273438]
[-69.25930023 261.30145264]
[-66.53869629 246.55024719]
[-58.73520279 233.73988342]
[-46.87550735 224.55578613]
[-32.51995850 220.20628357]
[-17.55727005 221.26362610]
[-3.95604563 227.58871460]
[6.49424219 238.34934998]
[12.41867733 252.12982178]
[13.03746510 267.11938477]
[19.91687775 253.78996277]
[26.79628944 240.46052551]
[33.67570114 227.13110352]
[40.25572968 213.65136719]
[46.53308868 200.02804565]
[52.81045151 186.40473938]
[59.08781052 172.78141785]
[65.36517334 159.15809631]
[62.81684113 141.79512024]
[77.94055939 131.29014587]
[84.01438904 117.57487488]
[90.08822632 103.85961151]
[95.12514496 89.73057556]
[99.09723663 75.26605225]
[103.06933594 60.80153275]
[107.04142761 46.33700943]
[106.29621124 37.23302841]
[111.18183899 31.68754005]
[115.36885071 17.28375816]
[119.55586243 2.87997556]
[118.94626617 -6.23409128]
[123.91391754 -11.70622444]
[116.76529694 -25.54583931]
[121.43280792 -40.02578735]
[134.67082214 -46.75561905]
[138.96495056 -61.12783432]
[143.15196228 -75.53161621]
[147.33897400 -89.93539429]
[146.13629150 -96.43656158]
[148.10224915 -101.76873016]
[151.87101746 -104.70223999]
[156.48503113 -118.97497559]
[161.09902954 -133.24771118]
[165.71304321 -147.52044678]
[170.32705688 -161.79318237]
[174.94105530 -176.06590271]
[177.60685730 -190.82713318]
[178.27664185 -205.81216431]
[178.94642639 -220.79721069]
[179.61621094 -235.78224182]
[180.28599548 -250.76728821]
[177.54290771 -259.48010254]
[181.07894897 -265.96994019]
[181.97177124 -280.94335938]
[182.86457825 -295.91674805]
[169.17663574 -302.52801514]
[159.06436157 -313.87747192]
[154.06982422 -328.23446655]
[154.95463562 -343.40960693]
[161.58387756 -357.08886719]
[172.94664001 -367.18618774]
[187.31018066 -372.16183472]
[202.48417664 -371.25708008]
[216.15467834 -364.60983276]
[226.23704529 -353.23379517]
[231.19380188 -338.86373901]
[230.26907349 -323.69094849]
[223.60386658 -310.02920532]
[212.21456909 -299.96179199]
[197.83799744 -295.02395630]
[196.94517517 -280.05053711]
[196.05235291 -265.07714844]
[195.27104187 -250.09750366]
[194.60125732 -235.11245728]
[193.93147278 -220.12742615]
[193.26168823 -205.14237976]
[192.59188843 -190.15734863]
[200.18179321 -203.09539795]
[211.35647583 -213.10173035]
[225.05081177 -219.22261047]
[239.95956421 -220.87460327]
[254.66171265 -217.90028381]
[267.75595093 -210.58312988]
[277.99423218 -199.62057495]
[284.40069580 -186.05747986]
[286.36471558 -171.18661499]
[283.69909668 -156.42536926]
[276.65789795 -143.18069458]
[265.91226196 -132.71496582]
[252.48637390 -126.02574158]
[237.65992737 -123.75057983]
[222.84606934 -126.10633087]
[209.45677185 -132.86846924]
[198.76818848 -143.39247131]
[191.79913330 -156.67524719]
[189.21379089 -171.45190430]
[184.59979248 -157.17916870]
[179.98577881 -142.90643311]
[175.37176514 -128.63369751]
[170.75775146 -114.36096954]
[166.14375305 -100.08823395]
[161.74275208 -85.74838257]
[157.55574036 -71.34460449]
[153.36872864 -56.94082260]
[154.52020264 -49.64041901]
[149.01066589 -42.35462189]
[156.19427490 -29.35725784]
[151.93530273 -14.75191975]
[138.25376892 -7.30522585]
[133.95964050 7.06698704]
[129.77262878 21.47076797]
[125.58562469 35.87454987]
[121.50595856 50.30910492]
[117.53385925 64.77362823]
[113.56175995 79.23815155]
[109.58966827 93.70267487]
[121.33032227 84.36688232]
[136.15100098 82.05446625]
[150.17762756 87.36989594]
[159.74366760 98.92371368]
[162.34858704 113.69580078]
[157.31146240 127.82475281]
[145.94897461 137.61730957]
[131.23127747 140.51370239]
[117.00551605 135.75683594]
[106.99028015 124.59013367]
[103.80348969 109.93344116]
[97.72966003 123.64871216]
[91.65582275 137.36398315]
[95.56546021 149.65533447]
[90.22418976 160.95376587]
[78.98848724 165.43545532]
[72.71112823 179.05877686]
[66.43376923 192.68209839]
[60.15640640 206.30540466]
[53.87904739 219.92872620]
[54.35939789 225.12644958]
[52.93990326 229.54667664]
[50.23487473 232.59591675]
[47.00513077 234.01051331]
[40.12571716 247.33993530]
[33.24630737 260.66937256]
[26.36689377 273.99880981]
[21.01570702 288.01181030]
[17.25940704 302.53387451]
[13.50310707 317.05593872]
[9.74680614 331.57800293]
[5.99050522 346.10006714]
[2.45083284 360.67642212]
[-0.76244104 375.32821655]
[-3.86655116 390.00354004]
[-6.97066116 404.67883301]
[-10.07477188 419.35412598]
[1.90136683 427.06277466]
[10.50885105 438.37261963]
[14.72996998 451.91275024]
[14.07714462 466.05065918]
[8.64916039 479.08905029]
[-0.88314515 489.46954346]
[-13.35972595 495.95901489]
[-27.27247429 497.79605103]
[-30.59473419 512.42352295]
[-33.91699219 527.05096436]
[-37.23925400 541.67846680]
[-40.56151199 556.30590820]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 210]
[17 209]
[18 208]
[19 207]
[20 206]
[27 198]
[28 197]
[29 196]
[30 195]
[32 194]
[35 193]
[36 192]
[37 191]
[38 190]
[39 189]
[55 188]
[56 187]
[57 186]
[58 185]
[59 181]
[60 180]
[61 179]
[62 178]
[63 177]
[65 174]
[66 173]
[67 172]
[68 161]
[69 160]
[70 159]
[71 158]
[73 157]
[74 156]
[75 155]
[77 154]
[80 151]
[81 149]
[82 148]
[83 147]
[86 146]
[87 145]
[88 144]
[89 143]
[90 142]
[91 141]
[92 122]
[93 121]
[94 120]
[95 119]
[96 118]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
