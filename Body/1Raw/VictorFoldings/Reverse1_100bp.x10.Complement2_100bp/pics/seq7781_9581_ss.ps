%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[158.52107239 563.05590820]
[161.86831665 548.39630127]
[167.64505005 534.51330566]
[175.68508911 521.80639648]
[185.75706482 510.64111328]
[197.57122803 501.33877563]
[210.78762817 494.16696167]
[205.96163940 479.96450806]
[201.13563538 465.76205444]
[196.30963135 451.55960083]
[191.48364258 437.35714722]
[186.65763855 423.15469360]
[181.83164978 408.95223999]
[177.00564575 394.74978638]
[161.61604309 387.96752930]
[155.77842712 371.83566284]
[163.56437683 356.17047119]
[158.52746582 342.04144287]
[153.49053955 327.91241455]
[148.34858704 313.82125854]
[143.10186768 299.76879883]
[140.06311035 297.98040771]
[137.73957825 294.63134766]
[136.85540771 290.07376099]
[137.95001221 284.96994019]
[133.33599854 270.69720459]
[128.72198486 256.42446899]
[124.10797882 242.15174866]
[119.07106781 228.02272034]
[113.61570740 214.04992676]
[108.16034698 200.07711792]
[106.17358398 214.94496155]
[99.28293610 228.26858521]
[88.29789734 238.48274231]
[74.50897980 244.38748169]
[59.53610611 245.28910828]
[45.13825989 241.08172607]
[33.00689316 232.25959778]
[24.56718636 219.85914612]
[20.81062698 205.33714294]
[22.17852974 190.39965820]
[28.51019669 176.80148315]
[39.06179047 166.14016724]
[52.59371948 159.66815186]
[67.51626587 158.14578247]
[82.07633972 161.75190735]
[94.56345367 170.06286621]
[103.51132202 182.10371399]
[101.50730896 167.23818970]
[99.50329590 152.37266541]
[97.49927521 137.50714111]
[95.49526215 122.64160919]
[93.49124908 107.77607727]
[89.37898254 100.84342194]
[91.56977081 92.67449188]
[89.78730774 77.78077698]
[87.34157562 62.98150635]
[84.23746490 48.30620575]
[81.13335419 33.63090134]
[78.02924347 18.95559883]
[74.92513275 4.28029728]
[71.16883850 -10.24176216]
[66.76783752 -24.58160973]
[62.36684036 -38.92145538]
[57.96584320 -53.26130295]
[48.73897552 -41.43485260]
[33.74223328 -41.12231064]
[24.03065109 -52.55407333]
[26.76325035 -67.30307007]
[39.92565536 -74.49688721]
[53.81392288 -68.83373260]
[50.49166489 -83.46119690]
[45.53927994 -91.13658905]
[47.23054886 -98.33113098]
[44.12643814 -113.00643158]
[41.02232742 -127.68173981]
[37.91821671 -142.35704041]
[34.81410599 -157.03234863]
[31.38304520 -171.63465881]
[27.62674522 -186.15672302]
[23.87044334 -200.67878723]
[20.11414337 -215.20083618]
[5.08079767 -214.43702698]
[-9.79851532 -216.71539307]
[-23.91449928 -221.94261169]
[-36.68910980 -229.90466309]
[-47.59923935 -240.27549744]
[-56.19812012 -252.63041687]
[-62.13363266 -266.46350098]
[-65.16272736 -281.20831299]
[-65.16136169 -296.26104736]
[-62.12959290 -311.00531006]
[-56.19156647 -324.83734131]
[-47.59044266 -337.19070435]
[-36.67843628 -347.55953979]
[-23.90237999 -355.51928711]
[-9.78544807 -360.74392700]
[5.09427881 -363.01959229]
[20.12748528 -362.25305176]
[34.69857025 -358.47570801]
[48.21086121 -351.84225464]
[60.11103439 -342.62429810]
[69.91178894 -331.19931030]
[77.21177673 -318.03515625]
[81.71208954 -303.67089844]
[83.22842407 -288.69473267]
[81.69869995 -273.71990967]
[77.18554688 -259.35968018]
[69.87378693 -246.20205688]
[60.06282806 -234.78584290]
[48.15441895 -225.57852173]
[34.63620377 -218.95713806]
[38.39250183 -204.43508911]
[42.14880371 -189.91302490]
[45.90510559 -175.39096069]
[48.74132156 -173.29615784]
[50.70381165 -169.72352600]
[51.10904312 -165.09869385]
[49.48941040 -160.13645935]
[52.59351730 -145.46115112]
[55.69762802 -130.78584290]
[58.80173874 -116.11054230]
[61.90584946 -101.43524170]
[65.11912537 -86.78345490]
[68.44138336 -72.15599823]
[72.30568695 -57.66230011]
[76.70668793 -43.32245255]
[81.10768127 -28.98260689]
[85.50868225 -14.64276028]
[93.47504425 -27.35248566]
[108.06378937 -30.84081078]
[120.91783142 -23.10946846]
[124.67378235 -8.58731842]
[117.18006897 4.40668964]
[102.72943115 8.42899895]
[89.60044098 1.17618716]
[92.70455170 15.85148907]
[95.80866241 30.52679253]
[98.91276550 45.20209503]
[102.01687622 59.87739563]
[111.08538055 47.92907715]
[125.92716217 45.75620651]
[138.04019165 54.60350037]
[140.48556519 69.40283203]
[131.86245728 81.67646790]
[117.11059570 84.39350891]
[104.68102264 75.99831390]
[106.46348572 90.89202881]
[108.35678101 105.77206421]
[110.36079407 120.63759613]
[112.36480713 135.50312805]
[114.36882019 150.36865234]
[116.37283325 165.23417664]
[118.37684631 180.09970093]
[122.13314819 194.62176514]
[127.58850861 208.59455872]
[133.04386902 222.56736755]
[136.52832031 225.15821838]
[138.78056335 228.39733887]
[139.74810791 231.81774902]
[139.53552246 234.98341370]
[138.38070679 237.53773499]
[142.99472046 251.81047058]
[147.60873413 266.08319092]
[152.22274780 280.35592651]
[157.15434265 294.52206421]
[162.40104675 308.57455444]
[168.33448792 315.51950073]
[167.61956787 322.87548828]
[172.65649414 337.00451660]
[177.69340515 351.13354492]
[190.44619751 355.46725464]
[198.26049805 366.19790649]
[198.46463013 379.27615356]
[191.20809937 389.92379761]
[196.03410339 404.12625122]
[200.86009216 418.32870483]
[205.68609619 432.53115845]
[210.51208496 446.73361206]
[215.33808899 460.93606567]
[220.16409302 475.13851929]
[224.99008179 489.34097290]
[239.83981323 486.97589111]
[254.87564087 487.15463257]
[269.66494751 489.87200928]
[283.78222656 495.04986572]
[296.82131958 502.53924561]
[308.40701294 512.12463379]
[318.20599365 523.53021240]
[325.93630981 536.42791748]
[331.37557983 550.44653320]
[334.36727905 565.18280029]
[334.82531738 580.21270752]
[332.73654175 595.10382080]
[328.16104126 609.42767334]
[321.23046875 622.77215576]
[312.14422607 634.75329590]
[301.16372681 645.02642822]
[288.60491943 653.29589844]
[274.82913208 659.32385254]
[260.23275757 662.93676758]
[245.23570251 664.03076172]
[230.26951599 662.57434082]
[215.76478577 658.60943604]
[202.13882446 652.25006104]
[189.78370667 643.67926025]
[179.05490112 633.14355469]
[170.26110840 620.94616699]
[163.65531921 607.43792725]
[159.42761230 593.00762939]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 182]
[8 181]
[9 180]
[10 179]
[11 178]
[12 177]
[13 176]
[14 175]
[17 171]
[18 170]
[19 169]
[20 167]
[21 166]
[25 165]
[26 164]
[27 163]
[28 162]
[29 157]
[30 156]
[31 155]
[48 154]
[49 153]
[50 152]
[51 151]
[52 150]
[53 149]
[55 148]
[56 147]
[57 140]
[58 139]
[59 138]
[60 137]
[61 136]
[62 129]
[63 128]
[64 127]
[65 126]
[71 125]
[72 124]
[74 123]
[75 122]
[76 121]
[77 120]
[78 119]
[79 115]
[80 114]
[81 113]
[82 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
