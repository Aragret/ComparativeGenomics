%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[42.31438065 604.47442627]
[30.51208115 614.05432129]
[15.94069195 618.38360596]
[0.82224196 616.80218506]
[-12.53781414 609.55120850]
[-22.10216522 597.73626709]
[-26.41231918 583.15924072]
[-24.81100464 568.04284668]
[-17.54241371 554.69238281]
[-5.71495295 545.14355469]
[8.86777592 540.85260010]
[10.42829895 525.93395996]
[11.98882198 511.01538086]
[13.54934502 496.09677124]
[15.10986805 481.17816162]
[16.67039108 466.25955200]
[18.23091507 451.34094238]
[5.92678642 459.92050171]
[-8.86378098 457.42266846]
[-17.66807938 445.27835083]
[-15.44260693 430.44436646]
[-3.46221495 421.41827393]
[11.41018391 423.37066650]
[20.65474510 435.18215942]
[23.54001808 420.46228027]
[26.42529106 405.74237061]
[24.55161667 401.34939575]
[25.41770363 395.73272705]
[29.62183189 390.63009644]
[24.89558220 376.50521851]
[35.49723434 364.76147461]
[38.81949615 350.13403320]
[34.09324265 336.00915527]
[44.69489670 324.26541138]
[48.01715851 309.63793945]
[51.23043060 294.98617554]
[54.33454132 280.31085205]
[52.52648163 275.89047241]
[53.47609711 270.28732300]
[57.75572968 265.24783325]
[61.29540253 250.67146301]
[64.83507538 236.09509277]
[60.31964493 221.90142822]
[71.09497070 210.31681824]
[74.63464355 195.74044800]
[77.73875427 181.06513977]
[80.40454865 166.30392456]
[83.07034302 151.54270935]
[77.71810150 137.64297485]
[87.78479004 125.43755341]
[90.45059204 110.67633820]
[85.90407562 97.45435333]
[94.78819275 86.65786743]
[86.04564667 73.76579285]
[88.95941925 58.83379364]
[101.30391693 50.57855988]
[103.96971893 35.81734467]
[106.63551331 21.05612564]
[108.52880096 6.17609119]
[109.64445496 -8.78236198]
[110.76010132 -23.74081612]
[111.87574768 -38.69926834]
[112.99140167 -53.65772247]
[110.72332764 -58.35909653]
[110.50704193 -62.99660873]
[111.97463226 -66.79940033]
[114.50555420 -69.25434875]
[116.28801727 -84.14806366]
[118.07048798 -99.04178619]
[119.18613434 -114.00023651]
[119.63273621 -128.99359131]
[120.07934570 -143.98693848]
[119.96768188 -158.98652649]
[111.62188721 -172.42744446]
[118.78316498 -185.48750305]
[110.43737030 -198.92842102]
[117.59865570 -211.98849487]
[116.92887115 -226.97352600]
[116.25908661 -241.95857239]
[115.58929443 -256.94360352]
[114.91950989 -271.92864990]
[111.68914795 -277.69720459]
[111.83503723 -283.37838745]
[114.45960999 -287.36843872]
[111.20278168 -295.90255737]
[114.34627533 -302.59136963]
[114.34627533 -317.59136963]
[114.34627533 -332.59136963]
[114.34627533 -347.59136963]
[114.34627533 -362.59136963]
[114.34627533 -377.59136963]
[114.34627533 -392.59136963]
[114.34627533 -407.59136963]
[104.77159119 -423.32052612]
[114.13231659 -438.16452026]
[113.90898895 -453.16284180]
[113.68566132 -468.16119385]
[113.46233368 -483.15954590]
[113.23900604 -498.15786743]
[99.55358124 -505.01116943]
[90.63003540 -517.44616699]
[88.51894379 -532.60534668]
[93.70541382 -547.00531006]
[104.99763489 -557.33703613]
[119.80073547 -561.22637939]
[134.71307373 -557.77954102]
[146.30790710 -547.78857422]
[151.92082214 -533.54943848]
[150.26200867 -518.33410645]
[141.71266174 -505.63891602]
[128.23735046 -498.38119507]
[128.46067810 -483.38287354]
[128.68400574 -468.38452148]
[128.90733337 -453.38616943]
[129.13066101 -438.38784790]
[137.58929443 -429.74041748]
[137.89810181 -417.24688721]
[129.34628296 -407.59136963]
[129.34628296 -392.59136963]
[129.34628296 -377.59136963]
[129.34628296 -362.59136963]
[129.34628296 -347.59136963]
[129.34628296 -332.59136963]
[129.34628296 -317.59136963]
[129.34628296 -302.59136963]
[129.45794678 -287.59176636]
[129.90455627 -272.59841919]
[130.57434082 -257.61340332]
[131.24412537 -242.62835693]
[131.91390991 -227.64331055]
[132.58369446 -212.65827942]
[140.88157654 -200.28918457]
[133.76820374 -186.15728760]
[142.06608582 -173.78820801]
[134.95271301 -159.65631104]
[146.84716797 -168.79534912]
[161.44433594 -165.34243774]
[167.98374939 -151.84295654]
[161.64477539 -138.24819946]
[147.10028076 -134.57971191]
[135.07269287 -143.54032898]
[134.62608337 -128.54698181]
[134.17948914 -113.55362701]
[145.81141663 -123.02454376]
[160.74679565 -121.63371277]
[170.42996216 -110.17787170]
[169.31394958 -95.21944427]
[158.03807068 -85.32729340]
[143.06166077 -86.16810608]
[132.96420288 -97.25931549]
[131.18173218 -82.36560059]
[129.39927673 -67.47188568]
[127.94985199 -52.54207230]
[126.83420563 -37.58362198]
[125.71855164 -22.62516594]
[124.60290527 -7.66671324]
[123.48725891 7.29173994]
[134.79588318 -2.56294417]
[149.79040527 -2.96875095]
[161.61549377 6.25984955]
[164.86491394 20.90366554]
[158.05303955 34.26774216]
[144.29420471 40.24219894]
[129.87873840 36.09560394]
[121.39672852 23.72192192]
[118.73093414 38.48313904]
[116.06513977 53.24435806]
[124.74232483 65.29599762]
[122.24910736 80.30393982]
[109.54940796 89.32366180]
[114.09592438 102.54564667]
[105.21180725 113.34213257]
[102.54601288 128.10334778]
[107.70758057 143.05891418]
[97.83155823 154.20851135]
[95.16576385 168.96972656]
[92.49996948 183.73094177]
[94.11273956 187.76243591]
[94.33625793 191.70129395]
[93.37024689 195.12214661]
[91.53204346 197.70817566]
[89.21102142 199.28012085]
[85.67134857 213.85649109]
[89.93359375 229.09275818]
[79.41144562 239.63476562]
[75.87177277 254.21113586]
[72.33209991 268.78750610]
[69.00984192 283.41497803]
[65.90573120 298.09027100]
[67.19151306 307.13375854]
[62.64461899 312.96020508]
[59.32235718 327.58767700]
[63.81097794 342.75878906]
[53.44695663 353.45626831]
[50.12469482 368.08374023]
[54.61331558 383.25485229]
[44.24929047 393.95236206]
[41.14517975 408.62765503]
[38.25991058 423.34753418]
[35.37463760 438.06744385]
[33.14952087 452.90148926]
[31.58899689 467.82006836]
[30.02847290 482.73867798]
[28.46795082 497.65728760]
[26.90742683 512.57592773]
[25.34690475 527.49450684]
[23.78638077 542.41308594]
[37.16547012 549.62896729]
[46.76087189 561.41864014]
[51.10935974 575.98431396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 207]
[12 206]
[13 205]
[14 204]
[15 203]
[16 202]
[17 201]
[24 200]
[25 199]
[26 198]
[29 197]
[31 195]
[32 194]
[34 192]
[35 191]
[36 189]
[37 188]
[40 187]
[41 186]
[42 185]
[44 183]
[45 182]
[46 177]
[47 176]
[48 175]
[50 173]
[51 172]
[53 170]
[56 167]
[57 166]
[58 165]
[59 157]
[60 156]
[61 155]
[62 154]
[63 153]
[67 152]
[68 151]
[69 150]
[70 143]
[71 142]
[72 141]
[73 135]
[75 133]
[77 131]
[78 130]
[79 129]
[80 128]
[81 127]
[84 126]
[86 125]
[87 124]
[88 123]
[89 122]
[90 121]
[91 120]
[92 119]
[93 118]
[95 115]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
