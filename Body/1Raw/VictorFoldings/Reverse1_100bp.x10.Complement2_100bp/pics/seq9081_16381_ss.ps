%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[65.16780090 495.64398193]
[57.89299011 482.40563965]
[54.64387894 467.65368652]
[55.68386078 452.58401489]
[60.92862701 438.41824341]
[69.95301056 426.30471802]
[82.02544403 417.22546387]
[96.16726685 411.91644287]
[95.05162048 396.95800781]
[93.93596649 381.99954224]
[92.82032013 367.04110718]
[91.70467377 352.08264160]
[90.58901978 337.12417603]
[81.92654419 325.00762939]
[88.61600494 310.67022705]
[76.99892426 320.15933228]
[62.30541992 317.14257812]
[55.36698532 303.84378052]
[61.29838562 290.06631470]
[75.72720337 285.96643066]
[88.01624298 294.56497192]
[88.01624298 279.56497192]
[88.01624298 264.56497192]
[88.01624298 249.56495667]
[88.01624298 234.56495667]
[77.33537292 224.24728394]
[77.12168884 209.03514099]
[88.01624298 197.90202332]
[88.01624298 182.90202332]
[88.01624298 167.90202332]
[75.72557831 176.50082397]
[61.29714203 172.39956665]
[55.36705017 158.62155151]
[62.30673981 145.32339478]
[77.00053406 142.30802917]
[88.61600494 151.79676819]
[89.73165131 136.83830261]
[90.84729767 121.87985992]
[91.96295166 106.92140198]
[92.40955353 91.92805481]
[92.18622589 76.92971802]
[91.96289825 61.93137741]
[91.73957062 46.93304062]
[89.51445770 32.09899521]
[85.32744598 17.69521523]
[81.14043427 3.29143286]
[76.95342255 -11.11234951]
[72.76641083 -25.51613045]
[68.57939911 -39.91991425]
[55.01024628 -47.56948090]
[50.96920776 -62.23660660]
[58.34552383 -75.12557983]
[54.15851212 -89.52935791]
[49.97150040 -103.93314362]
[47.33268738 -89.16707611]
[41.28184891 -75.44165039]
[32.16118622 -63.53310013]
[20.48652458 -54.11491394]
[6.91811752 -47.71973419]
[-7.77667522 -44.70923996]
[-22.76679039 -45.25368881]
[-37.20446777 -49.32229233]
[-50.27318192 -56.68494797]
[-61.23383713 -66.92526245]
[-69.46655273 -79.46409607]
[-74.50572968 -93.59232330]
[-76.06638336 -108.51091003]
[-74.06024170 -123.37615204]
[-68.60076904 -137.34733582]
[-59.99671936 -149.63433838]
[-48.73469543 -159.54226685]
[-35.45162582 -166.51075745]
[-20.89872169 -170.14573669]
[-5.89902878 -170.24162292]
[8.69915104 -166.79296875]
[22.07022095 -159.99484253]
[33.45797729 -150.23170471]
[42.21839523 -138.05569458]
[47.85630417 -124.15441132]
[48.97195435 -139.11285400]
[50.08760452 -154.07131958]
[51.20325089 -169.02976990]
[52.31890106 -183.98822021]
[50.29546738 -187.83004761]
[49.66337967 -191.72427368]
[50.26826477 -195.22706604]
[51.82745743 -197.99031067]
[53.97234726 -199.79519653]
[55.97636032 -214.66072083]
[57.98037720 -229.52624512]
[45.58951187 -241.03982544]
[42.53318787 -257.50677490]
[49.82113647 -272.40130615]
[64.40322876 -279.94055176]
[66.18569946 -294.83425903]
[67.96816254 -309.72799683]
[69.75063324 -324.62170410]
[71.53309631 -339.51541138]
[57.52209473 -345.11489868]
[45.43834305 -354.15069580]
[36.10572815 -366.00668335]
[30.16056633 -379.87454224]
[28.00820732 -394.80871582]
[29.79540443 -409.79098511]
[35.40029907 -423.79983521]
[44.44074631 -435.88009644]
[56.30035019 -445.20812988]
[70.17050171 -451.14794922]
[85.10551453 -453.29452515]
[100.08708954 -451.50155640]
[114.09376526 -445.89123535]
[126.17053223 -436.84613037]
[135.49398804 -424.98294067]
[141.42843628 -411.11047363]
[143.56925964 -396.17465210]
[141.77049255 -381.19375610]
[136.15478516 -367.18927002]
[127.10501099 -355.11596680]
[115.23821259 -345.79711914]
[101.36347961 -339.86801147]
[86.42681122 -337.73294067]
[84.64434814 -322.83923340]
[82.86187744 -307.94552612]
[81.07941437 -293.05178833]
[79.29695129 -278.15808105]
[89.88873291 -270.03057861]
[95.12340546 -257.63128662]
[93.53512573 -244.15736389]
[85.43254852 -233.14070129]
[72.84590149 -227.52223206]
[70.84188843 -212.65670776]
[68.83787537 -197.79118347]
[67.27735138 -182.87257385]
[66.16170502 -167.91412354]
[65.04605865 -152.95567322]
[63.93040848 -137.99720764]
[62.81475830 -123.03875732]
[64.37528229 -108.12015533]
[68.56229401 -93.71636963]
[72.74930573 -79.31259155]
[85.88565063 -72.38641357]
[90.33706665 -57.83857346]
[82.98317719 -44.10692596]
[87.17018890 -29.70314217]
[91.35720062 -15.29936028]
[95.54421234 -0.89557844]
[99.73122406 13.50820351]
[103.91823578 27.91198540]
[106.94198608 13.21991444]
[114.30313110 0.15035085]
[125.30006409 -10.05099869]
[138.88461304 -16.41180611]
[153.76200867 -18.32579994]
[168.51420593 -15.61054897]
[181.73513794 -8.52485561]
[192.16465759 2.25591707]
[198.80870056 15.70421505]
[201.03398132 30.53823280]
[198.62843323 45.34408569]
[191.82130432 58.71057510]
[181.26141357 69.36369324]
[167.95527649 76.28804779]
[153.17114258 78.82365417]
[138.31813049 76.72884369]
[124.81195831 70.20326996]
[113.93992615 59.86891556]
[106.73790741 46.70971298]
[106.96123505 61.70804977]
[107.18456268 76.70639038]
[107.40789032 91.70472717]
[118.60532379 81.72386932]
[133.58790588 82.44641113]
[143.77294922 93.45845032]
[143.32598877 108.45178986]
[132.50305176 118.83756256]
[117.50403595 118.66632843]
[106.92140198 108.03704834]
[105.80575562 122.99550629]
[104.69010162 137.95396423]
[103.57445526 152.91241455]
[103.01624298 167.90202332]
[103.01624298 182.90202332]
[103.01624298 197.90202332]
[113.91079712 209.03514099]
[113.69712067 224.24728394]
[103.01624298 234.56495667]
[103.01624298 249.56495667]
[103.01624298 264.56497192]
[103.01624298 279.56497192]
[103.01624298 294.56497192]
[103.57445526 309.55456543]
[112.31673431 322.74105835]
[105.54747772 336.00854492]
[106.66312408 350.96697998]
[107.77877045 365.92544556]
[108.89442444 380.88391113]
[110.01007080 395.84234619]
[111.12571716 410.80081177]
[125.89862823 413.95324707]
[139.18432617 421.14123535]
[149.90579224 431.78204346]
[157.19389343 445.01306152]
[160.45782471 459.76174927]
[159.43298340 474.83245850]
[154.20245361 489.00347900]
[145.19024658 501.12606812]
[133.12693787 510.21746826]
[118.99045563 515.54064941]
[103.92677307 516.66418457]
[89.15704346 513.49688721]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 198]
[9 197]
[10 196]
[11 195]
[12 194]
[13 193]
[15 191]
[21 190]
[22 189]
[23 188]
[24 187]
[25 186]
[28 183]
[29 182]
[30 181]
[36 180]
[37 179]
[38 178]
[39 177]
[40 170]
[41 169]
[42 168]
[43 167]
[44 148]
[45 147]
[46 146]
[47 145]
[48 144]
[49 143]
[52 140]
[53 139]
[54 138]
[79 137]
[80 136]
[81 135]
[82 134]
[83 133]
[88 132]
[89 131]
[90 130]
[94 125]
[95 124]
[96 123]
[97 122]
[98 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
