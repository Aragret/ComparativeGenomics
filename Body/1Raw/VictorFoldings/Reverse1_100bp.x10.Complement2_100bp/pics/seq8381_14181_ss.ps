%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[281.02902222 371.79779053]
[274.95516968 358.08255005]
[268.88134766 344.36727905]
[262.80749512 330.65200806]
[250.57934570 322.14782715]
[252.06594849 306.39660645]
[245.99212646 292.68133545]
[239.91828918 278.96606445]
[234.33557129 274.12301636]
[233.85781860 265.00109863]
[227.98884583 251.19691467]
[219.76004028 238.65551758]
[209.43338013 227.77618408]
[199.10670471 216.89685059]
[186.30557251 218.36665344]
[174.82380676 212.10156250]
[168.96058655 200.19219971]
[171.05743408 186.88739014]
[160.89387512 175.85551453]
[150.73033142 164.82363892]
[140.56678772 153.79174805]
[130.40324402 142.75987244]
[120.23969269 131.72799683]
[109.91302490 120.84866333]
[99.42552185 110.12428284]
[91.98622131 107.02117157]
[88.86319733 99.16130066]
[78.53652954 88.28195953]
[68.20986176 77.40262604]
[53.09742737 72.72021484]
[49.94718552 58.16256714]
[39.62051773 47.28323364]
[24.50808334 42.60082245]
[21.35784149 28.04316902]
[11.03117275 17.16383553]
[0.70450419 6.28450108]
[-14.40792847 1.60209072]
[-17.55817032 -12.95556164]
[-27.88484001 -23.83489609]
[-42.99727249 -28.51730537]
[-46.14751434 -43.07495880]
[-56.47418213 -53.95429230]
[-66.80084991 -64.83362579]
[-77.12751770 -75.71295929]
[-87.45418549 -86.59229279]
[-97.86156464 -97.39445496]
[-108.34906006 -108.11883545]
[-120.03038788 -98.69060516]
[-132.55503845 -90.41547394]
[-145.80958557 -83.36836243]
[-159.67399597 -77.61310577]
[-174.02268982 -73.20182037]
[-188.72575378 -70.17445374]
[-203.64999390 -68.55842590]
[-218.66027832 -68.36837769]
[-233.62066650 -69.60601807]
[-248.39566040 -72.26014709]
[-262.85144043 -76.30673218]
[-276.85711670 -81.70911407]
[-290.28585815 -88.41837311]
[-303.01599121 -96.37374878]
[-314.93228149 -105.50318909]
[-325.92681885 -115.72402191]
[-335.89996338 -126.94367981]
[-344.76147461 -139.06056213]
[-352.43103027 -151.96490479]
[-358.83923340 -165.53988647]
[-363.92800903 -179.66252136]
[-367.65130615 -194.20494080]
[-369.97534180 -209.03543091]
[-370.87915039 -224.01968384]
[-370.35449219 -239.02200317]
[-368.40612793 -253.90650940]
[-365.05169678 -268.53842163]
[-360.32159424 -282.78521729]
[-354.25866699 -296.51785278]
[-346.91778564 -309.61199951]
[-338.36547852 -321.94903564]
[-328.67913818 -333.41723633]
[-317.94656372 -343.91278076]
[-306.26489258 -353.34057617]
[-293.73992920 -361.61526489]
[-280.48513794 -368.66186523]
[-266.62051392 -374.41662598]
[-252.27165222 -378.82739258]
[-237.56848145 -381.85421753]
[-222.64418030 -383.46969604]
[-207.63388062 -383.65921021]
[-192.67355347 -382.42102051]
[-177.89865112 -379.76635742]
[-163.44300842 -375.71923828]
[-149.43753052 -370.31634521]
[-136.00904846 -363.60659790]
[-123.27919006 -355.65075684]
[-111.36322784 -346.52087402]
[-100.36908722 -336.29965210]
[-90.39633179 -325.07962036]
[-81.53527832 -312.96243286]
[-73.86617279 -300.05780029]
[-67.45847321 -286.48260498]
[-62.37020874 -272.35977173]
[-58.64746094 -257.81719971]
[-56.32394028 -242.98663330]
[-55.42070007 -228.00234985]
[-55.94590759 -213.00004578]
[-57.89481735 -198.11561584]
[-61.24977112 -183.48382568]
[-65.98039246 -169.23721313]
[-72.04383087 -155.50479126]
[-79.38517761 -142.41091919]
[-87.93795013 -130.07420349]
[-97.62467957 -118.60633087]
[-87.13718414 -107.88195038]
[-80.21311188 -105.29756165]
[-76.57485199 -96.91896057]
[-66.24818420 -86.03962708]
[-55.92151642 -75.16029358]
[-45.59484863 -64.28096008]
[-35.26818085 -53.40162659]
[-20.89438057 -49.49737930]
[-17.00550461 -34.16156387]
[-6.67883635 -23.28223038]
[7.69496346 -19.37798309]
[11.58383846 -4.04216766]
[21.91050720 6.83716679]
[32.23717499 17.71650124]
[46.61097717 21.62074852]
[50.49985123 36.95656204]
[60.82651901 47.83589935]
[75.20031738 51.74014664]
[79.08919525 67.07595825]
[89.41586304 77.95529175]
[99.74253082 88.83462524]
[110.14990234 99.63678741]
[120.63740540 110.36116791]
[126.89053345 112.50823975]
[130.56852722 116.84059906]
[131.27157593 121.56445312]
[141.43511963 132.59632874]
[151.59866333 143.62820435]
[161.76220703 154.66007996]
[171.92576599 165.69195557]
[182.08930969 176.72384644]
[199.57823181 177.11972046]
[211.14215088 189.79216003]
[209.98603821 206.57017517]
[220.31271362 217.44950867]
[230.63937378 228.32884216]
[226.21218872 213.99707031]
[225.29426575 199.02517700]
[227.93756104 184.25991821]
[233.99256897 170.53633118]
[243.11683655 158.63053894]
[254.79434204 149.21589661]
[268.36468506 142.82482910]
[283.06039429 139.81878662]
[298.05035400 140.36778259]
[312.48678589 144.44076538]
[325.55328369 151.80737305]
[336.51083374 162.05101013]
[344.73974609 174.59234619]
[349.77462769 188.72209167]
[351.33074951 203.64115906]
[349.32009888 218.50579834]
[343.85641479 232.47532654]
[335.24862671 244.75971985]
[323.98361206 254.66421509]
[310.69842529 261.62869263]
[296.14440918 265.25924683]
[281.14468384 265.35058594]
[266.54754639 261.89752197]
[253.17855835 255.09533691]
[241.79302979 245.32795715]
[247.66198730 259.13214111]
[253.63356018 272.89224243]
[259.70739746 286.60751343]
[265.78121948 300.32278442]
[278.44381714 309.80795288]
[276.52276611 324.57815552]
[282.59661865 338.29342651]
[288.67044067 352.00869751]
[294.74426270 365.72396851]
[309.45190430 362.51922607]
[324.50360107 362.34103394]
[339.28295898 365.19671631]
[353.18481445 370.96932983]
[365.63989258 379.42251587]
[376.13815308 390.21005249]
[384.24972534 402.89025879]
[389.64239502 416.94387817]
[392.09536743 431.79541016]
[391.50820923 446.83666992]
[387.90493774 461.45178223]
[381.43310547 475.04223633]
[372.35775757 487.05151367]
[361.05047607 496.98785400]
[347.97433472 504.44433594]
[333.66476440 509.11566162]
[318.70776367 510.81051636]
[303.71575928 509.45950317]
[289.30273438 505.11798096]
[276.05883789 497.96368408]
[264.52639771 488.28958130]
[255.17770386 476.49185181]
[248.39553833 463.05355835]
[244.45765686 448.52505493]
[243.52528381 433.50122070]
[245.63662720 418.59729004]
[250.70521545 404.42355347]
[258.52349854 391.56045532]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 182]
[2 181]
[3 180]
[4 179]
[6 177]
[7 176]
[8 175]
[10 174]
[11 173]
[12 148]
[13 147]
[14 146]
[18 143]
[19 142]
[20 141]
[21 140]
[22 139]
[23 138]
[24 135]
[25 134]
[27 133]
[28 132]
[29 131]
[31 129]
[32 128]
[34 126]
[35 125]
[36 124]
[38 122]
[39 121]
[41 119]
[42 118]
[43 117]
[44 116]
[45 115]
[46 113]
[47 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
