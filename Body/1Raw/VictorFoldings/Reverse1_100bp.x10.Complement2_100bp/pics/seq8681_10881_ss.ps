%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[272.82824707 554.29248047]
[285.47827148 546.11993408]
[280.23156738 532.06744385]
[274.98483276 518.01501465]
[269.73812866 503.96252441]
[264.49139404 489.91006470]
[259.24468994 475.85757446]
[245.62957764 469.92761230]
[240.10847473 455.75115967]
[246.42066956 441.51058960]
[241.17395020 427.45812988]
[235.92723083 413.40563965]
[230.68052673 399.35317993]
[225.43380737 385.30068970]
[220.18708801 371.24822998]
[214.62785339 357.31643677]
[208.75889587 343.51226807]
[196.65870667 334.82693481]
[198.37965393 319.09960938]
[192.10229492 305.47631836]
[179.50660706 297.52661133]
[180.28840637 281.72473145]
[173.60820007 268.29437256]
[166.92800903 254.86398315]
[160.24781799 241.43360901]
[153.56762695 228.00323486]
[140.97192383 220.05354309]
[141.75372314 204.25166321]
[135.96032715 199.66271973]
[135.07572937 190.57122803]
[128.59623718 177.04287720]
[122.11673737 163.51454163]
[115.63723755 149.98619080]
[109.15774536 136.45783997]
[102.67824554 122.92949677]
[96.19875336 109.40115356]
[90.15337372 104.06955719]
[89.72517395 95.62281036]
[83.44781494 81.99949646]
[77.01428223 75.51509094]
[77.18009186 68.12629700]
[71.10626221 54.41103363]
[59.37715530 49.04531860]
[54.60060120 37.49679947]
[58.83323669 26.16492462]
[52.96427536 12.36074829]
[47.09531403 -1.44342887]
[42.92366028 -4.58100414]
[40.60457230 -8.60283566]
[40.16464996 -12.65518284]
[41.28779221 -15.99746990]
[36.04107666 -30.04994202]
[30.10764885 -36.99488831]
[30.82255745 -44.35088348]
[25.78564072 -58.47991180]
[20.74872589 -72.60894012]
[15.71180916 -86.73797607]
[10.67489338 -100.86700439]
[4.84552431 -107.89952087]
[5.66987324 -115.24405670]
[0.84387565 -129.44651794]
[-5.70743275 -115.95279694]
[-19.34778023 -109.71252441]
[-33.84098053 -113.57867432]
[-42.56094360 -125.78368378]
[-41.52101517 -140.74758911]
[-31.19663620 -151.62910461]
[-16.30797577 -153.45333862]
[-3.66079569 -145.38479614]
[-6.98305511 -160.01226807]
[-10.30531502 -174.63972473]
[-13.62757397 -189.26718140]
[-16.94983292 -203.89463806]
[-27.42780876 -211.41627502]
[-29.89378929 -223.66790771]
[-23.56049347 -233.97401428]
[-33.98612595 -245.87429810]
[-29.05010033 -259.92724609]
[-32.15420914 -274.60253906]
[-35.25831985 -289.27783203]
[-38.36243057 -303.95315552]
[-41.46654129 -318.62844849]
[-44.57065201 -333.30374146]
[-59.61895370 -333.11712646]
[-74.41445923 -335.87017822]
[-88.38846588 -341.45706177]
[-101.00386047 -349.66305542]
[-111.77572632 -360.17269897]
[-120.29003143 -372.58209229]
[-126.21949768 -386.41421509]
[-129.33622742 -401.13739014]
[-129.52041626 -416.18572998]
[-126.76497650 -430.98080444]
[-121.17582703 -444.95388794]
[-112.96780396 -457.56796265]
[-102.45639038 -468.33813477]
[-90.04563141 -476.85043335]
[-76.21254730 -482.77764893]
[-61.48885727 -485.89199829]
[-46.44049454 -486.07376099]
[-31.64588165 -483.31591797]
[-17.67368126 -477.72451782]
[-5.06094837 -469.51443481]
[5.70751619 -459.00128174]
[14.21780205 -446.58914185]
[20.14279556 -432.75509644]
[23.25475883 -418.03091431]
[23.43407249 -402.98251343]
[20.67384720 -388.18835449]
[15.08017635 -374.21707153]
[6.86806679 -361.60565186]
[-3.64682984 -350.83889771]
[-16.06034851 -342.33062744]
[-29.89534760 -336.40786743]
[-26.79123878 -321.73254395]
[-23.68712807 -307.05725098]
[-20.58301735 -292.38195801]
[-17.47890854 -277.70666504]
[-14.37479782 -263.03134155]
[-4.17119265 -252.18074036]
[-8.88519001 -237.07812500]
[3.53075647 -224.67607117]
[-2.32237363 -207.21690369]
[0.99988598 -192.58944702]
[4.32214546 -177.96197510]
[7.64440489 -163.33451843]
[10.96666431 -148.70706177]
[15.04633141 -134.27250671]
[19.87232971 -120.07005310]
[24.80392265 -105.90391541]
[29.84083939 -91.77488708]
[34.87775421 -77.64585876]
[39.91467285 -63.51683044]
[44.95158768 -49.38780212]
[50.09354782 -35.29665756]
[55.34026337 -21.24418831]
[60.89949036 -7.31238985]
[66.76845551 6.49178743]
[72.63741302 20.29596329]
[87.20706177 30.07820702]
[84.82152557 48.33719635]
[90.89536285 62.05246353]
[97.07112885 75.72213745]
[103.34848785 89.34545135]
[109.72709656 102.92166138]
[116.20658875 116.45000458]
[122.68608856 129.97834778]
[129.16558838 143.50669861]
[135.64508057 157.03503418]
[142.12457275 170.56338501]
[148.60406494 184.09173584]
[155.18409729 197.57147217]
[168.25761414 206.48178101]
[166.99800110 221.32302856]
[173.67819214 234.75341797]
[180.35838318 248.18379211]
[187.03858948 261.61416626]
[193.71878052 275.04452515]
[206.79228210 283.95486450]
[205.53266907 298.79611206]
[209.23439026 301.06576538]
[211.76663208 304.09103394]
[213.03547668 307.41149902]
[213.10615540 310.58349609]
[212.18383789 313.23065186]
[224.70382690 322.90332031]
[222.56307983 337.64331055]
[228.43203735 351.44747925]
[232.60368347 354.58505249]
[234.92277527 358.60687256]
[235.36270142 362.65924072]
[234.23954773 366.00152588]
[239.48626709 380.05398560]
[244.73298645 394.10644531]
[249.97970581 408.15893555]
[255.22642517 422.21139526]
[260.47314453 436.26385498]
[274.57366943 442.88302612]
[279.69439697 457.20895386]
[273.29714966 470.61087036]
[278.54388428 484.66333008]
[283.79058838 498.71582031]
[289.03729248 512.76824951]
[294.28402710 526.82073975]
[299.53073120 540.87322998]
[314.44146729 538.75549316]
[329.45877075 539.89312744]
[343.88031006 544.23291016]
[357.03155518 551.57177734]
[368.29736328 561.56652832]
[377.15084839 573.74969482]
[383.17791748 587.55145264]
[386.09664917 602.32629395]
[385.77053833 617.38311768]
[382.21484375 632.01770020]
[375.59588623 645.54553223]
[366.22320557 657.33398438]
[354.53521729 666.83160400]
[341.07858276 673.59423828]
[326.48266602 677.30548096]
[311.43017578 677.79187012]
[296.62512207 675.03057861]
[282.75997925 669.15075684]
[270.48324585 660.42749023]
[260.36914062 649.26867676]
[252.89067078 636.19635010]
[248.39765930 621.82183838]
[247.10023499 606.81744385]
[249.05908203 591.88500977]
[254.18260193 577.72296143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 185]
[3 184]
[4 183]
[5 182]
[6 181]
[7 180]
[10 177]
[11 176]
[12 175]
[13 174]
[14 173]
[15 172]
[16 168]
[17 167]
[19 165]
[20 160]
[22 158]
[23 157]
[24 156]
[25 155]
[26 154]
[28 152]
[30 151]
[31 150]
[32 149]
[33 148]
[34 147]
[35 146]
[36 145]
[38 144]
[39 143]
[41 142]
[42 141]
[45 139]
[46 138]
[47 137]
[51 136]
[52 135]
[54 134]
[55 133]
[56 132]
[57 131]
[58 130]
[60 129]
[61 128]
[69 127]
[70 126]
[71 125]
[72 124]
[73 123]
[76 121]
[78 119]
[79 118]
[80 117]
[81 116]
[82 115]
[83 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
