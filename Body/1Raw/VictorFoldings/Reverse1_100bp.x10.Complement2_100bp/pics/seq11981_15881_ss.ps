%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[115.50441742 511.04818726]
[121.06145477 525.11853027]
[121.99651337 540.21759033]
[118.21797943 554.86602783]
[110.09604645 567.62884521]
[98.42641449 577.25561523]
[84.35234833 582.80322266]
[69.25269318 583.72821045]
[54.60675049 579.93981934]
[41.84938431 571.80938721]
[32.23043060 560.13330078]
[26.69225502 546.05548096]
[25.77743340 530.95520020]
[29.57559204 516.31182861]
[37.71462250 503.55990601]
[49.39714813 493.94879150]
[63.47863388 488.42004395]
[78.57951355 487.51535034]
[82.33581543 472.99328613]
[86.09211731 458.47122192]
[89.84841919 443.94915771]
[92.29414368 429.14990234]
[93.40979767 414.19143677]
[94.52544403 399.23297119]
[95.64109039 384.27453613]
[96.75674438 369.31607056]
[97.87239075 354.35763550]
[98.98803711 339.39916992]
[99.99230194 324.43283081]
[100.55050659 309.44320679]
[100.77383423 294.44488525]
[100.99716187 279.44653320]
[100.66218567 264.45028687]
[99.76937103 249.47686768]
[98.87655640 234.50346375]
[87.00896454 228.38771057]
[79.65402985 217.11611938]
[78.82243347 203.57440186]
[84.83815002 191.29312134]
[96.22592163 183.52720642]
[95.55613708 168.54216003]
[94.88635254 153.55712891]
[94.21656799 138.57208252]
[93.54678345 123.58705139]
[92.87699890 108.60201263]
[92.09567261 93.62237549]
[91.20285797 78.64897156]
[89.75344086 63.71916199]
[87.74942780 48.85363007]
[85.74541473 33.98810196]
[70.16239929 30.67006111]
[56.68033981 22.23089218]
[46.91956711 9.70652866]
[42.04572296 -5.37745380]
[42.63060379 -21.19164658]
[48.58512115 -35.82468414]
[59.17231750 -47.51426315]
[73.09850311 -54.85936737]
[70.87338257 -69.69341278]
[68.64826965 -84.52745056]
[66.42314911 -99.36149597]
[64.19803619 -114.19554138]
[50.00187683 -119.88907623]
[40.62352371 -131.84497070]
[38.50285721 -146.79051208]
[44.11026764 -160.69779968]
[55.84693146 -169.86929321]
[53.62181473 -184.70333862]
[51.39669800 -199.53738403]
[47.85702515 -214.11375427]
[43.03102493 -228.31620789]
[37.88906860 -242.40734863]
[32.43370819 -256.38015747]
[26.97835350 -270.35296631]
[21.52299500 -284.32574463]
[6.79368591 -281.29995728]
[-8.23512363 -280.80709839]
[-23.13102531 -282.86141968]
[-37.46543121 -287.40374756]
[-50.82591629 -294.30340576]
[-62.82807159 -303.36190796]
[-73.12656403 -314.31860352]
[-81.42510223 -326.85821533]
[-87.48490143 -340.62002563]
[-91.13162231 -355.20800781]
[-92.26033020 -370.20248413]
[-90.83856201 -385.17199707]
[-86.90721893 -399.68588257]
[-80.57941437 -413.32650757]
[-72.03720856 -425.70141602]
[-61.52638626 -436.45458984]
[-49.34935760 -445.27661133]
[-35.85647964 -451.91363525]
[-21.43597221 -456.17474365]
[-6.50274086 -457.93731689]
[8.51355457 -457.15060425]
[23.18086624 -453.83731079]
[37.07718658 -448.09271240]
[49.80268860 -440.08212280]
[60.99123383 -430.03601074]
[70.32091522 -418.24343872]
[77.52328491 -405.04367065]
[82.39112091 -390.81649780]
[84.78437042 -375.97128296]
[84.63417053 -360.93515015]
[81.94484711 -346.14071655]
[76.79377747 -332.01361084]
[69.32916260 -318.96035767]
[59.76577759 -307.35650635]
[48.37877655 -297.53588867]
[35.49579239 -289.78109741]
[40.95114899 -275.80831909]
[46.40650940 -261.83551025]
[51.86186600 -247.86271667]
[54.92691422 -246.11978149]
[57.30003738 -242.80566406]
[58.25197220 -238.26176453]
[57.23348236 -233.14221191]
[62.05947876 -218.93975830]
[65.70046997 -233.49114990]
[75.22779846 -245.07691956]
[88.80189514 -251.46002197]
[103.80180359 -251.40798950]
[117.33128357 -244.93086243]
[126.77799988 -233.27928162]
[130.31794739 -218.70297241]
[127.26760864 -204.01638794]
[118.21596527 -192.05529785]
[104.91073608 -185.12919617]
[89.92095947 -184.57539368]
[76.14093018 -190.50082397]
[66.23074341 -201.76249695]
[68.45585632 -186.92845154]
[70.68097687 -172.09442139]
[84.59201813 -166.77009583]
[94.03305054 -155.12007141]
[96.39073181 -140.21008301]
[90.93297577 -126.02877045]
[79.03207397 -116.42066193]
[81.25719452 -101.58661652]
[83.48231506 -86.75257111]
[85.70742798 -71.91852570]
[87.93254852 -57.08448410]
[101.88558197 -54.69151688]
[114.43647766 -48.09635925]
[124.35198975 -37.93207932]
[130.65319824 -25.18318176]
[132.71215820 -11.09024525]
[130.31445312 2.97079015]
[123.68145752 15.62296009]
[113.44992828 25.62312126]
[100.61093903 31.98409081]
[102.61495209 46.84961700]
[104.61896515 61.71514511]
[115.65064240 51.55138016]
[130.49766541 53.68822098]
[138.21534729 66.55046082]
[133.11451721 80.65653992]
[118.95530701 85.60798645]
[106.17626190 77.75614929]
[107.06907654 92.72956085]
[110.65433502 99.94887543]
[107.86203766 107.93222809]
[108.53182220 122.91726685]
[109.20160675 137.90229797]
[109.87139130 152.88734436]
[110.54117584 167.87237549]
[111.21096039 182.85742188]
[125.45076752 191.98561096]
[131.38493347 207.64724731]
[126.86005402 223.59991455]
[113.84996033 233.61065674]
[114.74277496 248.58406067]
[115.63559723 263.55746460]
[127.39266205 254.24235535]
[142.03962708 257.47753906]
[148.77929688 270.87817383]
[142.64341736 284.56579590]
[128.15516663 288.45040894]
[115.99549866 279.66986084]
[115.77217102 294.66821289]
[115.54884338 309.66653442]
[118.09272766 314.22457886]
[118.58466339 318.84100342]
[117.34601593 322.72439575]
[114.96570587 325.32565308]
[117.57877350 334.07833862]
[113.94649506 340.51483154]
[112.83084106 355.47326660]
[111.71519470 370.43173218]
[110.59954834 385.39016724]
[109.48389435 400.34863281]
[108.36824799 415.30709839]
[107.25260162 430.26553345]
[116.29676056 418.29879761]
[129.59765625 411.36434937]
[144.58708191 410.80117798]
[158.37081909 416.71798706]
[168.28742981 427.97235107]
[172.42219543 442.39120483]
[169.97674561 457.19052124]
[161.42326355 469.51278687]
[148.41328430 476.97872925]
[133.45883179 478.14682007]
[119.44738007 472.79153442]
[109.08432007 461.94683838]
[104.37047577 447.70547485]
[100.61417389 462.22750854]
[96.85787964 476.74957275]
[93.10157776 491.27163696]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 210]
[19 209]
[20 208]
[21 207]
[22 194]
[23 193]
[24 192]
[25 191]
[26 190]
[27 189]
[28 188]
[29 186]
[30 182]
[31 181]
[32 180]
[33 174]
[34 173]
[35 172]
[40 168]
[41 167]
[42 166]
[43 165]
[44 164]
[45 163]
[46 161]
[47 160]
[48 154]
[49 153]
[50 152]
[58 143]
[59 142]
[60 141]
[61 140]
[62 139]
[67 134]
[68 133]
[69 132]
[70 119]
[71 118]
[72 114]
[73 113]
[74 112]
[75 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
