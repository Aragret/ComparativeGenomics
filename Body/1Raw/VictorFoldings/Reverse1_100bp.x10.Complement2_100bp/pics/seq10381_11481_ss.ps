%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[264.43975830 518.94268799]
[271.59384155 505.73382568]
[280.41088867 493.57177734]
[290.74002075 482.66470337]
[302.40444946 473.19921875]
[294.55270386 460.41836548]
[286.70092773 447.63751221]
[278.84918213 434.85668945]
[270.99743652 422.07583618]
[263.14569092 409.29498291]
[255.29391479 396.51416016]
[251.96791077 395.34368896]
[249.04357910 392.50408936]
[247.29925537 388.20169067]
[247.39169312 382.98263550]
[240.11845398 369.86392212]
[227.35713196 368.08123779]
[217.81011963 359.14050293]
[215.11605835 346.14233398]
[220.47787476 333.78656006]
[213.40077209 320.56103516]
[206.32366943 307.33551025]
[199.24656677 294.10995483]
[192.16946411 280.88442993]
[176.78518677 272.44104004]
[177.53221130 254.04203796]
[170.25898743 240.92333984]
[162.98574829 227.80465698]
[155.71252441 214.68595886]
[148.43930054 201.56726074]
[141.16606140 188.44856262]
[128.22795105 181.06922913]
[128.30339050 165.24819946]
[121.03015900 152.12951660]
[105.52187347 143.91610718]
[105.99488831 125.50801086]
[98.52714539 112.49906158]
[90.77075958 99.66011810]
[82.72958374 86.99759674]
[74.68840790 74.33506775]
[66.64723969 61.67254639]
[58.60606384 49.01002121]
[50.56489182 36.34749603]
[42.52371979 23.68497086]
[38.60597610 21.81273651]
[35.77273941 19.06732559]
[34.16533661 15.89688969]
[33.76503754 12.74945068]
[34.40695190 10.02069950]
[27.13372421 -3.09799409]
[13.67538357 -11.41566563]
[14.27104473 -26.29835510]
[-0.65536094 -30.75258636]
[-7.84456921 -44.16041946]
[-3.50615382 -58.36301422]
[-10.77938366 -71.48171234]
[-18.05261230 -84.60040283]
[-31.51095200 -92.91807556]
[-30.91529274 -107.80076599]
[-38.18852234 -120.91945648]
[-39.57889938 -105.98403931]
[-47.67330551 -93.35547638]
[-60.66342545 -85.85502625]
[-75.64723969 -85.15830231]
[-89.27731323 -91.42096710]
[-98.50866699 -103.24391937]
[-101.27898407 -117.98587799]
[-96.96937561 -132.35345459]
[-86.54261017 -143.13688660]
[-72.32805634 -147.92715454]
[-57.50128937 -145.65406799]
[-45.37462616 -136.82543945]
[-50.41154099 -150.95446777]
[-55.44845963 -165.08349609]
[-60.48537445 -179.21252441]
[-65.52229309 -193.34155273]
[-70.55920410 -207.47059631]
[-85.40070343 -205.02729797]
[-100.43995667 -205.27354431]
[-115.19351959 -208.20140076]
[-129.18710327 -213.71675110]
[-141.97090149 -221.64230347]
[-153.13395691 -231.72328186]
[-162.31741333 -243.63562012]
[-169.22607422 -256.99639893]
[-173.63784790 -271.37609863]
[-175.41091919 -286.31250000]
[-174.48828125 -301.32543945]
[-170.89959717 -315.93234253]
[-164.76023865 -329.66360474]
[-156.26754761 -342.07788086]
[-145.69453430 -352.77606201]
[-133.38107300 -361.41427612]
[-119.72299957 -367.71481323]
[-105.15936279 -371.47515869]
[-90.15830994 -372.57440186]
[-75.20207977 -370.97723389]
[-60.77144623 -366.73501587]
[-47.33029175 -359.98406982]
[-35.31069946 -350.94143677]
[-25.09904480 -339.89779663]
[-17.02359200 -327.20816040]
[-11.34393406 -313.28045654]
[-8.24264812 -298.56237793]
[-7.81942654 -283.52706909]
[-10.08787537 -268.65783691]
[-14.97507286 -254.43267822]
[-22.32391739 -241.30886841]
[-31.89817047 -229.70829773]
[-43.39006424 -220.00384521]
[-56.43017578 -212.50750732]
[-51.39326096 -198.37847900]
[-46.35634613 -184.24945068]
[-41.31942749 -170.12042236]
[-36.28251266 -155.99139404]
[-31.24559593 -141.86236572]
[-25.06982803 -128.19268799]
[-17.79659843 -115.07399750]
[-4.85848808 -107.69465637]
[-4.93391848 -91.87363434]
[2.33931088 -78.75493622]
[9.61254025 -65.63624573]
[23.95667076 -61.79157257]
[31.51964188 -48.59096146]
[27.38973808 -33.57158661]
[40.32784653 -26.19224930]
[40.25241852 -10.37122345]
[47.52564621 2.74747038]
[55.18624496 15.64379692]
[63.22741699 28.30632210]
[71.26859283 40.96884537]
[79.30976105 53.63137054]
[87.35093689 66.29389954]
[95.39211273 78.95642090]
[103.43328094 91.61894989]
[107.04007721 92.98402405]
[110.02764893 95.93228912]
[111.70242310 100.15154266]
[111.53610229 105.03131866]
[119.00384521 118.04026794]
[131.22752380 122.15663147]
[137.17961121 133.14555359]
[134.14884949 144.85627747]
[141.42207336 157.97497559]
[154.88041687 166.29264832]
[154.28475952 181.17533875]
[161.55798340 194.29403687]
[168.83122253 207.41271973]
[176.10444641 220.53141785]
[183.37767029 233.65011597]
[190.65090942 246.76881409]
[202.81195068 251.06671143]
[208.59976196 262.14303589]
[205.39498901 273.80734253]
[212.47209167 287.03286743]
[219.54919434 300.25839233]
[226.62629700 313.48391724]
[233.70339966 326.70944214]
[250.53594971 331.47229004]
[258.55798340 346.63677979]
[253.23715210 362.59069824]
[260.51037598 375.70938110]
[268.07476807 388.66238403]
[275.92651367 401.44323730]
[283.77825928 414.22409058]
[291.63003540 427.00491333]
[299.48178101 439.78576660]
[307.33352661 452.56661987]
[315.18530273 465.34744263]
[328.90103149 459.22094727]
[343.29910278 454.93719482]
[358.13311768 452.56945801]
[373.14932251 452.15826416]
[388.09069824 453.71066284]
[402.70162964 457.20007324]
[416.73205566 462.56680298]
[429.94195557 469.71902466]
[442.10522461 478.53433228]
[453.01379395 488.86187744]
[462.48095703 500.52496338]
[470.34472656 513.32403564]
[476.47058105 527.04003906]
[480.75366211 541.43829346]
[483.12069702 556.27246094]
[483.53115845 571.28869629]
[481.97805786 586.22998047]
[478.48794556 600.84075928]
[473.12054443 614.87091064]
[465.96771240 628.08050537]
[457.15182495 640.24334717]
[446.82376099 651.15142822]
[435.16021729 660.61804199]
[422.36077881 668.48120117]
[408.64447021 674.60638428]
[394.24600220 678.88879395]
[379.41171265 681.25512695]
[364.39547729 681.66485596]
[349.45425415 680.11102295]
[334.84365845 676.62023926]
[320.81372070 671.25213623]
[307.60452271 664.09869385]
[295.44207764 655.28222656]
[284.53451538 644.95361328]
[275.06845093 633.28967285]
[267.20590210 620.48986816]
[261.08135986 606.77325439]
[256.79965210 592.37457275]
[254.43403625 577.54016113]
[254.02499390 562.52392578]
[255.57952881 547.58276367]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 169]
[6 168]
[7 167]
[8 166]
[9 165]
[10 164]
[11 163]
[15 162]
[16 161]
[20 158]
[21 157]
[22 156]
[23 155]
[24 154]
[26 151]
[27 150]
[28 149]
[29 148]
[30 147]
[31 146]
[33 144]
[34 143]
[36 140]
[37 139]
[38 135]
[39 134]
[40 133]
[41 132]
[42 131]
[43 130]
[44 129]
[49 128]
[50 127]
[52 125]
[55 122]
[56 121]
[57 120]
[59 118]
[60 117]
[72 116]
[73 115]
[74 114]
[75 113]
[76 112]
[77 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
