%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[80.39123535 498.33511353]
[76.62224579 512.92083740]
[69.70166779 526.30187988]
[59.97663116 537.80718994]
[47.93494415 546.85955811]
[34.18061447 553.00494385]
[19.40354538 555.93518066]
[4.34495687 555.50317383]
[-10.23982334 551.73065186]
[-23.61922646 544.80682373]
[-35.12215042 535.07897949]
[-44.17160797 523.03509521]
[-50.31368637 509.27929688]
[-53.24030304 494.50149536]
[-52.80465317 479.44302368]
[-49.02859497 464.85916138]
[-42.10153198 451.48144531]
[-32.37092590 439.98086548]
[-20.32485199 430.93432617]
[-6.56754398 424.79559326]
[8.21094036 421.87255859]
[23.26931953 422.31185913]
[27.02561951 407.78979492]
[30.78192139 393.26773071]
[34.53821945 378.74566650]
[38.29452133 364.22360229]
[42.05082321 349.70153809]
[45.48188400 335.09924316]
[48.58599472 320.42391968]
[51.69010544 305.74862671]
[45.35943985 289.38128662]
[57.78086090 275.78753662]
[60.66613388 261.06765747]
[63.55140686 246.34776306]
[66.21720123 231.58654785]
[68.66292572 216.78727722]
[71.10865784 201.98800659]
[73.55438232 187.18873596]
[71.80931854 184.12489319]
[71.46154785 180.06359863]
[72.96372986 175.67079163]
[76.45396423 171.78938293]
[79.55807495 157.11408997]
[73.22477722 146.80796814]
[75.69075775 134.55633545]
[86.16873169 127.03470612]
[89.49098969 112.40724945]
[84.11772156 96.51686859]
[95.64781189 84.33355713]
[98.75192261 69.65824890]
[101.85603333 54.98294830]
[104.96014404 40.30764771]
[107.51597595 25.52699280]
[109.51998901 10.66146469]
[111.52400208 -4.20406389]
[113.52802277 -19.06959152]
[99.52009583 -24.62510300]
[87.25634766 -33.36654282]
[77.44712830 -44.78224945]
[70.65933990 -58.20581436]
[67.28366852 -72.85498810]
[67.51210785 -87.87725830]
[71.32703400 -102.39946747]
[78.50250244 -115.57856750]
[88.61759186 -126.65055084]
[101.08112335 -134.97474670]
[115.16619873 -140.07089233]
[130.05259705 -141.64685059]
[132.05661011 -156.51237488]
[133.94989014 -171.39241028]
[135.73236084 -186.28613281]
[129.68977356 -200.90795898]
[138.88464355 -212.62561035]
[140.66711426 -227.51933289]
[142.44958496 -242.41304016]
[144.23204041 -257.30676270]
[142.38217163 -261.23510742]
[141.92460632 -265.15368652]
[142.68530273 -268.62597656]
[144.36631775 -271.31683350]
[146.58966064 -273.02413940]
[149.25546265 -287.78536987]
[151.92124939 -302.54656982]
[154.58705139 -317.30780029]
[140.20155334 -321.61331177]
[126.38858795 -327.50244141]
[113.32186890 -334.90115356]
[101.16571808 -343.71636963]
[90.07301331 -353.83724976]
[80.18326569 -365.13647461]
[71.62084198 -377.47198486]
[64.49341583 -390.68865967]
[58.89064026 -404.62023926]
[54.88296127 -419.09152222]
[52.52078629 -433.92056274]
[51.83382416 -448.92083740]
[52.83070755 -463.90368652]
[55.49890137 -478.68072510]
[59.80485535 -493.06610107]
[65.69441223 -506.87887573]
[73.09350586 -519.94537354]
[81.90908813 -532.10125732]
[92.03028870 -543.19366455]
[103.32981873 -553.08306885]
[115.66558838 -561.64514160]
[128.88246155 -568.77215576]
[142.81420898 -574.37451172]
[157.28562927 -578.38177490]
[172.11471558 -580.74353027]
[187.11500549 -581.42999268]
[202.09785461 -580.43267822]
[216.87480164 -577.76403809]
[231.26004028 -573.45764160]
[245.07264709 -567.56768799]
[258.13894653 -560.16821289]
[270.29455566 -551.35229492]
[281.38665771 -541.23071289]
[291.27572632 -529.93090820]
[299.83740234 -517.59484863]
[306.96405029 -504.37780762]
[312.56597900 -490.44589233]
[316.57281494 -475.97433472]
[318.93408203 -461.14517212]
[319.62014771 -446.14486694]
[318.62237549 -431.16204834]
[315.95330811 -416.38519287]
[311.64648438 -402.00006104]
[305.75610352 -388.18765259]
[298.35623169 -375.12158203]
[289.53991699 -362.96621704]
[279.41806030 -351.87442017]
[268.11791992 -341.98568726]
[255.78164673 -333.42437744]
[242.56436157 -326.29812622]
[228.63227844 -320.69659424]
[214.16061401 -316.69021606]
[199.33137512 -314.32937622]
[184.33103943 -313.64376831]
[169.34826660 -314.64199829]
[166.68246460 -299.88076782]
[164.01667786 -285.11956787]
[161.35087585 -270.35833740]
[159.12576294 -255.52429199]
[157.34329224 -240.63058472]
[155.56083679 -225.73686218]
[153.77836609 -210.84313965]
[159.94844055 -197.28662109]
[150.62608337 -184.50366211]
[148.84361267 -169.60993958]
[151.16999817 -162.59498596]
[146.92213440 -154.50836182]
[144.91812134 -139.64283752]
[158.85577393 -134.18112183]
[171.08853149 -125.53708649]
[180.90284729 -114.20962524]
[187.72489929 -100.85435486]
[191.15431213 -86.24562073]
[190.98747253 -71.23161316]
[187.22976685 -56.68511963]
[180.09541321 -43.45280075]
[169.99528503 -32.30588531]
[157.51329041 -23.89524460]
[143.37254333 -18.71337891]
[128.39355469 -17.06557846]
[126.38953400 -2.20005012]
[124.38552094 12.66547775]
[122.38150787 27.53100586]
[135.71080017 20.65133095]
[149.46195984 26.64347267]
[153.49812317 41.09024429]
[144.84400940 53.34202957]
[129.87908936 54.36726379]
[119.63544464 43.41175461]
[116.53134155 58.08705902]
[113.42723083 72.76235962]
[110.32312012 87.43766022]
[116.07622528 97.56401825]
[113.58132935 108.94016266]
[104.11845398 115.72950745]
[100.79619598 130.35696411]
[106.64932251 147.81613159]
[94.23337555 160.21820068]
[91.12926483 174.89349365]
[88.35365295 189.63446045]
[85.90792847 204.43373108]
[83.46219635 219.23300171]
[81.01647186 234.03227234]
[82.98316193 240.34445190]
[81.66476440 245.87246704]
[78.27130127 249.23303223]
[75.38602448 263.95294189]
[72.50075531 278.67282104]
[79.03562927 289.79299927]
[76.32943726 301.99383545]
[66.36540985 308.85272217]
[63.26129532 323.52804565]
[60.15718460 338.20333862]
[61.77681732 343.16558838]
[61.37158966 347.79040527]
[59.40909958 351.36303711]
[56.57288361 353.45785522]
[52.81658173 367.97991943]
[49.06027985 382.50198364]
[45.30397797 397.02401733]
[41.54767990 411.54608154]
[37.79137802 426.06814575]
[51.17413712 432.98547363]
[62.68177032 442.70773315]
[71.73706818 454.74722290]
[77.88581085 468.50006104]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 206]
[23 205]
[24 204]
[25 203]
[26 202]
[27 201]
[28 197]
[29 196]
[30 195]
[32 192]
[33 191]
[34 190]
[35 187]
[36 186]
[37 185]
[38 184]
[42 183]
[43 182]
[46 180]
[47 179]
[49 176]
[50 175]
[51 174]
[52 173]
[53 167]
[54 166]
[55 165]
[56 164]
[68 152]
[69 151]
[70 149]
[71 148]
[73 146]
[74 145]
[75 144]
[76 143]
[81 142]
[82 141]
[83 140]
[84 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
