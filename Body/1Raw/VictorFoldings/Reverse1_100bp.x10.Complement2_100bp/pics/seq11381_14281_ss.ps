%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[34.34020996 515.71173096]
[24.63534546 504.24169922]
[16.62131310 491.53259277]
[10.45411015 477.83181763]
[6.25378084 463.40600586]
[4.10208702 448.53604126]
[4.04091215 433.51132202]
[6.07144642 418.62429810]
[10.15416622 404.16479492]
[16.20959854 390.41424561]
[24.11987305 377.64028931]
[33.73101425 366.09161377]
[44.85594177 355.99298096]
[57.27809906 347.54098511]
[70.75569153 340.90014648]
[85.02636719 336.19973755]
[82.36057281 321.43850708]
[79.69477081 306.67730713]
[77.02897644 291.91607666]
[74.36318207 277.15487671]
[71.69738770 262.39364624]
[69.03159332 247.63243103]
[64.87091064 262.04385376]
[57.42498398 275.06530762]
[47.11491013 285.96035767]
[34.52378082 294.11285400]
[20.36367798 299.06176758]
[5.43542814 300.52713013]
[-9.41670418 298.42614746]
[-23.35276031 292.87759399]
[-35.58458710 284.19531250]
[-45.42041397 272.87026978]
[-52.30398178 259.54296875]
[-55.84598923 244.96717834]
[-55.84611511 229.96717834]
[-52.30435562 215.39129639]
[-45.42101669 202.06390381]
[-35.58538055 190.73869324]
[-23.35370255 182.05618286]
[-9.41774178 176.50740051]
[5.43435478 174.40615845]
[20.36262894 175.87129211]
[34.52281570 180.81994629]
[47.11408615 188.97222900]
[57.42434311 199.86712646]
[64.87049103 212.88844299]
[69.03159332 227.30084229]
[71.69738770 212.53962708]
[74.36318207 197.77841187]
[77.02897644 183.01719666]
[79.69477081 168.25598145]
[82.36057281 153.49475098]
[85.02636719 138.73353577]
[87.69216156 123.97232056]
[90.24799347 109.19166565]
[81.51039886 121.38406372]
[70.45783234 131.52511597]
[57.56026077 139.18360901]
[43.36608887 144.03390503]
[28.47885895 145.86978149]
[13.53158760 144.61315918]
[-0.84016031 140.31748962]
[-14.02529144 133.16540527]
[-25.46316719 123.46102142]
[-34.66744614 111.61698151]
[-41.24674988 98.13689423]
[-44.92133331 83.59394073]
[-45.53494263 68.60649872]
[-43.06149292 53.81183624]
[-37.60615158 39.83903503]
[-29.40088463 27.28221703]
[-18.79458618 16.67531395]
[-6.23823929 8.46933079]
[7.73425388 3.01319289]
[22.52877426 0.53889728]
[37.51625443 1.15165222]
[52.05941772 4.82540274]
[65.53987885 11.40394020]
[77.38444519 20.60754013]
[87.08947754 32.04486084]
[94.24231720 45.22958374]
[98.53881073 59.60108948]
[99.79628754 74.54828644]
[97.96121979 89.43579102]
[106.19002533 76.89439392]
[114.41883850 64.35298920]
[122.64764404 51.81158829]
[123.27113342 33.40798187]
[139.24079895 26.13220406]
[147.28196716 13.46967888]
[145.23890686 0.73434609]
[152.19709778 -9.64675617]
[163.97331238 -12.41214466]
[172.20211792 -24.95354462]
[180.43092346 -37.49494553]
[188.65972900 -50.03634644]
[196.88853455 -62.57774734]
[185.31608582 -72.14546967]
[174.86640930 -82.92820740]
[165.66636658 -94.79507446]
[157.82763672 -107.60200500]
[151.44538879 -121.19355011]
[146.59707642 -135.40470886]
[143.34156799 -150.06298828]
[141.71838379 -164.99041748]
[141.74722290 -180.00582886]
[143.42771912 -194.92692566]
[146.73950195 -209.57257080]
[151.64234924 -223.76501465]
[158.07676697 -237.33193970]
[165.96461487 -250.10868835]
[175.21015930 -261.94012451]
[185.70117188 -272.68264771]
[197.31028748 -282.20587158]
[209.89660645 -290.39413452]
[223.30731201 -297.14810181]
[237.37963867 -302.38577271]
[251.94273376 -306.04351807]
[266.81982422 -308.07699585]
[281.83035278 -308.46148682]
[296.79205322 -307.19235229]
[311.52331543 -304.28497314]
[325.84533691 -299.77465820]
[339.58422852 -293.71612549]
[352.57327271 -286.18295288]
[364.65472412 -277.26660156]
[375.68194580 -267.07525635]
[385.52111816 -255.73268127]
[394.05273438 -243.37654114]
[401.17330933 -230.15681458]
[406.79632568 -216.23400879]
[410.85357666 -201.77711487]
[413.29580688 -186.96162415]
[414.09335327 -171.96737671]
[413.23651123 -156.97640991]
[410.73574829 -142.17070007]
[406.62136841 -127.72995758]
[400.94332886 -113.82948303]
[393.77056885 -100.63802338]
[385.19012451 -88.31571198]
[375.30621338 -77.01211548]
[364.23873901 -66.86447144]
[352.12213135 -57.99594116]
[339.10342407 -50.51419449]
[325.34066772 -44.51005173]
[311.00094604 -40.05638885]
[296.25830078 -37.20727921]
[281.29168701 -35.99730301]
[266.28280640 -36.44115067]
[251.41386414 -38.53343201]
[236.86534119 -42.24874878]
[222.81384277 -47.54200363]
[209.42994690 -54.34893799]
[201.20114136 -41.80753708]
[192.97232056 -29.26613617]
[184.74351501 -16.72473717]
[176.51470947 -4.18333673]
[176.45919800 13.36556244]
[159.94448853 21.51085091]
[151.90332031 34.17337799]
[154.23165894 46.04373169]
[147.63606262 56.65890121]
[135.18904114 60.04039764]
[126.96023560 72.58179474]
[118.73143005 85.12319946]
[110.50261688 97.66459656]
[105.04726410 111.63739777]
[106.73557281 120.61444855]
[102.45337677 126.63811493]
[99.78758240 141.39933777]
[97.12178802 156.16055298]
[94.45599365 170.92176819]
[91.79019928 185.68298340]
[89.12439728 200.44419861]
[86.45860291 215.20542908]
[83.79280853 229.96664429]
[83.79280853 244.96664429]
[86.45860291 259.72784424]
[89.12439728 274.48907471]
[91.79019928 289.25030518]
[94.45599365 304.01150513]
[97.12178802 318.77273560]
[99.78758240 333.53393555]
[114.80091858 332.94583130]
[129.74998474 334.45297241]
[144.34379578 338.02600098]
[158.29829407 343.59542847]
[171.34182739 351.05279541]
[183.22050476 360.25296021]
[193.70310974 371.01684570]
[202.58560181 383.13491821]
[209.69505310 396.37130737]
[214.89311218 410.46832275]
[218.07858276 425.15161133]
[219.18945312 440.13534546]
[218.20410156 455.12783813]
[215.14170837 469.83731079]
[210.06188965 483.97735596]
[203.06352234 497.27282715]
[194.28283691 509.46484375]
[183.89073181 520.31616211]
[172.08950806 529.61547852]
[159.10888672 537.18182373]
[145.20153809 542.86785889]
[130.63815308 546.56304932]
[115.70222473 548.19531250]
[100.68449402 547.73291016]
[85.87727356 545.18493652]
[71.56879425 540.60089111]
[58.03757477 534.07000732]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 183]
[17 182]
[18 181]
[19 180]
[20 179]
[21 178]
[22 177]
[47 176]
[48 175]
[49 174]
[50 173]
[51 172]
[52 171]
[53 170]
[54 169]
[55 167]
[84 166]
[85 165]
[86 164]
[87 163]
[89 160]
[90 159]
[93 157]
[94 156]
[95 155]
[96 154]
[97 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
