%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[187.34004211 619.24157715]
[179.48432922 606.45397949]
[172.65615845 593.08947754]
[166.89758301 579.23040771]
[162.24415588 564.96228027]
[158.72453308 550.37304688]
[156.36044312 535.55261230]
[155.16642761 520.59240723]
[155.14988708 505.58459473]
[156.31088257 490.62176514]
[158.64228821 475.79617310]
[162.12971497 461.19918823]
[166.75166321 446.92080688]
[172.47964478 433.04910278]
[179.27833557 419.66955566]
[187.10581970 406.86471558]
[195.91383362 394.71343994]
[205.64807129 383.29074097]
[216.24853516 372.66696167]
[227.64985657 362.90765381]
[239.78173828 354.07299805]
[231.92999268 341.29214478]
[224.07823181 328.51132202]
[209.57673645 325.31097412]
[201.43186951 312.46124268]
[204.88700867 297.27243042]
[197.03524780 284.49157715]
[189.18348694 271.71072388]
[181.33174133 258.92990112]
[176.97717285 256.96856689]
[173.80845642 252.25091553]
[173.44302368 245.64955139]
[165.97529602 232.64059448]
[158.50755310 219.63165283]
[151.03981018 206.62269592]
[143.57206726 193.61373901]
[131.98132324 190.15232849]
[125.65336609 179.37547302]
[128.45082092 166.78431702]
[121.17759705 153.66563416]
[113.90436554 140.54693604]
[106.63114166 127.42823792]
[99.35791016 114.30954742]
[87.47257233 106.94541931]
[87.52339935 92.96368408]
[80.62539673 86.97574615]
[80.24119568 79.59508514]
[73.16409302 66.36955261]
[66.08698273 53.14402771]
[59.00988007 39.91849899]
[54.57493973 37.16561508]
[51.90628815 33.36671829]
[51.10658646 29.36977959]
[51.92707062 25.94061852]
[45.44757462 12.41227245]
[38.96807861 -1.11607337]
[32.48858261 -14.64441872]
[26.00908661 -28.17276382]
[23.73220062 -13.34657860]
[14.90048122 -1.22219312]
[1.48695636 5.49177313]
[-13.51175785 5.29540300]
[-26.74491119 -1.76743376]
[-35.25618362 -14.11888218]
[-37.14413071 -28.99959564]
[-31.98698616 -43.08518600]
[-20.93686676 -53.22889709]
[-6.46239710 -57.16459656]
[8.20278931 -54.01303864]
[19.78246498 -44.47827148]
[15.59545326 -58.88205338]
[11.40844250 -73.28583527]
[7.00744438 -87.62568665]
[2.39343500 -101.89841461]
[-2.22057414 -116.17115021]
[-6.83458328 -130.44387817]
[-11.44859314 -144.71661377]
[-16.06260109 -158.98934937]
[-30.97026825 -156.98902893]
[-45.99552155 -157.68293762]
[-60.65536499 -161.04876709]
[-74.47854614 -166.97831726]
[-87.02069855 -175.28097534]
[-97.87864685 -185.68984985]
[-106.70336151 -197.87033081]
[-113.21115875 -211.43087769]
[-117.19284058 -225.93557739]
[-118.52040863 -240.91813660]
[-117.15119171 -255.89695740]
[-113.12919617 -270.39053345]
[-106.58372498 -283.93292236]
[-97.72518158 -296.08883667]
[-86.83833313 -306.46746826]
[-74.27313995 -314.73522949]
[-60.43353271 -320.62631226]
[-45.76438904 -323.95138550]
[-30.73726273 -324.60351562]
[-15.83521557 -322.56173706]
[-1.53728592 -317.89175415]
[11.69690800 -310.74359131]
[23.44194031 -301.34710693]
[33.32025528 -290.00433350]
[41.01431274 -277.07989502]
[46.27677155 -262.98925781]
[48.93847275 -248.18536377]
[48.91384888 -233.14410400]
[46.20369339 -218.34901428]
[40.89512634 -204.27566528]
[33.15879440 -191.37648010]
[23.24339294 -180.06611633]
[11.46765804 -170.70812988]
[-1.78986859 -163.60336304]
[2.82414055 -149.33062744]
[7.43814993 -135.05789185]
[12.05215931 -120.78515625]
[16.66616821 -106.51242828]
[21.28017807 -92.23969269]
[25.04893684 -89.30618286]
[27.01489449 -83.97400665]
[25.81222534 -77.47284698]
[29.99923515 -63.06906509]
[34.18624878 -48.66528320]
[39.53743362 -34.65225983]
[46.01692963 -21.12391472]
[52.49642563 -7.59556913]
[58.97592163 5.93277645]
[65.45541382 19.46112251]
[72.23540497 32.84139633]
[79.31251526 46.06692123]
[86.38961792 59.29244995]
[93.46672058 72.51797485]
[100.64208984 85.69045258]
[112.52742767 93.05458069]
[112.47660065 107.03631592]
[119.74983215 120.15501404]
[127.02306366 133.27371216]
[134.29629517 146.39239502]
[141.56951904 159.51109314]
[157.57014465 168.62490845]
[156.58102417 186.14599609]
[164.04875183 199.15495300]
[171.51649475 212.16390991]
[178.98423767 225.17286682]
[186.45198059 238.18180847]
[194.11257935 251.07814026]
[201.96434021 263.85897827]
[209.81608582 276.63983154]
[217.66784668 289.42065430]
[232.77825928 293.20394897]
[240.55899048 306.27740479]
[236.85906982 320.65954590]
[244.71083069 333.44039917]
[252.56259155 346.22122192]
[265.92687988 339.39263916]
[279.78573608 333.63366699]
[294.05374146 328.97979736]
[308.64288330 325.45971680]
[323.46325684 323.09518433]
[338.42343140 321.90069580]
[353.43121338 321.88369751]
[368.39410400 323.04425049]
[383.21975708 325.37518311]
[397.81686401 328.86218262]
[412.09536743 333.48367310]
[425.96725464 339.21124268]
[439.34698486 346.00952148]
[452.15209961 353.83660889]
[464.30361938 362.64425659]
[475.72665405 372.37814331]
[486.35073853 382.97827148]
[496.11038208 394.37930298]
[504.94543457 406.51092529]
[512.80139160 419.29830933]
[519.62982178 432.66268921]
[525.38867188 446.52160645]
[530.04241943 460.78964233]
[533.56231689 475.37884521]
[535.92675781 490.19921875]
[537.12103271 505.15942383]
[537.13787842 520.16723633]
[535.97723389 535.13006592]
[533.64611816 549.95568848]
[530.15899658 564.55279541]
[525.53729248 578.83123779]
[519.80963135 592.70306396]
[513.01123047 606.08276367]
[505.18399048 618.88775635]
[496.37622070 631.03918457]
[486.64221191 642.46209717]
[476.04196167 653.08605957]
[464.64083862 662.84564209]
[452.50915527 671.68054199]
[439.72164917 679.53637695]
[426.35720825 686.36468506]
[412.49822998 692.12341309]
[398.23013306 696.77697754]
[383.64093018 700.29675293]
[368.82052612 702.66101074]
[353.86029053 703.85516357]
[338.85250854 703.87188721]
[323.88967896 702.71099854]
[309.06405640 700.37976074]
[294.46701050 696.89251709]
[280.18859863 692.27069092]
[266.31683350 686.54284668]
[252.93724060 679.74432373]
[240.13229370 671.91693115]
[227.98095703 663.10906982]
[216.55813599 653.37493896]
[205.93426514 642.77459717]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 153]
[22 152]
[23 151]
[26 148]
[27 147]
[28 146]
[29 145]
[32 144]
[33 143]
[34 142]
[35 141]
[36 140]
[39 138]
[40 137]
[41 136]
[42 135]
[43 134]
[45 132]
[47 131]
[48 130]
[49 129]
[50 128]
[54 127]
[55 126]
[56 125]
[57 124]
[58 123]
[70 122]
[71 121]
[72 120]
[73 117]
[74 116]
[75 115]
[76 114]
[77 113]
[78 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
