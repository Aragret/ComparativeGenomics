%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCUUCAGUCCCAAUCCCACCAAUAUCAUCACACGUACCAAUAAUGAAAAUAAACCUCAACGUGGUUUUAAAAACCCCGGAUUCUGGUUACCUAUCGAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[277.64199829 343.05871582]
[286.05599976 330.62283325]
[295.76528931 319.16958618]
[285.43862915 308.29025269]
[275.11196899 297.41091919]
[270.44577026 296.39318848]
[266.36938477 292.43338013]
[264.64578247 286.05053711]
[254.64759827 274.86856079]
[244.64942932 263.68658447]
[234.65124512 252.50460815]
[224.65307617 241.32263184]
[214.65490723 230.14067078]
[204.65673828 218.95869446]
[194.57559204 207.85145569]
[184.41204834 196.81958008]
[174.16665649 185.86366272]
[163.83999634 174.98432922]
[153.51332092 164.10499573]
[134.62086487 159.98646545]
[130.21437073 140.31553650]
[119.56836700 129.74848938]
[108.92236328 119.18144226]
[98.27635193 108.61439514]
[95.23851013 108.36737061]
[92.22341156 107.00954437]
[89.64264679 104.54720306]
[87.89972687 101.13861847]
[87.33475494 97.08722687]
[79.28183746 92.77580261]
[77.27248383 85.66353607]
[67.44190216 74.33394623]
[57.61132431 63.00434875]
[47.78074265 51.67475891]
[37.95016098 40.34516525]
[40.66313171 55.09778595]
[37.59919357 69.78152466]
[29.21286201 82.21814728]
[16.74820137 90.56273651]
[2.05427217 93.57743835]
[-12.68917084 90.81503296]
[-25.29502487 82.68531036]
[-33.89328766 70.39426422]
[-37.20845795 55.76519394]
[-34.74874878 40.96823883]
[-26.87904167 28.19844246]
[-14.76676464 19.35012436]
[-0.20870006 15.73587990]
[14.63554955 17.89186287]
[27.56249809 25.49697495]
[20.28926849 12.37828064]
[13.01603889 -0.74041313]
[5.74280930 -13.85910702]
[-6.41823006 -18.15700531]
[-12.20604420 -29.23332977]
[-9.00126934 -40.89763260]
[-16.07837486 -54.12316132]
[-23.15547943 -67.34868622]
[-30.23258591 -80.57421875]
[-37.30969238 -93.79974365]
[-44.38679504 -107.02526855]
[-51.46390152 -120.25080109]
[-58.63926697 -133.42327881]
[-65.91249847 -146.54196167]
[-73.18572998 -159.66065979]
[-87.16133118 -154.15270996]
[-101.73632050 -150.51612854]
[-116.66129303 -148.81314087]
[-131.68086243 -149.07287598]
[-146.53804016 -151.29089355]
[-160.97857666 -155.42922974]
[-174.75537109 -161.41709900]
[-187.63272095 -169.15202332]
[-199.39024353 -178.50166321]
[-209.82676697 -189.30599976]
[-218.76371765 -201.38020325]
[-226.04814148 -214.51762390]
[-231.55543518 -228.49349976]
[-235.19131470 -243.06864929]
[-236.89360046 -257.99371338]
[-236.63316345 -273.01327515]
[-234.41442871 -287.87033081]
[-230.27539062 -302.31066895]
[-224.28686523 -316.08718872]
[-216.55133057 -328.96417236]
[-207.20114136 -340.72125244]
[-196.39630127 -351.15725708]
[-184.32168579 -360.09362793]
[-171.18389893 -367.37744141]
[-157.20777893 -372.88406372]
[-142.63244629 -376.51925659]
[-127.70730591 -378.22082520]
[-112.68775940 -377.95965576]
[-97.83080292 -375.74023438]
[-83.39066315 -371.60049438]
[-69.61442566 -365.61132812]
[-56.73781586 -357.87518311]
[-44.98118210 -348.52441406]
[-34.54568481 -337.71908569]
[-25.60989189 -325.64404297]
[-18.32670784 -312.50592041]
[-12.82075882 -298.52954102]
[-9.18625546 -283.95401001]
[-7.48539114 -269.02880859]
[-7.74726868 -254.00926208]
[-9.96740818 -239.15242004]
[-14.10781860 -224.71247864]
[-20.09765244 -210.93652344]
[-27.83441734 -198.06028748]
[-37.18572617 -186.30409241]
[-47.99156570 -175.86911011]
[-60.06703186 -166.93389893]
[-52.79380417 -153.81520081]
[-45.52057266 -140.69650269]
[-39.52804947 -136.37083435]
[-38.23837280 -127.32790375]
[-31.16126823 -114.10237885]
[-24.08416367 -100.87684631]
[-17.00705719 -87.65132141]
[-9.92995262 -74.42579651]
[-2.85284710 -61.20026779]
[4.22425842 -47.97473907]
[19.60853577 -39.53134537]
[18.86150360 -21.13233757]
[26.13473320 -8.01364231]
[33.40796280 5.10505152]
[40.68119049 18.22374535]
[49.27975464 30.51458359]
[59.11033630 41.84417725]
[68.94091797 53.17377090]
[78.77149963 64.50336456]
[88.60208130 75.83295441]
[98.51673126 87.08905029]
[108.84339905 97.96838379]
[119.48941040 108.53543091]
[130.13542175 119.10247803]
[140.78141785 129.66952515]
[151.63780212 129.00047302]
[160.87991333 134.30743408]
[165.57659912 143.62889099]
[164.39265442 153.77833557]
[174.71932983 164.65766907]
[185.04598999 175.53700256]
[193.22370911 179.60675049]
[195.44392395 186.65603638]
[205.60746765 197.68791199]
[213.72369385 201.87895203]
[215.83871460 208.96051025]
[225.83688354 220.14248657]
[235.83505249 231.32446289]
[245.83322144 242.50643921]
[255.83140564 253.68841553]
[265.82955933 264.87039185]
[275.82772827 276.05236816]
[285.99130249 287.08422852]
[296.31796265 297.96356201]
[306.64462280 308.84292603]
[318.58807373 299.74337769]
[331.44534302 291.98855591]
[345.06573486 285.66931152]
[359.28948975 280.85977173]
[373.94989014 277.61630249]
[388.87503052 275.97692871]
[403.88992310 275.96090698]
[418.81851196 277.56838989]
[433.48580933 280.78054810]
[447.71981812 285.55972290]
[461.35363770 291.84985352]
[474.22744751 299.57720947]
[486.19030762 308.65121460]
[497.10192871 318.96545410]
[506.83441162 330.39901733]
[515.27362061 342.81781006]
[522.32067871 356.07626343]
[527.89288330 370.01892090]
[531.92486572 384.48233032]
[534.36950684 399.29690552]
[535.19799805 414.28890991]
[534.40069580 429.28262329]
[531.98693848 444.10226440]
[527.98504639 458.57400513]
[522.44183350 472.52825928]
[515.42242432 485.80133057]
[507.00909424 498.23770142]
[497.30044556 509.69146729]
[486.41027832 520.02838135]
[474.46633911 529.12725830]
[461.60864258 536.88140869]
[447.98794556 543.19995117]
[433.76391602 548.00872803]
[419.10336304 551.25140381]
[404.17813110 552.88995361]
[389.16323853 552.90515137]
[374.23471069 551.29687500]
[359.56759644 548.08392334]
[345.33386230 543.30401611]
[331.70037842 537.01312256]
[318.82696533 529.28509521]
[306.86459351 520.21044922]
[295.95352173 509.89559937]
[286.22164917 498.46154785]
[277.78311157 486.04226685]
[270.73678589 472.78344727]
[265.16534424 458.84048462]
[261.13409424 444.37686157]
[258.69030762 429.56216431]
[257.86260986 414.57009888]
[258.66070557 399.57641602]
[261.07525635 384.75692749]
[265.07794189 370.28540039]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 157]
[4 156]
[5 155]
[8 154]
[9 153]
[10 152]
[11 151]
[12 150]
[13 149]
[14 148]
[15 146]
[16 145]
[17 143]
[18 142]
[19 141]
[21 137]
[22 136]
[23 135]
[24 134]
[29 133]
[31 132]
[32 131]
[33 130]
[34 129]
[35 128]
[50 127]
[51 126]
[52 125]
[53 124]
[56 122]
[57 121]
[58 120]
[59 119]
[60 118]
[61 117]
[62 116]
[63 114]
[64 113]
[65 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
