%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[45.61417770 793.52331543]
[31.27610588 797.96282959]
[16.60566521 801.13574219]
[1.71450949 803.01800537]
[-13.28402996 803.59521484]
[-28.27580261 802.86303711]
[-43.14670944 800.82696533]
[-57.78357315 797.50256348]
[-72.07499695 792.91516113]
[-85.91220856 787.09954834]
[-99.18989563 780.10009766]
[-111.80701447 771.97003174]
[-123.66753387 762.77130127]
[-134.68118286 752.57379150]
[-144.76414490 741.45520020]
[-153.83967590 729.50012207]
[-161.83871460 716.79949951]
[-168.70036316 703.45007324]
[-174.37242126 689.55346680]
[-178.81170654 675.21533203]
[-181.98443604 660.54479980]
[-183.86647034 645.65362549]
[-184.44346619 630.65509033]
[-183.71105957 615.66333008]
[-181.67480469 600.79241943]
[-178.35020447 586.15563965]
[-173.76255798 571.86425781]
[-167.94679260 558.02716064]
[-160.94715881 544.74957275]
[-152.81692505 532.13256836]
[-143.61798096 520.27215576]
[-133.42033386 509.25866699]
[-122.30159760 499.17584229]
[-110.34638214 490.10049438]
[-97.64569092 482.10162354]
[-84.29617310 475.24014282]
[-70.39942932 469.56829834]
[-56.06123352 465.12921143]
[-41.39070511 461.95669556]
[-26.49949646 460.07485962]
[-11.50094032 459.49807739]
[3.49081182 460.23068237]
[18.36166191 462.26715088]
[21.68392181 447.63970947]
[25.00617981 433.01223755]
[28.32843971 418.38476562]
[31.65069962 403.75732422]
[34.97295761 389.12985229]
[33.38899612 381.91091919]
[38.45510483 374.31011963]
[41.99477768 359.73373413]
[37.47935104 345.54006958]
[48.25467682 333.95547485]
[51.79434586 319.37908936]
[45.95380783 302.83053589]
[58.77445602 289.61264038]
[62.09671783 274.98519897]
[65.41897583 260.35772705]
[68.74123383 245.73027039]
[72.06349182 231.10281372]
[74.72929382 216.34159851]
[76.73330688 201.47607422]
[78.73731995 186.61053467]
[70.01799011 179.25257874]
[65.89057922 168.48782349]
[67.48848724 156.94915771]
[74.52932739 147.51902771]
[85.35665894 142.60929871]
[87.80239105 127.81002808]
[90.24811554 113.01075745]
[84.04858398 103.15139771]
[86.03302002 91.67519379]
[95.18329620 84.47007751]
[97.84909058 69.70886230]
[100.18457794 54.89179611]
[102.18859100 40.02626801]
[95.00341797 29.31477165]
[96.97860718 16.97449684]
[106.51672363 9.53467655]
[108.74183655 -5.29936695]
[99.61931610 -17.92542839]
[102.08721924 -32.93756104]
[114.18045807 -41.55667877]
[116.40557861 -56.39072037]
[118.63069153 -71.22476196]
[120.85581207 -86.05880737]
[122.08278656 -101.00854492]
[122.30611420 -116.00688171]
[122.52944183 -131.00521851]
[122.75276947 -146.00355530]
[122.97609711 -161.00189209]
[123.19942474 -176.00022888]
[123.42275238 -190.99856567]
[123.08777618 -205.99482727]
[122.19496155 -220.96823120]
[107.66036224 -225.27186584]
[95.47608948 -234.28958130]
[87.11344147 -246.93244934]
[83.58226013 -261.67376709]
[85.30894470 -276.73345947]
[92.08499908 -290.29299927]
[103.09217072 -300.71499634]
[117.00128937 -306.74093628]
[132.13278198 -307.64318848]
[146.65940857 -303.31277466]
[158.82705688 -294.27261353]
[167.16638184 -281.61434937]
[170.67039490 -266.86654663]
[168.91595459 -251.81007385]
[162.11492920 -238.26304626]
[151.08857727 -227.86135864]
[137.16836548 -221.86105347]
[138.06118774 -206.88763428]
[149.81825256 -216.20275879]
[164.46520996 -212.96755981]
[171.20487976 -199.56694031]
[165.06901550 -185.87930298]
[150.58074951 -181.99468994]
[138.42109680 -190.77523804]
[138.19776917 -175.77690125]
[137.97444153 -160.77856445]
[137.75111389 -145.78022766]
[137.52778625 -130.78189087]
[137.30445862 -115.78355408]
[137.08113098 -100.78521729]
[146.57148743 -112.40128326]
[160.80210876 -117.14358521]
[175.36347961 -113.54267120]
[185.74359131 -102.71431732]
[188.72605896 -88.01381683]
[183.38673401 -73.99626923]
[171.38006592 -65.00516510]
[156.42645264 -63.82650375]
[143.15942383 -70.82550049]
[135.68984985 -83.83369446]
[133.46473694 -68.99964905]
[131.23962402 -54.16560364]
[129.01451111 -39.33155823]
[138.04667664 -27.54361725]
[136.00140381 -12.46809006]
[123.57588196 -3.07424998]
[121.35076141 11.75979424]
[128.64440918 27.72130203]
[117.05412292 42.03028107]
[115.05010986 56.89580917]
[116.88562012 59.90632629]
[117.35415649 63.95546722]
[115.98343658 68.39105225]
[112.61030579 72.37465668]
[109.94451141 87.13587189]
[116.02197266 102.77047729]
[105.04738617 115.45648193]
[102.60166168 130.25575256]
[100.15592957 145.05502319]
[111.76816559 160.02400208]
[108.80227661 178.41195679]
[93.60284424 188.61454773]
[91.59883118 203.48008728]
[89.59481812 218.34561157]
[102.14893341 210.13621521]
[116.85858154 213.07330322]
[125.29739380 225.47436523]
[122.63124084 240.23551941]
[110.38742065 248.90090942]
[95.57974243 246.50659180]
[86.69095612 234.42507935]
[83.36869812 249.05253601]
[80.04644012 263.67999268]
[76.72417450 278.30746460]
[73.40191650 292.93490601]
[79.60280609 304.24472046]
[76.53455353 316.35955811]
[66.37071991 322.91876221]
[62.83105087 337.49514771]
[67.09329987 352.73141479]
[56.57115173 363.27340698]
[53.03147888 377.84979248]
[49.60041809 392.45211792]
[46.27816010 407.07958984]
[42.95590210 421.70703125]
[39.63364029 436.33450317]
[36.31138229 450.96194458]
[32.98912048 465.58941650]
[47.28067398 470.17645264]
[61.11804581 475.99163818]
[74.39593506 482.99072266]
[87.01328278 491.12042236]
[98.87405396 500.31887817]
[109.88799286 510.51605225]
[119.97126007 521.63433838]
[129.04713440 533.58917236]
[137.04652405 546.28955078]
[143.90855408 559.63879395]
[149.58099365 573.53527832]
[154.02069092 587.87329102]
[157.19383240 602.54370117]
[159.07627869 617.43481445]
[159.65370178 632.43334961]
[158.92170715 647.42510986]
[156.88587952 662.29608154]
[153.56167603 676.93298340]
[148.97444153 691.22448730]
[143.15905762 705.06176758]
[136.15979004 718.33953857]
[128.02992249 730.95678711]
[118.83131409 742.81744385]
[108.63397217 753.83123779]
[97.51551056 763.91430664]
[85.56055450 772.99005127]
[72.86008453 780.98925781]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 183]
[44 182]
[45 181]
[46 180]
[47 179]
[48 178]
[50 177]
[51 176]
[53 174]
[54 173]
[56 170]
[57 169]
[58 168]
[59 167]
[60 166]
[61 159]
[62 158]
[63 157]
[68 154]
[69 153]
[70 152]
[73 150]
[74 149]
[75 145]
[76 144]
[79 142]
[80 141]
[83 138]
[84 137]
[85 136]
[86 135]
[87 125]
[88 124]
[89 123]
[90 122]
[91 121]
[92 120]
[93 119]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
