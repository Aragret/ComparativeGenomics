%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUACAAACCCAGACUCAAAUAUAUAGUGUCACUCUUAAGAUACUACCUGGUACAUUGCUUGUUACGAUGUCCCUACUUAUAAUACCUCUUCAUCAGAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[235.79307556 597.47186279]
[248.78684998 589.66558838]
[245.90158081 574.94567871]
[243.01629639 560.22576904]
[240.13102722 545.50592041]
[237.24575806 530.78601074]
[234.36048889 516.06610107]
[231.47520447 501.34622192]
[228.58993530 486.62634277]
[224.83363342 472.10427856]
[220.21963501 457.83154297]
[215.60562134 443.55880737]
[210.99160767 429.28607178]
[193.96746826 424.59030151]
[183.07418823 410.49111938]
[182.82283020 392.51846313]
[193.50282288 377.86596680]
[188.46591187 363.73693848]
[183.42900085 349.60791016]
[171.86721802 340.21777344]
[174.52122498 324.62075806]
[169.48431396 310.49172974]
[164.44738770 296.36270142]
[148.88479614 297.38769531]
[133.64880371 293.98727417]
[119.97340393 286.42849731]
[108.96852875 275.31549072]
[101.53000641 261.54129028]
[98.26660919 246.21597290]
[99.45025635 230.57723999]
[104.99338531 215.89051819]
[114.45534515 203.34643555]
[127.07743073 193.96441650]
[121.83071136 179.91195679]
[116.58399963 165.85948181]
[111.33728027 151.80700684]
[106.09056091 137.75453186]
[100.84384155 123.70206451]
[95.59712219 109.64959717]
[89.72816467 95.84542084]
[83.24866486 82.31707001]
[76.76917267 68.78872681]
[63.82976913 59.68474579]
[65.31020355 44.86389923]
[64.98754883 59.86042786]
[60.68373871 74.22974396]
[52.70947647 86.93450928]
[41.64042664 97.05756378]
[28.27568054 103.86811066]
[13.58004665 106.87448883]
[-1.38558543 105.85967255]
[-15.54083252 100.89691162]
[-27.86381531 92.34448242]
[-37.46492767 80.81978607]
[-43.65105820 67.15480042]
[-45.97562027 52.33601379]
[-44.27080536 37.43320847]
[-38.65968704 23.52222824]
[-29.54733086 11.60732174]
[-17.59157181 2.54863429]
[-3.65550375 -2.99987912]
[11.25481701 -4.63766670]
[26.06299973 -2.24649477]
[39.70003128 4.00101519]
[51.18144226 13.65385056]
[59.67890167 26.01620293]
[57.67488861 11.15067482]
[55.67087173 -3.71485329]
[53.66685867 -18.58038139]
[51.66284561 -33.44591141]
[49.65883255 -48.31143951]
[46.44555664 -62.96322632]
[42.04455948 -77.30307007]
[37.64356232 -91.64292145]
[33.24256516 -105.98276520]
[28.84156609 -120.32261658]
[24.44056892 -134.66246033]
[12.99481869 -145.58515930]
[16.65741920 -160.02243042]
[1.71000612 -158.32258606]
[-13.29522800 -159.39849854]
[-27.84721184 -163.21351624]
[-41.45030594 -169.63772583]
[-53.64120102 -178.45230103]
[-64.00466919 -189.35702515]
[-72.18775177 -201.98049927]
[-77.91171265 -215.89276123]
[-80.98162079 -230.61994934]
[-81.29289246 -245.66049194]
[-78.83494568 -260.50207520]
[-73.69148254 -274.63925171]
[-66.03770447 -287.59048462]
[-56.13427353 -298.91464233]
[-44.31851578 -308.22607422]
[-30.99286270 -315.20758057]
[-16.61118317 -319.62142944]
[-1.66331315 -321.31723022]
[13.34163094 -320.23727417]
[27.89258385 -316.41833496]
[41.49394989 -309.99044800]
[53.68246460 -301.17260742]
[64.04299927 -290.26507568]
[72.22267151 -277.63940430]
[77.94288635 -263.72561646]
[81.00881958 -248.99758911]
[81.31604004 -233.95695496]
[78.85409546 -219.11602783]
[73.70682526 -204.98023987]
[66.04954529 -192.03108215]
[56.14307022 -180.70957947]
[44.32479858 -171.40135193]
[30.99726677 -164.42343140]
[42.12822723 -154.52641296]
[38.78041458 -139.06346130]
[43.18141174 -124.72360992]
[47.58241272 -110.38376617]
[51.98340988 -96.04391479]
[56.38440704 -81.70407104]
[60.78540421 -67.36421967]
[65.23643494 -81.68862152]
[75.76898956 -92.36875916]
[90.03006744 -97.01866150]
[104.83370972 -94.59954071]
[116.87274170 -85.65182495]
[123.45761871 -72.17445374]
[123.11725616 -57.17831802]
[115.92769623 -44.01358414]
[103.49510956 -35.62128830]
[88.59695435 -33.87629318]
[74.56152344 -39.16843414]
[64.52436066 -50.31545258]
[66.52837372 -35.44992447]
[68.53238678 -20.58439445]
[70.53639984 -5.71886683]
[72.54041290 9.14666176]
[74.54442596 24.01218987]
[78.83855438 38.38440323]
[91.31449890 46.52074432]
[90.29751587 62.30923080]
[96.77701569 75.83757782]
[103.25650787 89.36592102]
[109.24935150 75.61507416]
[123.15923309 70.00122833]
[137.01792908 75.74025726]
[142.88656616 89.54457092]
[137.40330505 103.50644684]
[123.70922089 109.62787628]
[109.64959717 104.40287781]
[114.89631653 118.45534515]
[120.14302826 132.50781250]
[125.38974762 146.56028748]
[130.63647461 160.61276245]
[135.88317871 174.66523743]
[141.12989807 188.71769714]
[155.52984619 187.45997620]
[169.75190735 189.97448730]
[182.82562256 196.08326721]
[193.86054993 205.36334229]
[202.10690308 217.17591858]
[207.00653076 230.71044922]
[208.23060608 245.04022217]
[205.70179749 259.18579102]
[199.59904480 272.18194580]
[190.34492493 283.14352417]
[178.57643127 291.32577515]
[183.61334229 305.45480347]
[188.65025330 319.58386230]
[200.57231140 329.98458862]
[197.55802917 344.57098389]
[202.59494019 358.70001221]
[207.63185120 372.82904053]
[219.98529053 374.74234009]
[230.29321289 381.68603516]
[236.63377380 392.29153442]
[237.85636902 404.51473999]
[233.79003906 416.02984619]
[225.26434326 424.67205811]
[229.87835693 438.94479370]
[234.49235535 453.21752930]
[239.10636902 467.49026489]
[245.02954102 453.70925903]
[257.86242676 445.94287109]
[272.81869507 447.08773804]
[284.31997681 456.71685791]
[288.07662964 471.23883057]
[282.68746948 485.23730469]
[270.16256714 493.49118042]
[255.17337036 492.92199707]
[243.30982971 483.74105835]
[246.19509888 498.46093750]
[249.08036804 513.18084717]
[251.96565247 527.90075684]
[254.85092163 542.62060547]
[257.73620605 557.34051514]
[260.62145996 572.06042480]
[263.50674438 586.78027344]
[278.48599243 589.10351562]
[291.76583862 596.41253662]
[301.74261475 607.82482910]
[307.21157837 621.96221924]
[307.51235962 637.11761475]
[302.60861206 651.46087646]
[293.09252930 663.26000977]
[280.11315918 671.09020996]
[265.23785400 674.00592041]
[250.26290894 671.65509033]
[236.99658203 664.32159424]
[227.04084778 652.89099121]
[221.59793091 638.74353027]
[221.32508850 623.58758545]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 196]
[3 195]
[4 194]
[5 193]
[6 192]
[7 191]
[8 190]
[9 189]
[10 180]
[11 179]
[12 178]
[13 177]
[17 171]
[18 170]
[19 169]
[21 167]
[22 166]
[23 165]
[33 154]
[34 153]
[35 152]
[36 151]
[37 150]
[38 149]
[39 148]
[40 141]
[41 140]
[42 139]
[44 137]
[66 136]
[67 135]
[68 134]
[69 133]
[70 132]
[71 131]
[72 119]
[73 118]
[74 117]
[75 116]
[76 115]
[77 114]
[79 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
