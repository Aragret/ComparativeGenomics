%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[77.52220917 584.86590576]
[67.27423859 595.83465576]
[56.04415131 605.79559326]
[43.93064499 614.66113281]
[31.04017830 622.35333252]
[17.48603630 628.80468750]
[3.38733172 633.95837402]
[-11.13203049 637.76922607]
[-25.94445038 640.20373535]
[-40.91975403 641.24041748]
[-55.92633438 640.87030029]
[-70.83230591 639.09649658]
[-85.50668335 635.93463135]
[-99.82049561 631.41253662]
[-113.64794922 625.56994629]
[-126.86752319 618.45819092]
[-139.36305237 610.13977051]
[-151.02471924 600.68774414]
[-161.75003052 590.18530273]
[-171.44473267 578.72460938]
[-180.02362061 566.40643311]
[-187.41131592 553.33905029]
[-193.54289246 539.63726807]
[-198.36445618 525.42156982]
[-201.83363342 510.81680298]
[-203.91993713 495.95132446]
[-204.60504150 480.95584106]
[-203.88290405 465.96206665]
[-201.75990295 451.10180664]
[-198.25466919 436.50564575]
[-193.39801025 422.30187988]
[-187.23262024 408.61529541]
[-179.81268311 395.56619263]
[-171.20339966 383.26925659]
[-161.48042297 371.83255005]
[-150.72920227 361.35656738]
[-139.04423523 351.93341064]
[-126.52821350 343.64587402]
[-113.29110718 336.56677246]
[-99.44927216 330.75833130]
[-85.12433624 326.27160645]
[-70.44219971 323.14602661]
[-55.53189087 321.40902710]
[-40.52444077 321.07592773]
[-25.55174255 322.14959717]
[-10.74538040 324.62066650]
[3.76452661 328.46734619]
[17.85046005 333.65588379]
[24.32995605 320.12753296]
[30.80945206 306.59921265]
[37.28894806 293.07086182]
[43.76844406 279.54251099]
[50.24794006 266.01416016]
[55.38990021 251.92301941]
[59.14620209 237.40095520]
[62.90250015 222.87890625]
[53.75602722 208.76576233]
[57.72496033 192.07557678]
[72.82846832 183.24928284]
[76.36814117 168.67289734]
[79.90781403 154.09652710]
[83.33887482 139.49420166]
[86.66113281 124.86674500]
[89.98339081 110.23928070]
[86.03180695 96.82747650]
[95.38915253 86.43845367]
[82.74377441 94.50657654]
[67.85496521 92.68358612]
[57.52967834 81.80294037]
[56.48849869 66.83912659]
[65.20744324 54.63338470]
[79.70031738 50.76602554]
[93.34118652 57.00515366]
[99.89382172 70.50016785]
[104.71981812 56.29771042]
[109.54581451 42.09525299]
[114.37181091 27.89279938]
[119.19781494 13.69034290]
[124.02381134 -0.51211256]
[127.12792206 -15.18741512]
[128.46615601 -30.12759972]
[129.80438232 -45.06778336]
[131.14262390 -60.00796890]
[132.48085022 -74.94815826]
[133.81909180 -89.88834381]
[134.71189880 -104.86174774]
[135.15850830 -119.85509491]
[135.60511780 -134.84844971]
[136.05172729 -149.84179688]
[136.49833679 -164.83514404]
[136.94493103 -179.82849121]
[125.44280243 -187.42401123]
[119.24490356 -199.61434937]
[119.87478638 -213.16694641]
[127.06109619 -224.54681396]
[138.83631897 -230.83857727]
[139.50610352 -245.82360840]
[140.17588806 -260.80865479]
[126.08042908 -266.34008789]
[114.54637146 -276.15051270]
[106.82485199 -289.17575073]
[103.75342560 -304.00289917]
[105.66526794 -319.02368164]
[112.35300446 -332.60870361]
[123.09117889 -343.28439331]
[136.71501160 -349.89270020]
[151.74668884 -351.71685791]
[166.55567932 -348.55892944]
[179.53562927 -340.76150513]
[189.27854919 -329.17037964]
[194.72761536 -315.04287720]
[195.29174805 -299.91143799]
[190.90975952 -285.41738892]
[182.05697632 -273.13299561]
[169.69366455 -264.39071655]
[155.16091919 -260.13885498]
[154.49113464 -245.15382385]
[153.82135010 -230.16879272]
[166.97904968 -220.35285950]
[171.74093628 -204.46932983]
[166.04060364 -188.72108459]
[151.93827820 -179.38189697]
[151.49168396 -164.38853455]
[151.04507446 -149.39518738]
[150.59846497 -134.40184021]
[150.15185547 -119.40849304]
[149.70526123 -104.41513824]
[151.52716064 -102.28469086]
[152.61494446 -99.30419922]
[152.64060974 -95.74966431]
[151.38203430 -92.01061249]
[148.75927734 -88.55010223]
[147.42103577 -73.60992432]
[146.08280945 -58.66973495]
[144.74456787 -43.72954941]
[143.40634155 -28.78936577]
[142.06809998 -13.84918118]
[150.46830750 -26.27643204]
[162.57153320 -35.13711929]
[176.95591736 -39.39030075]
[191.93159485 -38.53631592]
[205.73922729 -32.67548752]
[216.75671387 -22.49634361]
[223.68972778 -9.19471645]
[225.72380066 5.66672897]
[222.61994934 20.34208679]
[214.74282837 33.10731125]
[203.01782227 42.46275330]
[188.82238770 47.30934906]
[173.82417297 47.07772446]
[159.78515625 41.79508591]
[148.35464478 32.08203888]
[140.87547302 19.07965851]
[138.22625732 4.31388521]
[133.40026855 18.51634026]
[128.57426453 32.71879578]
[123.74826813 46.92125320]
[118.92227173 61.12370682]
[114.09627533 75.32616425]
[110.01660919 89.76071930]
[113.96819305 103.17252350]
[104.61084747 113.56154633]
[101.28858948 128.18901062]
[97.96633148 142.81646729]
[99.11732483 151.87808228]
[94.48418427 157.63619995]
[90.94451141 172.21257019]
[87.40483856 186.78895569]
[95.68995667 197.40834045]
[96.33673859 210.66700745]
[89.33285522 221.71362305]
[77.42456055 226.63520813]
[73.66825867 241.15725708]
[69.91195679 255.67932129]
[80.71459198 245.27244568]
[94.78816223 240.08258057]
[109.76103210 240.98434448]
[123.11000824 247.82574463]
[132.58555603 259.45391846]
[136.59086609 273.90927124]
[134.45100403 288.75585938]
[126.52653503 301.49172974]
[114.15290070 309.97070312]
[99.41526031 312.76391602]
[84.79717255 309.40066528]
[72.76203918 300.44769287]
[65.33799744 287.41375732]
[63.77628708 272.49365234]
[57.29679108 286.02200317]
[50.81729507 299.55035400]
[44.33779907 313.07870483]
[37.85830307 326.60702515]
[31.37880707 340.13537598]
[44.25077438 347.85852051]
[56.34297180 356.75308228]
[67.54911804 366.74090576]
[77.77074432 377.73422241]
[86.91801453 389.63641357]
[94.91053772 402.34286499]
[101.67807770 415.74194336]
[107.16115570 429.71585083]
[111.31158447 444.14181519]
[114.09289551 458.89303589]
[115.48064423 473.83990479]
[115.46263123 488.85104370]
[114.03902435 503.79452515]
[111.22232056 518.53900146]
[107.03727722 532.95501709]
[101.52068329 546.91571045]
[94.72100830 560.29846191]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 193]
[49 192]
[50 191]
[51 190]
[52 189]
[53 188]
[54 174]
[55 173]
[56 172]
[59 168]
[60 167]
[61 166]
[62 164]
[63 163]
[64 162]
[66 160]
[74 159]
[75 158]
[76 157]
[77 156]
[78 155]
[79 154]
[80 137]
[81 136]
[82 135]
[83 134]
[84 133]
[85 132]
[86 127]
[87 126]
[88 125]
[89 124]
[90 123]
[91 122]
[96 118]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
