%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[175.24566650 382.24700928]
[169.37669373 368.44284058]
[163.50773621 354.63867188]
[157.63877869 340.83447266]
[151.76982117 327.03030396]
[149.22119141 341.81219482]
[140.58197021 354.07449341]
[127.52022552 361.44949341]
[112.55799103 362.51324463]
[98.58423615 357.06033325]
[88.29708099 346.14364624]
[83.68280029 331.87100220]
[85.63235474 316.99822998]
[93.76930237 304.39703369]
[106.52253723 296.50051880]
[121.42960358 294.83337402]
[135.61218262 299.71746826]
[146.33251953 310.21087646]
[143.01026917 295.58340454]
[139.68800354 280.95596313]
[129.32398987 270.25845337]
[133.81260681 255.08734131]
[130.49034119 240.45988464]
[127.16808319 225.83241272]
[123.84582520 211.20495605]
[120.52356720 196.57749939]
[116.87548065 182.02787781]
[112.90338135 167.56335449]
[108.93128204 153.09883118]
[104.63716125 138.72662354]
[100.02315521 124.45388794]
[95.40914154 110.18115234]
[90.68901062 95.94316101]
[85.86301422 81.74070740]
[81.03701019 67.53825378]
[75.68582916 53.52522659]
[69.81686401 39.72105026]
[53.28369522 36.15028763]
[42.24623108 23.55363274]
[40.90534592 7.02596664]
[49.59204102 -6.90309715]
[43.51820374 -20.61836433]
[37.44437027 -34.33362961]
[31.37053680 -48.04889679]
[25.29670334 -61.76416397]
[19.22286987 -75.47943115]
[13.14903545 -89.19469452]
[7.07520151 -102.90996552]
[0.73892438 -109.48943329]
[1.01472855 -116.87493896]
[-4.85423231 -130.67912292]
[-10.72319317 -144.48329163]
[-16.59215355 -158.28747559]
[-36.28572083 -161.73773193]
[-49.79865646 -176.27702332]
[-51.77162552 -195.88285828]
[-41.57694626 -212.57666016]
[-48.25714111 -226.00703430]
[-54.93733597 -239.43740845]
[-61.56108475 -245.72738647]
[-61.61533356 -253.11784363]
[-68.09483337 -266.64617920]
[-74.57432556 -280.17453003]
[-81.05382538 -293.70288086]
[-95.25888062 -288.83123779]
[-109.93346405 -285.64169312]
[-124.87910461 -284.17736816]
[-139.89369202 -284.45806885]
[-154.77415466 -286.47998047]
[-169.31927490 -290.21575928]
[-183.33232117 -295.61492920]
[-196.62380981 -302.60443115]
[-209.01396179 -311.08975220]
[-220.33522034 -320.95611572]
[-230.43449402 -332.07012939]
[-239.17520142 -344.28146362]
[-246.43911743 -357.42498779]
[-252.12800598 -371.32293701]
[-256.16494751 -385.78735352]
[-258.49533081 -400.62265015]
[-259.08764648 -415.62817383]
[-257.93389893 -430.60098267]
[-255.04968262 -445.33862305]
[-250.47398376 -459.64175415]
[-244.26870728 -473.31695557]
[-236.51774597 -486.17926025]
[-227.32595825 -498.05477905]
[-216.81762695 -508.78283691]
[-205.13487244 -518.21838379]
[-192.43569946 -526.23382568]
[-178.89183044 -532.72076416]
[-164.68644714 -537.59143066]
[-150.01165771 -540.78002930]
[-135.06591797 -542.24334717]
[-120.05134583 -541.96166992]
[-105.17101288 -539.93878174]
[-90.62614441 -536.20196533]
[-76.61345673 -530.80187988]
[-63.32244110 -523.81152344]
[-50.93285370 -515.32537842]
[-39.61224365 -505.45822144]
[-29.51371193 -494.34356689]
[-20.77382851 -482.13162231]
[-13.51079082 -468.98764038]
[-7.82282400 -455.08929443]
[-3.78684974 -440.62460327]
[-1.45745075 -425.78915405]
[-0.86612958 -410.78359985]
[-2.02088284 -395.81085205]
[-4.90609407 -381.07342529]
[-9.48274422 -366.77059937]
[-15.68893909 -353.09582520]
[-23.44074631 -340.23400879]
[-32.63333130 -328.35913086]
[-43.14237976 -317.63174438]
[-54.82575989 -308.19696045]
[-67.52547455 -300.18237305]
[-61.04597855 -286.65402222]
[-54.56648636 -273.12567139]
[-48.08699036 -259.59735107]
[-41.50696182 -246.11759949]
[-34.82676697 -232.68722534]
[-28.14657211 -219.25685120]
[-17.82035065 -219.82591248]
[-7.85633993 -216.91639709]
[0.60314977 -210.83537292]
[6.57950211 -202.25498962]
[9.37097549 -192.13825989]
[8.63502979 -181.63098145]
[4.43014002 -171.93200684]
[-2.78797698 -164.15643311]
[3.08098388 -150.35224915]
[8.94994450 -136.54808044]
[14.81890583 -122.74390411]
[20.79046822 -108.98379517]
[26.86430168 -95.26853180]
[32.93813705 -81.55326843]
[39.01197052 -67.83799744]
[45.08580399 -54.12273026]
[51.15963745 -40.40746307]
[57.23347092 -26.69219780]
[63.30730438 -12.97693157]
[76.56441498 -11.39856243]
[87.39734650 -3.41159272]
[92.91304779 8.98383713]
[91.57308960 22.59350204]
[83.62104034 33.85208893]
[89.49000549 47.65626526]
[97.43643951 34.93407440]
[112.31929016 33.06304550]
[123.16747284 43.42243195]
[121.98411560 58.37567902]
[109.64154053 66.89981079]
[95.23947144 62.71225357]
[100.06546783 76.91471100]
[104.89146423 91.11716461]
[110.26045227 97.12936401]
[109.68187714 105.56713867]
[114.29588318 119.83987427]
[118.90989685 134.11260986]
[122.78499603 137.60984802]
[124.73602295 141.82254028]
[124.81266022 145.89797974]
[123.39581299 149.12673950]
[127.36790466 163.59126282]
[131.33999634 178.05578613]
[135.05506897 181.72256470]
[136.81605530 186.01817322]
[136.71063232 190.09297180]
[135.15103149 193.25523376]
[138.47328186 207.88270569]
[141.79554749 222.51016235]
[145.11779785 237.13761902]
[148.44006348 251.76507568]
[159.04171753 263.50881958]
[154.31546021 277.63369751]
[157.63772583 292.26113892]
[160.95999146 306.88861084]
[165.57398987 321.16134644]
[171.44296265 334.96551514]
[177.31192017 348.76968384]
[183.18087769 362.57388306]
[189.04983521 376.37805176]
[203.82684326 373.49118042]
[218.88113403 373.74011230]
[233.55461121 377.11392212]
[247.20581055 383.46517944]
[259.23797607 392.51620483]
[269.12509155 403.87130737]
[276.43493652 417.03411865]
[280.84796143 431.42922974]
[282.17123413 446.42730713]
[280.34695435 461.37274170]
[275.45483398 475.61215210]
[267.70870972 488.52304077]
[257.44726562 499.54104614]
[245.11906433 508.18447876]
[231.26303101 514.07550049]
[216.48489380 516.95654297]
[201.43069458 516.70172119]
[186.75854492 513.32208252]
[173.10984802 506.96548462]
[161.08125305 497.90972900]
[151.19860840 486.55072021]
[143.89393616 473.38504028]
[139.48657227 458.98818970]
[138.16917419 443.98959351]
[139.99935913 429.04489136]
[144.89707947 414.80740356]
[152.64826965 401.89956665]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 183]
[2 182]
[3 181]
[4 180]
[5 179]
[18 178]
[19 177]
[20 176]
[22 174]
[23 173]
[24 172]
[25 171]
[26 170]
[27 166]
[28 165]
[29 164]
[30 160]
[31 159]
[32 158]
[33 156]
[34 155]
[35 154]
[36 148]
[37 147]
[41 142]
[42 141]
[43 140]
[44 139]
[45 138]
[46 137]
[47 136]
[48 135]
[50 134]
[51 133]
[52 132]
[53 131]
[57 123]
[58 122]
[59 121]
[61 120]
[62 119]
[63 118]
[64 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
