%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[150.47143555 543.77026367]
[147.50866699 529.05004883]
[146.18325806 514.09326172]
[146.51127625 499.08139038]
[148.48878479 484.19674683]
[152.09173584 469.61999512]
[157.27641296 455.52804565]
[163.97988892 442.09204102]
[172.12075806 429.47500610]
[181.60023499 417.83013916]
[192.30322266 407.29879761]
[204.09979248 398.00881958]
[216.84677124 390.07296753]
[210.36727905 376.54461670]
[203.88778687 363.01626587]
[197.40827942 349.48791504]
[190.92878723 335.95956421]
[179.62760925 331.64566040]
[174.11871338 320.42800903]
[177.84490967 308.07980347]
[171.56755066 294.45648193]
[168.40420532 292.89907837]
[165.83802795 289.73208618]
[164.61732483 285.25289917]
[165.32928467 280.08181763]
[159.66648865 266.19177246]
[147.69694519 257.32727051]
[149.65187073 241.62731934]
[137.68232727 232.76281738]
[139.63725281 217.06285095]
[127.66771698 208.19834900]
[129.62265015 192.49839783]
[123.95985413 178.60836792]
[118.29707336 164.71833801]
[112.63428497 150.82830811]
[106.97149658 136.93829346]
[101.30870819 123.04825592]
[95.64591980 109.15823364]
[89.92860413 103.47626495]
[90.00392914 95.01900482]
[84.54856873 81.04620361]
[79.09321594 67.07341003]
[76.10560608 81.77287292]
[67.10511017 93.77249908]
[53.82957840 100.75534821]
[38.84230804 101.37314606]
[25.03710365 95.50660706]
[15.07953548 84.28845978]
[10.89225483 69.88475037]
[13.28376007 55.07662201]
[21.79228783 42.72328568]
[34.77497482 35.20997620]
[49.72507095 33.98739624]
[63.75593948 39.29160690]
[74.15911102 50.09954071]
[71.27383423 35.37965012]
[68.38856506 20.65975952]
[65.50328827 5.93986797]
[62.61801910 -8.78002357]
[51.64929962 -13.36520004]
[44.33081055 -22.58152390]
[42.39006424 -34.06748962]
[46.19513702 -44.95037460]
[54.69152832 -52.56467438]
[52.24580002 -67.36394501]
[49.80007172 -82.16321564]
[47.35434723 -96.96248627]
[44.90861893 -111.76175690]
[35.02476120 -124.11569977]
[40.58335876 -137.93421936]
[38.13763046 -152.73348999]
[35.69190216 -167.53276062]
[23.12790108 -176.74055481]
[20.85840797 -191.78396606]
[29.71406555 -203.70507812]
[27.26833916 -218.50434875]
[24.82261086 -233.30361938]
[22.26677895 -248.08427429]
[19.60098457 -262.84548950]
[4.57883120 -262.40664673]
[-10.34093094 -264.21173096]
[-24.82498741 -268.22042847]
[-38.54976273 -274.34320068]
[-51.20863724 -282.44323730]
[-62.51880646 -292.33959961]
[-72.22760010 -303.81115723]
[-80.11811829 -316.60168457]
[-86.01408386 -330.42538452]
[-89.78378296 -344.97348022]
[-91.34299469 -359.92095947]
[-90.65688324 -374.93383789]
[-87.74077606 -389.67678833]
[-82.65982819 -403.82037354]
[-75.52754974 -417.04870605]
[-66.50326538 -429.06619263]
[-55.78859711 -439.60437012]
[-43.62290192 -448.42782593]
[-30.27797318 -455.33944702]
[-16.05194092 -460.18484497]
[-1.26261604 -462.85571289]
[13.75959873 -463.29241943]
[28.67910385 -461.48519897]
[43.16259003 -457.47442627]
[56.88649368 -451.34970093]
[69.54421234 -443.24786377]
[80.85297394 -433.34991455]
[90.56013489 -421.87695312]
[98.44882965 -409.08529663]
[104.34282684 -395.26074219]
[108.11045074 -380.71212769]
[109.66753387 -365.76443481]
[108.97928619 -350.75164795]
[106.06108093 -336.00912476]
[100.97811890 -321.86624146]
[93.84394836 -308.63894653]
[84.81796265 -296.62274170]
[74.10179138 -286.08609009]
[61.93483734 -277.26434326]
[48.58892441 -270.35461426]
[34.36220169 -265.51129150]
[37.02799606 -250.75006104]
[41.31018829 -244.72639465]
[39.62188339 -235.74934387]
[42.06761169 -220.95007324]
[44.51333618 -206.15080261]
[56.73356247 -197.71269226]
[59.42469788 -182.73896790]
[50.49117279 -169.97848511]
[52.93690109 -155.17921448]
[55.38262939 -140.37994385]
[65.09155273 -129.08453369]
[59.70788956 -114.20748138]
[62.15361786 -99.40821075]
[64.59934235 -84.60894012]
[67.04507446 -69.80966949]
[69.49079895 -55.01039886]
[84.98725891 -45.26486588]
[88.49930573 -26.97338104]
[77.33790588 -11.66529655]
[80.22318268 3.05459523]
[83.10845184 17.77448654]
[85.99372864 32.49437714]
[88.87899780 47.21426773]
[93.06600952 61.61804962]
[98.52136993 75.59085083]
[103.97672272 89.56364441]
[109.53594971 103.49544525]
[115.19873810 117.38547516]
[120.86152649 131.27549744]
[126.52430725 145.16552734]
[132.18710327 159.05555725]
[137.84988403 172.94558716]
[143.51266479 186.83560181]
[155.88725281 196.69361877]
[153.52728271 211.40007019]
[165.90187073 221.25807190]
[163.54190063 235.96452332]
[175.91648865 245.82254028]
[173.55651855 260.52899170]
[179.21931458 274.41900635]
[185.19087219 288.17910767]
[191.46823120 301.80242920]
[206.74667358 312.08108521]
[204.45713806 329.48007202]
[210.93663025 343.00842285]
[217.41612244 356.53677368]
[223.89562988 370.06512451]
[230.37512207 383.59344482]
[244.54844666 378.63565063]
[259.18115234 375.26715088]
[274.09564209 373.52883911]
[289.11080933 373.44180298]
[304.04443359 375.00714111]
[318.71520996 378.20581055]
[332.94503784 382.99902344]
[346.56121826 389.32855225]
[359.39843750 397.11758423]
[371.30087280 406.27157593]
[382.12402344 416.67938232]
[391.73651123 428.21469116]
[400.02166748 440.73745728]
[406.87890625 454.09564209]
[412.22497559 468.12713623]
[415.99499512 482.66159058]
[418.14318848 497.52255249]
[418.64349365 512.52966309]
[417.48980713 527.50067139]
[414.69619751 542.25396729]
[410.29650879 556.61035156]
[404.34417725 570.39556885]
[396.91143799 583.44232178]
[388.08856201 595.59222412]
[377.98260498 606.69781494]
[366.71627808 616.62414551]
[354.42633057 625.25085449]
[341.26196289 632.47320557]
[327.38293457 638.20349121]
[312.95776367 642.37219238]
[298.16156006 644.92864990]
[283.17391968 645.84185791]
[268.17678833 645.10070801]
[253.35223389 642.71423340]
[238.88017273 638.71142578]
[224.93630981 633.14080811]
[211.68989563 626.07000732]
[199.30174255 617.58489990]
[187.92222595 607.78851318]
[177.68948364 596.79968262]
[168.72773743 584.75183105]
[161.14576721 571.79125977]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 168]
[14 167]
[15 166]
[16 165]
[17 164]
[20 162]
[21 161]
[25 160]
[26 159]
[28 157]
[30 155]
[32 153]
[33 152]
[34 151]
[35 150]
[36 149]
[37 148]
[38 147]
[40 146]
[41 145]
[42 144]
[55 143]
[56 142]
[57 141]
[58 140]
[59 139]
[64 136]
[65 135]
[66 134]
[67 133]
[68 132]
[70 130]
[71 129]
[72 128]
[75 125]
[76 124]
[77 123]
[78 121]
[79 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
