%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUAGGAAAUUUUCAACUCUUUCGGUACAACAAUCUGUACCCCCGUACUCAAUCGUCAAGAACACUCGAAAGAGCCAUUUAUUCCCCAGCAUUCGGAGAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[126.06816864 584.18560791]
[111.16744995 586.13153076]
[96.14220428 585.88702393]
[81.31269073 583.45733643]
[66.99499512 578.89428711]
[53.49431229 572.29510498]
[41.09840393 563.80041504]
[30.07149124 553.59136963]
[20.64861107 541.88549805]
[13.03061390 528.93237305]
[7.37987804 515.00799561]
[3.81684923 500.40930176]
[2.41747355 485.44735718]
[3.21157908 470.44110107]
[6.18223906 455.71041870]
[11.26613331 441.56927490]
[18.35490036 428.31912231]
[27.29743958 416.24230957]
[37.90314102 405.59634399]
[49.94594574 396.60809326]
[63.16915894 389.46914673]
[77.29092407 384.33166504]
[92.01024628 381.30520630]
[107.01336670 380.45422363]
[108.35160065 365.51403809]
[109.68983459 350.57385254]
[111.02806854 335.63366699]
[110.80474091 320.63531494]
[109.02227783 305.74160767]
[97.19102478 296.76626587]
[95.17118073 281.68728638]
[104.66558075 269.33843994]
[102.88311768 254.44473267]
[93.68824005 242.72706604]
[99.73082733 228.10523987]
[97.94836426 213.21153259]
[96.16590118 198.31781006]
[86.06758118 209.40942383]
[71.09112549 210.24951172]
[59.81572342 200.35682678]
[58.70043182 185.39834595]
[68.38414764 173.94297791]
[83.31959534 172.55285645]
[94.95061493 182.02349854]
[94.50401306 167.03015137]
[94.05740356 152.03678894]
[93.61080170 137.04344177]
[93.16419220 122.05009460]
[92.71759033 107.05674744]
[89.34886932 99.73388672]
[92.37762451 91.83721161]
[92.15429688 76.83886719]
[91.93096924 61.84053421]
[91.37275696 46.85092163]
[90.47994232 31.87751770]
[89.58712769 16.90411186]
[88.69431305 1.93070602]
[87.80149078 -13.04269981]
[86.90867615 -28.01610565]
[84.02340698 -42.73599625]
[79.19741058 -56.93845367]
[74.37140656 -71.14090729]
[69.54541016 -85.34336090]
[64.71941376 -99.54582214]
[59.89341736 -113.74827576]
[52.30900574 -100.80699921]
[37.83058548 -96.88585663]
[24.75205231 -104.23105621]
[20.56538582 -118.63494110]
[27.66889763 -131.84629822]
[41.99337387 -136.29707336]
[55.33248520 -129.43838501]
[51.79281235 -144.01475525]
[37.59588242 -149.99417114]
[29.73392868 -163.03422546]
[31.04247475 -178.02593994]
[40.81091309 -189.23823547]
[37.27124023 -203.81462097]
[33.66698456 -207.59039307]
[32.03468704 -211.93652344]
[32.26137924 -216.00636292]
[33.91444778 -219.12080383]
[31.02917671 -233.84069824]
[28.14390373 -248.56059265]
[25.25863075 -263.28048706]
[22.37335968 -278.00036621]
[7.31488562 -278.58270264]
[-7.20322847 -282.62261963]
[-20.39803886 -289.90231323]
[-31.55796814 -300.02914429]
[-40.08117294 -312.45700073]
[-45.50801086 -326.51565552]
[-47.54581451 -341.44699097]
[-46.08469391 -356.44570923]
[-41.20344162 -370.70300293]
[-33.16529465 -383.44995117]
[-22.40374565 -393.99914551]
[-9.49914932 -401.78170776]
[4.85256624 -406.37789917]
[19.87742996 -407.53985596]
[34.76517105 -405.20492554]
[48.71291351 -399.49905396]
[60.96847153 -390.72988892]
[70.87091827 -379.37039185]
[77.88622284 -366.03314209]
[81.63607025 -351.43740845]
[81.91822052 -336.37033081]
[78.71747589 -321.64443970]
[72.20642853 -308.05389404]
[62.73622894 -296.33160400]
[50.81758499 -287.10974121]
[37.09325027 -280.88565063]
[39.97852325 -266.16574097]
[42.86379623 -251.44586182]
[45.74906921 -236.72596741]
[48.63434219 -222.00607300]
[51.84761429 -207.35429382]
[55.38728714 -192.77790833]
[69.21006775 -187.29441833]
[77.24849701 -174.57247925]
[76.24266815 -159.37901306]
[66.36918640 -147.55442810]
[69.90885925 -132.97805786]
[74.09587097 -118.57427216]
[78.92186737 -104.37181854]
[83.74786377 -90.16936493]
[88.57386780 -75.96690369]
[93.39986420 -61.76445007]
[98.22586060 -47.56199265]
[100.59056091 -62.37442780]
[107.36077881 -75.75965118]
[117.89122772 -86.44186401]
[131.17820740 -93.40290833]
[145.95529175 -95.97930145]
[160.81401062 -93.92548370]
[174.33815002 -87.43720245]
[185.23866272 -77.13288116]
[192.47656250 -63.99467087]
[195.36201477 -49.27481079]
[193.61996460 -34.37631226]
[187.41647339 -20.71920204]
[177.34281921 -9.60518837]
[164.35913086 -2.09358835]
[149.70297241 1.09963942]
[134.77124023 -0.32986292]
[120.98714447 -6.24584436]
[109.66450500 -16.08443069]
[101.88208008 -28.90892220]
[102.77490234 -13.93551540]
[103.66771698 1.03789020]
[104.56053162 16.01129532]
[105.45334625 30.98470116]
[106.34616089 45.95810699]
[108.72647858 48.55934525]
[109.96511841 52.44274902]
[109.47319031 57.05916214]
[106.92930603 61.61720657]
[107.15263367 76.61553955]
[107.37596130 91.61387634]
[107.71093750 106.61013794]
[108.15753937 121.60349274]
[108.60414886 136.59683228]
[109.05075836 151.59019470]
[109.49736023 166.58354187]
[109.94396973 181.57688904]
[111.05961609 196.53533936]
[112.84207916 211.42906189]
[114.62454987 226.32278442]
[123.94691467 239.10574341]
[117.77683258 252.66226196]
[119.55929565 267.55596924]
[131.69961548 277.31561279]
[133.29512024 292.44534302]
[123.91599274 303.95913696]
[125.69845581 318.85284424]
[131.72842407 305.11825562]
[142.50205994 294.68136597]
[156.42115784 289.09042358]
[171.42092896 289.17486572]
[185.27621460 294.92211914]
[195.93168640 305.47961426]
[201.80665588 319.28121948]
[202.02961731 334.27957153]
[196.56748962 348.24972534]
[186.23054504 359.11929321]
[172.55221558 365.27584839]
[157.56158447 365.80609131]
[143.48243713 360.63137817]
[132.40333557 350.51934814]
[125.96825409 336.97189331]
[124.63002014 351.91207886]
[123.29178619 366.85226440]
[121.95355225 381.79244995]
[136.56660461 385.29623413]
[150.51374817 390.89044189]
[163.49768066 398.45584106]
[175.24166870 407.83117676]
[185.49537659 418.81658936]
[194.04023743 431.17794800]
[200.69413757 444.65173340]
[205.31524658 458.95080566]
[207.80505371 473.77035522]
[208.11048889 488.79449463]
[206.22505188 503.70297241]
[202.18891907 518.17803955]
[196.08813477 531.91113281]
[188.05271912 544.60955811]
[178.25396729 556.00262451]
[166.90072632 565.84753418]
[154.23498535 573.93438721]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 193]
[25 192]
[26 191]
[27 190]
[28 175]
[29 174]
[32 171]
[33 170]
[35 168]
[36 167]
[37 166]
[44 165]
[45 164]
[46 163]
[47 162]
[48 161]
[49 160]
[51 159]
[52 158]
[53 157]
[54 153]
[55 152]
[56 151]
[57 150]
[58 149]
[59 148]
[60 129]
[61 128]
[62 127]
[63 126]
[64 125]
[65 124]
[72 123]
[73 122]
[77 118]
[78 117]
[82 116]
[83 115]
[84 114]
[85 113]
[86 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
