%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[187.38740540 611.12811279]
[172.04383850 610.44226074]
[159.10746765 602.16302490]
[152.05810547 588.51745605]
[152.79200745 573.17608643]
[161.11175537 560.26574707]
[174.77937317 553.25921631]
[175.44915771 538.27416992]
[176.11894226 523.28912354]
[176.78872681 508.30407715]
[177.12370300 493.30783081]
[177.12370300 478.30783081]
[177.12370300 463.30783081]
[177.12370300 448.30783081]
[177.12370300 433.30783081]
[168.79473877 424.53543091]
[168.67198181 412.03866577]
[177.36662292 402.51153564]
[177.58995056 387.51321411]
[177.81327820 372.51486206]
[178.03660583 357.51654053]
[175.81147766 342.68249512]
[171.19747925 328.40975952]
[166.58346558 314.13702393]
[161.96945190 299.86428833]
[157.35543823 285.59155273]
[152.74143982 271.31881714]
[141.69917297 268.44921875]
[133.32669067 260.52346802]
[129.78350830 249.42665100]
[132.06007385 237.88029480]
[139.70429993 228.77522278]
[135.51728821 214.37144470]
[131.33027649 199.96765137]
[126.50427246 185.76519775]
[121.04891968 171.79240417]
[115.48969269 157.86061096]
[109.82690430 143.97058105]
[104.16412354 130.08055115]
[98.50133514 116.19052124]
[88.05809784 111.03494263]
[83.74172211 100.21781921]
[87.76675415 89.28894043]
[82.31140137 75.31613922]
[68.11389160 68.90766144]
[62.78043365 54.65954208]
[68.97743988 41.16388702]
[63.52207947 27.19108963]
[58.06672287 13.21829128]
[45.84028244 3.17713904]
[48.41894531 -11.49254990]
[42.96358871 -25.46534729]
[36.92741776 -32.32118225]
[37.53272629 -39.68700790]
[32.28601074 -53.73947906]
[30.55697441 -38.83946609]
[24.75323486 -25.00774002]
[15.33250332 -13.33513165]
[3.03773308 -4.74219084]
[-11.16145611 0.09340774]
[-26.14525795 0.79030830]
[-40.73198700 -2.70644975]
[-53.77127457 -10.12109756]
[-64.23478699 -20.86888504]
[-71.29732513 -34.10219574]
[-74.40191650 -48.77739716]
[-73.30370331 -63.73714066]
[-68.08931732 -77.80164337]
[-59.16996765 -89.86170959]
[-47.24908066 -98.96623993]
[-33.26678848 -104.39720917]
[-18.32578850 -105.72631836]
[-3.60439134 -102.84873199]
[9.73641109 -95.99140167]
[20.64450836 -85.69511414]
[28.26096535 -72.76868439]
[27.36814880 -87.74208832]
[26.47533226 -102.71549988]
[25.58251762 -117.68890381]
[24.68970108 -132.66230774]
[23.79688454 -147.63571167]
[13.30295753 -162.76710510]
[21.76355743 -178.14192200]
[20.64790916 -193.10038757]
[16.88889503 -201.42550659]
[19.62869644 -208.28955078]
[18.73587990 -223.26296997]
[17.84306526 -238.23637390]
[9.29808140 -251.55154419]
[16.26412392 -264.71679688]
[15.37130737 -279.69018555]
[14.47849178 -294.66360474]
[13.58567619 -309.63699341]
[-1.13865674 -313.00903320]
[-14.31585979 -320.39404297]
[-24.87771797 -331.19329834]
[-31.96802711 -344.53137207]
[-35.01200867 -359.32699585]
[-33.76289749 -374.38076782]
[-28.32195854 -388.47235107]
[-19.13026237 -400.45941162]
[-6.93293667 -409.37017822]
[7.28123379 -414.48233032]
[22.35997009 -415.38143921]
[37.08090973 -411.99459839]
[50.25068665 -404.59637451]
[60.80168915 -393.78652954]
[67.87859344 -380.44134521]
[70.90770721 -365.64263916]
[69.64347839 -350.59011841]
[64.18838501 -336.50399780]
[54.98464966 -324.52618408]
[42.77838135 -315.62768555]
[28.55908203 -310.52981567]
[29.45189667 -295.55639648]
[30.34471321 -280.58300781]
[31.23752975 -265.60958862]
[39.71865082 -253.36541748]
[32.81647110 -239.12918091]
[33.70928574 -224.15577698]
[34.60210419 -209.18237305]
[35.60636139 -194.21603394]
[36.72201157 -179.25758362]
[45.68035889 -171.12895203]
[46.73224640 -158.67594910]
[38.77029037 -148.52853394]
[39.66310883 -133.55513000]
[40.55592346 -118.58171844]
[41.44873810 -103.60831451]
[42.34155655 -88.63491058]
[43.23437119 -73.66149902]
[46.33848190 -58.98619843]
[51.58519745 -44.93372726]
[56.93638611 -30.92070389]
[62.39174271 -16.94790649]
[74.22798157 -7.90618277]
[72.03952026 7.76293421]
[77.49488068 21.73573112]
[82.95023346 35.70853043]
[96.65212250 41.43512344]
[102.38367462 55.52781296]
[96.28419495 69.86078644]
[101.73955536 83.83358002]
[115.10182190 93.97389984]
[112.39135742 110.52774048]
[118.05414581 124.41776276]
[123.71693420 138.30778503]
[129.37971497 152.19781494]
[135.51728821 158.96302795]
[135.02171326 166.33705139]
[140.47708130 180.30984497]
[147.47605896 167.04281616]
[161.76495361 162.47908020]
[175.15841675 169.23297119]
[179.98408508 183.43554688]
[173.47756958 196.95092773]
[159.36611938 202.03688049]
[145.73405457 195.78063965]
[149.92106628 210.18443298]
[154.10807800 224.58821106]
[171.04711914 233.07247925]
[176.31520081 250.93754578]
[167.01417542 266.70480347]
[171.62817383 280.97753906]
[176.24218750 295.25027466]
[180.85620117 309.52301025]
[185.47019958 323.79574585]
[190.08421326 338.06848145]
[192.35305786 323.24105835]
[198.33352661 309.48483276]
[207.62892151 297.71215820]
[219.62272644 288.70391846]
[233.51945496 283.05758667]
[248.39735413 281.14764404]
[263.26965332 283.10076904]
[277.14990234 288.78747559]
[289.11752319 297.83050537]
[298.37869263 309.63012695]
[304.31915283 323.40365601]
[306.54492188 338.23760986]
[304.90835571 353.14807129]
[299.51803589 367.14608765]
[290.73141479 379.30319214]
[279.13134766 388.81311035]
[265.48718262 395.04501343]
[250.70390320 397.58563232]
[235.76202393 396.26638794]
[221.65260315 391.17483521]
[209.31144714 382.64865112]
[199.55709839 371.25332642]
[193.03494263 357.73986816]
[192.81161499 372.73818970]
[192.58828735 387.73654175]
[192.36495972 402.73486328]
[201.70439148 418.60485840]
[192.12370300 433.30783081]
[192.12370300 448.30783081]
[192.12370300 463.30783081]
[192.12370300 478.30783081]
[192.12370300 493.30783081]
[194.73516846 497.82748413]
[195.29577637 502.43606567]
[194.11508179 506.33746338]
[191.77375793 508.97387695]
[191.10397339 523.95892334]
[190.43418884 538.94396973]
[189.76440430 553.92895508]
[202.75242615 562.12695312]
[209.88719177 575.72808838]
[209.24948120 591.07373047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 207]
[8 206]
[9 205]
[10 204]
[11 200]
[12 199]
[13 198]
[14 197]
[15 196]
[18 194]
[19 193]
[20 192]
[21 191]
[22 168]
[23 167]
[24 166]
[25 165]
[26 164]
[27 163]
[32 160]
[33 159]
[34 158]
[35 151]
[36 150]
[37 148]
[38 147]
[39 146]
[40 145]
[43 143]
[44 142]
[47 139]
[48 138]
[49 137]
[51 135]
[52 134]
[54 133]
[55 132]
[76 131]
[77 130]
[78 129]
[79 128]
[80 127]
[81 126]
[83 123]
[84 122]
[86 121]
[87 120]
[88 119]
[90 117]
[91 116]
[92 115]
[93 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
