%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[32.51900482 202.46641541]
[38.20395279 216.36146545]
[42.45397186 230.76036072]
[45.22544861 245.51535034]
[46.48995209 260.47503662]
[46.23449707 275.48590088]
[44.46170807 290.39389038]
[41.18978119 305.04602051]
[36.45228577 319.29199219]
[30.29783630 332.98556519]
[22.78959274 345.98620605]
[14.00459671 358.16058350]
[4.03300047 369.38369751]
[-7.02287340 379.54040527]
[-19.04957199 388.52645874]
[-31.92368317 396.24969482]
[-45.51309586 402.63082886]
[-59.67836380 407.60437012]
[-74.27412415 411.11932373]
[-89.15060425 413.13958740]
[-104.15513611 413.64440918]
[-119.13376617 412.62866211]
[-133.93276978 410.10275269]
[-148.40031433 406.09255981]
[-162.38789368 400.63928223]
[-175.75201416 393.79885864]
[-188.35552979 385.64151001]
[-200.06909180 376.25088501]
[-210.77250671 365.72341919]
[-220.35594177 354.16708374]
[-228.72105408 341.70050049]
[-235.78201294 328.45156860]
[-241.46633911 314.55627441]
[-245.71572876 300.15716553]
[-248.48655701 285.40206909]
[-249.75039673 270.44232178]
[-249.49427795 255.43147278]
[-247.72084045 240.52355957]
[-244.44827271 225.87155151]
[-239.71014404 211.62580872]
[-233.55509949 197.93252563]
[-226.04627991 184.93218994]
[-217.26074219 172.75822449]
[-207.28865051 161.53553772]
[-196.23233032 151.37931824]
[-184.20524597 142.39378357]
[-171.33079529 134.67111206]
[-157.74108887 128.29058838]
[-143.57560730 123.31764984]
[-128.97969055 119.80335236]
[-114.10312653 117.78375244]
[-99.09857178 117.27957153]
[-84.11998749 118.29598236]
[-69.32109070 120.82256317]
[-54.85373306 124.83337402]
[-40.86637878 130.28726196]
[-27.50256157 137.12828064]
[-14.89941406 145.28619385]
[-3.18626595 154.67732239]
[7.51668692 165.20527649]
[19.06298828 155.63015747]
[22.20509720 148.94068909]
[30.85321999 145.99998474]
[42.54080200 136.59782410]
[54.22838211 127.19567871]
[65.91596222 117.79352570]
[77.60354614 108.39137268]
[89.29113007 98.98921967]
[98.86624908 87.44291687]
[105.94335175 74.21739197]
[105.63237762 58.39924240]
[118.45918274 50.82809448]
[125.53629303 37.60256958]
[132.61340332 24.37704086]
[139.69050598 11.15151405]
[146.76760864 -2.07401371]
[153.84471130 -15.29954147]
[160.92181396 -28.52506828]
[167.80122375 -41.85449982]
[174.48143005 -55.28487396]
[181.16162109 -68.71524811]
[168.28262329 -76.41976929]
[156.03938293 -85.09915161]
[144.50556946 -94.70119476]
[133.75051880 -105.16815186]
[123.83892822 -116.43708038]
[114.83040619 -128.44020081]
[106.77912140 -141.10531616]
[99.73351288 -154.35626221]
[93.73594666 -168.11335754]
[88.82248688 -182.29383850]
[85.02268982 -196.81243896]
[82.35941315 -211.58184814]
[80.84866333 -226.51322937]
[80.49953461 -241.51676941]
[81.31412506 -256.50225830]
[83.28752899 -271.37954712]
[86.40789032 -286.05917358]
[90.65643311 -300.45288086]
[96.00761414 -314.47402954]
[102.42923737 -328.03836060]
[109.88269043 -341.06427002]
[118.32315063 -353.47341919]
[127.69985199 -365.19119263]
[137.95639038 -376.14709473]
[149.03109741 -386.27523804]
[160.85736084 -395.51470947]
[173.36405945 -403.80993652]
[186.47595215 -411.11105347]
[200.11421204 -417.37411499]
[214.19680786 -422.56149292]
[228.63903809 -426.64196777]
[243.35404968 -429.59100342]
[258.25335693 -431.39086914]
[273.24731445 -432.03073120]
[288.24575806 -431.50674438]
[303.15850830 -429.82205200]
[317.89587402 -426.98678589]
[332.36920166 -423.01800537]
[346.49145508 -417.93957520]
[360.17770386 -411.78207397]
[373.34561157 -404.58248901]
[385.91601562 -396.38412476]
[397.81332397 -387.23629761]
[408.96594238 -377.19400024]
[419.30682373 -366.31768799]
[428.77377319 -354.67272949]
[437.30984497 -342.32916260]
[444.86370850 -329.36120605]
[451.38995361 -315.84689331]
[456.84930420 -301.86749268]
[461.20892334 -287.50708008]
[464.44259644 -272.85198975]
[466.53088379 -257.99035645]
[467.46124268 -243.01162720]
[467.22802734 -228.00582886]
[465.83270264 -213.06323242]
[463.28359985 -198.27369690]
[459.59609985 -183.72616577]
[454.79232788 -169.50813293]
[448.90124512 -155.70512390]
[441.95822144 -142.40013123]
[434.00503540 -129.67318726]
[425.08950806 -117.60083008]
[415.26525879 -106.25566101]
[404.59140015 -95.70592499]
[393.13211060 -86.01505280]
[380.95629883 -77.24134064]
[368.13720703 -69.43754578]
[354.75192261 -62.65061188]
[340.88095093 -56.92134857]
[326.60772705 -52.28421783]
[312.01806641 -48.76710510]
[297.19973755 -46.39116287]
[282.24182129 -45.17068100]
[267.23431396 -45.11300278]
[252.26748657 -46.21847153]
[237.43132019 -48.48043823]
[222.81506348 -51.88530350]
[208.50659180 -56.41258240]
[194.59199524 -62.03505707]
[187.91180420 -48.60467911]
[181.23161316 -35.17430496]
[181.87510681 -30.44197273]
[179.55259705 -25.25515938]
[174.14733887 -21.44796371]
[167.07023621 -8.22243595]
[159.99313354 5.00309181]
[152.91603088 18.22861862]
[145.83892822 31.45414734]
[138.76182556 44.67967606]
[131.68470764 57.90520096]
[132.50189209 72.77737427]
[119.16887665 81.29449463]
[112.09177399 94.52002716]
[124.28409576 85.78233337]
[138.05213928 79.82909393]
[152.76953125 76.93112183]
[167.76675415 77.22026825]
[182.36149597 80.68338013]
[195.88983154 87.16290283]
[207.73629761 96.36405945]
[217.36195374 107.86826324]
[224.32890320 121.15214539]
[228.32020569 135.61138916]
[229.15425110 150.58818054]
[226.79313660 165.40118408]
[221.34423828 179.37651062]
[213.05548096 191.87835693]
[202.30392456 202.33799744]
[189.57870483 210.27957153]
[175.45872498 215.34181213]
[160.58634949 217.29438782]
[145.63818359 216.04849243]
[131.29425049 211.66079712]
[118.20713043 204.33091736]
[106.97217560 194.39231873]
[98.10051727 182.29711914]
[91.99574280 168.59559631]
[88.93559265 153.91107178]
[89.05927277 138.91157532]
[92.36116028 124.27950287]
[98.69327545 110.67680359]
[87.00569916 120.07895660]
[75.31811523 129.48110962]
[63.63053513 138.88325500]
[51.94295120 148.28540039]
[40.25537109 157.68756104]
[28.63810921 167.17645264]
[17.09180641 176.75157166]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 210]
[61 209]
[63 208]
[64 207]
[65 206]
[66 205]
[67 204]
[68 203]
[69 175]
[70 174]
[72 172]
[73 171]
[74 170]
[75 169]
[76 168]
[77 167]
[78 166]
[79 163]
[80 162]
[81 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
