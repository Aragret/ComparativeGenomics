%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCUUCAGUCCCAAUCCCACCAAUAUCAUCACACGUACCAAUAAUGAAAAUAAACCUCAACGUGGUUUUAAAAACCCCGGAUUCUGGUUACCUAUCGAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[149.05218506 575.40454102]
[146.99290466 560.52258301]
[146.97930908 545.49877930]
[149.01164246 530.61315918]
[153.05204773 516.14288330]
[159.02525330 502.35754395]
[166.81997681 489.51403809]
[176.29103088 477.85156250]
[187.26194763 467.58743286]
[199.52835083 458.91281128]
[212.86174011 451.98931885]
[207.82481384 437.86029053]
[202.78790283 423.73126221]
[191.22612000 414.34115601]
[193.88014221 398.74414062]
[182.31835938 389.35400391]
[184.97236633 373.75698853]
[179.93545532 359.62796021]
[174.89854431 345.49893188]
[163.33676147 336.10882568]
[165.99076843 320.51181030]
[160.95385742 306.38278198]
[155.91693115 292.25375366]
[152.06250000 289.43374634]
[149.93865967 284.16247559]
[150.94723511 277.62838745]
[146.33322144 263.35565186]
[141.71922302 249.08291626]
[137.10520935 234.81018066]
[132.49119568 220.53744507]
[127.87718964 206.26470947]
[112.59027863 199.25407410]
[106.99347687 183.03707886]
[115.01179504 167.48954773]
[103.59110260 157.92832947]
[106.47703552 142.37255859]
[101.65103912 128.17010498]
[96.82504272 113.96764374]
[86.43765259 104.60848999]
[88.97250366 90.85835266]
[84.14650726 76.65589905]
[68.09600830 75.71255493]
[53.67103958 68.69893646]
[43.06748962 56.71560287]
[37.88687134 41.61709213]
[38.89448929 25.72496605]
[45.90653229 11.47083569]
[57.82274246 1.02430618]
[52.78582764 -13.10472298]
[47.53910828 -27.15719414]
[42.08375168 -41.12999344]
[36.62839508 -55.10279083]
[31.17303658 -69.07558441]
[25.71767998 -83.04838562]
[20.26232338 -97.02118683]
[8.03588295 -107.06233215]
[10.61454487 -121.73202515]
[5.15918732 -135.70481873]
[3.87953281 -120.75950623]
[-0.54054570 -106.42552948]
[-7.89996433 -93.35498810]
[-17.86391830 -82.14251709]
[-29.97911453 -73.29819489]
[-43.69439316 -67.22438049]
[-58.38579559 -64.19740295]
[-73.38497162 -64.35496521]
[-88.00954437 -67.68988800]
[-101.59420776 -74.05046844]
[-113.52094269 -83.14733887]
[-123.24716187 -94.56665039]
[-130.33038330 -107.78889465]
[-134.44837952 -122.21256256]
[-135.41380310 -137.18145752]
[-133.18273926 -152.01461792]
[-127.85667419 -166.03720093]
[-119.67790985 -178.61129761]
[-109.01853943 -189.16485596]
[-96.36347961 -197.21777344]
[-82.28845215 -202.40370178]
[-67.43378448 -204.48667908]
[-52.47526169 -203.37197876]
[-38.09339523 -199.11030579]
[-24.94246292 -191.89552307]
[-13.62074757 -182.05587769]
[-4.64331007 -170.03898621]
[1.58280313 -156.38743591]
[2.02940893 -171.38078308]
[2.47601509 -186.37414551]
[-4.84697247 -200.39855957]
[3.26583600 -212.88981628]
[3.71244192 -227.88317871]
[4.15904760 -242.87652588]
[4.49402380 -257.87277222]
[4.71735144 -272.87112427]
[4.94067955 -287.86944580]
[-9.53712940 -292.14678955]
[-22.32343483 -300.17257690]
[-32.46940994 -311.35119629]
[-39.22215652 -324.85314941]
[-42.08057404 -339.67651367]
[-40.83255005 -354.72128296]
[-35.57069778 -368.87103271]
[-26.68547821 -381.07577515]
[-14.83623505 -390.42980957]
[-0.90226150 -396.23901367]
[14.08244991 -398.07232666]
[29.00593376 -395.79367065]
[42.76076889 -389.57217407]
[54.32625198 -379.86947632]
[62.84415054 -367.40560913]
[67.68238068 -353.10546875]
[68.48191071 -338.03021240]
[65.18341827 -323.29855347]
[58.03166199 -310.00363159]
[47.55735397 -299.13201904]
[34.53775787 -291.49050903]
[19.93901634 -287.64611816]
[19.71568871 -272.64779663]
[19.49236107 -257.64944458]
[22.53592682 -250.91458130]
[19.15239716 -242.42991638]
[18.70579147 -227.43656921]
[18.25918579 -212.44322205]
[25.61411667 -199.49122620]
[17.46936417 -185.92753601]
[17.02275848 -170.93418884]
[16.57615280 -155.94082642]
[19.13198471 -141.16018677]
[24.58734322 -127.18738556]
[36.42358017 -118.14566040]
[34.23512268 -102.47653961]
[39.69047928 -88.50374603]
[45.14583588 -74.53094482]
[50.60119247 -60.55814743]
[56.05654907 -46.58535004]
[61.51190567 -32.61255264]
[65.44859314 -29.90856171]
[67.72843933 -24.70285988]
[66.91485596 -18.14163971]
[71.95177460 -4.01260996]
[85.98423767 -3.84184504]
[99.14356995 1.11905575]
[109.84185791 10.29326344]
[116.78074646 22.59424210]
[119.10897064 36.55440521]
[116.52674866 50.50020218]
[109.32421112 62.75273895]
[98.34896088 71.82990265]
[103.17495728 86.03235626]
[113.56234741 95.39151001]
[111.02749634 109.14164734]
[115.85349274 123.34410095]
[120.67949677 137.54655457]
[132.44537354 148.12362671]
[129.21424866 162.66354370]
[141.90110779 167.18663025]
[149.55477905 178.03245544]
[149.56417847 191.11227417]
[142.14991760 201.65069580]
[146.76393127 215.92343140]
[151.37794495 230.19616699]
[155.99194336 244.46890259]
[160.60595703 258.74163818]
[165.21997070 273.01437378]
[170.04595947 287.21682739]
[175.08288574 301.34585571]
[180.11979675 315.47488403]
[192.04185486 325.87561035]
[189.02757263 340.46200562]
[194.06448364 354.59103394]
[199.10139465 368.72009277]
[211.02345276 379.12081909]
[208.00917053 393.70721436]
[219.93122864 404.10794067]
[216.91693115 418.69433594]
[221.95385742 432.82339478]
[226.99076843 446.95242310]
[241.69700623 443.87991333]
[256.68466187 442.83862305]
[271.67449951 443.84793091]
[286.38726807 446.88900757]
[300.54888916 451.90521240]
[313.89550781 458.80310059]
[326.17855835 467.45416260]
[337.16912842 477.69723511]
[346.66253662 489.34152222]
[354.48190308 502.17007446]
[360.48153687 515.94384766]
[364.54971313 530.40637207]
[366.61059570 545.28814697]
[366.62582397 560.31188965]
[364.59509277 575.19781494]
[360.55624390 589.66851807]
[354.58453369 603.45446777]
[346.79119873 616.29882812]
[337.32141113 627.96228027]
[326.35159302 638.22766113]
[314.08615112 646.90356445]
[300.75350952 653.82849121]
[286.60208130 658.87341309]
[271.89550781 661.94427490]
[256.90774536 662.98394775]
[241.91802979 661.97302246]
[227.20558167 658.93035889]
[213.04450989 653.91265869]
[199.69860840 647.01330566]
[187.41651917 638.36090088]
[176.42703247 628.11663818]
[166.93489075 616.47131348]
[159.11692810 603.64196777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 177]
[12 176]
[13 175]
[15 173]
[17 171]
[18 170]
[19 169]
[21 167]
[22 166]
[23 165]
[26 164]
[27 163]
[28 162]
[29 161]
[30 160]
[31 159]
[34 155]
[36 153]
[37 152]
[38 151]
[40 149]
[41 148]
[48 140]
[49 139]
[50 136]
[51 135]
[52 134]
[53 133]
[54 132]
[55 131]
[57 129]
[58 128]
[86 127]
[87 126]
[88 125]
[90 123]
[91 122]
[92 121]
[93 119]
[94 118]
[95 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
