%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[82.44833374 643.58789062]
[74.49407196 656.39385986]
[63.70578766 666.92364502]
[50.71068954 674.56506348]
[36.26430130 678.87377930]
[21.20651245 679.59936523]
[6.41276741 676.69964600]
[-7.25684643 670.34313965]
[-19.00759506 660.89941406]
[-28.15630722 648.91760254]
[-34.17108917 635.09423828]
[-36.70224380 620.23297119]
[-35.60261917 605.19787598]
[-30.93614388 590.86303711]
[-22.97412109 578.06188965]
[-12.17945290 567.53863525]
[0.82027513 559.90509033]
[15.26927376 555.60516357]
[30.32749748 554.88867188]
[33.21277237 540.16876221]
[36.09804535 525.44891357]
[38.98331451 510.72900391]
[32.49728012 500.51831055]
[34.78057861 488.23132324]
[45.14540482 480.55453491]
[48.24951553 465.87924194]
[51.35362625 451.20391846]
[54.45773697 436.52862549]
[55.79597092 421.58843994]
[55.34936523 406.59509277]
[54.90275955 391.60174561]
[54.45615005 376.60839844]
[54.00954437 361.61505127]
[46.11544037 358.16699219]
[39.73658752 352.31326294]
[35.58326340 344.66735840]
[34.13029861 336.04431152]
[35.56295013 327.37384033]
[39.75379944 319.60006714]
[46.27355576 313.57873535]
[54.43488693 309.98297119]
[55.10467148 294.99792480]
[55.77445602 280.01290894]
[56.44424057 265.02786255]
[47.76038361 277.25857544]
[34.67185211 284.58593750]
[19.70584106 285.59518433]
[5.75205278 280.09136963]
[-4.49525642 269.13726807]
[-9.05749130 254.84790039]
[-7.05375528 239.98233032]
[1.12906122 227.41087341]
[13.91098499 219.56088257]
[28.82402611 217.94804382]
[42.98870850 222.88380432]
[53.67005920 233.41513062]
[58.80583572 247.50985718]
[62.12809372 232.88240051]
[65.45035553 218.25492859]
[60.72410202 204.13006592]
[71.32575989 192.38632202]
[66.59951019 178.26145935]
[77.20116425 166.51771545]
[80.52342224 151.89025879]
[83.84568024 137.26280212]
[87.16793823 122.63533783]
[76.23741150 110.59998322]
[74.58441162 94.42612457]
[82.85430908 80.42845154]
[97.81832886 74.07201385]
[100.92243958 59.39670944]
[104.02655029 44.72140884]
[107.13066101 30.04610634]
[109.68649292 15.26545143]
[111.69050598 0.39992359]
[105.86628723 -14.31024361]
[115.23459625 -25.88970757]
[117.23860931 -40.75523758]
[119.24262238 -55.62076569]
[121.13591766 -70.50080109]
[122.91838074 -85.39451599]
[124.70085144 -100.28823090]
[126.48331451 -115.18195343]
[127.82154846 -130.12213135]
[128.71437073 -145.09553528]
[121.81217957 -159.33178711]
[130.29330444 -171.57595825]
[131.18612671 -186.54936218]
[132.07893372 -201.52276611]
[125.17675781 -215.75900269]
[133.65788269 -228.00317383]
[134.55068970 -242.97657776]
[125.92919922 -259.24777222]
[136.15686035 -273.50827026]
[136.82664490 -288.49331665]
[137.49642944 -303.47833252]
[138.16621399 -318.46337891]
[123.92987061 -323.54452515]
[111.82469940 -332.59750366]
[102.92707825 -344.81729126]
[98.02818298 -359.11737061]
[97.56362152 -374.22616577]
[101.57469177 -388.80020142]
[109.70474243 -401.54357910]
[121.23085785 -411.32318115]
[135.12812805 -417.26937866]
[150.16082764 -418.85342407]
[164.99226379 -415.93453979]
[178.30361938 -408.77218628]
[188.91128540 -398.00329590]
[195.87200928 -384.58541870]
[198.56684875 -369.71163940]
[196.75619507 -354.70452881]
[190.60104370 -340.89855957]
[180.64871216 -329.52127075]
[167.78414917 -321.58438110]
[153.15126038 -317.79360962]
[152.48147583 -302.80856323]
[151.81169128 -287.82351685]
[151.14189148 -272.83847046]
[159.07084656 -263.70291138]
[158.63546753 -251.21316528]
[149.52409363 -242.08377075]
[148.63128662 -227.11036682]
[155.59732056 -213.94512939]
[147.05233765 -200.62994385]
[146.15953064 -185.65653992]
[145.26670837 -170.68313599]
[152.23275757 -157.51789856]
[143.68777466 -144.20272827]
[142.79495239 -129.22932434]
[144.55262756 -127.04557800]
[145.55117798 -124.03401947]
[145.47100830 -120.48028564]
[144.10166931 -116.78036499]
[141.37702942 -113.39948273]
[139.59455872 -98.50576782]
[137.81210327 -83.61205292]
[136.02963257 -68.71833038]
[138.35601807 -61.70336914]
[134.10815430 -53.61674881]
[132.10414124 -38.75122070]
[130.10012817 -23.88569450]
[136.06768799 -10.23880959]
[126.55603790 2.40393734]
[124.55201721 17.26946640]
[137.88131714 10.38978958]
[151.63246155 16.38193130]
[155.66864014 30.82870483]
[147.01452637 43.08049011]
[132.04960632 44.10572052]
[121.80596161 33.15021515]
[118.70185089 47.82551956]
[115.59774017 62.50082016]
[112.49362946 77.17612457]
[122.10560608 86.27548981]
[125.99745178 98.92626190]
[123.16207886 111.85488129]
[114.33319855 121.71588135]
[101.79540253 125.95759583]
[98.47313690 140.58505249]
[95.15087891 155.21250916]
[91.82862091 169.83998108]
[96.31723785 185.01109314]
[85.95321655 195.70858765]
[90.44183350 210.87969971]
[80.07781219 221.57719421]
[76.75555420 236.20465088]
[73.43329620 250.83210754]
[71.42928314 265.69763184]
[70.75949860 280.68267822]
[70.08971405 295.66772461]
[69.41992188 310.65277100]
[85.30253601 325.60351562]
[84.94560242 347.12857056]
[69.00289917 361.16842651]
[69.44950104 376.16177368]
[69.89611053 391.15512085]
[70.34271240 406.14849854]
[70.78932190 421.14184570]
[77.65325928 407.80444336]
[88.61781311 397.56829834]
[102.39485931 391.63592529]
[117.36589813 390.70428467]
[131.77214050 394.88281250]
[143.92117310 403.68060303]
[152.38571167 416.06414795]
[156.17135620 430.57858276]
[154.83338928 445.51876831]
[148.52899170 459.12960815]
[137.99877930 469.81204224]
[124.47985077 476.31115723]
[109.56038666 477.86343384]
[94.99311066 474.28649902]
[82.48937225 466.00057983]
[73.51810455 453.97906494]
[69.13304138 439.63275146]
[66.02893066 454.30804443]
[62.92481613 468.98333740]
[59.82070923 483.65863037]
[65.93312836 501.02871704]
[53.70320892 513.61425781]
[50.81793594 528.33416748]
[47.93266296 543.05407715]
[45.04738998 557.77392578]
[58.72085571 564.12213135]
[70.47732544 573.55871582]
[79.63330078 585.53503418]
[85.65646362 599.35473633]
[88.19662476 614.21447754]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 205]
[20 204]
[21 203]
[22 202]
[25 200]
[26 199]
[27 198]
[28 197]
[29 180]
[30 179]
[31 178]
[32 177]
[33 176]
[41 173]
[42 172]
[43 171]
[44 170]
[57 169]
[58 168]
[59 167]
[61 165]
[63 163]
[64 162]
[65 161]
[66 160]
[70 155]
[71 154]
[72 153]
[73 152]
[74 146]
[75 145]
[77 143]
[78 142]
[79 141]
[80 139]
[81 138]
[82 137]
[83 136]
[84 131]
[85 130]
[87 128]
[88 127]
[89 126]
[91 124]
[92 123]
[94 120]
[95 119]
[96 118]
[97 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
