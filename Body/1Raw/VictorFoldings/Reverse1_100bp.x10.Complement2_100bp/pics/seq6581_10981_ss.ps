%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[80.00996399 525.60028076]
[69.18224335 515.15246582]
[60.52767944 502.84414673]
[54.35912704 489.12023926]
[50.89957428 474.47686768]
[50.27408600 459.44338989]
[52.50526810 444.56326294]
[57.51246643 430.37438965]
[65.11467743 417.38967896]
[75.03707886 406.07849121]
[86.92098999 396.84979248]
[100.33680725 390.03713989]
[114.79956055 385.88681030]
[113.46132660 370.94662476]
[112.12309265 356.00643921]
[110.78485870 341.06625366]
[109.44662476 326.12606812]
[108.10839081 311.18588257]
[106.77015686 296.24569702]
[105.43192291 281.30551147]
[104.09368896 266.36532593]
[90.49777985 264.15768433]
[77.81995392 258.74768066]
[66.80315399 250.44714355]
[58.09420395 239.73750305]
[52.20587540 227.24177551]
[49.48665619 213.68835449]
[50.10016632 199.86854553]
[54.01528549 186.59037781]
[61.00772858 174.63137817]
[70.67285919 164.69297791]
[82.44912720 157.35942078]
[95.65068054 153.06344604]
[94.75786591 138.09004211]
[93.86505127 123.11663055]
[92.97223663 108.14322662]
[89.10792542 93.64953613]
[82.42773438 80.21915436]
[75.74753571 66.78878021]
[69.06734467 53.35840607]
[62.38714981 39.92802811]
[55.70695496 26.49765396]
[55.05455780 41.48345947]
[49.38005447 55.36870575]
[39.35008240 66.52216339]
[26.14295197 73.63353729]
[11.31022167 75.86739349]
[-3.40557313 72.96130371]
[-16.27563477 65.25666046]
[-25.78800201 53.65860367]
[-30.82517242 39.52966309]
[-30.79538155 24.52969360]
[-25.70213127 10.42087460]
[-16.14377022 -1.13930523]
[-3.24320745 -8.79276562]
[11.48401451 -11.64038658]
[26.30775452 -9.34763241]
[39.48653412 -2.18385291]
[49.47295380 9.01068878]
[46.15069580 -5.61677122]
[42.82843399 -20.24423218]
[39.50617599 -34.87169266]
[36.18391800 -49.49915314]
[32.29104233 -35.01310730]
[24.16502953 -22.40485764]
[12.58040237 -12.87614250]
[-1.35867000 -7.33518028]
[-16.32360268 -6.31009817]
[-30.88803291 -9.89860058]
[-43.66377258 -17.75865555]
[-53.43312073 -29.14109039]
[-59.26492691 -42.96100616]
[-60.60333633 -57.90117645]
[-57.32078171 -72.53759766]
[-49.73013306 -85.47521973]
[-38.55488968 -95.48091125]
[-24.86019707 -101.60099792]
[-9.95135021 -103.25214386]
[4.75063562 -100.27697754]
[17.84446144 -92.95907593]
[28.08210564 -81.99592590]
[34.48810196 -68.43138123]
[35.15789032 -83.41641998]
[35.82767487 -98.40145874]
[36.49745941 -113.38649750]
[37.16724396 -128.37153625]
[22.41231346 -131.21931458]
[8.22929287 -136.18518066]
[-5.07950735 -143.16326904]
[-17.23040771 -152.00485229]
[-27.96441269 -162.52145386]
[-37.05272293 -174.48892212]
[-44.30162430 -187.65217590]
[-49.55660629 -201.73063660]
[-52.70565414 -216.42422485]
[-53.68165207 -231.41973877]
[-52.46379089 -246.39753723]
[-49.07803345 -261.03839111]
[-43.59654236 -275.03021240]
[-36.13616180 -288.07476807]
[-26.85590553 -299.89401245]
[-15.95358562 -310.23605347]
[-3.66158509 -318.88037109]
[9.75809193 -325.64279175]
[24.01940346 -330.37911987]
[38.81837082 -332.98843384]
[53.83954620 -333.41506958]
[68.76276398 -331.64999390]
[83.26992798 -327.73080444]
[97.05181122 -321.74102783]
[109.81466675 -313.80834961]
[121.28643799 -304.10183716]
[131.22261047 -292.82839966]
[139.41140747 -280.22833252]
[145.67825317 -266.57022095]
[149.88960266 -252.14514160]
[151.95565796 -237.26062012]
[151.83241272 -222.23388672]
[149.52247620 -207.38525391]
[145.07508850 -193.03120422]
[138.58503723 -179.47770691]
[130.19067383 -167.01365662]
[120.07092285 -155.90472412]
[108.44147491 -146.38769531]
[95.55022430 -138.66543579]
[81.67193604 -132.90252686]
[67.10243988 -129.22181702]
[52.15228271 -127.70175171]
[51.48249817 -112.71671295]
[50.81271362 -97.73167419]
[50.14292908 -82.74663544]
[49.47314072 -67.76159668]
[50.81137848 -52.82141113]
[54.13363647 -38.19395065]
[57.45589447 -23.56649017]
[60.77815628 -8.93903065]
[64.10041809 5.68842983]
[69.13732910 19.81745911]
[75.81752777 33.24783325]
[82.49771881 46.67821121]
[89.17791748 60.10858536]
[95.85810852 73.53896332]
[102.53830719 86.96933746]
[102.47949982 71.96945190]
[105.60314178 57.29829788]
[111.76711273 43.62330246]
[120.69100952 31.56659889]
[131.96884155 21.67668152]
[145.08755493 14.40347576]
[159.45031738 10.07786369]
[174.40373230 8.89663315]
[189.26751709 10.91352177]
[203.36547852 16.03677368]
[216.05622864 24.03331566]
[226.76245117 34.53936005]
[234.99705505 47.07695007]
[240.38545227 61.07570648]
[242.68247986 75.89878845]
[241.78366089 90.87183380]
[237.72985840 105.31367493]
[230.70552063 118.56729889]
[221.03019714 130.02976990]
[209.14404297 139.17959595]
[195.58781433 145.60054016]
[180.97821045 149.00048828]
[165.97988892 149.22477722]
[151.27516174 146.26316833]
[137.53300476 140.25044250]
[125.37858582 131.46009827]
[115.36485291 120.29205322]
[107.94564056 107.25041199]
[108.83845520 122.22381592]
[109.73126984 137.19721985]
[110.62408447 152.17062378]
[126.54442596 155.67741394]
[140.82528687 163.51048279]
[152.31924438 175.03149414]
[160.10533142 189.30622864]
[163.56280518 205.18019104]
[162.42059326 221.37213135]
[156.77862549 236.57736206]
[147.09906006 249.57289124]
[134.16845703 259.31585693]
[119.03387451 265.02709961]
[120.37210846 279.96728516]
[121.71034241 294.90747070]
[123.04857635 309.84765625]
[124.38681030 324.78784180]
[125.72504425 339.72802734]
[127.06327820 354.66821289]
[128.40151978 369.60839844]
[129.73974609 384.54858398]
[144.70986938 386.06250000]
[159.12286377 390.38247681]
[172.45771790 397.35226440]
[184.23239136 406.71997070]
[194.02120972 418.14691162]
[201.47035217 431.22006226]
[206.31050110 445.46679688]
[208.36671448 460.37210083]
[207.56465149 475.39718628]
[203.93330383 489.99890137]
[197.60394287 503.64938354]
[188.80537415 515.85516357]
[177.85565186 526.17504883]
[165.15061951 534.23602295]
[151.14953613 539.74658203]
[136.35855103 542.50756836]
[121.31232452 542.41918945]
[106.55479431 539.48461914]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 192]
[14 191]
[15 190]
[16 189]
[17 188]
[18 187]
[19 186]
[20 185]
[21 184]
[33 174]
[34 173]
[35 172]
[36 171]
[37 143]
[38 142]
[39 141]
[40 140]
[41 139]
[42 138]
[59 137]
[60 136]
[61 135]
[62 134]
[63 133]
[82 132]
[83 131]
[84 130]
[85 129]
[86 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
