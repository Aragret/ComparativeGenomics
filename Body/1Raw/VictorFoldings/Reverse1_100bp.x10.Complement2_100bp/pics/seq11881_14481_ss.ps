%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[84.92660522 491.75894165]
[80.89402008 477.03817749]
[83.65633392 462.02709961]
[92.66509247 449.70617676]
[106.13159180 442.52175903]
[105.46180725 427.53671265]
[102.02276611 420.99493408]
[104.89527893 412.32391357]
[104.44867706 397.33056641]
[104.00206757 382.33721924]
[103.44385529 367.34762573]
[102.77407074 352.36257935]
[99.33503723 345.82080078]
[102.20755005 337.14978027]
[101.76094818 322.15643311]
[101.31433868 307.16308594]
[100.86773682 292.16973877]
[90.85352325 277.75854492]
[99.71631622 261.61752319]
[91.41843414 249.24842834]
[98.53180695 235.11653137]
[97.86202240 220.13150024]
[97.19223785 205.14645386]
[96.52245331 190.16142273]
[95.85266113 175.17637634]
[95.18287659 160.19134521]
[94.51309204 145.20629883]
[93.84330750 130.22126770]
[79.47711182 123.02261353]
[70.68178558 109.57455444]
[69.84479523 93.52751160]
[77.19332123 79.23741150]
[90.73265076 70.58323669]
[89.83983612 55.60983276]
[88.94702148 40.63642502]
[88.05420685 25.66302109]
[72.82649231 20.50308037]
[60.77372360 9.92001247]
[53.72196579 -4.44342756]
[52.72446823 -20.37480545]
[57.90445328 -35.43278503]
[68.44076538 -47.32123184]
[82.69789124 -54.23934555]
[81.58224487 -69.19779968]
[80.46659088 -84.15625000]
[79.35094452 -99.11470795]
[78.23529816 -114.07315826]
[77.11964417 -129.03161621]
[73.36063385 -137.35673523]
[76.10043335 -144.22079468]
[67.55545044 -157.53596497]
[74.52149200 -170.70120239]
[73.62867737 -185.67460632]
[72.73586273 -200.64801025]
[64.19087982 -213.96318054]
[71.15692139 -227.12843323]
[70.26410675 -242.10183716]
[69.37129211 -257.07522583]
[65.83161926 -271.65161133]
[53.16901016 -281.13681030]
[55.09006500 -295.90701294]
[49.01623154 -309.62228394]
[42.94239426 -323.33755493]
[36.86856079 -337.05282593]
[30.79472733 -350.76806641]
[24.72089386 -364.48333740]
[18.64706039 -378.19860840]
[12.57322598 -391.91387939]
[6.49939203 -405.62915039]
[-7.93759823 -401.47137451]
[-22.80628204 -399.31823730]
[-37.82966232 -399.20983887]
[-52.72786713 -401.14819336]
[-67.22335052 -405.09722900]
[-81.04606628 -410.98333740]
[-93.93851471 -418.69686890]
[-105.66050720 -428.09414673]
[-115.99367523 -439.00006104]
[-124.74551392 -451.21148682]
[-131.75299072 -464.50094604]
[-136.88555908 -478.62078857]
[-140.04759216 -493.30804443]
[-141.18019104 -508.28906250]
[-140.26225281 -523.28479004]
[-137.31088257 -538.01580811]
[-132.38105774 -552.20770264]
[-125.56462097 -565.59613037]
[-116.98855591 -577.93164062]
[-106.81263733 -588.98443604]
[-95.22642517 -598.54864502]
[-82.44577026 -606.44604492]
[-68.70877075 -612.52947998]
[-54.27132797 -616.68566895]
[-39.40241241 -618.83721924]
[-24.37901688 -618.94396973]
[-9.48102379 -617.00402832]
[5.01403046 -613.05340576]
[18.83611107 -607.16583252]
[31.72772026 -599.45086670]
[43.44869614 -590.05236816]
[53.78068161 -579.14532471]
[62.53120422 -566.93292236]
[69.53723907 -553.64270020]
[74.66827393 -539.52227783]
[77.82872009 -524.83471680]
[78.95969391 -509.85357666]
[78.04013824 -494.85797119]
[75.08717346 -480.12725830]
[70.15581512 -465.93588257]
[63.33792877 -452.54818726]
[54.76053238 -440.21359253]
[44.58341217 -429.16189575]
[32.99617004 -419.59896851]
[20.21465874 -411.70297241]
[26.28849220 -397.98770142]
[32.36232758 -384.27246094]
[38.43616104 -370.55718994]
[44.50999451 -356.84191895]
[50.58382797 -343.12664795]
[56.65766144 -329.41137695]
[62.73149490 -315.69610596]
[68.80532837 -301.98083496]
[81.03349304 -293.47665405]
[79.54688263 -277.72543335]
[80.18927765 -292.71170044]
[84.35214233 -307.12246704]
[91.80004883 -320.14279175]
[102.11177063 -331.03628540]
[114.70413971 -339.18688965]
[128.86499023 -344.13363647]
[143.79345703 -345.59674072]
[158.64527893 -343.49349976]
[172.58049011 -337.94284058]
[184.81100464 -329.25869751]
[194.64511108 -317.93215942]
[201.52665710 -304.60385132]
[205.06645203 -290.02749634]
[205.06431580 -275.02749634]
[201.52033997 -260.45214844]
[194.63497925 -247.12580872]
[184.79762268 -235.80209351]
[172.56463623 -227.12142944]
[158.62783813 -221.57475281]
[143.77542114 -219.47576904]
[128.84736633 -220.94316101]
[114.68792725 -225.89396667]
[102.09789276 -234.04815674]
[91.78929138 -244.94461060]
[84.34469604 -257.96804810]
[85.23751068 -242.99464417]
[86.13032532 -228.02124023]
[94.61145020 -215.77706909]
[87.70926666 -201.54083252]
[88.60208130 -186.56742859]
[89.49489594 -171.59402466]
[97.97602081 -159.34983826]
[91.07384491 -145.11360168]
[92.07810211 -130.14726257]
[93.19374847 -115.18881226]
[94.30940247 -100.23035431]
[95.42504883 -85.27190399]
[96.54069519 -70.31344604]
[97.65634155 -55.35499573]
[111.14265442 -51.47443771]
[122.51853943 -43.20595932]
[130.40553284 -31.52627945]
[133.83934021 -17.82696533]
[132.38769531 -3.74862885]
[126.20472717 9.01553631]
[116.01475525 18.92339897]
[103.02761078 24.77020454]
[103.92042542 39.74361038]
[104.81324005 54.71701431]
[105.70605469 69.69042206]
[118.17744446 75.08393860]
[127.12075043 85.31345367]
[130.80014038 98.39349365]
[128.50149536 111.78535461]
[120.67095184 122.88977051]
[108.82834625 129.55148315]
[109.49813080 144.53651428]
[110.16791534 159.52156067]
[110.83769989 174.50659180]
[111.50749207 189.49163818]
[112.17727661 204.47666931]
[112.84706116 219.46171570]
[113.51684570 234.44674683]
[121.86264038 247.88766479]
[114.70135498 260.94772339]
[123.67579651 270.21176147]
[123.92516327 282.70663452]
[115.86108398 291.72311401]
[116.30769348 306.71649170]
[116.75429535 321.70983887]
[117.20090485 336.70318604]
[117.75910950 351.69277954]
[118.42889404 366.67782593]
[121.93837738 375.11117554]
[118.99542236 381.89062500]
[119.44202423 396.88397217]
[119.88863373 411.87731934]
[120.44684601 426.86691284]
[121.11663055 441.85195923]
[135.17039490 447.80633545]
[145.24243164 459.27441406]
[149.33296204 473.97918701]
[146.62977600 489.00100708]
[137.66961670 501.35729980]
[124.23151398 508.59472656]
[108.98361969 509.27627563]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 203]
[6 202]
[8 201]
[9 200]
[10 199]
[11 197]
[12 196]
[14 195]
[15 194]
[16 193]
[17 192]
[19 189]
[21 187]
[22 186]
[23 185]
[24 184]
[25 183]
[26 182]
[27 181]
[28 180]
[33 174]
[34 173]
[35 172]
[36 171]
[43 163]
[44 162]
[45 161]
[46 160]
[47 159]
[48 158]
[50 157]
[52 155]
[53 154]
[54 153]
[56 151]
[57 150]
[58 149]
[59 124]
[61 122]
[62 121]
[63 120]
[64 119]
[65 118]
[66 117]
[67 116]
[68 115]
[69 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
