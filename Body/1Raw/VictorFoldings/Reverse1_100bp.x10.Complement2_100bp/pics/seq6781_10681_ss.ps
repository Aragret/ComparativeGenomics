%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[40.35386658 401.26144409]
[44.63739395 415.67141724]
[46.55379105 430.58193970]
[46.05341721 445.60678101]
[43.14923477 460.35678101]
[37.91646957 474.44982910]
[30.49066353 487.52093506]
[21.06415939 499.23147583]
[9.88112831 509.27816772]
[-2.76876163 517.40075684]
[-16.55784798 523.38885498]
[-31.12896156 527.08734131]
[-46.10467529 528.40045166]
[-61.09708023 527.29412842]
[-75.71783447 523.79699707]
[-89.58823395 517.99975586]
[-102.34899902 510.05249023]
[-113.66958618 500.16107178]
[-123.25678253 488.58169556]
[-130.86224365 475.61428833]
[-136.28895569 461.59478760]
[-139.39639282 446.88629150]
[-140.10403442 431.86978149]
[-138.39355469 416.93423462]
[-134.30926514 402.46652222]
[-127.95695496 388.84136963]
[-119.50117493 376.41174316]
[-109.16093445 365.49957275]
[-97.20407867 356.38748169]
[-83.94032288 349.31155396]
[-69.71321869 344.45504761]
[-54.89128876 341.94375610]
[-39.85845947 341.84271240]
[-25.00411606 344.15454102]
[-10.71301842 348.81939697]
[-3.83360577 335.48995972]
[3.04580665 322.16052246]
[9.92521954 308.83108521]
[15.79417992 295.02691650]
[20.62017822 280.82446289]
[25.44617462 266.62200928]
[30.27217293 252.41955566]
[29.15552139 249.84832764]
[28.99008751 246.67984009]
[30.00845337 243.27421570]
[32.30867386 240.06898499]
[35.83132172 237.53028870]
[41.49410629 223.64025879]
[47.15689468 209.75024414]
[52.81967926 195.86021423]
[46.82429504 182.27378845]
[52.36929703 168.10665894]
[66.66063690 161.91026306]
[72.32342529 148.02023315]
[77.98621368 134.13020325]
[83.64900208 120.24018097]
[74.82708740 106.58367920]
[75.83333588 90.35674286]
[86.27486420 77.89477539]
[102.07504272 74.06326294]
[107.53040314 60.09046173]
[112.98575592 46.11766434]
[118.44111633 32.14486694]
[117.63392639 27.87843895]
[118.17222595 23.97014618]
[119.77820587 20.79898834]
[122.07951355 18.61482048]
[124.65956116 17.51868820]
[130.93692017 3.89537120]
[137.21427917 -9.72794533]
[143.49163818 -23.35126114]
[149.76899719 -36.97457886]
[148.51705933 -52.74617386]
[160.87048340 -61.06735992]
[167.14785767 -74.69067383]
[173.42521667 -88.31399536]
[169.69900513 -100.66220093]
[175.20790100 -111.87985992]
[186.50907898 -116.19377136]
[192.98858643 -129.72212219]
[199.46807861 -143.25045776]
[205.94757080 -156.77880859]
[212.42706299 -170.30715942]
[211.41009521 -186.09564209]
[223.88603210 -194.23197937]
[210.96537781 -201.87045288]
[198.75964355 -210.60597229]
[187.36170959 -220.37205505]
[176.85832214 -231.09437561]
[167.32943726 -242.69134521]
[158.84754944 -255.07467651]
[151.47723389 -268.15014648]
[145.27458191 -281.81823730]
[140.28678894 -295.97488403]
[136.55181885 -310.51242065]
[134.09811401 -325.32012939]
[132.94432068 -340.28536987]
[133.09924316 -355.29421997]
[134.56170654 -370.23245239]
[137.32055664 -384.98635864]
[141.35479736 -399.44369507]
[146.63375854 -413.49438477]
[153.11721802 -427.03149414]
[160.75587463 -439.95205688]
[169.49156189 -452.15765381]
[179.25781250 -463.55545044]
[189.98028564 -474.05868530]
[201.57737732 -483.58743286]
[213.96083069 -492.06912231]
[227.03640747 -499.43927002]
[240.70457458 -505.64172363]
[254.86131287 -510.62933350]
[269.39889526 -514.36407471]
[284.20663452 -516.81756592]
[299.17187500 -517.97119141]
[314.18072510 -517.81604004]
[329.11892700 -516.35339355]
[343.87280273 -513.59429932]
[358.33007812 -509.55987549]
[372.38070679 -504.28070068]
[385.91775513 -497.79705811]
[398.83816528 -490.15823364]
[411.04367065 -481.42236328]
[422.44134521 -471.65594482]
[432.94442749 -460.93334961]
[442.47299194 -449.33609009]
[450.95452881 -436.95251465]
[458.32446289 -423.87686157]
[464.52673340 -410.20858765]
[469.51412964 -396.05178833]
[473.24868774 -381.51416016]
[475.70199585 -366.70639038]
[476.85534668 -351.74111938]
[476.70001221 -336.73226929]
[475.23715210 -321.79409790]
[472.47787476 -307.04025269]
[468.44320679 -292.58303833]
[463.16387939 -278.53250122]
[456.68002319 -264.99554443]
[449.04101562 -252.07521057]
[440.30499268 -239.86984253]
[430.53842163 -228.47232056]
[419.81564331 -217.96939087]
[408.21829224 -208.44097900]
[395.83459473 -199.95962524]
[382.75881958 -192.58985901]
[369.09045410 -186.38777161]
[354.93359375 -181.40057373]
[340.39590454 -177.66622925]
[325.58807373 -175.21313477]
[310.62280273 -174.05998230]
[295.61398315 -174.21553040]
[280.67581177 -175.67861938]
[265.92199707 -178.43807983]
[251.46485901 -182.47294617]
[237.41438293 -187.75248718]
[238.89482117 -172.93164062]
[225.95541382 -163.82765198]
[219.47592163 -150.29931641]
[212.99642944 -136.77096558]
[206.51692200 -123.24262238]
[200.03742981 -109.71427155]
[202.32696533 -92.31528473]
[187.04852295 -82.03663635]
[180.77116394 -68.41331482]
[174.49380493 -54.79000092]
[176.19473267 -39.99283600]
[163.39231873 -30.69721603]
[157.11495972 -17.07390022]
[150.83760071 -3.45058417]
[144.56024170 10.17273235]
[138.28286743 23.79604721]
[132.41390991 37.60022354]
[126.95855713 51.57302094]
[121.50319672 65.54582214]
[116.04784393 79.51861572]
[124.04755402 90.06343079]
[125.82462311 103.17947388]
[120.91920471 115.47278595]
[110.60064697 123.76229095]
[97.53902435 125.90296936]
[91.87624359 139.79299927]
[86.21345520 153.68302917]
[80.55066681 167.57304382]
[86.43607330 181.99523926]
[80.49533844 196.00103760]
[66.70970917 201.52299500]
[61.04692078 215.41302490]
[55.38413239 229.30305481]
[49.72134781 243.19308472]
[44.47462845 257.24554443]
[39.64863205 271.44799805]
[34.82263184 285.65045166]
[29.99663544 299.85290527]
[42.27215195 291.23248291]
[57.20419693 289.80630493]
[70.88957977 295.94720459]
[79.75096130 308.04992676]
[81.47200775 322.95086670]
[75.60283661 336.75494385]
[63.67763901 345.85382080]
[48.81362915 347.86907959]
[34.89622498 342.27392578]
[25.56340408 330.53088379]
[23.25464821 315.71051025]
[16.37523651 329.03994751]
[9.49582291 342.36935425]
[2.61641073 355.69879150]
[14.69785690 364.64501953]
[25.18767929 375.41348267]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 208]
[36 207]
[37 206]
[38 205]
[39 194]
[40 193]
[41 192]
[42 191]
[47 190]
[48 189]
[49 188]
[50 187]
[53 184]
[54 183]
[55 182]
[56 181]
[60 176]
[61 175]
[62 174]
[63 173]
[68 172]
[69 171]
[70 170]
[71 169]
[72 168]
[74 166]
[75 165]
[76 164]
[79 162]
[80 161]
[81 160]
[82 159]
[83 158]
[85 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
