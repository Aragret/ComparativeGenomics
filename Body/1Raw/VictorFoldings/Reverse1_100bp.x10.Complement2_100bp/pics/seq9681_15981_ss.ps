%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[74.32469177 511.54550171]
[66.82615662 524.64794922]
[56.06987381 535.24066162]
[42.85403824 542.53753662]
[28.15934372 545.99707031]
[13.07623863 545.36260986]
[-1.27600992 540.68121338]
[-13.83237076 532.30023193]
[-23.66107941 520.84167480]
[-30.03277779 507.15576172]
[-32.47464752 492.25811768]
[-30.80548096 477.25424194]
[-25.14914513 463.25750732]
[-15.92537689 451.30657959]
[-3.81863976 442.28829956]
[10.27266502 436.87185669]
[25.30286789 435.45922852]
[27.96866417 420.69799805]
[30.63446045 405.93679810]
[25.28221512 392.03704834]
[35.34890747 379.83163452]
[38.01470566 365.07040405]
[40.68050003 350.30920410]
[35.32825470 336.40945435]
[45.39495087 324.20404053]
[48.06074524 309.44281006]
[42.70849991 295.54309082]
[52.77519608 283.33767700]
[55.44099045 268.57644653]
[53.53626251 261.43545532]
[58.25792694 253.61601257]
[61.14319992 238.89611816]
[59.34500504 231.72755432]
[64.18256378 223.97927856]
[67.28667450 209.30397034]
[70.39078522 194.62867737]
[73.49489594 179.95336914]
[71.80362701 172.75883484]
[76.75601196 165.08343506]
[80.07826996 150.45597839]
[78.49430847 143.23704529]
[83.56041718 135.63623047]
[87.10009003 121.05986023]
[90.63976288 106.48348236]
[78.81232452 115.70909119]
[63.88479614 117.18176270]
[50.48262024 110.44516754]
[42.75860977 97.58672333]
[43.10613632 82.59075165]
[51.41751480 70.10391235]
[65.11737061 63.99540329]
[79.96065521 66.15800476]
[91.34802246 75.92160797]
[95.75096893 90.26111603]
[101.20632172 76.28831482]
[106.66168213 62.31551743]
[112.11703491 48.34272003]
[117.25899506 34.25157928]
[122.08499146 20.04912376]
[126.91099548 5.84666824]
[131.73698425 -8.35578728]
[134.40278625 -23.11700439]
[134.84939575 -38.11035538]
[135.29598999 -53.10370636]
[135.74259949 -68.09705353]
[136.18920898 -83.09040070]
[127.92865753 -92.99626923]
[128.60929871 -105.47506714]
[137.32165527 -113.86681366]
[137.99143982 -128.85185242]
[138.66123962 -143.83688354]
[139.33102417 -158.82192993]
[130.46823120 -174.96295166]
[140.48243713 -189.37414551]
[140.92904663 -204.36749268]
[141.37564087 -219.36083984]
[141.82225037 -234.35418701]
[142.26885986 -249.34753418]
[131.71060181 -260.80010986]
[132.37712097 -275.99911499]
[143.36044312 -285.99423218]
[143.80705261 -300.98757935]
[144.25366211 -315.98092651]
[133.90730286 -333.28164673]
[144.77439880 -349.27520752]
[144.77439880 -364.27520752]
[144.77439880 -379.27520752]
[144.32778931 -394.26855469]
[143.43498230 -409.24194336]
[142.54216003 -424.21536255]
[141.64935303 -439.18875122]
[140.75653076 -454.16217041]
[139.86372375 -469.13555908]
[125.13938141 -472.50762939]
[111.96218109 -479.89260864]
[101.40032196 -490.69186401]
[94.31001282 -504.02993774]
[91.26603699 -518.82556152]
[92.51514435 -533.87933350]
[97.95608521 -547.97094727]
[107.14778137 -559.95800781]
[119.34510040 -568.86877441]
[133.55928040 -573.98089600]
[148.63801575 -574.88000488]
[163.35894775 -571.49316406]
[176.52873230 -564.09497070]
[187.07972717 -553.28509521]
[194.15663147 -539.93988037]
[197.18574524 -525.14123535]
[195.92152405 -510.08868408]
[190.46643066 -496.00259399]
[181.26269531 -484.02478027]
[169.05642700 -475.12625122]
[154.83712769 -470.02838135]
[155.72993469 -455.05499268]
[156.62275696 -440.08157349]
[157.51556396 -425.10818481]
[158.40838623 -410.13476562]
[159.30120850 -395.16134644]
[161.30590820 -393.20196533]
[162.65525818 -390.33038330]
[162.99794006 -386.79232788]
[162.07797241 -382.95590210]
[159.77439880 -379.27520752]
[159.77439880 -364.27520752]
[159.77439880 -349.27520752]
[167.62043762 -342.72897339]
[170.63128662 -332.73483276]
[167.58163452 -322.52307129]
[159.24700928 -315.53433228]
[158.80039978 -300.54098511]
[158.35380554 -285.54760742]
[168.72274780 -274.91650391]
[168.48339844 -259.70474243]
[157.26220703 -248.90093994]
[156.81559753 -233.90759277]
[156.36898804 -218.91423035]
[155.92239380 -203.92088318]
[155.47578430 -188.92753601]
[163.53985596 -179.91104126]
[163.29049683 -167.41618347]
[154.31605530 -158.15214539]
[153.64627075 -143.16709900]
[152.97648621 -128.18206787]
[152.30670166 -113.19702911]
[161.22131348 -98.08092499]
[151.18255615 -82.64379883]
[150.73594666 -67.65045166]
[150.28935242 -52.65709686]
[149.84274292 -37.66374969]
[149.39613342 -22.67039871]
[156.62226868 -35.81509399]
[167.21827698 -46.43227386]
[180.34852600 -53.68462372]
[194.97750854 -57.00019455]
[209.95150757 -56.11750031]
[224.08963013 -51.10615921]
[236.27687073 -42.36138916]
[245.55210876 -30.57283020]
[251.18383789 -16.67018509]
[252.72793579 -1.74987125]
[250.06262207 13.01143265]
[243.39808655 26.44958878]
[233.25993347 37.50480652]
[220.44770813 45.30522919]
[205.97180176 49.23567581]
[190.97387695 48.98618317]
[176.63673401 44.57642365]
[164.09103394 36.35416794]
[154.32620239 24.96785927]
[148.11231995 11.31546783]
[145.93943787 -3.52978969]
[141.11344910 10.67266560]
[136.28744507 24.87512207]
[131.46145630 39.07757568]
[132.68360901 42.38494110]
[132.36453247 46.44859314]
[130.16622925 50.53768921]
[126.08983612 53.79807663]
[120.63447571 67.77087402]
[115.17912292 81.74367523]
[109.72376251 95.71646881]
[105.21613312 110.02315521]
[101.67646027 124.59953308]
[98.13678741 139.17590332]
[94.70572662 153.77822876]
[91.38346863 168.40568542]
[88.17019653 183.05747986]
[85.06608582 197.73278809]
[81.96197510 212.40808105]
[78.85786438 227.08338928]
[75.86309052 241.78138733]
[72.97782135 256.50128174]
[70.20220947 271.24224854]
[67.53641510 286.00344849]
[72.69798279 300.95901489]
[62.82196045 312.10861206]
[60.15616608 326.86984253]
[65.31773376 341.82540894]
[55.44171906 352.97500610]
[52.77592087 367.73620605]
[50.11012650 382.49743652]
[55.27169418 397.45300293]
[45.39567566 408.60260010]
[42.72988129 423.36380005]
[40.06408691 438.12503052]
[53.65073776 444.70571899]
[64.95735168 454.70886230]
[73.14489746 467.39218140]
[77.60580444 481.81448364]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 206]
[18 205]
[19 204]
[21 202]
[22 201]
[23 200]
[25 198]
[26 197]
[28 195]
[29 194]
[31 193]
[32 192]
[34 191]
[35 190]
[36 189]
[37 188]
[39 187]
[40 186]
[42 185]
[43 184]
[44 183]
[54 182]
[55 181]
[56 180]
[57 179]
[58 175]
[59 174]
[60 173]
[61 172]
[62 151]
[63 150]
[64 149]
[65 148]
[66 147]
[69 145]
[70 144]
[71 143]
[72 142]
[74 139]
[75 138]
[76 137]
[77 136]
[78 135]
[81 132]
[82 131]
[83 130]
[85 126]
[86 125]
[87 124]
[88 119]
[89 118]
[90 117]
[91 116]
[92 115]
[93 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
