%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUAAUCCCCCAAUCAAAACGCAUAACCCCAGUAACCACAAGAACAUCAACUUUAUGUUGCUACCAAAAAGUAUAGUAACCAGCACCAACAUCAGGCACxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[114.85380554 465.91976929]
[111.09082031 451.36688232]
[109.65084839 436.40451050]
[110.56936646 421.40109253]
[113.82374573 406.72607422]
[119.33385468 392.74090576]
[126.96399689 379.78994751]
[136.52626038 368.19210815]
[147.78518677 358.23306274]
[160.46351624 350.15798950]
[174.24900818 344.16577148]
[170.49270630 329.64370728]
[166.73640442 315.12164307]
[162.98010254 300.59957886]
[159.22380066 286.07751465]
[155.46749878 271.55548096]
[142.54319763 264.24124146]
[138.52690125 249.56732178]
[146.28636169 236.06071472]
[141.56623840 221.82272339]
[135.90344238 207.93269348]
[130.24066162 194.04266357]
[124.57787323 180.15264893]
[109.80327606 178.26139832]
[97.87973022 169.16825867]
[92.07019806 155.23571777]
[94.02733612 140.16699219]
[103.32482910 128.02188110]
[97.66204071 114.13185883]
[86.73600006 105.40756226]
[88.44792938 91.53092957]
[82.78514862 77.64090729]
[77.12236023 63.75087738]
[71.45957184 49.86085129]
[64.87954712 36.38111496]
[57.41180420 23.37216377]
[49.94406128 10.36321068]
[42.47632217 -2.64574122]
[38.64608383 -4.69104338]
[35.93826294 -7.56022739]
[34.47402954 -10.79927540]
[34.21467209 -13.96144867]
[34.97779083 -16.65881538]
[28.29759789 -30.08919144]
[21.61740303 -43.51956558]
[14.83741188 -56.89984131]
[7.95799923 -70.22927094]
[1.07858658 -83.55870056]
[-5.80082607 -96.88813019]
[-20.58799553 -101.78479767]
[-27.37481499 -115.40073395]
[-22.61545753 -129.46786499]
[-29.49487114 -142.79730225]
[-36.37428284 -156.12672424]
[-43.25369644 -169.45614624]
[-50.13311005 -182.78558350]
[-57.01251984 -196.11500549]
[-70.94599152 -190.52902222]
[-85.34735107 -186.29281616]
[-100.08618164 -183.44473267]
[-115.02900696 -182.01057434]
[-130.04049683 -182.00334167]
[-144.98469543 -183.42308044]
[-159.72625732 -186.25694275]
[-174.13169861 -190.47927856]
[-188.07055664 -196.05183411]
[-201.41656494 -202.92413330]
[-214.04888916 -211.03395081]
[-225.85311890 -220.30783081]
[-236.72235107 -230.66180420]
[-246.55813599 -242.00209045]
[-255.27140808 -254.22598267]
[-262.78326416 -267.22277832]
[-269.02566528 -280.87478638]
[-273.94207764 -295.05834961]
[-277.48797607 -309.64505005]
[-279.63125610 -324.50274658]
[-280.35247803 -339.49688721]
[-279.64517212 -354.49169922]
[-277.51565552 -369.35137939]
[-273.98330688 -383.94134521]
[-269.08004761 -398.12945557]
[-262.85031128 -411.78726196]
[-255.35054016 -424.79101562]
[-246.64860535 -437.02297974]
[-236.82333374 -448.37240601]
[-225.96372986 -458.73645020]
[-214.16810608 -468.02127075]
[-201.54330444 -476.14282227]
[-188.20367432 -483.02749634]
[-174.27000427 -488.61297607]
[-159.86848450 -492.84866333]
[-145.12954712 -495.69619751]
[-130.18667603 -497.12982178]
[-115.17518616 -497.13650513]
[-100.23104095 -495.71621704]
[-85.48957062 -492.88180542]
[-71.08428955 -488.65896606]
[-57.14564133 -483.08590698]
[-43.79987335 -476.21310425]
[-31.16784668 -468.10284424]
[-19.36395645 -458.82852173]
[-8.49510860 -448.47415161]
[1.34026706 -437.13351440]
[10.05309772 -424.90930176]
[17.56447601 -411.91223145]
[23.80637741 -398.26000977]
[28.72227287 -384.07623291]
[32.26763916 -369.48944092]
[34.41037369 -354.63165283]
[35.13106537 -339.63748169]
[34.42319107 -324.64270020]
[32.29315948 -309.78308105]
[28.76026344 -295.19326782]
[23.85649681 -281.00531006]
[17.62626839 -267.34774780]
[10.12600327 -254.34425354]
[1.42362559 -242.11259460]
[-8.40205193 -230.76354980]
[-19.26204491 -220.39990234]
[-31.05800056 -211.11549377]
[-43.68309021 -202.99443054]
[-36.80368042 -189.66499329]
[-29.92426682 -176.33557129]
[-23.04485512 -163.00613403]
[-16.16544151 -149.67671204]
[-9.28602886 -136.34727478]
[4.93727207 -132.07723999]
[12.10385799 -118.65729523]
[7.52860308 -103.76753998]
[14.40801620 -90.43811035]
[21.28742790 -77.10868073]
[28.16684151 -63.77925491]
[34.02791977 -59.27708054]
[35.04777908 -50.19976044]
[41.72797394 -36.76938629]
[48.40816879 -23.33901024]
[55.48527527 -10.11348248]
[62.95301437 2.89546990]
[70.42075348 15.90442276]
[77.88849640 28.91337395]
[80.11548615 14.07961082]
[89.92840576 2.73472118]
[104.28662872 -1.60595798]
[118.74109650 2.40258050]
[128.81292725 13.51824760]
[131.38127136 28.29673195]
[125.65029144 42.15876007]
[113.39579010 50.80903244]
[98.41496277 51.56716537]
[85.34960175 44.19806290]
[91.01238251 58.08808899]
[96.67517090 71.97811890]
[102.33795929 85.86814117]
[113.26399994 94.59243774]
[111.55207062 108.46907043]
[117.21485138 122.35909271]
[132.35363770 124.54185486]
[144.28846741 133.94700623]
[149.87605286 147.97001648]
[147.70883179 162.80778503]
[138.46789551 174.48985291]
[144.13069153 188.37988281]
[149.79347229 202.26991272]
[155.45625305 216.15994263]
[159.64508057 201.75668335]
[170.88572693 191.82450867]
[185.69514465 189.44100952]
[199.48448181 195.34475708]
[207.98097229 207.70637512]
[208.55186462 222.69551086]
[201.02027893 235.66760254]
[187.71995544 242.60311890]
[172.77214050 241.35299683]
[160.80842590 232.30441284]
[174.14379883 240.35458374]
[177.74635315 255.13552856]
[169.98956299 267.79916382]
[173.74586487 282.32122803]
[177.50216675 296.84329224]
[181.25846863 311.36535645]
[185.01477051 325.88742065]
[188.77105713 340.40945435]
[203.73309326 338.96578979]
[218.73674011 339.88058472]
[233.41255188 343.13134766]
[247.39909363 348.63800049]
[260.35192871 356.26492310]
[271.95211792 365.82434082]
[281.91397095 377.08078003]
[289.99218750 389.75711060]
[295.98782349 403.54110718]
[299.75320435 418.09338379]
[301.19564819 433.05551147]
[300.27960205 448.05911255]
[297.02764893 462.73464966]
[291.51983643 476.72073364]
[283.89184570 489.67294312]
[274.33148193 501.27233887]
[263.07421875 511.23327637]
[250.39721680 519.31042480]
[236.61271667 525.30493164]
[222.06015015 529.06909180]
[207.09786987 530.51031494]
[192.09437561 529.59301758]
[177.41911316 526.33984375]
[163.43347168 520.83093262]
[150.48188782 513.20184326]
[138.88327026 503.64053345]
[128.92327881 492.38241577]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 183]
[12 182]
[13 181]
[14 180]
[15 179]
[16 178]
[19 175]
[20 165]
[21 164]
[22 163]
[23 162]
[28 157]
[29 156]
[31 154]
[32 153]
[33 152]
[34 151]
[35 141]
[36 140]
[37 139]
[38 138]
[43 137]
[44 136]
[45 135]
[46 133]
[47 132]
[48 131]
[49 130]
[52 127]
[53 126]
[54 125]
[55 124]
[56 123]
[57 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
