%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[71.72909546 695.21893311]
[56.89710236 697.55883789]
[41.89772034 698.25286865]
[26.91302299 697.29260254]
[12.12491894 694.68969727]
[-2.28708243 690.47576904]
[-16.14803123 684.70190430]
[-29.28966904 677.43823242]
[-41.55246735 668.77301025]
[-52.78756714 658.81127930]
[-62.85858917 647.67407227]
[-71.64327240 635.49652100]
[-79.03498077 622.42645264]
[-84.94399261 608.62261963]
[-89.29856873 594.25244141]
[-92.04586029 579.49047852]
[-93.15250397 564.51593018]
[-92.60507202 549.51043701]
[-90.41021729 534.65631104]
[-86.59456635 520.13378906]
[-81.20445251 506.11914062]
[-74.30530548 492.78253174]
[-65.98086548 480.28585815]
[-56.33219528 468.78082275]
[-45.47640991 458.40704346]
[-33.54529572 449.29046631]
[-20.68367958 441.54180908]
[-7.04769659 435.25506592]
[7.19712877 430.50656128]
[21.87787628 427.35397339]
[36.81633759 425.83554077]
[51.83116913 425.96972656]
[53.61363602 411.07601929]
[55.39609909 396.18228149]
[57.17856598 381.28857422]
[51.00848389 367.73205566]
[60.33084869 354.94909668]
[62.11331558 340.05535889]
[63.89578247 325.16165161]
[65.67824554 310.26794434]
[63.48302841 306.02645874]
[63.92897034 300.36093140]
[67.74193573 294.95974731]
[69.96705627 280.12570190]
[72.19216919 265.29165649]
[74.41728973 250.45762634]
[76.64240265 235.62358093]
[78.86752319 220.78953552]
[81.09263611 205.95549011]
[82.98593140 191.07545471]
[84.54645538 176.15686035]
[86.10697937 161.23825073]
[87.66750336 146.31964111]
[81.29626465 132.85649109]
[90.42727661 119.93614960]
[91.98780060 105.01753998]
[89.69300079 100.30078125]
[90.20426941 94.63404083]
[93.82334137 89.68033600]
[95.82735443 74.81480408]
[97.83137512 59.94927597]
[99.83538818 45.08374786]
[101.83940125 30.21822166]
[103.84341431 15.35269260]
[105.18164825 0.41250789]
[105.85143280 -14.57253075]
[106.52121735 -29.55756950]
[106.96782684 -44.55091858]
[107.19115448 -59.54925537]
[107.41448212 -74.54759216]
[107.63780975 -89.54592896]
[106.96801758 -104.53096771]
[105.40750122 -119.44957733]
[103.84697723 -134.36817932]
[102.28645325 -149.28678894]
[95.80634308 -135.75872803]
[84.43708801 -125.97404480]
[70.09461975 -121.58161163]
[55.19588089 -123.32163239]
[42.25158310 -130.90089417]
[33.44305801 -143.04214478]
[30.25470543 -157.69937134]
[33.22381592 -172.40258789]
[41.85003662 -184.67402649]
[54.67970657 -192.44573975]
[69.55079651 -194.40806580]
[83.95726776 -190.23031616]
[95.47137451 -180.61650085]
[102.15320587 -167.18511963]
[103.49143982 -182.12530518]
[104.82967377 -197.06549072]
[106.16790771 -212.00567627]
[107.39488220 -226.95541382]
[108.51052856 -241.91386414]
[109.62618256 -256.87231445]
[110.74182892 -271.83078003]
[111.85747528 -286.78921509]
[97.65992737 -291.92071533]
[85.37399292 -300.69329834]
[75.91136932 -312.45602417]
[69.97425079 -326.33596802]
[68.00319672 -341.30319214]
[70.14449310 -356.24700928]
[76.23922729 -370.05847168]
[85.83512878 -381.71270752]
[98.22012329 -390.34487915]
[112.47516632 -395.31442261]
[127.54243469 -396.25259399]
[142.30383301 -393.08972168]
[155.66397095 -386.06054688]
[166.63143921 -375.68667603]
[174.39236450 -362.73791504]
[178.37086487 -348.17514038]
[178.27168274 -333.07901001]
[174.10218811 -318.56979370]
[166.17178345 -305.72412109]
[155.06895447 -295.49523926]
[141.61761475 -288.64221191]
[126.81593323 -285.67358398]
[125.70027924 -270.71511841]
[124.58463287 -255.75666809]
[123.46898651 -240.79821777]
[122.35333252 -225.83976746]
[124.99063873 -218.93568420]
[121.10809326 -210.66744995]
[119.76985931 -195.72726440]
[118.43162537 -180.78707886]
[117.09339142 -165.84689331]
[117.20505524 -150.84730530]
[118.76557922 -135.92869568]
[120.32610321 -121.01010132]
[121.88662720 -106.09149170]
[130.53343201 -118.34843445]
[144.69572449 -123.29107666]
[159.09129333 -119.07593536]
[168.35096741 -107.27515411]
[169.02110291 -92.29013062]
[160.85177612 -79.70991516]
[146.88992310 -74.22660828]
[132.34297180 -77.88535309]
[122.63614655 -89.32260132]
[122.41281891 -74.32426453]
[122.18949127 -59.32592773]
[121.96616364 -44.32759094]
[124.59072876 -40.33751678]
[124.73661804 -34.65634537]
[121.50625610 -28.88778496]
[120.83647156 -13.90274620]
[120.16668701 1.08229303]
[131.93833923 -8.21438694]
[146.85134888 -6.60134411]
[156.36288452 4.99739599]
[155.02429199 19.93754959]
[143.60238647 29.66071701]
[128.64015198 28.59702682]
[118.70893860 17.35670662]
[116.70492554 32.22223663]
[114.70091248 47.08776474]
[112.69689941 61.95329285]
[110.69288635 76.81881714]
[108.68887329 91.68434906]
[106.90641022 106.57806396]
[105.34588623 121.49667358]
[111.60549927 136.02690125]
[102.58610535 147.88017273]
[101.02558136 162.79876709]
[99.46505737 177.71737671]
[97.90453339 192.63598633]
[100.03162384 197.40280151]
[100.10974121 202.04469299]
[98.52957916 205.80210876]
[95.92668152 208.18060303]
[93.70156860 223.01464844]
[91.47644806 237.84869385]
[89.25132751 252.68273926]
[87.02621460 267.51678467]
[84.80109406 282.35083008]
[82.57598114 297.18487549]
[80.57196808 312.05041504]
[78.78949738 326.94412231]
[77.00703430 341.83782959]
[75.22457123 356.73156738]
[81.26715851 371.35336304]
[72.07228088 383.07104492]
[70.28981781 397.96475220]
[68.50735474 412.85845947]
[66.72488403 427.75219727]
[81.34733582 431.16497803]
[95.50559235 436.16567993]
[109.02779388 442.69357300]
[121.74977875 450.66940308]
[133.51712036 459.99639893]
[144.18698120 470.56130981]
[153.62983704 482.23587036]
[161.73104858 494.87841797]
[168.39228821 508.33541870]
[173.53269958 522.44354248]
[177.08985901 537.03155518]
[179.02059937 551.92236328]
[179.30148315 566.93511963]
[177.92909241 581.88775635]
[174.92010498 596.59857178]
[170.31103516 610.88909912]
[164.15783691 624.58587646]
[156.53520203 637.52258301]
[147.53565979 649.54223633]
[137.26846313 660.49884033]
[125.85823822 670.25952148]
[113.44349670 678.70562744]
[100.17494965 685.73480225]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 187]
[33 186]
[34 185]
[35 184]
[37 182]
[38 181]
[39 180]
[40 179]
[43 178]
[44 177]
[45 176]
[46 175]
[47 174]
[48 173]
[49 172]
[50 168]
[51 167]
[52 166]
[53 165]
[55 163]
[56 162]
[59 161]
[60 160]
[61 159]
[62 158]
[63 157]
[64 156]
[65 149]
[66 148]
[67 147]
[68 144]
[69 143]
[70 142]
[71 141]
[72 132]
[73 131]
[74 130]
[75 129]
[89 128]
[90 127]
[91 126]
[92 125]
[93 123]
[94 122]
[95 121]
[96 120]
[97 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
