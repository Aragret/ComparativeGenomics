%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[100.48043823 666.44189453]
[88.83911133 656.93945312]
[78.70548248 645.84313965]
[70.29555511 633.38958740]
[63.78858185 619.84423828]
[59.32326508 605.49572754]
[56.99478149 590.65002441]
[56.85275650 575.62341309]
[58.90022659 560.73632812]
[63.09354401 546.30603027]
[69.34333038 532.64007568]
[77.51637268 520.02978516]
[87.43845367 508.74395752]
[98.89809418 499.02313232]
[111.65102386 491.07449341]
[125.42542267 485.06750488]
[139.92767334 481.13018799]
[138.14520264 466.23648071]
[136.36274719 451.34277344]
[127.16786957 439.62509155]
[133.21046448 425.00326538]
[131.42799377 410.10955811]
[116.84589386 402.57031250]
[109.55794525 387.67578125]
[112.61427307 371.20883179]
[125.00513458 359.69525146]
[123.00112152 344.82974243]
[120.99710846 329.96420288]
[118.42991638 327.54721069]
[116.90586853 323.76669312]
[117.05308533 319.12646484]
[119.25090790 314.39184570]
[117.91267395 299.45166016]
[116.57444000 284.51147461]
[115.23620605 269.57128906]
[113.89797211 254.63110352]
[112.22643280 239.72453308]
[110.22241974 224.85900879]
[108.21840668 209.99346924]
[106.21439362 195.12794495]
[92.41675568 185.51211548]
[89.79113007 168.55862427]
[100.44491577 154.68360901]
[98.21979523 139.84956360]
[95.99467468 125.01551819]
[93.76956177 110.18147278]
[88.36227417 124.17294312]
[78.31985474 135.31518555]
[64.96353912 142.14225769]
[50.05059052 143.75593567]
[35.54306030 139.94390869]
[23.34966278 131.20771790]
[15.07465267 118.69674683]
[11.80674744 104.05704498]
[13.97589684 89.21471405]
[21.29671097 76.12252045]
[32.80601120 66.50295258]
[46.98955154 61.62164688]
[61.98124695 62.12081528]
[75.80867004 67.93478394]
[86.65260315 78.29862213]
[93.08693695 91.85109711]
[94.20259094 76.89263916]
[95.31823730 61.93418884]
[96.43388367 46.97573471]
[97.54953766 32.01728439]
[98.66518402 17.05882835]
[99.78083038 2.10037589]
[100.89648438 -12.85807800]
[98.41401672 -21.64870644]
[102.14172363 -28.03039742]
[103.47995758 -42.97058105]
[104.81819153 -57.91076660]
[106.15642548 -72.85095215]
[107.49465942 -87.79113770]
[108.83289337 -102.73132324]
[109.61421967 -117.71096039]
[109.83754730 -132.70928955]
[110.06087494 -147.70762634]
[110.28420258 -162.70597839]
[110.50753021 -177.70431519]
[110.73085785 -192.70265198]
[110.95418549 -207.70098877]
[111.17751312 -222.69932556]
[110.95418549 -237.69766235]
[102.60839081 -251.13858032]
[109.76966858 -264.19863892]
[109.09988403 -279.18368530]
[100.75408936 -292.62460327]
[107.91537476 -305.68466187]
[107.24559021 -320.66970825]
[92.44010162 -323.47937012]
[78.68190002 -329.62826538]
[66.71295166 -338.78472900]
[57.17871857 -350.45498657]
[50.59337234 -364.00970459]
[47.31205750 -378.71783447]
[47.51172256 -393.78625488]
[51.18161011 -408.40228271]
[58.12379837 -421.77774048]
[67.96391296 -433.19128418]
[80.17127991 -442.02740479]
[94.08757782 -447.80957031]
[108.96231079 -450.22595215]
[123.99330902 -449.14627075]
[138.36997986 -444.62869263]
[151.31698608 -436.91690063]
[162.13612366 -426.42678833]
[170.24392700 -413.72399902]
[175.20315552 -399.49365234]
[176.74636841 -384.50317383]
[174.79032898 -369.56091309]
[169.44053650 -355.47274780]
[160.98548889 -342.99841309]
[149.88116455 -332.81063843]
[136.72640991 -325.45883179]
[122.23062897 -321.33947754]
[122.90041351 -306.35446167]
[131.19830322 -293.98535156]
[124.08492279 -279.85345459]
[124.75470734 -264.86843872]
[133.05259705 -252.49934387]
[125.93922424 -238.36744690]
[127.91453552 -236.37840271]
[129.22099304 -233.48707581]
[129.51095581 -229.94429016]
[128.53396606 -226.12197876]
[126.17584991 -222.47599792]
[125.95252228 -207.47766113]
[125.72919464 -192.47932434]
[125.50586700 -177.48098755]
[125.28253937 -162.48265076]
[125.05921173 -147.48429871]
[124.83588409 -132.48596191]
[124.61255646 -117.48763275]
[137.02989197 -125.90249634]
[151.39566040 -121.58687592]
[157.11996460 -107.72208405]
[149.98304749 -94.52873230]
[135.24598694 -91.73246765]
[123.77307892 -101.39308929]
[122.43484497 -86.45290375]
[121.09661102 -71.51271820]
[119.75837708 -56.57253265]
[118.42014313 -41.63234711]
[117.08190918 -26.69216156]
[115.85493469 -11.74242878]
[114.73928833 3.21602440]
[113.62363434 18.17447853]
[112.50798798 33.13293076]
[111.39234161 48.09138489]
[110.27668762 63.04983902]
[109.16104126 78.00829315]
[108.04539490 92.96674347]
[108.60360718 107.95635223]
[110.82872009 122.79039764]
[113.05384064 137.62443542]
[115.27895355 152.45848083]
[126.96000671 159.16427612]
[132.56433105 171.19764709]
[130.24903870 184.07093811]
[121.07991791 193.12393188]
[123.08393097 207.98945618]
[125.08794403 222.85499573]
[127.09195709 237.72052002]
[130.28384399 241.85076904]
[131.45513916 246.34313965]
[130.80627441 250.36730957]
[128.83816528 253.29287720]
[130.17639160 268.23306274]
[131.51463318 283.17324829]
[132.85285950 298.11343384]
[134.19110107 313.05361938]
[135.86264038 327.96017456]
[137.86665344 342.82571411]
[139.87066650 357.69125366]
[152.45730591 363.30972290]
[160.55989075 374.32635498]
[162.14816284 387.80029297]
[156.91349792 400.19958496]
[146.32170105 408.32708740]
[148.10417175 423.22079468]
[157.42654419 436.00375366]
[151.25645447 449.56030273]
[153.03892517 464.45401001]
[154.82139587 479.34771729]
[169.84320068 479.75164795]
[184.64610291 482.33853149]
[198.91456604 487.05325317]
[212.34446716 493.79531860]
[224.64955139 502.42102051]
[235.56752014 512.74652100]
[244.86566162 524.55169678]
[252.34579468 537.58496094]
[257.84848022 551.56848145]
[261.25640869 566.20416260]
[262.49694824 581.18011475]
[261.54367065 596.17706299]
[258.41687012 610.87542725]
[253.18322754 624.96179199]
[245.95426941 638.13604736]
[236.88409424 650.11724854]
[226.16603088 660.65008545]
[214.02853394 669.51007080]
[200.73031616 676.50830078]
[186.55484009 681.49566650]
[171.80422974 684.36578369]
[156.79292297 685.05755615]
[141.84088135 683.55615234]
[127.26679993 679.89361572]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 186]
[18 185]
[19 184]
[21 182]
[22 181]
[26 176]
[27 175]
[28 174]
[32 173]
[33 172]
[34 171]
[35 170]
[36 169]
[37 165]
[38 164]
[39 163]
[40 162]
[43 158]
[44 157]
[45 156]
[46 155]
[62 154]
[63 153]
[64 152]
[65 151]
[66 150]
[67 149]
[68 148]
[69 147]
[71 146]
[72 145]
[73 144]
[74 143]
[75 142]
[76 141]
[77 135]
[78 134]
[79 133]
[80 132]
[81 131]
[82 130]
[83 129]
[84 128]
[85 123]
[87 121]
[88 120]
[90 118]
[91 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
