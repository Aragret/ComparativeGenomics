%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[142.27586365 549.87536621]
[143.64498901 534.88140869]
[148.10200500 520.49987793]
[155.45204163 507.35946655]
[165.37382507 496.03460693]
[177.43357849 487.02041626]
[191.10414124 480.71090698]
[187.78187561 466.08346558]
[184.45962524 451.45599365]
[181.13735962 436.82855225]
[177.81509399 422.20108032]
[168.92549133 434.28308105]
[154.11770630 436.67669678]
[141.87429810 428.01071167]
[139.20886230 413.24945068]
[147.64826965 400.84878540]
[162.35804749 397.91241455]
[174.91123962 406.12161255]
[172.90722656 391.25610352]
[170.90321350 376.39056396]
[168.01792908 361.67068481]
[164.26162720 347.14862061]
[160.50534058 332.62655640]
[156.74903870 318.10449219]
[152.99273682 303.58242798]
[149.23643494 289.06036377]
[145.37213135 274.56668091]
[141.40002441 260.10214233]
[137.42793274 245.63763428]
[133.45584106 231.17311096]
[129.16171265 216.80090332]
[124.54770660 202.52816772]
[119.93369293 188.25543213]
[115.31968689 173.98269653]
[110.70568085 159.70996094]
[100.08214569 153.92488098]
[96.12133026 142.07179260]
[101.46385956 130.33210754]
[97.06285858 115.99225616]
[87.12122345 109.92553711]
[83.78712463 98.76645660]
[88.77113342 88.24025726]
[84.58412170 73.83647156]
[80.39710999 59.43269348]
[76.21009827 45.02891159]
[69.87923431 58.62744522]
[56.82080460 66.00832367]
[41.90527344 64.41866302]
[30.69577408 54.45135880]
[27.37316704 39.82397842]
[33.17670441 25.99216843]
[45.94180679 18.11485291]
[60.90741348 19.13007545]
[72.49234772 28.66016579]
[70.04662323 13.86089516]
[67.60089111 -0.93837529]
[65.15516663 -15.73764610]
[60.40697098 -1.50899124]
[51.54491043 10.59323502]
[39.41366196 19.41552544]
[25.16949654 24.11699677]
[10.17008305 24.24953270]
[-4.15493441 19.80050087]
[-16.44018555 11.19395733]
[-25.51471901 -0.74977940]
[-30.51360703 -14.89230824]
[-30.96038818 -29.88565254]
[-26.81247711 -44.30074310]
[-18.46522903 -56.76362610]
[-6.71424675 -66.08641815]
[7.32043839 -71.38053131]
[22.30113029 -72.14135742]
[36.79996490 -68.29638672]
[49.43500519 -60.21210098]
[59.00196457 -48.65903091]
[64.58922577 -34.73724747]
[66.14974976 -49.65584946]
[67.71027374 -64.57445526]
[61.45065689 -79.10469055]
[70.47005463 -90.95795441]
[55.69072723 -99.70216370]
[46.25086212 -113.98083496]
[44.00928116 -130.89457703]
[49.36898041 -147.03419495]
[61.20573425 -159.16783142]
[77.10347748 -164.88812256]
[78.21912384 -179.84657288]
[79.33477020 -194.80502319]
[80.45042419 -209.76347351]
[72.07213593 -226.16122437]
[82.51097870 -240.26786804]
[83.40379333 -255.24127197]
[76.50161743 -269.47750854]
[84.98274231 -281.72167969]
[85.87555695 -296.69509888]
[86.76837158 -311.66848755]
[87.66118622 -326.64190674]
[73.44188690 -331.73977661]
[61.23561478 -340.63827515]
[52.03188324 -352.61608887]
[46.57678986 -366.70220947]
[45.31255722 -381.75473022]
[48.34167480 -396.55340576]
[55.41857910 -409.89862061]
[65.96958160 -420.70846558]
[79.13935852 -428.10668945]
[93.86029816 -431.49353027]
[108.93903351 -430.59442139]
[123.15320587 -425.48226929]
[135.35052490 -416.57150269]
[144.54222107 -404.58444214]
[149.98316956 -390.49285889]
[151.23226929 -375.43908691]
[148.18829346 -360.64343262]
[141.09799194 -347.30535889]
[130.53613281 -336.50610352]
[117.35892487 -329.12112427]
[102.63459015 -325.74908447]
[101.74177551 -310.77566528]
[100.84896088 -295.80227661]
[99.95614624 -280.82885742]
[106.92218781 -267.66363525]
[98.37720490 -254.34844971]
[97.48439026 -239.37504578]
[105.27643585 -230.12245178]
[104.65515900 -217.64054871]
[95.40887451 -208.64782715]
[94.29322815 -193.68937683]
[93.17758179 -178.73092651]
[92.06192780 -163.77247620]
[103.80612946 -158.22111511]
[112.98739624 -148.98645020]
[118.49753571 -137.15235901]
[119.66101837 -124.11824799]
[116.31774139 -111.43355560]
[108.84466553 -100.61363220]
[98.11340332 -92.95865631]
[85.38865662 -89.39743042]
[91.75989532 -75.93427277]
[82.62887573 -63.01393127]
[81.06835175 -48.09532928]
[79.50783539 -33.17672348]
[79.95443726 -18.18337440]
[82.40016174 -3.38410258]
[84.84589386 11.41516781]
[87.29161835 26.21443939]
[90.61387634 40.84189987]
[94.80088806 55.24568176]
[98.98789978 69.64945984]
[103.17491150 84.05324554]
[115.57922363 95.34524536]
[111.40270996 111.59125519]
[115.80371094 125.93110657]
[129.57194519 138.15882874]
[124.97840881 155.09594727]
[129.59242249 169.36868286]
[134.20643616 183.64141846]
[138.82043457 197.91415405]
[143.43444824 212.18688965]
[147.30953979 215.68412781]
[149.26057434 219.89682007]
[149.33721924 223.97225952]
[147.92036438 227.20101929]
[151.89245605 241.66554260]
[155.86454773 256.13006592]
[159.83665466 270.59457397]
[165.12681580 278.04119873]
[163.75848389 285.30407715]
[167.51478577 299.82614136]
[171.27108765 314.34820557]
[175.02738953 328.87023926]
[178.78369141 343.39230347]
[182.53999329 357.91436768]
[189.27293396 344.51034546]
[202.54533386 337.52154541]
[217.40692139 339.55459595]
[228.31468201 349.85122681]
[231.20030212 364.57104492]
[224.98751831 378.22393799]
[211.99353027 385.71768188]
[197.06478882 384.25735474]
[185.76873779 374.38653564]
[187.77275085 389.25207520]
[189.77676392 404.11761475]
[192.44256592 418.87881470]
[195.76481628 433.50628662]
[199.08708191 448.13372803]
[202.40933228 462.76119995]
[205.73159790 477.38867188]
[220.78642273 477.17391968]
[235.55682373 480.09429932]
[249.39712524 486.02218628]
[261.70227051 494.69842529]
[271.93435669 505.74371338]
[279.64602661 518.67523193]
[284.50021362 532.92761230]
[286.28472900 547.87780762]
[284.92147827 562.87231445]
[280.47012329 577.25561523]
[273.12527466 590.39892578]
[263.20794678 601.72766113]
[251.15173340 610.74664307]
[237.48365784 617.06152344]
[222.80125427 620.39624023]
[207.74635315 620.60504150]
[192.97708130 617.67883301]
[179.13912964 611.74554443]
[166.83738708 603.06445312]
[156.60966492 592.01513672]
[148.90306091 579.08062744]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 189]
[8 188]
[9 187]
[10 186]
[11 185]
[18 184]
[19 183]
[20 182]
[21 173]
[22 172]
[23 171]
[24 170]
[25 169]
[26 168]
[27 166]
[28 165]
[29 164]
[30 163]
[31 159]
[32 158]
[33 157]
[34 156]
[35 155]
[38 153]
[39 152]
[42 150]
[43 149]
[44 148]
[45 147]
[54 146]
[55 145]
[56 144]
[57 143]
[76 142]
[77 141]
[78 140]
[80 138]
[86 130]
[87 129]
[88 128]
[89 127]
[91 124]
[92 123]
[94 121]
[95 120]
[96 119]
[97 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
