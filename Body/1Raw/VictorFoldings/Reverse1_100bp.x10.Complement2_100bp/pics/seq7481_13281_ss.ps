%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[-5.15306330 817.33666992]
[-19.38183403 822.09906006]
[-33.87219238 825.99359131]
[-48.57126236 829.00616455]
[-63.42540741 831.12573242]
[-78.38043213 832.34454346]
[-93.38175201 832.65814209]
[-108.37464905 832.06542969]
[-123.30439758 830.56854248]
[-138.11653137 828.17297363]
[-152.75700378 824.88745117]
[-167.17237854 820.72387695]
[-181.31007385 815.69757080]
[-195.11848450 809.82678223]
[-208.54724121 803.13305664]
[-221.54733276 795.64062500]
[-234.07131958 787.37701416]
[-246.07351685 778.37225342]
[-257.51013184 768.65924072]
[-268.33938599 758.27343750]
[-278.52185059 747.25274658]
[-288.02029419 735.63732910]
[-296.80007935 723.46960449]
[-304.82919312 710.79400635]
[-312.07830811 697.65667725]
[-318.52099609 684.10571289]
[-324.13372803 670.19042969]
[-328.89602661 655.96160889]
[-332.79052734 641.47125244]
[-335.80300903 626.77215576]
[-337.92251587 611.91796875]
[-339.14123535 596.96295166]
[-339.45480347 581.96160889]
[-338.86203003 566.96875000]
[-337.36508179 552.03900146]
[-334.96942139 537.22686768]
[-331.68377686 522.58642578]
[-327.52020264 508.17108154]
[-322.49380493 494.03338623]
[-316.62298584 480.22500610]
[-309.92913818 466.79629517]
[-302.43667603 453.79623413]
[-294.17300415 441.27227783]
[-285.16818237 429.27014160]
[-275.45513916 417.83355713]
[-265.06927490 407.00433350]
[-254.04853821 396.82196045]
[-242.43307495 387.32354736]
[-230.26531982 378.54382324]
[-217.58966064 370.51477051]
[-204.45233154 363.26571655]
[-190.90129089 356.82308960]
[-176.98596191 351.21041870]
[-162.75715637 346.44818115]
[-148.26675415 342.55374146]
[-133.56765747 339.54132080]
[-118.71349335 337.42190552]
[-103.75846100 336.20324707]
[-88.75713348 335.88977051]
[-73.76424408 336.48260498]
[-58.83450699 337.97961426]
[-44.02239609 340.37536621]
[-29.38195992 343.66104126]
[-14.96661949 347.82470703]
[-0.82897627 352.85116577]
[5.03998470 339.04696655]
[10.90894508 325.24279785]
[16.77790642 311.43862915]
[22.64686775 297.63446045]
[28.51582718 283.83026123]
[34.38478851 270.02609253]
[40.25374985 256.22192383]
[46.12271118 242.41773987]
[51.99167252 228.61357117]
[49.85092545 213.87359619]
[62.37090683 204.20092773]
[68.23986816 190.39675903]
[74.10882568 176.59257507]
[79.97779083 162.78839111]
[85.84674835 148.98422241]
[89.49483490 134.43460083]
[90.83306885 119.49441528]
[92.17130280 104.55422974]
[90.14288330 101.27430725]
[89.57005310 97.11621857]
[90.81259155 92.75008392]
[93.91750336 88.98188019]
[95.92151642 74.11634827]
[90.09729767 59.40618134]
[99.46560669 47.82671738]
[101.46961975 32.96118927]
[103.47363281 18.09566116]
[105.47764587 3.23013282]
[107.48165894 -11.63539505]
[109.48567200 -26.50092316]
[107.53083801 -35.42372513]
[111.63178253 -41.57222366]
[113.85690308 -56.40626907]
[116.08201599 -71.24031067]
[118.30713654 -86.07435608]
[104.59934998 -92.42047119]
[93.23564148 -102.37249756]
[85.13721466 -115.12366486]
[80.96057129 -129.64028931]
[81.04430389 -144.74557495]
[85.38161469 -159.21499634]
[93.62089539 -171.87561035]
[105.09423828 -181.70104980]
[118.87153625 -187.89480591]
[133.83592224 -189.95480347]
[148.77432251 -187.71403503]
[162.47572327 -181.35415649]
[173.82943726 -171.39071655]
[181.91503906 -158.63142395]
[186.07710266 -144.11061096]
[185.97819519 -129.00541687]
[181.62634277 -114.54035187]
[173.37434387 -101.88803101]
[161.89114380 -92.07411957]
[148.10763550 -85.89420319]
[133.14117432 -83.84923553]
[130.91606140 -69.01519775]
[128.69094849 -54.18115234]
[126.46582794 -39.34710693]
[124.35120392 -24.49691010]
[122.34719086 -9.63138199]
[120.34317780 5.23414660]
[118.33916473 20.09967422]
[116.33515167 34.96520233]
[114.33113861 49.83073044]
[120.29869843 63.47761536]
[110.78704834 76.12036133]
[108.78302765 90.98589325]
[107.11148834 105.89246368]
[105.77325439 120.83264923]
[104.43502045 135.77284241]
[112.37125397 123.04427338]
[123.40998077 112.88816833]
[136.75430298 106.03768158]
[151.44087219 102.98737335]
[166.40948486 103.95743561]
[180.57949829 108.87783813]
[192.92800903 117.39337921]
[202.56353760 128.88931274]
[208.79051208 142.53573608]
[211.15937805 157.34750366]
[209.49913025 172.25534058]
[203.92964172 186.18304443]
[194.85295105 198.12513733]
[182.92434692 207.21954346]
[169.00492859 212.80970764]
[154.09956360 214.49208069]
[139.28430176 212.14520264]
[125.62864685 205.93849182]
[114.11842346 196.32003784]
[105.58456421 183.98419189]
[100.64312744 169.82148743]
[99.65092468 154.85317993]
[93.78196716 168.65736389]
[87.91300201 182.46153259]
[82.04404449 196.26571655]
[76.17507935 210.06988525]
[77.89604187 225.79722595]
[65.79584503 234.48252869]
[59.92688751 248.28669739]
[54.05792618 262.09088135]
[48.18896484 275.89505005]
[42.32000351 289.69921875]
[36.45104218 303.50341797]
[30.58208275 317.30758667]
[24.71312141 331.11175537]
[18.84416199 344.91595459]
[12.97520065 358.72012329]
[26.40401459 365.41378784]
[39.40417480 372.90603638]
[51.92824173 381.16955566]
[63.93052292 390.17419434]
[75.36721802 399.88708496]
[86.19658661 410.27279663]
[96.37913513 421.29339600]
[105.87768555 432.90872192]
[114.65760040 445.07635498]
[122.68682098 457.75192261]
[129.93606567 470.88912964]
[136.37887573 484.44009399]
[141.99172974 498.35534668]
[146.75418091 512.58410645]
[150.64881897 527.07440186]
[153.66143799 541.77349854]
[155.78105164 556.62762451]
[156.99993896 571.58264160]
[157.31362915 586.58398438]
[156.72097778 601.57684326]
[155.22416687 616.50659180]
[152.82865906 631.31872559]
[149.54316711 645.95922852]
[145.37969971 660.37463379]
[140.35345459 674.51232910]
[134.48275757 688.32080078]
[127.78903198 701.74957275]
[120.29670715 714.74969482]
[112.03311920 727.27374268]
[103.02843475 739.27593994]
[93.31549072 750.71258545]
[82.92974091 761.54193115]
[71.90907288 771.72442627]
[60.29371643 781.22296143]
[48.12603760 790.00280762]
[35.45044327 798.03192139]
[22.31318855 805.28112793]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 173]
[66 172]
[67 171]
[68 170]
[69 169]
[70 168]
[71 167]
[72 166]
[73 165]
[74 164]
[76 162]
[77 161]
[78 160]
[79 159]
[80 158]
[81 136]
[82 135]
[83 134]
[87 133]
[88 132]
[90 130]
[91 129]
[92 128]
[93 127]
[94 126]
[95 125]
[97 124]
[98 123]
[99 122]
[100 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
