%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[27.53932953 464.15457153]
[29.94190979 479.02206421]
[29.09179878 494.05838013]
[25.02875900 508.56030273]
[17.94282722 521.84954834]
[8.16542435 533.30450439]
[-3.84614229 542.38946533]
[-17.53007126 548.67950439]
[-32.24633789 551.88037109]
[-47.30663681 551.84234619]
[-62.00657272 548.56732178]
[-75.65859985 542.20837402]
[-87.62419128 533.06292725]
[-97.34368896 521.55877686]
[-104.36250305 508.23397827]
[-108.35234070 493.71176147]
[-109.12659454 478.67132568]
[-106.64905548 463.81616211]
[-101.03559875 449.84106445]
[-92.54878235 437.39968872]
[-81.58553314 427.07394409]
[-68.65863800 419.34674072]
[-54.37270737 414.57952881]
[-39.39591599 412.99530029]
[-24.42876053 414.66812134]
[-19.60276222 400.46566772]
[-14.77676487 386.26318359]
[-9.95076656 372.06072998]
[-5.12476921 357.85827637]
[-0.29877162 343.65582275]
[4.52722597 329.45336914]
[9.35322380 315.25091553]
[8.52887440 307.90637207]
[14.35824299 300.87387085]
[13.64333534 293.51788330]
[19.57676125 286.57293701]
[24.82347870 272.52044678]
[20.08907318 261.38888550]
[24.34519386 249.63859558]
[35.82300949 243.75450134]
[41.27836609 229.78170776]
[46.73372269 215.80889893]
[52.18907928 201.83610535]
[49.61042023 187.16641235]
[61.83686066 177.12525940]
[52.42302704 165.58207703]
[50.03512573 150.77822876]
[55.41331863 136.67356873]
[67.20678711 127.09176636]
[82.31140137 124.68386078]
[87.76675415 110.71105957]
[83.74172211 99.78218079]
[88.05809784 88.96505737]
[98.50133514 83.80947876]
[104.16412354 69.91944885]
[109.82690430 56.02942276]
[115.17809296 42.01639938]
[120.21501160 27.88736916]
[113.69148254 13.74235630]
[119.00090790 -0.51473564]
[132.52621460 -6.64674711]
[137.56314087 -20.77577591]
[142.60005188 -34.90480423]
[147.63696289 -49.03383636]
[152.67388916 -63.16286469]
[155.11961365 -77.96213531]
[154.89628601 -92.96047211]
[154.67295837 -107.95880890]
[142.84313965 -115.03314972]
[136.10710144 -126.93458557]
[136.13119507 -140.50178528]
[142.80220032 -152.19117737]
[154.28472900 -159.00245667]
[154.28472900 -174.00245667]
[154.28472900 -189.00245667]
[154.28472900 -204.00245667]
[154.28472900 -219.00245667]
[143.39018250 -230.13558960]
[143.60385132 -245.34771729]
[154.28472900 -255.66540527]
[154.28472900 -270.66540527]
[154.28472900 -285.66540527]
[154.28472900 -300.66540527]
[139.40068054 -302.70959473]
[124.93362427 -306.76153564]
[111.15309143 -312.74572754]
[98.31578827 -320.55068970]
[86.66087341 -330.03103638]
[76.40547180 -341.01010132]
[67.74063110 -353.28344727]
[60.82778168 -366.62234497]
[55.79569244 -380.77832031]
[52.73811722 -395.48767090]
[51.71200943 -410.47634888]
[52.73649216 -425.46514893]
[55.79247665 -440.17483521]
[60.82303238 -454.33135986]
[67.73444366 -467.67102051]
[76.39795685 -479.94528198]
[86.65216827 -490.92547607]
[98.30605316 -500.40707397]
[111.14250946 -508.21340942]
[124.92240143 -514.19909668]
[139.38900757 -518.25262451]
[154.27284241 -520.29840088]
[169.29661560 -520.29840088]
[184.18045044 -518.25262451]
[198.64706421 -514.19909668]
[212.42695618 -508.21340942]
[225.26341248 -500.40707397]
[236.91729736 -490.92547607]
[247.17150879 -479.94528198]
[255.83502197 -467.67102051]
[262.74642944 -454.33135986]
[267.77697754 -440.17483521]
[270.83297729 -425.46514893]
[271.85745239 -410.47634888]
[270.83135986 -395.48767090]
[267.77377319 -380.77832031]
[262.74166870 -366.62234497]
[255.82882690 -353.28344727]
[247.16398621 -341.01010132]
[236.90858459 -330.03103638]
[225.25367737 -320.55068970]
[212.41636658 -312.74572754]
[198.63583374 -306.76153564]
[184.16877747 -302.70959473]
[169.28472900 -300.66540527]
[169.28472900 -285.66540527]
[169.28472900 -270.66540527]
[169.28472900 -255.66540527]
[179.96560669 -245.34771729]
[180.17929077 -230.13558960]
[169.28472900 -219.00245667]
[169.28472900 -204.00245667]
[169.28472900 -189.00245667]
[169.28472900 -174.00245667]
[169.28472900 -159.00245667]
[182.86761475 -149.78384399]
[188.33398438 -134.12879944]
[183.34252930 -118.14171600]
[169.67129517 -108.18213654]
[169.89462280 -93.18379974]
[170.11795044 -78.18546295]
[176.57270813 -91.72563171]
[186.04212952 -103.35877991]
[197.99064636 -112.42700195]
[211.74253845 -118.41744995]
[226.52006531 -120.99133301]
[241.48747253 -120.00308228]
[255.79829407 -115.50859070]
[268.64318848 -107.76203918]
[279.29568481 -97.20153809]
[287.15335083 -84.42433167]
[291.77182007 -70.15303802]
[292.88986206 -55.19476700]
[290.44424438 -40.39547348]
[284.57333374 -26.59213829]
[275.60906982 -14.56540108]
[264.05850220 -4.99543428]
[250.57484436 1.57653320]
[235.92065430 4.77882576]
[220.92469788 4.43033791]
[206.43507385 0.55077815]
[193.27125549 -6.64044523]
[182.17770386 -16.73663330]
[173.78179932 -29.16679955]
[168.55841064 -43.22795486]
[166.80291748 -58.12594986]
[161.76599121 -43.99691772]
[156.72908020 -29.86788940]
[151.69216919 -15.73886013]
[146.65524292 -1.60983074]
[153.25131226 11.69533539]
[148.34443665 26.09593391]
[134.34403992 32.92428589]
[129.30712891 47.05331421]
[130.47990417 50.37850952]
[130.10035706 54.43695831]
[127.84141541 58.49287033]
[123.71693420 61.69220734]
[118.05414581 75.58223724]
[112.39135742 89.47225952]
[115.10182190 106.02610016]
[101.73955536 116.16641998]
[96.28419495 130.13922119]
[105.76148224 142.14456177]
[107.94275665 157.18246460]
[102.34130096 171.19996643]
[90.55445862 180.46960449]
[75.80965424 182.58062744]
[77.99811554 198.24974060]
[66.16188049 207.29145813]
[60.70652008 221.26426697]
[55.25116348 235.23706055]
[49.79580688 249.20985413]
[52.99426651 267.34411621]
[38.87594986 277.76718140]
[33.62923431 291.81964111]
[28.48727226 305.91079712]
[23.55567932 320.07690430]
[18.72968102 334.27938843]
[13.90368366 348.48184204]
[9.07768631 362.68429565]
[4.25168848 376.88674927]
[-0.57430893 391.08920288]
[-5.40030670 405.29165649]
[-10.22630405 419.49411011]
[2.66145134 427.28640747]
[13.57247353 437.66732788]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 208]
[26 207]
[27 206]
[28 205]
[29 204]
[30 203]
[31 202]
[32 201]
[34 200]
[36 199]
[37 198]
[40 196]
[41 195]
[42 194]
[43 193]
[45 191]
[50 186]
[51 185]
[54 183]
[55 182]
[56 181]
[57 177]
[58 176]
[61 173]
[62 172]
[63 171]
[64 170]
[65 169]
[66 144]
[67 143]
[68 142]
[73 138]
[74 137]
[75 136]
[76 135]
[77 134]
[80 131]
[81 130]
[82 129]
[83 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
